// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const VALUES = 57385
const NEXT = 57386
const VALUE = 57387
const SHARE = 57388
const MODE = 57389
const SQL_NO_CACHE = 57390
const SQL_CACHE = 57391
const JOIN = 57392
const STRAIGHT_JOIN = 57393
const LEFT = 57394
const RIGHT = 57395
const INNER = 57396
const OUTER = 57397
const CROSS = 57398
const NATURAL = 57399
const USE = 57400
const FORCE = 57401
const LOWER_THAN_ON = 57402
const ON = 57403
const USING = 57404
const SUBQUERY_AS_EXPR = 57405
const LOWER_THAN_STRING = 57406
const ID = 57407
const AT_ID = 57408
const AT_AT_ID = 57409
const STRING = 57410
const VALUE_ARG = 57411
const LIST_ARG = 57412
const COMMENT = 57413
const COMMENT_KEYWORD = 57414
const INTEGRAL = 57415
const HEX = 57416
const BIT_LITERAL = 57417
const FLOAT = 57418
const HEXNUM = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const LOWER_THAN_CHARSET = 57423
const CHARSET = 57424
const UNIQUE = 57425
const KEY = 57426
const OR = 57427
const PIPE_CONCAT = 57428
const XOR = 57429
const AND = 57430
const NOT = 57431
const BETWEEN = 57432
const CASE = 57433
const WHEN = 57434
const THEN = 57435
const ELSE = 57436
const END = 57437
const LOWER_THAN_EQ = 57438
const LE = 57439
const GE = 57440
const NE = 57441
const NULL_SAFE_EQUAL = 57442
const IS = 57443
const LIKE = 57444
const REGEXP = 57445
const IN = 57446
const ASSIGNMENT = 57447
const SHIFT_LEFT = 57448
const SHIFT_RIGHT = 57449
const DIV = 57450
const MOD = 57451
const UNARY = 57452
const COLLATE = 57453
const BINARY = 57454
const UNDERSCORE_BINARY = 57455
const INTERVAL = 57456
const BEGIN = 57457
const START = 57458
const TRANSACTION = 57459
const COMMIT = 57460
const ROLLBACK = 57461
const WORK = 57462
const CONSISTENT = 57463
const SNAPSHOT = 57464
const CHAIN = 57465
const NO = 57466
const RELEASE = 57467
const PRIORITY = 57468
const QUICK = 57469
const BIT = 57470
const TINYINT = 57471
const SMALLINT = 57472
const MEDIUMINT = 57473
const INT = 57474
const INTEGER = 57475
const BIGINT = 57476
const INTNUM = 57477
const REAL = 57478
const DOUBLE = 57479
const FLOAT_TYPE = 57480
const DECIMAL = 57481
const NUMERIC = 57482
const DECIMAL_VALUE = 57483
const TIME = 57484
const TIMESTAMP = 57485
const DATETIME = 57486
const YEAR = 57487
const CHAR = 57488
const VARCHAR = 57489
const BOOL = 57490
const CHARACTER = 57491
const VARBINARY = 57492
const NCHAR = 57493
const TEXT = 57494
const TINYTEXT = 57495
const MEDIUMTEXT = 57496
const LONGTEXT = 57497
const BLOB = 57498
const TINYBLOB = 57499
const MEDIUMBLOB = 57500
const LONGBLOB = 57501
const JSON = 57502
const ENUM = 57503
const UUID = 57504
const GEOMETRY = 57505
const POINT = 57506
const LINESTRING = 57507
const POLYGON = 57508
const GEOMETRYCOLLECTION = 57509
const MULTIPOINT = 57510
const MULTILINESTRING = 57511
const MULTIPOLYGON = 57512
const INT1 = 57513
const INT2 = 57514
const INT3 = 57515
const INT4 = 57516
const INT8 = 57517
const SQL_SMALL_RESULT = 57518
const SQL_BIG_RESULT = 57519
const SQL_BUFFER_RESULT = 57520
const LOW_PRIORITY = 57521
const HIGH_PRIORITY = 57522
const DELAYED = 57523
const CREATE = 57524
const ALTER = 57525
const DROP = 57526
const RENAME = 57527
const ANALYZE = 57528
const ADD = 57529
const SCHEMA = 57530
const TABLE = 57531
const INDEX = 57532
const VIEW = 57533
const TO = 57534
const IGNORE = 57535
const IF = 57536
const PRIMARY = 57537
const COLUMN = 57538
const CONSTRAINT = 57539
const SPATIAL = 57540
const FULLTEXT = 57541
const FOREIGN = 57542
const KEY_BLOCK_SIZE = 57543
const SHOW = 57544
const DESCRIBE = 57545
const EXPLAIN = 57546
const DATE = 57547
const ESCAPE = 57548
const REPAIR = 57549
const OPTIMIZE = 57550
const TRUNCATE = 57551
const MAXVALUE = 57552
const PARTITION = 57553
const REORGANIZE = 57554
const LESS = 57555
const THAN = 57556
const PROCEDURE = 57557
const TRIGGER = 57558
const STATUS = 57559
const VARIABLES = 57560
const ROLE = 57561
const PROXY = 57562
const AVG_ROW_LENGTH = 57563
const STORAGE = 57564
const DISK = 57565
const MEMORY = 57566
const CHECKSUM = 57567
const COMPRESSION = 57568
const DATA = 57569
const DIRECTORY = 57570
const DELAY_KEY_WRITE = 57571
const ENCRYPTION = 57572
const ENGINE = 57573
const MAX_ROWS = 57574
const MIN_ROWS = 57575
const PACK_KEYS = 57576
const ROW_FORMAT = 57577
const STATS_AUTO_RECALC = 57578
const STATS_PERSISTENT = 57579
const STATS_SAMPLE_PAGES = 57580
const DYNAMIC = 57581
const COMPRESSED = 57582
const REDUNDANT = 57583
const COMPACT = 57584
const FIXED = 57585
const COLUMN_FORMAT = 57586
const AUTO_RANDOM = 57587
const RESTRICT = 57588
const CASCADE = 57589
const ACTION = 57590
const PARTIAL = 57591
const SIMPLE = 57592
const CHECK = 57593
const ENFORCED = 57594
const RANGE = 57595
const LIST = 57596
const ALGORITHM = 57597
const LINEAR = 57598
const PARTITIONS = 57599
const SUBPARTITION = 57600
const SUBPARTITIONS = 57601
const TYPE = 57602
const ANY = 57603
const SOME = 57604
const EXTERNAL = 57605
const LOCALFILE = 57606
const URL = 57607
const PREPARE = 57608
const DEALLOCATE = 57609
const PROPERTIES = 57610
const PARSER = 57611
const VISIBLE = 57612
const INVISIBLE = 57613
const BTREE = 57614
const HASH = 57615
const RTREE = 57616
const BSI = 57617
const ZONEMAP = 57618
const LEADING = 57619
const BOTH = 57620
const TRAILING = 57621
const UNKNOWN = 57622
const EXPIRE = 57623
const ACCOUNT = 57624
const UNLOCK = 57625
const DAY = 57626
const NEVER = 57627
const PUMP = 57628
const SECOND = 57629
const ASCII = 57630
const COALESCE = 57631
const COLLATION = 57632
const HOUR = 57633
const MICROSECOND = 57634
const MINUTE = 57635
const MONTH = 57636
const QUARTER = 57637
const REPEAT = 57638
const REVERSE = 57639
const ROW_COUNT = 57640
const WEEK = 57641
const REVOKE = 57642
const FUNCTION = 57643
const PRIVILEGES = 57644
const TABLESPACE = 57645
const EXECUTE = 57646
const SUPER = 57647
const GRANT = 57648
const OPTION = 57649
const REFERENCES = 57650
const REPLICATION = 57651
const SLAVE = 57652
const CLIENT = 57653
const USAGE = 57654
const RELOAD = 57655
const FILE = 57656
const TEMPORARY = 57657
const ROUTINE = 57658
const EVENT = 57659
const SHUTDOWN = 57660
const NULLX = 57661
const AUTO_INCREMENT = 57662
const APPROXNUM = 57663
const SIGNED = 57664
const UNSIGNED = 57665
const ZEROFILL = 57666
const ENGINES = 57667
const ADMIN_NAME = 57668
const RANDOM = 57669
const SUSPEND = 57670
const ATTRIBUTE = 57671
const HISTORY = 57672
const REUSE = 57673
const CURRENT = 57674
const OPTIONAL = 57675
const FAILED_LOGIN_ATTEMPTS = 57676
const PASSWORD_LOCK_TIME = 57677
const UNBOUNDED = 57678
const SECONDARY = 57679
const USER = 57680
const IDENTIFIED = 57681
const CIPHER = 57682
const ISSUER = 57683
const X509 = 57684
const SUBJECT = 57685
const SAN = 57686
const REQUIRE = 57687
const SSL = 57688
const NONE = 57689
const PASSWORD = 57690
const MAX_QUERIES_PER_HOUR = 57691
const MAX_UPDATES_PER_HOUR = 57692
const MAX_CONNECTIONS_PER_HOUR = 57693
const MAX_USER_CONNECTIONS = 57694
const FORMAT = 57695
const VERBOSE = 57696
const CONNECTION = 57697
const TRIGGERS = 57698
const PROFILES = 57699
const LOAD = 57700
const INFILE = 57701
const TERMINATED = 57702
const OPTIONALLY = 57703
const ENCLOSED = 57704
const ESCAPED = 57705
const STARTING = 57706
const LINES = 57707
const ROWS = 57708
const IMPORT = 57709
const FROM_JSONLINE = 57710
const DATABASES = 57711
const TABLES = 57712
const EXTENDED = 57713
const FULL = 57714
const PROCESSLIST = 57715
const FIELDS = 57716
const COLUMNS = 57717
const OPEN = 57718
const ERRORS = 57719
const WARNINGS = 57720
const INDEXES = 57721
const SCHEMAS = 57722
const NAMES = 57723
const GLOBAL = 57724
const SESSION = 57725
const ISOLATION = 57726
const LEVEL = 57727
const READ = 57728
const WRITE = 57729
const ONLY = 57730
const REPEATABLE = 57731
const COMMITTED = 57732
const UNCOMMITTED = 57733
const SERIALIZABLE = 57734
const LOCAL = 57735
const EVENTS = 57736
const PLUGINS = 57737
const CURRENT_TIMESTAMP = 57738
const DATABASE = 57739
const CURRENT_TIME = 57740
const LOCALTIME = 57741
const LOCALTIMESTAMP = 57742
const UTC_DATE = 57743
const UTC_TIME = 57744
const UTC_TIMESTAMP = 57745
const REPLACE = 57746
const CONVERT = 57747
const SEPARATOR = 57748
const CURRENT_DATE = 57749
const CURRENT_USER = 57750
const CURRENT_ROLE = 57751
const SECOND_MICROSECOND = 57752
const MINUTE_MICROSECOND = 57753
const MINUTE_SECOND = 57754
const HOUR_MICROSECOND = 57755
const HOUR_SECOND = 57756
const HOUR_MINUTE = 57757
const DAY_MICROSECOND = 57758
const DAY_SECOND = 57759
const DAY_MINUTE = 57760
const DAY_HOUR = 57761
const YEAR_MONTH = 57762
const SQL_TSI_HOUR = 57763
const SQL_TSI_DAY = 57764
const SQL_TSI_WEEK = 57765
const SQL_TSI_MONTH = 57766
const SQL_TSI_QUARTER = 57767
const SQL_TSI_YEAR = 57768
const SQL_TSI_SECOND = 57769
const SQL_TSI_MINUTE = 57770
const RECURSIVE = 57771
const CONFIG = 57772
const DRAINER = 57773
const MATCH = 57774
const AGAINST = 57775
const BOOLEAN = 57776
const LANGUAGE = 57777
const WITH = 57778
const QUERY = 57779
const EXPANSION = 57780
const ADDDATE = 57781
const BIT_AND = 57782
const BIT_OR = 57783
const BIT_XOR = 57784
const CAST = 57785
const COUNT = 57786
const APPROX_COUNT_DISTINCT = 57787
const APPROX_PERCENTILE = 57788
const CURDATE = 57789
const CURTIME = 57790
const DATE_ADD = 57791
const DATE_SUB = 57792
const EXTRACT = 57793
const GROUP_CONCAT = 57794
const MAX = 57795
const MID = 57796
const MIN = 57797
const NOW = 57798
const POSITION = 57799
const SESSION_USER = 57800
const STD = 57801
const STDDEV = 57802
const STDDEV_POP = 57803
const STDDEV_SAMP = 57804
const SUBDATE = 57805
const SUBSTR = 57806
const SUBSTRING = 57807
const SUM = 57808
const SYSDATE = 57809
const SYSTEM_USER = 57810
const TRANSLATE = 57811
const TRIM = 57812
const VARIANCE = 57813
const VAR_POP = 57814
const VAR_SAMP = 57815
const AVG = 57816
const JSON_EXTRACT = 57817
const UNNEST = 57818
const ROW = 57819
const OUTFILE = 57820
const HEADER = 57821
const MAX_FILE_SIZE = 57822
const FORCE_QUOTE = 57823
const UNUSED = 57824
const BINDINGS = 57825

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"FROM_JSONLINE",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7582

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	21, 471,
	-2, 452,
	-1, 72,
	207, 635,
	-2, 679,
	-1, 89,
	42, 322,
	207, 322,
	234, 329,
	235, 329,
	396, 322,
	-2, 350,
	-1, 380,
	21, 472,
	-2, 435,
	-1, 421,
	391, 350,
	392, 350,
	-2, 323,
	-1, 463,
	100, 1365,
	111, 1365,
	130, 1365,
	-2, 1176,
	-1, 493,
	21, 472,
	-2, 435,
	-1, 680,
	64, 1522,
	-2, 1530,
	-1, 688,
	64, 1523,
	-2, 1538,
	-1, 690,
	64, 1519,
	-2, 1540,
	-1, 691,
	64, 1520,
	-2, 1541,
	-1, 696,
	64, 1521,
	-2, 1547,
	-1, 697,
	64, 1524,
	-2, 1548,
	-1, 698,
	64, 1525,
	-2, 1549,
	-1, 699,
	64, 936,
	-2, 1550,
	-1, 700,
	64, 937,
	-2, 1551,
	-1, 701,
	64, 938,
	-2, 1552,
	-1, 703,
	64, 1526,
	-2, 1554,
	-1, 704,
	64, 956,
	-2, 1555,
	-1, 705,
	64, 955,
	-2, 1556,
	-1, 708,
	64, 1527,
	-2, 1559,
	-1, 709,
	64, 1528,
	-2, 1560,
	-1, 715,
	64, 1018,
	-2, 1365,
	-1, 716,
	64, 1027,
	-2, 1390,
	-1, 717,
	64, 1031,
	-2, 1429,
	-1, 718,
	64, 1039,
	-2, 1482,
	-1, 719,
	64, 1042,
	-2, 1491,
	-1, 720,
	64, 1044,
	-2, 1501,
	-1, 721,
	64, 1032,
	-2, 1506,
	-1, 722,
	64, 1040,
	-2, 1510,
	-1, 723,
	64, 1021,
	-2, 1511,
	-1, 884,
	1, 661,
	65, 661,
	501, 661,
	-2, 668,
	-1, 1033,
	21, 471,
	-2, 864,
	-1, 1078,
	130, 1186,
	-2, 1184,
	-1, 1080,
	130, 579,
	-2, 1181,
	-1, 1081,
	130, 580,
	-2, 1182,
	-1, 1293,
	1, 662,
	65, 662,
	501, 662,
	-2, 668,
	-1, 1384,
	64, 1087,
	-2, 1508,
	-1, 1385,
	64, 1088,
	-2, 1509,
	-1, 1554,
	62, 392,
	131, 392,
	-2, 770,
	-1, 1888,
	84, 668,
	126, 668,
	163, 668,
	166, 668,
	-2, 718,
	-1, 1890,
	268, 832,
	-2, 812,
	-1, 1920,
	62, 392,
	131, 392,
	-2, 771,
	-1, 2000,
	84, 668,
	126, 668,
	163, 668,
	166, 668,
	-2, 719,
	-1, 2028,
	268, 832,
	-2, 813,
	-1, 2448,
	65, 691,
	131, 691,
	-2, 668,
	-1, 2453,
	65, 691,
	131, 691,
	-2, 668,
	-1, 2469,
	65, 695,
	131, 695,
	-2, 668,
	-1, 2474,
	65, 696,
	131, 696,
	-2, 668,
}

const yyPrivate = 57344

const yyLast = 22875

var yyAct = [...]int{
	867, 1387, 2455, 2462, 2453, 2452, 2426, 2290, 858, 2066,
	727, 2372, 2414, 746, 2329, 2040, 2356, 1343, 2357, 2262,
	2238, 1987, 1996, 2258, 725, 1277, 2064, 1051, 961, 106,
	1882, 2246, 1388, 648, 329, 335, 599, 335, 764, 1339,
	2093, 2065, 925, 381, 1943, 380, 2049, 109, 1985, 758,
	67, 333, 23, 1913, 461, 339, 854, 2082, 1704, 2029,
	893, 1530, 889, 1557, 861, 1700, 2048, 1946, 1954, 1572,
	946, 105, 587, 576, 1936, 409, 679, 1338, 1958, 1894,
	1705, 321, 918, 67, 1060, 1782, 1790, 1709, 1255, 1639,
	1772, 726, 345, 1757, 1719, 488, 1715, 462, 1698, 1300,
	591, 1069, 1251, 1075, 1061, 106, 1078, 1600, 1472, 1070,
	921, 66, 1458, 736, 939, 1571, 919, 1250, 1325, 899,
	332, 15, 1532, 877, 1527, 330, 6, 3, 331, 5,
	1299, 1252, 469, 31, 852, 869, 857, 728, 1294, 2004,
	1386, 464, 1389, 466, 424, 1401, 671, 490, 468, 943,
	1286, 912, 67, 1283, 23, 322, 900, 901, 1266, 964,
	1262, 911, 843, 967, 1341, 503, 31, 851, 1052, 325,
	873, 876, 907, 453, 1367, 614, 408, 12, 7, 347,
	624, 4, 558, 2439, 2338, 1989, 2466, 102, 1269, 348,
	2100, 1992, 640, 1259, 1881, 600, 864, 1063, 670, 334,
	2057, 2318, 1512, 454, 101, 97, 28, 91, 73, 522,
	467, 1504, 101, 1256, 2308, 626, 100, 1267, 556, 101,
	101, 406, 101, 15, 28, 91, 73, 417, 6, 1529,
	487, 5, 808, 1519, 574, 31, 337, 320, 398, 611,
	101, 612, 28, 91, 73, 805, 596, 798, 101, 797,
	799, 800, 1664, 801, 802, 537, 434, 538, 98, 928,
	929, 903, 342, 2091, 828, 627, 807, 605, 606, 474,
	473, 475, 549, 98, 98, 2345, 98, 1528, 2343, 844,
	101, 848, 28, 91, 73, 540, 603, 2360, 2361, 602,
	605, 606, 860, 554, 98, 530, 1692, 532, 2191, 472,
	96, 555, 98, 2333, 2334, 847, 2194, 85, 2094, 2095,
	2096, 2097, 1693, 2103, 1694, 1883, 862, 1499, 497, 940,
	632, 2261, 1876, 496, 1902, 533, 506, 1263, 54, 633,
	438, 2062, 495, 1730, 98, 1728, 1909, 335, 1720, 106,
	1284, 2079, 2162, 1685, 2046, 2317, 477, 1683, 535, 542,
	551, 543, 839, 1509, 344, 525, 376, 1724, 400, 377,
	2165, 2059, 470, 2370, 492, 494, 466, 493, 397, 396,
	552, 553, 849, 1942, 1941, 336, 67, 67, 468, 545,
	936, 513, 2156, 1535, 1725, 1726, 439, 2444, 526, 391,
	382, 846, 2347, 72, 2463, 99, 2380, 2149, 2342, 1727,
	2260, 2292, 92, 93, 536, 94, 95, 2387, 409, 528,
	2359, 594, 2436, 89, 2320, 2321, 376, 2315, 471, 377,
	2118, 531, 534, 2247, 2248, 2249, 2251, 2250, 1268, 2117,
	379, 378, 563, 394, 2298, 517, 2349, 2350, 1640, 604,
	467, 506, 541, 1541, 527, 2457, 1722, 613, 2464, 636,
	547, 548, 389, 601, 598, 597, 462, 462, 462, 31,
	31, 652, 652, 539, 578, 579, 577, 581, 515, 72,
	90, 99, 2427, 52, 575, 618, 546, 476, 335, 674,
	674, 1543, 1544, 1545, 1546, 395, 590, 845, 465, 89,
	84, 83, 810, 508, 507, 654, 499, 500, 544, 2288,
	2289, 657, 2292, 529, 2140, 1376, 1379, 1380, 390, 2106,
	826, 673, 673, 489, 343, 659, 1377, 650, 650, 321,
	608, 609, 652, 2189, 652, 496, 625, 2144, 1505, 811,
	514, 1257, 1354, 1257, 859, 1257, 511, 1260, 67, 871,
	806, 580, 635, 1690, 1688, 522, 582, 338, 1603, 1605,
	1606, 67, 584, 86, 87, 2471, 2438, 2337, 1988, 2223,
	67, 1593, 835, 1350, 931, 2456, 630, 399, 403, 404,
	405, 1938, 1937, 932, 1713, 1352, 1351, 560, 2259, 652,
	2319, 1349, 884, 615, 930, 615, 409, 62, 441, 890,
	652, 88, 442, 63, 866, 2417, 2348, 870, 880, 562,
	595, 501, 605, 606, 619, 605, 606, 2399, 508, 507,
	1721, 1731, 908, 908, 941, 913, 2163, 1686, 1908, 1723,
	913, 1270, 863, 521, 652, 106, 856, 1258, 1555, 586,
	894, 834, 906, 2058, 31, 1513, 831, 2477, 462, 830,
	652, 2063, 1534, 31, 894, 64, 607, 74, 872, 610,
	837, 646, 647, 634, 65, 74, 885, 955, 853, 643,
	644, 645, 74, 74, 652, 74, 960, 106, 106, 904,
	905, 817, 879, 947, 976, 320, 812, 669, 803, 947,
	947, 557, 658, 74, 895, 840, 965, 910, 833, 832,
	813, 74, 829, 1538, 1539, 1714, 963, 516, 897, 898,
	850, 622, 623, 1609, 435, 1334, 2418, 1537, 980, 962,
	962, 465, 855, 935, 841, 878, 966, 1609, 2470, 1740,
	2142, 2423, 1378, 74, 2141, 435, 891, 2145, 2146, 937,
	628, 629, 1035, 662, 663, 664, 665, 666, 667, 668,
	445, 522, 942, 865, 1556, 1335, 1549, 615, 1710, 1713,
	896, 2476, 1488, 821, 822, 1889, 1872, 959, 1504, 1754,
	878, 902, 887, 1034, 886, 1604, 892, 2112, 2467, 2445,
	1288, 1042, 480, 485, 486, 2224, 2226, 2227, 2228, 2225,
	1033, 914, 2440, 437, 520, 909, 436, 444, 1556, 2430,
	1044, 447, 446, 915, 1648, 916, 952, 953, 2429, 917,
	853, 1658, 1654, 2374, 437, 1653, 1335, 436, 1067, 1067,
	1072, 938, 2367, 1335, 970, 519, 1274, 1609, 1856, 973,
	974, 975, 972, 1036, 1037, 1038, 1039, 1494, 2415, 2416,
	2362, 958, 1080, 957, 2468, 1265, 949, 950, 951, 890,
	956, 825, 467, 652, 1830, 1827, 1828, 1829, 2441, 824,
	1861, 1040, 1860, 1859, 1857, 1265, 2351, 468, 998, 1470,
	1056, 1287, 1081, 1647, 1265, 842, 2339, 1550, 67, 2375,
	1714, 1609, 106, 106, 2313, 1707, 1006, 2312, 2167, 1708,
	1711, 973, 974, 975, 972, 520, 106, 1301, 2311, 1363,
	2310, 2300, 1256, 913, 2185, 2183, 2167, 106, 2181, 2179,
	2172, 1248, 2166, 329, 2076, 1276, 1247, 585, 2074, 1845,
	637, 913, 2376, 1858, 1280, 1282, 1923, 1066, 965, 467,
	1831, 1769, 1363, 1767, 1617, 1273, 1616, 1308, 1297, 1502,
	968, 1712, 2340, 1741, 482, 483, 484, 1695, 1602, 1309,
	2167, 1558, 954, 2167, 1496, 1507, 1490, 1303, 966, 1264,
	818, 31, 1506, 592, 2167, 652, 2167, 2301, 1310, 1311,
	2186, 2184, 1498, 1018, 2180, 2180, 1304, 1059, 2167, 674,
	2077, 106, 1344, 1344, 2075, 1609, 1347, 1493, 1372, 1079,
	1374, 522, 947, 947, 947, 1245, 1609, 1770, 1244, 1768,
	1609, 1745, 1609, 1318, 1073, 1304, 1074, 1275, 1397, 1398,
	1312, 673, 1246, 1345, 1249, 1368, 1369, 1370, 1371, 1680,
	1497, 1361, 1491, 1304, 1682, 1265, 819, 979, 814, 656,
	509, 1314, 1271, 1316, 1295, 491, 1353, 1394, 1364, 2451,
	1862, 1863, 1391, 1390, 639, 2412, 2403, 1056, 1346, 1289,
	1436, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1366, 1307, 1482, 1467, 1468, 1315, 1381,
	1313, 2400, 1319, 902, 1317, 1681, 641, 1321, 1851, 1320,
	1254, 1531, 2032, 2302, 2197, 1755, 1474, 642, 1477, 1465,
	1484, 1016, 1026, 1027, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1018, 1805, 2042, 1463, 1464, 1462, 616, 1689, 1357,
	1358, 1359, 1495, 443, 1356, 498, 2035, 973, 974, 975,
	972, 638, 2030, 1473, 401, 1365, 1853, 2044, 2045, 1396,
	1487, 1253, 1466, 2031, 1026, 1027, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1018, 1525, 1392, 1393, 1473, 1395, 1645,
	975, 972, 1460, 875, 1431, 1432, 1433, 1434, 1435, 972,
	2152, 1441, 1442, 1443, 1444, 2151, 1445, 2354, 2036, 1017,
	1016, 1026, 1027, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1018, 1021, 1022, 1023, 1024, 1025, 1018, 1898, 1656, 973,
	974, 975, 972, 1893, 2175, 2176, 1476, 1478, 1479, 1793,
	1475, 2135, 617, 2173, 2174, 1483, 2450, 2432, 2397, 448,
	1485, 2381, 2276, 1980, 2273, 1626, 440, 1813, 1817, 1819,
	1821, 1823, 1824, 1826, 2234, 1830, 1827, 1828, 1829, 2272,
	1399, 1808, 1809, 1810, 1811, 1791, 1792, 1814, 1840, 1794,
	1400, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1806, 1812, 2435, 2043, 1979, 1706, 1500, 2240, 2233,
	1816, 1818, 1820, 1822, 1825, 1625, 1650, 652, 2218, 652,
	2217, 652, 973, 974, 975, 972, 496, 973, 974, 975,
	972, 2038, 2216, 2265, 2213, 1514, 1522, 973, 974, 975,
	972, 2207, 2232, 2434, 1807, 2230, 2220, 2060, 652, 2187,
	2204, 2203, 1613, 2037, 2039, 973, 974, 975, 972, 1554,
	973, 974, 975, 972, 1906, 1560, 1520, 1521, 2101, 870,
	2087, 973, 974, 975, 972, 1510, 2469, 2231, 2086, 1568,
	2229, 2219, 2061, 496, 106, 106, 106, 106, 973, 974,
	975, 972, 1573, 2442, 2085, 496, 106, 1588, 2081, 1907,
	2080, 1552, 1905, 1729, 1573, 973, 974, 975, 972, 496,
	1548, 1676, 67, 1524, 23, 652, 815, 2046, 1592, 1716,
	881, 882, 883, 106, 106, 2458, 2446, 1278, 1279, 2033,
	1563, 376, 2424, 1564, 377, 2377, 2369, 2353, 1511, 2239,
	1589, 1503, 1997, 2335, 2296, 1501, 2295, 2283, 1344, 2271,
	2221, 1508, 2214, 853, 2210, 2209, 2208, 1614, 2164, 1561,
	2137, 1783, 1784, 2102, 2098, 1598, 1599, 2324, 1562, 2083,
	1995, 1540, 1523, 1993, 1932, 1565, 1931, 1566, 973, 974,
	975, 972, 1610, 15, 878, 1611, 1612, 1916, 6, 1553,
	1559, 5, 1547, 1295, 1904, 31, 1903, 1567, 1900, 1878,
	1574, 1575, 1576, 1577, 1570, 1569, 1587, 1869, 2323, 1718,
	1586, 1687, 1585, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1018, 1596, 1516, 1634, 1620, 1621, 1622, 1623, 1624, 1486,
	1628, 1597, 1594, 1272, 1629, 1630, 1631, 1632, 983, 984,
	985, 986, 987, 988, 989, 981, 772, 771, 2465, 1637,
	1638, 1014, 1067, 1013, 1668, 1067, 1607, 1012, 1671, 816,
	1733, 2161, 874, 1642, 2303, 652, 1646, 2088, 2270, 2269,
	2268, 1033, 2267, 1815, 2182, 2178, 1674, 101, 1657, 2177,
	91, 73, 947, 973, 974, 975, 972, 496, 947, 973,
	974, 975, 972, 1983, 1981, 1978, 1703, 1970, 1935, 1917,
	67, 1888, 1665, 106, 1871, 1966, 1675, 1771, 1746, 1655,
	1652, 1651, 496, 1649, 1633, 1636, 106, 1301, 1618, 1744,
	1663, 1703, 1615, 1608, 1965, 1590, 1670, 973, 974, 975,
	972, 98, 2411, 467, 1481, 1635, 1460, 1667, 1480, 101,
	1644, 384, 385, 386, 387, 1734, 973, 974, 975, 972,
	660, 1964, 2405, 1660, 383, 1659, 1669, 1868, 1679, 2388,
	1684, 1666, 1672, 1775, 2385, 1673, 1850, 1678, 2383, 999,
	1735, 1736, 1737, 973, 974, 975, 972, 2275, 2256, 973,
	974, 975, 972, 1747, 2244, 2241, 1748, 1749, 973, 974,
	975, 972, 1753, 98, 2236, 2198, 1945, 2159, 1742, 2393,
	661, 2158, 1777, 2157, 2154, 2148, 2133, 1765, 1739, 652,
	1738, 1844, 1832, 588, 1955, 652, 1743, 1947, 1959, 1838,
	1839, 1766, 1843, 1962, 1952, 1752, 1751, 1951, 1750, 1929,
	1762, 1911, 1899, 973, 974, 975, 972, 1842, 1852, 1461,
	98, 1867, 1864, 1865, 973, 974, 975, 972, 1866, 106,
	1841, 106, 1551, 1526, 1489, 1355, 1775, 1837, 106, 973,
	974, 975, 972, 1348, 1302, 650, 1058, 1892, 1057, 1055,
	1054, 650, 973, 974, 975, 972, 1053, 1050, 1849, 973,
	974, 975, 972, 1049, 1047, 1046, 1846, 1045, 2391, 1836,
	1043, 1877, 1848, 1879, 1855, 1835, 652, 652, 1015, 1011,
	1887, 106, 1920, 1010, 1009, 1008, 67, 1007, 1886, 1873,
	1870, 973, 974, 975, 972, 496, 1834, 973, 974, 975,
	972, 1005, 1004, 1003, 1573, 1002, 1001, 1000, 1875, 1912,
	1874, 1764, 997, 996, 995, 994, 1934, 993, 973, 974,
	975, 972, 992, 1896, 991, 1891, 990, 1344, 947, 1890,
	1897, 1928, 650, 1914, 1930, 838, 1895, 1925, 1895, 466,
	809, 524, 2358, 1921, 2155, 1833, 1933, 1306, 1922, 1780,
	1291, 1924, 1758, 1759, 512, 1761, 1542, 1918, 1847, 1362,
	523, 1763, 1579, 1919, 1926, 1578, 1927, 973, 974, 975,
	972, 973, 974, 975, 972, 2449, 1296, 1492, 1949, 1950,
	1017, 1016, 1026, 1027, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1018, 1779, 1953, 1278, 1279, 1957, 1517, 1778, 1939,
	1948, 1327, 1330, 1331, 1332, 1328, 1582, 1329, 1333, 1422,
	1515, 1583, 1697, 1967, 973, 974, 975, 972, 559, 1956,
	973, 974, 975, 972, 1580, 1584, 1969, 1331, 1332, 1581,
	496, 2001, 1469, 1285, 2050, 2052, 518, 2050, 2050, 1703,
	2104, 1971, 1696, 1337, 1973, 947, 1975, 1960, 888, 1963,
	1391, 1390, 496, 53, 973, 974, 975, 972, 571, 572,
	569, 570, 567, 568, 1968, 1972, 565, 566, 1990, 1974,
	890, 2326, 2056, 30, 29, 621, 620, 1976, 1977, 550,
	2406, 2051, 1243, 1984, 589, 317, 561, 1322, 2280, 2047,
	2278, 2201, 2199, 2196, 2195, 2026, 2193, 1994, 1885, 1884,
	1998, 1774, 2072, 2053, 2054, 318, 319, 1327, 1330, 1331,
	1332, 1328, 2055, 1329, 1333, 564, 383, 2433, 1773, 2070,
	2071, 1601, 2069, 894, 1922, 384, 385, 386, 387, 2395,
	2394, 2394, 2073, 1677, 933, 1619, 510, 2395, 383, 2150,
	1336, 593, 36, 2108, 1, 1261, 1901, 1732, 1418, 1717,
	2084, 1415, 583, 2089, 402, 1417, 1414, 1416, 1420, 1421,
	1437, 573, 823, 1419, 1017, 1016, 1026, 1027, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1018, 479, 652, 505, 820,
	504, 502, 1471, 1402, 759, 1062, 1068, 106, 2237, 2325,
	2371, 2274, 2328, 836, 745, 2188, 2052, 2136, 1691, 2111,
	2090, 2190, 2092, 1518, 2109, 2110, 1986, 2113, 2114, 2115,
	2116, 1661, 2409, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2047, 2134, 2153,
	2138, 1662, 413, 1914, 769, 762, 1048, 804, 481, 761,
	2169, 1910, 2160, 1536, 388, 478, 414, 2078, 1880, 1940,
	2202, 2168, 1961, 1944, 2171, 2461, 466, 2448, 2170, 1017,
	1016, 1026, 1027, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1018, 2425, 2235, 2192, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1425, 1426, 1427, 1428, 1429,
	1430, 1423, 1424, 2404, 67, 496, 2200, 2291, 496, 496,
	496, 2215, 2443, 2341, 2386, 2379, 2287, 2105, 496, 1344,
	349, 934, 631, 2205, 2206, 451, 2407, 2257, 350, 2211,
	2212, 2245, 1305, 2316, 2253, 2254, 2255, 2243, 2252, 2242,
	392, 1290, 393, 1293, 2264, 1292, 1382, 982, 1459, 2285,
	1041, 677, 1643, 735, 729, 1533, 652, 652, 2266, 2263,
	2041, 1595, 35, 34, 33, 971, 2279, 1076, 2281, 2282,
	760, 2277, 2286, 1017, 1016, 1026, 1027, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1018, 108, 1077, 106, 2284, 2293,
	2294, 2099, 2330, 744, 743, 496, 742, 741, 740, 1326,
	1324, 1323, 923, 922, 969, 2355, 2306, 496, 2307, 1991,
	2147, 2222, 650, 650, 2143, 2299, 2139, 2297, 2000, 1999,
	2305, 2309, 2027, 2028, 2304, 2034, 2332, 1789, 1785, 962,
	1787, 1788, 1786, 2314, 1854, 1781, 1701, 1702, 1699, 2331,
	1760, 2322, 1756, 1064, 1071, 868, 924, 103, 920, 2068,
	11, 10, 827, 2336, 9, 14, 22, 1982, 21, 20,
	2344, 2346, 19, 61, 60, 59, 58, 18, 8, 57,
	56, 1029, 2352, 1032, 55, 17, 16, 50, 51, 46,
	2363, 2364, 2365, 2366, 45, 44, 412, 2373, 1030, 1031,
	1028, 2378, 1017, 1016, 1026, 1027, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1018, 1017, 1016, 1026, 1027, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1018, 43, 42, 2382, 41,
	2384, 40, 49, 48, 2392, 2390, 2332, 2402, 2389, 2368,
	47, 39, 38, 2396, 496, 37, 496, 71, 2398, 2331,
	2401, 70, 2408, 859, 2410, 859, 1017, 1016, 1026, 1027,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1018, 2419, 69,
	2373, 2420, 496, 2413, 2428, 68, 24, 25, 26, 27,
	2431, 859, 81, 80, 2437, 82, 78, 76, 79, 77,
	75, 32, 13, 2422, 2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2447, 0,
	0, 0, 0, 0, 0, 0, 2460, 0, 0, 2459,
	0, 0, 0, 0, 0, 0, 0, 2472, 0, 0,
	0, 0, 2473, 2475, 2474, 1189, 1231, 2460, 0, 1178,
	0, 1138, 1191, 1112, 1127, 1199, 1128, 1129, 1164, 1091,
	1147, 233, 1125, 0, 0, 0, 0, 0, 0, 1181,
	1083, 1115, 1116, 1085, 1122, 1086, 1113, 1140, 178, 1111,
	1150, 203, 1197, 0, 0, 263, 217, 0, 0, 1143,
	1183, 1145, 1169, 1137, 1165, 1099, 1158, 1192, 1126, 0,
	1162, 1193, 0, 0, 0, 0, 881, 882, 883, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 1161,
	1187, 1124, 0, 163, 1190, 1144, 1163, 0, 0, 1084,
	1159, 0, 1089, 1092, 1198, 1185, 1119, 1120, 0, 0,
	0, 0, 0, 0, 0, 0, 1141, 1146, 1166, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1117,
	0, 1155, 0, 0, 0, 1094, 1090, 0, 1139, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 1230, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 1093, 291, 156, 1225, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 1209, 1210, 1211,
	1212, 1213, 1221, 1222, 0, 1226, 1227, 1228, 1098, 0,
	1118, 1167, 0, 1082, 1176, 1184, 1136, 293, 1186, 1133,
	1132, 1216, 0, 1215, 267, 1217, 1218, 202, 1182, 1114,
	1123, 309, 1121, 253, 235, 1188, 1154, 1229, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 1214, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 1223, 0, 1224, 305, 185, 146, 288,
	0, 231, 0, 1179, 1087, 1097, 1095, 1130, 1156, 1157,
	227, 304, 1171, 1175, 1172, 1200, 256, 0, 0, 0,
	0, 0, 196, 237, 1173, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1088, 0, 264, 286,
	298, 315, 1232, 1233, 1234, 1235, 0, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 289, 1131, 1105, 1142, 297, 1108,
	1106, 1170, 1107, 1160, 313, 221, 222, 223, 224, 188,
	0, 165, 316, 246, 1151, 1135, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1152, 0, 1110, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 1177, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	1641, 0, 1104, 1109, 1103, 1148, 1149, 1194, 1195, 1196,
	1168, 1096, 1180, 1100, 1102, 1101, 0, 0, 0, 0,
	0, 0, 1017, 1016, 1026, 1027, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1018, 0, 1174, 0, 766, 1153, 147,
	0, 204, 1201, 245, 183, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 0, 0, 178, 0, 0, 203, 0, 0,
	0, 263, 217, 0, 0, 0, 0, 781, 787, 0,
	0, 0, 0, 1219, 1220, 301, 302, 303, 287, 730,
	0, 0, 678, 772, 771, 747, 756, 0, 0, 160,
	748, 0, 755, 749, 753, 752, 750, 751, 0, 715,
	0, 0, 0, 0, 0, 0, 675, 734, 0, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 732, 0, 0, 0, 0, 767, 0, 733,
	0, 0, 768, 0, 757, 0, 0, 152, 268, 283,
	161, 259, 296, 166, 266, 157, 232, 255, 0, 0,
	154, 281, 265, 214, 197, 198, 153, 0, 250, 176,
	189, 173, 230, 754, 718, 722, 172, 720, 765, 291,
	156, 0, 290, 229, 277, 282, 215, 209, 155, 279,
	213, 208, 201, 180, 792, 193, 241, 207, 242, 194,
	219, 218, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	763, 0, 0, 293, 0, 0, 780, 0, 0, 0,
	267, 0, 0, 202, 0, 0, 0, 723, 0, 253,
	235, 790, 676, 0, 251, 205, 278, 243, 284, 269,
	292, 247, 244, 148, 270, 175, 216, 158, 159, 171,
	177, 179, 181, 182, 225, 226, 238, 258, 271, 272,
	273, 174, 167, 252, 168, 191, 169, 149, 260, 170,
	150, 239, 276, 0, 187, 248, 212, 151, 211, 240,
	275, 274, 300, 306, 307, 311, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 1439,
	1438, 1440, 305, 185, 146, 288, 778, 231, 0, 789,
	774, 775, 776, 779, 782, 783, 717, 721, 784, 786,
	788, 791, 256, 0, 0, 0, 0, 0, 196, 237,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 286, 298, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	724, 221, 222, 223, 224, 716, 0, 165, 316, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 184, 190, 0, 192, 164, 236, 186,
	295, 199, 0, 228, 195, 261, 200, 206, 249, 294,
	234, 254, 162, 285, 262, 210, 0, 0, 798, 777,
	797, 799, 800, 796, 801, 802, 785, 739, 0, 794,
	793, 795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 0, 204, 0, 245,
	183, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 125, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 770, 773, 0,
	0, 301, 302, 303, 287, 101, 0, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 0, 0, 178, 0, 0, 203, 0, 0,
	0, 263, 217, 0, 0, 0, 0, 781, 787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 678, 772, 771, 747, 756, 0, 0, 160,
	748, 0, 755, 749, 753, 752, 750, 751, 0, 715,
	0, 0, 0, 0, 0, 0, 675, 734, 0, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 732, 0, 0, 0, 0, 767, 0, 733,
	0, 0, 768, 0, 757, 0, 0, 152, 268, 283,
	161, 259, 296, 166, 266, 157, 232, 255, 0, 0,
	154, 281, 265, 214, 197, 198, 153, 0, 250, 176,
	189, 173, 230, 754, 718, 722, 172, 720, 765, 291,
	156, 0, 290, 229, 277, 282, 215, 209, 155, 279,
	213, 208, 201, 180, 792, 193, 241, 207, 242, 194,
	219, 218, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	763, 0, 0, 293, 0, 0, 780, 0, 0, 0,
	267, 0, 0, 202, 0, 0, 0, 723, 0, 253,
	235, 790, 676, 0, 251, 205, 278, 243, 284, 269,
	292, 247, 244, 148, 270, 175, 216, 158, 159, 171,
	177, 179, 181, 182, 225, 226, 238, 258, 271, 272,
	273, 174, 167, 252, 168, 191, 169, 149, 260, 170,
	150, 239, 276, 0, 187, 248, 212, 151, 211, 240,
	275, 274, 300, 306, 307, 311, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 305, 185, 146, 288, 778, 231, 0, 789,
	774, 775, 776, 779, 782, 783, 717, 721, 784, 786,
	788, 791, 256, 0, 0, 0, 0, 0, 196, 237,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 286, 298, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	724, 221, 222, 223, 224, 716, 0, 165, 316, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 184, 190, 0, 192, 164, 236, 186,
	295, 199, 0, 228, 195, 261, 200, 206, 249, 294,
	234, 254, 162, 285, 262, 210, 0, 0, 798, 777,
	797, 799, 800, 796, 801, 802, 785, 739, 0, 794,
	793, 795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 0, 204, 74, 245,
	183, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 125, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 770, 773, 766,
	0, 301, 302, 303, 287, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 178, 948, 0, 203,
	0, 0, 0, 263, 217, 0, 0, 0, 0, 781,
	787, 0, 0, 0, 0, 0, 0, 0, 944, 0,
	0, 730, 0, 0, 678, 772, 771, 747, 756, 0,
	0, 160, 748, 0, 755, 749, 753, 752, 750, 751,
	0, 715, 0, 0, 0, 0, 0, 0, 675, 734,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 732, 0, 0, 0, 0, 767,
	0, 733, 0, 0, 945, 0, 757, 0, 0, 152,
	268, 283, 161, 259, 296, 166, 266, 157, 232, 255,
	0, 0, 154, 281, 265, 214, 197, 198, 153, 0,
	250, 176, 189, 173, 230, 754, 718, 722, 172, 720,
	765, 291, 156, 0, 290, 229, 277, 282, 215, 209,
	155, 279, 213, 208, 201, 180, 792, 193, 241, 207,
	242, 194, 219, 218, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 763, 0, 0, 293, 0, 0, 780, 0,
	0, 0, 267, 0, 0, 202, 0, 0, 0, 723,
	0, 253, 235, 790, 676, 0, 251, 205, 278, 243,
	284, 269, 292, 247, 244, 148, 270, 175, 216, 158,
	159, 171, 177, 179, 181, 182, 225, 226, 238, 258,
	271, 272, 273, 174, 167, 252, 168, 191, 169, 149,
	260, 170, 150, 239, 276, 0, 187, 248, 212, 151,
	211, 240, 275, 274, 300, 306, 307, 311, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 305, 185, 146, 288, 778, 231,
	0, 789, 774, 775, 776, 779, 782, 783, 717, 721,
	784, 786, 788, 791, 256, 0, 0, 0, 0, 0,
	196, 237, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 286, 298, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 297, 0, 0, 0,
	0, 0, 724, 221, 222, 223, 224, 716, 0, 165,
	316, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 184, 190, 0, 192, 164,
	236, 186, 295, 199, 0, 228, 195, 261, 200, 206,
	249, 294, 234, 254, 162, 285, 262, 210, 0, 0,
	798, 777, 797, 799, 800, 796, 801, 802, 785, 739,
	0, 794, 793, 795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 204,
	0, 245, 183, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 125, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 770,
	773, 766, 0, 301, 302, 303, 287, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 737, 0, 0, 0, 178, 2421,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 781, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 730, 0, 0, 678, 772, 771, 747,
	756, 0, 0, 160, 748, 0, 755, 749, 753, 752,
	750, 751, 0, 715, 0, 0, 0, 0, 0, 0,
	675, 734, 0, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 732, 0, 0, 0,
	0, 767, 0, 733, 0, 0, 768, 0, 757, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 754, 718, 722,
	172, 720, 765, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 792, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 763, 0, 0, 293, 0, 0,
	780, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 723, 0, 253, 235, 790, 676, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	778, 231, 0, 789, 774, 775, 776, 779, 782, 783,
	717, 721, 784, 786, 788, 791, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 719, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 724, 221, 222, 223, 224, 716,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 798, 777, 797, 799, 800, 796, 801, 802,
	785, 739, 0, 794, 793, 795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 204, 0, 245, 183, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	125, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 770, 773, 766, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 0, 0, 0,
	178, 948, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 781, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 678, 772,
	771, 747, 756, 0, 0, 160, 748, 0, 755, 749,
	753, 752, 750, 751, 0, 715, 0, 0, 0, 0,
	0, 0, 675, 734, 0, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 731, 732, 0,
	0, 0, 0, 767, 0, 733, 0, 0, 768, 0,
	757, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 754,
	718, 722, 172, 720, 765, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	792, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 763, 0, 0, 293,
	0, 0, 780, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 723, 0, 253, 235, 790, 676, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 778, 231, 0, 789, 774, 775, 776, 779,
	782, 783, 717, 721, 784, 786, 788, 791, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 724, 221, 222, 223,
	224, 716, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 798, 777, 797, 799, 800, 796,
	801, 802, 785, 739, 0, 794, 793, 795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 125, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 770, 773, 0, 0, 301, 302, 303,
	287, 766, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 737, 0, 0, 0, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 781, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 730, 0, 0, 678, 772, 771, 747,
	756, 0, 0, 160, 748, 0, 755, 749, 753, 752,
	750, 751, 0, 715, 0, 0, 0, 0, 0, 0,
	675, 734, 0, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 732, 0, 0, 0,
	0, 767, 0, 733, 0, 0, 768, 0, 757, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 754, 718, 722,
	172, 720, 765, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 792, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 763, 0, 0, 293, 0, 0,
	780, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 723, 0, 253, 235, 790, 676, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	778, 231, 0, 789, 774, 775, 776, 779, 782, 783,
	717, 721, 784, 786, 788, 791, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 719, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 724, 221, 222, 223, 224, 716,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 798, 777, 797, 799, 800, 796, 801, 802,
	785, 739, 0, 794, 793, 795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 204, 0, 245, 183, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	125, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 770, 773, 766, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 781, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 678, 772,
	771, 747, 756, 0, 0, 160, 748, 0, 755, 749,
	753, 752, 750, 751, 0, 715, 0, 0, 0, 0,
	0, 0, 675, 734, 0, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 731, 732, 672,
	0, 0, 0, 767, 0, 733, 0, 0, 768, 0,
	757, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 754,
	718, 722, 172, 720, 765, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	792, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 763, 0, 0, 293,
	0, 0, 780, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 723, 0, 253, 235, 790, 676, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 778, 231, 0, 789, 774, 775, 776, 779,
	782, 783, 717, 721, 784, 786, 788, 791, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 724, 221, 222, 223,
	224, 716, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 798, 777, 797, 799, 800, 796,
	801, 802, 785, 739, 0, 794, 793, 795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 125, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 770, 773, 766, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 0, 178, 0, 0, 203, 0, 0, 0, 263,
	217, 0, 0, 0, 0, 781, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	678, 772, 771, 747, 756, 0, 0, 160, 748, 0,
	755, 749, 753, 752, 750, 751, 0, 715, 0, 0,
	0, 0, 0, 0, 675, 734, 0, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 731,
	732, 0, 0, 0, 0, 767, 0, 733, 0, 0,
	768, 0, 757, 0, 0, 152, 268, 283, 161, 259,
	296, 166, 266, 157, 232, 255, 0, 0, 154, 281,
	265, 214, 197, 198, 153, 0, 250, 176, 189, 173,
	230, 754, 718, 722, 172, 720, 765, 291, 156, 0,
	290, 229, 277, 282, 215, 209, 155, 279, 213, 208,
	201, 180, 792, 193, 241, 207, 242, 194, 219, 218,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 763, 0,
	0, 293, 0, 0, 780, 0, 0, 0, 267, 0,
	0, 202, 0, 0, 0, 723, 0, 253, 235, 790,
	676, 0, 251, 205, 278, 243, 284, 269, 292, 247,
	244, 148, 270, 175, 216, 158, 159, 171, 177, 179,
	181, 182, 225, 226, 238, 258, 271, 272, 273, 174,
	167, 252, 168, 191, 169, 149, 260, 170, 150, 239,
	276, 0, 187, 248, 212, 151, 211, 240, 275, 274,
	300, 306, 307, 311, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	305, 185, 146, 288, 778, 231, 0, 789, 774, 775,
	776, 779, 782, 783, 717, 721, 784, 786, 788, 791,
	256, 0, 0, 0, 0, 0, 196, 237, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 286, 298, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 297, 0, 0, 0, 0, 0, 724, 221,
	222, 223, 224, 716, 0, 165, 316, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 184, 190, 0, 192, 164, 236, 186, 295, 199,
	0, 228, 195, 261, 200, 206, 249, 294, 234, 254,
	162, 285, 262, 210, 0, 0, 798, 777, 797, 799,
	800, 796, 801, 802, 785, 739, 0, 794, 793, 795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 0, 204, 0, 245, 183, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 125, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 770, 773, 766, 0, 301,
	302, 303, 287, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 1383, 0, 0, 0,
	737, 0, 0, 0, 178, 0, 0, 203, 0, 0,
	0, 263, 217, 0, 0, 0, 0, 781, 787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 678, 772, 771, 747, 756, 0, 0, 160,
	748, 0, 755, 749, 753, 752, 750, 751, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 734, 0, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 732, 0, 0, 0, 0, 767, 0, 733,
	0, 0, 768, 0, 757, 0, 0, 152, 268, 283,
	161, 259, 296, 166, 266, 157, 232, 255, 0, 0,
	154, 281, 265, 214, 197, 198, 153, 0, 250, 176,
	189, 173, 230, 754, 718, 722, 172, 720, 765, 291,
	156, 0, 290, 229, 277, 282, 215, 209, 155, 279,
	213, 208, 201, 180, 792, 193, 241, 207, 242, 194,
	219, 218, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	763, 0, 0, 293, 0, 0, 780, 0, 0, 0,
	267, 0, 0, 202, 0, 0, 0, 723, 0, 253,
	235, 790, 0, 0, 251, 205, 278, 243, 284, 269,
	292, 247, 244, 148, 270, 175, 216, 158, 159, 171,
	177, 179, 181, 182, 225, 226, 238, 258, 271, 272,
	273, 174, 167, 252, 168, 191, 169, 149, 260, 170,
	150, 239, 276, 0, 187, 248, 212, 151, 211, 240,
	275, 274, 300, 1384, 1385, 311, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 305, 185, 146, 288, 778, 231, 0, 789,
	774, 775, 776, 779, 782, 783, 717, 721, 784, 786,
	788, 791, 256, 0, 0, 0, 0, 0, 196, 237,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 286, 298, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	724, 221, 222, 223, 224, 716, 0, 165, 316, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 184, 190, 0, 192, 164, 236, 186,
	295, 199, 0, 228, 195, 261, 200, 206, 249, 294,
	234, 254, 162, 285, 262, 210, 0, 0, 798, 777,
	797, 799, 800, 796, 801, 802, 785, 739, 0, 794,
	793, 795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 0, 204, 0, 245,
	183, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 125, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 770, 773, 766,
	0, 301, 302, 303, 287, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 178, 0, 0, 203,
	0, 0, 0, 263, 217, 0, 0, 0, 0, 781,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 678, 772, 771, 747, 756, 0,
	0, 160, 748, 0, 755, 749, 753, 752, 750, 751,
	0, 715, 0, 0, 0, 0, 0, 0, 675, 734,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 732, 0, 0, 0, 0, 767,
	0, 733, 0, 0, 768, 0, 757, 0, 0, 152,
	268, 283, 161, 259, 296, 166, 266, 157, 232, 255,
	0, 0, 154, 281, 265, 214, 197, 198, 153, 0,
	250, 176, 189, 173, 230, 754, 718, 722, 172, 720,
	765, 291, 156, 0, 290, 229, 277, 282, 215, 209,
	155, 279, 213, 208, 201, 180, 792, 193, 241, 207,
	242, 194, 219, 218, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 763, 0, 0, 293, 0, 0, 780, 0,
	0, 0, 267, 0, 0, 202, 0, 0, 0, 723,
	0, 253, 235, 790, 676, 0, 251, 205, 278, 243,
	284, 269, 292, 247, 244, 148, 270, 175, 216, 158,
	159, 171, 177, 179, 181, 182, 225, 226, 238, 258,
	271, 272, 273, 174, 167, 252, 168, 191, 169, 149,
	260, 170, 150, 239, 276, 0, 187, 248, 212, 151,
	211, 240, 275, 274, 300, 306, 307, 311, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 305, 185, 146, 288, 778, 231,
	0, 789, 774, 775, 776, 779, 782, 783, 717, 721,
	784, 786, 788, 791, 256, 0, 0, 0, 0, 0,
	196, 237, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 286, 298, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 297, 0, 0, 0,
	0, 0, 724, 221, 222, 223, 224, 716, 0, 165,
	316, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 184, 190, 0, 192, 164,
	236, 186, 295, 199, 0, 228, 195, 261, 200, 206,
	249, 294, 234, 254, 162, 285, 262, 210, 0, 0,
	798, 777, 797, 799, 800, 796, 801, 802, 785, 739,
	0, 794, 793, 795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 204,
	0, 245, 183, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 125, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 770,
	773, 766, 0, 301, 302, 303, 287, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 737, 0, 0, 0, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 781, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 730, 0, 0, 678, 772, 771, 747,
	756, 0, 0, 160, 748, 0, 755, 749, 753, 752,
	750, 751, 0, 715, 0, 0, 0, 0, 0, 0,
	0, 734, 0, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 732, 0, 0, 0,
	0, 767, 0, 733, 0, 0, 768, 0, 757, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 754, 718, 722,
	172, 720, 765, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 792, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 763, 0, 0, 293, 0, 0,
	780, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 723, 0, 253, 235, 790, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	778, 231, 0, 789, 774, 775, 776, 779, 782, 783,
	717, 721, 784, 786, 788, 791, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 719, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 724, 221, 222, 223, 224, 716,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 798, 777, 797, 799, 800, 796, 801, 802,
	785, 739, 0, 794, 793, 795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 204, 0, 245, 183, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	125, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 770, 773, 0, 0, 301, 302, 303, 287, 101,
	0, 28, 91, 73, 0, 0, 0, 0, 0, 0,
	0, 233, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 0, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 309, 0, 253, 235, 0, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 304, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 313, 221, 222, 223, 224, 324,
	326, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 204, 74, 245, 183, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 233, 0, 0, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 1710, 1713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 0, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 293, 0, 0,
	0, 1707, 0, 1706, 267, 1708, 1711, 202, 0, 0,
	0, 309, 0, 253, 235, 0, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 1712, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 304, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 313, 221, 222, 223, 224, 188,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 204, 0, 245, 183, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 233, 0, 0, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 977, 0, 0, 0, 0, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 978,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 973, 974, 975, 972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 0, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 309, 0, 253, 235, 0, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 304, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 313, 221, 222, 223, 224, 188,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 204, 0, 245, 183, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 233, 0, 0, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 450,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 458, 459, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 437, 291, 156, 436, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 309, 0, 253, 235, 0, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 449, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 304, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 452, 221, 222, 223, 224, 188,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 460, 455, 456,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 204, 0, 245, 183, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 101, 0, 0, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 98, 1065, 0, 107, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 74, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 458,
	459, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 437, 291, 156, 436, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 460,
	455, 456, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 457, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 655, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 653, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 649, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 653, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2327, 0, 107, 772,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 653, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 653, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1915, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 926, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 927, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 1360, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 653, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 772,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 653, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 1591, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 233, 0, 0, 0, 301, 302, 303,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 203, 0, 0, 0, 263, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 1373, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 268, 283, 161, 259, 296, 166,
	266, 157, 232, 255, 0, 0, 154, 281, 265, 214,
	197, 198, 153, 0, 250, 176, 189, 173, 230, 0,
	280, 308, 172, 299, 0, 291, 156, 0, 290, 229,
	277, 282, 215, 209, 155, 279, 213, 208, 201, 180,
	0, 193, 241, 207, 242, 194, 219, 218, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 202,
	0, 0, 0, 309, 0, 253, 235, 0, 0, 0,
	251, 205, 278, 243, 284, 269, 292, 247, 244, 148,
	270, 175, 216, 158, 159, 171, 177, 179, 181, 182,
	225, 226, 238, 258, 271, 272, 273, 174, 167, 252,
	168, 191, 169, 149, 260, 170, 150, 239, 276, 0,
	187, 248, 212, 151, 211, 240, 275, 274, 300, 306,
	307, 311, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 305, 185,
	146, 288, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 304, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 196, 237, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 286, 298, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 313, 221, 222, 223,
	224, 188, 0, 165, 316, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 184,
	190, 0, 192, 164, 236, 186, 295, 199, 0, 228,
	195, 261, 200, 206, 249, 294, 234, 254, 162, 285,
	262, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 204, 0, 245, 183, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 0, 1298, 0, 0, 301, 302, 303,
	287, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 0, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 309, 0, 253, 235, 0, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 304, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 313, 221, 222, 223, 224, 188,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 204, 0, 245, 183, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 233, 0, 0, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 0, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	1281, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 309, 0, 253, 235, 0, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 304, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 313, 221, 222, 223, 224, 188,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 204, 0, 245, 183, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 233, 0, 0, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 0, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 309, 0, 253, 235, 0, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 304, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 313, 221, 222, 223, 224, 188,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 147,
	0, 204, 0, 245, 183, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 233, 0, 0, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 0, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 309, 0, 253, 235, 0, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 340, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 304, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 289, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 313, 221, 222, 223, 224, 188,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 204, 0, 245, 183, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 233, 0, 0, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 104, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 0, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 309, 0, 253, 235, 0, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 304, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 313, 221, 222, 223, 224, 188,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 204, 0, 245, 183, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 233, 0, 0, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 0, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 309, 0, 253, 235, 0, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 304, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 313, 221, 222, 223, 224, 188,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 204, 0, 245, 183, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 233, 0, 0, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 1340, 0, 0, 0, 0, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 881, 882, 883, 1342,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 0, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 309, 0, 253, 235, 0, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 304, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 313, 221, 222, 223, 224, 188,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 233, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 0, 178, 0, 0, 203, 0, 0, 0,
	263, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 881, 882, 883, 1342, 0, 0, 0, 160, 147,
	0, 204, 0, 245, 183, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 287, 0,
	0, 0, 0, 0, 0, 0, 152, 268, 283, 161,
	259, 296, 166, 266, 157, 232, 255, 0, 0, 154,
	281, 265, 214, 197, 198, 153, 0, 250, 176, 189,
	173, 230, 0, 280, 308, 172, 299, 0, 291, 156,
	0, 290, 229, 277, 282, 215, 209, 155, 279, 213,
	208, 201, 180, 0, 193, 241, 207, 242, 194, 219,
	218, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 202, 0, 0, 0, 309, 0, 253, 235,
	0, 0, 0, 251, 205, 278, 243, 284, 269, 292,
	247, 244, 148, 270, 175, 216, 158, 159, 171, 177,
	179, 181, 182, 225, 226, 238, 258, 271, 272, 273,
	174, 167, 252, 168, 191, 169, 149, 260, 170, 150,
	239, 276, 0, 187, 248, 212, 151, 211, 240, 275,
	274, 300, 306, 307, 311, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 305, 185, 146, 288, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 304, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 196, 237, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 286, 298, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 313,
	221, 222, 223, 224, 188, 0, 165, 316, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 184, 190, 0, 192, 164, 236, 186, 295,
	199, 233, 228, 195, 261, 200, 206, 249, 294, 234,
	254, 162, 285, 262, 210, 0, 0, 0, 178, 0,
	0, 203, 0, 0, 0, 263, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 881, 882, 883, 0,
	0, 0, 0, 160, 147, 0, 204, 0, 245, 183,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 287, 0, 0, 0, 0, 0, 0,
	0, 152, 268, 283, 161, 259, 296, 166, 266, 157,
	232, 255, 0, 0, 154, 281, 265, 214, 197, 198,
	153, 0, 250, 176, 189, 173, 230, 0, 280, 308,
	172, 299, 0, 291, 156, 0, 290, 229, 277, 282,
	215, 209, 155, 279, 213, 208, 201, 180, 0, 193,
	241, 207, 242, 194, 219, 218, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 973, 974,
	975, 972, 0, 0, 267, 0, 0, 202, 0, 0,
	0, 309, 0, 253, 235, 0, 0, 0, 251, 205,
	278, 243, 284, 269, 292, 247, 244, 148, 270, 175,
	216, 158, 159, 171, 177, 179, 181, 182, 225, 226,
	238, 258, 271, 272, 273, 174, 167, 252, 168, 191,
	169, 149, 260, 170, 150, 239, 276, 0, 187, 248,
	212, 151, 211, 240, 275, 274, 300, 306, 307, 311,
	0, 312, 0, 1422, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 305, 185, 146, 288,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 304, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 196, 237, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 286,
	298, 315, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 297, 0,
	0, 0, 0, 0, 313, 221, 222, 223, 224, 188,
	0, 165, 316, 246, 0, 0, 0, 0, 0, 0,
	2024, 0, 0, 0, 0, 0, 310, 184, 190, 0,
	192, 164, 236, 186, 295, 199, 0, 228, 195, 261,
	200, 206, 249, 294, 234, 254, 162, 285, 262, 210,
	0, 0, 0, 0, 1296, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 1415, 0, 0, 0, 1417,
	1414, 1416, 1420, 1421, 0, 410, 0, 1419, 2454, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 2006, 147,
	0, 204, 0, 245, 183, 0, 0, 1813, 1817, 1819,
	1821, 1823, 1824, 1826, 0, 1830, 1827, 1828, 1829, 0,
	0, 1808, 1809, 1810, 1811, 1791, 1792, 1814, 0, 1794,
	0, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1806, 1812, 435, 0, 301, 302, 303, 287, 0,
	1816, 1818, 1820, 1822, 1825, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 0, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1425,
	1426, 1427, 1428, 1429, 1430, 1423, 1424, 0, 0, 0,
	0, 0, 437, 0, 0, 436, 0, 0, 0, 0,
	2006, 2010, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2024, 0, 0, 0, 422, 0,
	0, 0, 2003, 0, 0, 411, 2005, 2007, 2009, 0,
	2011, 2012, 2013, 2015, 2016, 2017, 2019, 2020, 2021, 2022,
	0, 0, 0, 0, 0, 0, 0, 2107, 1296, 0,
	0, 427, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2006, 0, 0, 360, 0, 359, 366, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	364, 0, 365, 0, 2023, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 2002, 0, 2010, 0, 0, 360, 0, 359, 366,
	356, 0, 0, 0, 2014, 0, 0, 0, 430, 0,
	363, 364, 376, 365, 0, 377, 0, 351, 0, 2018,
	0, 0, 0, 0, 2003, 0, 2008, 373, 2005, 2007,
	2009, 425, 2011, 2012, 2013, 2015, 2016, 2017, 2019, 2020,
	2021, 2022, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 377, 0, 0, 0,
	0, 0, 426, 431, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 419, 0, 421, 434, 0,
	0, 0, 418, 416, 415, 2010, 420, 0, 432, 433,
	0, 0, 0, 0, 0, 0, 2014, 0, 0, 0,
	428, 429, 0, 0, 0, 0, 2023, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2003, 0, 0, 0,
	2005, 2007, 2009, 2002, 2011, 2012, 2013, 2015, 2016, 2017,
	2019, 2020, 2021, 2022, 0, 0, 423, 0, 0, 360,
	0, 359, 366, 356, 352, 354, 353, 0, 0, 0,
	0, 2018, 358, 363, 364, 0, 365, 0, 2008, 0,
	351, 0, 0, 2025, 362, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 346, 0, 0, 352, 354, 353, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 2023, 0,
	0, 0, 0, 0, 0, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2018, 0, 0, 0, 0, 0, 0,
	2008, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 361, 367, 0,
	368, 369, 0, 0, 370, 371, 372, 0, 0, 374,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 361, 367,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	374, 375, 0, 0, 0, 0, 0, 0, 352, 354,
	353, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 361, 367, 0, 368, 369, 0, 0, 370, 371,
	372, 0, 0, 374, 375,
}

var yyPact = [...]int{
	270, -1000, -314, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19999, -1000,
	-1000, 1507, -1000, 8229, 20469, 92, 20469, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 341, -1000, 19529, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 303, 22355, 187, 186, -1000, 1979, -1000, -1000,
	-1000, -1000, 153, 372, 19059, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22099,
	31, 372, 451, 458, 650, 650, 9639, 1979, 210, 63,
	-1000, 741, 270, 285, 20469, -1000, 895, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1979, 1979, 20469, -54, 1005, -1000, 212, 230, 238, 890,
	-1000, -1000, -1000, -1000, 1981, -1000, 20469, 1752, 20469, -1000,
	1304, 232, 22396, 1861, 754, 414, 1759, -1000, -1000, 1737,
	-1000, 36, 89, 49, 143, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 64, -1000, 1913, -1000, -1000, 26, -1000, 43,
	-1000, -1000, -1000, -94, -1000, -1000, -1000, -1000, -192, -192,
	1840, 1925, 1569, 1955, 1895, 1891, 1889, 1887, 28, 255,
	255, 255, 334, 255, 340, -1000, -1000, -1000, -1000, -1000,
	-1000, 408, -1000, -1000, -1000, -1000, 776, 20469, -1000, 1589,
	1921, 252, 845, 204, 220, 1925, 1925, -101, -133, 845,
	845, -133, 33, -1000, -1000, -1000, 1082, 241, 1082, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1906, 1905, 303, 303,
	316, -1000, -188, -1000, -1000, 590, -1000, 424, -1000, 289,
	213, 779, 1011, -1000, 966, 20469, 20469, 20469, 966, 966,
	11531, 11061, 889, -1000, 1925, 1569, -1000, 1525, 1575, 1569,
	303, 303, 303, 303, 303, 303, 303, 20469, 5811, 5811,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 202, 1736,
	-1000, 20469, 1925, 1840, 1925, -1000, 888, 1281, 1429, -1000,
	-1000, 212, 885, -1000, 672, -1000, -1000, -1000, -1000, 20469,
	194, -1000, 1418, 1731, -1000, 321, 653, 850, -1000, 73,
	22539, 16231, 1304, 16231, 20469, -1000, -1000, -1000, -1000, -1000,
	-1000, -95, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -60, -1000, -60, -1000, -299,
	1840, 6293, -1000, -1000, 6293, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 331, 255, -1000, 1435, 1052, 16231, 1304,
	1293, 20469, 255, 316, -1000, 20469, 776, 1874, 20469, 16231,
	1082, 1967, 7739, 1082, -1000, -1000, -1000, 845, 845, -1000,
	-1000, -1000, -1000, 1082, 1082, -1000, -1000, -126, 1967, 1967,
	-124, 20469, 20469, 255, 20469, -1000, -1000, -1000, -1000, 20469,
	-1000, -1000, 1435, 16231, 13411, -1000, -145, 446, 423, 433,
	-1000, -1000, 1987, -1000, -1000, 610, 349, 10591, 249, 16231,
	3877, -1000, -1000, 966, 966, 966, 3877, 3877, 816, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 20469, 1840, -1000, -1000,
	-1000, -1000, 1435, 16231, 1304, 20469, 20469, 20469, 21689, -1000,
	799, -1000, -1000, 9169, 887, 6293, -1000, 1378, 1722, -1000,
	-1000, 1720, 1718, 1713, 1711, 1710, 1709, 1708, -1000, 1545,
	-1000, -1000, 1703, 1702, 1701, 1699, -1000, -1000, -1000, -1000,
	-1000, -1000, 1698, -1000, -1000, -1000, 1697, 1545, -1000, -1000,
	1683, 1681, 1680, 1679, 1675, -1000, -1000, -1000, 1427, -1000,
	-1000, -1000, 1423, 1421, 1674, 2230, -1000, -1000, -1000, -1000,
	3395, 7739, 7739, 7739, 7739, -1000, -1000, 1616, 6293, 1666,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7257, -1000, 1663,
	1661, 1660, 1659, 1653, 1545, 1652, 1646, 1645, 7739, 1644,
	1642, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 799, -1000, -297, -1000, 10121, 20469, 20469,
	-1000, 1840, -1000, 1840, 2469, -1000, 1919, -1000, 212, 123,
	-1000, -1000, -1000, -1000, -1000, -1000, 872, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 775, -1000, 20469, -1000,
	-1000, 73, 16231, 1003, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 82, -1000, -1000, 125, -1000, 328, -29, 884, -1000,
	-1000, 7, 118, 7, 1403, -1000, 794, 867, 774, -1000,
	1331, 18589, 20469, -3, -1000, 1858, 730, -1000, -29, 610,
	1748, -1000, -1000, -1000, 1796, 20469, 18119, -1000, 1640, 882,
	-1000, 1745, 20469, -1000, 6293, -1000, 20469, 1967, 1967, 845,
	21689, 1082, 20469, 1082, -1000, -1000, 1082, -1000, 863, -1000,
	20469, -1000, -1000, -1000, -1000, -3, 730, 1917, 675, -1000,
	-1000, -1000, -1000, 1869, 20939, 20939, 210, 1639, -1000, -1000,
	442, 421, 434, 1304, 323, -1000, -1000, 610, -1000, -1000,
	-1000, 1631, 1004, -1000, -1000, 7739, -1000, 1175, -1000, 3877,
	3877, 3877, -1000, -1000, 13881, -1000, -1000, -1000, 761, 610,
	1758, 758, -1000, 758, -1000, -1000, -1000, 1967, 5811, -1000,
	13411, -1000, 6293, 6293, 6293, 6293, -1000, 17641, -1000, 17171,
	-1000, 425, 6775, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	6293, 1879, 1879, 1879, 6293, 1001, 6293, 6293, -1000, 1155,
	1707, 1879, 1879, 1879, 1879, 1879, -1000, 2905, 1879, 1879,
	1879, 1879, -1000, -1000, -1000, 6293, 7739, 7739, 7739, 7739,
	7739, 7739, 7739, 7739, 7739, 7739, 7739, 7739, 1615, 986,
	7739, 7739, 7739, 1575, 1827, 728, -1000, -1000, -1000, -1000,
	-1000, 1018, 1175, 6293, 21811, 6293, 6293, 6293, -1000, 1513,
	1509, -1000, -1000, 6293, 6293, 7739, -1000, 1879, 1399, 1967,
	621, -1000, 1630, -1000, 881, 1794, -1000, 847, 696, -1000,
	1002, 879, -1000, -1000, -1000, -1000, 832, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -55, -1000, -1000, 20469, 1418, 864, 1003,
	627, -1000, 319, 822, 815, -1000, 16231, 30, 16231, -1000,
	16231, -1000, -1000, 182, -1000, 20469, 1832, -1000, -1000, -1000,
	1392, 1819, -158, 6293, 6293, 20469, 6293, -1000, -1000, -1000,
	1589, 1043, 1629, -116, 971, -1000, 342, 16231, 207, -1000,
	1755, 192, -1000, 1796, -1000, 620, -1000, 1628, 20469, 613,
	-1000, 811, 270, -1000, 20469, -1000, 1304, 845, 1175, 1967,
	-1000, -1000, 1967, -1000, 845, -1000, 845, 1082, 20469, -1000,
	-116, 342, 20469, 13411, 13411, 13411, 13411, -1000, 1775, 1772,
	-1000, 1834, 1816, 1835, 20469, 13411, 20469, -1000, -1000, -1000,
	21314, -1000, -1000, -1000, -1000, -1000, 1500, 1979, 16701, -1000,
	-1000, -1000, 419, 610, 16231, 1391, 249, -1000, -1000, -1000,
	-1000, -1000, 20469, 20469, 1964, -1000, 682, 1811, -1000, 1051,
	1051, 1059, -1000, -1000, 808, -1000, -1000, 468, -1000, -1000,
	-1000, -1000, 1616, -1000, -1000, -1000, 1498, 586, 1175, 6293,
	-1000, -1000, 6293, 6293, 1258, 6293, 1497, 861, 859, -1000,
	1493, 1980, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 6293, 6293, 6293, 6293, 6293, 1190, 5329, -1000, -1000,
	-1000, 6293, 6293, 6293, 6293, 1489, 1010, 968, -1000, 1053,
	1053, 840, 840, 840, 840, 840, 1337, 1337, -1000, -1000,
	-1000, 3395, 1615, 7739, 7739, 7739, 215, 2284, 2790, -1000,
	6293, 1042, -1000, 6293, 732, -1000, 1488, 1241, 1486, 1485,
	-1000, -1000, 740, 1484, 1047, 6293, 670, 1964, -297, 4841,
	209, 20469, -297, 20469, 20469, 4841, -1000, 20469, 2469, 1276,
	-1000, -1000, -1000, 1978, 16231, 1304, 891, 947, -1000, 23,
	-1000, 80, 273, 1381, -1000, 338, 998, 337, -86, -65,
	1175, 1175, 807, -1000, 1868, 1837, 8699, 1285, -1000, -1000,
	1379, -1000, 264, -1000, -1000, -1000, 317, 37, 1268, 258,
	-1000, 1433, 20469, -1000, -1000, -1000, -1000, -1000, 971, 971,
	971, 8699, 285, 657, 803, 13411, 20469, -1000, 15291, 1483,
	-1000, 610, 1967, -1000, -1000, 1967, 1967, 845, -1000, 1285,
	264, 628, -1000, 975, 1751, 1754, 1751, -1000, -1000, -1000,
	-1000, 1771, -1000, 1721, -1000, -1000, 628, -1000, 1589, -1000,
	-1000, 858, 856, -1000, 627, 1482, -1000, -1000, -1000, -1000,
	1960, 1941, 15761, -1000, -1000, -1000, -1000, -1000, -1000, 6293,
	1793, 1787, 1744, 1062, 855, -1000, -1000, -1000, -1000, 6293,
	1740, 1691, 1670, 1664, 1632, -1000, 6293, 6293, 1213, 1625,
	1612, 1597, 1586, -1000, 844, -1000, 215, 2284, 1728, -1000,
	7739, 7739, 1541, 970, -1000, 6293, 1020, 691, 12471, -1000,
	6293, -1000, -1000, -1000, 12471, -1000, 7739, 1532, 1377, 1960,
	-1000, 1479, 625, -1000, -297, -1000, -1000, 621, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1304, -1000, 78,
	-1000, -1000, -1000, -1000, -1000, -1000, -43, -1000, 20469, 1369,
	20469, -302, -62, 1939, 1938, 20469, 210, 20469, 1476, 624,
	-1000, -1000, -1000, 22002, 663, -1000, 20469, 1097, 488, 255,
	488, 1091, 1608, -1000, -1000, -1000, 1368, -32, -1000, -1000,
	1366, 1364, 1267, -1000, -1000, 1264, 489, -13, -1000, -1000,
	-1000, -1000, -1000, -1000, 1607, 12471, 12941, 1357, 1474, 20939,
	13411, 15291, 614, -1000, 786, -1000, -1000, -1000, -1000, -1000,
	1967, -1000, -1000, 1957, 20469, 4841, -1000, -1000, 6293, 1605,
	-1000, 6293, -1000, -1000, -1000, -1000, -1000, -1000, 1346, -1000,
	1344, -1000, -1000, 6293, 6293, -1000, -1000, 1175, -1000, -1000,
	-1000, 1473, -1000, 422, 422, 34, -1000, -1000, -1000, 1572,
	-1000, 1593, 1593, 1572, 1572, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1603, 1600, -1000, -1000, 1572, 1590,
	1590, 1572, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1594, 1594, 1599,
	1594, -1000, 1526, -1000, -1000, -1000, -1000, -1000, 1499, 1480,
	6293, -1000, -1000, -1000, -1000, -1000, -1000, 7739, -1000, -1000,
	-1000, -1000, 1175, 6293, 1472, -1000, 1572, 1593, -1000, 1572,
	1590, 1572, 422, 422, 1470, 1180, 1469, 2242, -1000, 1468,
	-1000, -1000, 4841, 621, 610, -1000, -1000, -124, 54, -124,
	-306, 1343, -1000, 1937, 1340, 1312, -1000, 1589, 22288, 8699,
	1032, -1000, -1000, 20469, 20469, -1000, 20469, 20469, 255, 6293,
	-1000, -1000, 180, -1000, -1000, 60, -1000, -1000, 1247, 291,
	-1000, 14821, -1000, -1000, -1000, -1000, -1000, -60, 1967, 614,
	786, -1000, -1000, 873, -1000, 1925, -1000, -1000, 1175, 20469,
	1175, 843, 839, 1175, 586, -1000, -1000, -1000, -1000, -1000,
	0, -1000, -1000, -1000, -1000, 1265, -1000, 1263, -1000, -1000,
	-1000, 1339, 1339, -1000, -1000, 1259, -1000, -1000, -1000, 1243,
	-1000, -1000, 1235, -1000, -1000, -1000, -1000, 1442, -1000, 1175,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	6293, -1000, -1000, -1000, -1000, -1000, -119, -69, -1000, 1334,
	-1000, -308, 1233, -1000, 1333, -66, -1000, -1000, 1866, 281,
	22196, -1000, 971, 971, 641, 971, 971, 971, 971, 184,
	175, 971, 971, 971, 971, 971, 971, 971, 971, 971,
	971, 971, 971, 971, 971, 1582, -1000, -1000, 1032, -1000,
	-1000, 1111, 7739, -1000, -1000, 1330, 12941, 464, 487, 1581,
	-1000, 129, 1986, 1069, 1064, -1000, 20469, -1000, 1580, 1742,
	105, 1579, -1000, 1577, 1573, 20469, 1436, 272, 1328, -1000,
	-1000, 59, -1000, -1000, 837, -1000, 1572, 6293, -1000, -124,
	1957, -1000, -1000, 835, -1000, 1112, -1000, 1103, -1000, -1000,
	1454, 1450, 834, -1000, 833, 1449, 830, 829, -1000, 1224,
	313, -83, -69, -1000, 1936, -73, 1934, 1933, 974, -1000,
	1571, -1000, -1000, 1932, 210, -1000, 1931, 22288, -1000, 1216,
	1215, 971, 971, 1206, 1326, 1325, 1324, 971, 971, 1199,
	1322, 21314, 1197, 1185, 1183, 1246, 1320, 519, 1245, 1242,
	1174, 20469, 1570, 1309, -1000, -1000, 2284, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1173, 1561,
	-166, -1000, -1000, 1560, 14821, 134, 134, 14821, 14821, 14821,
	1554, 309, -1000, -44, -1000, -1000, -1000, 14821, 1818, 1208,
	-1000, 1925, -1000, 1447, 1445, 1444, 1443, -1000, -1000, -1000,
	1319, -1000, -1000, -1000, 1144, -1000, 1129, -1000, 1553, 1127,
	-62, 1930, -1000, 1312, 1928, 1312, 1312, 1317, 20469, 1312,
	-1000, 229, -1000, -1000, -1000, 12471, 12471, -1000, -1000, -1000,
	-1000, 1316, 1314, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 195, 20469, 826, -1000, 973,
	1439, 6293, 1545, -235, 14821, 825, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 823, 812, 809, 14821, -1000, -1000, -1000,
	148, -1000, 127, -1000, -1000, 1818, -1000, -1000, -1000, -1000,
	-1000, -1000, 1383, 1342, 1901, 12001, -79, -1000, 1313, -1000,
	1312, -1000, -1000, 53, 801, -1000, -1000, 124, 214, 211,
	-1000, 306, -1000, -1000, -1000, -1000, -1000, -1000, 196, 791,
	-1000, 1309, 1307, -1000, 1092, -1000, 1741, -1000, 21, 765,
	-1000, -1000, -1000, -1000, 747, -1000, -1000, 971, 1306, 77,
	-1000, -1000, -1000, -1000, -1000, -1000, 20469, -1000, 738, -1000,
	-1000, -1000, 782, -1000, -1000, -1000, -1000, -1000, 1305, -1000,
	20469, 121, 1126, 7739, 1544, 7739, 1540, 135, 1535, -1000,
	-1000, -1000, -1000, -1000, 309, -1000, 1667, 1578, 1976, -1000,
	-1000, -1000, -1000, 127, 127, 127, 127, 19, 1123, -1000,
	1293, 476, -1000, 961, -1000, 14351, 20469, 936, -1000, 1528,
	1920, -1000, 2111, 20469, 2007, 20469, 1508, 935, 7739, -1000,
	-1000, 1984, -1000, 1977, 565, 565, -1000, -1000, -1000, 20469,
	4359, -1000, 591, 1302, -1000, 244, 128, -1000, 733, -1000,
	724, 20469, 1122, 1912, -1000, -1000, -1000, 1203, 147, -1000,
	-1000, -1000, 1175, 20469, 52, 717, -1000, 1266, 111, -1000,
	-1000, 704, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1296,
	-1000, 244, 1792, -1000, 1121, -1000, 929, -1000, 22064, 335,
	-1000, 1295, -1000, 22064, 119, -1000, 217, 1424, -318, -1000,
	-1000, 703, -1000, 1249, 491, 6293, -1000, -1000, 119, 22288,
	-1000, 6293, 686, -1000, 22288, 572, -1000, -1000,
}

var yyPgo = [...]int{
	0, 127, 2434, 181, 128, 125, 178, 2432, 1934, 1933,
	2431, 2430, 2429, 2428, 2427, 2426, 2425, 2423, 2422, 2419,
	2418, 2417, 2416, 2415, 2409, 2391, 2387, 177, 2385, 2382,
	2381, 2380, 2373, 2372, 2371, 2369, 2367, 2366, 2336, 2335,
	2334, 2329, 2328, 2327, 120, 2326, 1913, 2325, 2324, 2320,
	2319, 2318, 169, 2317, 2316, 2315, 2314, 2313, 2312, 2309,
	2308, 2306, 2305, 2304, 2302, 2301, 2300, 182, 64, 2299,
	48, 51, 111, 205, 49, 216, 198, 146, 82, 130,
	174, 116, 2298, 2297, 110, 2296, 25, 135, 2295, 45,
	43, 36, 195, 109, 62, 72, 95, 2294, 2293, 93,
	2292, 2290, 98, 2288, 65, 2287, 80, 42, 99, 28,
	2286, 2285, 2284, 85, 2282, 2281, 2280, 2278, 86, 2277,
	74, 59, 2275, 2273, 2272, 2269, 2268, 33, 2267, 53,
	2266, 2264, 2261, 2260, 2259, 2258, 2256, 12, 16, 18,
	2255, 15, 2, 2254, 163, 60, 90, 107, 2253, 390,
	2252, 2251, 2250, 118, 2249, 142, 2248, 2247, 2246, 2244,
	2243, 9, 2242, 57, 2241, 2238, 2236, 54, 151, 161,
	2235, 2220, 106, 47, 61, 103, 2217, 2215, 77, 164,
	17, 56, 0, 159, 39, 2214, 2213, 2212, 199, 155,
	157, 172, 100, 227, 119, 2211, 2210, 58, 2205, 122,
	2204, 76, 24, 2203, 91, 2202, 32, 89, 2201, 112,
	2200, 140, 1, 104, 27, 168, 2198, 2197, 2196, 138,
	2195, 2193, 73, 139, 2192, 2191, 2190, 26, 2187, 41,
	19, 2183, 92, 2182, 189, 2178, 136, 102, 134, 123,
	117, 167, 171, 69, 115, 1103, 114, 88, 23, 2177,
	173, 2175, 203, 192, 149, 2172, 2171, 179, 354, 162,
	2170, 131, 8, 2167, 2166, 7, 2165, 21, 2164, 2163,
	2162, 2157, 6, 2153, 2131, 2117, 4, 3, 2115, 5,
	113, 44, 67, 2113, 68, 78, 2112, 2109, 2108, 2107,
	2106, 262, 2105, 2104, 2103, 2101, 2099, 2098, 2097, 84,
	38, 2096, 2095, 2094, 2092, 70, 2091, 2071, 301, 158,
	2066, 40, 2063, 2062, 22, 2061, 30, 2060, 2058, 2055,
	13, 137, 2054, 2053, 14, 2052, 2051, 10, 11, 2050,
	2049, 66, 46, 31, 79, 87, 2048, 20, 2046, 101,
	2045, 2044, 145, 2043, 108, 2042, 132, 176, 221, 2041,
	165, 2040, 2039, 2038, 2036, 2022, 2021, 2020, 1114, 2014,
	2012, 180, 63, 170, 2009, 2007, 153, 2006, 124, 96,
	94, 160, 2005, 150, 2004, 2002, 175, 156, 2001, 2000,
}

//line mysql_sql.y:7582
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 374, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 61, 60, 330, 330, 329,
	329, 328, 328, 327, 327, 327, 326, 326, 326, 325,
	325, 324, 324, 323, 323, 321, 321, 322, 320, 319,
	319, 319, 317, 317, 315, 315, 316, 316, 310, 310,
	313, 313, 311, 311, 311, 311, 314, 309, 309, 309,
	308, 308, 59, 59, 59, 247, 247, 58, 58, 261,
	261, 261, 261, 261, 259, 259, 259, 259, 259, 259,
	258, 258, 257, 257, 262, 262, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 53, 53, 53, 53, 56, 57,
	255, 255, 255, 255, 255, 256, 256, 256, 54, 55,
	55, 246, 246, 251, 251, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 254, 254, 254,
	253, 253, 252, 252, 47, 47, 47, 50, 49, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 48, 48,
	48, 48, 48, 48, 45, 45, 45, 45, 45, 44,
	44, 46, 46, 244, 244, 243, 64, 64, 64, 64,
	64, 64, 64, 63, 63, 66, 66, 65, 52, 52,
	52, 52, 51, 51, 51, 51, 51, 51, 51, 51,
	51, 353, 353, 353, 355, 355, 186, 187, 375, 185,
	185, 185, 349, 349, 350, 351, 352, 352, 352, 62,
	7, 7, 42, 43, 373, 373, 291, 291, 199, 199,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 294, 295, 195, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 33, 33, 233, 233, 32, 376, 376, 169,
	169, 31, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 41, 304, 304, 378, 378, 378, 39, 40, 290,
	290, 290, 37, 36, 35, 34, 34, 30, 30, 29,
	29, 192, 192, 194, 194, 190, 377, 377, 267, 267,
	193, 193, 28, 28, 28, 191, 191, 168, 189, 189,
	189, 6, 10, 10, 10, 10, 10, 10, 10, 10,
	16, 18, 241, 241, 238, 17, 13, 12, 15, 11,
	14, 5, 5, 5, 5, 8, 8, 9, 79, 79,
	108, 108, 362, 362, 358, 358, 359, 359, 359, 360,
	360, 361, 361, 4, 298, 298, 298, 298, 298, 298,
	338, 338, 338, 339, 98, 98, 93, 93, 299, 299,
	213, 340, 340, 307, 307, 306, 306, 305, 305, 96,
	96, 97, 97, 83, 83, 67, 67, 312, 312, 312,
	312, 318, 318, 288, 288, 134, 134, 164, 164, 165,
	165, 71, 71, 72, 72, 72, 72, 72, 72, 346,
	346, 348, 348, 347, 95, 95, 91, 91, 92, 92,
	92, 90, 90, 89, 88, 88, 87, 86, 86, 86,
	74, 74, 73, 73, 73, 73, 73, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 75,
	75, 354, 354, 354, 292, 292, 292, 297, 297, 146,
	146, 147, 147, 145, 145, 76, 76, 77, 77, 77,
	77, 144, 144, 143, 78, 78, 84, 80, 80, 82,
	82, 82, 82, 154, 154, 153, 153, 153, 153, 101,
	101, 152, 151, 151, 151, 100, 100, 99, 99, 94,
	94, 81, 81, 81, 150, 85, 85, 85, 85, 85,
	85, 85, 85, 379, 379, 148, 178, 178, 178, 184,
	184, 177, 177, 177, 177, 177, 188, 183, 183, 179,
	179, 180, 180, 180, 3, 3, 3, 3, 22, 22,
	22, 22, 26, 26, 356, 356, 19, 363, 366, 364,
	367, 367, 367, 368, 368, 368, 369, 369, 20, 365,
	370, 370, 370, 242, 242, 239, 240, 240, 237, 236,
	236, 236, 372, 372, 371, 371, 371, 181, 181, 21,
	232, 232, 234, 235, 235, 226, 226, 226, 226, 25,
	230, 230, 231, 231, 231, 231, 231, 227, 227, 229,
	229, 225, 225, 225, 225, 225, 24, 224, 224, 222,
	222, 220, 220, 221, 221, 219, 219, 219, 223, 223,
	23, 23, 69, 68, 68, 68, 68, 68, 70, 293,
	293, 263, 263, 266, 266, 273, 273, 274, 274, 272,
	272, 279, 279, 278, 278, 277, 277, 276, 276, 275,
	275, 275, 275, 270, 270, 269, 269, 264, 264, 264,
	264, 264, 265, 265, 268, 268, 271, 271, 125, 125,
	126, 126, 126, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 336, 336, 337, 128, 128, 128, 132, 132,
	132, 132, 132, 132, 127, 127, 129, 129, 109, 109,
	107, 107, 102, 102, 103, 103, 104, 104, 105, 105,
	106, 106, 106, 106, 106, 106, 249, 249, 334, 334,
	335, 335, 331, 331, 331, 333, 333, 333, 333, 333,
	332, 332, 110, 162, 162, 162, 182, 182, 182, 161,
	161, 161, 124, 124, 123, 123, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	248, 248, 196, 196, 197, 197, 141, 140, 140, 140,
	140, 140, 138, 139, 137, 137, 137, 137, 137, 136,
	136, 135, 135, 135, 228, 228, 133, 133, 131, 131,
	131, 130, 130, 130, 280, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 205,
	205, 210, 210, 345, 345, 344, 111, 111, 111, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 120, 120,
	120, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 303, 303, 303, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 160, 357, 357, 357, 341, 341, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 158, 158, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 214, 214, 215, 215, 300, 300, 300, 300, 300,
	300, 301, 301, 302, 302, 302, 302, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 203, 155, 155, 155,
	216, 211, 211, 212, 212, 206, 206, 206, 206, 206,
	206, 206, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 207, 207, 209, 209, 218, 218, 218, 217,
	217, 217, 217, 217, 217, 217, 122, 122, 122, 122,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	113, 113, 113, 113, 117, 117, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	118, 118, 118, 118, 116, 116, 116, 116, 116, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 115, 163, 163, 281, 281,
	284, 284, 282, 282, 283, 285, 285, 285, 286, 286,
	286, 287, 287, 287, 289, 289, 167, 167, 167, 174,
	174, 166, 166, 175, 175, 176, 176, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 9, 9, 0, 2, 1,
	3, 3, 3, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 3, 6,
	3, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	6, 1, 4, 1, 3, 3, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 0,
	1, 4, 2, 4, 1, 5, 3, 2, 1, 2,
	2, 4, 4, 5, 2, 1, 3, 4, 4, 1,
	2, 9, 7, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 7, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 5, 0, 2, 7, 0, 1, 0,
	1, 4, 1, 1, 1, 3, 2, 3, 1, 1,
	1, 6, 0, 1, 1, 1, 1, 5, 5, 0,
	1, 1, 3, 3, 3, 6, 7, 4, 4, 7,
	8, 0, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 1, 3, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 3, 1, 4, 6, 4, 4, 4,
	3, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	0, 1, 3, 3, 1, 3, 1, 3, 1, 3,
	4, 0, 1, 0, 1, 1, 3, 1, 1, 0,
	4, 1, 3, 2, 1, 0, 8, 0, 4, 7,
	4, 0, 2, 0, 2, 0, 2, 0, 4, 1,
	3, 1, 1, 4, 3, 4, 5, 4, 5, 2,
	3, 1, 3, 6, 0, 3, 0, 1, 2, 4,
	4, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 7,
	7, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	4, 4, 3, 2, 2, 2, 3, 2, 3, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 4, 2, 3, 4, 6, 8, 8, 4,
	6, 8, 8, 0, 1, 2, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 11, 0, 1, 7, 1, 4, 1,
	3, 4, 3, 0, 1, 1, 0, 2, 7, 1,
	0, 2, 2, 1, 3, 2, 1, 3, 2, 1,
	3, 2, 0, 1, 3, 4, 3, 1, 1, 4,
	1, 3, 1, 1, 1, 0, 1, 1, 1, 11,
	0, 2, 3, 2, 3, 1, 1, 1, 3, 3,
	4, 0, 2, 2, 2, 2, 5, 1, 1, 0,
	3, 0, 1, 1, 2, 4, 4, 4, 0, 1,
	10, 9, 2, 2, 6, 10, 14, 18, 5, 0,
	1, 0, 6, 0, 4, 0, 3, 1, 3, 4,
	5, 0, 3, 1, 3, 2, 3, 1, 2, 0,
	4, 6, 5, 0, 2, 0, 2, 4, 5, 4,
	5, 1, 6, 5, 0, 3, 0, 1, 0, 1,
	1, 3, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 4, 1, 3, 3, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 1,
	7, 7, 7, 7, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 1, 5, 6, 4,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 6, 6, 1, 1, 1, 1, 1, 0,
	2, 0, 1, 1, 2, 4, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 5, 4, 4, 5, 5, 5, 5, 4, 5,
	5, 5, 5, 5, 5, 5, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 5, 4, 6, 6,
	7, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 4, 2,
	3, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	1, 1, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 4, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -374, -2, -1, -3, -4, -5, -6, -51, -63,
	-65, -66, -27, -7, -62, -44, -45, -47, -53, -58,
	-59, -60, -61, -71, -22, -21, -20, -19, 12, -8,
	-9, -346, -10, -185, -186, -187, -375, -28, -29, -30,
	-34, -35, -36, -37, -39, -40, -41, -31, -32, -33,
	-43, -42, 203, -46, 58, -48, -49, -50, -54, -55,
	-56, -57, 317, 323, 375, 384, -72, -74, -23, -24,
	-25, -26, 199, 14, 453, -11, -14, -12, -15, -13,
	-17, -18, -16, 221, 220, 37, 283, 284, 321, 219,
	200, 13, 132, 133, 135, 136, 30, -73, 64, 201,
	-75, 10, 501, -83, 38, -107, -182, 67, -170, -173,
	456, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 299, 450, 238, 262,
	265, 272, 132, 151, 145, 173, 165, 140, 242, 243,
	74, 135, 407, 84, 392, 372, 138, 257, 259, 261,
	264, 244, 161, 156, 256, 240, 154, 245, 39, 246,
	178, 247, 248, 455, 388, 298, 394, 269, 370, 155,
	389, 260, 391, 180, 184, 399, 323, 149, 150, 396,
	401, 177, 218, 42, 452, 230, 402, 182, 176, 172,
	410, 273, 271, 175, 148, 171, 241, 47, 186, 185,
	187, 366, 367, 368, 369, 249, 250, 311, 398, 168,
	157, 302, 141, 22, 405, 225, 393, 324, 251, 266,
	274, 181, 183, 232, 237, 454, 374, 236, 270, 403,
	153, 229, 258, 224, 406, 142, 317, 326, 252, 136,
	263, 400, 409, 46, 339, 147, 139, 215, 133, 234,
	239, 253, 254, 255, 276, 275, 267, 169, 231, 174,
	159, 146, 170, 134, 233, 408, 340, 499, 300, 355,
	167, 164, 235, 208, 404, 395, 137, 359, 341, 162,
	277, 496, 497, 498, 312, 297, 278, 279, 160, 222,
	387, 280, 282, 365, 290, 342, 373, -46, -9, -8,
	-73, -74, -189, 23, 370, -52, 371, 203, 64, -182,
	-5, -4, -44, -71, -188, -182, 283, -188, 206, -182,
	236, 354, -291, 211, -258, -232, 237, -257, -234, -260,
	-235, 31, 199, 201, 200, 233, 14, 321, 207, 12,
	10, 322, 219, 24, 25, 27, 13, 323, 325, 326,
	329, 330, 331, 41, 334, 335, 67, 70, 244, 244,
	-89, -90, -149, 19, 6, 7, 8, 9, -293, 299,
	355, 236, -226, -224, 280, 332, 216, 215, 85, 414,
	205, -358, -359, 196, 197, 198, -348, 446, -347, -182,
	26, 206, -38, -304, -290, 395, 394, -193, 393, 386,
	397, 388, 199, 447, -167, 342, 373, 232, 411, 412,
	319, 374, 399, 400, 389, 84, 166, 163, 299, 355,
	-358, 137, 134, -245, 137, 90, 142, 141, -245, 236,
	40, -251, 365, -250, -252, 399, 400, 410, 68, 69,
	398, -167, -182, 84, -90, -149, -89, -72, -74, -346,
	299, 355, 236, 207, 206, 208, 414, 283, -292, -354,
	31, -297, 193, 194, 195, 32, 33, -1, -96, 228,
	-107, 130, -90, -89, -90, -161, -182, 372, 100, -52,
	-52, 371, -349, -350, -351, -353, 203, 371, 370, 130,
	15, -188, 62, -107, -234, 236, -258, -232, 35, 61,
	131, 209, 131, 61, 64, 319, 299, 355, 320, 414,
	206, 332, 208, 236, 333, 299, 355, 206, 208, 414,
	236, 299, 206, 208, 355, 236, 333, 386, 387, 208,
	26, 324, 327, 328, 387, -308, 410, -308, -67, 38,
	-92, 21, -75, -74, 20, 31, 32, 31, 32, 31,
	32, 31, 32, -356, 206, 446, -222, 211, -222, -222,
	207, -222, 206, -360, 144, 131, -348, -95, 64, 23,
	234, -192, 108, -378, 207, 396, 42, 235, 234, -91,
	-92, -91, 390, 387, -267, 391, 392, -193, -192, -192,
	-193, 206, 208, 414, -376, -377, 15, 110, 234, -376,
	30, 30, -291, -291, -361, 210, 403, 453, 140, 141,
	142, -255, 31, 40, 364, -232, 236, 131, 100, 23,
	-253, 100, 111, -252, -252, -252, -253, -253, -127, 40,
	-181, 127, -182, 70, -127, 40, 130, -91, -75, -74,
	65, 65, -291, -291, -291, -291, -291, -291, -291, -188,
	-76, -77, 118, -206, -182, 91, 227, -208, 67, -201,
	456, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 84, 370, 311, 159, 355,
	162, 312, 160, 222, 365, -202, -204, -327, -321, -200,
	64, 116, 117, 124, 92, -203, -280, 35, 94, 422,
	-156, -157, -158, -159, -160, -322, -320, 70, 75, 78,
	81, 82, 80, 79, 158, 77, 71, 129, -74, -341,
	-171, -296, -302, 205, -300, 163, 12, 122, 127, -303,
	492, 69, 68, 493, 305, 306, 307, 414, 301, 308,
	211, 52, 309, 310, 313, 421, 314, 53, 315, 304,
	226, 316, 179, 425, 424, 426, 418, 415, 413, 416,
	417, 419, 420, -76, -298, 43, -71, 64, 30, 64,
	-182, -91, -67, -92, 130, 75, 70, -52, 65, 131,
	-352, 81, 82, -355, 177, 169, -182, -64, 70, -3,
	-4, -5, -6, -27, -44, -71, -323, -321, 64, 31,
	364, 61, 15, -259, 206, 414, 318, 232, 208, 299,
	-257, -241, -238, -236, -181, -234, -237, -236, -262, -161,
	387, -68, 376, -68, 495, -67, -206, -182, -88, -87,
	-206, 208, -222, -363, 67, 91, -242, -239, -236, -232,
	-180, 67, 68, 69, -182, -222, -361, -347, 34, -94,
	-182, -236, -376, -145, 16, -204, -377, -192, -192, -194,
	-377, -190, -377, 387, -145, -145, -267, -191, -182, -191,
	-222, -169, -168, -182, -169, -363, -242, -80, -78, -81,
	-82, -84, -148, -150, -85, -107, 64, 493, 404, 405,
	138, 141, 140, 7, -256, 364, 31, -232, -250, -246,
	70, 365, -237, -254, 61, 127, -305, -206, 40, -253,
	-253, -253, -254, -254, 126, -182, -67, -363, -241, -232,
	-182, -109, -107, -109, -183, -180, -173, -144, 131, -143,
	15, -177, 90, 87, 88, 89, -182, 34, 70, 130,
	-206, 107, -217, 100, 101, 102, 103, 104, 105, 106,
	64, 64, 64, 64, 64, 64, 64, 64, -215, 64,
	64, 64, 64, 64, 64, 64, -215, 64, 64, 64,
	64, 64, 70, 70, 70, 64, 113, 112, 123, 116,
	117, 118, 119, 120, 121, 122, 114, 115, 110, 91,
	108, 109, 93, -74, -206, -212, -204, -204, -204, -204,
	-280, -210, -206, 64, -206, 64, 64, 64, -301, 64,
	64, -214, -215, 64, 64, 64, -204, 64, 64, -144,
	-299, -213, -340, 494, -98, 65, -93, -182, -338, -339,
	-93, -97, -182, -67, -67, -175, -176, -166, -172, -179,
	-180, -173, 204, 31, 90, 34, 36, 305, 337, 93,
	127, 20, 94, 163, 126, 307, 422, 306, 199, 56,
	424, 426, 425, 415, 413, 357, 361, 363, 360, 414,
	386, 40, 14, 37, 220, 32, 33, 120, 201, 97,
	98, 223, 35, 221, 82, 23, 59, 15, 17, 18,
	308, 356, 211, 210, 110, 376, 207, 54, 12, 129,
	38, 107, 358, 50, 86, 52, 108, 21, 416, 417,
	41, 375, 384, 449, 227, 122, 309, 310, 57, 91,
	364, 80, 61, 87, 19, 55, 109, 202, 421, 53,
	362, 313, 315, 325, 446, 314, 205, 397, 10, 304,
	423, 30, 219, 51, 206, 96, 209, 81, 226, 6,
	85, 13, 58, 62, 418, 419, 420, 43, 95, 16,
	316, 453, 377, 378, 379, 380, 381, 382, 383, 188,
	189, 190, 191, 192, 268, 214, 212, 216, 217, 494,
	495, 193, 194, 294, 296, 166, 196, 197, 198, 228,
	144, 7, 343, 344, 345, 346, 348, 349, 350, 351,
	352, 353, 354, 23, -52, -350, 130, 131, -94, -259,
	-240, -237, -261, 118, 67, -247, 131, 453, 502, 68,
	209, -372, -371, 356, 65, 131, -309, 210, 421, 70,
	503, -309, 70, 131, 22, 130, 131, -86, 36, 37,
	-107, 211, -107, -366, 343, 35, -373, 131, 40, -371,
	-225, 62, -220, -221, -219, -223, 40, -107, 15, -79,
	-108, -182, 64, 65, 131, -233, 62, -169, -206, -107,
	-145, -145, -192, -183, -194, -189, -194, -190, 130, -168,
	-366, -373, 30, -151, -152, -153, -154, 50, 54, 56,
	51, 52, 53, 57, 30, 131, -379, 34, -178, -184,
	34, -179, 70, -180, -173, -178, -72, -74, 64, 139,
	142, 142, 141, -232, 209, 64, 100, -254, -254, -254,
	40, -181, 61, 131, -145, -77, -78, -80, -206, -206,
	-206, -206, -182, 70, -182, 118, 80, 91, 297, 81,
	82, -201, -218, 31, 278, 279, -211, -212, -206, -155,
	32, 31, -155, -155, -206, -155, 118, -212, -212, 65,
	75, -342, -343, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 309, 304, 310, 308, 301, 316,
	311, 312, 162, 444, 445, 438, 439, 440, 441, 442,
	443, -155, -155, -155, -155, -155, -206, -357, 295, 294,
	296, -155, -155, -155, -155, -211, -202, -202, -202, -202,
	-202, -202, -202, -202, -202, -202, -202, -202, -209, -216,
	-280, 64, 110, 108, 109, 93, -204, -202, -202, 65,
	131, -345, -344, 95, -206, -342, -211, -206, -211, -211,
	65, 65, -212, -211, -202, -155, 70, -145, 131, 64,
	65, 131, 43, 130, 131, 100, 65, 131, 130, 372,
	-182, -321, 65, -261, 131, 209, 130, 130, -238, 323,
	-181, -240, 20, 453, -161, 38, 70, 38, -312, 391,
	-206, -206, -182, -87, -95, 91, 64, -368, 393, 345,
	-174, 100, -199, -198, 300, 41, -294, 365, 351, 352,
	-239, 236, 61, 289, 290, 291, 292, -219, -167, 126,
	247, 64, -107, -79, -182, 15, 131, -362, 130, -1,
	-182, -232, -192, -145, -145, -192, -192, -194, -182, -368,
	-199, -244, -243, -161, -81, -81, -81, -81, 50, 50,
	50, 55, 50, 55, 50, -153, -244, -84, -182, -184,
	65, 70, -161, 142, -240, -195, 70, -246, -107, -107,
	-147, 17, 130, 80, 297, 81, 82, -280, 65, 131,
	-206, -206, -206, 34, -212, 65, 65, 65, 65, 15,
	-206, -206, -206, -206, -206, 65, 15, 15, -206, -206,
	-206, -206, -206, 65, -212, -209, -204, -202, -202, -207,
	223, 90, -206, -205, -344, 97, -206, 131, 62, 65,
	15, 65, 65, 65, 62, 65, 131, -206, 131, -147,
	-213, -307, -306, -305, 43, -71, -93, -299, -182, -339,
	-305, -182, -175, -172, -180, -173, 75, 15, -237, -232,
	118, 118, 67, 324, -247, 70, 344, 70, 206, 100,
	206, -318, 382, 377, 379, 130, 34, 35, -102, -103,
	-104, -110, -105, -161, -197, -106, 214, 212, 216, -335,
	85, 217, 268, 86, 207, -369, 74, -364, 70, -370,
	74, 346, 129, 302, 40, 347, 348, 362, 298, 75,
	75, 353, -365, 67, -107, -174, -174, -174, -102, -96,
	62, 130, -78, -108, -182, 118, 65, -145, -145, -145,
	-192, -369, -370, -145, 131, 100, -100, -99, 61, 62,
	-101, 61, -99, 50, 50, -145, -95, 65, 131, 65,
	131, 65, -146, 18, 20, -182, 118, -206, 65, 65,
	65, -111, -113, 339, 340, -117, -114, -116, -115, -119,
	-118, 163, 164, 127, 167, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 30, 179, 222, 159, 160,
	161, 162, 180, 145, 165, 451, 188, 146, 189, 147,
	190, 148, 191, 149, 150, 192, 151, 154, 155, 156,
	153, 65, -206, 65, 65, 65, 65, 65, -206, -206,
	15, 65, 65, 65, 65, 65, -207, 90, -204, -201,
	65, 98, -206, 96, -112, -118, 127, 163, 222, 162,
	161, 159, 339, 340, -127, -206, -127, -202, 65, 70,
	-146, 65, 131, -299, -232, -247, 365, -107, 70, -107,
	-288, 496, -316, 377, 20, 20, -71, -107, 65, 131,
	-113, -106, -182, 86, -334, -335, -222, -334, 86, 64,
	70, -367, 356, 70, 70, 75, 40, 75, 129, 349,
	-295, 64, -127, -129, -181, 127, 70, 65, -178, -78,
	-182, -145, -362, 130, -145, -90, -243, -305, -206, 64,
	-206, 70, 70, -206, -212, 65, -120, 150, 149, -120,
	-287, 340, 339, -281, -283, 64, -282, 64, -282, -281,
	-281, 64, 64, -281, -284, 64, -284, -281, -285, 64,
	-285, -286, 64, -285, 65, 65, 65, -206, -201, -206,
	65, -281, -282, -281, -284, -281, -120, -120, 65, 65,
	23, 65, 65, 65, -305, -70, -310, -267, 504, 131,
	-70, -134, 497, 70, 20, 70, -314, 70, -95, -125,
	-126, -142, 337, 238, -223, 242, 74, 243, 372, 244,
	207, 246, 247, 248, 218, 249, 250, 251, 365, 252,
	253, 254, 255, 320, 6, 285, -104, -124, -123, -121,
	80, 91, 40, 337, -122, 74, 126, 261, 239, 262,
	-141, -196, 61, 212, 85, 86, 325, -197, -331, -332,
	-182, -332, -182, -331, -331, -222, -206, 20, 453, 301,
	40, 75, 40, 350, -227, -229, -161, 64, -69, -68,
	-145, -145, -91, -94, 65, 131, 65, 131, -289, 341,
	75, 75, -163, 70, -163, 75, 75, 75, 65, -206,
	-317, 382, -313, -311, 377, 378, 379, 380, 70, -164,
	498, 75, 70, 379, 34, -263, 228, 131, -142, -174,
	-174, -167, 126, -174, -174, -174, -174, 245, 245, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, 64, -121, 80, -202, 70, -129, -130,
	40, 260, 256, -131, 40, 240, 241, -133, 64, 268,
	13, 86, 86, -107, 64, 62, 277, 64, 64, 64,
	-332, 65, 70, 344, 70, 301, 65, 131, -281, -206,
	-70, -90, 65, 81, 82, 81, 82, 65, 65, 65,
	131, 65, 65, 65, 131, 65, 131, 65, -319, 210,
	-315, 381, -311, 20, 379, 20, 20, 100, 64, 20,
	-71, 20, -142, 75, 75, -174, -174, 75, 70, 70,
	70, -174, -174, 75, 70, -184, 75, 75, 75, 75,
	40, 70, -132, 40, 256, 260, 257, 258, 259, 75,
	40, 75, 40, 75, 40, -182, 64, -336, -337, 70,
	75, 64, -300, -228, 64, -227, -333, 289, 290, 291,
	293, 292, -333, -227, -227, -227, 64, -249, -248, 269,
	91, 365, -230, -229, -86, 65, -91, 65, 65, 65,
	65, 70, 75, 75, -326, 64, 75, -316, 20, -314,
	20, -314, -314, 70, -165, -182, -314, -264, 270, 271,
	-265, -271, 273, -127, -127, 70, 70, -128, 239, -109,
	65, 131, 100, 65, -206, -214, -136, -135, 449, -227,
	65, 65, 65, 65, -227, 269, -231, 218, 74, 453,
	287, 288, -86, 65, 65, -330, 30, 65, -325, -324,
	-162, -320, -182, 382, 383, 70, -314, 504, 131, 65,
	131, -269, 274, 64, -267, 64, -267, 86, 290, 240,
	241, 65, -337, 70, 65, -140, -138, -139, 61, 389,
	266, 267, 65, -230, -230, -230, -230, 65, -174, 70,
	286, -329, -328, -327, 65, 131, 130, 70, -182, -266,
	275, 75, -202, 64, -202, 64, -268, 272, 64, -248,
	-139, 61, -138, 61, 14, 13, -141, 75, -180, 131,
	100, -324, -182, 100, -273, 64, 20, 65, -262, 65,
	-262, 64, 100, -202, -137, 263, 264, 30, 141, -137,
	-328, 40, -206, 130, 70, -274, -272, 228, -265, 65,
	65, -262, 75, 65, 80, 40, 265, -182, 504, 131,
	65, 131, 67, -270, 276, 65, 70, -272, -275, 43,
	75, 100, -279, -276, 64, -142, 230, 110, 70, -279,
	-142, -278, -277, 275, 231, 64, 504, 65, 131, 67,
	227, 64, -212, -277, -276, -212, 65, 65,
}

var yyDef = [...]int{
	24, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 584, 585, 586, 587, 0, 381,
	382, 0, 361, 0, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 296, 297, 298, 299, 300, 301,
	260, 261, 0, 209, 205, 184, 185, 186, 144, 145,
	146, 147, 266, 0, 0, 0, 451, -2, 588, 589,
	590, 591, -2, 394, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 249, 250, 251, 246, 247, 248, -2,
	0, 394, 198, 0, 189, 189, 0, 471, 0, 0,
	482, 504, 24, 429, 0, 434, 770, 806, 807, 808,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 210, 383, 384,
	471, 471, 232, 0, 1390, 236, 0, 0, 0, 358,
	228, 229, 230, 231, 0, 576, 0, 225, 0, 204,
	1449, 0, 0, 0, 0, 0, 0, 90, 630, 92,
	632, 96, 103, 0, 0, 108, 109, 112, 113, 114,
	115, 116, 0, 120, 0, 122, 125, 0, 127, 0,
	130, 131, 132, 0, 142, 143, 633, 634, 70, 70,
	-2, 0, 0, 0, 487, 490, 493, 496, 594, 659,
	659, 659, 0, 659, 0, 680, 636, 637, 638, 657,
	658, 399, 395, 396, 397, 398, 459, 0, 461, 464,
	302, 0, 341, 0, 0, 466, 466, 0, 350, 341,
	341, -2, 0, 312, 313, 314, 307, 0, 307, 318,
	319, 320, 330, 331, 351, 1176, 0, 0, 266, 266,
	401, 199, 200, 188, 190, 0, 194, 0, 187, 1449,
	0, 158, 1515, 163, 0, 1397, 1463, 1412, 0, 0,
	1430, 0, 182, -2, 466, 0, 472, 0, 471, 0,
	266, 266, 266, 266, 266, 266, 266, 0, 0, 0,
	505, 506, 501, 502, 503, 507, 508, 3, 0, 0,
	433, 0, 466, -2, 0, 233, 809, 0, 0, 237,
	238, 0, 0, 252, 0, 255, 241, 242, 243, 0,
	0, 227, 0, 0, 206, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 100, 97, 104, 107, 117,
	124, 0, 135, 137, 140, 98, 105, 110, 111, 118,
	138, 99, 101, 102, 106, 139, 141, 119, 123, 136,
	121, 126, 128, 129, 134, 0, 71, 0, 454, 0,
	435, 0, 484, 486, 0, 488, 489, 491, 492, 494,
	495, 497, 498, 0, 659, 595, 0, 0, 0, 0,
	0, 0, 659, 401, 400, 0, 460, 0, 0, 0,
	307, 513, 0, 0, 324, 325, 326, 341, 341, 332,
	467, 333, 334, 343, 0, 348, 349, 0, 513, 513,
	0, 0, 0, 659, 309, 308, 346, 347, 316, 309,
	1177, 1178, 0, 0, 0, 402, 0, 0, 192, 0,
	197, 148, 153, 151, 152, 154, 0, 0, 0, 0,
	0, 180, 181, 0, 0, 0, 0, 0, 171, 174,
	764, 765, 627, 628, 175, 176, 0, 435, 483, 485,
	480, 481, 0, 0, 0, 0, 0, 0, 0, 380,
	521, 515, 517, 571, 33, 0, 1060, 1061, 806, 1072,
	-2, 1531, 1532, 1533, 1534, 1535, 1536, 1537, -2, 1539,
	-2, -2, 1542, 1543, 1544, 1546, -2, -2, -2, -2,
	-2, -2, 1553, -2, -2, -2, 1557, 1558, -2, -2,
	1561, 1562, 1563, 1564, 1565, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1515, 1081, 877, 878, 879, 880,
	0, 0, 0, 0, 0, 887, 888, 0, 901, 0,
	894, 895, 896, 897, 898, 45, 46, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1026, 864, 0,
	0, 0, 1011, 0, 1001, 0, 0, 0, 0, 0,
	0, 47, 48, 1529, 1017, 1019, 1020, 1022, 1023, 1024,
	1025, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038,
	1041, 1043, 1045, 1013, 1014, 1015, 1016, 1005, 1006, 1007,
	1008, 1009, 1010, 521, 403, 421, 405, 0, 410, 0,
	771, 435, 457, 435, 0, 234, 0, 239, 0, 0,
	254, 256, 257, 258, 244, 245, 359, 223, 224, 216,
	217, 218, 219, 220, 221, 222, 226, 43, 0, 207,
	208, 0, 0, 0, 84, 85, 86, 87, 88, 89,
	91, 75, 372, 374, 619, 631, 0, 622, 0, 94,
	133, 67, 0, 67, 0, 455, 468, 33, 473, 474,
	477, 0, 0, 0, 597, 0, 264, 613, 0, 629,
	651, 581, 582, 583, -2, 0, 0, 462, 0, 0,
	549, 304, 309, 311, 0, 342, 0, 513, 513, 341,
	0, 343, 0, 343, 337, 338, 0, 352, 355, 353,
	0, 315, 310, 357, 317, 0, 264, 526, 0, 527,
	528, 524, 551, 563, 566, 566, 0, 0, 201, 202,
	0, 0, 196, 0, 0, 155, 156, 157, 164, 159,
	161, 0, 0, 165, 177, 178, 179, 427, 428, 0,
	0, 0, 169, 170, 0, 183, 453, 370, 371, 375,
	0, 377, 768, 378, 379, 577, 578, 513, 0, 522,
	0, 518, 0, 0, 0, 0, 572, 0, 574, 0,
	1059, 0, 0, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1051, 1047, 1047, 1047, 0, 1047, 0, 0, 986, 0,
	0, 1047, 1047, 1047, 1047, 1047, 987, 0, 1047, 1047,
	1047, 1047, 995, 1000, 994, 1051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 1053, 0, 883, 884, 885, 886,
	889, 0, 902, 0, 0, 1051, 1051, 1051, 989, 0,
	0, 991, 1002, 0, 1051, 0, 999, 1047, 0, 513,
	404, 418, 0, 422, 0, 0, 414, 416, 409, 411,
	0, 0, 431, 456, 458, 810, 0, 1183, -2, 1185,
	-2, -2, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 0, 240, 253, 0, 0, 0, 0,
	78, 616, 0, 79, 83, 73, 0, 0, 0, 621,
	0, 618, 623, 0, 93, 0, 0, 68, 69, 673,
	0, 0, 437, 0, 0, 0, 0, 476, 478, 479,
	464, 0, 0, 603, 1179, 660, 268, 0, 0, 615,
	0, 0, 656, -2, 663, 0, 669, 0, 0, 0,
	388, 392, 24, 465, 0, 303, 0, 341, 514, 513,
	327, 328, 513, 344, 341, 345, 341, 343, 0, 354,
	603, 268, 0, 0, 0, 0, 0, 542, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 564, 553, 567,
	0, 569, 570, 579, 580, 565, 0, 471, 0, 203,
	191, 193, 0, 150, 0, 0, 0, 166, 167, 168,
	172, 173, 0, 0, 511, 516, 523, 526, 1055, 1056,
	1057, 1058, 573, 575, 34, 519, 1062, 0, 1064, 1066,
	1068, 1070, 0, 1086, -2, -2, 0, 1052, 1053, 0,
	1048, 1049, 0, 0, 0, 0, 0, 0, 0, 1003,
	0, 0, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 0, 0, 0, 0, 0, 0, 0, 952, 953,
	954, 0, 0, 0, 0, 0, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 1073, 1084,
	1085, 0, 0, 0, 0, 0, 1082, 1077, 0, 881,
	0, 899, 903, 0, 0, 1046, 0, 1053, 0, 0,
	1012, 990, 0, 0, 0, 0, 0, 511, 421, 423,
	0, 0, 421, 0, 0, 0, 430, 0, 0, 0,
	360, 44, 259, 0, 0, 0, 0, 0, 373, 0,
	620, 75, 0, 0, 95, 0, 0, 0, 441, 0,
	469, 470, 34, 475, 0, 0, 772, 606, 604, 605,
	0, 1180, 610, 269, 270, 271, 272, 0, 0, 0,
	614, 0, 0, 652, 653, 654, 655, 664, 1179, 1179,
	1179, 772, 429, 0, -2, 0, 0, 390, 0, 0,
	550, 305, 513, 321, 335, 513, 513, 341, 356, 606,
	610, 513, 213, 0, 545, 539, 0, 532, 543, 544,
	535, 0, 537, 0, 533, 534, 513, 525, 464, 568,
	554, 0, 0, 195, 149, 0, 288, 160, 376, 769,
	509, 0, 0, 1063, 1065, 1067, 1069, 1071, 939, 0,
	0, 0, 0, 0, 0, 928, 922, 923, 1004, 0,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 0, 998, 0, 1074, 1082, 1078, 0, 1075,
	0, 0, 1054, 0, 904, 0, 0, 0, 0, 940,
	0, 944, 988, 992, 0, 996, 0, 0, 0, 509,
	419, 0, 424, 425, 421, 408, 415, 407, 417, 412,
	413, 432, 811, 1184, 1181, 1182, 235, 0, 617, 75,
	80, 81, 82, 76, 74, 624, 0, 626, 0, 0,
	0, 443, 56, 0, 0, 0, 0, 0, 0, 773,
	774, 776, 777, 0, 0, 779, 834, 0, 788, 659,
	788, 0, 0, 790, 791, 596, 0, 0, 599, 608,
	0, 0, 0, 274, 275, 0, 0, 0, 287, 283,
	284, 285, 265, 609, 0, 0, 0, 0, 0, 566,
	0, 0, 513, 389, 392, 393, 463, 306, 339, 336,
	513, 262, 263, 471, 0, 0, 529, 546, 0, 0,
	530, 0, 531, 536, 538, 212, 552, 555, 0, 559,
	0, 162, 499, 0, 0, 35, 520, 1054, 924, 925,
	926, 0, 906, 918, 918, 1171, 1111, 1112, 1113, 1158,
	1115, 1162, 1162, 1158, 1158, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 0, 0, 1154, 1134, 1158, 1160,
	1160, 1158, 1155, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1165, 1165, 1168,
	1165, 927, 0, 946, 929, 930, 933, 931, 0, 0,
	0, 945, 934, 935, 921, 1050, 1076, 0, 1083, 1079,
	882, 890, 900, 0, 0, 909, 1158, 1162, 912, 1158,
	1160, 1158, 918, 918, 0, 0, 0, 0, 932, 0,
	500, 420, 0, 406, 77, 72, 625, 58, 0, 58,
	445, 0, 442, 0, 0, 0, 592, 464, -2, 0,
	-2, 778, 835, 800, 800, 789, 800, 800, 659, 0,
	607, 598, 0, 611, 612, 0, 276, 277, 0, 280,
	286, 0, 665, 666, 766, 767, 667, 0, 513, 513,
	-2, 386, 391, 0, 340, 466, 214, 215, 547, 0,
	540, 0, 0, 510, 512, 891, 907, 919, 920, 908,
	1174, 1172, 1173, 1114, 1159, 0, 1139, 0, 1140, 1141,
	1142, 0, 0, 1135, 1136, 0, 1137, 1138, 1130, 0,
	1131, 1132, 0, 1133, 943, 948, 949, 0, 1080, 905,
	892, 910, 911, 913, 914, 915, 916, 917, 893, 941,
	0, 993, 997, 951, 426, 26, 52, 0, 674, 0,
	25, 447, 0, 444, 0, 438, 440, 66, 0, 681,
	-2, 720, 1179, 1179, 0, 1179, 1179, 1179, 1179, 0,
	0, 1179, 1179, 1179, 1179, 1179, 1179, 1179, 1179, 1179,
	1179, 1179, 1179, 1179, 1179, 0, 775, 802, -2, 814,
	816, 0, 0, 819, 820, 0, 0, 0, 0, 856,
	826, 0, 0, 0, 1098, 1099, 0, 833, 0, 792,
	801, 0, 801, 0, 0, 800, 0, 0, 0, 273,
	278, 0, 281, 282, 0, 647, 1158, 0, 671, 58,
	471, 387, 211, 0, 556, 0, 560, 0, 1110, 1175,
	0, 0, 0, 1156, 0, 0, 0, 0, 950, 0,
	49, 54, 59, 60, 0, 0, 0, 0, 0, 436,
	0, 446, 57, 0, 0, 670, 0, 668, 722, 0,
	0, 1179, 1179, 0, 0, 0, 0, 1179, 1179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 815, 817, 818, 821, 822, 823,
	861, 862, 863, 824, 858, 859, 860, 825, 0, 0,
	0, 1096, 1097, 854, 0, 0, 0, 0, 0, 0,
	0, 786, 600, 0, 602, 279, 640, 0, 477, 0,
	672, 466, 548, 0, 0, 0, 0, 1164, 1163, 1152,
	0, 1153, 1161, 1166, 0, 1169, 0, 942, 36, 0,
	56, 0, 61, 0, 0, 0, 0, 0, 0, 0,
	593, 716, 721, 723, 724, 0, 0, 727, 728, 729,
	730, 0, 0, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 758, 759, 760, 761, 762, 763, 743,
	744, 745, 746, 747, 748, 755, 0, 0, 752, 0,
	0, 0, 1001, 849, 0, 0, 793, 795, 796, 797,
	798, 799, 794, 0, 0, 0, 0, 785, 787, 830,
	0, 601, 639, 648, 649, 477, 385, 557, 558, 561,
	562, 1157, 0, 0, 27, 0, 0, 53, 0, 62,
	0, 64, 65, 0, 0, 449, 439, 705, 0, 0,
	711, 0, 717, 725, 726, 731, 732, 749, 0, 0,
	751, 0, 0, 857, 0, 829, 837, 850, 0, 0,
	640, 640, 640, 640, 0, 831, 641, 1179, 0, 0,
	645, 646, 650, 1167, 1170, 678, 0, 37, 0, 39,
	41, 42, 803, 50, 51, 55, 63, 675, 0, 448,
	0, 683, 0, 0, 0, 0, 0, 714, 0, 756,
	757, 750, 753, 754, 827, 836, 838, 839, 0, 851,
	852, 853, 855, 780, 781, 782, 783, 0, 0, 643,
	0, 28, 29, 0, 38, 0, 0, 0, 450, 685,
	0, 706, 0, 0, 0, 0, 0, 0, 0, 828,
	840, 0, 841, 0, 0, 0, 784, 642, 644, 0,
	0, 40, 804, 0, 682, 0, 716, 707, 0, 709,
	0, 0, 0, 0, 842, 844, 845, 0, 0, 843,
	30, 31, 32, 0, 0, 0, 687, 0, 703, 708,
	710, 0, 715, 713, 846, 848, 847, 805, 676, 0,
	686, 0, 699, 684, 0, 712, 0, 688, -2, 0,
	704, 0, 689, -2, 0, 697, 0, 0, 0, 690,
	698, 0, 693, 0, 0, 0, 677, 692, 0, -2,
	700, 0, 0, 694, -2, 0, 702, 701,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 121, 113, 3,
	64, 65, 118, 116, 131, 117, 130, 119, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 501,
	101, 100, 102, 3, 502, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 123, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 503, 112, 504, 124,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 93, 94,
	95, 96, 97, 98, 99, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 114, 115, 120, 122, 125, 126,
	127, 128, 129, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:548
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:554
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:581
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:585
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:591
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:603
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:614
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:618
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:624
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:628
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:634
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:641
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:650
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:654
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:658
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:671
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:677
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:686
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:697
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:701
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:707
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:711
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:717
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:721
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:727
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:751
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//        	yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:770
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:774
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:778
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:783
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:787
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:795
		{
			yyVAL.str = ""
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:799
		{
			yyVAL.str = yyDollar[3].str
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:804
		{
			yyVAL.str = "\n"
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:808
		{
			yyVAL.str = yyDollar[3].str
		}
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:817
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:841
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:845
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:851
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:857
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:875
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:892
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:915
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:919
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:923
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:928
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:932
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:951
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:962
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:975
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:979
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:989
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1002
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1015
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1021
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1027
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1034
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1042
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1051
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1055
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1059
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1063
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1067
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1071
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1078
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1082
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1088
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1095
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1104
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1108
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1114
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1118
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1122
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1126
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1130
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1134
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1138
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1142
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1146
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1150
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1154
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1158
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1162
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1166
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1170
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1174
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1178
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1182
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1186
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1190
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1194
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1198
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1202
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1206
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1210
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1214
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1218
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1222
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1226
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1230
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1234
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1238
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1242
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1246
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1250
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1254
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1258
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1262
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1266
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1270
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1274
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1302
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1314
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1320
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1328
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1332
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1336
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1340
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1344
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1350
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1354
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1358
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1364
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1370
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1374
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1381
		{
			yyVAL.str = yyDollar[3].str
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1387
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1391
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1397
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1405
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1414
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1422
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1430
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1453
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1476
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1483
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1490
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1498
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1505
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1521
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1525
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1529
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1535
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1539
		{
			yyVAL.str = yyDollar[1].str
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1546
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1557
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1568
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1572
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1576
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1580
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1584
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1588
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1592
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1596
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1600
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1606
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1618
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1623
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1628
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1634
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1641
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1647
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1654
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1661
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1671
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1678
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1689
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1704
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1710
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1722
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1738
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1742
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1757
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1763
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1767
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1783
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1791
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1799
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1809
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1847
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1851
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1863
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1868
		{
			yyVAL.str = "true"
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1869
		{
			yyVAL.str = "false"
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1870
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1875
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1886
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1898
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1909
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1913
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1918
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1922
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1931
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1947
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1951
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1955
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1959
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1963
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1967
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1971
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1975
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1979
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1983
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1987
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1991
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2013
		{
			yyVAL.item = nil
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2018
		{
			yyVAL.item = nil
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2046
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2055
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2061
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2066
		{
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2070
		{
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2075
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2088
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2092
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2096
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2100
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2104
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2108
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2112
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2116
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2122
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2130
		{
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2132
		{
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2141
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2151
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2160
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2164
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2168
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2180
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2186
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2192
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2202
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2214
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2218
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2249
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2253
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2258
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2262
		{
			yyVAL.str = yyDollar[2].str
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2268
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2281
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2285
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2306
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2310
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2319
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2323
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2327
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2364
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2368
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2374
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2383
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2392
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2402
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2414
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2420
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2433
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2440
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2469
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2480
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2484
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2490
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2495
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2502
		{
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2504
		{
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2507
		{
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2516
		{
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2520
		{
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2534
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2541
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2547
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2555
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2562
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2569
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2588
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2592
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2596
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2602
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2611
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2615
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2621
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2625
		{
			yyVAL.str = yyDollar[3].str
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2631
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2635
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2641
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2646
		{
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2650
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2657
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2661
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2668
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2673
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2677
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2683
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2687
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2693
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2697
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2706
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2719
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2733
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2751
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2770
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2776
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2783
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2787
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2800
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2804
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2809
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2813
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2820
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2825
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2832
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2838
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2842
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2846
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2850
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2854
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2858
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2880
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2884
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2890
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2902
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2911
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2917
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2925
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2930
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2934
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2940
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2946
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2950
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2961
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2965
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2969
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2980
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2986
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2990
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3000
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3010
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3020
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3032
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3040
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3048
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3057
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3065
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3073
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3081
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3089
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3097
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3113
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3131
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3142
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3160
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3168
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3177
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3190
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3195
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3199
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3205
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3209
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3215
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3219
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3223
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3227
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3232
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3240
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3246
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3254
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3258
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3271
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3280
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3290
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3299
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3309
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3313
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3323
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3327
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3331
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3335
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3351
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3357
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3361
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3365
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3375
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3381
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3385
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3391
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3395
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3401
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3405
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3415
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3431
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3437
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3450
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3466
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3482
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3498
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3511
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3527
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3543
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3562
		{
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3563
		{
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3567
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3579
		{
			yyVAL.str = ""
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3583
		{
			yyVAL.str = yyDollar[1].str
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3587
		{
			yyVAL.str = yyDollar[2].str
		}
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3596
		{
			yyVAL.str = ""
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3600
		{
			yyVAL.str = yyDollar[1].str
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3604
		{
			yyVAL.str = yyDollar[2].str
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3608
		{
			yyVAL.str = yyDollar[1].str
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3612
		{
			yyVAL.str = yyDollar[2].str
		}
	case 592:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3646
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3656
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3667
		{
		}
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3672
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3684
		{
			yyVAL.str = yyDollar[1].str
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3690
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3700
		{
			yyVAL.str = yyDollar[1].str
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3706
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3713
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3719
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3727
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3733
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3740
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3748
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3754
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3763
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3775
		{
			yyVAL.str = yyDollar[1].str
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3780
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3786
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3794
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3900
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3904
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3910
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3920
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3924
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3930
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3944
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3948
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3953
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3957
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3963
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3970
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3976
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3989
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3998
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4002
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4008
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4025
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4029
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4033
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4037
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4043
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4066
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4088
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4092
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4096
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4100
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4104
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4110
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4114
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4120
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4125
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4130
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4134
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4138
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4142
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4146
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4152
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4166
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4170
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4179
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4185
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4189
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4195
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4199
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4203
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4208
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4212
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4218
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4229
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4240
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4247
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4255
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4267
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4279
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "format" || strings.ToLower(yyDollar[11].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       strings.ToLower(yyDollar[9].str),
				JsonData:     strings.ToLower(yyDollar[13].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-18 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4292
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" || strings.ToLower(yyDollar[11].str) != "format" || strings.ToLower(yyDollar[15].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str, yyDollar[15].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       strings.ToLower(yyDollar[13].str),
				JsonData:     strings.ToLower(yyDollar[17].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4307
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4318
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4322
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4327
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4331
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4345
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4358
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4364
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4368
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4374
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4383
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4397
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4403
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4407
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4413
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4420
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4429
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4433
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4438
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4442
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4447
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4451
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4456
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4460
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4470
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4474
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4485
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4493
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4501
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4509
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4520
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4530
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4540
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4544
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4549
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4553
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4558
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4562
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4568
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4572
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4576
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4582
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4586
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4590
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4594
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4598
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4602
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4606
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4610
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4614
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4618
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4622
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4626
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4630
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4634
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4638
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4642
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4646
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4650
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4654
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4658
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4662
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4666
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4670
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4674
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4678
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4682
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4686
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4690
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4694
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4701
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4705
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4711
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4716
		{
			yyVAL.str = ""
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4720
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4724
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4730
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4734
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4738
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4742
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4746
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4750
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4764
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4768
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4777
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4782
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4788
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4795
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4799
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4805
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4809
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4815
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4825
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4831
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4840
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4849
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4872
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4881
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4891
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4899
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4905
		{
			yyVAL.str = ""
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4909
		{
			yyVAL.str = yyDollar[1].str
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4919
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4925
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4931
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4945
		{
			yyVAL.str = ""
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:4952
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4958
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4962
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4966
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4977
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4981
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4985
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4994
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5000
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5004
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5010
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5014
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5022
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5026
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5030
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5034
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5038
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5042
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5046
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5050
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5054
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5058
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5062
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5077
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5081
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5086
		{
			yyVAL.str = ""
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5090
		{
			yyVAL.str = yyDollar[1].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5096
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5100
		{
			yyVAL.str = yyDollar[2].str
		}
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5106
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5118
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5125
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5132
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5139
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5146
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5155
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5161
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5167
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5171
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5175
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5179
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5183
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5188
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5195
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5199
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5203
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5212
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5217
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5221
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5237
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5243
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5247
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5251
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5255
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5259
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5263
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5267
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5271
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5275
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5279
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5283
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5287
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5291
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5297
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5301
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5305
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5309
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5313
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5317
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5321
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5325
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5329
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5333
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5337
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5341
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5346
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5354
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5362
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5371
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5375
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5379
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5383
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5387
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5396
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5405
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5411
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5415
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5421
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5431
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5448
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5465
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5478
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5491
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5503
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5517
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5532
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5547
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5564
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5579
		{
		}
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5585
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5594
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5602
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5610
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5619
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5628
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5637
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5646
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5655
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5664
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5673
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5682
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5691
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5700
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5709
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5725
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5733
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5741
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5749
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5757
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5766
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5774
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5783
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5792
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5800
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5808
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5817
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5827
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5848
		{
			yyVAL.str = yyDollar[1].str
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5884
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5896
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5910
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5918
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5925
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5932
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5944
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5952
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5963
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5972
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5981
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5989
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5999
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6007
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6015
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6029
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6039
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6058
		{
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6060
		{
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6101
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6111
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6115
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6119
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6125
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6134
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6140
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6144
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6151
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6155
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6159
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6167
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6171
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6175
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6179
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6185
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6189
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6193
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6197
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6201
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6205
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6209
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6213
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6217
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6221
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6229
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6233
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6237
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6241
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6245
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6249
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6253
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6257
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6263
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6267
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6273
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6277
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6284
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6288
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6292
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6298
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6302
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6306
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6310
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6314
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6318
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6322
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6328
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6332
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6336
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6340
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6346
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6350
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6363
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6368
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6372
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6376
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6380
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6394
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6398
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6412
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6418
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6429
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6434
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6440
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6452
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6464
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6476
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6489
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6502
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6515
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6528
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6541
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6554
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6567
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6580
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6593
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6606
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6621
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6644
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6681
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6729
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6746
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6758
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6773
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6793
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6813
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6829
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6842
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6855
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6868
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6881
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6893
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6905
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6917
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6929
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6941
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6953
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6965
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6977
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6989
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7002
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7015
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7032
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7055
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7060
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7066
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7073
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7077
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7082
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7086
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7092
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7098
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7105
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7112
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7121
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7128
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7135
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7144
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7148
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7152
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7158
		{
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7160
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7170
		{
			yyVAL.str = ""
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7174
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

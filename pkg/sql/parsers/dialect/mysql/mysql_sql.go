// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const ILIKE = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_BINARY = 57459
const INTERVAL = 57460
const BEGIN = 57461
const START = 57462
const TRANSACTION = 57463
const COMMIT = 57464
const ROLLBACK = 57465
const WORK = 57466
const CONSISTENT = 57467
const SNAPSHOT = 57468
const CHAIN = 57469
const NO = 57470
const RELEASE = 57471
const PRIORITY = 57472
const QUICK = 57473
const BIT = 57474
const TINYINT = 57475
const SMALLINT = 57476
const MEDIUMINT = 57477
const INT = 57478
const INTEGER = 57479
const BIGINT = 57480
const INTNUM = 57481
const REAL = 57482
const DOUBLE = 57483
const FLOAT_TYPE = 57484
const DECIMAL = 57485
const NUMERIC = 57486
const DECIMAL_VALUE = 57487
const TIME = 57488
const TIMESTAMP = 57489
const DATETIME = 57490
const YEAR = 57491
const CHAR = 57492
const VARCHAR = 57493
const BOOL = 57494
const CHARACTER = 57495
const VARBINARY = 57496
const NCHAR = 57497
const TEXT = 57498
const TINYTEXT = 57499
const MEDIUMTEXT = 57500
const LONGTEXT = 57501
const BLOB = 57502
const TINYBLOB = 57503
const MEDIUMBLOB = 57504
const LONGBLOB = 57505
const JSON = 57506
const ENUM = 57507
const UUID = 57508
const GEOMETRY = 57509
const POINT = 57510
const LINESTRING = 57511
const POLYGON = 57512
const GEOMETRYCOLLECTION = 57513
const MULTIPOINT = 57514
const MULTILINESTRING = 57515
const MULTIPOLYGON = 57516
const INT1 = 57517
const INT2 = 57518
const INT3 = 57519
const INT4 = 57520
const INT8 = 57521
const S3OPTION = 57522
const SQL_SMALL_RESULT = 57523
const SQL_BIG_RESULT = 57524
const SQL_BUFFER_RESULT = 57525
const LOW_PRIORITY = 57526
const HIGH_PRIORITY = 57527
const DELAYED = 57528
const CREATE = 57529
const ALTER = 57530
const DROP = 57531
const RENAME = 57532
const ANALYZE = 57533
const ADD = 57534
const RETURNS = 57535
const SCHEMA = 57536
const TABLE = 57537
const INDEX = 57538
const VIEW = 57539
const TO = 57540
const IGNORE = 57541
const IF = 57542
const PRIMARY = 57543
const COLUMN = 57544
const CONSTRAINT = 57545
const SPATIAL = 57546
const FULLTEXT = 57547
const FOREIGN = 57548
const KEY_BLOCK_SIZE = 57549
const SHOW = 57550
const DESCRIBE = 57551
const EXPLAIN = 57552
const DATE = 57553
const ESCAPE = 57554
const REPAIR = 57555
const OPTIMIZE = 57556
const TRUNCATE = 57557
const MAXVALUE = 57558
const PARTITION = 57559
const REORGANIZE = 57560
const LESS = 57561
const THAN = 57562
const PROCEDURE = 57563
const TRIGGER = 57564
const STATUS = 57565
const VARIABLES = 57566
const ROLE = 57567
const PROXY = 57568
const AVG_ROW_LENGTH = 57569
const STORAGE = 57570
const DISK = 57571
const MEMORY = 57572
const CHECKSUM = 57573
const COMPRESSION = 57574
const DATA = 57575
const DIRECTORY = 57576
const DELAY_KEY_WRITE = 57577
const ENCRYPTION = 57578
const ENGINE = 57579
const MAX_ROWS = 57580
const MIN_ROWS = 57581
const PACK_KEYS = 57582
const ROW_FORMAT = 57583
const STATS_AUTO_RECALC = 57584
const STATS_PERSISTENT = 57585
const STATS_SAMPLE_PAGES = 57586
const DYNAMIC = 57587
const COMPRESSED = 57588
const REDUNDANT = 57589
const COMPACT = 57590
const FIXED = 57591
const COLUMN_FORMAT = 57592
const AUTO_RANDOM = 57593
const RESTRICT = 57594
const CASCADE = 57595
const ACTION = 57596
const PARTIAL = 57597
const SIMPLE = 57598
const CHECK = 57599
const ENFORCED = 57600
const RANGE = 57601
const LIST = 57602
const ALGORITHM = 57603
const LINEAR = 57604
const PARTITIONS = 57605
const SUBPARTITION = 57606
const SUBPARTITIONS = 57607
const CLUSTER = 57608
const TYPE = 57609
const ANY = 57610
const SOME = 57611
const EXTERNAL = 57612
const LOCALFILE = 57613
const URL = 57614
const PREPARE = 57615
const DEALLOCATE = 57616
const RESET = 57617
const EXTENSION = 57618
const PROPERTIES = 57619
const PARSER = 57620
const VISIBLE = 57621
const INVISIBLE = 57622
const BTREE = 57623
const HASH = 57624
const RTREE = 57625
const BSI = 57626
const ZONEMAP = 57627
const LEADING = 57628
const BOTH = 57629
const TRAILING = 57630
const UNKNOWN = 57631
const EXPIRE = 57632
const ACCOUNT = 57633
const ACCOUNTS = 57634
const UNLOCK = 57635
const DAY = 57636
const NEVER = 57637
const PUMP = 57638
const MYSQL_COMPATBILITY_MODE = 57639
const SECOND = 57640
const ASCII = 57641
const COALESCE = 57642
const COLLATION = 57643
const HOUR = 57644
const MICROSECOND = 57645
const MINUTE = 57646
const MONTH = 57647
const QUARTER = 57648
const REPEAT = 57649
const REVERSE = 57650
const ROW_COUNT = 57651
const WEEK = 57652
const REVOKE = 57653
const FUNCTION = 57654
const PRIVILEGES = 57655
const TABLESPACE = 57656
const EXECUTE = 57657
const SUPER = 57658
const GRANT = 57659
const OPTION = 57660
const REFERENCES = 57661
const REPLICATION = 57662
const SLAVE = 57663
const CLIENT = 57664
const USAGE = 57665
const RELOAD = 57666
const FILE = 57667
const TEMPORARY = 57668
const ROUTINE = 57669
const EVENT = 57670
const SHUTDOWN = 57671
const NULLX = 57672
const AUTO_INCREMENT = 57673
const APPROXNUM = 57674
const SIGNED = 57675
const UNSIGNED = 57676
const ZEROFILL = 57677
const ENGINES = 57678
const LOW_CARDINALITY = 57679
const ADMIN_NAME = 57680
const RANDOM = 57681
const SUSPEND = 57682
const ATTRIBUTE = 57683
const HISTORY = 57684
const REUSE = 57685
const CURRENT = 57686
const OPTIONAL = 57687
const FAILED_LOGIN_ATTEMPTS = 57688
const PASSWORD_LOCK_TIME = 57689
const UNBOUNDED = 57690
const SECONDARY = 57691
const USER = 57692
const IDENTIFIED = 57693
const CIPHER = 57694
const ISSUER = 57695
const X509 = 57696
const SUBJECT = 57697
const SAN = 57698
const REQUIRE = 57699
const SSL = 57700
const NONE = 57701
const PASSWORD = 57702
const MAX_QUERIES_PER_HOUR = 57703
const MAX_UPDATES_PER_HOUR = 57704
const MAX_CONNECTIONS_PER_HOUR = 57705
const MAX_USER_CONNECTIONS = 57706
const FORMAT = 57707
const VERBOSE = 57708
const CONNECTION = 57709
const TRIGGERS = 57710
const PROFILES = 57711
const LOAD = 57712
const INFILE = 57713
const TERMINATED = 57714
const OPTIONALLY = 57715
const ENCLOSED = 57716
const ESCAPED = 57717
const STARTING = 57718
const LINES = 57719
const ROWS = 57720
const IMPORT = 57721
const MODUMP = 57722
const OVER = 57723
const PRECEDING = 57724
const FOLLOWING = 57725
const GROUPS = 57726
const DATABASES = 57727
const TABLES = 57728
const EXTENDED = 57729
const FULL = 57730
const PROCESSLIST = 57731
const FIELDS = 57732
const COLUMNS = 57733
const OPEN = 57734
const ERRORS = 57735
const WARNINGS = 57736
const INDEXES = 57737
const SCHEMAS = 57738
const NODE = 57739
const LOCKS = 57740
const TABLE_NUMBER = 57741
const COLUMN_NUMBER = 57742
const TABLE_VALUES = 57743
const NAMES = 57744
const GLOBAL = 57745
const SESSION = 57746
const ISOLATION = 57747
const LEVEL = 57748
const READ = 57749
const WRITE = 57750
const ONLY = 57751
const REPEATABLE = 57752
const COMMITTED = 57753
const UNCOMMITTED = 57754
const SERIALIZABLE = 57755
const LOCAL = 57756
const EVENTS = 57757
const PLUGINS = 57758
const CURRENT_TIMESTAMP = 57759
const DATABASE = 57760
const CURRENT_TIME = 57761
const LOCALTIME = 57762
const LOCALTIMESTAMP = 57763
const UTC_DATE = 57764
const UTC_TIME = 57765
const UTC_TIMESTAMP = 57766
const REPLACE = 57767
const CONVERT = 57768
const SEPARATOR = 57769
const TIMESTAMPDIFF = 57770
const CURRENT_DATE = 57771
const CURRENT_USER = 57772
const CURRENT_ROLE = 57773
const SECOND_MICROSECOND = 57774
const MINUTE_MICROSECOND = 57775
const MINUTE_SECOND = 57776
const HOUR_MICROSECOND = 57777
const HOUR_SECOND = 57778
const HOUR_MINUTE = 57779
const DAY_MICROSECOND = 57780
const DAY_SECOND = 57781
const DAY_MINUTE = 57782
const DAY_HOUR = 57783
const YEAR_MONTH = 57784
const SQL_TSI_HOUR = 57785
const SQL_TSI_DAY = 57786
const SQL_TSI_WEEK = 57787
const SQL_TSI_MONTH = 57788
const SQL_TSI_QUARTER = 57789
const SQL_TSI_YEAR = 57790
const SQL_TSI_SECOND = 57791
const SQL_TSI_MINUTE = 57792
const RECURSIVE = 57793
const CONFIG = 57794
const DRAINER = 57795
const MATCH = 57796
const AGAINST = 57797
const BOOLEAN = 57798
const LANGUAGE = 57799
const WITH = 57800
const QUERY = 57801
const EXPANSION = 57802
const ADDDATE = 57803
const BIT_AND = 57804
const BIT_OR = 57805
const BIT_XOR = 57806
const CAST = 57807
const COUNT = 57808
const APPROX_COUNT_DISTINCT = 57809
const APPROX_PERCENTILE = 57810
const CURDATE = 57811
const CURTIME = 57812
const DATE_ADD = 57813
const DATE_SUB = 57814
const EXTRACT = 57815
const GROUP_CONCAT = 57816
const MAX = 57817
const MID = 57818
const MIN = 57819
const NOW = 57820
const POSITION = 57821
const SESSION_USER = 57822
const STD = 57823
const STDDEV = 57824
const MEDIAN = 57825
const STDDEV_POP = 57826
const STDDEV_SAMP = 57827
const SUBDATE = 57828
const SUBSTR = 57829
const SUBSTRING = 57830
const SUM = 57831
const SYSDATE = 57832
const SYSTEM_USER = 57833
const TRANSLATE = 57834
const TRIM = 57835
const VARIANCE = 57836
const VAR_POP = 57837
const VAR_SAMP = 57838
const AVG = 57839
const ARROW = 57840
const ROW = 57841
const OUTFILE = 57842
const HEADER = 57843
const MAX_FILE_SIZE = 57844
const FORCE_QUOTE = 57845
const PARALLEL = 57846
const UNUSED = 57847
const BINDINGS = 57848
const DO = 57849
const DECLARE = 57850
const KILL = 57851
const QUERY_RESULT = 57852

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8455

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 93,
	21, 543,
	-2, 524,
	-1, 101,
	213, 740,
	-2, 787,
	-1, 120,
	42, 374,
	213, 374,
	240, 381,
	241, 381,
	412, 374,
	-2, 404,
	-1, 431,
	289, 94,
	388, 94,
	-2, 1531,
	-1, 490,
	67, 1155,
	-2, 1671,
	-1, 491,
	67, 1173,
	-2, 1642,
	-1, 495,
	67, 1174,
	-2, 1670,
	-1, 517,
	67, 1088,
	-2, 1722,
	-1, 518,
	67, 1089,
	-2, 1721,
	-1, 519,
	67, 1090,
	-2, 1711,
	-1, 520,
	67, 1686,
	-2, 1706,
	-1, 521,
	67, 1687,
	-2, 1707,
	-1, 522,
	67, 1688,
	-2, 1713,
	-1, 523,
	67, 1689,
	-2, 1696,
	-1, 524,
	67, 1690,
	-2, 1704,
	-1, 525,
	67, 1691,
	-2, 1714,
	-1, 526,
	67, 1692,
	-2, 1715,
	-1, 527,
	67, 1693,
	-2, 1720,
	-1, 528,
	67, 1694,
	-2, 1725,
	-1, 529,
	67, 1695,
	-2, 1726,
	-1, 531,
	67, 1152,
	-2, 1523,
	-1, 538,
	67, 1161,
	-2, 1549,
	-1, 542,
	67, 1165,
	-2, 1588,
	-1, 543,
	67, 1166,
	-2, 1666,
	-1, 551,
	67, 1176,
	-2, 1651,
	-1, 553,
	67, 1178,
	-2, 1661,
	-1, 554,
	67, 1179,
	-2, 1684,
	-1, 565,
	67, 1070,
	-2, 1716,
	-1, 566,
	67, 1071,
	-2, 1717,
	-1, 567,
	67, 1072,
	-2, 1718,
	-1, 574,
	21, 544,
	-2, 507,
	-1, 629,
	407, 404,
	408, 404,
	-2, 375,
	-1, 674,
	103, 1523,
	114, 1523,
	134, 1523,
	-2, 1316,
	-1, 714,
	21, 544,
	-2, 507,
	-1, 814,
	21, 543,
	-2, 977,
	-1, 1139,
	67, 1223,
	-2, 1668,
	-1, 1140,
	67, 1224,
	-2, 1669,
	-1, 1301,
	1, 766,
	68, 766,
	528, 766,
	-2, 773,
	-1, 1430,
	134, 1326,
	-2, 1324,
	-1, 1432,
	134, 668,
	-2, 1321,
	-1, 1433,
	134, 669,
	-2, 1322,
	-1, 1729,
	68, 1302,
	135, 1302,
	-2, 1653,
	-1, 1730,
	68, 1298,
	135, 1298,
	-2, 1652,
	-1, 1731,
	68, 1280,
	135, 1280,
	-2, 1639,
	-1, 1732,
	68, 1281,
	135, 1281,
	-2, 1644,
	-1, 1733,
	68, 1282,
	135, 1282,
	-2, 1576,
	-1, 1734,
	68, 1283,
	135, 1283,
	-2, 1570,
	-1, 1735,
	68, 1284,
	135, 1284,
	-2, 1514,
	-1, 1736,
	68, 1285,
	135, 1285,
	-2, 1641,
	-1, 1737,
	68, 1286,
	135, 1286,
	-2, 1574,
	-1, 1738,
	68, 1287,
	135, 1287,
	-2, 1569,
	-1, 1739,
	68, 1288,
	135, 1288,
	-2, 1562,
	-1, 1741,
	68, 1291,
	135, 1291,
	-2, 1684,
	-1, 1742,
	68, 1271,
	135, 1271,
	-2, 1671,
	-1, 1743,
	68, 1300,
	135, 1300,
	-2, 1642,
	-1, 1744,
	68, 1300,
	135, 1300,
	-2, 1670,
	-1, 1745,
	68, 1300,
	135, 1300,
	-2, 1532,
	-1, 1746,
	68, 1298,
	135, 1298,
	-2, 1661,
	-1, 1747,
	68, 1295,
	135, 1295,
	-2, 1554,
	-1, 1748,
	67, 1253,
	68, 1253,
	135, 1253,
	350, 1253,
	351, 1253,
	352, 1253,
	-2, 1513,
	-1, 1749,
	67, 1254,
	68, 1254,
	135, 1254,
	350, 1254,
	351, 1254,
	352, 1254,
	-2, 1515,
	-1, 1750,
	67, 1257,
	68, 1257,
	135, 1257,
	350, 1257,
	351, 1257,
	352, 1257,
	-2, 1643,
	-1, 1751,
	67, 1259,
	68, 1259,
	135, 1259,
	350, 1259,
	351, 1259,
	352, 1259,
	-2, 1626,
	-1, 1752,
	67, 1261,
	68, 1261,
	135, 1261,
	350, 1261,
	351, 1261,
	352, 1261,
	-2, 1575,
	-1, 1753,
	67, 1263,
	68, 1263,
	135, 1263,
	350, 1263,
	351, 1263,
	352, 1263,
	-2, 1558,
	-1, 1754,
	67, 1264,
	68, 1264,
	135, 1264,
	350, 1264,
	351, 1264,
	352, 1264,
	-2, 1559,
	-1, 1755,
	67, 1266,
	68, 1266,
	135, 1266,
	350, 1266,
	351, 1266,
	352, 1266,
	-2, 1512,
	-1, 1756,
	68, 1305,
	135, 1305,
	350, 1305,
	351, 1305,
	352, 1305,
	-2, 1537,
	-1, 1757,
	68, 1305,
	135, 1305,
	350, 1305,
	351, 1305,
	352, 1305,
	-2, 1550,
	-1, 1758,
	68, 1308,
	135, 1308,
	350, 1308,
	351, 1308,
	352, 1308,
	-2, 1533,
	-1, 1759,
	68, 1305,
	135, 1305,
	350, 1305,
	351, 1305,
	352, 1305,
	-2, 1611,
	-1, 1772,
	1, 767,
	68, 767,
	528, 767,
	-2, 773,
	-1, 1831,
	21, 543,
	-2, 635,
	-1, 2009,
	65, 450,
	135, 450,
	-2, 882,
	-1, 2311,
	87, 773,
	130, 773,
	167, 773,
	170, 773,
	-2, 830,
	-1, 2313,
	274, 945,
	-2, 924,
	-1, 2324,
	87, 773,
	130, 773,
	167, 773,
	170, 773,
	-2, 830,
	-1, 2327,
	65, 450,
	135, 450,
	-2, 883,
	-1, 2379,
	87, 773,
	130, 773,
	167, 773,
	170, 773,
	-2, 831,
	-1, 2407,
	274, 945,
	-2, 925,
	-1, 2816,
	68, 802,
	135, 802,
	-2, 773,
	-1, 2820,
	68, 802,
	135, 802,
	-2, 773,
	-1, 2834,
	68, 806,
	135, 806,
	-2, 773,
	-1, 2839,
	68, 807,
	135, 807,
	-2, 773,
}

const yyPrivate = 57344

const yyLast = 30319

var yyAct = [...]int{
	462, 2380, 2820, 1206, 2828, 2819, 441, 1119, 2796, 2668,
	2376, 443, 2785, 2743, 464, 2700, 2730, 2419, 2729, 1828,
	2558, 2565, 2628, 2608, 2374, 2359, 1115, 1354, 1388, 842,
	1719, 2569, 1028, 2549, 2616, 2258, 488, 2375, 2429, 139,
	139, 2351, 1824, 2457, 2357, 139, 378, 385, 2259, 2307,
	385, 2197, 980, 2408, 673, 2449, 1308, 2012, 575, 2378,
	2193, 2480, 1122, 142, 1416, 1061, 138, 138, 2032, 2428,
	1859, 1310, 369, 943, 2295, 1422, 1823, 1376, 390, 2317,
	1346, 2198, 2202, 445, 2256, 1942, 1900, 1622, 433, 1867,
	2250, 570, 2053, 435, 1983, 1868, 1727, 2233, 1260, 2172,
	2169, 1781, 396, 1725, 610, 2167, 2073, 1899, 708, 1423,
	440, 1618, 1427, 1430, 2191, 1277, 1424, 2118, 2067, 1369,
	1617, 1417, 2031, 1349, 383, 31, 1258, 957, 570, 1812,
	1985, 1980, 382, 19, 680, 30, 1263, 677, 139, 1773,
	1780, 1285, 959, 681, 42, 379, 8, 380, 6, 1651,
	381, 7, 1347, 3, 702, 2383, 1320, 1113, 1297, 1619,
	444, 878, 1052, 1723, 1765, 710, 92, 1862, 1373, 970,
	701, 1118, 1268, 1319, 1318, 633, 1629, 401, 1169, 432,
	1104, 1707, 1153, 1633, 452, 374, 725, 675, 1411, 42,
	1393, 923, 1826, 665, 1112, 1833, 1334, 1296, 703, 1007,
	16, 572, 371, 609, 398, 436, 1175, 399, 1321, 1176,
	9, 981, 966, 666, 384, 1020, 4, 1051, 131, 2111,
	941, 607, 2111, 1636, 625, 1902, 128, 1626, 134, 133,
	2546, 574, 2450, 1860, 2257, 1281, 2651, 837, 1419, 573,
	843, 2366, 2659, 132, 132, 132, 442, 583, 2367, 745,
	132, 132, 393, 38, 122, 102, 1887, 1623, 31, 132,
	1009, 38, 122, 102, 388, 1895, 19, 2686, 30, 367,
	132, 394, 38, 122, 102, 1205, 132, 42, 132, 8,
	91, 6, 2141, 1196, 7, 1634, 2266, 700, 132, 132,
	127, 38, 122, 102, 778, 779, 678, 115, 1071, 1982,
	1064, 129, 129, 993, 569, 994, 91, 129, 129, 1863,
	647, 1010, 2088, 2718, 1068, 643, 129, 1105, 977, 1109,
	135, 77, 1089, 760, 91, 761, 772, 129, 1357, 1358,
	1330, 2716, 2466, 129, 560, 1070, 559, 561, 562, 584,
	563, 564, 1057, 1108, 984, 129, 129, 983, 986, 987,
	1943, 1981, 1121, 763, 986, 987, 777, 2733, 2734, 2652,
	2653, 2704, 2705, 2458, 2459, 2460, 2461, 2455, 395, 2260,
	2074, 139, 718, 2551, 2551, 2075, 2554, 2076, 2452, 2260,
	1882, 753, 717, 755, 719, 1370, 2564, 385, 385, 2658,
	139, 1366, 1124, 2274, 1362, 1100, 123, 124, 716, 125,
	126, 765, 2296, 766, 648, 686, 685, 687, 1630, 2372,
	2303, 756, 1805, 1110, 576, 1764, 728, 736, 2183, 758,
	2173, 2472, 1704, 1975, 477, 93, 713, 715, 1192, 1988,
	429, 768, 1189, 430, 1107, 684, 1191, 1188, 1190, 1194,
	1195, 2181, 728, 2106, 1193, 2426, 783, 784, 785, 782,
	816, 2465, 1892, 101, 2104, 130, 748, 2467, 1252, 1251,
	774, 2661, 2662, 650, 101, 121, 130, 368, 75, 2028,
	93, 1807, 712, 2475, 120, 775, 776, 749, 759, 2369,
	1196, 1872, 2711, 689, 387, 120, 114, 113, 386, 975,
	2732, 1123, 44, 2178, 2179, 1211, 740, 764, 2531, 2570,
	751, 682, 1640, 1642, 1643, 2813, 714, 2720, 2180, 2670,
	2829, 1635, 754, 757, 770, 771, 2760, 2753, 2177, 42,
	42, 2524, 690, 1003, 2715, 965, 995, 1131, 1134, 1135,
	2630, 649, 2693, 769, 2666, 2667, 750, 2670, 1132, 2493,
	1106, 2807, 1063, 676, 678, 2492, 762, 434, 2722, 2723,
	116, 117, 118, 2676, 679, 1994, 767, 1016, 93, 1015,
	683, 721, 722, 979, 978, 997, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1199, 1200, 1201,
	1202, 1203, 1204, 1197, 1198, 2519, 940, 942, 85, 1624,
	730, 729, 119, 738, 86, 964, 1624, 1624, 963, 737,
	2824, 733, 734, 2830, 752, 1996, 1997, 1998, 1999, 610,
	2515, 2175, 2797, 678, 2481, 2278, 730, 729, 2110, 2617,
	2618, 2619, 2621, 2620, 723, 1192, 2287, 709, 688, 1189,
	920, 2836, 1652, 1191, 1188, 1190, 1194, 1195, 822, 944,
	2660, 1193, 394, 786, 2055, 2057, 2548, 87, 1008, 1888,
	1005, 985, 815, 986, 987, 1840, 88, 37, 1627, 948,
	824, 2114, 945, 946, 947, 872, 949, 2109, 570, 570,
	570, 986, 987, 1032, 1032, 952, 951, 982, 2788, 950,
	1637, 745, 830, 39, 389, 1625, 573, 2163, 976, 1371,
	385, 942, 1055, 1055, 818, 819, 820, 821, 1987, 1030,
	1030, 2174, 39, 2368, 2473, 2184, 1034, 1058, 103, 103,
	103, 2629, 1066, 1638, 2059, 103, 103, 2721, 2206, 954,
	1896, 39, 1837, 2823, 103, 1641, 2107, 1013, 1036, 780,
	1360, 2373, 1087, 2120, 2119, 103, 1365, 852, 853, 1363,
	1101, 103, 1361, 103, 1836, 1032, 1359, 1032, 718, 652,
	1133, 1991, 1992, 103, 103, 2654, 2655, 653, 1120, 2203,
	2206, 744, 739, 973, 2842, 1990, 1072, 604, 605, 606,
	989, 990, 644, 992, 1199, 1200, 1201, 1202, 1203, 1204,
	1197, 1198, 676, 2211, 89, 90, 94, 925, 2593, 972,
	2176, 2520, 2521, 2789, 2770, 927, 781, 2835, 1875, 2056,
	93, 93, 679, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 2487, 577, 574, 577, 1164,
	1165, 656, 1861, 1004, 1839, 1838, 967, 971, 971, 1174,
	956, 781, 2517, 1062, 1082, 1083, 2516, 1069, 1220, 1011,
	1012, 2010, 2207, 1125, 967, 1311, 967, 1311, 996, 1226,
	998, 988, 646, 2011, 991, 645, 1228, 1096, 1117, 2841,
	1680, 1233, 1234, 1679, 1879, 1095, 745, 42, 1014, 655,
	1821, 814, 570, 658, 657, 2832, 42, 2312, 1092, 1713,
	1091, 1023, 1024, 1025, 2207, 1396, 1026, 1027, 2814, 2200,
	2809, 2800, 1887, 2201, 2204, 1037, 1098, 1054, 1054, 1136,
	1001, 1002, 2799, 1006, 1049, 1822, 1073, 2774, 367, 1078,
	1056, 1050, 693, 698, 699, 1717, 1114, 2786, 2787, 1849,
	1274, 1977, 1849, 1086, 1767, 2745, 781, 1074, 1623, 2740,
	781, 1085, 781, 1094, 921, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 2833, 1093, 139, 2205, 1295, 1032, 1111, 1090,
	1301, 1102, 574, 1116, 1219, 1632, 610, 2810, 1632, 1309,
	2735, 2011, 1718, 1032, 1822, 1684, 2230, 1005, 1300, 1632,
	2724, 1292, 378, 1275, 1632, 1822, 1253, 1614, 955, 1167,
	1259, 1017, 2694, 783, 784, 785, 782, 1126, 1127, 1128,
	1129, 1130, 2746, 1155, 1335, 1335, 2477, 1005, 1267, 1005,
	1278, 928, 139, 1295, 1295, 1394, 1256, 1032, 1356, 2794,
	2594, 2596, 2597, 2598, 2595, 2302, 2691, 1333, 570, 1766,
	1032, 2690, 743, 2689, 1302, 1303, 1304, 2477, 1716, 1340,
	2688, 1171, 1172, 1173, 1265, 1266, 2678, 1849, 1208, 2747,
	1209, 1294, 1214, 1295, 1032, 1324, 1387, 139, 139, 2695,
	1299, 783, 784, 785, 782, 1398, 968, 1162, 1163, 139,
	2541, 1331, 1332, 2330, 1230, 1220, 1415, 2212, 702, 1337,
	1103, 1220, 1220, 2540, 1389, 1389, 1390, 2476, 2355, 695,
	696, 697, 644, 2477, 2078, 1248, 1389, 1404, 2477, 1270,
	2477, 1273, 2069, 742, 2050, 1432, 2139, 2477, 1341, 1342,
	1309, 1038, 1966, 2679, 1032, 2013, 368, 1317, 1207, 1890,
	1210, 1889, 703, 1964, 1221, 1962, 1881, 1282, 1298, 1367,
	1801, 1326, 1327, 1276, 1227, 2002, 1229, 2542, 1279, 1323,
	1960, 1372, 1283, 93, 1314, 1286, 1676, 93, 1384, 1433,
	1785, 1328, 1948, 1904, 2477, 2079, 1885, 1386, 93, 1877,
	1382, 2079, 1664, 1305, 969, 1329, 1615, 93, 1873, 1306,
	1645, 1822, 646, 1869, 743, 645, 1613, 1649, 1650, 1967,
	1401, 1338, 967, 1339, 1322, 711, 1316, 1291, 1298, 2216,
	1965, 1413, 1961, 1325, 1075, 919, 828, 1413, 731, 654,
	745, 1336, 711, 1784, 971, 1380, 1381, 1961, 798, 2101,
	968, 602, 2783, 1345, 1344, 1213, 1212, 1312, 1313, 781,
	781, 1368, 2771, 1785, 1714, 1114, 1870, 1920, 1688, 1391,
	1687, 1984, 1631, 42, 2680, 1874, 1279, 1079, 1383, 1663,
	1870, 678, 1279, 1279, 2231, 1685, 2226, 678, 1385, 1377,
	1378, 1379, 1692, 918, 915, 916, 917, 1402, 2003, 1925,
	2103, 1924, 1923, 1921, 783, 784, 785, 782, 1835, 1420,
	1785, 2112, 1911, 1621, 1425, 1611, 1426, 1612, 1431, 797,
	796, 806, 807, 799, 800, 801, 802, 803, 804, 805,
	798, 1713, 960, 1616, 1021, 781, 961, 781, 1682, 1632,
	433, 718, 1760, 2029, 1080, 1022, 1239, 1019, 969, 1662,
	1880, 1728, 2102, 139, 139, 139, 1782, 1842, 720, 1639,
	1170, 1170, 1658, 1653, 1922, 1620, 659, 1005, 1161, 785,
	782, 2727, 1644, 678, 651, 711, 1794, 1293, 2708, 782,
	1776, 1777, 1778, 1158, 1160, 1157, 2527, 1159, 1005, 2526,
	1646, 702, 1155, 783, 784, 785, 782, 1657, 1672, 2321,
	2316, 1231, 1232, 1793, 1356, 1235, 1236, 1237, 1238, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 801, 802, 803,
	804, 805, 798, 1655, 598, 2510, 1659, 1018, 783, 784,
	785, 782, 2077, 1032, 2806, 703, 1224, 1913, 2818, 1791,
	2604, 2803, 2602, 718, 2132, 1055, 1225, 1356, 1795, 1796,
	1854, 1671, 1856, 1728, 2754, 1647, 1648, 2600, 2749, 1847,
	1220, 1295, 2641, 2610, 2588, 1829, 1829, 1670, 1829, 2587,
	1761, 1674, 2590, 783, 784, 785, 782, 2805, 2603, 1830,
	2601, 1834, 1355, 2586, 1832, 2583, 1926, 1927, 1686, 2131,
	2577, 1689, 1690, 1691, 1709, 2599, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 2574, 1702, 2370, 1774, 1720, 1721,
	2589, 783, 784, 785, 782, 1851, 2573, 2300, 1803, 1722,
	2299, 1797, 2182, 1865, 1858, 1768, 2158, 1853, 1871, 2157,
	2097, 2804, 2071, 1712, 2403, 1866, 1798, 1799, 1711, 679,
	1710, 1790, 1792, 1789, 2371, 679, 1706, 600, 1705, 2568,
	587, 1076, 938, 1800, 93, 2301, 2168, 597, 596, 1808,
	2726, 1802, 783, 784, 785, 782, 429, 1786, 1775, 430,
	678, 783, 784, 785, 782, 2609, 2710, 2536, 590, 797,
	796, 806, 807, 799, 800, 801, 802, 803, 804, 805,
	798, 2352, 971, 2706, 2674, 2821, 1843, 1844, 1845, 783,
	784, 785, 782, 2361, 2673, 2385, 1850, 1852, 796, 806,
	807, 799, 800, 801, 802, 803, 804, 805, 798, 595,
	704, 705, 706, 594, 2656, 783, 784, 785, 782, 585,
	2638, 814, 2591, 1279, 1279, 1279, 2584, 2580, 2411, 783,
	784, 785, 782, 2579, 588, 2578, 465, 474, 2512, 2474,
	1054, 466, 2451, 473, 467, 471, 470, 468, 469, 2350,
	2348, 2334, 2421, 2310, 1883, 586, 799, 800, 801, 802,
	803, 804, 805, 798, 1032, 2414, 1032, 2298, 1032, 601,
	2297, 2409, 2294, 718, 2360, 2284, 2424, 2425, 2281, 2834,
	2277, 1660, 2410, 1897, 789, 790, 791, 792, 793, 794,
	795, 787, 1893, 589, 1901, 475, 783, 784, 785, 782,
	783, 784, 785, 782, 1032, 1929, 2227, 806, 807, 799,
	800, 801, 802, 803, 804, 805, 798, 1936, 2415, 2162,
	2681, 1032, 2156, 2108, 2072, 472, 2135, 2062, 1715, 1938,
	1030, 2389, 2134, 516, 515, 2811, 1928, 783, 784, 785,
	782, 1708, 2393, 1405, 1403, 1288, 1077, 1030, 783, 784,
	785, 782, 1935, 1937, 783, 784, 785, 782, 2133, 851,
	847, 599, 2382, 2186, 846, 829, 2384, 2386, 2388, 1957,
	2390, 2391, 2392, 2394, 2395, 2396, 2398, 2399, 2400, 2401,
	783, 784, 785, 782, 1940, 707, 132, 2557, 1894, 122,
	102, 783, 784, 785, 782, 2324, 2323, 1915, 2311, 2289,
	1956, 1667, 2288, 2283, 2270, 1909, 2423, 1032, 2199, 2249,
	2248, 2217, 2404, 2137, 1944, 1884, 1886, 2130, 1831, 1949,
	2009, 1891, 783, 784, 785, 782, 2015, 783, 784, 785,
	782, 1968, 2122, 2417, 2117, 1114, 2066, 1905, 1906, 1976,
	1963, 1959, 2024, 129, 132, 1958, 1693, 2007, 1683, 2402,
	718, 1356, 1356, 1356, 1356, 2416, 2418, 1681, 1678, 1677,
	2033, 1355, 718, 1356, 1919, 1978, 2381, 1675, 1669, 2001,
	1666, 1665, 2033, 1223, 1955, 1222, 783, 784, 785, 782,
	1041, 1032, 1039, 2831, 2782, 1267, 2776, 2761, 2758, 139,
	139, 2756, 844, 2640, 2626, 2397, 783, 784, 785, 782,
	1972, 129, 2387, 2614, 1912, 2018, 2611, 2606, 2049, 2020,
	1954, 1220, 2543, 1930, 1931, 2084, 2064, 2065, 1933, 1934,
	1220, 1265, 1266, 1969, 2426, 2534, 2533, 2532, 1032, 1829,
	1939, 2016, 783, 784, 785, 782, 2412, 2529, 2523, 1908,
	2027, 2095, 2422, 2508, 1255, 2341, 2339, 2322, 31, 2305,
	2143, 1264, 2000, 1257, 2083, 958, 19, 2006, 30, 1279,
	2008, 2005, 1970, 1971, 1286, 1993, 2004, 42, 1774, 8,
	1270, 6, 1273, 2017, 7, 2080, 2026, 2014, 1298, 2030,
	1269, 2021, 2022, 2090, 2046, 2096, 2047, 2766, 1953, 1272,
	2045, 2048, 1261, 1876, 1278, 826, 1841, 2023, 2092, 1783,
	1156, 2060, 2063, 2034, 2035, 2036, 2037, 129, 1410, 574,
	783, 784, 785, 782, 1392, 1290, 1262, 2070, 718, 1099,
	1065, 922, 2105, 870, 2171, 869, 868, 2081, 1728, 2091,
	867, 2100, 2087, 866, 2093, 2094, 139, 2085, 865, 2099,
	2530, 2780, 2089, 2019, 864, 718, 718, 718, 863, 862,
	2113, 1356, 1782, 861, 2215, 2196, 2196, 2196, 2115, 2123,
	2219, 860, 2125, 2187, 2127, 859, 858, 2142, 2171, 857,
	856, 2144, 2145, 2146, 2147, 2121, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2128, 2129, 855, 854, 2124, 797,
	796, 806, 807, 799, 800, 801, 802, 803, 804, 805,
	798, 2126, 578, 579, 580, 581, 850, 849, 848, 845,
	1929, 841, 840, 838, 837, 577, 2159, 1952, 836, 835,
	1295, 2164, 1279, 1951, 1295, 834, 1279, 833, 832, 2218,
	831, 2213, 827, 2220, 2221, 825, 2188, 2189, 2190, 783,
	784, 785, 782, 2229, 2166, 783, 784, 785, 782, 747,
	139, 2058, 1788, 2214, 1770, 139, 2210, 735, 2241, 2116,
	2208, 2209, 2234, 2235, 1040, 2764, 2731, 2237, 2225, 2240,
	2228, 1995, 2224, 1950, 2238, 1848, 1407, 2275, 2245, 2246,
	2247, 2136, 2279, 2255, 746, 2242, 1947, 2268, 2239, 2042,
	2223, 2039, 2038, 2271, 2043, 783, 784, 785, 782, 2040,
	2044, 2254, 1818, 1819, 2041, 2817, 2222, 2082, 783, 784,
	785, 782, 1946, 2269, 1878, 2265, 797, 796, 806, 807,
	799, 800, 801, 802, 803, 804, 805, 798, 2273, 1032,
	1032, 1409, 2160, 2161, 783, 784, 785, 782, 2276, 1974,
	2315, 2272, 1945, 2264, 2344, 2267, 2343, 1408, 93, 2165,
	1775, 76, 1356, 2327, 41, 1030, 2308, 1249, 40, 136,
	1864, 2306, 1720, 1721, 783, 784, 785, 782, 1941, 1903,
	1898, 718, 924, 1059, 1762, 1355, 1355, 1355, 1355, 741,
	2342, 2033, 2563, 1932, 2290, 2025, 1979, 1355, 1307, 2293,
	783, 784, 785, 782, 364, 1289, 2346, 365, 2697, 363,
	2292, 366, 1213, 1212, 1220, 783, 784, 785, 782, 936,
	937, 934, 935, 2329, 1829, 1806, 2319, 932, 933, 2314,
	930, 931, 1343, 2320, 2318, 2328, 2318, 2325, 2335, 1000,
	773, 2331, 2326, 2313, 2332, 999, 2244, 1610, 962, 2336,
	2333, 926, 93, 2777, 2664, 2647, 718, 2645, 2571, 2337,
	1910, 2556, 2555, 718, 2553, 2544, 2448, 2430, 2432, 2447,
	2430, 2430, 2364, 2196, 1661, 2349, 2262, 2347, 1166, 2261,
	2252, 2354, 783, 784, 785, 782, 929, 577, 2280, 2353,
	1309, 2356, 2445, 2251, 2363, 2282, 783, 784, 785, 782,
	783, 784, 785, 782, 2068, 1311, 2431, 578, 579, 580,
	581, 2365, 2768, 2767, 2767, 2427, 2768, 2471, 2468, 2362,
	577, 2098, 1668, 2405, 732, 2525, 2263, 974, 49, 1,
	1287, 2483, 1809, 582, 2439, 2329, 2438, 1406, 2442, 2433,
	2434, 2051, 2052, 2243, 2054, 2435, 2443, 2440, 2441, 1628,
	1804, 2453, 1763, 2185, 93, 1814, 1817, 1818, 1819, 1815,
	953, 1816, 1820, 603, 1215, 1084, 1032, 692, 2511, 727,
	1081, 2469, 1814, 1817, 1818, 1819, 1815, 139, 1816, 1820,
	726, 724, 1168, 479, 1418, 1355, 2432, 1279, 2486, 2607,
	2338, 2444, 2308, 2340, 2696, 2742, 2639, 2699, 1097, 463,
	93, 2547, 2454, 2643, 2528, 2456, 2358, 2345, 2086, 2427,
	621, 2509, 510, 486, 839, 2513, 1067, 1060, 2778, 2140,
	694, 485, 2304, 1989, 2535, 2478, 2484, 2485, 718, 2488,
	2489, 2490, 2491, 2537, 2572, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2539,
	2552, 2538, 593, 93, 2550, 93, 691, 2605, 622, 2567,
	1703, 2545, 1250, 1271, 1254, 2566, 797, 796, 806, 807,
	799, 800, 801, 802, 803, 804, 805, 798, 2436, 2827,
	718, 2816, 2795, 718, 718, 718, 2775, 2669, 2812, 2585,
	2714, 2759, 2464, 2633, 2636, 2462, 2463, 2752, 2665, 400,
	1364, 568, 663, 2627, 2615, 1787, 2657, 2623, 2624, 2625,
	1829, 2613, 2612, 591, 1769, 592, 2622, 1772, 1771, 1137,
	2631, 788, 1154, 2285, 2286, 823, 1032, 1032, 439, 1656,
	2650, 2575, 2576, 2479, 2644, 2642, 2637, 2581, 2582, 451,
	1986, 2420, 2632, 2061, 48, 2646, 47, 2648, 2649, 2663,
	46, 45, 1030, 1030, 1397, 1428, 481, 139, 2671, 2672,
	141, 1429, 2635, 2701, 461, 718, 460, 459, 458, 1813,
	1811, 1810, 1351, 1350, 1395, 2728, 2684, 718, 2138, 2685,
	2522, 2592, 2518, 2514, 1389, 2677, 1355, 2675, 2379, 2687,
	2406, 2703, 2683, 2407, 2413, 877, 873, 875, 876, 874,
	1918, 2692, 1914, 2194, 2195, 2702, 2192, 939, 2470, 2291,
	1726, 1724, 2236, 2232, 1414, 718, 1284, 1973, 1352, 1348,
	2562, 2437, 571, 32, 27, 2712, 797, 796, 806, 807,
	799, 800, 801, 802, 803, 804, 805, 798, 5, 2707,
	29, 28, 2717, 2719, 14, 15, 2741, 13, 1088, 12,
	18, 26, 25, 2725, 24, 23, 84, 83, 82, 2744,
	2736, 2737, 2738, 2739, 718, 81, 22, 11, 80, 79,
	78, 2751, 21, 2755, 1120, 2757, 73, 20, 74, 2748,
	71, 2750, 72, 59, 58, 57, 69, 68, 67, 66,
	65, 64, 620, 56, 55, 54, 2763, 2703, 2773, 2765,
	2762, 53, 70, 2709, 63, 62, 61, 718, 2769, 718,
	60, 2702, 2772, 52, 2779, 2562, 2781, 1120, 2784, 1120,
	51, 50, 100, 1907, 99, 98, 97, 96, 95, 33,
	34, 2790, 2744, 718, 2791, 35, 36, 2798, 110, 109,
	2802, 111, 112, 1120, 107, 2808, 797, 796, 806, 807,
	799, 800, 801, 802, 803, 804, 805, 798, 105, 108,
	106, 104, 43, 10, 17, 2, 0, 2682, 2822, 2815,
	0, 0, 2826, 0, 0, 0, 2825, 0, 0, 0,
	0, 0, 0, 0, 0, 2837, 2822, 2839, 2838, 0,
	2840, 2826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 1587, 0, 0, 1534, 309, 1491, 1547, 1464,
	1480, 1555, 1481, 1482, 1520, 1443, 1502, 271, 1478, 0,
	0, 0, 0, 0, 0, 1537, 1435, 1467, 1468, 1437,
	1474, 1438, 1465, 1493, 216, 1463, 1505, 241, 1517, 1477,
	1498, 1553, 0, 0, 301, 255, 0, 0, 1496, 1539,
	1499, 1525, 1490, 1521, 1451, 1513, 1548, 1479, 0, 1518,
	1549, 0, 0, 0, 2562, 704, 705, 706, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 1516, 1543,
	1476, 0, 200, 1546, 1497, 1519, 0, 0, 1436, 1514,
	0, 1441, 1444, 1554, 1541, 1471, 1472, 0, 0, 0,
	0, 0, 0, 0, 0, 1494, 1500, 1522, 1487, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 1469,
	0, 1510, 0, 0, 0, 1446, 1442, 2793, 1492, 0,
	0, 188, 306, 322, 198, 297, 335, 203, 304, 193,
	270, 293, 0, 1586, 190, 320, 303, 252, 235, 236,
	189, 0, 288, 214, 227, 210, 268, 0, 319, 347,
	209, 338, 1445, 330, 192, 1581, 329, 267, 316, 321,
	253, 247, 191, 318, 251, 246, 239, 218, 361, 231,
	279, 245, 280, 232, 257, 256, 258, 1565, 1566, 1567,
	1568, 1569, 358, 1577, 1578, 0, 1582, 1583, 1584, 1450,
	0, 1470, 1523, 0, 1434, 1608, 1532, 1540, 1489, 332,
	1542, 1486, 1485, 1572, 0, 1571, 305, 1573, 1574, 240,
	1538, 1466, 1475, 348, 1473, 291, 273, 1544, 1509, 1585,
	289, 243, 317, 281, 323, 307, 331, 285, 282, 183,
	308, 212, 254, 194, 196, 208, 215, 217, 219, 220,
	263, 264, 276, 296, 310, 311, 312, 211, 204, 290,
	205, 229, 206, 184, 298, 207, 186, 277, 315, 1570,
	225, 286, 250, 187, 249, 278, 314, 313, 195, 339,
	345, 346, 350, 0, 351, 0, 0, 0, 359, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 1579, 0,
	1580, 344, 223, 180, 181, 327, 0, 269, 0, 1609,
	1535, 1439, 1449, 1447, 1483, 1511, 1512, 265, 343, 1527,
	1531, 1528, 1556, 294, 0, 0, 0, 0, 0, 234,
	275, 1529, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1440, 0, 302, 325, 337, 354, 357,
	1588, 1589, 1590, 185, 356, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 328, 1484, 1457, 1495, 336, 1460, 1458, 1526,
	1459, 1515, 352, 259, 260, 261, 262, 226, 0, 202,
	355, 284, 1506, 1488, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1507, 1599, 1600, 1601, 1602, 1603, 1462, 349, 222,
	228, 0, 230, 201, 274, 224, 334, 237, 1533, 360,
	1604, 1605, 1606, 1607, 266, 233, 299, 238, 244, 287,
	333, 272, 292, 199, 324, 300, 248, 0, 0, 1456,
	1461, 1455, 1503, 1504, 1550, 1551, 1552, 1524, 1448, 1536,
	0, 1452, 1454, 1453, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 809, 0, 813, 0,
	0, 0, 0, 1530, 0, 0, 1508, 182, 0, 242,
	1557, 283, 221, 810, 812, 808, 0, 811, 797, 796,
	806, 807, 799, 800, 801, 802, 803, 804, 805, 798,
	0, 0, 0, 0, 309, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 1575, 1576, 340, 341, 342, 362, 326, 453, 213,
	1598, 0, 216, 0, 0, 241, 0, 0, 0, 484,
	0, 0, 301, 255, 0, 0, 0, 0, 539, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	446, 0, 0, 478, 516, 515, 465, 474, 1654, 0,
	197, 466, 0, 473, 467, 471, 470, 468, 469, 0,
	531, 0, 0, 0, 0, 0, 0, 437, 450, 2559,
	454, 797, 796, 806, 807, 799, 800, 801, 802, 803,
	804, 805, 798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 447, 448, 0, 0, 0, 0, 493,
	0, 449, 0, 0, 456, 475, 476, 0, 0, 188,
	306, 322, 198, 297, 335, 203, 304, 193, 270, 293,
	0, 0, 190, 320, 303, 252, 235, 236, 189, 0,
	288, 214, 227, 210, 268, 472, 491, 495, 209, 553,
	489, 330, 192, 0, 329, 267, 316, 321, 253, 247,
	191, 318, 251, 246, 239, 218, 554, 231, 279, 245,
	280, 232, 257, 256, 258, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 487, 0, 0, 332, 0, 0,
	537, 0, 0, 0, 305, 0, 0, 240, 0, 0,
	0, 490, 0, 291, 273, 550, 438, 0, 289, 243,
	317, 281, 323, 307, 331, 285, 282, 183, 308, 212,
	254, 194, 196, 208, 215, 217, 219, 220, 263, 264,
	276, 296, 310, 311, 312, 211, 204, 290, 205, 229,
	206, 184, 298, 207, 186, 277, 315, 0, 225, 286,
	250, 187, 249, 278, 314, 313, 195, 339, 345, 346,
	350, 0, 351, 0, 0, 0, 359, 0, 0, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 344,
	223, 180, 181, 327, 535, 269, 0, 0, 549, 530,
	532, 533, 536, 540, 541, 542, 543, 544, 546, 548,
	552, 294, 0, 0, 0, 0, 0, 234, 275, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 325, 337, 354, 357, 0, 0,
	0, 185, 356, 0, 2560, 0, 0, 0, 2561, 0,
	551, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	494, 259, 260, 261, 262, 538, 0, 202, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 222, 228, 0,
	230, 201, 274, 224, 334, 237, 0, 360, 0, 0,
	0, 0, 266, 233, 299, 238, 244, 287, 333, 272,
	292, 199, 324, 300, 248, 0, 0, 560, 534, 559,
	561, 562, 558, 563, 564, 545, 457, 0, 498, 556,
	555, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 242, 0, 283,
	221, 523, 503, 504, 505, 455, 506, 501, 502, 524,
	496, 520, 521, 480, 499, 507, 519, 508, 522, 525,
	526, 565, 566, 514, 567, 511, 527, 518, 517, 509,
	497, 528, 529, 483, 482, 512, 513, 500, 309, 492,
	0, 340, 341, 342, 362, 326, 0, 213, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 216, 0, 0, 241,
	0, 0, 0, 484, 0, 0, 301, 255, 0, 0,
	0, 0, 539, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 0, 0, 478, 516, 515,
	465, 474, 0, 0, 197, 466, 0, 473, 467, 471,
	470, 468, 469, 0, 531, 0, 0, 0, 0, 0,
	0, 437, 450, 0, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 448, 0,
	0, 0, 0, 493, 0, 449, 0, 0, 456, 475,
	476, 0, 0, 188, 306, 322, 198, 297, 335, 203,
	304, 193, 270, 293, 0, 0, 190, 320, 303, 252,
	235, 236, 189, 0, 288, 214, 227, 210, 268, 472,
	491, 495, 209, 553, 489, 330, 192, 0, 329, 267,
	316, 321, 253, 247, 191, 318, 251, 246, 239, 218,
	554, 231, 279, 245, 280, 232, 257, 256, 258, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 487, 0,
	0, 332, 0, 0, 537, 0, 0, 0, 305, 0,
	0, 240, 0, 0, 0, 490, 0, 291, 273, 550,
	438, 0, 289, 243, 317, 281, 323, 307, 331, 285,
	282, 183, 308, 212, 254, 194, 196, 208, 215, 217,
	219, 220, 263, 264, 276, 296, 310, 311, 312, 211,
	204, 290, 205, 229, 206, 184, 298, 207, 186, 277,
	315, 0, 225, 286, 250, 187, 249, 278, 314, 313,
	195, 339, 345, 346, 350, 0, 351, 0, 0, 0,
	359, 0, 0, 0, 0, 0, 353, 0, 0, 0,
	1217, 1216, 1218, 344, 223, 180, 181, 327, 535, 269,
	0, 0, 549, 530, 532, 533, 536, 540, 541, 542,
	543, 544, 546, 548, 552, 294, 0, 0, 0, 0,
	0, 234, 275, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 325, 337,
	354, 357, 0, 0, 0, 185, 356, 0, 0, 0,
	0, 0, 0, 0, 551, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 494, 259, 260, 261, 262, 538,
	0, 202, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 222, 228, 0, 230, 201, 274, 224, 334, 237,
	0, 360, 0, 0, 0, 0, 266, 233, 299, 238,
	244, 287, 333, 272, 292, 199, 324, 300, 248, 0,
	0, 560, 534, 559, 561, 562, 558, 563, 564, 545,
	457, 0, 498, 556, 555, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 242, 0, 283, 221, 523, 503, 504, 505, 455,
	506, 501, 502, 524, 496, 520, 521, 480, 499, 507,
	519, 508, 522, 525, 526, 565, 566, 514, 567, 511,
	527, 518, 517, 509, 497, 528, 529, 483, 482, 512,
	513, 500, 309, 492, 0, 340, 341, 342, 362, 326,
	0, 213, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 0, 0, 0,
	216, 0, 0, 241, 0, 0, 0, 484, 0, 0,
	301, 255, 0, 0, 0, 0, 539, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 446, 0,
	0, 478, 516, 515, 465, 474, 0, 0, 197, 466,
	0, 473, 467, 471, 470, 468, 469, 0, 531, 0,
	0, 0, 0, 0, 0, 437, 450, 0, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 447, 448, 0, 0, 0, 0, 493, 0, 449,
	0, 0, 456, 475, 476, 0, 0, 188, 306, 322,
	198, 297, 335, 203, 304, 193, 270, 293, 0, 0,
	190, 320, 303, 252, 235, 236, 189, 0, 288, 214,
	227, 210, 268, 472, 491, 495, 209, 553, 489, 330,
	192, 0, 329, 267, 316, 321, 253, 247, 191, 318,
	251, 246, 239, 218, 554, 231, 279, 245, 280, 232,
	257, 256, 258, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 487, 0, 0, 332, 0, 0, 537, 0,
	0, 0, 305, 0, 0, 240, 0, 0, 0, 490,
	0, 291, 273, 550, 438, 0, 289, 243, 317, 281,
	323, 307, 331, 285, 282, 183, 308, 212, 254, 194,
	196, 208, 215, 217, 219, 220, 263, 264, 276, 296,
	310, 311, 312, 211, 204, 290, 205, 229, 206, 184,
	298, 207, 186, 277, 315, 0, 225, 286, 250, 187,
	249, 278, 314, 313, 195, 339, 345, 346, 350, 0,
	351, 0, 0, 0, 359, 0, 0, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 344, 223, 180,
	181, 327, 535, 269, 0, 0, 549, 530, 532, 533,
	536, 540, 541, 542, 543, 544, 546, 548, 552, 294,
	0, 0, 0, 0, 0, 234, 275, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 325, 337, 354, 357, 0, 0, 0, 185,
	356, 0, 2560, 0, 0, 0, 2561, 0, 551, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 494, 259,
	260, 261, 262, 538, 0, 202, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 222, 228, 0, 230, 201,
	274, 224, 334, 237, 0, 360, 0, 0, 0, 0,
	266, 233, 299, 238, 244, 287, 333, 272, 292, 199,
	324, 300, 248, 0, 0, 560, 534, 559, 561, 562,
	558, 563, 564, 545, 457, 0, 498, 556, 555, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 242, 0, 283, 221, 523,
	503, 504, 505, 455, 506, 501, 502, 524, 496, 520,
	521, 480, 499, 507, 519, 508, 522, 525, 526, 565,
	566, 514, 567, 511, 527, 518, 517, 509, 497, 528,
	529, 483, 482, 512, 513, 500, 309, 492, 0, 340,
	341, 342, 362, 326, 0, 213, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 0, 0, 0, 216, 1280, 0, 241, 0, 0,
	0, 484, 0, 0, 301, 255, 0, 0, 0, 0,
	539, 547, 0, 0, 0, 0, 0, 0, 0, 1374,
	0, 0, 446, 0, 0, 478, 516, 515, 465, 474,
	0, 0, 197, 466, 0, 473, 467, 471, 470, 468,
	469, 0, 531, 0, 0, 0, 0, 0, 0, 437,
	450, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 447, 448, 0, 0, 0,
	0, 493, 0, 449, 0, 0, 1375, 475, 476, 0,
	0, 188, 306, 322, 198, 297, 335, 203, 304, 193,
	270, 293, 0, 0, 190, 320, 303, 252, 235, 236,
	189, 0, 288, 214, 227, 210, 268, 472, 491, 495,
	209, 553, 489, 330, 192, 0, 329, 267, 316, 321,
	253, 247, 191, 318, 251, 246, 239, 218, 554, 231,
	279, 245, 280, 232, 257, 256, 258, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 487, 0, 0, 332,
	0, 0, 537, 0, 0, 0, 305, 0, 0, 240,
	0, 0, 0, 490, 0, 291, 273, 550, 438, 0,
	289, 243, 317, 281, 323, 307, 331, 285, 282, 183,
	308, 212, 254, 194, 196, 208, 215, 217, 219, 220,
	263, 264, 276, 296, 310, 311, 312, 211, 204, 290,
	205, 229, 206, 184, 298, 207, 186, 277, 315, 0,
	225, 286, 250, 187, 249, 278, 314, 313, 195, 339,
	345, 346, 350, 0, 351, 0, 0, 0, 359, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 344, 223, 180, 181, 327, 535, 269, 0, 0,
	549, 530, 532, 533, 536, 540, 541, 542, 543, 544,
	546, 548, 552, 294, 0, 0, 0, 0, 0, 234,
	275, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 325, 337, 354, 357,
	0, 0, 0, 185, 356, 0, 0, 0, 0, 0,
	0, 0, 551, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 494, 259, 260, 261, 262, 538, 0, 202,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 222,
	228, 0, 230, 201, 274, 224, 334, 237, 0, 360,
	0, 0, 0, 0, 266, 233, 299, 238, 244, 287,
	333, 272, 292, 199, 324, 300, 248, 0, 0, 560,
	534, 559, 561, 562, 558, 563, 564, 545, 457, 0,
	498, 556, 555, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 242,
	0, 283, 221, 523, 503, 504, 505, 455, 506, 501,
	502, 524, 496, 520, 521, 480, 499, 507, 519, 508,
	522, 525, 526, 565, 566, 514, 567, 511, 527, 518,
	517, 509, 497, 528, 529, 483, 482, 512, 513, 500,
	132, 309, 492, 340, 341, 342, 362, 326, 0, 213,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 453, 0, 0, 0, 216,
	0, 0, 241, 0, 0, 0, 817, 0, 0, 301,
	255, 0, 0, 0, 0, 539, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 0, 0,
	478, 516, 515, 465, 474, 0, 0, 197, 466, 0,
	473, 467, 471, 470, 468, 469, 0, 531, 0, 0,
	0, 0, 0, 0, 437, 450, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	447, 448, 0, 0, 0, 0, 493, 0, 449, 0,
	0, 456, 475, 476, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 472, 491, 495, 209, 553, 489, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 554, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 487, 0, 0, 332, 0, 0, 537, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 490, 0,
	291, 273, 550, 438, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 535, 269, 0, 0, 549, 530, 532, 533, 536,
	540, 541, 542, 543, 544, 546, 548, 552, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 551, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 494, 259, 260,
	261, 262, 538, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 0, 0, 560, 534, 559, 561, 562, 558,
	563, 564, 545, 457, 0, 498, 556, 555, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 103, 283, 221, 523, 503,
	504, 505, 455, 506, 501, 502, 524, 496, 520, 521,
	480, 499, 507, 519, 508, 522, 525, 526, 565, 566,
	514, 567, 511, 527, 518, 517, 509, 497, 528, 529,
	483, 482, 512, 513, 500, 309, 492, 0, 340, 341,
	342, 362, 326, 0, 213, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 453,
	0, 0, 0, 216, 2792, 0, 241, 0, 0, 0,
	484, 0, 0, 301, 255, 0, 0, 0, 0, 539,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 0, 0, 478, 516, 515, 465, 474, 0,
	0, 197, 466, 0, 473, 467, 471, 470, 468, 469,
	0, 531, 0, 0, 0, 0, 0, 0, 437, 450,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 447, 448, 0, 0, 0, 0,
	493, 0, 449, 0, 0, 456, 475, 476, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 472, 491, 495, 209,
	553, 489, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 554, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 487, 0, 0, 332, 0,
	0, 537, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 490, 0, 291, 273, 550, 438, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 535, 269, 0, 0, 549,
	530, 532, 533, 536, 540, 541, 542, 543, 544, 546,
	548, 552, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 551, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 494, 259, 260, 261, 262, 538, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 560, 534,
	559, 561, 562, 558, 563, 564, 545, 457, 0, 498,
	556, 555, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 523, 503, 504, 505, 455, 506, 501, 502,
	524, 496, 520, 521, 480, 499, 507, 519, 508, 522,
	525, 526, 565, 566, 514, 567, 511, 527, 518, 517,
	509, 497, 528, 529, 483, 482, 512, 513, 500, 309,
	492, 0, 340, 341, 342, 362, 326, 0, 213, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 216, 1280, 0,
	241, 0, 0, 0, 484, 0, 0, 301, 255, 0,
	0, 0, 0, 539, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 446, 0, 0, 478, 516,
	515, 465, 474, 0, 0, 197, 466, 0, 473, 467,
	471, 470, 468, 469, 0, 531, 0, 0, 0, 0,
	0, 0, 437, 450, 0, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 447, 448,
	0, 0, 0, 0, 493, 0, 449, 0, 0, 456,
	475, 476, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	472, 491, 495, 209, 553, 489, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 554, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 487,
	0, 0, 332, 0, 0, 537, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 490, 0, 291, 273,
	550, 438, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 535,
	269, 0, 0, 549, 530, 532, 533, 536, 540, 541,
	542, 543, 544, 546, 548, 552, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 551, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 494, 259, 260, 261, 262,
	538, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 560, 534, 559, 561, 562, 558, 563, 564,
	545, 457, 0, 498, 556, 555, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 523, 503, 504, 505,
	455, 506, 501, 502, 524, 496, 520, 521, 480, 499,
	507, 519, 508, 522, 525, 526, 565, 566, 514, 567,
	511, 527, 518, 517, 509, 497, 528, 529, 483, 482,
	512, 513, 500, 309, 492, 0, 340, 341, 342, 362,
	326, 0, 213, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 484, 0,
	0, 301, 255, 0, 0, 0, 0, 539, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 446,
	0, 0, 478, 516, 515, 465, 474, 0, 0, 197,
	466, 0, 473, 467, 471, 470, 468, 469, 0, 531,
	0, 0, 0, 0, 0, 0, 437, 450, 0, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 447, 448, 1053, 0, 0, 0, 493, 0,
	449, 0, 0, 456, 475, 476, 0, 0, 188, 306,
	322, 198, 297, 335, 203, 304, 193, 270, 293, 0,
	0, 190, 320, 303, 252, 235, 236, 189, 0, 288,
	214, 227, 210, 268, 472, 491, 495, 209, 553, 489,
	330, 192, 0, 329, 267, 316, 321, 253, 247, 191,
	318, 251, 246, 239, 218, 554, 231, 279, 245, 280,
	232, 257, 256, 258, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 487, 0, 0, 332, 0, 0, 537,
	0, 0, 0, 305, 0, 0, 240, 0, 0, 0,
	490, 0, 291, 273, 550, 438, 0, 289, 243, 317,
	281, 323, 307, 331, 285, 282, 183, 308, 212, 254,
	194, 196, 208, 215, 217, 219, 220, 263, 264, 276,
	296, 310, 311, 312, 211, 204, 290, 205, 229, 206,
	184, 298, 207, 186, 277, 315, 0, 225, 286, 250,
	187, 249, 278, 314, 313, 195, 339, 345, 346, 350,
	0, 351, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 344, 223,
	180, 181, 327, 535, 269, 0, 0, 549, 530, 532,
	533, 536, 540, 541, 542, 543, 544, 546, 548, 552,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 0, 551,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 494,
	259, 260, 261, 262, 538, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 266, 233, 299, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 248, 0, 0, 560, 534, 559, 561,
	562, 558, 563, 564, 545, 457, 0, 498, 556, 555,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 242, 0, 283, 221,
	523, 503, 504, 505, 455, 506, 501, 502, 524, 496,
	520, 521, 480, 499, 507, 519, 508, 522, 525, 526,
	565, 566, 514, 567, 511, 527, 518, 517, 509, 497,
	528, 529, 483, 482, 512, 513, 500, 0, 0, 0,
	340, 341, 342, 362, 326, 0, 213, 309, 492, 0,
	0, 1673, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 0, 0, 0, 216, 0, 0, 241, 0,
	0, 0, 484, 0, 0, 301, 255, 0, 0, 0,
	0, 539, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 446, 0, 0, 478, 516, 515, 465,
	474, 0, 0, 197, 466, 0, 473, 467, 471, 470,
	468, 469, 0, 531, 0, 0, 0, 0, 0, 0,
	437, 450, 0, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 447, 448, 0, 0,
	0, 0, 493, 0, 449, 0, 0, 456, 475, 476,
	0, 0, 188, 306, 322, 198, 297, 335, 203, 304,
	193, 270, 293, 0, 0, 190, 320, 303, 252, 235,
	236, 189, 0, 288, 214, 227, 210, 268, 472, 491,
	495, 209, 553, 489, 330, 192, 0, 329, 267, 316,
	321, 253, 247, 191, 318, 251, 246, 239, 218, 554,
	231, 279, 245, 280, 232, 257, 256, 258, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 487, 0, 0,
	332, 0, 0, 537, 0, 0, 0, 305, 0, 0,
	240, 0, 0, 0, 490, 0, 291, 273, 550, 438,
	0, 289, 243, 317, 281, 323, 307, 331, 285, 282,
	183, 308, 212, 254, 194, 196, 208, 215, 217, 219,
	220, 263, 264, 276, 296, 310, 311, 312, 211, 204,
	290, 205, 229, 206, 184, 298, 207, 186, 277, 315,
	0, 225, 286, 250, 187, 249, 278, 314, 313, 195,
	339, 345, 346, 350, 0, 351, 0, 0, 0, 359,
	0, 0, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 344, 223, 180, 181, 327, 535, 269, 0,
	0, 549, 530, 532, 533, 536, 540, 541, 542, 543,
	544, 546, 548, 552, 294, 0, 0, 0, 0, 0,
	234, 275, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 325, 337, 354,
	357, 0, 0, 0, 185, 356, 0, 0, 0, 0,
	0, 0, 0, 551, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 494, 259, 260, 261, 262, 538, 0,
	202, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	222, 228, 0, 230, 201, 274, 224, 334, 237, 0,
	360, 0, 0, 0, 0, 266, 233, 299, 238, 244,
	287, 333, 272, 292, 199, 324, 300, 248, 0, 0,
	560, 534, 559, 561, 562, 558, 563, 564, 545, 457,
	0, 498, 556, 555, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	242, 0, 283, 221, 523, 503, 504, 505, 455, 506,
	501, 502, 524, 496, 520, 521, 480, 499, 507, 519,
	508, 522, 525, 526, 565, 566, 514, 567, 511, 527,
	518, 517, 509, 497, 528, 529, 483, 482, 512, 513,
	500, 309, 492, 0, 340, 341, 342, 362, 326, 0,
	213, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 453, 0, 0, 0, 216,
	0, 0, 241, 0, 0, 0, 484, 0, 0, 301,
	255, 0, 0, 0, 0, 539, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 0, 0,
	478, 516, 515, 465, 474, 0, 0, 197, 466, 0,
	473, 467, 471, 470, 468, 469, 0, 531, 0, 0,
	0, 0, 0, 0, 437, 450, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	447, 448, 0, 0, 0, 0, 493, 0, 449, 0,
	0, 456, 475, 476, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 472, 491, 495, 209, 553, 489, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 554, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 487, 0, 0, 332, 0, 0, 537, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 490, 0,
	291, 273, 550, 438, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 535, 269, 0, 0, 549, 530, 532, 533, 536,
	540, 541, 542, 543, 544, 546, 548, 552, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 551, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 494, 259, 260,
	261, 262, 538, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 0, 0, 560, 534, 559, 561, 562, 558,
	563, 564, 545, 457, 0, 498, 556, 555, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 0, 283, 221, 523, 503,
	504, 505, 455, 506, 501, 502, 524, 496, 520, 521,
	480, 499, 507, 519, 508, 522, 525, 526, 565, 566,
	514, 567, 511, 527, 518, 517, 509, 497, 528, 529,
	483, 482, 512, 513, 500, 309, 492, 0, 340, 341,
	342, 362, 326, 0, 213, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 1138, 0, 0, 0, 453,
	0, 0, 0, 216, 0, 0, 241, 0, 0, 0,
	484, 0, 0, 301, 255, 0, 0, 0, 0, 539,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 0, 0, 478, 516, 515, 465, 474, 0,
	0, 197, 466, 0, 473, 467, 471, 470, 468, 469,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 450,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 447, 448, 0, 0, 0, 0,
	493, 0, 449, 0, 0, 456, 475, 476, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 472, 491, 495, 209,
	553, 489, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 554, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 487, 0, 0, 332, 0,
	0, 537, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 490, 0, 291, 273, 550, 0, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 1139,
	1140, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 535, 269, 0, 0, 549,
	530, 532, 533, 536, 540, 541, 542, 543, 544, 546,
	548, 552, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 551, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 494, 259, 260, 261, 262, 538, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 560, 534,
	559, 561, 562, 558, 563, 564, 545, 457, 0, 498,
	556, 555, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 523, 503, 504, 505, 455, 506, 501, 502,
	524, 496, 520, 521, 480, 499, 507, 519, 508, 522,
	525, 526, 565, 566, 514, 567, 511, 527, 518, 517,
	509, 497, 528, 529, 483, 482, 512, 513, 500, 309,
	492, 0, 340, 341, 342, 362, 326, 0, 213, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 216, 0, 0,
	241, 0, 0, 0, 484, 0, 0, 301, 255, 0,
	0, 0, 0, 539, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 516,
	515, 465, 474, 0, 0, 197, 466, 0, 473, 467,
	471, 470, 468, 469, 0, 531, 0, 0, 0, 0,
	0, 0, 437, 450, 0, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 447, 448,
	0, 0, 0, 0, 493, 0, 449, 0, 0, 456,
	475, 476, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	472, 491, 495, 209, 553, 489, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 554, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 487,
	0, 0, 332, 0, 0, 537, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 490, 0, 291, 273,
	550, 438, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 535,
	269, 0, 0, 549, 530, 532, 533, 536, 540, 541,
	542, 543, 544, 546, 548, 552, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 551, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 494, 259, 260, 261, 262,
	538, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 560, 534, 559, 561, 562, 558, 563, 564,
	545, 457, 0, 498, 556, 555, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 523, 503, 504, 505,
	455, 506, 501, 502, 524, 496, 520, 521, 480, 499,
	507, 519, 508, 522, 525, 526, 565, 566, 514, 567,
	511, 527, 518, 517, 509, 497, 528, 529, 483, 482,
	512, 513, 500, 309, 492, 0, 340, 341, 342, 362,
	326, 0, 213, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 484, 0,
	0, 301, 255, 0, 0, 0, 0, 539, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 446,
	0, 0, 478, 516, 515, 465, 474, 0, 0, 197,
	466, 0, 473, 467, 471, 470, 468, 469, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 450, 0, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 447, 448, 0, 0, 0, 0, 493, 0,
	449, 0, 0, 456, 475, 476, 0, 0, 188, 306,
	322, 198, 297, 335, 203, 304, 193, 270, 293, 0,
	0, 190, 320, 303, 252, 235, 236, 189, 0, 288,
	214, 227, 210, 268, 472, 491, 495, 209, 553, 489,
	330, 192, 0, 329, 267, 316, 321, 253, 247, 191,
	318, 251, 246, 239, 218, 554, 231, 279, 245, 280,
	232, 257, 256, 258, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 487, 0, 0, 332, 0, 0, 537,
	0, 0, 0, 305, 0, 0, 240, 0, 0, 0,
	490, 0, 291, 273, 550, 0, 0, 289, 243, 317,
	281, 323, 307, 331, 285, 282, 183, 308, 212, 254,
	194, 196, 208, 215, 217, 219, 220, 263, 264, 276,
	296, 310, 311, 312, 211, 204, 290, 205, 229, 206,
	184, 298, 207, 186, 277, 315, 0, 225, 286, 250,
	187, 249, 278, 314, 313, 195, 339, 345, 346, 350,
	0, 351, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 344, 223,
	180, 181, 327, 535, 269, 0, 0, 549, 530, 532,
	533, 536, 540, 541, 542, 543, 544, 546, 548, 552,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 0, 551,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 494,
	259, 260, 261, 262, 538, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 266, 233, 299, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 248, 0, 0, 560, 534, 559, 561,
	562, 558, 563, 564, 545, 457, 0, 498, 556, 555,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 242, 0, 283, 221,
	523, 503, 504, 505, 455, 506, 501, 502, 524, 496,
	520, 521, 480, 499, 507, 519, 508, 522, 525, 526,
	565, 566, 514, 567, 511, 527, 518, 517, 509, 497,
	528, 529, 483, 482, 512, 513, 500, 0, 0, 0,
	340, 341, 342, 362, 326, 0, 213, 132, 309, 38,
	122, 102, 0, 0, 0, 0, 0, 0, 0, 271,
	372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 301, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 306, 322, 198, 297, 335, 203,
	304, 193, 270, 293, 0, 0, 190, 320, 303, 252,
	235, 236, 189, 0, 288, 214, 227, 210, 268, 0,
	319, 347, 209, 338, 0, 330, 192, 0, 329, 267,
	316, 321, 253, 247, 191, 318, 251, 246, 239, 218,
	361, 231, 279, 245, 280, 232, 257, 256, 258, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 305, 0,
	0, 240, 0, 0, 0, 348, 0, 291, 273, 0,
	0, 0, 289, 243, 317, 281, 323, 307, 331, 285,
	282, 183, 308, 212, 254, 194, 196, 208, 215, 217,
	219, 220, 263, 264, 276, 296, 310, 311, 312, 211,
	204, 290, 205, 229, 206, 184, 298, 207, 186, 277,
	315, 0, 225, 286, 250, 187, 249, 278, 314, 313,
	195, 339, 345, 346, 350, 0, 351, 0, 0, 0,
	359, 0, 0, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 0, 344, 223, 180, 181, 327, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	343, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 234, 275, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 325, 337,
	354, 357, 0, 0, 0, 185, 356, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 352, 259, 260, 261, 262, 373,
	375, 202, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 222, 228, 0, 230, 201, 274, 224, 334, 237,
	0, 360, 0, 0, 0, 0, 266, 233, 299, 238,
	244, 287, 333, 272, 292, 199, 324, 300, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 39,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 242, 103, 283, 221, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 0, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 309, 0, 0, 340, 341, 342, 362, 326,
	0, 213, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 893, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	301, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 0, 0, 0, 188, 306, 322,
	198, 297, 335, 203, 304, 193, 270, 293, 0, 0,
	1748, 1750, 1751, 1752, 1753, 1754, 1755, 0, 1759, 1756,
	1757, 1758, 268, 0, 1743, 1744, 1745, 1746, 879, 1729,
	1749, 0, 1730, 267, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1747, 279, 245, 280, 232,
	257, 256, 258, 904, 906, 908, 910, 913, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 305, 0, 0, 240, 0, 0, 0, 1742,
	0, 291, 273, 0, 0, 0, 289, 243, 317, 281,
	323, 307, 331, 285, 282, 183, 308, 212, 254, 194,
	196, 208, 215, 217, 219, 220, 263, 264, 276, 296,
	310, 311, 312, 211, 204, 290, 205, 229, 206, 184,
	298, 207, 186, 277, 315, 0, 225, 286, 250, 187,
	249, 278, 314, 313, 195, 339, 345, 346, 350, 0,
	351, 0, 0, 0, 359, 0, 0, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 344, 223, 180,
	181, 327, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 343, 0, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 234, 275, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 325, 337, 354, 357, 0, 0, 0, 185,
	356, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 352, 259,
	260, 261, 262, 226, 0, 202, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 222, 228, 0, 230, 201,
	274, 224, 334, 237, 0, 360, 0, 0, 0, 0,
	266, 233, 299, 238, 244, 287, 333, 272, 292, 199,
	324, 300, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 903, 242, 0, 283, 221, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 0, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 309, 0, 0, 340,
	341, 342, 362, 326, 0, 213, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 301, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 2203, 2206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 306, 322, 198, 297, 335, 203, 304, 193,
	270, 293, 0, 0, 190, 320, 303, 252, 235, 236,
	189, 0, 288, 214, 227, 210, 268, 0, 319, 347,
	209, 338, 0, 330, 192, 0, 329, 267, 316, 321,
	253, 247, 191, 318, 251, 246, 239, 218, 361, 231,
	279, 245, 280, 232, 257, 256, 258, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2207, 332,
	0, 0, 0, 2200, 0, 2199, 305, 2201, 2204, 240,
	0, 0, 0, 348, 0, 291, 273, 0, 0, 0,
	289, 243, 317, 281, 323, 307, 331, 285, 282, 183,
	308, 212, 254, 194, 196, 208, 215, 217, 219, 220,
	263, 264, 276, 296, 310, 311, 312, 211, 204, 290,
	205, 229, 206, 184, 298, 207, 186, 277, 315, 2205,
	225, 286, 250, 187, 249, 278, 314, 313, 195, 339,
	345, 346, 350, 0, 351, 0, 0, 0, 359, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 344, 223, 180, 181, 327, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 343, 0,
	0, 0, 0, 294, 0, 0, 0, 0, 0, 234,
	275, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 325, 337, 354, 357,
	0, 0, 0, 185, 356, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 352, 259, 260, 261, 262, 226, 0, 202,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 222,
	228, 0, 230, 201, 274, 224, 334, 237, 0, 360,
	0, 0, 0, 0, 266, 233, 299, 238, 244, 287,
	333, 272, 292, 199, 324, 300, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 242,
	0, 283, 221, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 0, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	309, 0, 0, 340, 341, 342, 362, 326, 0, 213,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1399, 0, 0, 0, 0, 216, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 301, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	0, 0, 1400, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 0, 783,
	784, 785, 782, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 306, 322, 198, 297,
	335, 203, 304, 193, 270, 293, 0, 0, 190, 320,
	303, 252, 235, 236, 189, 0, 288, 214, 227, 210,
	268, 0, 319, 347, 209, 338, 0, 330, 192, 0,
	329, 267, 316, 321, 253, 247, 191, 318, 251, 246,
	239, 218, 361, 231, 279, 245, 280, 232, 257, 256,
	258, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	305, 0, 0, 240, 0, 0, 0, 348, 0, 291,
	273, 0, 0, 0, 289, 243, 317, 281, 323, 307,
	331, 285, 282, 183, 308, 212, 254, 194, 196, 208,
	215, 217, 219, 220, 263, 264, 276, 296, 310, 311,
	312, 211, 204, 290, 205, 229, 206, 184, 298, 207,
	186, 277, 315, 0, 225, 286, 250, 187, 249, 278,
	314, 313, 195, 339, 345, 346, 350, 0, 351, 0,
	0, 0, 359, 0, 0, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 0, 344, 223, 180, 181, 327,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 343, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 234, 275, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	325, 337, 354, 357, 0, 0, 0, 185, 356, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 352, 259, 260, 261,
	262, 226, 0, 202, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 222, 228, 0, 230, 201, 274, 224,
	334, 237, 0, 360, 0, 0, 0, 0, 266, 233,
	299, 238, 244, 287, 333, 272, 292, 199, 324, 300,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 242, 0, 283, 221, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 0,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 309, 0, 0, 340, 341, 342,
	362, 326, 0, 213, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 662, 0, 241, 0, 0, 0, 0,
	0, 0, 301, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 140, 670, 671, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	306, 322, 198, 297, 335, 203, 304, 193, 270, 293,
	0, 0, 190, 320, 303, 252, 235, 236, 189, 0,
	288, 214, 227, 210, 268, 0, 319, 347, 209, 338,
	646, 330, 192, 645, 329, 267, 316, 321, 253, 247,
	191, 318, 251, 246, 239, 218, 361, 231, 279, 245,
	280, 232, 257, 256, 258, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 305, 0, 0, 240, 0, 0,
	0, 348, 0, 291, 273, 0, 0, 0, 289, 243,
	317, 281, 323, 307, 331, 660, 282, 183, 308, 212,
	254, 194, 196, 208, 215, 217, 219, 220, 263, 264,
	276, 296, 310, 311, 312, 211, 204, 290, 205, 229,
	206, 184, 298, 207, 186, 277, 315, 0, 225, 286,
	250, 187, 249, 278, 314, 313, 195, 339, 345, 346,
	350, 0, 351, 0, 0, 0, 359, 0, 0, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 344,
	223, 180, 181, 327, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 343, 0, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 234, 275, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 325, 337, 354, 357, 0, 0,
	0, 185, 356, 0, 0, 0, 0, 0, 0, 661,
	328, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	664, 259, 260, 261, 262, 226, 0, 202, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 222, 228, 0,
	230, 201, 274, 224, 334, 237, 0, 360, 0, 0,
	0, 0, 672, 667, 668, 238, 244, 287, 333, 272,
	292, 199, 324, 300, 669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 242, 0, 283,
	221, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 0, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 132, 309,
	0, 340, 341, 342, 362, 326, 0, 213, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	241, 0, 0, 0, 91, 0, 0, 301, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 1421, 0, 140, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	0, 319, 347, 209, 338, 0, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 361, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 348, 0, 291, 273,
	0, 0, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 343, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 352, 259, 260, 261, 262,
	226, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 103, 283, 221, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 0, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 132, 309, 0, 340, 341, 342, 362,
	326, 0, 213, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 241, 0, 0, 0, 91,
	0, 0, 301, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 1412, 0, 140, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	306, 322, 198, 297, 335, 203, 304, 193, 270, 293,
	0, 0, 190, 320, 303, 252, 235, 236, 189, 0,
	288, 214, 227, 210, 268, 0, 319, 347, 209, 338,
	0, 330, 192, 0, 329, 267, 316, 321, 253, 247,
	191, 318, 251, 246, 239, 218, 361, 231, 279, 245,
	280, 232, 257, 256, 258, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 305, 0, 0, 240, 0, 0,
	0, 348, 0, 291, 273, 0, 0, 0, 289, 243,
	317, 281, 323, 307, 331, 285, 282, 183, 308, 212,
	254, 194, 196, 208, 215, 217, 219, 220, 263, 264,
	276, 296, 310, 311, 312, 211, 204, 290, 205, 229,
	206, 184, 298, 207, 186, 277, 315, 0, 225, 286,
	250, 187, 249, 278, 314, 313, 195, 339, 345, 346,
	350, 0, 351, 0, 0, 0, 359, 0, 0, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 344,
	223, 180, 181, 327, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 343, 0, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 234, 275, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 325, 337, 354, 357, 0, 0,
	0, 185, 356, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	352, 259, 260, 261, 262, 226, 0, 202, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 222, 228, 0,
	230, 201, 274, 224, 334, 237, 0, 360, 0, 0,
	0, 0, 266, 233, 299, 238, 244, 287, 333, 272,
	292, 199, 324, 300, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 242, 103, 283,
	221, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 0, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 132, 309,
	0, 340, 341, 342, 362, 326, 0, 213, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	241, 0, 0, 0, 91, 0, 0, 301, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1353, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	0, 319, 347, 209, 338, 0, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 361, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 348, 0, 291, 273,
	0, 0, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 343, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 352, 259, 260, 261, 262,
	226, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 103, 283, 221, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 0, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 309, 0, 0, 340, 341, 342, 362,
	326, 0, 213, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 301, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 670, 671, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 306,
	322, 198, 297, 335, 203, 304, 193, 270, 293, 0,
	0, 190, 320, 303, 252, 235, 236, 189, 0, 288,
	214, 227, 210, 268, 0, 319, 347, 209, 338, 646,
	330, 192, 645, 329, 267, 316, 321, 253, 247, 191,
	318, 251, 246, 239, 218, 361, 231, 279, 245, 280,
	232, 257, 256, 258, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 240, 0, 0, 0,
	348, 0, 291, 273, 0, 0, 0, 289, 243, 317,
	281, 323, 307, 331, 285, 282, 183, 308, 212, 254,
	194, 196, 208, 215, 217, 219, 220, 263, 264, 276,
	296, 310, 311, 312, 211, 204, 290, 205, 229, 206,
	184, 298, 207, 186, 277, 315, 0, 225, 286, 250,
	187, 249, 278, 314, 313, 195, 339, 345, 346, 350,
	0, 351, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 344, 223,
	180, 181, 327, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 343, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 352,
	259, 260, 261, 262, 226, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 672, 667, 668, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 242, 0, 283, 221,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 0, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 309, 0, 0,
	340, 341, 342, 362, 326, 0, 213, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 1035, 0, 241, 0,
	0, 0, 0, 0, 0, 301, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 0, 1033,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 188, 306, 322, 198, 297, 335, 203, 304,
	193, 270, 293, 0, 0, 190, 320, 303, 252, 235,
	236, 189, 0, 288, 214, 227, 210, 268, 0, 319,
	347, 209, 338, 0, 330, 192, 0, 329, 267, 316,
	321, 253, 247, 191, 318, 251, 246, 239, 218, 361,
	231, 279, 245, 280, 232, 257, 256, 258, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	240, 0, 0, 0, 348, 0, 291, 273, 0, 0,
	0, 289, 243, 317, 281, 323, 307, 331, 285, 282,
	183, 308, 212, 254, 194, 196, 208, 215, 217, 219,
	220, 263, 264, 276, 296, 310, 311, 312, 211, 204,
	290, 205, 229, 206, 184, 298, 207, 186, 277, 315,
	0, 225, 286, 250, 187, 249, 278, 314, 313, 195,
	339, 345, 346, 350, 0, 351, 0, 0, 0, 359,
	0, 0, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 344, 223, 180, 181, 327, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 343,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	234, 275, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 325, 337, 354,
	357, 0, 0, 0, 185, 356, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 352, 259, 260, 261, 262, 226, 0,
	202, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	222, 228, 0, 230, 201, 274, 224, 334, 237, 0,
	360, 0, 0, 0, 0, 266, 233, 299, 238, 244,
	287, 333, 272, 292, 199, 324, 300, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	242, 0, 283, 221, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 0, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 309, 0, 0, 340, 341, 342, 362, 326, 0,
	213, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	1029, 0, 241, 0, 0, 0, 0, 0, 0, 301,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 1033, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 0, 319, 347, 209, 338, 0, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 361, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 348, 0,
	291, 273, 0, 0, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 343, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 352, 259, 260,
	261, 262, 226, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 0, 283, 221, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	0, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 309, 0, 0, 340, 341,
	342, 362, 326, 0, 213, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 301, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2698, 0, 140, 516, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 0, 319, 347, 209,
	338, 0, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 361, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 348, 0, 291, 273, 0, 0, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 343, 0, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 352, 259, 260, 261, 262, 226, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 0, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 309,
	0, 0, 340, 341, 342, 362, 326, 0, 213, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 301, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 1033, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	0, 319, 347, 209, 338, 0, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 361, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 348, 0, 291, 273,
	0, 0, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 343, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 352, 259, 260, 261, 262,
	226, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 0, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 309, 0, 0, 340, 341, 342, 362,
	326, 0, 213, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 301, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 0, 0, 1033, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2309, 0, 0, 0, 0, 188, 306,
	322, 198, 297, 335, 203, 304, 193, 270, 293, 0,
	0, 190, 320, 303, 252, 235, 236, 189, 0, 288,
	214, 227, 210, 268, 0, 319, 347, 209, 338, 0,
	330, 192, 0, 329, 267, 316, 321, 253, 247, 191,
	318, 251, 246, 239, 218, 361, 231, 279, 245, 280,
	232, 257, 256, 258, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 240, 0, 0, 0,
	348, 0, 291, 273, 0, 0, 0, 289, 243, 317,
	281, 323, 307, 331, 285, 282, 183, 308, 212, 254,
	194, 196, 208, 215, 217, 219, 220, 263, 264, 276,
	296, 310, 311, 312, 211, 204, 290, 205, 229, 206,
	184, 298, 207, 186, 277, 315, 0, 225, 286, 250,
	187, 249, 278, 314, 313, 195, 339, 345, 346, 350,
	0, 351, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 344, 223,
	180, 181, 327, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 343, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 352,
	259, 260, 261, 262, 226, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 266, 233, 299, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 242, 0, 283, 221,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 0, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 309, 0, 0,
	340, 341, 342, 362, 326, 0, 213, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 1846, 0, 241, 0,
	0, 0, 0, 0, 0, 301, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 0, 1033,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 306, 322, 198, 297, 335, 203, 304,
	193, 270, 293, 0, 0, 190, 320, 303, 252, 235,
	236, 189, 0, 288, 214, 227, 210, 268, 0, 319,
	347, 209, 338, 0, 330, 192, 0, 329, 267, 316,
	321, 253, 247, 191, 318, 251, 246, 239, 218, 361,
	231, 279, 245, 280, 232, 257, 256, 258, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	240, 0, 0, 0, 348, 0, 291, 273, 0, 0,
	0, 289, 243, 317, 281, 323, 307, 331, 285, 282,
	183, 308, 212, 254, 194, 196, 208, 215, 217, 219,
	220, 263, 264, 276, 296, 310, 311, 312, 211, 204,
	290, 205, 229, 206, 184, 298, 207, 186, 277, 315,
	0, 225, 286, 250, 187, 249, 278, 314, 313, 195,
	339, 345, 346, 350, 0, 351, 0, 0, 0, 359,
	0, 0, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 344, 223, 180, 181, 327, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 343,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	234, 275, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 325, 337, 354,
	357, 0, 0, 0, 185, 356, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 352, 259, 260, 261, 262, 226, 0,
	202, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	222, 228, 0, 230, 201, 274, 224, 334, 237, 0,
	360, 0, 0, 0, 0, 266, 233, 299, 238, 244,
	287, 333, 272, 292, 199, 324, 300, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	242, 0, 283, 221, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 0, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 309, 0, 0, 340, 341, 342, 362, 326, 0,
	213, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 301,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2801, 0,
	140, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 0, 319, 347, 209, 338, 0, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 361, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 348, 0,
	291, 273, 0, 0, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 343, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 352, 259, 260,
	261, 262, 226, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 0, 283, 221, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	0, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 309, 0, 0, 340, 341,
	342, 362, 326, 0, 213, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 301, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 516, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 0, 319, 347, 209,
	338, 0, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 361, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 348, 0, 291, 273, 0, 0, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 343, 0, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 352, 259, 260, 261, 262, 226, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 0, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 309,
	0, 0, 340, 341, 342, 362, 326, 0, 213, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 301, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2713, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	0, 319, 347, 209, 338, 0, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 361, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 348, 0, 291, 273,
	0, 0, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 343, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 352, 259, 260, 261, 262,
	226, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 0, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 309, 0, 0, 340, 341, 342, 362,
	326, 0, 213, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 301, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2377,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 306,
	322, 198, 297, 335, 203, 304, 193, 270, 293, 0,
	0, 190, 320, 303, 252, 235, 236, 189, 0, 288,
	214, 227, 210, 268, 0, 319, 347, 209, 338, 0,
	330, 192, 0, 329, 267, 316, 321, 253, 247, 191,
	318, 251, 246, 239, 218, 361, 231, 279, 245, 280,
	232, 257, 256, 258, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 240, 0, 0, 0,
	348, 0, 291, 273, 0, 0, 0, 289, 243, 317,
	281, 323, 307, 331, 285, 282, 183, 308, 212, 254,
	194, 196, 208, 215, 217, 219, 220, 263, 264, 276,
	296, 310, 311, 312, 211, 204, 290, 205, 229, 206,
	184, 298, 207, 186, 277, 315, 0, 225, 286, 250,
	187, 249, 278, 314, 313, 195, 339, 345, 346, 350,
	0, 351, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 344, 223,
	180, 181, 327, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 343, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 352,
	259, 260, 261, 262, 226, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 266, 233, 299, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 242, 0, 283, 221,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 0, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 309, 0, 0,
	340, 341, 342, 362, 326, 0, 213, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 301, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 306, 322, 198, 297, 335, 203, 304,
	193, 270, 293, 0, 0, 190, 320, 303, 252, 235,
	236, 189, 0, 288, 214, 227, 210, 268, 0, 319,
	347, 209, 338, 0, 330, 192, 0, 329, 267, 316,
	321, 253, 247, 191, 318, 251, 246, 239, 218, 361,
	231, 279, 245, 280, 232, 257, 256, 258, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 2634, 0, 0, 305, 0, 0,
	240, 0, 0, 0, 348, 0, 291, 273, 0, 0,
	0, 289, 243, 317, 281, 323, 307, 331, 285, 282,
	183, 308, 212, 254, 194, 196, 208, 215, 217, 219,
	220, 263, 264, 276, 296, 310, 311, 312, 211, 204,
	290, 205, 229, 206, 184, 298, 207, 186, 277, 315,
	0, 225, 286, 250, 187, 249, 278, 314, 313, 195,
	339, 345, 346, 350, 0, 351, 0, 0, 0, 359,
	0, 0, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 344, 223, 180, 181, 327, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 343,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	234, 275, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 325, 337, 354,
	357, 0, 0, 0, 185, 356, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 352, 259, 260, 261, 262, 226, 0,
	202, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	222, 228, 0, 230, 201, 274, 224, 334, 237, 0,
	360, 0, 0, 0, 0, 266, 233, 299, 238, 244,
	287, 333, 272, 292, 199, 324, 300, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	242, 0, 283, 221, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 0, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 309, 0, 0, 340, 341, 342, 362, 326, 0,
	213, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 301,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 0, 319, 347, 209, 338, 0, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 361, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 2446, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 348, 0,
	291, 273, 0, 0, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 343, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 352, 259, 260,
	261, 262, 226, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 0, 283, 221, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	0, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 309, 0, 0, 340, 341,
	342, 362, 326, 0, 213, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 301, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 0, 319, 347, 209,
	338, 0, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 361, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 348, 0, 291, 273, 0, 0, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 343, 0, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 352, 259, 260, 261, 262, 226, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 0, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 309,
	0, 0, 340, 341, 342, 362, 326, 0, 213, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 301, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1353, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	0, 319, 347, 209, 338, 0, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 361, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 348, 0, 291, 273,
	0, 0, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 343, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 352, 259, 260, 261, 262,
	226, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 0, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 309, 0, 0, 340, 341, 342, 362,
	326, 0, 213, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 301, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 306,
	322, 198, 297, 335, 203, 304, 193, 270, 293, 0,
	0, 190, 320, 303, 252, 235, 236, 189, 0, 288,
	214, 227, 210, 268, 0, 319, 347, 209, 338, 0,
	330, 192, 0, 329, 267, 316, 321, 253, 247, 191,
	318, 251, 246, 239, 218, 361, 231, 279, 245, 280,
	232, 257, 256, 258, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 240, 0, 0, 0,
	348, 0, 291, 273, 0, 0, 0, 289, 243, 317,
	281, 323, 307, 331, 285, 282, 183, 308, 212, 254,
	194, 196, 208, 215, 217, 219, 220, 263, 264, 276,
	296, 310, 311, 312, 211, 204, 290, 205, 229, 206,
	184, 298, 207, 186, 277, 315, 0, 225, 286, 250,
	187, 249, 278, 314, 313, 195, 339, 345, 346, 350,
	0, 351, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 344, 223,
	180, 181, 327, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 343, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 352,
	259, 260, 261, 262, 226, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 266, 233, 299, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 242, 0, 283, 221,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 0, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 309, 0, 0,
	340, 341, 342, 362, 326, 0, 213, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 301, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 0, 2170,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 306, 322, 198, 297, 335, 203, 304,
	193, 270, 293, 0, 0, 190, 320, 303, 252, 235,
	236, 189, 0, 288, 214, 227, 210, 268, 0, 319,
	347, 209, 338, 0, 330, 192, 0, 329, 267, 316,
	321, 253, 247, 191, 318, 251, 246, 239, 218, 361,
	231, 279, 245, 280, 232, 257, 256, 258, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	240, 0, 0, 0, 348, 0, 291, 273, 0, 0,
	0, 289, 243, 317, 281, 323, 307, 331, 285, 282,
	183, 308, 212, 254, 194, 196, 208, 215, 217, 219,
	220, 263, 264, 276, 296, 310, 311, 312, 211, 204,
	290, 205, 229, 206, 184, 298, 207, 186, 277, 315,
	0, 225, 286, 250, 187, 249, 278, 314, 313, 195,
	339, 345, 346, 350, 0, 351, 0, 0, 0, 359,
	0, 0, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 344, 223, 180, 181, 327, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 343,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	234, 275, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 325, 337, 354,
	357, 0, 0, 0, 185, 356, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 352, 259, 260, 261, 262, 226, 0,
	202, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	222, 228, 0, 230, 201, 274, 224, 334, 237, 0,
	360, 0, 0, 0, 0, 266, 233, 299, 238, 244,
	287, 333, 272, 292, 199, 324, 300, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	242, 0, 283, 221, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 0, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 309, 0, 0, 340, 341, 342, 362, 326, 0,
	213, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 301,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 1033, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 0, 319, 347, 209, 338, 0, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 361, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 348, 0,
	291, 273, 0, 0, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 343, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 352, 259, 260,
	261, 262, 226, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 0, 283, 221, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	0, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 309, 0, 0, 340, 341,
	342, 362, 326, 0, 213, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 301, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 0, 319, 347, 209,
	338, 0, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 361, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 348, 0, 291, 273, 0, 0, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 343, 0, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 352, 259, 260, 261, 262, 226, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 0, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 309,
	0, 0, 340, 341, 342, 362, 326, 0, 213, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 301, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 1855, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	0, 319, 347, 209, 338, 0, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 361, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 348, 0, 291, 273,
	0, 0, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 343, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 352, 259, 260, 261, 262,
	226, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 0, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 0, 0, 340, 341, 342, 362,
	326, 309, 213, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 301,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 0, 319, 347, 209, 338, 0, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 361, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 348, 0,
	291, 273, 0, 0, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 343, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 352, 259, 260,
	261, 262, 226, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 0, 283, 221, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	0, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 309, 0, 0, 340, 341,
	342, 362, 326, 0, 213, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 301, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 1033, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 0, 319, 347, 209,
	338, 0, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 361, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 348, 0, 291, 273, 0, 0, 0, 289,
	243, 317, 281, 323, 307, 331, 1315, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 343, 0, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 352, 259, 260, 261, 262, 226, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 0, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 309,
	0, 0, 340, 341, 342, 362, 326, 0, 213, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 301, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	0, 319, 347, 209, 338, 0, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 361, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 348, 0, 291, 273,
	0, 0, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 343, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 352, 259, 260, 261, 262,
	226, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 608, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 0, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 309, 0, 0, 340, 341, 342, 362,
	326, 0, 213, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 301, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 306,
	322, 198, 297, 335, 203, 304, 193, 270, 293, 0,
	0, 190, 320, 303, 252, 235, 236, 189, 0, 288,
	214, 227, 210, 268, 0, 319, 347, 209, 338, 0,
	330, 192, 0, 329, 267, 316, 321, 253, 247, 191,
	318, 251, 246, 239, 218, 361, 231, 279, 245, 280,
	232, 257, 256, 258, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 240, 0, 0, 0,
	348, 0, 291, 273, 0, 0, 0, 289, 243, 317,
	281, 323, 307, 331, 391, 282, 183, 308, 212, 254,
	194, 196, 208, 215, 217, 219, 220, 263, 264, 276,
	296, 310, 311, 312, 211, 204, 290, 205, 229, 206,
	184, 298, 207, 186, 277, 315, 0, 225, 286, 250,
	187, 249, 278, 314, 313, 195, 339, 345, 346, 350,
	0, 351, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 344, 223,
	180, 181, 327, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 343, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 392, 328,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 352,
	259, 260, 261, 262, 226, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 266, 233, 299, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 242, 0, 283, 221,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 0, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 309, 0, 0,
	340, 341, 342, 362, 326, 0, 213, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 301, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 306, 322, 198, 297, 335, 203, 304,
	193, 270, 293, 0, 0, 190, 320, 303, 252, 235,
	236, 189, 0, 288, 214, 227, 210, 268, 0, 319,
	347, 209, 338, 0, 330, 192, 0, 329, 267, 316,
	321, 253, 247, 191, 318, 251, 246, 239, 218, 361,
	231, 279, 245, 280, 232, 257, 256, 258, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	332, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	240, 0, 0, 0, 348, 0, 291, 273, 0, 0,
	0, 289, 243, 317, 281, 323, 307, 331, 285, 282,
	183, 308, 212, 254, 194, 196, 208, 215, 217, 219,
	220, 263, 264, 276, 296, 310, 311, 312, 211, 204,
	290, 205, 229, 206, 184, 298, 207, 186, 277, 315,
	0, 225, 286, 250, 187, 249, 278, 314, 313, 195,
	339, 345, 346, 350, 0, 351, 0, 0, 0, 359,
	0, 0, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 344, 223, 180, 181, 327, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 343,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	234, 275, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 325, 337, 354,
	357, 0, 0, 0, 185, 356, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 352, 259, 260, 261, 262, 226, 0,
	202, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	222, 228, 0, 230, 201, 274, 224, 334, 237, 0,
	360, 0, 0, 0, 0, 266, 233, 299, 238, 244,
	287, 333, 272, 292, 199, 324, 300, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	242, 0, 283, 221, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 0, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 309, 0, 0, 340, 341, 342, 362, 326, 0,
	213, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 216,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 301,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 0, 319, 347, 209, 338, 0, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 361, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 348, 0,
	291, 273, 0, 0, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 343, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 352, 259, 260,
	261, 262, 226, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 0, 283, 221, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	0, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 309, 0, 0, 340, 341,
	342, 362, 326, 0, 213, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 301, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 0, 319, 347, 209,
	338, 0, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 361, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 348, 0, 291, 273, 0, 0, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 343, 0, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 352, 259, 260, 261, 262, 226, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 0, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 309,
	0, 0, 340, 341, 342, 362, 326, 0, 213, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 301, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	0, 319, 347, 209, 338, 0, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 361, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 348, 0, 291, 273,
	0, 0, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 431, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 343, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 352, 259, 260, 261, 262,
	226, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 0, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 309, 0, 0, 340, 341, 342, 362,
	326, 0, 213, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 301, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 704, 705, 706, 1827, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 306,
	322, 198, 297, 335, 203, 304, 193, 270, 293, 0,
	0, 190, 320, 303, 252, 235, 236, 189, 0, 288,
	214, 227, 210, 268, 0, 319, 347, 209, 338, 0,
	330, 192, 0, 329, 267, 316, 321, 253, 247, 191,
	318, 251, 246, 239, 218, 361, 231, 279, 245, 280,
	232, 257, 256, 258, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 240, 0, 0, 0,
	348, 0, 291, 273, 0, 0, 0, 289, 243, 317,
	281, 323, 307, 331, 285, 282, 183, 308, 212, 254,
	194, 196, 208, 215, 217, 219, 220, 263, 264, 276,
	296, 310, 311, 312, 211, 204, 290, 205, 229, 206,
	184, 298, 207, 186, 277, 315, 0, 225, 286, 250,
	187, 249, 278, 314, 313, 195, 339, 345, 346, 350,
	0, 351, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 344, 223,
	180, 181, 327, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 343, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 352,
	259, 260, 261, 262, 226, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 266, 233, 299, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 248, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 301, 255, 182, 0, 242, 0, 283, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 705, 706, 1827, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 362, 326, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	306, 322, 198, 297, 335, 203, 304, 193, 270, 293,
	0, 0, 190, 320, 303, 252, 235, 236, 189, 0,
	288, 214, 227, 210, 268, 0, 319, 347, 209, 338,
	0, 330, 192, 0, 329, 267, 316, 321, 253, 247,
	191, 318, 251, 246, 239, 218, 361, 231, 279, 245,
	280, 232, 257, 256, 258, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 305, 0, 0, 240, 0, 0,
	0, 348, 0, 291, 273, 0, 0, 0, 289, 243,
	317, 281, 323, 307, 331, 285, 282, 183, 308, 212,
	254, 194, 196, 208, 215, 217, 219, 220, 263, 264,
	276, 296, 310, 311, 312, 211, 204, 290, 205, 229,
	206, 184, 298, 207, 186, 277, 315, 0, 225, 286,
	250, 187, 249, 278, 314, 313, 195, 339, 345, 346,
	350, 0, 351, 0, 0, 0, 359, 0, 0, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 344,
	223, 180, 181, 327, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 343, 0, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 234, 275, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 325, 337, 354, 357, 0, 0,
	0, 185, 356, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	352, 259, 260, 261, 262, 226, 0, 202, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 222, 228, 0,
	230, 201, 274, 224, 334, 237, 0, 360, 0, 0,
	0, 0, 266, 233, 299, 238, 244, 287, 333, 272,
	292, 199, 324, 300, 248, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 301, 255, 182, 0, 242, 0, 283,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 705, 706, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 362, 326, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 0, 319, 347, 209,
	338, 0, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 361, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 348, 0, 291, 273, 0, 0, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 0, 269, 0, 0, 0,
	893, 0, 0, 0, 0, 0, 265, 343, 0, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 352, 259, 260, 261, 262, 226, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	893, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 881, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 612, 0, 901,
	905, 907, 909, 911, 912, 914, 0, 918, 915, 916,
	917, 0, 0, 896, 897, 898, 899, 879, 880, 902,
	0, 882, 0, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 894, 900, 0, 182, 0, 242, 0,
	283, 221, 904, 906, 908, 910, 913, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 893,
	0, 881, 0, 0, 0, 871, 0, 0, 895, 0,
	0, 0, 340, 341, 342, 362, 326, 0, 213, 901,
	905, 907, 909, 911, 912, 914, 0, 918, 915, 916,
	917, 0, 0, 896, 897, 898, 899, 879, 880, 902,
	0, 882, 0, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 894, 900, 0, 0, 0, 0, 0,
	0, 0, 904, 906, 908, 910, 913, 0, 646, 0,
	0, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 895, 0,
	881, 0, 0, 0, 0, 631, 0, 783, 784, 785,
	782, 0, 0, 613, 0, 0, 0, 0, 901, 905,
	907, 909, 911, 912, 914, 0, 918, 915, 916, 917,
	1916, 1917, 896, 897, 898, 899, 879, 880, 902, 636,
	882, 0, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 894, 900, 0, 0, 0, 0, 0, 0,
	0, 904, 906, 908, 910, 913, 2403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 895, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	614, 639, 0, 0, 0, 0, 0, 2385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 903, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2403,
	0, 0, 0, 0, 0, 0, 635, 640, 0, 0,
	0, 0, 0, 0, 0, 2482, 0, 0, 0, 0,
	0, 0, 0, 627, 0, 629, 643, 0, 0, 0,
	626, 624, 623, 1775, 628, 615, 616, 617, 618, 619,
	0, 641, 642, 0, 0, 0, 0, 0, 1192, 0,
	0, 0, 1189, 637, 638, 0, 1191, 1188, 1190, 1194,
	1195, 0, 0, 903, 1193, 0, 0, 0, 0, 0,
	2385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 410, 417, 407, 0, 0, 0,
	632, 0, 0, 2389, 0, 0, 414, 415, 0, 416,
	420, 0, 0, 402, 2393, 0, 0, 0, 0, 0,
	0, 0, 0, 425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2382, 0, 0, 0, 2384, 2386,
	2388, 0, 2390, 2391, 2392, 2394, 2395, 2396, 2398, 2399,
	2400, 2401, 429, 0, 0, 430, 0, 0, 0, 411,
	0, 410, 417, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 903, 414, 415, 0, 416, 420, 0, 0,
	402, 0, 0, 0, 2404, 0, 0, 0, 0, 0,
	425, 0, 0, 0, 0, 0, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1199, 1200, 1201,
	1202, 1203, 1204, 1197, 1198, 0, 2389, 0, 0, 429,
	0, 2402, 430, 0, 0, 0, 0, 2393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2381, 0,
	0, 0, 0, 0, 0, 0, 0, 2382, 0, 0,
	0, 2384, 2386, 2388, 0, 2390, 2391, 2392, 2394, 2395,
	2396, 2398, 2399, 2400, 2401, 0, 0, 2397, 0, 0,
	0, 0, 0, 0, 2387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 405, 404, 0,
	0, 0, 0, 0, 0, 409, 0, 2404, 0, 0,
	0, 0, 411, 0, 410, 417, 407, 413, 0, 0,
	0, 0, 0, 0, 428, 0, 414, 415, 0, 416,
	420, 406, 0, 402, 0, 397, 0, 0, 0, 0,
	0, 0, 0, 425, 2402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2381, 0, 403, 405, 404, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	2397, 428, 0, 0, 0, 0, 0, 2387, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 412, 418, 0, 419, 421,
	0, 0, 422, 423, 424, 0, 0, 426, 427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 412, 418, 0, 419, 421, 0, 0, 422,
	423, 424, 0, 0, 426, 427, 403, 405, 404, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 428, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 412, 418, 0, 419, 421,
	0, 0, 422, 423, 424, 0, 0, 426, 427,
}

var yyPact = [...]int{
	260, -1000, -299, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -207, 26550, 26550,
	-1000, -1000, 1736, -1000, 26046, 9907, 27054, 198, 194, 27054,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 472, -1000, 25542, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 425, 29762, 27558, 297, 7880,
	27054, -277, -1000, 2351, -137, -1000, -1000, -1000, -1000, -1000,
	-1000, 1286, 566, 25038, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	29311, 96, 566, 608, 619, 728, 728, 11923, 2351, 278,
	193, -1000, 881, 260, 28904, 1672, 393, 27054, -1000, 1058,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 393, -1000, -1000, -1000, 2351, 2351, -1000,
	27054, 27054, 0, 1205, -1000, 279, 241, 234, 1054, -1000,
	-1000, -1000, -1000, -1000, 2359, -1000, 27054, 27054, 2052, 27054,
	-1000, 1446, 351, 29829, 2204, 1029, 546, 2080, -1000, -1000,
	2042, -1000, 126, 169, 111, 189, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 112, -1000, 2264, -1000, -1000, 125, -1000,
	-1000, 137, -1000, -1000, -1000, -47, -1000, -1000, -1000, -1000,
	-1000, -136, -1000, -1000, -136, 661, 1499, 7880, -1000, 1541,
	-1000, 3212, -1000, -1000, -1000, -1000, 5350, 9392, 9392, 9392,
	9392, -1000, -1000, 1900, 7880, 2028, 1888, 2025, -1000, -1000,
	-1000, -1000, 1052, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1652, 8888, -1000, 2023, 2021,
	2020, 2018, 2012, 2011, 2007, 2006, 2005, 2004, 1785, 2002,
	1651, 1647, 2001, 2000, 1999, 1646, 1785, 1785, 1980, 1979,
	1963, 1962, 1959, 1958, 1954, 1946, 1942, 1941, 1937, 1931,
	1926, 1923, 1919, 1918, 1916, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29280, -1000,
	1051, 799, -1000, 1914, 2194, 2280, 1794, 2316, 2249, 2246,
	2240, 2238, 1424, -1000, -1000, 27054, 27054, 422, 422, 422,
	422, 446, 422, 467, 464, 463, -1000, -1000, -1000, -1000,
	-1000, -1000, 571, -1000, -1000, -1000, -1000, 843, 27054, -1000,
	1848, 1171, 2275, 358, 355, 248, -1000, 1185, 1185, 1185,
	1171, 276, 323, 2280, 2280, -59, -90, 1171, 1171, -90,
	1171, 91, -1000, -1000, -1000, 1185, 325, 1185, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2265, 2259, 425, 54, 27054,
	425, 432, -1000, -164, -1000, -1000, 695, -1000, 581, -1000,
	1446, 317, 315, 846, 1274, -1000, 1181, 27054, 27054, 27054,
	1181, 1181, 14950, 14446, -1000, 2280, 1794, -1000, 1774, 2056,
	1772, 1794, 425, 425, 425, 425, 425, 425, 425, 27054,
	27054, 6862, 6862, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 304, -1000, -1000, -1000, -1000, -1000, 2195, 233, 1913,
	-1000, 27054, 268, 2280, 2194, 2280, -1000, -1000, 1050, 1423,
	1633, -1000, -1000, 279, 1159, -1000, 750, -1000, -1000, -1000,
	-1000, 27054, 249, -1000, -1000, 1622, 1912, -1000, 364, 887,
	1055, -1000, 105, 29972, 22510, 1446, 22510, 27054, -1000, -1000,
	-1000, -1000, -1000, -1000, -51, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 103, -1000,
	103, 7880, 7880, 7880, 7880, 7880, -1000, 444, 8384, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9392, 9392, 9392, 9392,
	9392, 9392, 9392, 9392, 9392, 9392, 9392, 9392, 1893, 1222,
	9392, 9392, 9392, 9392, 2056, 2260, 844, 170, -1000, -1000,
	-1000, -1000, -1000, 1213, 1499, 7880, 7880, 7880, 27054, -1000,
	29427, 7880, 7880, 117, 7880, 2231, 3837, 27054, 7880, -1000,
	1767, 1765, -1000, -1000, 1318, 7880, -1000, -1000, 7880, 9392,
	7880, -1000, -1000, -1000, 314, 2231, 2231, 7880, 7880, 2231,
	2231, 2231, 1174, 2231, 2231, 2231, 2231, 2231, 2231, 2231,
	2231, 27054, 2177, 108, -1000, -1000, -1000, 1837, -1000, 1846,
	1846, 1837, 1837, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1885, 1909, -1000, -1000, 1844, 1844, 1844, 1837,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1873, 1873, 1882, 1873, 27054,
	2280, -277, 6358, -1000, -282, 2194, 7880, -1000, -1000, 7880,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1632, 2221,
	-1000, 1908, 1043, 27054, 1233, 27054, 22510, 1446, 1500, 27054,
	422, 422, 422, 432, -1000, 27054, 843, 2214, 27054, 2339,
	9392, 9392, 24534, 1185, 1171, -1000, 27054, -1000, -1000, -1000,
	1185, 27054, 1185, 2339, 1185, -1000, -1000, -1000, 1171, 1171,
	-1000, -1000, -1000, -1000, 1185, 1185, -1000, -1000, -73, 2339,
	2339, -53, -1000, 27054, 27054, 422, 27054, -1000, 27054, -1000,
	-1000, 27054, 27054, 27054, 2252, -1000, 22510, 20998, -1000, -97,
	604, 585, 598, -1000, -1000, 363, 360, 13942, 312, 22510,
	4845, -1000, -1000, 1181, 1181, 1181, 4845, 4845, 1020, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2194, -1000, -1000, -1000,
	-1000, -1000, 27054, 22510, 1446, 27054, 27054, 27054, 28904, -1000,
	1907, 870, -1000, -1000, 11419, 1036, 870, 1631, 27054, 1630,
	2072, 2161, -1000, 1901, 12933, 27054, -1000, -1000, -278, -1000,
	12428, 27054, 2194, -1000, 2194, 2845, -1000, 2274, -1000, 279,
	208, -1000, -1000, -1000, -1000, -1000, -1000, 1032, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 842, -1000, 27054,
	-1000, -1000, 105, 22510, 1193, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 122, -1000, -1000, 156, -1000, 443, 40, 1154,
	-1000, -1000, 69, 150, 516, 69, 1499, -1000, 1227, 1227,
	1236, -1000, 419, -1000, -1000, -1000, -1000, 1900, -1000, -1000,
	-1000, 1549, 1441, -1000, 1245, 1245, 1071, 1071, 1071, 1071,
	1071, 1496, 1496, -1000, -1000, -1000, 5350, 1893, 9392, 9392,
	9392, 9392, 403, 403, 2060, 3315, -1000, 7880, 1212, -1000,
	7880, 1607, 2256, 1164, 1018, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1763, 661, 1762, 1746, 2357,
	1760, 7880, -1000, -1000, 1333, 7376, -1000, -1000, -1000, 1759,
	1002, 1751, -1000, -1000, -1000, 1750, 795, 1749, 1153, 1740,
	830, 7880, 7880, 1152, 1150, 7880, 7880, 7880, 7880, 1738,
	7880, 7880, 7880, 7880, 7880, 7880, 7880, 7880, -1000, 7880,
	70, -1000, -1000, -1000, -1000, 1420, -1000, 1418, -1000, -1000,
	-1000, 1628, 1628, -1000, 1412, -1000, -1000, -1000, -1000, 1410,
	-1000, -1000, 1405, -1000, -1000, -1000, -1000, 1146, -1000, 1499,
	-1000, 1615, -1000, 893, 827, -1000, 1422, -1000, -1000, 27054,
	10411, 27054, 1848, 2199, 60, -1000, 884, -1000, 40, 731,
	2049, 2170, 27054, 27054, 27054, 24030, -1000, 1892, 1125, -1000,
	-1000, 7880, -1000, -1000, 2047, 1446, 27054, 2339, -1000, -1000,
	-1000, 28904, -1000, -1000, -1000, 27054, 2339, 2339, 1171, 1185,
	1185, -1000, -1000, 1185, -1000, 986, -1000, 27054, -1000, -1000,
	1848, 57, 2245, 157, 884, 2352, 840, -1000, -1000, -1000,
	-1000, 28062, 28062, 13438, 28062, -1000, 1191, -1000, -1000, 601,
	576, 679, -1000, -1000, 440, -1000, -1000, 731, -1000, -1000,
	-1000, 1889, 1204, -1000, -1000, 1888, -1000, 4845, 4845, 4845,
	-1000, -1000, 16966, -1000, -1000, 793, 731, 2071, 787, -1000,
	787, -1000, 10411, 2339, 6862, -1000, 20998, -1000, -1000, 23518,
	-1000, 23014, 2339, -286, 784, -98, -1000, 2181, -278, 27054,
	27054, 1095, 172, -1000, 1090, -1000, 663, -1000, 1886, -1000,
	1081, 2128, 729, -1000, 1197, -1000, -1000, -1000, 982, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-4, -1000, -1000, 27054, 1622, 1078, 1193, 757, -1000, 434,
	977, 975, -1000, 22510, 118, 22510, -1000, 22510, -1000, -1000,
	245, -1000, 27054, 2192, -1000, -1000, -1000, 1581, -305, 2191,
	-1000, -1000, -1000, -1000, -1000, 1075, -1000, 403, 403, 2060,
	2680, -1000, 9392, -1000, 9392, 2242, 1161, -1000, 7880, 1288,
	29190, -1000, 1086, 15958, 27054, -1000, -1000, 7880, 7880, -1000,
	2175, -1000, 7880, 7880, 1697, -1000, 27054, -1000, -1000, -1000,
	15958, -1000, 9392, -1000, 7880, 797, 2160, -48, -48, 2134,
	2104, 2078, 1074, -48, 2065, 2015, 2009, 1880, 1802, 1766,
	1692, 1661, 1499, -1000, -1000, 1737, 1733, 1062, -1000, 1047,
	1732, 1045, 1034, 6358, -1000, -98, 7880, 7880, 7880, 2156,
	-1000, -1000, 81, 1731, 786, -1000, -1000, -1000, 29379, 1846,
	1837, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1885, -1000, -1000, 1844, 1844, 1844, 1837, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1873, 1873, 1882, 1873,
	-1000, 2212, -1000, -58, 1118, 388, 22510, 313, -1000, 2067,
	307, -1000, 2170, -1000, 995, -1000, 1859, 1854, 1850, 27054,
	826, -1000, 971, 260, -1000, 27054, 1499, -1000, 1446, -1000,
	1171, -1000, -1000, 2339, 1041, -1000, -1000, 2339, 1171, 1171,
	1185, 27054, -1000, 2211, -58, 1118, 155, 1190, 388, 27054,
	20998, 20998, 20998, 20998, -1000, 2099, 2098, -1000, 2106, 2096,
	2107, 27054, 20998, 1848, -1000, 28483, -1000, -1000, -1000, -1000,
	-1000, 2056, 1026, 2369, 583, 7880, -1000, -1000, -1000, 568,
	22510, 1614, 312, -1000, -1000, -1000, -1000, -1000, 27054, 27054,
	1728, 2337, -1000, 770, -1000, -1000, 958, -1000, 2337, -1000,
	1404, 1611, -24, -14, 1293, 663, 729, 1016, -1000, 172,
	27054, 2121, 1847, -1000, 27054, -278, 6358, 266, -278, 27054,
	6358, 2845, 1402, -1000, -1000, -1000, 2356, 22510, 1446, 1077,
	1180, -1000, 119, -1000, 121, 370, 1610, -1000, 455, 87,
	-1000, 1158, 1581, 449, -1000, -1000, -1000, 9392, -1000, -1000,
	-1000, -1000, 1499, 7880, 1726, -1000, 580, 580, 1724, -1000,
	1837, 1846, -1000, 1837, 1844, 1837, 580, 580, 1709, -1000,
	1371, 1650, -1000, 1624, 1618, 7880, -1000, 1705, 2560, 961,
	-162, -48, -1000, 1843, -1000, -48, -48, -48, -48, -1000,
	-48, -48, -48, -48, -48, -48, -48, -48, -1000, -1000,
	-1000, 1609, -1000, -1000, -1000, 1401, -1000, 1398, -1000, -24,
	1499, 1499, -1000, -1000, 2148, 1606, 477, 10411, 2169, 235,
	1429, -1000, -1000, 22006, -1000, 343, -1000, -1000, -1000, 478,
	134, 1394, 340, -1000, 1653, 27054, -1000, -1000, -1000, -1000,
	-1000, 1118, 1118, 1118, 10915, 10915, 10915, 393, 718, 933,
	20998, 27054, -1000, 20494, 1703, -1000, 731, 2339, -1000, 27054,
	-1000, 2339, 2339, 1171, -1000, 235, 1429, 22006, 1133, 1593,
	343, 831, -1000, 1131, 2058, 2063, 2058, -1000, -1000, -1000,
	-1000, 2095, -1000, 2076, -1000, -1000, 831, -1000, -1000, -1000,
	-1000, -1000, 583, -1000, 2273, 629, 629, 629, 1702, -1000,
	757, 1701, -1000, -1000, -1000, -1000, -1000, 2325, 2310, 21502,
	2325, -1000, -286, -284, -10, 2309, 2306, 2363, 235, 27054,
	240, -1000, -278, 27054, -1000, -1000, 1696, 744, -278, -1000,
	663, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1446, -1000,
	114, -1000, -1000, -1000, -1000, -1000, -1000, 16, -1000, 27054,
	-1000, 1581, 1567, 84, 27054, -1000, 1499, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7880, -1000, -1000, -1000, 1570, -1000, -1000, 7880,
	1695, 1562, -1000, 392, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1694, 1691, -284,
	-1000, -1000, -1000, 29379, -1000, 1523, -1000, -1000, 1559, 34,
	-1000, -1000, -1000, 1557, 1554, 1392, -1000, -1000, 1427, 882,
	49, -1000, -1000, -1000, -1000, -1000, -1000, 1842, 15958, 16462,
	1540, 1690, 742, -1000, -1000, -1000, 29379, 671, -1000, 27054,
	1261, 629, 422, 629, 1260, 1840, -1000, -1000, 1688, 1687,
	28062, 20998, 20494, 829, -1000, 929, -1000, -1000, -1000, 2339,
	-1000, -1000, 2339, -1000, -1000, 34, 1538, -1000, -1000, 2318,
	27054, 6358, -1000, -1000, 7880, 1839, -1000, 7880, -1000, -1000,
	-1000, -1000, -1000, 1838, 2187, -1000, -1000, -1000, -1000, -1000,
	-1000, 7880, 7880, -1000, -1000, -1000, -286, 1537, -1000, -1000,
	2305, 1536, 1468, 27054, -1000, -1000, -278, -1000, 663, 1010,
	-1000, 663, 731, -1000, -1000, 172, -1000, -1000, -1000, -53,
	1566, -1000, 1485, -48, -1000, 2318, -1000, 2302, -1000, -1000,
	-286, -233, -1000, -1000, -1000, -1000, 228, -1000, -1000, 168,
	-1000, -1000, 1416, 369, -1000, 18982, -1000, -1000, -1000, -1000,
	-1000, 29683, 10915, 1548, -1000, -1000, 27054, 27054, -1000, 27054,
	27054, 422, 7880, 103, 29683, 2339, 829, 929, -1000, -1000,
	1057, -1000, -1000, -1000, -1000, 2280, -1000, -1000, 1499, 27054,
	1499, 19990, -1000, 2299, 2296, 1499, 661, -288, -1000, 1529,
	-13, -1000, -1000, 729, 663, -1000, -53, -1000, -27, -26,
	-1000, -1000, -1000, 56, 7880, -288, 27054, 348, 1526, -1000,
	-1000, 162, -1000, -1000, 1009, -1000, 1837, 7880, 380, 29570,
	-1000, 1118, 1118, 685, 1118, 1118, 1118, 1118, 294, 288,
	1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118, 1118,
	1118, 1118, 1118, 1118, 1836, -1000, -1000, 1548, -1000, -1000,
	1292, 9392, -1000, -1000, 1525, 16462, 570, 545, 1831, -1000,
	247, 2362, -1000, 1250, 1247, -1000, 27054, -1000, 1830, 1935,
	214, 1820, -1000, 1819, 1818, 27054, 1459, -1000, -53, 380,
	2318, -1000, -1000, 1005, 992, -1000, -1000, -1000, -1000, -1000,
	1805, -1000, 2295, -291, 430, -20, -26, -1000, 2294, -15,
	2292, 2291, 1679, -1000, 3333, -1000, -1000, -1000, 661, -1000,
	2208, -1000, -1000, 9, -1000, -1000, -1000, 18982, 2186, 1431,
	216, 2288, 29683, -1000, 1388, 1376, 1118, 1118, 1362, 1522,
	1520, 1514, 1118, 1118, 1357, 1513, 28483, 1355, 1341, 1336,
	1382, 1509, 748, 1367, 1352, 1350, 27054, 1800, 1452, -1000,
	-1000, 2060, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1335, 1799, -100, -1000, -1000, 1796, 18982,
	321, 321, 18982, 18982, 18982, 1787, 436, -1000, 216, 2280,
	-1000, -1000, 19486, 27054, 1468, -1000, 1507, 1786, 1334, -10,
	-19, 2287, -1000, 1468, 2285, 1468, 1468, -1000, -1000, 4341,
	-280, -40, 356, 1501, -1000, 165, -1000, -1000, 2186, -1000,
	2284, 258, -1000, -1000, -1000, 15958, 15958, -1000, -1000, -1000,
	-1000, 1481, 1471, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 308, 27054, 968, -1000, 1121,
	1612, 7880, 1785, -204, 18982, 962, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 955, 953, 948, 18982, -1000, -1000, -1000,
	257, -1000, -1000, -1000, -1000, 914, -1000, -1000, -1000, 2228,
	15454, -33, -1000, -1000, -1000, 1470, -1000, 1468, -1000, -1000,
	1235, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1118, 1453,
	187, -1000, -1000, -1000, 18478, 244, 264, 246, -1000, 418,
	-1000, -1000, -1000, -1000, -1000, -1000, 302, 902, -1000, 1452,
	1437, -1000, 1253, -1000, 2062, -1000, 85, 892, -1000, -1000,
	-1000, -1000, 861, -1000, -1000, 27054, -1000, 27054, -1000, 857,
	-1000, -1000, -1000, 905, -1000, -1000, -1000, -1000, 4341, 1330,
	-1000, 1500, -1000, 27054, 236, 1326, 9392, 1784, 9392, 1781,
	238, 1780, -1000, -1000, -1000, -1000, -1000, 436, -1000, 2061,
	1883, 2349, -1000, -1000, -1000, -1000, 165, 165, 165, 165,
	109, -1000, 659, -1000, 1109, -1000, 17974, 27054, -1000, -1000,
	-1000, 839, 1779, 2283, -1000, 2400, 27054, 1933, 27054, 1777,
	1099, 9392, -1000, -1000, 2353, -1000, 2350, 648, 648, -1000,
	27054, 5854, -1000, 875, -1000, -1000, 378, 230, -1000, 834,
	-1000, 823, 17470, 1313, 1413, -1000, -1000, -1000, 1344, 270,
	-1000, -1000, -1000, 1499, 27054, 822, -1000, 1625, 223, -1000,
	-1000, -1000, 820, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	378, 2119, -1000, 1310, -1000, -1000, 1478, 487, -1000, -1000,
	1478, 229, -1000, 366, 1776, -1000, -1000, 807, -1000, 1569,
	564, 7880, -1000, 229, 29683, -1000, 7880, 791, -1000, 29683,
	696, -1000, -1000,
}

var yyPgo = [...]int{
	0, 153, 2815, 216, 147, 145, 210, 2814, 2813, 2218,
	2214, 2812, 2811, 2810, 2809, 2808, 2794, 2792, 2791, 2789,
	2788, 2786, 2785, 2780, 2779, 2778, 2777, 2776, 2775, 2774,
	2772, 200, 2771, 2770, 2763, 2760, 2756, 2755, 2754, 2752,
	2751, 2745, 2744, 2743, 2742, 2741, 2740, 2739, 2738, 2737,
	2736, 2735, 2734, 2733, 2732, 2730, 2728, 132, 2727, 2211,
	2726, 2722, 2720, 2719, 2718, 2717, 185, 2716, 2715, 2708,
	2707, 2706, 2705, 2704, 2702, 2701, 2700, 2699, 2698, 2697,
	2695, 2694, 150, 2691, 2690, 134, 2688, 2674, 2673, 2672,
	201, 191, 62, 2671, 44, 124, 166, 226, 424, 218,
	217, 162, 140, 80, 2669, 2219, 2668, 152, 195, 123,
	30, 2667, 141, 2666, 137, 58, 52, 211, 116, 56,
	127, 108, 2664, 188, 65, 89, 97, 2663, 2662, 220,
	163, 2661, 103, 2660, 2659, 2658, 2657, 179, 114, 2656,
	60, 2654, 81, 27, 101, 28, 2653, 2652, 2650, 96,
	2649, 2648, 2647, 2646, 161, 2645, 117, 53, 2644, 2643,
	2640, 59, 2638, 32, 2637, 49, 2633, 2632, 2631, 2630,
	70, 2629, 2626, 12, 18, 16, 2625, 17, 1, 2624,
	190, 71, 90, 118, 2623, 414, 2622, 2621, 2620, 129,
	2619, 495, 2618, 2617, 2616, 2614, 10, 2613, 181, 55,
	2612, 86, 107, 2611, 54, 173, 174, 2610, 2606, 113,
	63, 94, 112, 2605, 2604, 76, 192, 19, 26, 0,
	170, 42, 2601, 2600, 2596, 214, 2594, 202, 169, 196,
	142, 224, 156, 2593, 2591, 51, 2590, 130, 83, 110,
	6, 2589, 246, 2579, 205, 149, 2578, 182, 2575, 275,
	3, 121, 2574, 2573, 29, 240, 2572, 2571, 2569, 139,
	2568, 2567, 73, 155, 2565, 2564, 2563, 24, 2561, 37,
	21, 2556, 102, 2555, 207, 177, 171, 111, 157, 158,
	120, 194, 197, 68, 122, 1189, 119, 87, 22, 2553,
	193, 2552, 213, 215, 2551, 168, 2550, 204, 368, 180,
	2549, 159, 7, 61, 31, 2548, 9, 2547, 85, 2546,
	2545, 20, 2542, 25, 2541, 2540, 2538, 2537, 8, 2536,
	2532, 2531, 2, 4, 2529, 5, 184, 98, 126, 2514,
	136, 172, 2513, 2512, 84, 2511, 2510, 2508, 252, 2506,
	2502, 2473, 2472, 2471, 2470, 2469, 2467, 2466, 64, 36,
	2464, 2463, 2462, 2460, 77, 115, 2458, 294, 183, 2456,
	43, 167, 2455, 41, 2453, 35, 33, 48, 2452, 106,
	2451, 14, 160, 2449, 2448, 15, 2447, 2446, 11, 13,
	2445, 2444, 69, 2441, 38, 34, 79, 82, 2439, 23,
	75, 109, 2434, 2433, 206, 209, 178, 2432, 143, 203,
	221, 2431, 186, 2430, 2420, 2419, 2417, 2415, 2414, 1201,
	2413, 2410, 199, 57, 95, 100, 2403, 2402, 2400, 74,
	131, 105, 99, 176, 2399, 164, 2394, 2393, 92, 2392,
	2391, 2387, 2383, 2380, 2379, 2378, 212, 208, 2377,
}

//line mysql_sql.y:8455
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 434, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 88, 432, 432, 432, 433, 433,
	86, 86, 86, 75, 74, 87, 381, 381, 380, 380,
	379, 379, 335, 335, 378, 378, 378, 377, 377, 377,
	376, 376, 375, 375, 374, 374, 372, 372, 373, 371,
	370, 370, 370, 368, 368, 368, 364, 364, 366, 365,
	365, 367, 359, 359, 362, 362, 360, 360, 360, 360,
	363, 358, 358, 358, 357, 357, 73, 73, 73, 287,
	287, 72, 72, 301, 301, 301, 301, 301, 299, 299,
	299, 299, 299, 299, 298, 298, 297, 297, 302, 302,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	67, 67, 67, 67, 70, 70, 70, 71, 296, 296,
	296, 68, 69, 69, 286, 286, 291, 291, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	295, 295, 295, 293, 293, 292, 292, 294, 294, 61,
	61, 61, 64, 63, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 62, 62, 62, 62, 62, 62, 58,
	58, 58, 58, 58, 57, 57, 59, 59, 284, 284,
	283, 78, 78, 78, 78, 78, 78, 78, 77, 77,
	80, 80, 79, 81, 66, 66, 66, 66, 66, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 405, 405,
	405, 407, 407, 223, 224, 435, 226, 222, 222, 222,
	401, 401, 402, 403, 404, 404, 404, 76, 7, 7,
	7, 7, 56, 54, 60, 60, 418, 418, 55, 425,
	425, 338, 338, 237, 237, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 341, 342, 233, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 38, 37, 37, 37, 273,
	273, 36, 436, 436, 206, 206, 45, 46, 47, 48,
	49, 50, 35, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 53, 53, 353, 353, 438, 438, 438, 51,
	52, 337, 337, 337, 43, 42, 41, 40, 40, 34,
	34, 33, 33, 39, 230, 230, 230, 232, 232, 228,
	437, 437, 313, 313, 231, 231, 32, 32, 32, 229,
	229, 205, 227, 227, 227, 8, 8, 6, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 18, 20, 281,
	281, 278, 19, 14, 13, 16, 12, 15, 17, 5,
	5, 5, 5, 9, 9, 10, 102, 102, 144, 144,
	413, 413, 409, 409, 410, 410, 410, 411, 411, 412,
	412, 82, 347, 347, 347, 347, 347, 347, 4, 124,
	124, 125, 125, 346, 346, 346, 346, 346, 346, 346,
	431, 431, 390, 390, 390, 391, 123, 123, 118, 118,
	348, 348, 251, 392, 392, 356, 356, 355, 355, 354,
	354, 121, 121, 122, 122, 105, 105, 91, 91, 361,
	361, 361, 361, 369, 369, 334, 334, 170, 170, 199,
	199, 200, 200, 95, 95, 96, 96, 96, 96, 96,
	96, 398, 398, 400, 400, 399, 120, 120, 116, 116,
	117, 117, 117, 115, 115, 114, 113, 113, 112, 110,
	110, 110, 111, 111, 111, 98, 98, 98, 97, 97,
	97, 97, 97, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 99, 99, 406, 406, 406,
	339, 339, 339, 344, 344, 182, 182, 183, 183, 181,
	181, 100, 100, 101, 101, 101, 101, 180, 180, 179,
	103, 103, 109, 108, 108, 104, 104, 104, 104, 190,
	190, 189, 189, 189, 189, 85, 89, 89, 90, 128,
	128, 188, 187, 187, 187, 127, 127, 126, 126, 119,
	119, 107, 107, 107, 107, 186, 106, 184, 430, 430,
	429, 429, 428, 426, 426, 426, 427, 427, 427, 427,
	383, 383, 383, 383, 383, 215, 215, 215, 221, 221,
	214, 214, 214, 214, 214, 225, 220, 220, 216, 216,
	217, 217, 217, 3, 3, 3, 3, 24, 24, 24,
	24, 24, 24, 30, 136, 137, 29, 129, 129, 130,
	130, 131, 131, 132, 133, 133, 133, 135, 134, 28,
	21, 414, 417, 415, 415, 419, 419, 419, 420, 420,
	420, 421, 421, 22, 416, 422, 422, 422, 282, 282,
	279, 280, 280, 277, 276, 276, 276, 424, 424, 423,
	423, 423, 218, 218, 23, 272, 272, 274, 275, 275,
	266, 266, 266, 266, 27, 270, 270, 271, 271, 271,
	271, 271, 267, 267, 269, 269, 265, 265, 265, 265,
	265, 26, 264, 264, 262, 262, 260, 260, 261, 261,
	259, 259, 259, 263, 263, 25, 25, 25, 93, 92,
	92, 92, 202, 202, 201, 201, 94, 340, 340, 303,
	303, 304, 304, 304, 307, 307, 319, 319, 320, 320,
	318, 318, 325, 325, 324, 324, 323, 323, 322, 322,
	321, 321, 321, 321, 316, 316, 315, 315, 305, 305,
	305, 305, 305, 306, 306, 306, 314, 314, 317, 317,
	161, 161, 162, 162, 162, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 388, 388, 389, 164, 164, 164,
	168, 168, 168, 168, 168, 168, 163, 163, 165, 165,
	145, 145, 143, 143, 138, 138, 139, 139, 140, 140,
	141, 141, 142, 142, 142, 142, 142, 142, 289, 289,
	386, 386, 387, 387, 382, 382, 382, 385, 385, 385,
	385, 385, 384, 384, 146, 197, 197, 197, 219, 219,
	219, 196, 196, 196, 160, 160, 159, 159, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 288, 288, 234, 234, 235, 235, 177,
	176, 176, 176, 176, 176, 174, 175, 173, 173, 173,
	173, 173, 172, 172, 171, 171, 171, 268, 268, 169,
	169, 167, 167, 167, 166, 166, 166, 326, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 243, 243, 248, 248, 397, 397, 396, 147,
	147, 147, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 156, 156, 156, 311, 311, 311, 311, 311, 312,
	312, 312, 309, 309, 310, 310, 252, 253, 253, 345,
	345, 308, 308, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	352, 352, 352, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 408, 408, 408, 393, 393,
	393, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	194, 194, 194, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 254, 254, 255, 255, 349,
	349, 349, 349, 349, 349, 350, 350, 351, 351, 351,
	351, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	241, 191, 191, 191, 256, 249, 249, 250, 250, 244,
	244, 244, 244, 244, 244, 244, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 245, 245,
	247, 247, 258, 258, 258, 257, 257, 257, 257, 257,
	257, 257, 158, 158, 158, 158, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 149, 149, 149,
	149, 153, 153, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 154, 154, 154,
	154, 152, 152, 152, 152, 152, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 83, 84, 84, 151, 198, 198, 327, 327,
	330, 330, 328, 328, 329, 331, 331, 331, 332, 332,
	332, 333, 333, 333, 336, 336, 204, 204, 204, 211,
	211, 203, 203, 212, 212, 213, 213, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 9, 11, 2, 0, 2, 1, 3,
	3, 3, 0, 2, 1, 3, 5, 0, 2, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	0, 3, 3, 0, 3, 3, 0, 1, 3, 0,
	1, 3, 0, 2, 1, 2, 3, 4, 3, 3,
	1, 0, 1, 1, 0, 1, 8, 5, 7, 0,
	3, 8, 5, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 4, 1, 3,
	1, 2, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 2, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 3, 3, 2, 4, 4, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 2, 2, 0, 1, 4, 2, 4, 1,
	5, 3, 2, 1, 2, 2, 4, 4, 5, 2,
	1, 3, 4, 4, 1, 2, 9, 7, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 7, 7, 7, 8, 0, 4, 7, 0,
	3, 0, 2, 0, 1, 1, 1, 1, 4, 2,
	2, 3, 3, 4, 5, 3, 4, 4, 2, 2,
	2, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 2, 5, 5, 0,
	2, 7, 0, 1, 0, 1, 5, 3, 2, 4,
	4, 4, 4, 1, 1, 1, 3, 2, 3, 1,
	1, 1, 6, 8, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 6, 7, 4,
	4, 7, 8, 3, 0, 2, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 4, 5, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	3, 1, 4, 6, 4, 4, 4, 3, 6, 1,
	1, 2, 2, 11, 8, 9, 1, 3, 2, 4,
	0, 2, 0, 1, 1, 1, 1, 0, 1, 0,
	1, 4, 2, 1, 5, 4, 4, 2, 5, 0,
	4, 1, 3, 3, 1, 5, 6, 5, 5, 3,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 1, 12, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 7,
	7, 1, 4, 1, 1, 3, 4, 3, 0, 1,
	1, 0, 2, 7, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 5, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 11, 9, 11, 2, 2,
	4, 5, 1, 3, 0, 3, 5, 0, 1, 0,
	6, 0, 3, 5, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 5, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 5, 6, 5, 0, 3, 0, 1,
	0, 1, 1, 3, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 4, 1, 3, 3, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 1, 7, 7, 7, 7, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 4, 1, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 4, 6, 6, 1, 1,
	1, 1, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 5, 0, 1, 3, 0, 1, 0,
	2, 0, 6, 8, 6, 5, 5, 6, 6, 6,
	6, 5, 6, 6, 6, 6, 6, 6, 6, 6,
	1, 1, 1, 4, 4, 6, 8, 6, 4, 5,
	4, 6, 6, 7, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 8, 4, 2, 3, 2, 4, 6, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -434, -2, -1, -3, -86, -4, -82, -5, -6,
	-8, -65, -77, -79, -81, -80, -31, -7, -76, -57,
	-58, -61, -67, -72, -73, -74, -75, -87, -83, -84,
	-85, -95, -88, -24, -23, -22, -21, 397, 12, 442,
	-9, -10, -398, -11, 232, -222, -223, -224, -226, -435,
	-32, -33, -34, -40, -41, -42, -43, -51, -52, -53,
	-35, -36, -37, -38, -45, -46, -47, -48, -49, -50,
	-39, -55, -54, -60, -56, 208, -59, 61, -62, -63,
	-64, -68, -69, -70, -71, 328, 334, 387, 396, 524,
	525, 46, -96, -98, 526, -25, -26, -27, -28, -29,
	-30, 204, 14, 475, -12, -15, -13, -16, -14, -19,
	-20, -18, -17, 227, 226, 37, 290, 291, 292, 332,
	225, 205, 13, 136, 137, 139, 140, 30, -97, 67,
	206, -99, 10, 528, 435, 527, -105, 38, -143, -219,
	70, -207, -210, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 445,
	308, 309, 472, 244, 268, 358, 271, 278, 136, 155,
	149, 177, 169, 144, 248, 283, 249, 77, 139, 428,
	87, 408, 384, 142, 263, 265, 267, 270, 250, 165,
	160, 262, 246, 524, 158, 251, 39, 252, 182, 253,
	254, 477, 404, 307, 410, 275, 382, 159, 405, 266,
	407, 184, 188, 420, 334, 153, 154, 412, 422, 181,
	224, 42, 474, 236, 423, 186, 180, 176, 431, 279,
	277, 179, 152, 175, 247, 50, 190, 189, 191, 378,
	379, 380, 381, 255, 256, 322, 419, 172, 161, 312,
	145, 22, 426, 231, 409, 335, 257, 272, 280, 185,
	187, 238, 243, 476, 386, 242, 276, 424, 157, 235,
	264, 230, 427, 146, 328, 337, 258, 140, 269, 421,
	430, 49, 350, 151, 143, 221, 137, 240, 245, 11,
	259, 260, 261, 282, 281, 273, 173, 237, 178, 163,
	150, 174, 138, 239, 429, 351, 522, 310, 367, 171,
	168, 241, 214, 425, 411, 141, 371, 352, 166, 284,
	518, 519, 520, 323, 306, 285, 286, 164, 228, 403,
	287, 289, 377, 299, 353, 385, 359, 354, 197, 293,
	414, 183, 521, -105, -59, -10, -9, -97, -98, -143,
	212, -227, 23, 382, -66, 383, 208, 67, -219, -5,
	-4, -82, -57, -95, -225, -219, 290, 290, -225, 212,
	-219, 242, 366, -338, 217, -298, -272, 243, -297, -274,
	-300, -275, 31, 204, 206, 205, 239, 14, 332, 213,
	12, 10, 333, 225, 24, 25, 27, 13, 334, 336,
	28, 337, 340, 341, 342, 41, 345, 346, 232, 70,
	73, 250, -137, -219, 250, -250, -244, 94, 233, -246,
	-239, -240, -242, -378, -372, -238, 67, 120, 121, 128,
	95, -241, -326, 35, 97, 482, 131, 443, -192, -193,
	-194, -195, -219, -373, -371, 73, 78, 81, 84, 85,
	83, 82, 162, 80, 74, 132, 133, -98, 70, -393,
	490, -208, 511, 510, 46, -343, -351, 211, -349, 167,
	228, 163, 12, 126, 377, 164, 487, 507, 445, 491,
	514, 484, 485, 479, 480, 481, 483, 492, 494, 506,
	-352, 502, 512, 513, 500, 72, 71, 505, 504, 493,
	488, 489, 495, 478, 486, 496, 497, 503, 508, 509,
	316, 87, 317, 318, 435, 311, 319, 217, 382, 55,
	320, 321, 322, 323, 324, 442, 325, 56, 326, 315,
	232, 367, 327, 166, 183, 447, 446, 448, 439, 436,
	434, 437, 438, 440, 441, 498, 499, 501, -294, -292,
	-219, -89, -90, 516, -114, -115, -185, 19, 6, 7,
	8, 9, -432, 384, 476, 293, 329, 214, 308, 367,
	242, -266, -264, -340, 287, 283, 222, 221, 88, 435,
	211, 343, -409, -410, 201, 202, 203, -400, 468, -399,
	-219, 318, 26, 212, 329, 414, 415, 416, 417, 418,
	-44, -353, -337, 411, 410, -231, 409, 402, 413, 404,
	309, 204, 469, -204, 353, 385, 238, 432, 433, 330,
	386, 420, 421, 405, 87, 170, 167, 214, 308, 435,
	367, -409, 141, 138, -285, 141, 93, 146, 145, -285,
	242, 366, 40, -291, 377, -290, -292, 420, 421, 431,
	71, 72, 419, -204, 87, -115, -185, -114, -96, -98,
	-85, -398, 308, 367, 242, 213, 212, 214, 435, 290,
	329, -339, -406, 31, -344, 198, 199, 200, 32, 33,
	-1, -220, -217, -210, 70, 71, 72, 73, -121, 234,
	-143, 134, -121, -115, -114, -115, -143, -196, -219, 384,
	103, -66, -66, 383, -401, -402, -403, -405, 208, 383,
	382, 134, 15, -225, -225, 65, -143, -274, 242, -298,
	-272, 35, 64, 135, 215, 135, 64, 67, 330, 308,
	367, 331, 435, 212, 343, 214, 242, 344, 308, 367,
	212, 214, 435, 242, 308, 212, 214, 367, 242, 344,
	402, 403, 214, 26, 335, 338, 339, 403, -357, 431,
	-357, 135, 93, 90, 91, 92, -244, 110, -257, 103,
	104, 105, 106, 107, 108, 109, 117, 116, 127, 120,
	121, 122, 123, 124, 125, 126, 118, 119, 113, 94,
	111, 115, 112, 96, -98, -244, -250, 46, -242, -242,
	-242, -242, -326, -248, -244, 67, 67, 67, 134, 73,
	-244, 67, 67, 67, 67, 67, 67, 67, 67, -350,
	67, 67, -254, -255, 67, 67, 73, 73, 67, 67,
	67, 73, -255, -255, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 135, -149, -153, -150, -152, -151, -155, -154, 167,
	168, 131, 171, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 30, 183, 228, 163, 164, 165, 166,
	184, 149, 169, 473, 192, 150, 193, 151, 194, 152,
	195, 153, 154, 196, 155, 158, 159, 160, 157, 134,
	-115, 135, 67, -91, 38, -117, 21, -99, -98, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 78, -136,
	-219, -129, -219, -262, 217, -262, -262, -262, 213, -262,
	212, 212, 212, -411, 148, 135, -400, -120, 67, -230,
	111, 115, 23, 240, 240, 277, -436, -437, 15, 113,
	-228, -437, -228, -230, -438, 213, 412, 42, 241, 240,
	-116, -117, -116, 406, 403, -313, 407, 408, -231, -230,
	-230, -231, -230, 212, 214, 435, -436, 240, -436, 30,
	30, -338, -338, 469, -205, -219, -338, -412, 216, 424,
	475, 144, 145, 146, -274, 242, 242, 135, 103, 23,
	-293, 103, 114, -292, -292, -292, -293, -293, -163, 40,
	-218, 131, -219, 73, -163, 40, -116, -99, -98, 68,
	68, 68, -338, -338, -338, -338, -338, -338, -338, -225,
	-129, -100, -101, 122, -244, -219, -100, 38, 403, 38,
	-346, -124, -95, 309, 67, 67, -219, -347, 46, -95,
	67, 30, -116, -91, -117, 134, 78, 73, -66, 68,
	135, -404, 84, 85, -407, 181, 173, -219, -78, 73,
	-3, -4, -5, -6, -31, -57, -95, -374, -372, 67,
	31, 376, 64, 15, -299, 212, 435, 329, 238, 214,
	308, -297, -281, -278, -276, -218, -274, -277, -276, -302,
	-196, 403, -92, 388, 289, -92, -244, -244, -244, -244,
	-244, 83, 94, 306, 84, 85, -239, -258, 31, 285,
	286, -240, -240, -240, -240, -240, -240, -240, -240, -240,
	-240, -240, -240, -247, -256, -326, 67, 113, 111, 115,
	112, 96, -242, -242, -240, -240, 68, 135, -397, -396,
	98, -244, -244, -244, -219, -394, -395, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 320, 315,
	321, 319, 311, 327, 322, 323, 166, 466, 467, 460,
	461, 462, 463, 464, 465, -249, -250, -249, -244, -394,
	-249, -191, 32, 31, -244, -408, 304, 303, 305, -118,
	-219, -249, 68, 68, 68, 78, -250, -249, -240, -249,
	-395, -191, -191, -250, -250, -191, -191, -191, -191, 122,
	-191, -191, -191, -191, -191, -191, -191, -191, -292, 40,
	-333, 351, 350, -327, -329, 67, -328, 67, -328, -327,
	-327, 67, 67, -330, 67, -330, -330, -327, -331, 67,
	-331, -332, 67, -331, -219, -116, -90, -355, -354, -244,
	40, 517, -91, -244, -113, -112, -244, -433, 73, 34,
	67, 134, -143, 94, -414, -219, -282, -279, -276, -272,
	-217, -219, -262, -262, -262, -412, -399, 34, -119, -219,
	-181, 16, -242, -242, -276, 242, -436, -230, -206, -205,
	-232, -437, -227, -232, -181, -437, -230, -230, -232, -228,
	403, -181, -181, -313, -229, -219, -229, -262, -206, -206,
	-143, -414, -414, 30, -282, -108, -103, -107, -104, -109,
	-184, -186, -106, 67, -143, -98, -219, 425, 426, 142,
	145, 144, 31, 376, -296, 376, 31, -272, -290, -286,
	73, 377, -277, -295, 64, 131, -354, -293, -293, -293,
	-295, -295, 130, -91, -414, -281, -272, -219, -145, -143,
	-145, -220, 67, -180, 135, -179, 15, -214, -219, 34,
	73, 134, -180, 73, -145, 73, -431, 64, 46, 30,
	67, -123, 68, -118, -122, -219, -348, -251, -392, 516,
	-123, 68, -390, -391, -118, -91, -91, -212, -213, -203,
	-209, -216, -217, -210, 209, 31, 93, 34, 36, 316,
	348, 96, 131, 20, 97, 167, 130, 318, 443, 317,
	204, 59, 446, 448, 447, 436, 434, 369, 373, 375,
	372, 435, 402, 40, 14, 37, 226, 32, 33, 124,
	206, 100, 101, 229, 35, 227, 85, 44, 23, 62,
	15, 17, 18, 319, 368, 217, 216, 113, 388, 213,
	57, 12, 133, 38, 110, 370, 53, 89, 45, 55,
	111, 115, 21, 437, 438, 41, 387, 396, 471, 233,
	126, 320, 321, 60, 94, 376, 83, 43, 64, 90,
	19, 58, 112, 207, 442, 56, 374, 324, 326, 336,
	468, 325, 211, 413, 10, 315, 444, 30, 225, 54,
	212, 99, 215, 84, 232, 6, 88, 13, 61, 65,
	439, 440, 441, 46, 98, 16, 327, 475, 389, 390,
	391, 392, 393, 394, 395, 192, 193, 194, 195, 196,
	274, 220, 218, 222, 223, 516, 517, 198, 199, 303,
	305, 170, 201, 202, 203, 234, 148, 7, 355, 356,
	357, 360, 361, 362, 363, 364, 365, 366, 525, 397,
	398, 399, 400, 401, 415, 416, 417, 418, 210, 314,
	23, -66, -402, 134, 135, -119, -299, -280, -277, -301,
	122, 70, -287, 135, 475, 529, 71, 215, -424, -423,
	368, 68, 135, -358, 216, 442, 73, 530, 197, -358,
	83, 306, 84, 85, -326, -250, -247, -242, -242, -240,
	-240, -245, 229, -245, 93, -244, -243, -396, 100, -244,
	34, 68, 135, 65, 134, 68, 68, 15, 15, 68,
	-244, 68, 15, 15, -244, 68, 134, 68, 68, 68,
	65, 68, 135, 68, 135, -250, -244, 68, 68, -244,
	-244, -244, -250, 68, -244, -244, -244, -244, -244, -244,
	-244, -244, -244, -336, 352, 78, 78, -198, 73, -198,
	78, 78, 78, 135, 68, 73, 135, 22, 135, -110,
	36, 37, -137, -130, -131, -132, -133, -149, -196, 168,
	171, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 228, 163, 164, 165, 166, 184, 149, 169,
	150, 151, 152, 153, 154, 155, 158, 159, 160, 157,
	-219, -120, 35, -417, 355, -425, 135, 40, -423, -265,
	65, -260, -261, -259, -263, 40, -143, -143, -143, 15,
	-102, -144, -219, 67, 68, 135, -244, -273, 65, -275,
	-206, -181, -220, -143, -219, -181, -181, -230, -232, -232,
	-228, 134, -205, -120, -418, 355, 30, 314, -425, 30,
	-187, -188, -189, -190, 53, 57, 59, 54, 55, 56,
	60, 30, 135, -215, -221, 34, -216, 73, -217, -210,
	-215, -98, -103, -108, -215, 67, 143, 146, 146, 145,
	215, 67, 103, -295, -295, -295, 40, -218, 64, 135,
	-130, -181, -101, -103, -219, 73, -219, 122, -181, -170,
	519, 38, -361, 407, 39, -348, -390, -125, -414, 68,
	135, -124, 309, 68, 135, 135, 67, 68, 46, 135,
	103, 134, 384, -219, -372, 68, -301, 135, 215, 134,
	134, -278, 334, -218, -280, 20, 475, -196, 38, -202,
	-201, 73, 530, 38, 68, -245, -245, 93, -242, -239,
	68, 101, -244, 99, -147, -149, 350, 351, -148, -154,
	131, 167, 228, 166, 165, 163, 350, 351, -163, -219,
	-244, -244, 68, -244, -244, 15, -219, -163, -240, -244,
	-115, 68, -308, 398, -308, 68, 68, 68, 68, -308,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 135, 68, 68, 68, 135, 68, 135, -354, -361,
	-244, -244, -112, -111, 43, 342, 68, 135, -149, 34,
	-420, 409, 357, -211, 103, -237, -236, 310, 41, -341,
	377, 363, 364, -279, 242, 64, 298, 299, 300, 301,
	-259, -204, 130, 253, 67, 67, 67, -143, -102, -219,
	15, 135, -413, 134, -1, -219, -272, -230, -181, -437,
	-181, -230, -230, -232, -219, 34, -420, -211, 314, 103,
	-237, -284, -283, -196, -107, -107, -107, -107, 53, 53,
	53, 58, 53, 58, 53, -189, -284, -109, -120, -221,
	68, -430, -429, -428, -426, 61, 216, 62, -249, 146,
	-280, -233, 73, -286, -143, -143, 68, -183, 17, 134,
	-183, 78, 73, -369, 394, 389, 391, 89, 68, 135,
	-124, -118, 46, 67, -219, -251, -356, -355, 46, -95,
	-348, -391, -354, -212, -209, -217, -210, 78, 15, -277,
	-272, 122, 122, 70, 335, -287, 73, 356, 73, 212,
	531, 135, 103, -202, 212, -239, -244, 68, -156, 154,
	153, -156, 68, -327, -328, -327, -330, -327, -156, -156,
	68, 68, 23, 68, 68, 68, -244, 68, 68, 135,
	-345, 444, -308, 67, -308, -308, -308, -308, -308, -308,
	-308, -308, -308, -308, -308, -308, 73, 78, 78, -369,
	44, 45, 73, 210, -132, 40, -95, -421, 77, -415,
	73, -219, -422, 77, 358, 133, 312, 40, 359, 360,
	374, 307, 78, 78, 365, -416, 70, -143, -211, -211,
	-211, -138, -139, -140, -146, -141, -196, -235, -142, 220,
	218, 222, -387, 88, 223, 274, 89, 213, -138, -138,
	-121, 65, 134, -103, -144, -219, 122, 68, -181, -219,
	-181, -181, -230, -95, -421, -415, 103, 73, -422, -181,
	135, 103, -127, -126, 64, 65, -128, 64, -126, 53,
	53, -181, -428, -427, 23, -387, -387, -387, 68, 68,
	-182, 18, 20, 122, -182, -170, -334, 518, -365, -367,
	389, 20, 20, 13, -95, -414, 46, -95, -348, -125,
	68, -348, -272, -287, 377, -143, -201, 73, 531, -143,
	-244, 68, -244, 68, 73, -253, -252, 234, 68, 68,
	-334, -134, -149, -238, 73, -419, 368, 73, 73, 78,
	40, 78, 133, 361, -342, 67, -163, -165, -218, 131,
	73, 68, 135, -149, -142, -219, 89, -386, -387, -262,
	-386, 89, 67, 68, 68, -215, -103, -219, -181, -413,
	134, -181, -181, -419, 73, -115, -283, -354, -244, 67,
	-244, 67, 53, 19, 17, -244, -250, -170, 73, 20,
	73, -363, 73, -390, -348, 68, -124, -94, -359, -313,
	68, 68, -308, -115, 20, -170, 474, 20, 475, 311,
	40, 78, 40, 362, -267, -269, -196, 67, -161, -162,
	-178, 348, 244, -263, 248, 77, 249, 384, 250, 213,
	252, 253, 254, 224, 255, 256, 257, 377, 258, 259,
	260, 261, 331, 6, 294, -140, -160, -159, -157, 83,
	94, 40, 348, -158, 77, 130, 267, 245, 268, -177,
	-234, 64, 354, 218, 88, 89, 336, -235, -382, -384,
	-219, -384, -219, -382, -382, -262, -244, -93, -92, -161,
	-181, -181, -116, -119, -383, -219, 218, 20, 20, -199,
	520, 73, 391, -94, -368, 394, -362, -360, 389, 390,
	391, 392, -310, -309, -312, 395, 276, 401, -250, -199,
	-135, -219, 73, 356, 73, 311, 68, 135, -327, -244,
	-303, 234, 135, -178, -211, -211, -204, 130, -211, -211,
	-211, -211, 251, 251, -211, -211, -211, -211, -211, -211,
	-211, -211, -211, -211, -211, -211, -211, -211, 67, -157,
	83, -240, 73, -165, -166, 40, 266, 262, -167, 40,
	246, 247, -169, 67, 274, 13, 89, 89, -143, 67,
	65, 284, 67, 67, 67, -384, 68, -94, -303, -115,
	68, 68, 135, 67, 20, -335, 521, -370, 216, -366,
	-367, 393, -360, 20, 391, 20, 20, 68, -311, 96,
	361, 365, -244, 34, 377, -270, -269, -110, 68, -304,
	283, 20, -178, 78, 78, -211, -211, 78, 73, 73,
	73, -211, -211, 78, 73, -221, 78, 78, 78, 78,
	40, 73, -168, 40, 262, 266, 263, 264, 265, 78,
	40, 78, 40, 78, 40, -219, 67, -388, -389, 73,
	78, 67, -349, -268, 67, -267, -385, 298, 299, 300,
	302, 301, -385, -267, -267, -267, 67, -289, -288, 275,
	94, -304, -116, -219, 218, -200, -219, -363, 73, -377,
	67, 78, -365, -364, -366, 20, -363, 20, -363, -363,
	-311, 516, 399, 400, 399, 400, 73, -271, 224, 77,
	475, 296, 297, -110, 20, -305, 276, 277, -306, -317,
	279, -163, -163, 73, 73, -164, 245, -145, 68, 135,
	103, 68, -244, -254, -172, -171, 471, -267, 68, 68,
	68, 68, -267, 275, 68, 135, -381, 30, 68, -376,
	-375, -197, -371, -219, 394, 395, 73, -363, 93, -211,
	73, 295, -196, 67, -315, 280, 67, -313, 67, -313,
	89, 299, 246, 247, 68, -389, 73, 68, -176, -174,
	-175, 64, 405, 272, 273, 68, -270, -270, -270, -270,
	68, -219, -380, -379, -378, 68, 135, 134, -311, 78,
	-217, -302, -307, 281, 78, -240, 67, -240, 67, -314,
	278, 67, -288, -175, 64, -174, 64, 14, 13, -177,
	135, 103, -375, -219, 68, -319, 67, 20, 68, -302,
	68, -302, 67, 103, -240, -173, 269, 270, 30, 145,
	-173, -379, 40, -244, 134, -320, -318, 234, -306, 68,
	68, 68, -302, 78, 68, 83, 40, 271, -219, 68,
	135, 70, -316, 282, 68, -318, -321, 46, 78, -325,
	-322, 67, -178, 236, 113, -325, -178, -324, -323, 281,
	237, 67, 68, 135, 70, 233, 67, -250, -323, -322,
	-250, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 673, 674, 675, 676, 0, 0, 0,
	439, 440, 0, 417, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 329, 330, 331, 332, 333,
	334, 335, 336, 337, 338, 339, 340, 341, 342, 343,
	344, 288, 289, 290, 291, 0, 234, 230, 209, 210,
	211, 170, 171, 172, 173, 301, 0, 0, 0, 0,
	0, 0, 523, -2, 35, 677, 678, 679, 680, 681,
	682, -2, 452, 0, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 277, 278, 279, 273, 274, 276, 275,
	-2, 0, 452, 223, 0, 214, 214, 0, 543, 0,
	0, 558, 580, 33, 0, 0, 501, 0, 506, 882,
	918, 919, 920, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 501, 235, 441, 442, 543, 543, 415,
	0, 259, 0, 1549, 263, 0, 0, 0, 412, 254,
	255, 256, 257, 258, 0, 665, 0, 0, 250, 0,
	229, 1608, 0, 0, 0, 0, 0, 0, 114, 735,
	116, 737, 120, 127, 0, 0, 132, 133, 136, 137,
	138, 139, 140, 0, 144, 0, 146, 149, 0, 151,
	152, 0, 155, 156, 157, 0, 167, 168, 169, 738,
	739, -2, 45, 685, 94, 1292, 1187, 0, 1194, 1195,
	1206, 1217, 990, 991, 992, 993, 0, 0, 0, 0,
	0, 1000, 1001, 0, 1014, 1700, 0, 0, 1008, 1009,
	1010, 1011, 54, 66, 67, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 0, 1160, 977, 918, 0,
	1708, 0, 1728, 1727, 0, 0, 1145, 0, 1135, 0,
	-2, -2, 0, 0, 1675, -2, 1705, 1724, 1732, 1709,
	1731, 1702, 1703, 1697, 1698, 1699, 1701, 1710, 1712, 1723,
	0, 1719, 1729, 1730, 0, 68, 69, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1151, -2, 1153, 1154, 1156, 1157, 1158, 1159, -2, 1162,
	1163, 1164, -2, -2, 1167, 1168, 1169, 1170, 1171, 1172,
	1175, -2, 1177, -2, -2, 1147, 1148, 1149, 1150, 1139,
	1140, 1141, 1142, 1143, 1144, -2, -2, -2, 0, 207,
	205, 543, 616, 0, -2, 0, 0, 0, 563, 566,
	569, 572, 0, 36, 37, 0, 0, 764, 764, 764,
	764, 0, 764, 0, 0, 0, 741, 742, 743, 762,
	763, 788, 457, 453, 454, 455, 456, 531, 0, 533,
	536, 394, 346, 0, 0, 0, 358, 352, 0, 0,
	394, 0, 0, 538, 538, 0, 404, 394, 394, -2,
	394, 0, 363, 364, 365, 352, 0, 352, 369, 370,
	371, 382, 383, 405, 1316, 0, 0, 301, 301, 0,
	301, 459, 224, 225, 213, 215, 0, 219, 0, 212,
	1608, 0, 0, 181, 1675, 186, 0, 1556, 1622, 1571,
	0, 0, 1589, 0, -2, 538, 0, 544, 0, 543,
	0, 0, 301, 301, 301, 301, 301, 301, 301, 0,
	0, 0, 0, 581, 582, 577, 578, 579, 583, 584,
	3, 0, 666, 667, 670, 671, 672, 0, 469, 0,
	505, 0, 0, 538, -2, 0, 416, 260, 921, 0,
	0, 264, 265, 0, 0, 280, 0, 283, 268, 269,
	270, 0, 0, 252, 253, 0, 0, 231, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 124, 121,
	128, 131, 141, 148, 0, 160, 162, 165, 122, 129,
	134, 135, 142, 163, 123, 125, 126, 130, 164, 166,
	143, 147, 161, 145, 150, 153, 154, 159, 0, 95,
	0, 0, 0, 0, 0, 0, 1193, 0, 0, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 1187, 0, 0, 996, 997,
	998, 999, 1002, 0, 1015, 0, 0, 0, 0, 1246,
	0, 1185, 1185, 0, 1185, 1181, 0, 0, 1185, 1124,
	0, 0, 1126, 1136, 0, 0, 1129, 1130, 1185, 0,
	1185, 1134, 1120, 1121, 0, 1181, 1181, 0, 0, 1181,
	1181, 1181, 1181, 1181, 1181, 1181, 1181, 1181, 1181, 1181,
	1181, 0, 1293, 1311, 1248, 1249, 1250, 1298, 1252, 1302,
	1302, 1298, 1298, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 0, 0, 1291, 1271, 1300, 1300, 1300, 1298,
	1295, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1305, 1305, 1308, 1305, 0,
	538, 0, 0, 526, 0, 507, 0, 560, 562, 0,
	564, 565, 567, 568, 570, 571, 573, 574, 38, 0,
	684, 0, 687, 0, 0, 0, 0, 0, 0, 0,
	764, 764, 764, 459, 458, 0, 532, 0, 0, 589,
	0, 0, 0, 352, 394, 357, 354, 353, 400, 401,
	397, 0, 397, 589, 0, 376, 377, 378, 394, 394,
	384, 539, 385, 386, 397, 0, 402, 403, 0, 589,
	589, 0, 393, 0, 0, 764, 354, 367, 354, 1317,
	1318, 0, 0, 0, 0, 411, 0, 0, 460, 0,
	0, 217, 0, 222, 174, 0, 0, 0, 0, 0,
	0, 203, 204, 0, 0, 0, 0, 0, 194, 197,
	876, 877, 732, 733, 198, 199, 507, 559, 561, 555,
	556, 557, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 597, 591, 593, 660, 54, 597, 0, 0, 0,
	480, 0, 474, 0, 0, 0, 883, 461, 493, 463,
	0, 482, 507, 529, 507, 0, 261, 0, 266, 0,
	0, 282, 284, 285, 286, 271, 272, 413, 248, 249,
	241, 242, 243, 244, 245, 246, 247, 251, 64, 0,
	232, 233, 0, 0, 0, 108, 109, 110, 111, 112,
	113, 115, 99, 429, 431, 724, 736, 0, 727, 0,
	118, 158, 91, 0, 0, 91, 1188, 1189, 1190, 1191,
	1192, 1196, 0, 1198, 1200, 1202, 1204, 0, 1222, -2,
	-2, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 1207, 1220, 1221, 0, 0, 0, 0,
	0, 0, 1218, 1218, 1213, 0, 994, 0, 1012, 1016,
	0, 0, 0, 0, 55, 1180, 1091, 1092, 1093, 1094,
	1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104,
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 1119, 0, 1186, 0, 1187, 0,
	0, 0, 1182, 1183, 0, 0, 1085, 1086, 1087, 0,
	488, 0, 1146, 1125, 1137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	1314, 1312, 1313, 1251, 1299, 0, 1276, 0, 1277, 1278,
	1279, 0, 0, 1272, 0, 1273, 1274, 1275, 1267, 0,
	1268, 1269, 0, 1270, 206, 615, 617, 0, 497, 499,
	500, 0, 527, 540, 545, 546, 549, 34, 39, 0,
	689, 0, 536, 0, 0, 701, 299, 718, 0, 734,
	756, -2, 0, 0, 0, 0, 534, 0, 0, 629,
	345, 0, 395, 396, 349, 1608, 354, 589, 359, 355,
	360, 0, 399, 361, 362, 0, 589, 589, 394, 397,
	397, 389, 390, 0, 406, 409, 407, 0, 366, 368,
	536, 296, 0, 0, 299, 602, 0, 603, 604, 600,
	631, 655, 655, 0, 655, 635, 882, 226, 227, 0,
	0, 221, 175, 176, 0, 178, 179, 180, 187, 182,
	184, 0, 0, 188, 200, 201, 202, 0, 0, 0,
	192, 193, 0, 525, 427, 428, 432, 0, 434, 880,
	435, 436, 689, 589, 0, 598, 0, 594, 661, 0,
	663, 0, 589, 517, 0, 509, 468, 0, 493, 482,
	0, 0, 469, 486, 0, 503, 462, 490, 0, 494,
	0, 0, 467, 483, 0, 528, 530, 922, 0, 1323,
	-2, 1325, -2, -2, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	0, 267, 281, 0, 0, 0, 0, 102, 721, 0,
	103, 107, 97, 0, 0, 0, 726, 0, 723, 728,
	0, 117, 0, 0, 92, 93, 779, 784, 0, 0,
	1197, 1199, 1201, 1203, 1205, 0, 1208, 1218, 1218, 1214,
	0, 1209, 0, 1211, 0, 1188, 0, 1017, 0, 0,
	0, 1005, 0, 0, 0, 1073, 1074, 0, 0, 1078,
	0, 1080, 0, 0, 0, 1084, 0, 1123, 1138, 1127,
	0, 1131, 0, 1133, 0, 543, 0, 1051, 1051, 0,
	0, 0, 0, 1051, 0, 0, 0, 0, 0, 0,
	0, 0, 1294, 1247, 1315, 0, 0, 0, 1296, 0,
	0, 0, 0, 0, 618, 509, 0, 0, 0, 552,
	550, 551, 0, 0, 690, 691, 693, 694, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1541, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	688, 0, 765, 708, 1319, 303, 0, 0, 720, 0,
	0, 761, -2, 768, 0, 774, 0, 0, 0, 0,
	0, 446, 450, 33, 537, 0, 590, 347, 0, 348,
	394, 356, 398, 589, 882, 379, 380, 589, 394, 394,
	397, 0, 408, 0, 708, 1319, 0, 0, 303, 0,
	0, 0, 0, 0, 622, 0, 0, 621, 0, 0,
	0, 0, 0, 536, 656, 0, 658, 659, 668, 669,
	633, -2, 0, 602, 638, 1185, 228, 216, 218, 0,
	0, 0, 0, 189, 190, 191, 195, 196, 0, 0,
	0, 587, 592, 599, 662, 664, 55, 595, 587, 40,
	0, 0, 513, 0, 0, 473, 479, 0, 471, 469,
	0, 0, 0, 502, 0, 493, 495, 0, 493, 0,
	0, 0, 0, 414, 65, 287, 0, 0, 0, 0,
	0, 430, 0, 725, 99, 0, 0, 119, 0, 0,
	782, 0, 784, 0, 1184, 1210, 1212, 0, 1219, 1215,
	995, 1003, 1013, 0, 0, 1019, 1031, 1031, 0, 1022,
	1298, 1302, 1025, 1298, 1300, 1298, 1031, 1031, 0, 56,
	0, 0, 1079, 0, 0, 0, 489, 0, 0, 0,
	1049, 1051, 1055, 0, 1056, 1051, 1051, 1051, 1051, 1061,
	1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1304, 1303,
	1289, 0, 1290, 1301, 1306, 0, 1309, 0, 498, 513,
	541, 542, 547, 548, 0, 0, 0, 0, 695, 0,
	711, 709, 710, 0, 1320, 715, 304, 305, 306, 307,
	0, 0, 0, 719, 0, 0, 757, 758, 759, 760,
	769, 1319, 1319, 1319, 884, 884, 884, 501, 0, -2,
	0, 0, 448, 0, 0, 630, 350, 589, 372, 0,
	387, 589, 589, 394, 410, 0, 711, 0, 0, 0,
	715, 589, 238, 0, 625, 619, 0, 608, 623, 624,
	611, 0, 613, 0, 609, 610, 589, 601, 632, 657,
	634, 637, 639, 640, 646, 0, 0, 0, 0, 220,
	177, 0, 323, 183, 433, 881, 438, 585, 0, 0,
	585, 518, 517, 515, 79, 0, 0, 0, 470, 0,
	0, 487, 493, 0, 504, 491, 0, 496, 493, 466,
	465, 484, 485, 923, 1324, 1321, 1322, 262, 0, 722,
	99, 104, 105, 106, 100, 98, 729, 0, 731, 0,
	780, 784, 0, 0, 0, 1216, 1018, 1004, 1020, 1032,
	1033, 1021, 1006, 1023, 1024, 1026, 1027, 1028, 1029, 1030,
	1007, 1075, 0, 1077, 1081, 1082, 0, 1128, 1132, 0,
	0, 0, 1054, 1047, 1057, 1058, 1059, 1060, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1297, 0, 0, 515,
	553, 554, 683, 0, 692, 0, 699, 700, 0, 0,
	703, 704, 713, 0, 0, 0, 309, 310, 0, 0,
	0, 322, 318, 319, 320, 300, 714, 0, 0, 0,
	0, 0, 885, 886, 888, 889, 0, 0, 891, 947,
	0, 900, 764, 900, 0, 0, 902, 903, 0, 0,
	655, 0, 0, 589, 447, 450, 451, 535, 351, 589,
	391, 388, 589, 292, 293, 0, 0, 294, 298, 543,
	0, 0, 605, 626, 0, 0, 606, 0, 607, 612,
	614, 237, 641, 0, 0, 643, 644, 645, 636, 185,
	575, 0, 0, 596, 576, 41, 517, 0, 514, 80,
	0, 0, 0, 482, 475, 472, 493, 478, 477, 0,
	492, 464, 101, 96, 730, 469, 783, 785, 781, 82,
	0, 1083, 0, 1051, 1050, 543, 1048, 0, 1307, 1310,
	517, 0, 698, 696, 712, 702, 0, 716, 717, 0,
	311, 312, 0, 315, 321, 0, 770, 771, 878, 879,
	772, -2, 0, -2, 890, 948, 912, 912, 901, 912,
	912, 764, 0, 0, -2, 589, 589, -2, 444, 449,
	0, 373, 392, 297, 295, 538, 239, 240, 627, 0,
	620, 650, 647, 0, 0, 586, 588, 519, 516, 0,
	510, 512, 90, 481, 476, 470, 82, 43, 73, 0,
	1076, 1122, 1053, 1044, 0, 519, 0, 0, 0, 308,
	313, 0, 316, 317, 0, 752, 1298, 0, 789, -2,
	832, 1319, 1319, 0, 1319, 1319, 1319, 1319, 0, 0,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
	1319, 1319, 1319, 1319, 0, 887, 914, -2, 926, 928,
	0, 0, 931, 932, 0, 0, 0, 0, 969, 938,
	0, 0, 942, 0, 1234, 1235, 0, 946, 0, 904,
	913, 0, 913, 0, 0, 912, 0, 776, 82, 789,
	543, 445, 236, 0, 0, 651, 653, 648, 649, 42,
	0, 81, 0, 52, 70, 0, 83, 84, 0, 0,
	0, 0, 0, 1045, 0, 1039, 1040, 1041, 1046, 508,
	0, 697, 705, 0, 707, 314, 745, 0, 549, 0,
	791, 0, 773, 834, 0, 0, 1319, 1319, 0, 0,
	0, 0, 1319, 1319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 927,
	929, 930, 933, 934, 935, 974, 975, 976, 936, 971,
	972, 973, 937, 0, 0, 0, 1232, 1233, 967, 0,
	0, 0, 0, 0, 0, 0, 898, 778, 791, 538,
	628, 642, 0, 0, 0, 44, 0, 57, 0, 79,
	76, 0, 85, 0, 0, 0, 0, 1052, 1042, 0,
	0, 0, 0, 0, 706, 744, 753, 754, 549, 775,
	0, 828, 833, 835, 836, 0, 0, 839, 840, 841,
	842, 0, 0, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 870, 871, 872, 873, 874, 875, 855,
	856, 857, 858, 859, 860, 867, 0, 0, 864, 0,
	0, 0, 1135, 962, 0, 0, 905, 907, 908, 909,
	910, 911, 906, 0, 0, 0, 0, 897, 899, 943,
	0, 777, 443, 652, 654, 0, 521, 511, 53, 46,
	0, 0, 74, 75, 77, 0, 86, 0, 88, 89,
	0, 1034, 1035, 1037, 1036, 1038, 686, 746, 1319, 0,
	0, 750, 751, 755, 0, 816, 0, 0, 822, 0,
	829, 837, 838, 843, 844, 861, 0, 0, 863, 0,
	0, 970, 0, 941, 950, 963, 0, 0, 745, 745,
	745, 745, 0, 944, 520, 0, 786, 0, 58, 0,
	60, 62, 63, 915, 71, 72, 78, 87, 0, 0,
	748, 0, 792, 0, 794, 0, 0, 0, 0, 0,
	826, 0, 868, 869, 862, 865, 866, 939, 949, 951,
	952, 0, 964, 965, 966, 968, 892, 893, 894, 895,
	0, 522, 47, 48, 0, 59, 0, 0, 1043, 747,
	749, 0, 796, 0, 817, 0, 0, 0, 0, 0,
	0, 0, 940, 953, 0, 954, 0, 0, 0, 896,
	0, 0, 61, 916, 793, 790, 0, 828, 818, 0,
	820, 0, 0, 0, 0, 955, 957, 958, 0, 0,
	956, 49, 50, 51, 0, 0, 798, 0, 814, 819,
	821, 823, 0, 827, 825, 959, 961, 960, 917, 797,
	0, 810, 795, 0, 824, 799, -2, 0, 815, 800,
	-2, 0, 808, 0, 0, 801, 809, 0, 804, 0,
	0, 0, 803, 0, -2, 811, 0, 0, 805, -2,
	0, 813, 812,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 125, 117, 3,
	67, 68, 122, 120, 135, 121, 134, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 528,
	104, 103, 105, 3, 529, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 530, 116, 531, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 118, 119,
	124, 126, 129, 130, 131, 132, 133, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:621
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:627
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:662
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:667
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:673
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:693
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:699
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:706
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:714
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:720
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:729
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:738
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:748
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:769
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:795
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:806
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:812
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:816
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:822
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:829
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:837
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:841
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:855
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:859
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:863
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:872
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:876
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:882
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:891
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:902
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:906
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:912
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:916
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:922
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:926
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:932
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:956
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:975
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:979
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:983
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:999
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1007
		{
			yyVAL.str = ""
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1014
		{
			yyVAL.str = yyDollar[3].str
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1019
		{
			yyVAL.str = "\n"
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1026
		{
			yyVAL.str = yyDollar[3].str
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1031
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1035
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1059
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1063
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1069
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1075
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1093
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1110
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1133
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1137
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1141
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1146
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1150
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1156
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1169
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1180
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1197
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1207
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1220
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1233
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1239
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1245
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1252
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1260
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1296
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1300
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1306
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1313
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1322
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1326
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1332
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1336
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1340
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1344
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1348
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1352
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1356
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1360
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1364
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1368
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1372
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1376
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1380
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1384
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1388
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1392
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1396
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1400
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1404
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1408
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1412
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1416
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1420
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1424
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1428
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1432
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1436
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1440
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1444
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1448
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1452
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1456
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1460
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1464
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1468
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1472
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1476
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1480
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1484
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1488
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1492
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1496
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1500
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1504
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1508
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1512
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1516
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1520
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1524
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1528
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1547
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1554
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1563
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1593
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1597
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1601
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1607
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1613
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1624
		{
			yyVAL.str = yyDollar[3].str
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1630
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1634
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1640
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1648
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1657
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1665
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1673
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1696
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1719
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1726
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1733
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1741
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1748
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1755
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1772
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1778
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1782
		{
			yyVAL.str = yyDollar[1].str
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1789
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1795
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1799
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1810
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1816
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1867
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1871
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1876
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1881
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1887
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1894
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1900
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1914
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1931
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1942
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1953
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1957
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1963
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1975
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1981
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1985
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1991
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1995
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2001
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2007
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2017
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2027
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2031
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2035
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2039
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2043
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2059
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2069
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2110
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2114
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2120
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2126
		{
			yyVAL.str = yyDollar[1].str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2131
		{
			yyVAL.str = "true"
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2132
		{
			yyVAL.str = "false"
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2133
		{
			yyVAL.str = yyDollar[1].str
		}
	case 287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2138
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2151
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2191
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2197
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2208
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2223
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2228
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2241
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2265
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2273
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2277
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2293
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2297
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2305
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2313
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2323
		{
			yyVAL.item = nil
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2328
		{
			yyVAL.item = nil
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2360
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2365
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2369
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2373
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].str)}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2386
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2392
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2397
		{
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2401
		{
		}
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2406
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2415
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2421
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2433
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2439
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2445
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2454
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2462
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2470
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2478
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2486
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2499
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2509
		{
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2511
		{
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2530
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2539
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2543
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2547
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2553
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2559
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2565
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2571
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2581
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2593
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2597
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2603
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2615
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2638
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2642
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2647
		{
			yyVAL.str = ""
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2651
		{
			yyVAL.str = yyDollar[2].str
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2657
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2670
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2674
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2680
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2685
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2689
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2695
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2699
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2708
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2712
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2716
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2722
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2726
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2746
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2755
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2764
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2768
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2774
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2783
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2792
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2802
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2808
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2814
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2820
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2826
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2837
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2842
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2849
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2865
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2878
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2889
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2893
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2899
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2904
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2911
		{
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2913
		{
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2916
		{
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2925
		{
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2929
		{
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2934
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2943
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2950
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2956
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2964
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2971
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2978
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2998
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3011
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3017
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3021
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3027
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3035
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3041
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3048
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3057
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3065
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3073
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3093
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3097
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3120
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3124
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3130
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3139
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3143
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3149
		{
			yyVAL.str = yyDollar[1].str
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3153
		{
			yyVAL.str = yyDollar[3].str
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3159
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3163
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3169
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3174
		{
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3185
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3189
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3196
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3205
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3211
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3215
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3221
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3225
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3247
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3254
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3261
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3279
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3298
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3304
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3311
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3315
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3328
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3332
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3337
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3341
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3348
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3353
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3370
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3378
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3382
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3386
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3392
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3399
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3408
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3412
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3430
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3439
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3445
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3458
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3462
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3468
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3474
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3478
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3484
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3489
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3493
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3497
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3502
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3506
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3510
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3516
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3520
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3524
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3538
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3542
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3552
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3562
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3572
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3584
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3592
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3600
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3609
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3617
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3625
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3633
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3641
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3649
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3657
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3665
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3673
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3683
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3694
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3712
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3716
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3733
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3742
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3747
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3751
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3757
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3761
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3767
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3771
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3775
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3779
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3784
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3792
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3798
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3806
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3814
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3824
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3830
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3839
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3848
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3857
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3867
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3871
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3881
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3885
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3889
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3893
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3899
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3909
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3913
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3919
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3929
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3935
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3941
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3945
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3949
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3959
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3965
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3969
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3975
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3979
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3985
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3989
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3999
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4012
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4018
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4024
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4037
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4055
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4059
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4065
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4075
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4079
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4083
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4088
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4092
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4096
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4100
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4109
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4113
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4117
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4121
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4126
		{
			yyVAL.str = ""
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4130
		{
			yyVAL.str = yyDollar[1].str
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4134
		{
			yyVAL.str = yyDollar[2].str
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4143
		{
			yyVAL.str = ""
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4147
		{
			yyVAL.str = yyDollar[1].str
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4151
		{
			yyVAL.str = yyDollar[2].str
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4155
		{
			yyVAL.str = yyDollar[1].str
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4159
		{
			yyVAL.str = yyDollar[2].str
		}
	case 683:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4195
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4205
		{
			yyVAL.str = yyDollar[1].str
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4211
		{
			yyVAL.str = yyDollar[1].str
		}
	case 686:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4218
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4230
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4235
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4241
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4248
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4252
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4258
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4264
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4268
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4272
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4278
		{
			yyVAL.str = yyDollar[1].str
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4284
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4290
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4313
		{
			yyVAL.str = yyDollar[1].str
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4319
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4329
		{
			yyVAL.str = yyDollar[1].str
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4333
		{
			yyVAL.str = yyDollar[1].str
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4339
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4346
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4352
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4360
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4366
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4373
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4381
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4387
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4396
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4408
		{
			yyVAL.str = yyDollar[1].str
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4413
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4419
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4427
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4533
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4537
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4543
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4553
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4557
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4573
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4577
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4581
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4590
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4596
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4603
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4609
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4622
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4631
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4635
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4641
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4658
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4662
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4666
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4670
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4676
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4699
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4721
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4725
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4729
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4733
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4737
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4743
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4747
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4753
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4758
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4763
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4767
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4771
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4775
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4779
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4785
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4799
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4803
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4812
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4818
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4822
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4828
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4832
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4836
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4841
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4845
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4851
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4863
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4872
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4885
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4892
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4902
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4910
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4921
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4925
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4930
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4934
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4941
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4952
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4956
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4965
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4979
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4986
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4993
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4997
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5010
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5016
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5020
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5026
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5035
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5049
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5055
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5059
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5065
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5072
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5081
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5085
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5094
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5099
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5103
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5108
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5112
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5122
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5126
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5137
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5145
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5153
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5161
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5172
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5181
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5191
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5201
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5205
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5210
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5214
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5223
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5229
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5233
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5237
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5243
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5247
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5251
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5255
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5259
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5263
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5268
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5272
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5276
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5280
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5284
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5288
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5292
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5296
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5300
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5304
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5308
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5312
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5316
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5320
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5324
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5328
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5332
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5336
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5340
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5344
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5348
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5352
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5356
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5363
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5367
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5373
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5378
		{
			yyVAL.str = ""
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5382
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5386
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5396
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5400
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5404
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5408
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5426
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5430
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5439
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5444
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5450
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5457
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5461
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5467
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5471
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5477
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5489
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5495
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5504
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5513
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5536
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5545
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5555
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5563
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5569
		{
			yyVAL.str = ""
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5573
		{
			yyVAL.str = yyDollar[1].str
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5583
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5589
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5595
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5609
		{
			yyVAL.str = ""
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5616
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5622
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5626
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5630
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5641
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5645
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5649
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5658
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5664
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5668
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5678
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5682
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5686
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5690
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5694
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5699
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5703
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5707
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5711
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5715
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5719
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5723
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5727
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5740
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5746
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5750
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5755
		{
			yyVAL.str = ""
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5759
		{
			yyVAL.str = yyDollar[1].str
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5765
		{
			yyVAL.str = ""
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5769
		{
			yyVAL.str = yyDollar[2].str
		}
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5775
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5787
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5794
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5801
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5808
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5815
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5824
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5830
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5836
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5840
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5844
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5848
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5852
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5857
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5864
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5868
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5872
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5881
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5886
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5890
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5906
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5912
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5916
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5920
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5924
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5928
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5932
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5936
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5940
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5944
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5948
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5952
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5956
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5960
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5966
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5970
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5974
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5978
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5982
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5986
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5990
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5994
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5998
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6002
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6006
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6010
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6015
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6023
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6027
		{
			locale := ""
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: "BINARY",
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			})
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6039
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6043
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6052
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6056
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6060
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6064
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6073
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6078
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6082
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6088
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6092
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6098
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6108
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6125
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6142
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6155
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6168
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6180
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6194
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6224
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6241
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6256
		{
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6262
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6266
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6270
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6276
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6280
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6288
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6292
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6296
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6302
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6309
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6322
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6329
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6338
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6343
		{
			yyVAL.str = ","
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6347
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6356
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6366
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6377
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6387
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6396
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6405
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6415
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6425
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6435
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6445
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6455
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6465
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6475
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6485
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6495
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6505
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6515
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6525
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6542
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6550
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6558
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6566
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6574
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6583
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6591
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6600
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6611
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6621
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6632
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6642
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6664
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6700
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6712
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6724
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6734
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6742
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6749
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6756
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6768
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6776
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6787
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6796
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6805
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6813
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6823
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6831
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6841
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6845
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6855
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6874
		{
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6876
		{
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6917
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6927
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6931
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6935
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6941
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6946
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6950
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6956
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6960
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6967
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6971
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6975
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6983
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6987
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6991
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6995
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7001
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7005
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7009
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7013
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7017
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7021
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7025
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7029
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7033
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7037
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7045
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7049
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7053
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7057
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7061
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7065
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7069
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7073
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7077
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7081
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7087
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7091
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7097
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7101
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7108
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7112
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7116
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7122
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7126
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7130
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7134
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7138
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7142
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7146
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7152
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7156
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7160
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7164
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7170
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7174
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7187
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7192
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7196
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7200
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7204
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7208
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7212
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7226
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7230
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7237
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7248
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7253
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7259
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7271
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7283
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7295
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7308
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7321
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7334
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7347
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7360
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7373
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7386
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7399
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7412
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7425
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7440
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7463
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7497
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7545
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7562
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7574
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7594
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7614
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7634
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7650
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7663
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7676
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7689
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7702
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7714
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7726
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7738
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7750
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7762
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7774
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7786
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7798
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7810
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7823
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7836
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7851
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7859
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7868
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7878
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7901
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7906
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7912
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7919
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7923
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7928
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7932
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7938
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7944
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7951
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7958
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7967
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7974
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7981
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7990
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7994
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7998
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8004
		{
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8016
		{
			yyVAL.str = ""
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8020
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

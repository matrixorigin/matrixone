// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const VALUES = 57385
const NEXT = 57386
const VALUE = 57387
const SHARE = 57388
const MODE = 57389
const SQL_NO_CACHE = 57390
const SQL_CACHE = 57391
const JOIN = 57392
const STRAIGHT_JOIN = 57393
const LEFT = 57394
const RIGHT = 57395
const INNER = 57396
const OUTER = 57397
const CROSS = 57398
const NATURAL = 57399
const USE = 57400
const FORCE = 57401
const LOWER_THAN_ON = 57402
const ON = 57403
const USING = 57404
const SUBQUERY_AS_EXPR = 57405
const LOWER_THAN_STRING = 57406
const ID = 57407
const AT_ID = 57408
const AT_AT_ID = 57409
const STRING = 57410
const VALUE_ARG = 57411
const LIST_ARG = 57412
const COMMENT = 57413
const COMMENT_KEYWORD = 57414
const INTEGRAL = 57415
const HEX = 57416
const BIT_LITERAL = 57417
const FLOAT = 57418
const HEXNUM = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const LOWER_THAN_CHARSET = 57423
const CHARSET = 57424
const UNIQUE = 57425
const KEY = 57426
const OR = 57427
const PIPE_CONCAT = 57428
const XOR = 57429
const AND = 57430
const NOT = 57431
const BETWEEN = 57432
const CASE = 57433
const WHEN = 57434
const THEN = 57435
const ELSE = 57436
const END = 57437
const LOWER_THAN_EQ = 57438
const LE = 57439
const GE = 57440
const NE = 57441
const NULL_SAFE_EQUAL = 57442
const IS = 57443
const LIKE = 57444
const REGEXP = 57445
const IN = 57446
const ASSIGNMENT = 57447
const SHIFT_LEFT = 57448
const SHIFT_RIGHT = 57449
const DIV = 57450
const MOD = 57451
const UNARY = 57452
const COLLATE = 57453
const BINARY = 57454
const UNDERSCORE_BINARY = 57455
const INTERVAL = 57456
const BEGIN = 57457
const START = 57458
const TRANSACTION = 57459
const COMMIT = 57460
const ROLLBACK = 57461
const WORK = 57462
const CONSISTENT = 57463
const SNAPSHOT = 57464
const CHAIN = 57465
const NO = 57466
const RELEASE = 57467
const PRIORITY = 57468
const QUICK = 57469
const BIT = 57470
const TINYINT = 57471
const SMALLINT = 57472
const MEDIUMINT = 57473
const INT = 57474
const INTEGER = 57475
const BIGINT = 57476
const INTNUM = 57477
const REAL = 57478
const DOUBLE = 57479
const FLOAT_TYPE = 57480
const DECIMAL = 57481
const NUMERIC = 57482
const DECIMAL_VALUE = 57483
const TIME = 57484
const TIMESTAMP = 57485
const DATETIME = 57486
const YEAR = 57487
const CHAR = 57488
const VARCHAR = 57489
const BOOL = 57490
const CHARACTER = 57491
const VARBINARY = 57492
const NCHAR = 57493
const TEXT = 57494
const TINYTEXT = 57495
const MEDIUMTEXT = 57496
const LONGTEXT = 57497
const BLOB = 57498
const TINYBLOB = 57499
const MEDIUMBLOB = 57500
const LONGBLOB = 57501
const JSON = 57502
const ENUM = 57503
const UUID = 57504
const GEOMETRY = 57505
const POINT = 57506
const LINESTRING = 57507
const POLYGON = 57508
const GEOMETRYCOLLECTION = 57509
const MULTIPOINT = 57510
const MULTILINESTRING = 57511
const MULTIPOLYGON = 57512
const INT1 = 57513
const INT2 = 57514
const INT3 = 57515
const INT4 = 57516
const INT8 = 57517
const SQL_SMALL_RESULT = 57518
const SQL_BIG_RESULT = 57519
const SQL_BUFFER_RESULT = 57520
const LOW_PRIORITY = 57521
const HIGH_PRIORITY = 57522
const DELAYED = 57523
const CREATE = 57524
const ALTER = 57525
const DROP = 57526
const RENAME = 57527
const ANALYZE = 57528
const ADD = 57529
const SCHEMA = 57530
const TABLE = 57531
const INDEX = 57532
const VIEW = 57533
const TO = 57534
const IGNORE = 57535
const IF = 57536
const PRIMARY = 57537
const COLUMN = 57538
const CONSTRAINT = 57539
const SPATIAL = 57540
const FULLTEXT = 57541
const FOREIGN = 57542
const KEY_BLOCK_SIZE = 57543
const SHOW = 57544
const DESCRIBE = 57545
const EXPLAIN = 57546
const DATE = 57547
const ESCAPE = 57548
const REPAIR = 57549
const OPTIMIZE = 57550
const TRUNCATE = 57551
const MAXVALUE = 57552
const PARTITION = 57553
const REORGANIZE = 57554
const LESS = 57555
const THAN = 57556
const PROCEDURE = 57557
const TRIGGER = 57558
const STATUS = 57559
const VARIABLES = 57560
const ROLE = 57561
const PROXY = 57562
const AVG_ROW_LENGTH = 57563
const STORAGE = 57564
const DISK = 57565
const MEMORY = 57566
const CHECKSUM = 57567
const COMPRESSION = 57568
const DATA = 57569
const DIRECTORY = 57570
const DELAY_KEY_WRITE = 57571
const ENCRYPTION = 57572
const ENGINE = 57573
const MAX_ROWS = 57574
const MIN_ROWS = 57575
const PACK_KEYS = 57576
const ROW_FORMAT = 57577
const STATS_AUTO_RECALC = 57578
const STATS_PERSISTENT = 57579
const STATS_SAMPLE_PAGES = 57580
const DYNAMIC = 57581
const COMPRESSED = 57582
const REDUNDANT = 57583
const COMPACT = 57584
const FIXED = 57585
const COLUMN_FORMAT = 57586
const AUTO_RANDOM = 57587
const RESTRICT = 57588
const CASCADE = 57589
const ACTION = 57590
const PARTIAL = 57591
const SIMPLE = 57592
const CHECK = 57593
const ENFORCED = 57594
const RANGE = 57595
const LIST = 57596
const ALGORITHM = 57597
const LINEAR = 57598
const PARTITIONS = 57599
const SUBPARTITION = 57600
const SUBPARTITIONS = 57601
const TYPE = 57602
const ANY = 57603
const SOME = 57604
const EXTERNAL = 57605
const LOCALFILE = 57606
const URL = 57607
const PREPARE = 57608
const DEALLOCATE = 57609
const PROPERTIES = 57610
const PARSER = 57611
const VISIBLE = 57612
const INVISIBLE = 57613
const BTREE = 57614
const HASH = 57615
const RTREE = 57616
const BSI = 57617
const ZONEMAP = 57618
const LEADING = 57619
const BOTH = 57620
const TRAILING = 57621
const UNKNOWN = 57622
const EXPIRE = 57623
const ACCOUNT = 57624
const UNLOCK = 57625
const DAY = 57626
const NEVER = 57627
const PUMP = 57628
const SECOND = 57629
const ASCII = 57630
const COALESCE = 57631
const COLLATION = 57632
const HOUR = 57633
const MICROSECOND = 57634
const MINUTE = 57635
const MONTH = 57636
const QUARTER = 57637
const REPEAT = 57638
const REVERSE = 57639
const ROW_COUNT = 57640
const WEEK = 57641
const REVOKE = 57642
const FUNCTION = 57643
const PRIVILEGES = 57644
const TABLESPACE = 57645
const EXECUTE = 57646
const SUPER = 57647
const GRANT = 57648
const OPTION = 57649
const REFERENCES = 57650
const REPLICATION = 57651
const SLAVE = 57652
const CLIENT = 57653
const USAGE = 57654
const RELOAD = 57655
const FILE = 57656
const TEMPORARY = 57657
const ROUTINE = 57658
const EVENT = 57659
const SHUTDOWN = 57660
const NULLX = 57661
const AUTO_INCREMENT = 57662
const APPROXNUM = 57663
const SIGNED = 57664
const UNSIGNED = 57665
const ZEROFILL = 57666
const ENGINES = 57667
const ADMIN_NAME = 57668
const RANDOM = 57669
const SUSPEND = 57670
const ATTRIBUTE = 57671
const HISTORY = 57672
const REUSE = 57673
const CURRENT = 57674
const OPTIONAL = 57675
const FAILED_LOGIN_ATTEMPTS = 57676
const PASSWORD_LOCK_TIME = 57677
const UNBOUNDED = 57678
const SECONDARY = 57679
const USER = 57680
const IDENTIFIED = 57681
const CIPHER = 57682
const ISSUER = 57683
const X509 = 57684
const SUBJECT = 57685
const SAN = 57686
const REQUIRE = 57687
const SSL = 57688
const NONE = 57689
const PASSWORD = 57690
const MAX_QUERIES_PER_HOUR = 57691
const MAX_UPDATES_PER_HOUR = 57692
const MAX_CONNECTIONS_PER_HOUR = 57693
const MAX_USER_CONNECTIONS = 57694
const FORMAT = 57695
const VERBOSE = 57696
const CONNECTION = 57697
const TRIGGERS = 57698
const PROFILES = 57699
const LOAD = 57700
const INFILE = 57701
const TERMINATED = 57702
const OPTIONALLY = 57703
const ENCLOSED = 57704
const ESCAPED = 57705
const STARTING = 57706
const LINES = 57707
const ROWS = 57708
const IMPORT = 57709
const DATABASES = 57710
const TABLES = 57711
const EXTENDED = 57712
const FULL = 57713
const PROCESSLIST = 57714
const FIELDS = 57715
const COLUMNS = 57716
const OPEN = 57717
const ERRORS = 57718
const WARNINGS = 57719
const INDEXES = 57720
const SCHEMAS = 57721
const NAMES = 57722
const GLOBAL = 57723
const SESSION = 57724
const ISOLATION = 57725
const LEVEL = 57726
const READ = 57727
const WRITE = 57728
const ONLY = 57729
const REPEATABLE = 57730
const COMMITTED = 57731
const UNCOMMITTED = 57732
const SERIALIZABLE = 57733
const LOCAL = 57734
const EVENTS = 57735
const PLUGINS = 57736
const CURRENT_TIMESTAMP = 57737
const DATABASE = 57738
const CURRENT_TIME = 57739
const LOCALTIME = 57740
const LOCALTIMESTAMP = 57741
const UTC_DATE = 57742
const UTC_TIME = 57743
const UTC_TIMESTAMP = 57744
const REPLACE = 57745
const CONVERT = 57746
const SEPARATOR = 57747
const CURRENT_DATE = 57748
const CURRENT_USER = 57749
const CURRENT_ROLE = 57750
const SECOND_MICROSECOND = 57751
const MINUTE_MICROSECOND = 57752
const MINUTE_SECOND = 57753
const HOUR_MICROSECOND = 57754
const HOUR_SECOND = 57755
const HOUR_MINUTE = 57756
const DAY_MICROSECOND = 57757
const DAY_SECOND = 57758
const DAY_MINUTE = 57759
const DAY_HOUR = 57760
const YEAR_MONTH = 57761
const SQL_TSI_HOUR = 57762
const SQL_TSI_DAY = 57763
const SQL_TSI_WEEK = 57764
const SQL_TSI_MONTH = 57765
const SQL_TSI_QUARTER = 57766
const SQL_TSI_YEAR = 57767
const SQL_TSI_SECOND = 57768
const SQL_TSI_MINUTE = 57769
const RECURSIVE = 57770
const CONFIG = 57771
const DRAINER = 57772
const MATCH = 57773
const AGAINST = 57774
const BOOLEAN = 57775
const LANGUAGE = 57776
const WITH = 57777
const QUERY = 57778
const EXPANSION = 57779
const ADDDATE = 57780
const BIT_AND = 57781
const BIT_OR = 57782
const BIT_XOR = 57783
const CAST = 57784
const COUNT = 57785
const APPROX_COUNT_DISTINCT = 57786
const APPROX_PERCENTILE = 57787
const CURDATE = 57788
const CURTIME = 57789
const DATE_ADD = 57790
const DATE_SUB = 57791
const EXTRACT = 57792
const GROUP_CONCAT = 57793
const MAX = 57794
const MID = 57795
const MIN = 57796
const NOW = 57797
const POSITION = 57798
const SESSION_USER = 57799
const STD = 57800
const STDDEV = 57801
const STDDEV_POP = 57802
const STDDEV_SAMP = 57803
const SUBDATE = 57804
const SUBSTR = 57805
const SUBSTRING = 57806
const SUM = 57807
const SYSDATE = 57808
const SYSTEM_USER = 57809
const TRANSLATE = 57810
const TRIM = 57811
const VARIANCE = 57812
const VAR_POP = 57813
const VAR_SAMP = 57814
const AVG = 57815
const JSON_EXTRACT = 57816
const UNNEST = 57817
const ROW = 57818
const OUTFILE = 57819
const HEADER = 57820
const MAX_FILE_SIZE = 57821
const FORCE_QUOTE = 57822
const UNUSED = 57823
const BINDINGS = 57824

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7583

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	21, 472,
	-2, 453,
	-1, 74,
	207, 640,
	-2, 682,
	-1, 91,
	42, 323,
	207, 323,
	234, 330,
	235, 330,
	395, 323,
	-2, 351,
	-1, 385,
	21, 473,
	-2, 436,
	-1, 426,
	390, 351,
	391, 351,
	-2, 324,
	-1, 468,
	100, 1368,
	111, 1368,
	130, 1368,
	-2, 1179,
	-1, 498,
	21, 473,
	-2, 436,
	-1, 688,
	64, 1525,
	-2, 1533,
	-1, 696,
	64, 1526,
	-2, 1541,
	-1, 698,
	64, 1522,
	-2, 1543,
	-1, 699,
	64, 1523,
	-2, 1544,
	-1, 704,
	64, 1524,
	-2, 1550,
	-1, 705,
	64, 1527,
	-2, 1551,
	-1, 706,
	64, 1528,
	-2, 1552,
	-1, 707,
	64, 939,
	-2, 1553,
	-1, 708,
	64, 940,
	-2, 1554,
	-1, 709,
	64, 941,
	-2, 1555,
	-1, 711,
	64, 1529,
	-2, 1557,
	-1, 712,
	64, 959,
	-2, 1558,
	-1, 713,
	64, 958,
	-2, 1559,
	-1, 716,
	64, 1530,
	-2, 1562,
	-1, 717,
	64, 1531,
	-2, 1563,
	-1, 723,
	64, 1021,
	-2, 1368,
	-1, 724,
	64, 1030,
	-2, 1393,
	-1, 725,
	64, 1034,
	-2, 1432,
	-1, 726,
	64, 1042,
	-2, 1485,
	-1, 727,
	64, 1045,
	-2, 1494,
	-1, 728,
	64, 1047,
	-2, 1504,
	-1, 729,
	64, 1035,
	-2, 1509,
	-1, 730,
	64, 1043,
	-2, 1513,
	-1, 731,
	64, 1024,
	-2, 1514,
	-1, 898,
	1, 666,
	65, 666,
	500, 666,
	-2, 673,
	-1, 1045,
	21, 472,
	-2, 867,
	-1, 1090,
	130, 1189,
	-2, 1187,
	-1, 1092,
	130, 584,
	-2, 1184,
	-1, 1093,
	130, 585,
	-2, 1185,
	-1, 1307,
	1, 667,
	65, 667,
	500, 667,
	-2, 673,
	-1, 1398,
	64, 1090,
	-2, 1511,
	-1, 1399,
	64, 1091,
	-2, 1512,
	-1, 1569,
	62, 393,
	131, 393,
	-2, 773,
	-1, 1901,
	84, 673,
	126, 673,
	163, 673,
	166, 673,
	-2, 721,
	-1, 1903,
	268, 835,
	-2, 815,
	-1, 1933,
	62, 393,
	131, 393,
	-2, 774,
	-1, 2012,
	84, 673,
	126, 673,
	163, 673,
	166, 673,
	-2, 722,
	-1, 2040,
	268, 835,
	-2, 816,
	-1, 2453,
	65, 694,
	131, 694,
	-2, 673,
	-1, 2457,
	65, 694,
	131, 694,
	-2, 673,
	-1, 2471,
	65, 698,
	131, 698,
	-2, 673,
	-1, 2476,
	65, 699,
	131, 699,
	-2, 673,
}

const yyPrivate = 57344

const yyLast = 22777

var yyAct = [...]int{
	878, 1401, 2459, 2465, 2457, 2456, 2434, 866, 2302, 735,
	2078, 2423, 2383, 754, 2052, 2341, 2367, 2270, 2368, 2274,
	2250, 1999, 2008, 1357, 1291, 1063, 973, 2076, 656, 939,
	108, 2258, 1895, 2077, 111, 331, 337, 607, 337, 772,
	1353, 1402, 733, 335, 24, 2105, 1956, 1997, 766, 69,
	386, 2061, 466, 2094, 862, 1926, 341, 903, 1714, 107,
	1572, 869, 2060, 907, 1718, 1545, 2041, 1949, 687, 595,
	1959, 1971, 584, 1967, 1587, 932, 960, 414, 1352, 1719,
	1267, 323, 1796, 69, 1723, 1907, 1072, 1786, 1654, 347,
	734, 1733, 599, 1771, 1804, 1729, 1314, 1263, 1087, 467,
	1712, 493, 1090, 1081, 1082, 1073, 1486, 108, 744, 874,
	953, 1472, 1615, 1262, 68, 935, 1339, 471, 1586, 933,
	1547, 3, 913, 334, 15, 2016, 1542, 474, 32, 332,
	6, 1308, 865, 333, 5, 891, 495, 883, 1313, 860,
	1264, 1415, 1400, 736, 429, 679, 925, 914, 24, 473,
	469, 1403, 1300, 69, 957, 1297, 1274, 851, 1278, 926,
	327, 1355, 32, 508, 1064, 979, 887, 915, 458, 859,
	1381, 648, 324, 890, 566, 976, 622, 921, 413, 632,
	349, 350, 383, 2349, 2001, 12, 1281, 385, 608, 1271,
	104, 7, 4, 2112, 2004, 1894, 879, 1075, 384, 678,
	102, 527, 336, 99, 634, 103, 2330, 459, 103, 103,
	29, 93, 75, 1518, 2320, 472, 103, 1268, 29, 93,
	75, 2069, 1526, 561, 103, 582, 492, 1279, 15, 816,
	604, 411, 32, 422, 6, 403, 322, 103, 5, 1544,
	339, 103, 813, 29, 93, 75, 806, 2356, 805, 807,
	808, 1535, 809, 810, 635, 942, 943, 1678, 535, 100,
	537, 439, 100, 815, 917, 619, 868, 620, 836, 2354,
	100, 852, 559, 856, 613, 614, 344, 611, 100, 2103,
	610, 613, 614, 1707, 2371, 2372, 1543, 2203, 538, 2345,
	2346, 100, 2206, 2115, 542, 100, 543, 855, 554, 479,
	478, 480, 2106, 2107, 2108, 2109, 1708, 560, 1709, 1896,
	870, 1513, 511, 502, 954, 2273, 1889, 1915, 1742, 847,
	1275, 1744, 1922, 640, 545, 501, 2174, 2074, 547, 477,
	548, 1734, 641, 443, 1699, 500, 1298, 2091, 2058, 337,
	1697, 108, 1955, 1954, 530, 2177, 556, 346, 557, 558,
	2329, 531, 1523, 1738, 950, 405, 2071, 2358, 550, 378,
	2381, 338, 379, 2450, 857, 402, 401, 1739, 1740, 2168,
	518, 2466, 533, 497, 499, 2390, 482, 69, 69, 473,
	2353, 2304, 1741, 854, 536, 539, 396, 540, 2161, 444,
	378, 2397, 475, 379, 387, 602, 2327, 74, 511, 101,
	1390, 1393, 1394, 1550, 2444, 2130, 2370, 532, 1618, 1620,
	1621, 1391, 2129, 414, 381, 2300, 2301, 91, 2304, 2332,
	2333, 546, 2259, 2260, 2261, 2263, 2262, 2272, 380, 2156,
	399, 2360, 2361, 563, 522, 2310, 571, 1280, 2467, 1556,
	644, 498, 1736, 541, 612, 472, 606, 605, 476, 394,
	1558, 1559, 1560, 1561, 520, 551, 32, 32, 626, 609,
	598, 467, 467, 467, 583, 534, 660, 660, 586, 587,
	2435, 589, 621, 2461, 1655, 552, 553, 549, 853, 513,
	512, 2118, 400, 337, 682, 682, 494, 585, 345, 504,
	505, 2201, 633, 1519, 470, 662, 2152, 818, 527, 1368,
	1272, 544, 2426, 885, 588, 395, 481, 665, 1704, 1702,
	1727, 590, 340, 1951, 1950, 834, 592, 616, 617, 667,
	658, 658, 1269, 323, 519, 681, 681, 660, 1608, 660,
	501, 945, 2473, 1364, 1269, 819, 638, 814, 1269, 946,
	867, 516, 69, 1363, 643, 408, 409, 410, 944, 2235,
	1366, 1365, 636, 637, 446, 69, 2000, 447, 2409, 843,
	1624, 2359, 527, 404, 69, 513, 512, 1502, 1902, 485,
	490, 491, 2479, 613, 614, 568, 526, 506, 1284, 623,
	1518, 623, 1673, 603, 2331, 1349, 1508, 660, 570, 1484,
	898, 385, 1377, 2460, 414, 613, 614, 904, 660, 1745,
	2175, 872, 1570, 1735, 1268, 2271, 982, 876, 1700, 955,
	627, 881, 894, 2427, 884, 1737, 1290, 1392, 1282, 1259,
	922, 922, 1270, 927, 871, 1619, 864, 2478, 927, 2157,
	2158, 1728, 660, 108, 32, 654, 655, 2075, 1624, 842,
	920, 1754, 875, 32, 594, 839, 467, 76, 660, 838,
	76, 76, 848, 2070, 1527, 886, 642, 615, 76, 861,
	618, 845, 1549, 899, 593, 967, 76, 825, 651, 652,
	653, 666, 660, 820, 972, 108, 108, 893, 322, 76,
	918, 919, 988, 76, 811, 677, 908, 949, 821, 562,
	876, 909, 521, 1624, 924, 2472, 876, 876, 911, 912,
	977, 841, 975, 645, 974, 974, 858, 840, 837, 863,
	1571, 978, 2154, 1553, 1554, 2469, 2153, 470, 1571, 892,
	630, 631, 980, 829, 830, 992, 1669, 1552, 908, 1668,
	905, 487, 488, 489, 951, 2424, 2425, 1348, 1724, 1727,
	1047, 2432, 450, 880, 1302, 956, 623, 873, 2387, 910,
	1870, 849, 670, 671, 672, 673, 674, 675, 676, 1936,
	916, 2451, 971, 2446, 892, 2236, 2238, 2239, 2240, 2237,
	440, 900, 901, 1755, 928, 906, 1844, 1841, 1842, 1843,
	1046, 2470, 1875, 850, 1874, 1873, 1871, 1045, 1054, 449,
	2438, 1705, 440, 452, 451, 1624, 1617, 929, 923, 1573,
	2437, 1349, 2385, 931, 861, 930, 2378, 1056, 524, 964,
	965, 833, 1564, 2373, 952, 2362, 1079, 1079, 1084, 832,
	1921, 525, 2350, 961, 962, 963, 966, 1277, 2325, 2447,
	1048, 1049, 1050, 1051, 2124, 1301, 2324, 969, 1349, 2323,
	968, 970, 2322, 1768, 2312, 1872, 1092, 904, 2197, 442,
	1521, 660, 441, 472, 1052, 1030, 1277, 1093, 2195, 388,
	1728, 2193, 1010, 1520, 473, 1721, 1277, 1068, 2386, 1722,
	1725, 442, 2179, 2191, 441, 69, 1289, 1759, 525, 2179,
	1018, 1377, 2184, 1512, 1507, 2178, 108, 108, 2351, 2088,
	985, 986, 987, 984, 2179, 2086, 1332, 1286, 1859, 527,
	108, 1315, 2179, 1845, 1260, 2179, 1783, 927, 2179, 1663,
	2313, 108, 1258, 1781, 2198, 1294, 1296, 331, 991, 822,
	1078, 1726, 1632, 1694, 2196, 927, 600, 2192, 664, 1311,
	472, 1631, 1516, 1565, 985, 986, 987, 984, 977, 2192,
	1323, 985, 986, 987, 984, 514, 2036, 1510, 1318, 978,
	1322, 2179, 496, 1504, 32, 2089, 624, 1317, 1696, 1285,
	2421, 2087, 1876, 1877, 1624, 1436, 1276, 660, 826, 1624,
	647, 564, 1784, 1358, 1358, 1324, 1325, 1071, 1662, 1782,
	1310, 682, 1266, 108, 1091, 1288, 2410, 1256, 1624, 1361,
	1386, 1257, 1388, 1546, 1085, 2314, 1086, 1624, 1318, 2209,
	1769, 1487, 1703, 876, 876, 876, 1326, 1261, 1509, 1695,
	1411, 1412, 1370, 1511, 2018, 1405, 1404, 503, 1359, 1505,
	649, 1375, 681, 1318, 1309, 1284, 1382, 1383, 1384, 1385,
	1283, 650, 1277, 1265, 827, 1865, 448, 1367, 1328, 1487,
	1330, 1660, 1540, 1378, 987, 984, 984, 646, 1408, 1303,
	1068, 625, 889, 1321, 406, 1360, 2164, 2163, 1380, 2147,
	1911, 1450, 1906, 1395, 1993, 2455, 2440, 1496, 916, 2187,
	2188, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1335, 1333, 1334, 1481, 1482, 1331, 1329,
	1327, 1033, 1034, 1035, 1036, 1037, 1030, 1488, 1413, 1491,
	2185, 2186, 1410, 2407, 1432, 1479, 1992, 1429, 1414, 2391,
	1498, 1431, 1428, 1430, 1434, 1435, 1371, 1372, 1373, 1433,
	1477, 1478, 1476, 2288, 2443, 2285, 1379, 2246, 985, 986,
	987, 984, 2284, 1480, 453, 1501, 1028, 1038, 1039, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1030, 2022, 445, 1474,
	2244, 985, 986, 987, 984, 2252, 1406, 1407, 2026, 1409,
	1867, 2242, 2245, 385, 2442, 1445, 1446, 1447, 1448, 1449,
	1459, 1730, 1455, 1456, 1457, 1458, 2230, 2229, 2015, 2228,
	2225, 2365, 2017, 2019, 2021, 2243, 2023, 2024, 2025, 2027,
	2028, 2029, 2031, 2032, 2033, 2034, 2241, 2219, 1489, 2216,
	1490, 1492, 1493, 985, 986, 987, 984, 1641, 2215, 1497,
	1038, 1039, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1030,
	2113, 1499, 2099, 2232, 2098, 2037, 2097, 2093, 2092, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1439, 1440, 1441, 1442, 1443, 1444, 1437, 1438, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1030, 1918, 1640, 2231, 1514,
	2035, 995, 996, 997, 998, 999, 1000, 1001, 993, 660,
	1743, 660, 2072, 660, 1919, 1690, 823, 2014, 501, 985,
	986, 987, 984, 985, 986, 987, 984, 1533, 1528, 1029,
	1028, 1038, 1039, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1030, 2380, 660, 1292, 1293, 2030, 2364, 2073, 1671, 1920,
	2251, 2009, 2020, 1569, 895, 896, 897, 378, 2347, 1575,
	379, 2277, 2308, 2307, 2295, 1524, 876, 2283, 2233, 2226,
	1536, 1537, 884, 1583, 2222, 2221, 2220, 501, 108, 108,
	108, 108, 1567, 985, 986, 987, 984, 1588, 2176, 501,
	108, 1603, 1854, 2149, 985, 986, 987, 984, 2199, 1588,
	24, 1532, 1563, 501, 1539, 69, 2114, 2110, 2095, 660,
	2007, 2005, 1945, 1607, 2173, 1944, 1929, 108, 108, 2471,
	985, 986, 987, 984, 1917, 1916, 1525, 1578, 1913, 1358,
	1579, 1891, 1883, 2100, 1732, 1604, 985, 986, 987, 984,
	1701, 861, 1517, 1515, 1611, 1530, 1613, 1614, 1522, 1500,
	1576, 1629, 780, 779, 1577, 985, 986, 987, 984, 1287,
	1628, 1580, 1026, 1581, 985, 986, 987, 984, 1538, 1665,
	1025, 1024, 824, 1309, 892, 2448, 1747, 1555, 1574, 1562,
	15, 888, 2336, 2335, 32, 1625, 6, 1979, 1626, 1627,
	5, 1568, 2315, 2282, 1582, 2281, 1585, 1589, 1590, 1591,
	1592, 1584, 2280, 2279, 1600, 1602, 2194, 1601, 2190, 985,
	986, 987, 984, 985, 986, 987, 984, 1649, 2189, 385,
	1996, 1612, 1609, 1994, 1991, 1983, 1948, 1635, 1636, 1637,
	1638, 1639, 1978, 1643, 1930, 1901, 1885, 1644, 1645, 1646,
	1647, 985, 986, 987, 984, 1622, 1079, 1785, 1682, 1079,
	1977, 1760, 1685, 1670, 985, 986, 987, 984, 1667, 660,
	1666, 1652, 1653, 1664, 1045, 1648, 1657, 1633, 1630, 1661,
	1623, 1605, 985, 986, 987, 984, 1688, 1882, 1495, 1494,
	668, 1672, 501, 2468, 2420, 876, 2414, 1689, 1679, 2398,
	2395, 876, 1717, 69, 2393, 1011, 2287, 2268, 108, 985,
	986, 987, 984, 103, 2256, 2253, 103, 501, 1651, 93,
	75, 108, 1315, 1864, 1758, 2248, 2210, 1717, 1858, 1958,
	875, 389, 390, 391, 392, 1474, 1684, 1748, 1650, 2171,
	472, 2170, 1659, 1681, 388, 985, 986, 987, 984, 1857,
	985, 986, 987, 984, 2441, 2169, 1698, 2166, 1675, 1693,
	1680, 1686, 1683, 1677, 1674, 1687, 1692, 100, 1789, 2160,
	100, 985, 986, 987, 984, 2145, 596, 1968, 1960, 1749,
	1750, 1751, 1972, 1975, 1965, 1964, 1942, 1924, 1912, 2167,
	669, 1761, 1475, 100, 1762, 1763, 1756, 1566, 1541, 1503,
	1767, 1029, 1028, 1038, 1039, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1030, 1369, 660, 1779, 1791, 1752, 1757, 1753,
	660, 1362, 1316, 1780, 1070, 1764, 1846, 1766, 1069, 1067,
	1765, 1066, 1065, 1852, 1853, 1776, 1856, 1062, 1061, 1059,
	1058, 1057, 1878, 1055, 415, 1027, 1023, 1022, 1880, 1021,
	1020, 1019, 1866, 108, 1855, 108, 1789, 1879, 985, 986,
	987, 984, 108, 1851, 1881, 1017, 1016, 1015, 658, 1320,
	1850, 1905, 1014, 1013, 658, 1863, 985, 986, 987, 984,
	1012, 1009, 1890, 1008, 1892, 985, 986, 987, 984, 1007,
	1860, 1900, 985, 986, 987, 984, 1862, 2403, 1849, 1006,
	660, 660, 440, 1005, 1899, 108, 1933, 1869, 1004, 69,
	1848, 1003, 1884, 1002, 846, 1886, 817, 565, 529, 501,
	985, 986, 987, 984, 1888, 1772, 1773, 1305, 1925, 1588,
	517, 1887, 985, 986, 987, 984, 2401, 2369, 1358, 1775,
	1947, 1557, 1376, 528, 1778, 1777, 1909, 1597, 1904, 1847,
	1903, 1595, 1598, 1594, 658, 1927, 1596, 1908, 1593, 1908,
	1910, 876, 2454, 1794, 1941, 1506, 1310, 1943, 1938, 1935,
	1934, 985, 986, 987, 984, 1793, 1292, 1293, 1937, 1946,
	1932, 442, 1931, 1531, 441, 985, 986, 987, 984, 1599,
	1529, 1345, 1346, 1939, 567, 1711, 1940, 985, 986, 987,
	984, 1299, 523, 2116, 1962, 1963, 1710, 1351, 902, 1405,
	1404, 1041, 2338, 1044, 579, 580, 1952, 427, 54, 1966,
	577, 578, 1970, 31, 416, 575, 576, 1961, 1042, 1043,
	1040, 629, 1029, 1028, 1038, 1039, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1030, 573, 574, 1980, 628, 1969, 30,
	432, 319, 555, 501, 2013, 1255, 320, 2062, 2064, 1982,
	2062, 2062, 1792, 1717, 1973, 597, 1976, 1984, 569, 2415,
	1986, 2292, 1988, 2290, 2213, 501, 2211, 1483, 2208, 388,
	1981, 2207, 321, 2205, 985, 986, 987, 984, 2006, 1898,
	2002, 1897, 1985, 904, 1989, 1990, 1788, 572, 1987, 985,
	986, 987, 984, 1787, 2068, 1616, 908, 2405, 2404, 2063,
	1691, 2038, 389, 390, 391, 392, 2405, 1634, 2059, 515,
	2010, 2404, 2065, 2066, 2418, 388, 2084, 2162, 947, 1350,
	601, 1336, 37, 1, 2067, 1273, 1914, 435, 1746, 1731,
	591, 407, 2081, 1451, 1935, 2082, 2083, 581, 831, 484,
	2085, 1341, 1344, 1345, 1346, 1342, 510, 1343, 1347, 828,
	430, 509, 507, 1485, 1416, 2120, 767, 1074, 1080, 2096,
	2249, 1029, 1028, 1038, 1039, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1030, 2337, 2382, 2101, 2286, 2340, 844, 753,
	2200, 431, 436, 1706, 1341, 1344, 1345, 1346, 1342, 660,
	1343, 1347, 2102, 424, 2202, 426, 439, 2104, 1534, 108,
	423, 421, 420, 1998, 425, 1676, 437, 438, 2064, 2123,
	418, 777, 770, 1060, 812, 486, 769, 1923, 433, 434,
	2121, 2122, 1551, 2125, 2126, 2127, 2128, 2148, 2165, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 1927, 2150, 2059, 393, 2146, 483, 419,
	2090, 1893, 1953, 1974, 428, 1957, 2464, 2453, 2433, 2172,
	2413, 2181, 2214, 2303, 2449, 2180, 2352, 2396, 2389, 2182,
	2299, 2117, 351, 2183, 948, 639, 456, 2269, 352, 1319,
	2328, 2255, 397, 1304, 2247, 398, 1307, 1306, 1396, 994,
	2204, 1473, 1053, 685, 1658, 743, 737, 1548, 2053, 1610,
	2212, 36, 35, 34, 983, 69, 1088, 501, 1358, 768,
	501, 501, 501, 110, 2227, 1089, 2296, 2111, 2342, 752,
	501, 751, 750, 749, 748, 1340, 1338, 1337, 937, 2217,
	2218, 936, 981, 2366, 2257, 2223, 2224, 2265, 2266, 2267,
	2264, 2318, 2254, 2319, 2003, 2276, 2159, 2234, 2155, 2151,
	2309, 2297, 2012, 2275, 2011, 2039, 2040, 2046, 660, 660,
	1803, 2278, 1799, 1801, 1802, 1800, 1868, 1795, 2291, 1715,
	2293, 2294, 1716, 1713, 2298, 2289, 1774, 1770, 1076, 1083,
	882, 938, 105, 934, 2080, 382, 2305, 2306, 23, 108,
	11, 10, 835, 9, 14, 22, 2416, 501, 21, 20,
	19, 62, 61, 60, 59, 18, 8, 58, 57, 501,
	56, 17, 658, 658, 16, 2311, 51, 52, 974, 47,
	2317, 46, 45, 417, 2321, 44, 43, 42, 2344, 41,
	50, 49, 48, 40, 39, 2316, 2326, 38, 73, 72,
	71, 2343, 2334, 1029, 1028, 1038, 1039, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1030, 2348, 1995, 70, 25, 26,
	27, 28, 2355, 2357, 83, 82, 84, 80, 78, 81,
	79, 77, 33, 13, 2363, 2, 0, 0, 0, 0,
	0, 0, 2374, 2375, 2376, 2377, 0, 0, 2384, 0,
	0, 0, 2388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1029, 1028, 1038, 1039, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1030, 0, 0, 0, 0, 0,
	0, 0, 0, 2399, 0, 2402, 2400, 2344, 2412, 0,
	0, 0, 0, 2406, 501, 2379, 501, 2392, 0, 2394,
	2343, 2417, 2411, 2419, 867, 2408, 867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2428, 0, 2384,
	0, 501, 2429, 0, 2436, 0, 0, 0, 2439, 0,
	0, 867, 0, 2445, 0, 0, 0, 0, 0, 0,
	0, 2422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2431, 0, 2452, 0, 0, 0, 0, 0,
	2463, 0, 0, 2462, 0, 0, 0, 0, 0, 0,
	2474, 0, 0, 0, 2475, 2477, 2476, 1201, 1243, 2463,
	0, 1190, 0, 1150, 1203, 1124, 1139, 1211, 1140, 1141,
	1176, 1103, 1159, 235, 1137, 0, 0, 0, 0, 0,
	0, 1193, 1095, 1127, 1128, 1097, 1134, 1098, 1125, 1152,
	180, 1123, 1162, 205, 1209, 0, 0, 265, 219, 0,
	0, 1155, 1195, 1157, 1181, 1149, 1177, 1111, 1170, 1204,
	1138, 0, 1174, 1205, 0, 0, 0, 0, 895, 896,
	897, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 1173, 1199, 1136, 0, 165, 1202, 1156, 1175, 0,
	0, 1096, 1171, 0, 1101, 1104, 1210, 1197, 1131, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 1153, 1158,
	1178, 1146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1129, 0, 1167, 0, 0, 0, 1106, 1102, 0,
	1151, 0, 0, 154, 270, 285, 163, 261, 298, 168,
	268, 159, 234, 257, 0, 1242, 156, 283, 267, 216,
	199, 200, 155, 0, 252, 178, 191, 175, 232, 0,
	282, 310, 174, 301, 1105, 293, 158, 1237, 292, 231,
	279, 284, 217, 211, 157, 281, 215, 210, 203, 182,
	0, 195, 243, 209, 244, 196, 221, 220, 222, 1221,
	1222, 1223, 1224, 1225, 1233, 1234, 0, 1238, 1239, 1240,
	1110, 0, 1130, 1179, 0, 1094, 1188, 1196, 1148, 295,
	1198, 1145, 1144, 1228, 0, 1227, 269, 1229, 1230, 204,
	1194, 1126, 1135, 311, 1133, 255, 237, 1200, 1166, 1241,
	253, 207, 280, 245, 286, 271, 294, 249, 246, 150,
	272, 177, 218, 160, 161, 173, 179, 181, 183, 184,
	227, 228, 240, 260, 273, 274, 275, 176, 169, 254,
	170, 193, 171, 151, 262, 172, 152, 241, 278, 1226,
	189, 250, 214, 153, 213, 242, 277, 276, 302, 308,
	309, 313, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 0, 1235, 0, 1236, 307, 187,
	148, 290, 0, 233, 0, 1191, 1099, 1109, 1107, 1142,
	1168, 1169, 229, 306, 1183, 1187, 1184, 1212, 258, 0,
	0, 0, 0, 0, 198, 239, 1185, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	266, 288, 300, 317, 1244, 1245, 1246, 1247, 0, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 291, 1143, 1117, 1154,
	299, 1120, 1118, 1182, 1119, 1172, 315, 223, 224, 225,
	226, 190, 0, 167, 318, 248, 1163, 1147, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1164, 1122, 312, 186, 192,
	0, 194, 166, 238, 188, 297, 201, 1189, 230, 197,
	263, 202, 208, 251, 296, 236, 256, 164, 287, 264,
	212, 1861, 0, 1116, 1121, 1115, 1160, 1161, 1206, 1207,
	1208, 1180, 1108, 1192, 1112, 1114, 1113, 0, 0, 0,
	0, 0, 0, 1029, 1028, 1038, 1039, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1030, 0, 1186, 0, 774, 1165,
	149, 0, 206, 1213, 247, 185, 0, 0, 235, 1029,
	1028, 1038, 1039, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1030, 745, 0, 0, 0, 180, 0, 0, 205, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 789, 795,
	0, 0, 0, 0, 1231, 1232, 303, 304, 305, 289,
	738, 0, 0, 686, 780, 779, 755, 764, 0, 1656,
	162, 756, 0, 763, 757, 761, 760, 758, 759, 0,
	723, 0, 0, 0, 0, 0, 0, 683, 742, 0,
	746, 1029, 1028, 1038, 1039, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 739, 740, 0, 0, 0, 0, 775, 0,
	741, 0, 0, 776, 0, 765, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 762, 726, 730, 174, 728, 773,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 800, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 0, 295, 0, 0, 788, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 731, 0,
	255, 237, 798, 684, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	1453, 1452, 1454, 307, 187, 148, 290, 786, 233, 0,
	797, 782, 783, 784, 787, 790, 791, 725, 729, 792,
	794, 796, 799, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 732, 223, 224, 225, 226, 724, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 806, 785,
	805, 807, 808, 804, 809, 810, 793, 747, 0, 802,
	801, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 127, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 778, 781, 0,
	0, 303, 304, 305, 289, 103, 0, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 180, 0, 0, 205, 0, 0,
	0, 265, 219, 0, 0, 0, 0, 789, 795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 738,
	0, 0, 686, 780, 779, 755, 764, 0, 0, 162,
	756, 0, 763, 757, 761, 760, 758, 759, 0, 723,
	0, 0, 0, 0, 0, 0, 683, 742, 0, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 739, 740, 0, 0, 0, 0, 775, 0, 741,
	0, 0, 776, 0, 765, 0, 0, 154, 270, 285,
	163, 261, 298, 168, 268, 159, 234, 257, 0, 0,
	156, 283, 267, 216, 199, 200, 155, 0, 252, 178,
	191, 175, 232, 762, 726, 730, 174, 728, 773, 293,
	158, 0, 292, 231, 279, 284, 217, 211, 157, 281,
	215, 210, 203, 182, 800, 195, 243, 209, 244, 196,
	221, 220, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	771, 0, 0, 295, 0, 0, 788, 0, 0, 0,
	269, 0, 0, 204, 0, 0, 0, 731, 0, 255,
	237, 798, 684, 0, 253, 207, 280, 245, 286, 271,
	294, 249, 246, 150, 272, 177, 218, 160, 161, 173,
	179, 181, 183, 184, 227, 228, 240, 260, 273, 274,
	275, 176, 169, 254, 170, 193, 171, 151, 262, 172,
	152, 241, 278, 0, 189, 250, 214, 153, 213, 242,
	277, 276, 302, 308, 309, 313, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 307, 187, 148, 290, 786, 233, 0, 797,
	782, 783, 784, 787, 790, 791, 725, 729, 792, 794,
	796, 799, 258, 0, 0, 0, 0, 0, 198, 239,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 288, 300, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	727, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	732, 223, 224, 225, 226, 724, 0, 167, 318, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 186, 192, 0, 194, 166, 238, 188, 297,
	201, 0, 230, 197, 263, 202, 208, 251, 296, 236,
	256, 164, 287, 264, 212, 0, 0, 806, 785, 805,
	807, 808, 804, 809, 810, 793, 747, 0, 802, 801,
	803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 206, 76, 247, 185,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 127, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 778, 781, 774, 0,
	303, 304, 305, 289, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 180, 877, 0, 205, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 789, 795,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	738, 0, 0, 686, 780, 779, 755, 764, 0, 0,
	162, 756, 0, 763, 757, 761, 760, 758, 759, 0,
	723, 0, 0, 0, 0, 0, 0, 683, 742, 0,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 739, 740, 0, 0, 0, 0, 775, 0,
	741, 0, 0, 959, 0, 765, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 762, 726, 730, 174, 728, 773,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 800, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 0, 295, 0, 0, 788, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 731, 0,
	255, 237, 798, 684, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 786, 233, 0,
	797, 782, 783, 784, 787, 790, 791, 725, 729, 792,
	794, 796, 799, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 732, 223, 224, 225, 226, 724, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 806, 785,
	805, 807, 808, 804, 809, 810, 793, 747, 0, 802,
	801, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 127, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 778, 781, 774,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 180, 2430, 0, 205,
	0, 0, 0, 265, 219, 0, 0, 0, 0, 789,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, 0, 0, 686, 780, 779, 755, 764, 0,
	0, 162, 756, 0, 763, 757, 761, 760, 758, 759,
	0, 723, 0, 0, 0, 0, 0, 0, 683, 742,
	0, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 740, 0, 0, 0, 0, 775,
	0, 741, 0, 0, 776, 0, 765, 0, 0, 154,
	270, 285, 163, 261, 298, 168, 268, 159, 234, 257,
	0, 0, 156, 283, 267, 216, 199, 200, 155, 0,
	252, 178, 191, 175, 232, 762, 726, 730, 174, 728,
	773, 293, 158, 0, 292, 231, 279, 284, 217, 211,
	157, 281, 215, 210, 203, 182, 800, 195, 243, 209,
	244, 196, 221, 220, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 0, 0, 295, 0, 0, 788, 0,
	0, 0, 269, 0, 0, 204, 0, 0, 0, 731,
	0, 255, 237, 798, 684, 0, 253, 207, 280, 245,
	286, 271, 294, 249, 246, 150, 272, 177, 218, 160,
	161, 173, 179, 181, 183, 184, 227, 228, 240, 260,
	273, 274, 275, 176, 169, 254, 170, 193, 171, 151,
	262, 172, 152, 241, 278, 0, 189, 250, 214, 153,
	213, 242, 277, 276, 302, 308, 309, 313, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 307, 187, 148, 290, 786, 233,
	0, 797, 782, 783, 784, 787, 790, 791, 725, 729,
	792, 794, 796, 799, 258, 0, 0, 0, 0, 0,
	198, 239, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 288, 300, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 727, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 732, 223, 224, 225, 226, 724, 0, 167,
	318, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 186, 192, 0, 194, 166, 238,
	188, 297, 201, 0, 230, 197, 263, 202, 208, 251,
	296, 236, 256, 164, 287, 264, 212, 0, 0, 806,
	785, 805, 807, 808, 804, 809, 810, 793, 747, 0,
	802, 801, 803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 206, 0,
	247, 185, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 127, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 778, 781,
	774, 0, 303, 304, 305, 289, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 180, 877, 0,
	205, 0, 0, 0, 265, 219, 0, 0, 0, 0,
	789, 795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 686, 780, 779, 755, 764,
	0, 0, 162, 756, 0, 763, 757, 761, 760, 758,
	759, 0, 723, 0, 0, 0, 0, 0, 0, 683,
	742, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 739, 740, 0, 0, 0, 0,
	775, 0, 741, 0, 0, 776, 0, 765, 0, 0,
	154, 270, 285, 163, 261, 298, 168, 268, 159, 234,
	257, 0, 0, 156, 283, 267, 216, 199, 200, 155,
	0, 252, 178, 191, 175, 232, 762, 726, 730, 174,
	728, 773, 293, 158, 0, 292, 231, 279, 284, 217,
	211, 157, 281, 215, 210, 203, 182, 800, 195, 243,
	209, 244, 196, 221, 220, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 771, 0, 0, 295, 0, 0, 788,
	0, 0, 0, 269, 0, 0, 204, 0, 0, 0,
	731, 0, 255, 237, 798, 684, 0, 253, 207, 280,
	245, 286, 271, 294, 249, 246, 150, 272, 177, 218,
	160, 161, 173, 179, 181, 183, 184, 227, 228, 240,
	260, 273, 274, 275, 176, 169, 254, 170, 193, 171,
	151, 262, 172, 152, 241, 278, 0, 189, 250, 214,
	153, 213, 242, 277, 276, 302, 308, 309, 313, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 307, 187, 148, 290, 786,
	233, 0, 797, 782, 783, 784, 787, 790, 791, 725,
	729, 792, 794, 796, 799, 258, 0, 0, 0, 0,
	0, 198, 239, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 288, 300,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 732, 223, 224, 225, 226, 724, 0,
	167, 318, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 186, 192, 0, 194, 166,
	238, 188, 297, 201, 0, 230, 197, 263, 202, 208,
	251, 296, 236, 256, 164, 287, 264, 212, 0, 0,
	806, 785, 805, 807, 808, 804, 809, 810, 793, 747,
	0, 802, 801, 803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 206,
	0, 247, 185, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 127, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 778,
	781, 0, 0, 303, 304, 305, 289, 774, 0, 0,
	1642, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 180, 0, 0, 205, 0, 0,
	0, 265, 219, 0, 0, 0, 0, 789, 795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 738,
	0, 0, 686, 780, 779, 755, 764, 0, 0, 162,
	756, 0, 763, 757, 761, 760, 758, 759, 0, 723,
	0, 0, 0, 0, 0, 0, 683, 742, 0, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 739, 740, 0, 0, 0, 0, 775, 0, 741,
	0, 0, 776, 0, 765, 0, 0, 154, 270, 285,
	163, 261, 298, 168, 268, 159, 234, 257, 0, 0,
	156, 283, 267, 216, 199, 200, 155, 0, 252, 178,
	191, 175, 232, 762, 726, 730, 174, 728, 773, 293,
	158, 0, 292, 231, 279, 284, 217, 211, 157, 281,
	215, 210, 203, 182, 800, 195, 243, 209, 244, 196,
	221, 220, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	771, 0, 0, 295, 0, 0, 788, 0, 0, 0,
	269, 0, 0, 204, 0, 0, 0, 731, 0, 255,
	237, 798, 684, 0, 253, 207, 280, 245, 286, 271,
	294, 249, 246, 150, 272, 177, 218, 160, 161, 173,
	179, 181, 183, 184, 227, 228, 240, 260, 273, 274,
	275, 176, 169, 254, 170, 193, 171, 151, 262, 172,
	152, 241, 278, 0, 189, 250, 214, 153, 213, 242,
	277, 276, 302, 308, 309, 313, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 307, 187, 148, 290, 786, 233, 0, 797,
	782, 783, 784, 787, 790, 791, 725, 729, 792, 794,
	796, 799, 258, 0, 0, 0, 0, 0, 198, 239,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 288, 300, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	727, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	732, 223, 224, 225, 226, 724, 0, 167, 318, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 186, 192, 0, 194, 166, 238, 188, 297,
	201, 0, 230, 197, 263, 202, 208, 251, 296, 236,
	256, 164, 287, 264, 212, 0, 0, 806, 785, 805,
	807, 808, 804, 809, 810, 793, 747, 0, 802, 801,
	803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 206, 0, 247, 185,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 127, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 778, 781, 774, 0,
	303, 304, 305, 289, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 180, 0, 0, 205, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 789, 795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 686, 780, 779, 755, 764, 0, 0,
	162, 756, 0, 763, 757, 761, 760, 758, 759, 0,
	723, 0, 0, 0, 0, 0, 0, 683, 742, 0,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 739, 740, 680, 0, 0, 0, 775, 0,
	741, 0, 0, 776, 0, 765, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 762, 726, 730, 174, 728, 773,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 800, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 0, 295, 0, 0, 788, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 731, 0,
	255, 237, 798, 684, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 786, 233, 0,
	797, 782, 783, 784, 787, 790, 791, 725, 729, 792,
	794, 796, 799, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 732, 223, 224, 225, 226, 724, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 806, 785,
	805, 807, 808, 804, 809, 810, 793, 747, 0, 802,
	801, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 127, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 778, 781, 774,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 180, 0, 0, 205,
	0, 0, 0, 265, 219, 0, 0, 0, 0, 789,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, 0, 0, 686, 780, 779, 755, 764, 0,
	0, 162, 756, 0, 763, 757, 761, 760, 758, 759,
	0, 723, 0, 0, 0, 0, 0, 0, 683, 742,
	0, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 740, 0, 0, 0, 0, 775,
	0, 741, 0, 0, 776, 0, 765, 0, 0, 154,
	270, 285, 163, 261, 298, 168, 268, 159, 234, 257,
	0, 0, 156, 283, 267, 216, 199, 200, 155, 0,
	252, 178, 191, 175, 232, 762, 726, 730, 174, 728,
	773, 293, 158, 0, 292, 231, 279, 284, 217, 211,
	157, 281, 215, 210, 203, 182, 800, 195, 243, 209,
	244, 196, 221, 220, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 0, 0, 295, 0, 0, 788, 0,
	0, 0, 269, 0, 0, 204, 0, 0, 0, 731,
	0, 255, 237, 798, 684, 0, 253, 207, 280, 245,
	286, 271, 294, 249, 246, 150, 272, 177, 218, 160,
	161, 173, 179, 181, 183, 184, 227, 228, 240, 260,
	273, 274, 275, 176, 169, 254, 170, 193, 171, 151,
	262, 172, 152, 241, 278, 0, 189, 250, 214, 153,
	213, 242, 277, 276, 302, 308, 309, 313, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 307, 187, 148, 290, 786, 233,
	0, 797, 782, 783, 784, 787, 790, 791, 725, 729,
	792, 794, 796, 799, 258, 0, 0, 0, 0, 0,
	198, 239, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 288, 300, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 727, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 732, 223, 224, 225, 226, 724, 0, 167,
	318, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 186, 192, 0, 194, 166, 238,
	188, 297, 201, 0, 230, 197, 263, 202, 208, 251,
	296, 236, 256, 164, 287, 264, 212, 0, 0, 806,
	785, 805, 807, 808, 804, 809, 810, 793, 747, 0,
	802, 801, 803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 206, 0,
	247, 185, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 127, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 778, 781,
	774, 0, 303, 304, 305, 289, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 1397,
	0, 0, 0, 745, 0, 0, 0, 180, 0, 0,
	205, 0, 0, 0, 265, 219, 0, 0, 0, 0,
	789, 795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 686, 780, 779, 755, 764,
	0, 0, 162, 756, 0, 763, 757, 761, 760, 758,
	759, 0, 723, 0, 0, 0, 0, 0, 0, 0,
	742, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 739, 740, 0, 0, 0, 0,
	775, 0, 741, 0, 0, 776, 0, 765, 0, 0,
	154, 270, 285, 163, 261, 298, 168, 268, 159, 234,
	257, 0, 0, 156, 283, 267, 216, 199, 200, 155,
	0, 252, 178, 191, 175, 232, 762, 726, 730, 174,
	728, 773, 293, 158, 0, 292, 231, 279, 284, 217,
	211, 157, 281, 215, 210, 203, 182, 800, 195, 243,
	209, 244, 196, 221, 220, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 771, 0, 0, 295, 0, 0, 788,
	0, 0, 0, 269, 0, 0, 204, 0, 0, 0,
	731, 0, 255, 237, 798, 0, 0, 253, 207, 280,
	245, 286, 271, 294, 249, 246, 150, 272, 177, 218,
	160, 161, 173, 179, 181, 183, 184, 227, 228, 240,
	260, 273, 274, 275, 176, 169, 254, 170, 193, 171,
	151, 262, 172, 152, 241, 278, 0, 189, 250, 214,
	153, 213, 242, 277, 276, 302, 1398, 1399, 313, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 307, 187, 148, 290, 786,
	233, 0, 797, 782, 783, 784, 787, 790, 791, 725,
	729, 792, 794, 796, 799, 258, 0, 0, 0, 0,
	0, 198, 239, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 288, 300,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 732, 223, 224, 225, 226, 724, 0,
	167, 318, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 186, 192, 0, 194, 166,
	238, 188, 297, 201, 0, 230, 197, 263, 202, 208,
	251, 296, 236, 256, 164, 287, 264, 212, 0, 0,
	806, 785, 805, 807, 808, 804, 809, 810, 793, 747,
	0, 802, 801, 803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 206,
	0, 247, 185, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 127, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 778,
	781, 774, 0, 303, 304, 305, 289, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 180, 0,
	0, 205, 0, 0, 0, 265, 219, 0, 0, 0,
	0, 789, 795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 780, 779, 755,
	764, 0, 0, 162, 756, 0, 763, 757, 761, 760,
	758, 759, 0, 723, 0, 0, 0, 0, 0, 0,
	683, 742, 0, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 739, 740, 0, 0, 0,
	0, 775, 0, 741, 0, 0, 776, 0, 765, 0,
	0, 154, 270, 285, 163, 261, 298, 168, 268, 159,
	234, 257, 0, 0, 156, 283, 267, 216, 199, 200,
	155, 0, 252, 178, 191, 175, 232, 762, 726, 730,
	174, 728, 773, 293, 158, 0, 292, 231, 279, 284,
	217, 211, 157, 281, 215, 210, 203, 182, 800, 195,
	243, 209, 244, 196, 221, 220, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 0, 295, 0, 0,
	788, 0, 0, 0, 269, 0, 0, 204, 0, 0,
	0, 731, 0, 255, 237, 798, 684, 0, 253, 207,
	280, 245, 286, 271, 294, 249, 246, 150, 272, 177,
	218, 160, 161, 173, 179, 181, 183, 184, 227, 228,
	240, 260, 273, 274, 275, 176, 169, 254, 170, 193,
	171, 151, 262, 172, 152, 241, 278, 0, 189, 250,
	214, 153, 213, 242, 277, 276, 302, 308, 309, 313,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 0, 307, 187, 148, 290,
	786, 233, 0, 797, 782, 783, 784, 787, 790, 791,
	725, 729, 792, 794, 796, 799, 258, 0, 0, 0,
	0, 0, 198, 239, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 288,
	300, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 727, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 732, 223, 224, 225, 226, 724,
	0, 167, 318, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 186, 192, 0, 194,
	166, 238, 188, 297, 201, 0, 230, 197, 263, 202,
	208, 251, 296, 236, 256, 164, 287, 264, 212, 0,
	0, 806, 785, 805, 807, 808, 804, 809, 810, 793,
	747, 0, 802, 801, 803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	206, 0, 247, 185, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 127,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	778, 781, 774, 0, 303, 304, 305, 289, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 180,
	0, 0, 205, 0, 0, 0, 265, 219, 0, 0,
	0, 0, 789, 795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 0, 686, 780, 779,
	755, 764, 0, 0, 162, 756, 0, 763, 757, 761,
	760, 758, 759, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 742, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 739, 740, 0, 0,
	0, 0, 775, 0, 741, 0, 0, 776, 0, 765,
	0, 0, 154, 270, 285, 163, 261, 298, 168, 268,
	159, 234, 257, 0, 0, 156, 283, 267, 216, 199,
	200, 155, 0, 252, 178, 191, 175, 232, 762, 726,
	730, 174, 728, 773, 293, 158, 0, 292, 231, 279,
	284, 217, 211, 157, 281, 215, 210, 203, 182, 800,
	195, 243, 209, 244, 196, 221, 220, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 0, 295, 0,
	0, 788, 0, 0, 0, 269, 0, 0, 204, 0,
	0, 0, 731, 0, 255, 237, 798, 0, 0, 253,
	207, 280, 245, 286, 271, 294, 249, 246, 150, 272,
	177, 218, 160, 161, 173, 179, 181, 183, 184, 227,
	228, 240, 260, 273, 274, 275, 176, 169, 254, 170,
	193, 171, 151, 262, 172, 152, 241, 278, 0, 189,
	250, 214, 153, 213, 242, 277, 276, 302, 308, 309,
	313, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 307, 187, 148,
	290, 786, 233, 0, 797, 782, 783, 784, 787, 790,
	791, 725, 729, 792, 794, 796, 799, 258, 0, 0,
	0, 0, 0, 198, 239, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	288, 300, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 727, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 732, 223, 224, 225, 226,
	724, 0, 167, 318, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 186, 192, 0,
	194, 166, 238, 188, 297, 201, 0, 230, 197, 263,
	202, 208, 251, 296, 236, 256, 164, 287, 264, 212,
	0, 0, 806, 785, 805, 807, 808, 804, 809, 810,
	793, 747, 0, 802, 801, 803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 206, 0, 247, 185, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	127, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 778, 781, 0, 0, 303, 304, 305, 289, 103,
	0, 29, 93, 75, 0, 0, 0, 0, 0, 0,
	0, 235, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 205, 0, 0, 0, 265, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 270, 285, 163, 261, 298, 168, 268, 159,
	234, 257, 0, 0, 156, 283, 267, 216, 199, 200,
	155, 0, 252, 178, 191, 175, 232, 0, 282, 310,
	174, 301, 0, 293, 158, 0, 292, 231, 279, 284,
	217, 211, 157, 281, 215, 210, 203, 182, 0, 195,
	243, 209, 244, 196, 221, 220, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 295, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 204, 0, 0,
	0, 311, 0, 255, 237, 0, 0, 0, 253, 207,
	280, 245, 286, 271, 294, 249, 246, 150, 272, 177,
	218, 160, 161, 173, 179, 181, 183, 184, 227, 228,
	240, 260, 273, 274, 275, 176, 169, 254, 170, 193,
	171, 151, 262, 172, 152, 241, 278, 0, 189, 250,
	214, 153, 213, 242, 277, 276, 302, 308, 309, 313,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 1436, 0, 0, 0, 0, 307, 187, 148, 290,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 306, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 198, 239, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 288,
	300, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 315, 223, 224, 225, 226, 326,
	328, 167, 318, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 186, 192, 0, 194,
	166, 238, 188, 297, 201, 0, 230, 197, 263, 202,
	208, 251, 296, 236, 256, 164, 287, 264, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1432, 0, 0, 1429, 0, 0, 0, 1431, 1428, 1430,
	1434, 1435, 0, 0, 0, 1433, 0, 0, 149, 0,
	206, 76, 247, 185, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	235, 0, 0, 0, 303, 304, 305, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	205, 0, 0, 0, 265, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 1724, 1727, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1439, 1440, 1441, 1442,
	1443, 1444, 1437, 1438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 270, 285, 163, 261, 298, 168, 268, 159, 234,
	257, 0, 0, 156, 283, 267, 216, 199, 200, 155,
	0, 252, 178, 191, 175, 232, 0, 282, 310, 174,
	301, 0, 293, 158, 0, 292, 231, 279, 284, 217,
	211, 157, 281, 215, 210, 203, 182, 0, 195, 243,
	209, 244, 196, 221, 220, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1728, 295, 0, 0, 0,
	1721, 0, 1720, 269, 1722, 1725, 204, 0, 0, 0,
	311, 0, 255, 237, 0, 0, 0, 253, 207, 280,
	245, 286, 271, 294, 249, 246, 150, 272, 177, 218,
	160, 161, 173, 179, 181, 183, 184, 227, 228, 240,
	260, 273, 274, 275, 176, 169, 254, 170, 193, 171,
	151, 262, 172, 152, 241, 278, 1726, 189, 250, 214,
	153, 213, 242, 277, 276, 302, 308, 309, 313, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 307, 187, 148, 290, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	306, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 198, 239, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 288, 300,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 315, 223, 224, 225, 226, 190, 0,
	167, 318, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 186, 192, 0, 194, 166,
	238, 188, 297, 201, 0, 230, 197, 263, 202, 208,
	251, 296, 236, 256, 164, 287, 264, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 206,
	0, 247, 185, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 235,
	0, 0, 0, 303, 304, 305, 289, 0, 0, 0,
	0, 989, 0, 0, 0, 0, 180, 0, 0, 205,
	0, 0, 0, 265, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 990, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 985, 986, 987, 984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	270, 285, 163, 261, 298, 168, 268, 159, 234, 257,
	0, 0, 156, 283, 267, 216, 199, 200, 155, 0,
	252, 178, 191, 175, 232, 0, 282, 310, 174, 301,
	0, 293, 158, 0, 292, 231, 279, 284, 217, 211,
	157, 281, 215, 210, 203, 182, 0, 195, 243, 209,
	244, 196, 221, 220, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 204, 0, 0, 0, 311,
	0, 255, 237, 0, 0, 0, 253, 207, 280, 245,
	286, 271, 294, 249, 246, 150, 272, 177, 218, 160,
	161, 173, 179, 181, 183, 184, 227, 228, 240, 260,
	273, 274, 275, 176, 169, 254, 170, 193, 171, 151,
	262, 172, 152, 241, 278, 0, 189, 250, 214, 153,
	213, 242, 277, 276, 302, 308, 309, 313, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 307, 187, 148, 290, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 306,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	198, 239, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 288, 300, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 315, 223, 224, 225, 226, 190, 0, 167,
	318, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 186, 192, 0, 194, 166, 238,
	188, 297, 201, 0, 230, 197, 263, 202, 208, 251,
	296, 236, 256, 164, 287, 264, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 206, 0,
	247, 185, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 235, 0,
	0, 0, 303, 304, 305, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 455, 0, 205, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 463, 464, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 0, 282, 310, 174, 301, 442,
	293, 158, 441, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 0, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 311, 0,
	255, 237, 0, 0, 0, 253, 207, 280, 245, 286,
	271, 294, 454, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 306, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 457, 223, 224, 225, 226, 190, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 465, 460, 461, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 103, 0, 0,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 205,
	0, 0, 0, 265, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 1077, 0, 109, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	270, 285, 163, 261, 298, 168, 268, 159, 234, 257,
	0, 0, 156, 283, 267, 216, 199, 200, 155, 0,
	252, 178, 191, 175, 232, 0, 282, 310, 174, 301,
	0, 293, 158, 0, 292, 231, 279, 284, 217, 211,
	157, 281, 215, 210, 203, 182, 0, 195, 243, 209,
	244, 196, 221, 220, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 204, 0, 0, 0, 311,
	0, 255, 237, 0, 0, 0, 253, 207, 280, 245,
	286, 271, 294, 249, 246, 150, 272, 177, 218, 160,
	161, 173, 179, 181, 183, 184, 227, 228, 240, 260,
	273, 274, 275, 176, 169, 254, 170, 193, 171, 151,
	262, 172, 152, 241, 278, 0, 189, 250, 214, 153,
	213, 242, 277, 276, 302, 308, 309, 313, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 307, 187, 148, 290, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 306,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	198, 239, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 288, 300, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 315, 223, 224, 225, 226, 190, 0, 167,
	318, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 186, 192, 0, 194, 166, 238,
	188, 297, 201, 0, 230, 197, 263, 202, 208, 251,
	296, 236, 256, 164, 287, 264, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 206, 76,
	247, 185, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 235, 0,
	0, 0, 303, 304, 305, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 205, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 463, 464, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 0, 282, 310, 174, 301, 442,
	293, 158, 441, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 0, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 311, 0,
	255, 237, 0, 0, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 306, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 315, 223, 224, 225, 226, 190, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 465, 460, 461, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 235, 0, 0,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 663, 0, 205, 0, 0,
	0, 265, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 661, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 0, 0, 0, 0, 154, 270, 285,
	163, 261, 298, 168, 268, 159, 234, 257, 0, 0,
	156, 283, 267, 216, 199, 200, 155, 0, 252, 178,
	191, 175, 232, 0, 282, 310, 174, 301, 0, 293,
	158, 0, 292, 231, 279, 284, 217, 211, 157, 281,
	215, 210, 203, 182, 0, 195, 243, 209, 244, 196,
	221, 220, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 204, 0, 0, 0, 311, 0, 255,
	237, 0, 0, 0, 253, 207, 280, 245, 286, 271,
	294, 249, 246, 150, 272, 177, 218, 160, 161, 173,
	179, 181, 183, 184, 227, 228, 240, 260, 273, 274,
	275, 176, 169, 254, 170, 193, 171, 151, 262, 172,
	152, 241, 278, 0, 189, 250, 214, 153, 213, 242,
	277, 276, 302, 308, 309, 313, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 307, 187, 148, 290, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 306, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 198, 239,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 288, 300, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	315, 223, 224, 225, 226, 190, 0, 167, 318, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 186, 192, 0, 194, 166, 238, 188, 297,
	201, 0, 230, 197, 263, 202, 208, 251, 296, 236,
	256, 164, 287, 264, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 206, 0, 247, 185,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 235, 0, 0, 0,
	303, 304, 305, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 657, 0, 205, 0, 0, 0,
	265, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 661, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 659, 0, 0, 0, 0, 154, 270, 285, 163,
	261, 298, 168, 268, 159, 234, 257, 0, 0, 156,
	283, 267, 216, 199, 200, 155, 0, 252, 178, 191,
	175, 232, 0, 282, 310, 174, 301, 0, 293, 158,
	0, 292, 231, 279, 284, 217, 211, 157, 281, 215,
	210, 203, 182, 0, 195, 243, 209, 244, 196, 221,
	220, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 204, 0, 0, 0, 311, 0, 255, 237,
	0, 0, 0, 253, 207, 280, 245, 286, 271, 294,
	249, 246, 150, 272, 177, 218, 160, 161, 173, 179,
	181, 183, 184, 227, 228, 240, 260, 273, 274, 275,
	176, 169, 254, 170, 193, 171, 151, 262, 172, 152,
	241, 278, 0, 189, 250, 214, 153, 213, 242, 277,
	276, 302, 308, 309, 313, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 307, 187, 148, 290, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 306, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 198, 239, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 288, 300, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 315,
	223, 224, 225, 226, 190, 0, 167, 318, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 186, 192, 0, 194, 166, 238, 188, 297, 201,
	0, 230, 197, 263, 202, 208, 251, 296, 236, 256,
	164, 287, 264, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 206, 0, 247, 185, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 235, 0, 0, 0, 303,
	304, 305, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 205, 0, 0, 0, 265,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2339, 0,
	109, 780, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 270, 285, 163, 261,
	298, 168, 268, 159, 234, 257, 0, 0, 156, 283,
	267, 216, 199, 200, 155, 0, 252, 178, 191, 175,
	232, 0, 282, 310, 174, 301, 0, 293, 158, 0,
	292, 231, 279, 284, 217, 211, 157, 281, 215, 210,
	203, 182, 0, 195, 243, 209, 244, 196, 221, 220,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 204, 0, 0, 0, 311, 0, 255, 237, 0,
	0, 0, 253, 207, 280, 245, 286, 271, 294, 249,
	246, 150, 272, 177, 218, 160, 161, 173, 179, 181,
	183, 184, 227, 228, 240, 260, 273, 274, 275, 176,
	169, 254, 170, 193, 171, 151, 262, 172, 152, 241,
	278, 0, 189, 250, 214, 153, 213, 242, 277, 276,
	302, 308, 309, 313, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 0,
	307, 187, 148, 290, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 306, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 198, 239, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 288, 300, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 315, 223,
	224, 225, 226, 190, 0, 167, 318, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	186, 192, 0, 194, 166, 238, 188, 297, 201, 0,
	230, 197, 263, 202, 208, 251, 296, 236, 256, 164,
	287, 264, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 206, 0, 247, 185, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 235, 0, 0, 0, 303, 304,
	305, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 205, 0, 0, 0, 265, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 661, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 659,
	0, 0, 0, 0, 154, 270, 285, 163, 261, 298,
	168, 268, 159, 234, 257, 0, 0, 156, 283, 267,
	216, 199, 200, 155, 0, 252, 178, 191, 175, 232,
	0, 282, 310, 174, 301, 0, 293, 158, 0, 292,
	231, 279, 284, 217, 211, 157, 281, 215, 210, 203,
	182, 0, 195, 243, 209, 244, 196, 221, 220, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	204, 0, 0, 0, 311, 0, 255, 237, 0, 0,
	0, 253, 207, 280, 245, 286, 271, 294, 249, 246,
	150, 272, 177, 218, 160, 161, 173, 179, 181, 183,
	184, 227, 228, 240, 260, 273, 274, 275, 176, 169,
	254, 170, 193, 171, 151, 262, 172, 152, 241, 278,
	0, 189, 250, 214, 153, 213, 242, 277, 276, 302,
	308, 309, 313, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 307,
	187, 148, 290, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 306, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 198, 239, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 288, 300, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 315, 223, 224,
	225, 226, 190, 0, 167, 318, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 186,
	192, 0, 194, 166, 238, 188, 297, 201, 0, 230,
	197, 263, 202, 208, 251, 296, 236, 256, 164, 287,
	264, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 206, 0, 247, 185, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 235, 0, 0, 0, 303, 304, 305,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 205, 0, 0, 0, 265, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 661, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1928, 0,
	0, 0, 0, 154, 270, 285, 163, 261, 298, 168,
	268, 159, 234, 257, 0, 0, 156, 283, 267, 216,
	199, 200, 155, 0, 252, 178, 191, 175, 232, 0,
	282, 310, 174, 301, 0, 293, 158, 0, 292, 231,
	279, 284, 217, 211, 157, 281, 215, 210, 203, 182,
	0, 195, 243, 209, 244, 196, 221, 220, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 204,
	0, 0, 0, 311, 0, 255, 237, 0, 0, 0,
	253, 207, 280, 245, 286, 271, 294, 249, 246, 150,
	272, 177, 218, 160, 161, 173, 179, 181, 183, 184,
	227, 228, 240, 260, 273, 274, 275, 176, 169, 254,
	170, 193, 171, 151, 262, 172, 152, 241, 278, 0,
	189, 250, 214, 153, 213, 242, 277, 276, 302, 308,
	309, 313, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 0, 307, 187,
	148, 290, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 306, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 198, 239, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 288, 300, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 315, 223, 224, 225,
	226, 190, 0, 167, 318, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 186, 192,
	0, 194, 166, 238, 188, 297, 201, 0, 230, 197,
	263, 202, 208, 251, 296, 236, 256, 164, 287, 264,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 206, 0, 247, 185, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 235, 0, 0, 0, 303, 304, 305, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 205, 0, 0, 0, 265, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 940, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 270, 285, 163, 261, 298, 168, 268,
	159, 234, 257, 0, 0, 156, 283, 267, 216, 199,
	200, 155, 0, 252, 178, 191, 175, 232, 0, 282,
	310, 174, 301, 0, 293, 158, 0, 292, 231, 279,
	284, 217, 211, 157, 281, 215, 210, 203, 182, 0,
	195, 243, 209, 244, 196, 221, 220, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 204, 0,
	0, 0, 311, 0, 255, 237, 0, 0, 0, 253,
	207, 280, 245, 286, 271, 294, 249, 246, 150, 272,
	177, 218, 160, 161, 173, 179, 181, 183, 184, 227,
	228, 240, 260, 273, 274, 275, 176, 169, 254, 170,
	193, 171, 151, 262, 172, 152, 241, 278, 0, 189,
	250, 214, 153, 213, 242, 277, 276, 302, 308, 309,
	313, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 307, 187, 148,
	290, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 306, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 198, 239, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	288, 300, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 315, 223, 224, 225, 226,
	190, 0, 167, 318, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 186, 192, 0,
	194, 166, 238, 188, 297, 201, 0, 230, 197, 263,
	202, 208, 251, 296, 236, 256, 164, 287, 264, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 206, 0, 247, 185, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 235, 941, 0, 0, 303, 304, 305, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 1374,
	0, 205, 0, 0, 0, 265, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 661,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 270, 285, 163, 261, 298, 168, 268, 159,
	234, 257, 0, 0, 156, 283, 267, 216, 199, 200,
	155, 0, 252, 178, 191, 175, 232, 0, 282, 310,
	174, 301, 0, 293, 158, 0, 292, 231, 279, 284,
	217, 211, 157, 281, 215, 210, 203, 182, 0, 195,
	243, 209, 244, 196, 221, 220, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 204, 0, 0,
	0, 311, 0, 255, 237, 0, 0, 0, 253, 207,
	280, 245, 286, 271, 294, 249, 246, 150, 272, 177,
	218, 160, 161, 173, 179, 181, 183, 184, 227, 228,
	240, 260, 273, 274, 275, 176, 169, 254, 170, 193,
	171, 151, 262, 172, 152, 241, 278, 0, 189, 250,
	214, 153, 213, 242, 277, 276, 302, 308, 309, 313,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 0, 307, 187, 148, 290,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 306, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 198, 239, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 288,
	300, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 315, 223, 224, 225, 226, 190,
	0, 167, 318, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 186, 192, 0, 194,
	166, 238, 188, 297, 201, 0, 230, 197, 263, 202,
	208, 251, 296, 236, 256, 164, 287, 264, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	206, 0, 247, 185, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	235, 0, 0, 0, 303, 304, 305, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	205, 0, 0, 0, 265, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 780, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 270, 285, 163, 261, 298, 168, 268, 159, 234,
	257, 0, 0, 156, 283, 267, 216, 199, 200, 155,
	0, 252, 178, 191, 175, 232, 0, 282, 310, 174,
	301, 0, 293, 158, 0, 292, 231, 279, 284, 217,
	211, 157, 281, 215, 210, 203, 182, 0, 195, 243,
	209, 244, 196, 221, 220, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 204, 0, 0, 0,
	311, 0, 255, 237, 0, 0, 0, 253, 207, 280,
	245, 286, 271, 294, 249, 246, 150, 272, 177, 218,
	160, 161, 173, 179, 181, 183, 184, 227, 228, 240,
	260, 273, 274, 275, 176, 169, 254, 170, 193, 171,
	151, 262, 172, 152, 241, 278, 0, 189, 250, 214,
	153, 213, 242, 277, 276, 302, 308, 309, 313, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 307, 187, 148, 290, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	306, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 198, 239, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 288, 300,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 315, 223, 224, 225, 226, 190, 0,
	167, 318, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 186, 192, 0, 194, 166,
	238, 188, 297, 201, 0, 230, 197, 263, 202, 208,
	251, 296, 236, 256, 164, 287, 264, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 206,
	0, 247, 185, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 235,
	0, 0, 0, 303, 304, 305, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 205,
	0, 0, 0, 265, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	270, 285, 163, 261, 298, 168, 268, 159, 234, 257,
	0, 0, 156, 283, 267, 216, 199, 200, 155, 0,
	252, 178, 191, 175, 232, 0, 282, 310, 174, 301,
	0, 293, 158, 0, 292, 231, 279, 284, 217, 211,
	157, 281, 215, 210, 203, 182, 0, 195, 243, 209,
	244, 196, 221, 220, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 204, 0, 0, 0, 311,
	0, 255, 237, 0, 0, 0, 253, 207, 280, 245,
	286, 271, 294, 249, 246, 150, 272, 177, 218, 160,
	161, 173, 179, 181, 183, 184, 227, 228, 240, 260,
	273, 274, 275, 176, 169, 254, 170, 193, 171, 151,
	262, 172, 152, 241, 278, 0, 189, 250, 214, 153,
	213, 242, 277, 276, 302, 308, 309, 313, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 307, 187, 148, 290, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 306,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	198, 239, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 288, 300, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 315, 223, 224, 225, 226, 190, 0, 167,
	318, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 186, 192, 0, 194, 166, 238,
	188, 297, 201, 0, 230, 197, 263, 202, 208, 251,
	296, 236, 256, 164, 287, 264, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 206, 0,
	247, 185, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 235, 0,
	0, 0, 303, 304, 305, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 205, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 0, 282, 310, 174, 301, 0,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 0, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 311, 0,
	255, 237, 0, 0, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 306, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 315, 223, 224, 225, 226, 190, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 235, 0, 0,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 205, 0, 0,
	0, 265, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 270, 285,
	163, 261, 298, 168, 268, 159, 234, 257, 0, 0,
	156, 283, 267, 216, 199, 200, 155, 0, 252, 178,
	191, 175, 232, 0, 282, 310, 174, 301, 0, 293,
	158, 0, 292, 231, 279, 284, 217, 211, 157, 281,
	215, 210, 203, 182, 0, 195, 243, 209, 244, 196,
	221, 220, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 204, 0, 0, 0, 311, 0, 255,
	237, 0, 0, 0, 253, 207, 280, 245, 286, 271,
	294, 249, 246, 150, 272, 177, 218, 160, 161, 173,
	179, 181, 183, 184, 227, 228, 240, 260, 273, 274,
	275, 176, 169, 254, 170, 193, 171, 151, 262, 172,
	152, 241, 278, 0, 189, 250, 214, 153, 213, 242,
	277, 276, 302, 308, 309, 313, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 307, 187, 148, 290, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 306, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 198, 239,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 288, 300, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	315, 223, 224, 225, 226, 190, 0, 167, 318, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 186, 192, 0, 194, 166, 238, 188, 297,
	201, 0, 230, 197, 263, 202, 208, 251, 296, 236,
	256, 164, 287, 264, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 206, 0, 247, 185,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 235, 0, 0, 0,
	303, 304, 305, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 205, 0, 0, 0,
	265, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 661, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 270, 285, 163,
	261, 298, 168, 268, 159, 234, 257, 0, 0, 156,
	283, 267, 216, 199, 200, 155, 0, 252, 178, 191,
	175, 232, 0, 282, 310, 174, 301, 0, 293, 158,
	0, 292, 231, 279, 284, 217, 211, 157, 281, 215,
	210, 203, 182, 0, 195, 243, 209, 244, 196, 221,
	220, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 204, 0, 0, 0, 311, 0, 255, 237,
	0, 0, 0, 253, 207, 280, 245, 286, 271, 294,
	249, 246, 150, 272, 177, 218, 160, 161, 173, 179,
	181, 183, 184, 227, 228, 240, 260, 273, 274, 275,
	176, 169, 254, 170, 193, 171, 151, 262, 172, 152,
	241, 278, 0, 189, 250, 214, 153, 213, 242, 277,
	276, 302, 308, 309, 313, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 307, 187, 148, 290, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 306, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 198, 239, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 288, 300, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 315,
	223, 224, 225, 226, 190, 0, 167, 318, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 186, 192, 0, 194, 166, 238, 188, 297, 201,
	0, 230, 197, 263, 202, 208, 251, 296, 236, 256,
	164, 287, 264, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 206, 0, 247, 185, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 235, 0, 0, 0, 303,
	304, 305, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 205, 0, 0, 0, 265,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 1606, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 270, 285, 163, 261,
	298, 168, 268, 159, 234, 257, 0, 0, 156, 283,
	267, 216, 199, 200, 155, 0, 252, 178, 191, 175,
	232, 0, 282, 310, 174, 301, 0, 293, 158, 0,
	292, 231, 279, 284, 217, 211, 157, 281, 215, 210,
	203, 182, 0, 195, 243, 209, 244, 196, 221, 220,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 204, 0, 0, 0, 311, 0, 255, 237, 0,
	0, 0, 253, 207, 280, 245, 286, 271, 294, 249,
	246, 150, 272, 177, 218, 160, 161, 173, 179, 181,
	183, 184, 227, 228, 240, 260, 273, 274, 275, 176,
	169, 254, 170, 193, 171, 151, 262, 172, 152, 241,
	278, 0, 189, 250, 214, 153, 213, 242, 277, 276,
	302, 308, 309, 313, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 0,
	307, 187, 148, 290, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 306, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 198, 239, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 288, 300, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 315, 223,
	224, 225, 226, 190, 0, 167, 318, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	186, 192, 0, 194, 166, 238, 188, 297, 201, 0,
	230, 197, 263, 202, 208, 251, 296, 236, 256, 164,
	287, 264, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 206, 0, 247, 185, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 235, 0, 0, 0, 303, 304,
	305, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 205, 0, 0, 0, 265, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 270, 285, 163, 261, 298,
	168, 268, 159, 234, 257, 0, 0, 156, 283, 267,
	216, 199, 200, 155, 0, 252, 178, 191, 175, 232,
	0, 282, 310, 174, 301, 0, 293, 158, 0, 292,
	231, 279, 284, 217, 211, 157, 281, 215, 210, 203,
	182, 0, 195, 243, 209, 244, 196, 221, 220, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	204, 0, 0, 0, 311, 0, 255, 237, 0, 0,
	0, 253, 207, 280, 245, 286, 271, 294, 249, 246,
	150, 272, 177, 218, 160, 161, 173, 179, 181, 183,
	184, 227, 228, 240, 260, 273, 274, 275, 176, 169,
	254, 170, 193, 171, 151, 262, 172, 152, 241, 278,
	0, 189, 250, 214, 153, 213, 242, 277, 276, 302,
	308, 309, 313, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 307,
	187, 148, 290, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 306, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 198, 239, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 288, 300, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 315, 223, 224,
	225, 226, 190, 0, 167, 318, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 186,
	192, 0, 194, 166, 238, 188, 297, 201, 0, 230,
	197, 263, 202, 208, 251, 296, 236, 256, 164, 287,
	264, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 206, 0, 247, 185, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 235, 0, 0, 0, 303, 304, 305,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 205, 0, 0, 0, 265, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 1387, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 270, 285, 163, 261, 298, 168,
	268, 159, 234, 257, 0, 0, 156, 283, 267, 216,
	199, 200, 155, 0, 252, 178, 191, 175, 232, 0,
	282, 310, 174, 301, 0, 293, 158, 0, 292, 231,
	279, 284, 217, 211, 157, 281, 215, 210, 203, 182,
	0, 195, 243, 209, 244, 196, 221, 220, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 204,
	0, 0, 0, 311, 0, 255, 237, 0, 0, 0,
	253, 207, 280, 245, 286, 271, 294, 249, 246, 150,
	272, 177, 218, 160, 161, 173, 179, 181, 183, 184,
	227, 228, 240, 260, 273, 274, 275, 176, 169, 254,
	170, 193, 171, 151, 262, 172, 152, 241, 278, 0,
	189, 250, 214, 153, 213, 242, 277, 276, 302, 308,
	309, 313, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 0, 307, 187,
	148, 290, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 306, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 198, 239, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 288, 300, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 315, 223, 224, 225,
	226, 190, 0, 167, 318, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 186, 192,
	0, 194, 166, 238, 188, 297, 201, 0, 230, 197,
	263, 202, 208, 251, 296, 236, 256, 164, 287, 264,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 206, 0, 247, 185, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 0, 1312, 0, 0, 303, 304, 305, 289,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	205, 0, 0, 0, 265, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 270, 285, 163, 261, 298, 168, 268, 159, 234,
	257, 0, 0, 156, 283, 267, 216, 199, 200, 155,
	0, 252, 178, 191, 175, 232, 0, 282, 310, 174,
	301, 0, 293, 158, 0, 292, 231, 279, 284, 217,
	211, 157, 281, 215, 210, 203, 182, 0, 195, 243,
	209, 244, 196, 221, 220, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 204, 0, 0, 0,
	311, 0, 255, 237, 0, 0, 0, 253, 207, 280,
	245, 286, 271, 294, 249, 246, 150, 272, 177, 218,
	160, 161, 173, 179, 181, 183, 184, 227, 228, 240,
	260, 273, 274, 275, 176, 169, 254, 170, 193, 171,
	151, 262, 172, 152, 241, 278, 0, 189, 250, 214,
	153, 213, 242, 277, 276, 302, 308, 309, 313, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 307, 187, 148, 290, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	306, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 198, 239, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 288, 300,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 315, 223, 224, 225, 226, 190, 0,
	167, 318, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 186, 192, 0, 194, 166,
	238, 188, 297, 201, 0, 230, 197, 263, 202, 208,
	251, 296, 236, 256, 164, 287, 264, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 206,
	0, 247, 185, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 235,
	0, 0, 0, 303, 304, 305, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 205,
	0, 0, 0, 265, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	270, 285, 163, 261, 298, 168, 268, 159, 234, 257,
	0, 0, 156, 283, 267, 216, 199, 200, 155, 0,
	252, 178, 191, 175, 232, 0, 282, 310, 174, 301,
	0, 293, 158, 0, 292, 231, 279, 284, 217, 211,
	157, 281, 215, 210, 203, 182, 0, 195, 243, 209,
	244, 196, 221, 220, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 1295, 0,
	0, 0, 269, 0, 0, 204, 0, 0, 0, 311,
	0, 255, 237, 0, 0, 0, 253, 207, 280, 245,
	286, 271, 294, 249, 246, 150, 272, 177, 218, 160,
	161, 173, 179, 181, 183, 184, 227, 228, 240, 260,
	273, 274, 275, 176, 169, 254, 170, 193, 171, 151,
	262, 172, 152, 241, 278, 0, 189, 250, 214, 153,
	213, 242, 277, 276, 302, 308, 309, 313, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 307, 187, 148, 290, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 306,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	198, 239, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 288, 300, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 315, 223, 224, 225, 226, 190, 0, 167,
	318, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 186, 192, 0, 194, 166, 238,
	188, 297, 201, 0, 230, 197, 263, 202, 208, 251,
	296, 236, 256, 164, 287, 264, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 206, 0,
	247, 185, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 235, 0,
	0, 0, 303, 304, 305, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 205, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 0, 282, 310, 174, 301, 0,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 0, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 311, 0,
	255, 237, 0, 0, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 306, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 315, 223, 224, 225, 226, 190, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 235, 0, 0,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 205, 0, 0,
	0, 265, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 270, 285,
	163, 261, 298, 168, 268, 159, 234, 257, 0, 0,
	156, 283, 267, 216, 199, 200, 155, 0, 252, 178,
	191, 175, 232, 0, 282, 310, 174, 301, 0, 293,
	158, 0, 292, 231, 279, 284, 217, 211, 157, 281,
	215, 210, 203, 182, 0, 195, 243, 209, 244, 196,
	221, 220, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 204, 0, 0, 0, 311, 0, 255,
	237, 0, 0, 0, 253, 207, 280, 245, 286, 271,
	294, 342, 246, 150, 272, 177, 218, 160, 161, 173,
	179, 181, 183, 184, 227, 228, 240, 260, 273, 274,
	275, 176, 169, 254, 170, 193, 171, 151, 262, 172,
	152, 241, 278, 0, 189, 250, 214, 153, 213, 242,
	277, 276, 302, 308, 309, 313, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 307, 187, 148, 290, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 306, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 198, 239,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 288, 300, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	291, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	315, 223, 224, 225, 226, 190, 0, 167, 318, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 186, 192, 0, 194, 166, 238, 188, 297,
	201, 0, 230, 197, 263, 202, 208, 251, 296, 236,
	256, 164, 287, 264, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 206, 0, 247, 185,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 235, 0, 0, 0,
	303, 304, 305, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 180, 0, 0, 205, 0, 0, 0,
	265, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 270, 285, 163,
	261, 298, 168, 268, 159, 234, 257, 0, 0, 156,
	283, 267, 216, 199, 200, 155, 0, 252, 178, 191,
	175, 232, 0, 282, 310, 174, 301, 0, 293, 158,
	0, 292, 231, 279, 284, 217, 211, 157, 281, 215,
	210, 203, 182, 0, 195, 243, 209, 244, 196, 221,
	220, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 204, 0, 0, 0, 311, 0, 255, 237,
	0, 0, 0, 253, 207, 280, 245, 286, 271, 294,
	249, 246, 150, 272, 177, 218, 160, 161, 173, 179,
	181, 183, 184, 227, 228, 240, 260, 273, 274, 275,
	176, 169, 254, 170, 193, 171, 151, 262, 172, 152,
	241, 278, 0, 189, 250, 214, 153, 213, 242, 277,
	276, 302, 308, 309, 313, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 307, 187, 148, 290, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 306, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 198, 239, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 288, 300, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 315,
	223, 224, 225, 226, 190, 0, 167, 318, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 186, 192, 0, 194, 166, 238, 188, 297, 201,
	0, 230, 197, 263, 202, 208, 251, 296, 236, 256,
	164, 287, 264, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 206, 0, 247, 185, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 235, 0, 0, 0, 303,
	304, 305, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 205, 0, 0, 0, 265,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 270, 285, 163, 261,
	298, 168, 268, 159, 234, 257, 0, 0, 156, 283,
	267, 216, 199, 200, 155, 0, 252, 178, 191, 175,
	232, 0, 282, 310, 174, 301, 0, 293, 158, 0,
	292, 231, 279, 284, 217, 211, 157, 281, 215, 210,
	203, 182, 0, 195, 243, 209, 244, 196, 221, 220,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 204, 0, 0, 0, 311, 0, 255, 237, 0,
	0, 0, 253, 207, 280, 245, 286, 271, 294, 249,
	246, 150, 272, 177, 218, 160, 161, 173, 179, 181,
	183, 184, 227, 228, 240, 260, 273, 274, 275, 176,
	169, 254, 170, 193, 171, 151, 262, 172, 152, 241,
	278, 0, 189, 250, 214, 153, 213, 242, 277, 276,
	302, 308, 309, 313, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 0,
	307, 187, 148, 290, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 306, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 198, 239, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 288, 300, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 315, 223,
	224, 225, 226, 190, 0, 167, 318, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	186, 192, 0, 194, 166, 238, 188, 297, 201, 0,
	230, 197, 263, 202, 208, 251, 296, 236, 256, 164,
	287, 264, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 206, 0, 247, 185, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 235, 0, 0, 0, 303, 304,
	305, 289, 0, 0, 0, 0, 1354, 0, 0, 0,
	0, 180, 0, 0, 205, 0, 0, 0, 265, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 895,
	896, 897, 1356, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 270, 285, 163, 261, 298,
	168, 268, 159, 234, 257, 0, 0, 156, 283, 267,
	216, 199, 200, 155, 0, 252, 178, 191, 175, 232,
	0, 282, 310, 174, 301, 0, 293, 158, 0, 292,
	231, 279, 284, 217, 211, 157, 281, 215, 210, 203,
	182, 0, 195, 243, 209, 244, 196, 221, 220, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	204, 0, 0, 0, 311, 0, 255, 237, 0, 0,
	0, 253, 207, 280, 245, 286, 271, 294, 249, 246,
	150, 272, 177, 218, 160, 161, 173, 179, 181, 183,
	184, 227, 228, 240, 260, 273, 274, 275, 176, 169,
	254, 170, 193, 171, 151, 262, 172, 152, 241, 278,
	0, 189, 250, 214, 153, 213, 242, 277, 276, 302,
	308, 309, 313, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 307,
	187, 148, 290, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 306, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 198, 239, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 288, 300, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 315, 223, 224,
	225, 226, 190, 0, 167, 318, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 186,
	192, 0, 194, 166, 238, 188, 297, 201, 235, 230,
	197, 263, 202, 208, 251, 296, 236, 256, 164, 287,
	264, 212, 0, 0, 0, 180, 0, 0, 205, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 895, 896, 897, 1356, 0, 0, 0,
	162, 149, 0, 206, 0, 247, 185, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	289, 0, 0, 0, 0, 0, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 0, 282, 310, 174, 301, 0,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 0, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 311, 0,
	255, 237, 0, 0, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 306, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 315, 223, 224, 225, 226, 190, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 235, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 0, 180,
	0, 0, 205, 0, 0, 0, 265, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 895, 896, 897,
	0, 0, 0, 0, 162, 149, 0, 206, 0, 247,
	185, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 0,
	0, 0, 154, 270, 285, 163, 261, 298, 168, 268,
	159, 234, 257, 0, 0, 156, 283, 267, 216, 199,
	200, 155, 0, 252, 178, 191, 175, 232, 0, 282,
	310, 174, 301, 0, 293, 158, 0, 292, 231, 279,
	284, 217, 211, 157, 281, 215, 210, 203, 182, 0,
	195, 243, 209, 244, 196, 221, 220, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 204, 0,
	0, 0, 311, 0, 255, 237, 0, 0, 0, 253,
	207, 280, 245, 286, 271, 294, 249, 246, 150, 272,
	177, 218, 160, 161, 173, 179, 181, 183, 184, 227,
	228, 240, 260, 273, 274, 275, 176, 169, 254, 170,
	193, 171, 151, 262, 172, 152, 241, 278, 0, 189,
	250, 214, 153, 213, 242, 277, 276, 302, 308, 309,
	313, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 307, 187, 148,
	290, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 306, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 198, 239, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	288, 300, 317, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 315, 223, 224, 225, 226,
	190, 0, 167, 318, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2036, 0, 312, 186, 192, 0,
	194, 166, 238, 188, 297, 201, 0, 230, 197, 263,
	202, 208, 251, 296, 236, 256, 164, 287, 264, 212,
	0, 0, 0, 1819, 0, 0, 0, 0, 1310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 2458, 0, 0, 0, 0, 0, 0, 149,
	0, 206, 2018, 247, 185, 0, 0, 0, 1827, 1831,
	1833, 1835, 1837, 1838, 1840, 0, 1844, 1841, 1842, 1843,
	0, 0, 1822, 1823, 1824, 1825, 1805, 1806, 1828, 0,
	1808, 2036, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1820, 1826, 0, 303, 304, 305, 289, 0,
	0, 1830, 1832, 1834, 1836, 1839, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 1310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 1831,
	1833, 1835, 1837, 1838, 1840, 1821, 1844, 1841, 1842, 1843,
	0, 0, 1822, 1823, 1824, 1825, 1805, 1806, 1828, 2018,
	1808, 0, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1820, 1826, 103, 0, 29, 93, 75, 0,
	0, 1830, 1832, 1834, 1836, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 2022, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 2026, 67, 0, 0,
	0, 0, 0, 0, 0, 1821, 2119, 0, 0, 0,
	0, 0, 55, 0, 0, 0, 2015, 0, 100, 0,
	2017, 2019, 2021, 0, 2023, 2024, 2025, 2027, 2028, 2029,
	2031, 2032, 2033, 2034, 362, 0, 361, 368, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	0, 367, 1797, 1798, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2022, 0, 0, 0, 94, 95, 0, 96,
	97, 378, 0, 2026, 379, 0, 0, 0, 2035, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2015, 0, 2014, 0, 2017, 2019, 2021,
	0, 2023, 2024, 2025, 2027, 2028, 2029, 2031, 2032, 2033,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 0, 0,
	2020, 0, 0, 74, 92, 101, 0, 53, 0, 0,
	2037, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 91, 86, 85, 0, 0, 0, 362,
	0, 361, 368, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 2035, 367, 0, 0, 0,
	353, 362, 0, 361, 368, 358, 0, 0, 2044, 0,
	375, 0, 2014, 0, 0, 365, 366, 0, 367, 0,
	0, 0, 353, 354, 356, 355, 0, 0, 0, 2054,
	0, 360, 375, 1829, 0, 0, 378, 88, 89, 379,
	2030, 0, 2047, 364, 0, 0, 0, 2020, 2042, 0,
	0, 0, 0, 2056, 2057, 0, 0, 357, 0, 2043,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 63, 0, 0, 0, 90, 0, 64, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 65,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 359, 363, 369, 0, 370,
	371, 0, 0, 372, 373, 374, 0, 0, 376, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 356,
	355, 0, 0, 0, 0, 0, 360, 0, 0, 0,
	2055, 0, 1720, 0, 0, 0, 0, 0, 364, 0,
	354, 356, 355, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 357, 0, 0, 0, 76, 2050, 0, 0,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 2049,
	2051, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 363, 369, 2058, 370, 371, 0, 0, 372, 373,
	374, 0, 0, 376, 377, 2045, 0, 0, 0, 0,
	0, 0, 359, 363, 369, 0, 370, 371, 0, 0,
	372, 373, 374, 0, 0, 376, 377,
}

var yyPact = [...]int{
	22204, -1000, -310, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19964,
	-1000, -1000, 1556, -1000, 8219, 20433, 78, 20433, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 306, -1000, 19495, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 277, 22274, 184, 170, -295, -1000, 1956,
	-1000, -1000, -1000, -1000, 150, 349, 19026, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1668, 34, 349, 417, 423, 652, 652, 9626, 1956,
	227, 93, -1000, 538, 22204, 258, 20433, -1000, 822, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1956, 1956, 20433, -59, 917, -1000, 231, 206,
	195, 815, -1000, -1000, -1000, -1000, 1954, -1000, 20433, 1718,
	20433, -1000, 1250, 218, 22419, 1817, 747, 367, 1732, -1000,
	-1000, 1704, -1000, 25, 52, 88, 122, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 90, -1000, 1876, -1000, -1000, 22,
	-1000, 21, -1000, -1000, -1000, -114, -1000, -1000, -1000, -1000,
	-186, -186, 840, -1000, 1703, 1806, 1897, 1553, 1927, 1863,
	1844, 1839, 1833, 19, 276, 276, 276, 297, 276, 305,
	-1000, -1000, -1000, -1000, -1000, -1000, 372, -1000, -1000, -1000,
	-1000, 533, 20433, -1000, 1562, 1892, 226, 818, 188, 212,
	1897, 1897, -109, -127, 818, 818, -127, 59, -1000, -1000,
	-1000, 941, 224, 941, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1867, 1851, 277, 277, 282, -1000, -198, -1000, -1000,
	412, -1000, 394, -1000, 292, 204, 572, 947, -1000, 920,
	20433, 20433, 20433, 920, 920, 11514, 11045, 798, -1000, 1897,
	1553, -1000, 1475, 1575, 1553, 277, 277, 277, 277, 277,
	277, 277, 20433, 5806, 5806, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 199, 1702, -1000, 20433, 1897, 1806, 1897,
	-1000, 789, 1201, 1362, -1000, -1000, 231, 903, -1000, 642,
	-1000, -1000, -1000, -1000, 20433, 198, -1000, 1344, 1700, -1000,
	288, 690, 768, -1000, 65, 22441, 16204, 1250, 16204, 20433,
	-1000, -1000, -1000, -1000, -1000, -1000, -120, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-66, -1000, -66, 1897, -295, 4838, -1000, -298, 1806, 6287,
	-1000, -1000, 6287, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 295, 276, -1000, 1374, 961, 16204, 1250, 1247, 20433,
	276, 282, -1000, 20433, 533, 1824, 20433, 16204, 941, 1940,
	7730, 941, -1000, -1000, -1000, 818, 818, -1000, -1000, -1000,
	-1000, 941, 941, -1000, -1000, -122, 1940, 1940, -116, 20433,
	20433, 276, 20433, -1000, -1000, -1000, -1000, 20433, -1000, -1000,
	1374, 16204, 13390, -1000, -148, 410, 390, 399, -1000, -1000,
	1971, -1000, -1000, 431, 323, 10576, 244, 16204, 3876, -1000,
	-1000, 920, 920, 920, 3876, 3876, 700, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 20433, 1806, -1000, -1000, -1000, -1000,
	1374, 16204, 1250, 20433, 20433, 20433, 21650, -1000, 591, -1000,
	-1000, 9157, 788, 6287, -1000, 1161, 1699, -1000, -1000, 1697,
	1694, 1689, 1685, 1675, 1669, 1667, -1000, 1491, -1000, -1000,
	1666, 1659, 1658, 1653, -1000, -1000, -1000, -1000, -1000, -1000,
	1652, -1000, -1000, -1000, 1651, 1491, -1000, -1000, 1637, 1636,
	1635, 1633, 1632, -1000, -1000, -1000, 1361, -1000, -1000, -1000,
	1360, 1352, 1631, 1770, -1000, -1000, -1000, -1000, 3395, 7730,
	7730, 7730, 7730, -1000, -1000, 1579, 6287, 1629, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7249, -1000, 1627, 1626, 1625,
	1624, 1623, 1491, 1618, 1617, 1615, 7730, 1614, 1610, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 591, -1000, -296, -1000, 10107, 20433, 20433, -1000, 1806,
	-1000, 1806, 2471, -1000, 1882, -1000, 231, 109, -1000, -1000,
	-1000, -1000, -1000, -1000, 782, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 488, -1000, 20433, -1000, -1000, 65,
	16204, 915, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 86,
	-1000, -1000, 121, -1000, 291, -36, 901, -1000, -1000, 17,
	116, 17, -1000, -1000, 894, -1000, 1196, -1000, 767, 1349,
	-1000, 854, 485, -1000, 1267, 18557, 20433, -7, -1000, 1816,
	704, -1000, -36, 431, 1715, -1000, -1000, -1000, 1776, 20433,
	18088, -1000, 1608, 892, -1000, 1657, 20433, -1000, 6287, -1000,
	20433, 1940, 1940, 818, 21650, 941, 20433, 941, -1000, -1000,
	941, -1000, 766, -1000, 20433, -1000, -1000, -1000, -1000, -7,
	704, 1951, 707, -1000, -1000, -1000, -1000, 1823, 20902, 20902,
	227, 1607, -1000, -1000, 404, 391, 409, 1250, 290, -1000,
	-1000, 431, -1000, -1000, -1000, 1599, 912, -1000, -1000, 7730,
	-1000, 3876, 3876, 3876, -1000, -1000, 13859, -1000, -1000, -1000,
	473, 431, 1731, 461, -1000, 461, -1000, -1000, -1000, 1940,
	5806, -1000, 13390, -1000, 6287, 6287, 6287, 6287, -1000, 17611,
	-1000, 17142, -1000, 320, 6768, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 6287, 1828, 1828, 1828, 6287, 984, 6287, 6287,
	-1000, 1033, 8349, 1828, 1828, 1828, 1828, 1828, -1000, 2906,
	1828, 1828, 1828, 1828, -1000, -1000, -1000, 6287, 7730, 7730,
	7730, 7730, 7730, 7730, 7730, 7730, 7730, 7730, 7730, 7730,
	1578, 1012, 7730, 7730, 7730, 1575, 1862, 458, -1000, -1000,
	-1000, -1000, -1000, 906, 1196, 6287, 803, 6287, 6287, 6287,
	-1000, 1474, 1473, -1000, -1000, 6287, 6287, 7730, -1000, 1828,
	1339, 1940, 436, -1000, 1585, -1000, 888, 1772, -1000, 754,
	455, -1000, 908, 882, -1000, -1000, -1000, -1000, 753, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -61, -1000, -1000, 20433, 1344,
	867, 915, 449, -1000, 284, 733, 720, -1000, 16204, 29,
	16204, -1000, 16204, -1000, -1000, 202, -1000, 20433, 1802, -1000,
	-1000, -1000, 1335, 1795, 4838, -1000, 20433, -139, 6287, 6287,
	6287, -1000, -1000, -1000, 1562, 951, 1584, -106, 893, -1000,
	362, 16204, 203, -1000, 1730, 161, -1000, 1776, -1000, 686,
	-1000, 1583, 20433, 587, -1000, 669, 22204, -1000, 20433, -1000,
	1250, 818, 1196, 1940, -1000, -1000, 1940, -1000, 818, -1000,
	818, 941, 20433, -1000, -106, 362, 20433, 13390, 13390, 13390,
	13390, -1000, 1758, 1753, -1000, 1751, 1747, 1789, 20433, 13390,
	20433, -1000, -1000, -1000, 21276, -1000, -1000, -1000, -1000, -1000,
	1466, 1956, 16673, -1000, -1000, -1000, 386, 431, 16204, 1334,
	244, -1000, -1000, -1000, -1000, -1000, 20433, 20433, 1938, -1000,
	454, 1994, -1000, 955, 955, 956, -1000, -1000, 666, -1000,
	-1000, 328, -1000, -1000, -1000, -1000, 1579, -1000, -1000, -1000,
	1465, 429, 1196, 6287, -1000, -1000, 6287, 6287, 1386, 6287,
	1463, 866, 857, -1000, 1462, 1952, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 6287, 6287, 6287, 6287, 6287,
	1192, 5325, -1000, -1000, -1000, 6287, 6287, 6287, 6287, 1460,
	1096, 1023, -1000, 973, 973, 732, 732, 732, 732, 732,
	1132, 1132, -1000, -1000, -1000, 3395, 1578, 7730, 7730, 7730,
	251, 2817, 2889, -1000, 6287, 944, -1000, 6287, 847, -1000,
	1458, 1414, 1455, 1453, -1000, -1000, 664, 1448, 1177, 6287,
	451, 1938, -296, 4838, 214, 20433, -296, 20433, 20433, 4838,
	-1000, 20433, 2471, 1200, -1000, -1000, -1000, 1945, 16204, 1250,
	805, 891, -1000, 16, -1000, 82, 264, 1330, -1000, 303,
	902, 302, -1000, 661, -99, -71, 1196, 1196, -1000, 1822,
	1810, 8688, 1097, -1000, -1000, 1324, -1000, 257, -1000, -1000,
	-1000, 313, 20, 1195, 246, -1000, 1369, 20433, -1000, -1000,
	-1000, -1000, -1000, 893, 893, 893, 8688, 258, 579, 643,
	13390, 20433, -1000, 15266, 1446, -1000, 431, 1940, -1000, -1000,
	1940, 1940, 818, -1000, 1097, 257, 712, -1000, 900, 1714,
	1728, 1714, -1000, -1000, -1000, -1000, 1745, -1000, 1744, -1000,
	-1000, 712, -1000, 1562, -1000, -1000, 848, 841, -1000, 449,
	1442, -1000, -1000, -1000, -1000, 1935, 1926, 15735, -1000, -1000,
	-1000, -1000, -1000, -1000, 6287, 1847, 1760, 1748, 21963, 838,
	-1000, -1000, -1000, -1000, 6287, 1734, 1695, 1683, 1655, 1648,
	-1000, 6287, 6287, 1337, 1639, 1621, 1534, 1513, -1000, 833,
	-1000, 251, 2817, 2791, -1000, 7730, 7730, 1508, 937, -1000,
	6287, 1064, 623, 12452, -1000, 6287, -1000, -1000, -1000, 12452,
	-1000, 7730, 1472, 1322, 1935, -1000, 1431, 447, -296, -1000,
	-1000, 436, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1250, -1000, 70, -1000, -1000, -1000, -1000, -1000, -1000,
	-49, -1000, 20433, 1321, 20433, 20433, -300, -68, 1921, 1919,
	227, 20433, 1430, 437, -1000, -1000, -1000, 22033, 653, -1000,
	20433, 976, 424, 276, 424, 974, 1574, -1000, -1000, -1000,
	1318, -39, -1000, -1000, 1315, 1314, 1181, -1000, -1000, 1234,
	691, -27, -1000, -1000, -1000, -1000, -1000, -1000, 1573, 12452,
	12921, 1306, 1429, 20902, 13390, 15266, 670, -1000, 629, -1000,
	-1000, -1000, -1000, -1000, 1940, -1000, -1000, 1910, 20433, 4838,
	-1000, -1000, 6287, 1572, -1000, 6287, -1000, -1000, -1000, -1000,
	-1000, -1000, 1305, -1000, 1302, -1000, -1000, 6287, 6287, -1000,
	-1000, 1196, -1000, -1000, -1000, 1421, -1000, 364, 364, 3,
	-1000, -1000, -1000, 1515, -1000, 1564, 1564, 1515, 1515, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1571, 1570,
	-1000, -1000, 1515, 1563, 1563, 1515, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1568, 1568, 1569, 1568, -1000, 1445, -1000, -1000, -1000,
	-1000, -1000, 1427, 1382, 6287, -1000, -1000, -1000, -1000, -1000,
	-1000, 7730, -1000, -1000, -1000, -1000, 1196, 6287, 1420, -1000,
	1515, 1564, -1000, 1515, 1563, 1515, 364, 364, 1419, 1041,
	1418, 2251, -1000, 1415, -1000, -1000, 436, 431, -1000, -1000,
	-116, 53, -116, -302, 1301, -1000, 1918, 1300, 1241, -1000,
	1562, 940, 8688, 22418, -1000, -1000, 20433, 20433, -1000, 20433,
	20433, 276, 6287, -1000, -1000, 201, -1000, -1000, 55, -1000,
	-1000, 1232, 287, -1000, 14797, -1000, -1000, -1000, -1000, -1000,
	-66, 1940, 670, 629, -1000, -1000, 759, -1000, 1897, -1000,
	-1000, 1196, 20433, 1196, 830, 824, 1196, 429, -1000, -1000,
	-1000, -1000, -1000, -4, -1000, -1000, -1000, -1000, 1153, -1000,
	1152, -1000, -1000, -1000, 1298, 1298, -1000, -1000, 1151, -1000,
	-1000, -1000, 1149, -1000, -1000, 1147, -1000, -1000, -1000, -1000,
	1328, -1000, 1196, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6287, -1000, -1000, -1000, -1000, -103, -75,
	-1000, 1297, -1000, -304, 1145, -1000, 1296, -86, -1000, -1000,
	1819, 253, 22125, -1000, 893, 893, 708, 893, 893, 893,
	893, 167, 160, 893, 893, 893, 893, 893, 893, 893,
	893, 893, 893, 893, 893, 893, 893, 1561, -1000, -1000,
	22418, -1000, -1000, 979, 7730, -1000, -1000, 1283, 12921, 456,
	389, 1555, -1000, 120, 1964, 971, 970, -1000, 20433, -1000,
	1543, 1577, 92, 1541, -1000, 1527, 1525, 20433, 1309, 256,
	1278, -1000, -1000, 44, -1000, -1000, 820, -1000, 1515, 6287,
	-1000, -116, 1910, -1000, -1000, 817, -1000, 1019, -1000, 988,
	-1000, -1000, 1413, 1403, 808, -1000, 796, 1401, 793, 783,
	-1000, 1293, 281, -94, -75, -1000, 1913, -87, 1911, 1908,
	899, -1000, 1512, -1000, -1000, 1906, 227, -1000, 1904, 940,
	-1000, 1133, 1124, 893, 893, 1122, 1266, 1265, 1264, 893,
	893, 1105, 1259, 21276, 1104, 1102, 1101, 1183, 1258, 509,
	1121, 1110, 1087, 20433, 1511, 1240, -1000, -1000, 2817, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1080, 1501, -166, -1000, -1000, 1500, 14797, 133, 133, 14797,
	14797, 14797, 1493, 336, -1000, -50, -1000, -1000, -1000, 14797,
	1790, 1256, -1000, 1897, -1000, 1398, 1397, 1390, 1388, -1000,
	-1000, -1000, 1257, -1000, -1000, -1000, 1057, -1000, 1050, -1000,
	1492, 1048, -68, 1903, -1000, 1241, 1901, 1241, 1241, 1254,
	20433, 1241, -1000, 145, -1000, -1000, -1000, 12452, 12452, -1000,
	-1000, -1000, -1000, 1253, 1252, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 196, 20433, 779,
	-1000, 895, 1387, 6287, 1491, -234, 14797, 777, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 774, 771, 763, 14797, -1000,
	-1000, -1000, 127, -1000, 132, -1000, -1000, 1790, -1000, -1000,
	-1000, -1000, -1000, -1000, 1378, 1377, 1832, 11983, -93, -1000,
	1248, -1000, 1241, -1000, -1000, -320, 757, -1000, -1000, 106,
	205, 183, -1000, 271, -1000, -1000, -1000, -1000, -1000, -1000,
	191, 750, -1000, 1240, 1236, -1000, 1116, -1000, 1726, -1000,
	18, 748, -1000, -1000, -1000, -1000, 741, -1000, -1000, 893,
	1231, 74, -1000, -1000, -1000, -1000, -1000, -1000, 20433, -1000,
	737, -1000, -1000, -1000, 618, -1000, -1000, -1000, -1000, -1000,
	-1000, 20433, 100, 1034, 7730, 1490, 7730, 1486, 119, 1485,
	-1000, -1000, -1000, -1000, -1000, 336, -1000, 1725, 1686, 1944,
	-1000, -1000, -1000, -1000, 132, 132, 132, 132, 13, 1028,
	-1000, 1247, 427, -1000, 886, -1000, 14328, 20433, -1000, 1482,
	1899, -1000, 2191, 20433, 1909, 20433, 1480, 860, 7730, -1000,
	-1000, 1953, -1000, 1957, 472, 472, -1000, -1000, -1000, 20433,
	4357, -1000, 611, -1000, 242, 108, -1000, 735, -1000, 725,
	20433, 991, 1539, -1000, -1000, -1000, 1084, 139, -1000, -1000,
	-1000, 1196, 20433, 698, -1000, 1368, 87, -1000, -1000, 696,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 242, 1769, -1000,
	990, -1000, -1000, 22028, 363, -1000, -1000, 22028, 96, -1000,
	207, 1479, -1000, -1000, 650, -1000, 1312, 468, 6287, -1000,
	96, 940, -1000, 6287, 562, -1000, 940, 507, -1000, -1000,
}

var yyPgo = [...]int{
	0, 121, 2335, 192, 133, 129, 191, 2333, 1899, 1873,
	2332, 2331, 2330, 2329, 2328, 2327, 2326, 2325, 2324, 2321,
	2320, 2319, 2318, 2317, 2300, 2299, 2298, 185, 2297, 2294,
	2293, 2292, 2291, 2290, 2289, 2287, 2286, 2285, 2283, 2282,
	2281, 2279, 2277, 2276, 123, 2274, 1868, 2271, 2270, 2268,
	2267, 2266, 160, 2265, 2264, 2263, 2262, 2261, 2260, 2259,
	2258, 2255, 2254, 2253, 2252, 2251, 2250, 2248, 2245, 182,
	174, 61, 2244, 47, 43, 114, 203, 48, 200, 199,
	145, 75, 138, 170, 119, 2243, 2242, 115, 2241, 24,
	137, 2240, 117, 50, 37, 188, 104, 57, 69, 101,
	2239, 2238, 93, 2237, 2236, 100, 2233, 58, 2232, 79,
	29, 96, 26, 2229, 2227, 2226, 82, 2225, 2224, 2223,
	2222, 94, 2220, 67, 66, 2217, 2216, 2215, 2214, 2212,
	28, 2210, 55, 2209, 2208, 2207, 2206, 2204, 2203, 2201,
	11, 16, 18, 2193, 14, 2, 2192, 165, 63, 87,
	112, 2191, 394, 2188, 2187, 2186, 116, 2185, 151, 2184,
	2183, 2182, 2181, 2179, 10, 2178, 53, 2177, 2176, 2175,
	52, 159, 146, 2173, 2169, 102, 34, 65, 98, 2166,
	2164, 78, 161, 23, 54, 0, 175, 40, 2163, 2162,
	2161, 202, 172, 167, 177, 92, 233, 122, 2159, 2158,
	64, 2157, 120, 2156, 68, 42, 2155, 90, 2154, 41,
	88, 2153, 111, 2152, 142, 1, 105, 25, 164, 2151,
	2149, 2148, 131, 2147, 2146, 72, 125, 2145, 2143, 2142,
	27, 2141, 33, 19, 2140, 89, 2139, 181, 2138, 132,
	97, 139, 135, 113, 169, 173, 74, 118, 1036, 110,
	80, 17, 2137, 168, 2136, 207, 171, 154, 2135, 2134,
	180, 347, 157, 2132, 140, 7, 2131, 2130, 8, 2128,
	21, 2127, 2126, 2124, 2123, 6, 2120, 2118, 2117, 4,
	3, 2116, 5, 108, 46, 70, 2115, 73, 71, 2113,
	2112, 2111, 2110, 2109, 276, 2108, 2106, 2082, 2077, 2076,
	2075, 2074, 86, 39, 2073, 2072, 2071, 2070, 76, 109,
	2065, 307, 158, 2063, 45, 2058, 2057, 22, 2054, 32,
	2052, 2043, 2040, 13, 143, 2039, 2038, 15, 2037, 2036,
	9, 12, 2034, 2033, 62, 51, 31, 85, 84, 2020,
	20, 2018, 103, 2017, 2016, 141, 2014, 106, 2013, 127,
	178, 231, 2012, 163, 2011, 2009, 2006, 1999, 1998, 1997,
	1993, 1054, 1991, 1990, 179, 60, 166, 1989, 1988, 155,
	1986, 126, 95, 91, 156, 1985, 152, 1983, 1982, 176,
	147, 1980, 1979,
}

//line mysql_sql.y:7583
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 377, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 61, 60, 333, 333,
	332, 332, 331, 331, 330, 330, 330, 329, 329, 329,
	328, 328, 327, 327, 326, 326, 324, 324, 325, 323,
	322, 322, 322, 320, 320, 318, 318, 319, 319, 313,
	313, 316, 316, 314, 314, 314, 314, 317, 312, 312,
	312, 311, 311, 59, 59, 59, 250, 250, 58, 58,
	264, 264, 264, 264, 264, 262, 262, 262, 262, 262,
	262, 261, 261, 260, 260, 265, 265, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 53, 53, 53, 53, 56,
	57, 258, 258, 258, 258, 258, 259, 259, 259, 54,
	55, 55, 249, 249, 254, 254, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 257, 257,
	257, 256, 256, 255, 255, 47, 47, 47, 50, 49,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 48,
	48, 48, 48, 48, 48, 45, 45, 45, 45, 45,
	44, 44, 46, 46, 247, 247, 246, 64, 64, 64,
	64, 64, 64, 64, 63, 63, 66, 66, 65, 52,
	52, 52, 52, 51, 51, 51, 51, 51, 51, 51,
	51, 51, 356, 356, 356, 358, 358, 189, 190, 378,
	188, 188, 188, 352, 352, 353, 354, 355, 355, 355,
	62, 7, 7, 42, 43, 376, 376, 294, 294, 202,
	202, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 297, 298, 198,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 33, 33, 236, 236, 32, 379, 379,
	172, 172, 31, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 41, 307, 307, 381, 381, 381, 39, 40,
	293, 293, 293, 37, 36, 35, 34, 34, 30, 30,
	29, 29, 195, 195, 197, 197, 193, 380, 380, 270,
	270, 196, 196, 28, 28, 28, 194, 194, 171, 192,
	192, 192, 6, 10, 10, 10, 10, 10, 10, 10,
	10, 16, 18, 244, 244, 241, 17, 13, 12, 15,
	11, 14, 5, 5, 5, 5, 8, 8, 9, 82,
	82, 111, 111, 365, 365, 361, 361, 362, 362, 362,
	363, 363, 364, 364, 4, 301, 301, 301, 301, 301,
	301, 341, 341, 341, 342, 101, 101, 96, 96, 302,
	302, 216, 343, 343, 310, 310, 309, 309, 308, 308,
	99, 99, 100, 100, 86, 86, 70, 70, 315, 315,
	315, 315, 321, 321, 291, 291, 137, 137, 167, 167,
	168, 168, 74, 74, 75, 75, 75, 75, 75, 75,
	349, 349, 351, 351, 350, 98, 98, 94, 94, 95,
	95, 95, 93, 93, 92, 91, 91, 90, 89, 89,
	89, 77, 77, 76, 76, 76, 76, 76, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	78, 78, 357, 357, 357, 295, 295, 295, 300, 300,
	149, 149, 150, 150, 148, 148, 79, 79, 80, 80,
	80, 80, 147, 147, 146, 81, 81, 87, 83, 83,
	85, 85, 85, 85, 157, 157, 156, 156, 156, 156,
	67, 68, 68, 69, 104, 104, 155, 154, 154, 154,
	103, 103, 102, 102, 97, 97, 84, 84, 84, 153,
	88, 88, 88, 88, 88, 88, 88, 88, 382, 382,
	151, 181, 181, 181, 187, 187, 180, 180, 180, 180,
	180, 191, 186, 186, 182, 182, 183, 183, 183, 3,
	3, 3, 3, 22, 22, 22, 22, 26, 26, 359,
	359, 19, 366, 369, 367, 370, 370, 370, 371, 371,
	371, 372, 372, 20, 368, 373, 373, 373, 245, 245,
	242, 243, 243, 240, 239, 239, 239, 375, 375, 374,
	374, 374, 184, 184, 21, 235, 235, 237, 238, 238,
	229, 229, 229, 229, 25, 233, 233, 234, 234, 234,
	234, 234, 230, 230, 232, 232, 228, 228, 228, 228,
	228, 24, 227, 227, 225, 225, 223, 223, 224, 224,
	222, 222, 222, 226, 226, 23, 23, 72, 71, 71,
	71, 73, 296, 296, 266, 266, 269, 269, 276, 276,
	277, 277, 275, 275, 282, 282, 281, 281, 280, 280,
	279, 279, 278, 278, 278, 278, 273, 273, 272, 272,
	267, 267, 267, 267, 267, 268, 268, 271, 271, 274,
	274, 128, 128, 129, 129, 129, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 339, 339, 340, 131, 131,
	131, 135, 135, 135, 135, 135, 135, 130, 130, 132,
	132, 112, 112, 110, 110, 105, 105, 106, 106, 107,
	107, 108, 108, 109, 109, 109, 109, 109, 109, 252,
	252, 337, 337, 338, 338, 334, 334, 334, 336, 336,
	336, 336, 336, 335, 335, 113, 165, 165, 165, 185,
	185, 185, 164, 164, 164, 127, 127, 126, 126, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 251, 251, 199, 199, 200, 200, 144,
	143, 143, 143, 143, 143, 141, 142, 140, 140, 140,
	140, 140, 139, 139, 138, 138, 138, 231, 231, 136,
	136, 134, 134, 134, 133, 133, 133, 283, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 208, 208, 213, 213, 348, 348, 347, 114,
	114, 114, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 123, 123, 123, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 306,
	306, 306, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 163, 360, 360, 360, 344, 344,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 161,
	161, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 217, 217, 218, 218, 303, 303,
	303, 303, 303, 303, 304, 304, 305, 305, 305, 305,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 206,
	158, 158, 158, 219, 214, 214, 215, 215, 209, 209,
	209, 209, 209, 209, 209, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 210, 210, 212, 212, 221,
	221, 221, 220, 220, 220, 220, 220, 220, 220, 125,
	125, 125, 125, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 116, 116, 116, 116, 120, 120, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 121, 121, 121, 121, 119, 119, 119,
	119, 119, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 118, 166,
	166, 284, 284, 287, 287, 285, 285, 286, 288, 288,
	288, 289, 289, 289, 290, 290, 290, 292, 292, 170,
	170, 170, 177, 177, 169, 169, 178, 178, 179, 179,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 9, 9, 0, 2,
	1, 3, 3, 3, 1, 3, 5, 0, 2, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	0, 3, 3, 0, 3, 0, 3, 0, 3, 0,
	2, 1, 2, 3, 4, 3, 3, 1, 0, 1,
	1, 0, 1, 8, 5, 7, 0, 3, 8, 5,
	1, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 4, 1, 3, 1, 2, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 2, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
	6, 3, 1, 1, 1, 1, 1, 1, 1, 2,
	4, 6, 1, 4, 1, 3, 3, 4, 4, 4,
	3, 3, 2, 4, 4, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 2,
	0, 1, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 2, 4, 3, 1,
	1, 1, 1, 2, 3, 4, 7, 2, 3, 3,
	4, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 7, 7, 0, 3, 0, 2, 0,
	1, 1, 1, 1, 4, 2, 2, 3, 3, 4,
	5, 3, 4, 4, 2, 2, 2, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 5, 0, 2, 7, 0, 1,
	0, 1, 4, 1, 1, 1, 3, 2, 3, 1,
	1, 1, 6, 0, 1, 1, 1, 1, 5, 5,
	0, 1, 1, 3, 3, 3, 6, 7, 4, 4,
	7, 8, 0, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 1, 3, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 3, 1, 4, 6, 4, 4,
	4, 3, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 4, 3, 4, 5, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	4, 1, 3, 4, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 4, 2, 3,
	4, 6, 8, 8, 4, 6, 8, 8, 0, 1,
	2, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 8, 11, 0,
	1, 7, 1, 4, 1, 3, 4, 3, 0, 1,
	1, 0, 2, 7, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 5, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 10, 9, 2, 2, 6,
	10, 5, 0, 1, 0, 6, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 6, 5, 0, 3, 0,
	1, 0, 1, 1, 3, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 4, 1, 3, 3, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 1, 7, 7, 7, 7, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	5, 6, 4, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 6, 6, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 5, 4, 4, 5, 5, 5,
	5, 4, 5, 5, 5, 5, 5, 5, 5, 1,
	1, 1, 4, 4, 6, 8, 6, 4, 5, 5,
	4, 6, 6, 7, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 4, 2, 3, 2, 4, 6, 2, 2, 4,
	6, 4, 2, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -377, -2, -1, -3, -4, -5, -6, -51, -63,
	-65, -66, -27, -7, -62, -44, -45, -47, -53, -58,
	-59, -60, -61, -67, -74, -22, -21, -20, -19, 12,
	-8, -9, -349, -10, -188, -189, -190, -378, -28, -29,
	-30, -34, -35, -36, -37, -39, -40, -41, -31, -32,
	-33, -43, -42, 203, -46, 58, -48, -49, -50, -54,
	-55, -56, -57, 317, 323, 375, 384, 43, -75, -77,
	-23, -24, -25, -26, 199, 14, 452, -11, -14, -12,
	-15, -13, -17, -18, -16, 221, 220, 37, 283, 284,
	321, 219, 200, 13, 132, 133, 135, 136, 30, -76,
	64, 201, -78, 10, 500, -86, 38, -110, -185, 67,
	-173, -176, 455, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 299, 449,
	238, 262, 265, 272, 132, 151, 145, 173, 165, 140,
	242, 243, 74, 135, 406, 84, 391, 372, 138, 257,
	259, 261, 264, 244, 161, 156, 256, 240, 154, 245,
	39, 246, 178, 247, 248, 454, 387, 298, 393, 269,
	370, 155, 388, 260, 390, 180, 184, 398, 323, 149,
	150, 395, 400, 177, 218, 42, 451, 230, 401, 182,
	176, 172, 409, 273, 271, 175, 148, 171, 241, 47,
	186, 185, 187, 366, 367, 368, 369, 249, 250, 311,
	397, 168, 157, 302, 141, 22, 404, 225, 392, 324,
	251, 266, 274, 181, 183, 232, 237, 453, 374, 236,
	270, 402, 153, 229, 258, 224, 405, 142, 317, 326,
	252, 136, 263, 399, 408, 46, 339, 147, 139, 215,
	133, 234, 239, 253, 254, 255, 276, 275, 267, 169,
	231, 174, 159, 146, 170, 134, 233, 407, 340, 498,
	300, 355, 167, 164, 235, 208, 403, 394, 137, 359,
	341, 162, 277, 495, 496, 497, 312, 297, 278, 279,
	160, 222, 386, 280, 282, 365, 290, 342, 373, -46,
	-9, -8, -76, -77, -192, 23, 370, -52, 371, 203,
	64, -185, -5, -4, -44, -74, -191, -185, 283, -191,
	206, -185, 236, 354, -294, 211, -261, -235, 237, -260,
	-237, -263, -238, 31, 199, 201, 200, 233, 14, 321,
	207, 12, 10, 322, 219, 24, 25, 27, 13, 323,
	325, 326, 329, 330, 331, 41, 334, 335, 67, 70,
	244, 244, -68, -69, 493, -92, -93, -152, 19, 6,
	7, 8, 9, -296, 299, 355, 236, -229, -227, 280,
	332, 216, 215, 85, 413, 205, -361, -362, 196, 197,
	198, -351, 445, -350, -185, 26, 206, -38, -307, -293,
	394, 393, -196, 392, 385, 396, 387, 199, 446, -170,
	342, 373, 232, 410, 411, 319, 374, 398, 399, 388,
	84, 166, 163, 299, 355, -361, 137, 134, -248, 137,
	90, 142, 141, -248, 236, 40, -254, 365, -253, -255,
	398, 399, 409, 68, 69, 397, -170, -185, 84, -93,
	-152, -92, -75, -77, -349, 299, 355, 236, 207, 206,
	208, 413, 283, -295, -357, 31, -300, 193, 194, 195,
	32, 33, -1, -99, 228, -110, 130, -93, -92, -93,
	-164, -185, 372, 100, -52, -52, 371, -352, -353, -354,
	-356, 203, 371, 370, 130, 15, -191, 62, -110, -237,
	236, -261, -235, 35, 61, 131, 209, 131, 61, 64,
	319, 299, 355, 320, 413, 206, 332, 208, 236, 333,
	299, 355, 206, 208, 413, 236, 299, 206, 208, 355,
	236, 333, 385, 386, 208, 26, 324, 327, 328, 386,
	-311, 409, -311, -93, 131, 64, -70, 38, -95, 21,
	-78, -77, 20, 31, 32, 31, 32, 31, 32, 31,
	32, -359, 206, 445, -225, 211, -225, -225, 207, -225,
	206, -363, 144, 131, -351, -98, 64, 23, 234, -195,
	108, -381, 207, 395, 42, 235, 234, -94, -95, -94,
	389, 386, -270, 390, 391, -196, -195, -195, -196, 206,
	208, 413, -379, -380, 15, 110, 234, -379, 30, 30,
	-294, -294, -364, 210, 402, 452, 140, 141, 142, -258,
	31, 40, 364, -235, 236, 131, 100, 23, -256, 100,
	111, -255, -255, -255, -256, -256, -130, 40, -184, 127,
	-185, 70, -130, 40, 130, -94, -78, -77, 65, 65,
	-294, -294, -294, -294, -294, -294, -294, -191, -79, -80,
	118, -209, -185, 91, 227, -211, 67, -204, 455, 456,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 84, 370, 311, 159, 355, 162, 312,
	160, 222, 365, -205, -207, -330, -324, -203, 64, 116,
	117, 124, 92, -206, -283, 35, 94, 421, -159, -160,
	-161, -162, -163, -325, -323, 70, 75, 78, 81, 82,
	80, 79, 158, 77, 71, 129, -77, -344, -174, -299,
	-305, 205, -303, 163, 12, 122, 127, -306, 491, 69,
	68, 492, 305, 306, 307, 413, 301, 308, 211, 52,
	309, 310, 313, 420, 314, 53, 315, 304, 226, 316,
	179, 424, 423, 425, 417, 414, 412, 415, 416, 418,
	419, -79, -301, 43, -74, 64, 30, 64, -185, -94,
	-70, -95, 130, 75, 70, -52, 65, 131, -355, 81,
	82, -358, 177, 169, -185, -64, 70, -3, -4, -5,
	-6, -27, -44, -74, -326, -324, 64, 31, 364, 61,
	15, -262, 206, 413, 318, 232, 208, 299, -260, -244,
	-241, -239, -184, -237, -240, -239, -265, -164, 386, -71,
	376, -71, -94, -69, -309, -308, -209, 40, -185, 494,
	-70, -209, -91, -90, -209, 208, -225, -366, 67, 91,
	-245, -242, -239, -235, -183, 67, 68, 69, -185, -225,
	-364, -350, 34, -97, -185, -239, -379, -148, 16, -207,
	-380, -195, -195, -197, -380, -193, -380, 386, -148, -148,
	-270, -194, -185, -194, -225, -172, -171, -185, -172, -366,
	-245, -83, -81, -84, -85, -87, -151, -153, -88, -110,
	64, 492, 403, 404, 138, 141, 140, 7, -259, 364,
	31, -235, -253, -249, 70, 365, -240, -257, 61, 127,
	-308, -256, -256, -256, -257, -257, 126, -185, -70, -366,
	-244, -235, -185, -112, -110, -112, -186, -183, -176, -147,
	131, -146, 15, -180, 90, 87, 88, 89, -185, 34,
	70, 130, -209, 107, -220, 100, 101, 102, 103, 104,
	105, 106, 64, 64, 64, 64, 64, 64, 64, 64,
	-218, 64, 64, 64, 64, 64, 64, 64, -218, 64,
	64, 64, 64, 64, 70, 70, 70, 64, 113, 112,
	123, 116, 117, 118, 119, 120, 121, 122, 114, 115,
	110, 91, 108, 109, 93, -77, -209, -215, -207, -207,
	-207, -207, -283, -213, -209, 64, -209, 64, 64, 64,
	-304, 64, 64, -217, -218, 64, 64, 64, -207, 64,
	64, -147, -302, -216, -343, 493, -101, 65, -96, -185,
	-341, -342, -96, -100, -185, -70, -70, -178, -179, -169,
	-175, -182, -183, -176, 204, 31, 90, 34, 36, 305,
	337, 93, 127, 20, 94, 163, 126, 307, 421, 306,
	199, 56, 423, 425, 424, 414, 412, 357, 361, 363,
	360, 413, 385, 40, 14, 37, 220, 32, 33, 120,
	201, 97, 98, 223, 35, 221, 82, 23, 59, 15,
	17, 18, 308, 356, 211, 210, 110, 376, 207, 54,
	12, 129, 38, 107, 358, 50, 86, 52, 108, 21,
	415, 416, 41, 375, 384, 448, 227, 122, 309, 310,
	57, 91, 364, 80, 61, 87, 19, 55, 109, 202,
	420, 53, 362, 313, 315, 325, 445, 314, 205, 396,
	10, 304, 422, 30, 219, 51, 206, 96, 209, 81,
	226, 6, 85, 13, 58, 62, 417, 418, 419, 43,
	95, 16, 316, 452, 377, 378, 379, 380, 381, 382,
	383, 188, 189, 190, 191, 192, 268, 214, 212, 216,
	217, 493, 494, 193, 194, 294, 296, 166, 196, 197,
	198, 228, 144, 7, 343, 344, 345, 346, 348, 349,
	350, 351, 352, 353, 354, 23, -52, -353, 130, 131,
	-97, -262, -243, -240, -264, 118, 67, -250, 131, 452,
	501, 68, 209, -375, -374, 356, 65, 131, -312, 210,
	420, 70, 502, -312, 131, 65, 130, 70, 131, 22,
	131, -89, 36, 37, -110, 211, -110, -369, 343, 35,
	-376, 131, 40, -374, -228, 62, -223, -224, -222, -226,
	40, -110, 15, -82, -111, -185, 64, 65, 131, -236,
	62, -172, -209, -110, -148, -148, -195, -186, -197, -192,
	-197, -193, 130, -171, -369, -376, 30, -154, -155, -156,
	-157, 50, 54, 56, 51, 52, 53, 57, 30, 131,
	-382, 34, -181, -187, 34, -182, 70, -183, -176, -181,
	-75, -77, 64, 139, 142, 142, 141, -235, 209, 64,
	100, -257, -257, -257, 40, -184, 61, 131, -148, -80,
	-81, -83, -209, -209, -209, -209, -185, 70, -185, 118,
	80, 91, 297, 81, 82, -204, -221, 31, 278, 279,
	-214, -215, -209, -158, 32, 31, -158, -158, -209, -158,
	118, -215, -215, 65, 75, -345, -346, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 309, 304,
	310, 308, 301, 316, 311, 312, 162, 443, 444, 437,
	438, 439, 440, 441, 442, -158, -158, -158, -158, -158,
	-209, -360, 295, 294, 296, -158, -158, -158, -158, -214,
	-205, -205, -205, -205, -205, -205, -205, -205, -205, -205,
	-205, -205, -212, -219, -283, 64, 110, 108, 109, 93,
	-207, -205, -205, 65, 131, -348, -347, 95, -209, -345,
	-214, -209, -214, -214, 65, 65, -215, -214, -205, -158,
	70, -148, 131, 64, 65, 131, 43, 130, 131, 100,
	65, 131, 130, 372, -185, -324, 65, -264, 131, 209,
	130, 130, -241, 323, -184, -243, 20, 452, -164, 38,
	70, 38, -308, -185, -315, 390, -209, -209, -90, -98,
	91, 64, -371, 392, 345, -177, 100, -202, -201, 300,
	41, -297, 365, 351, 352, -242, 236, 61, 289, 290,
	291, 292, -222, -170, 126, 247, 64, -110, -82, -185,
	15, 131, -365, 130, -1, -185, -235, -195, -148, -148,
	-195, -195, -197, -185, -371, -202, -247, -246, -164, -84,
	-84, -84, -84, 50, 50, 50, 55, 50, 55, 50,
	-156, -247, -87, -185, -187, 65, 70, -164, 142, -243,
	-198, 70, -249, -110, -110, -150, 17, 130, 80, 297,
	81, 82, -283, 65, 131, -209, -209, -209, 34, -215,
	65, 65, 65, 65, 15, -209, -209, -209, -209, -209,
	65, 15, 15, -209, -209, -209, -209, -209, 65, -215,
	-212, -207, -205, -205, -210, 223, 90, -209, -208, -347,
	97, -209, 131, 62, 65, 15, 65, 65, 65, 62,
	65, 131, -209, 131, -150, -216, -310, -309, 43, -74,
	-96, -302, -185, -342, -308, -185, -178, -175, -183, -176,
	75, 15, -240, -235, 118, 118, 67, 324, -250, 70,
	344, 70, 206, 100, 206, 130, -321, 382, 377, 379,
	34, 35, -105, -106, -107, -113, -108, -164, -200, -109,
	214, 212, 216, -338, 85, 217, 268, 86, 207, -372,
	74, -367, 70, -373, 74, 346, 129, 302, 40, 347,
	348, 362, 298, 75, 75, 353, -368, 67, -110, -177,
	-177, -177, -105, -99, 62, 130, -81, -111, -185, 118,
	65, -148, -148, -148, -195, -372, -373, -148, 131, 100,
	-103, -102, 61, 62, -104, 61, -102, 50, 50, -148,
	-98, 65, 131, 65, 131, 65, -149, 18, 20, -185,
	118, -209, 65, 65, 65, -114, -116, 339, 340, -120,
	-117, -119, -118, -122, -121, 163, 164, 127, 167, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 30,
	179, 222, 159, 160, 161, 162, 180, 145, 165, 450,
	188, 146, 189, 147, 190, 148, 191, 149, 150, 192,
	151, 154, 155, 156, 153, 65, -209, 65, 65, 65,
	65, 65, -209, -209, 15, 65, 65, 65, 65, 65,
	-210, 90, -207, -204, 65, 98, -209, 96, -115, -121,
	127, 163, 222, 162, 161, 159, 339, 340, -130, -209,
	-130, -205, 65, 70, -149, 65, -302, -235, -250, 365,
	-110, 70, -110, -291, 495, -319, 377, 20, 20, -74,
	-110, 65, 131, -116, -109, -185, 86, -337, -338, -225,
	-337, 86, 64, 70, -370, 356, 70, 70, 75, 40,
	75, 129, 349, -298, 64, -130, -132, -184, 127, 70,
	65, -181, -81, -185, -148, -365, 130, -148, -93, -246,
	-308, -209, 64, -209, 70, 70, -209, -215, 65, -123,
	150, 149, -123, -290, 340, 339, -284, -286, 64, -285,
	64, -285, -284, -284, 64, 64, -284, -287, 64, -287,
	-284, -288, 64, -288, -289, 64, -288, 65, 65, 65,
	-209, -204, -209, 65, -284, -285, -284, -287, -284, -123,
	-123, 65, 65, 23, 65, 65, 65, -73, -313, -270,
	503, 131, -73, -137, 496, 70, 20, 70, -317, 70,
	-98, -128, -129, -145, 337, 238, -226, 242, 74, 243,
	372, 244, 207, 246, 247, 248, 218, 249, 250, 251,
	365, 252, 253, 254, 255, 320, 6, 285, -107, -127,
	-126, -124, 80, 91, 40, 337, -125, 74, 126, 261,
	239, 262, -144, -199, 61, 212, 85, 86, 325, -200,
	-334, -335, -185, -335, -185, -334, -334, -225, -209, 20,
	452, 301, 40, 75, 40, 350, -230, -232, -164, 64,
	-72, -71, -148, -148, -94, -97, 65, 131, 65, 131,
	-292, 341, 75, 75, -166, 70, -166, 75, 75, 75,
	65, -209, -320, 382, -316, -314, 377, 378, 379, 380,
	70, -167, 497, 75, 70, 379, 34, -266, 228, 131,
	-145, -177, -177, -170, 126, -177, -177, -177, -177, 245,
	245, -177, -177, -177, -177, -177, -177, -177, -177, -177,
	-177, -177, -177, -177, -177, 64, -124, 80, -205, 70,
	-132, -133, 40, 260, 256, -134, 40, 240, 241, -136,
	64, 268, 13, 86, 86, -110, 64, 62, 277, 64,
	64, 64, -335, 65, 70, 344, 70, 301, 65, 131,
	-284, -209, -73, -93, 65, 81, 82, 81, 82, 65,
	65, 65, 131, 65, 65, 65, 131, 65, 131, 65,
	-322, 210, -318, 381, -314, 20, 379, 20, 20, 100,
	64, 20, -74, 20, -145, 75, 75, -177, -177, 75,
	70, 70, 70, -177, -177, 75, 70, -187, 75, 75,
	75, 75, 40, 70, -135, 40, 256, 260, 257, 258,
	259, 75, 40, 75, 40, 75, 40, -185, 64, -339,
	-340, 70, 75, 64, -303, -231, 64, -230, -336, 289,
	290, 291, 293, 292, -336, -230, -230, -230, 64, -252,
	-251, 269, 91, 365, -233, -232, -89, 65, -94, 65,
	65, 65, 65, 70, 75, 75, -329, 64, 75, -319,
	20, -317, 20, -317, -317, 70, -168, -185, -317, -267,
	270, 271, -268, -274, 273, -130, -130, 70, 70, -131,
	239, -112, 65, 131, 100, 65, -209, -217, -139, -138,
	448, -230, 65, 65, 65, 65, -230, 269, -234, 218,
	74, 452, 287, 288, -89, 65, 65, -333, 30, 65,
	-328, -327, -165, -323, -185, 382, 383, 70, -317, 503,
	65, 131, -272, 274, 64, -270, 64, -270, 86, 290,
	240, 241, 65, -340, 70, 65, -143, -141, -142, 61,
	388, 266, 267, 65, -233, -233, -233, -233, 65, -177,
	70, 286, -332, -331, -330, 65, 131, 130, -185, -269,
	275, 75, -205, 64, -205, 64, -271, 272, 64, -251,
	-142, 61, -141, 61, 14, 13, -144, 75, -183, 131,
	100, -327, -185, -276, 64, 20, 65, -265, 65, -265,
	64, 100, -205, -140, 263, 264, 30, 141, -140, -331,
	40, -209, 130, -277, -275, 228, -268, 65, 65, -265,
	75, 65, 80, 40, 265, -185, 65, 131, 67, -273,
	276, 65, -275, -278, 43, 75, -282, -279, 64, -145,
	230, 110, -282, -145, -281, -280, 275, 231, 64, 65,
	131, 67, 227, 64, -215, -280, -279, -215, 65, 65,
}

var yyDef = [...]int{
	25, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 589, 590, 591, 592, 0,
	382, 383, 0, 362, 0, 0, 0, 0, 290, 291,
	292, 293, 294, 295, 296, 297, 298, 299, 300, 301,
	302, 261, 262, 0, 210, 206, 185, 186, 187, 145,
	146, 147, 148, 267, 0, 0, 0, 0, 452, -2,
	593, 594, 595, 596, -2, 395, 0, 363, 364, 365,
	366, 367, 368, 369, 370, 250, 251, 252, 247, 248,
	249, -2, 0, 395, 199, 0, 190, 190, 0, 472,
	0, 0, 483, 505, 25, 430, 0, 435, 773, 809,
	810, 811, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 211,
	384, 385, 472, 472, 233, 0, 1393, 237, 0, 0,
	0, 359, 229, 230, 231, 232, 0, 581, 0, 226,
	0, 205, 1452, 0, 0, 0, 0, 0, 0, 91,
	635, 93, 637, 97, 104, 0, 0, 109, 110, 113,
	114, 115, 116, 117, 0, 121, 0, 123, 126, 0,
	128, 0, 131, 132, 133, 0, 143, 144, 638, 639,
	71, 71, 472, 541, 0, -2, 0, 0, 0, 488,
	491, 494, 497, 599, 664, 664, 664, 0, 664, 0,
	683, 641, 642, 643, 662, 663, 400, 396, 397, 398,
	399, 460, 0, 462, 465, 303, 0, 342, 0, 0,
	467, 467, 0, 351, 342, 342, -2, 0, 313, 314,
	315, 308, 0, 308, 319, 320, 321, 331, 332, 352,
	1179, 0, 0, 267, 267, 402, 200, 201, 189, 191,
	0, 195, 0, 188, 1452, 0, 159, 1518, 164, 0,
	1400, 1466, 1415, 0, 0, 1433, 0, 183, -2, 467,
	0, 473, 0, 472, 0, 267, 267, 267, 267, 267,
	267, 267, 0, 0, 0, 506, 507, 502, 503, 504,
	508, 509, 3, 0, 0, 434, 0, 467, -2, 0,
	234, 812, 0, 0, 238, 239, 0, 0, 253, 0,
	256, 242, 243, 244, 0, 0, 228, 0, 0, 207,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	101, 98, 105, 108, 118, 125, 0, 136, 138, 141,
	99, 106, 111, 112, 119, 139, 100, 102, 103, 107,
	140, 142, 120, 124, 137, 122, 127, 129, 130, 135,
	0, 72, 0, 467, 0, 0, 455, 0, 436, 0,
	485, 487, 0, 489, 490, 492, 493, 495, 496, 498,
	499, 0, 664, 600, 0, 0, 0, 0, 0, 0,
	664, 402, 401, 0, 461, 0, 0, 0, 308, 514,
	0, 0, 325, 326, 327, 342, 342, 333, 468, 334,
	335, 344, 0, 349, 350, 0, 514, 514, 0, 0,
	0, 664, 310, 309, 347, 348, 317, 310, 1180, 1181,
	0, 0, 0, 403, 0, 0, 193, 0, 198, 149,
	154, 152, 153, 155, 0, 0, 0, 0, 0, 181,
	182, 0, 0, 0, 0, 0, 172, 175, 767, 768,
	632, 633, 176, 177, 0, 436, 484, 486, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 381, 522, 516,
	518, 576, 34, 0, 1063, 1064, 809, 1075, -2, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, -2, 1542, -2, -2,
	1545, 1546, 1547, 1549, -2, -2, -2, -2, -2, -2,
	1556, -2, -2, -2, 1560, 1561, -2, -2, 1564, 1565,
	1566, 1567, 1568, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1518, 1084, 880, 881, 882, 883, 0, 0,
	0, 0, 0, 890, 891, 0, 904, 0, 897, 898,
	899, 900, 901, 46, 47, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1029, 867, 0, 0, 0,
	1014, 0, 1004, 0, 0, 0, 0, 0, 0, 48,
	49, 1532, 1020, 1022, 1023, 1025, 1026, 1027, 1028, 1031,
	1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1044, 1046,
	1048, 1016, 1017, 1018, 1019, 1008, 1009, 1010, 1011, 1012,
	1013, 522, 404, 422, 406, 0, 411, 0, 774, 436,
	458, 436, 0, 235, 0, 240, 0, 0, 255, 257,
	258, 259, 245, 246, 360, 224, 225, 217, 218, 219,
	220, 221, 222, 223, 227, 44, 0, 208, 209, 0,
	0, 0, 85, 86, 87, 88, 89, 90, 92, 76,
	373, 375, 624, 636, 0, 627, 0, 95, 134, 68,
	0, 68, 540, 542, 0, 426, 428, 429, 34, 0,
	456, 469, 474, 475, 478, 0, 0, 0, 602, 0,
	265, 618, 0, 634, 656, 586, 587, 588, -2, 0,
	0, 463, 0, 0, 554, 305, 310, 312, 0, 343,
	0, 514, 514, 342, 0, 344, 0, 344, 338, 339,
	0, 353, 356, 354, 0, 316, 311, 358, 318, 0,
	265, 527, 0, 528, 529, 525, 556, 568, 571, 571,
	0, 0, 202, 203, 0, 0, 197, 0, 0, 156,
	157, 158, 165, 160, 162, 0, 0, 166, 178, 179,
	180, 0, 0, 0, 170, 171, 0, 184, 454, 371,
	372, 376, 0, 378, 771, 379, 380, 582, 583, 514,
	0, 523, 0, 519, 0, 0, 0, 0, 577, 0,
	579, 0, 1062, 0, 0, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1054, 1050, 1050, 1050, 0, 1050, 0, 0,
	989, 0, 0, 1050, 1050, 1050, 1050, 1050, 990, 0,
	1050, 1050, 1050, 1050, 998, 1003, 997, 1054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 1056, 0, 886, 887,
	888, 889, 892, 0, 905, 0, 0, 1054, 1054, 1054,
	992, 0, 0, 994, 1005, 0, 1054, 0, 1002, 1050,
	0, 514, 405, 419, 0, 423, 0, 0, 415, 417,
	410, 412, 0, 0, 432, 457, 459, 813, 0, 1186,
	-2, 1188, -2, -2, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 0, 241, 254, 0, 0,
	0, 0, 79, 621, 0, 80, 84, 74, 0, 0,
	0, 626, 0, 623, 628, 0, 94, 0, 0, 69,
	70, 678, 0, 0, 0, 543, 0, 438, 0, 0,
	0, 477, 479, 480, 465, 0, 0, 608, 1182, 665,
	269, 0, 0, 620, 0, 0, 661, -2, 668, 0,
	674, 0, 0, 0, 389, 393, 25, 466, 0, 304,
	0, 342, 515, 514, 328, 329, 514, 345, 342, 346,
	342, 344, 0, 355, 608, 269, 0, 0, 0, 0,
	0, 547, 0, 0, 546, 0, 0, 0, 0, 0,
	0, 569, 558, 572, 0, 574, 575, 584, 585, 570,
	0, 472, 0, 204, 192, 194, 0, 151, 0, 0,
	0, 167, 168, 169, 173, 174, 0, 0, 512, 517,
	524, 527, 1058, 1059, 1060, 1061, 578, 580, 35, 520,
	1065, 0, 1067, 1069, 1071, 1073, 0, 1089, -2, -2,
	0, 1055, 1056, 0, 1051, 1052, 0, 0, 0, 0,
	0, 0, 0, 1006, 0, 0, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 0, 0, 0, 0, 0,
	0, 0, 955, 956, 957, 0, 0, 0, 0, 0,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 1076, 1087, 1088, 0, 0, 0, 0, 0,
	1085, 1080, 0, 884, 0, 902, 906, 0, 0, 1049,
	0, 1056, 0, 0, 1015, 993, 0, 0, 0, 0,
	0, 512, 422, 424, 0, 0, 422, 0, 0, 0,
	431, 0, 0, 0, 361, 45, 260, 0, 0, 0,
	0, 0, 374, 0, 625, 76, 0, 0, 96, 0,
	0, 0, 427, 35, 442, 0, 470, 471, 476, 0,
	0, 775, 611, 609, 610, 0, 1183, 615, 270, 271,
	272, 273, 0, 0, 0, 619, 0, 0, 657, 658,
	659, 660, 669, 1182, 1182, 1182, 775, 430, 0, -2,
	0, 0, 391, 0, 0, 555, 306, 514, 322, 336,
	514, 514, 342, 357, 611, 615, 514, 214, 0, 550,
	544, 0, 533, 548, 549, 536, 0, 538, 0, 534,
	535, 514, 526, 465, 573, 559, 0, 0, 196, 150,
	0, 289, 161, 377, 772, 510, 0, 0, 1066, 1068,
	1070, 1072, 1074, 942, 0, 0, 0, 0, 0, 0,
	931, 925, 926, 1007, 0, 0, 0, 0, 0, 0,
	950, 0, 0, 0, 0, 0, 0, 0, 1001, 0,
	1077, 1085, 1081, 0, 1078, 0, 0, 1057, 0, 907,
	0, 0, 0, 0, 943, 0, 947, 991, 995, 0,
	999, 0, 0, 0, 510, 420, 0, 425, 422, 409,
	416, 408, 418, 413, 414, 433, 814, 1187, 1184, 1185,
	236, 0, 622, 76, 81, 82, 83, 77, 75, 629,
	0, 631, 0, 0, 0, 0, 444, 57, 0, 0,
	0, 0, 0, 776, 777, 779, 780, 0, 0, 782,
	837, 0, 791, 664, 791, 0, 0, 793, 794, 601,
	0, 0, 604, 613, 0, 0, 0, 275, 276, 0,
	0, 0, 288, 284, 285, 286, 266, 614, 0, 0,
	0, 0, 0, 571, 0, 0, 514, 390, 393, 394,
	464, 307, 340, 337, 514, 263, 264, 472, 0, 0,
	530, 551, 0, 0, 531, 0, 532, 537, 539, 213,
	557, 560, 0, 564, 0, 163, 500, 0, 0, 36,
	521, 1057, 927, 928, 929, 0, 909, 921, 921, 1174,
	1114, 1115, 1116, 1161, 1118, 1165, 1165, 1161, 1161, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 0, 0,
	1157, 1137, 1161, 1163, 1163, 1161, 1158, 1119, 1120, 1121,
	1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1168, 1168, 1171, 1168, 930, 0, 949, 932, 933,
	936, 934, 0, 0, 0, 948, 937, 938, 924, 1053,
	1079, 0, 1086, 1082, 885, 893, 903, 0, 0, 912,
	1161, 1165, 915, 1161, 1163, 1161, 921, 921, 0, 0,
	0, 0, 935, 0, 501, 421, 407, 78, 73, 630,
	59, 0, 59, 446, 0, 443, 0, 0, 0, 597,
	465, -2, 0, -2, 781, 838, 803, 803, 792, 803,
	803, 664, 0, 612, 603, 0, 616, 617, 0, 277,
	278, 0, 281, 287, 0, 670, 671, 769, 770, 672,
	0, 514, 514, -2, 387, 392, 0, 341, 467, 215,
	216, 552, 0, 545, 0, 0, 511, 513, 894, 910,
	922, 923, 911, 1177, 1175, 1176, 1117, 1162, 0, 1142,
	0, 1143, 1144, 1145, 0, 0, 1138, 1139, 0, 1140,
	1141, 1133, 0, 1134, 1135, 0, 1136, 946, 951, 952,
	0, 1083, 908, 895, 913, 914, 916, 917, 918, 919,
	920, 896, 944, 0, 996, 1000, 954, 27, 53, 0,
	679, 0, 26, 448, 0, 445, 0, 439, 441, 67,
	0, 684, -2, 723, 1182, 1182, 0, 1182, 1182, 1182,
	1182, 0, 0, 1182, 1182, 1182, 1182, 1182, 1182, 1182,
	1182, 1182, 1182, 1182, 1182, 1182, 1182, 0, 778, 805,
	-2, 817, 819, 0, 0, 822, 823, 0, 0, 0,
	0, 859, 829, 0, 0, 0, 1101, 1102, 0, 836,
	0, 795, 804, 0, 804, 0, 0, 803, 0, 0,
	0, 274, 279, 0, 282, 283, 0, 652, 1161, 0,
	676, 59, 472, 388, 212, 0, 561, 0, 565, 0,
	1113, 1178, 0, 0, 0, 1159, 0, 0, 0, 0,
	953, 0, 50, 55, 60, 61, 0, 0, 0, 0,
	0, 437, 0, 447, 58, 0, 0, 675, 0, 673,
	725, 0, 0, 1182, 1182, 0, 0, 0, 0, 1182,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 818, 820, 821, 824,
	825, 826, 864, 865, 866, 827, 861, 862, 863, 828,
	0, 0, 0, 1099, 1100, 857, 0, 0, 0, 0,
	0, 0, 0, 789, 605, 0, 607, 280, 645, 0,
	478, 0, 677, 467, 553, 0, 0, 0, 0, 1167,
	1166, 1155, 0, 1156, 1164, 1169, 0, 1172, 0, 945,
	37, 0, 57, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 598, 719, 724, 726, 727, 0, 0, 730,
	731, 732, 733, 0, 0, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 761, 762, 763, 764, 765,
	766, 746, 747, 748, 749, 750, 751, 758, 0, 0,
	755, 0, 0, 0, 1004, 852, 0, 0, 796, 798,
	799, 800, 801, 802, 797, 0, 0, 0, 0, 788,
	790, 833, 0, 606, 644, 653, 654, 478, 386, 562,
	563, 566, 567, 1160, 0, 0, 28, 0, 0, 54,
	0, 63, 0, 65, 66, 0, 0, 450, 440, 708,
	0, 0, 714, 0, 720, 728, 729, 734, 735, 752,
	0, 0, 754, 0, 0, 860, 0, 832, 840, 853,
	0, 0, 645, 645, 645, 645, 0, 834, 646, 1182,
	0, 0, 650, 651, 655, 1170, 1173, 681, 0, 38,
	0, 40, 42, 43, 806, 51, 52, 56, 64, 680,
	449, 0, 686, 0, 0, 0, 0, 0, 717, 0,
	759, 760, 753, 756, 757, 830, 839, 841, 842, 0,
	854, 855, 856, 858, 783, 784, 785, 786, 0, 0,
	648, 0, 29, 30, 0, 39, 0, 0, 451, 688,
	0, 709, 0, 0, 0, 0, 0, 0, 0, 831,
	843, 0, 844, 0, 0, 0, 787, 647, 649, 0,
	0, 41, 807, 685, 0, 719, 710, 0, 712, 0,
	0, 0, 0, 845, 847, 848, 0, 0, 846, 31,
	32, 33, 0, 0, 690, 0, 706, 711, 713, 0,
	718, 716, 849, 851, 850, 808, 689, 0, 702, 687,
	0, 715, 691, -2, 0, 707, 692, -2, 0, 700,
	0, 0, 693, 701, 0, 696, 0, 0, 0, 695,
	0, -2, 703, 0, 0, 697, -2, 0, 705, 704,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 121, 113, 3,
	64, 65, 118, 116, 131, 117, 130, 119, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 500,
	101, 100, 102, 3, 501, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 123, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 502, 112, 503, 124,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 93, 94,
	95, 96, 97, 98, 99, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 114, 115, 120, 122, 125, 126,
	127, 128, 129, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:551
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:557
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:585
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:589
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:595
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:607
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:622
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:628
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:632
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:638
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:645
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:654
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:658
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:662
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:671
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:675
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:681
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:690
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:701
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:705
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:711
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:715
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:721
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:725
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:731
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:755
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//        	yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:774
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:778
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:782
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:791
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:799
		{
			yyVAL.str = ""
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:803
		{
			yyVAL.str = yyDollar[3].str
		}
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:808
		{
			yyVAL.str = "\n"
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:812
		{
			yyVAL.str = yyDollar[3].str
		}
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:821
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:845
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:849
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:855
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:861
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:879
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:896
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:919
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:923
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:927
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:932
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:936
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:942
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:966
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:979
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:983
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:993
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1006
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1019
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1025
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1031
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1038
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1055
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1059
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1063
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1067
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1071
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1075
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1082
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1086
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1092
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1099
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1108
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1112
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1118
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1122
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1126
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1130
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1134
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1138
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1142
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1146
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1150
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1154
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1158
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1162
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1166
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1170
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1174
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1178
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1182
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1186
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1190
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1194
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1198
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1202
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1206
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1210
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1214
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1218
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1222
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1226
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1230
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1234
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1238
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1242
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1246
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1250
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1254
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1258
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1262
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1266
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1270
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1274
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1302
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1306
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1318
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1324
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1332
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1336
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1340
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1344
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1348
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1354
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1358
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1362
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1368
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1374
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1378
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1385
		{
			yyVAL.str = yyDollar[3].str
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1391
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1395
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1401
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1409
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1418
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1426
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1434
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1457
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1480
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1487
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1494
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1502
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1509
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1525
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1529
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1533
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1539
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1543
		{
			yyVAL.str = yyDollar[1].str
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1550
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1561
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1567
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1572
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1576
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1580
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1584
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1588
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1592
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1596
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1600
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1604
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1618
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1622
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1627
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1632
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1638
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1645
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1651
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1658
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1665
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1675
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1682
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1693
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1708
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1714
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1726
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1742
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1746
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1761
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1767
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1771
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1787
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1795
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1803
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1813
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1851
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1855
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1867
		{
			yyVAL.str = yyDollar[1].str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1872
		{
			yyVAL.str = "true"
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1873
		{
			yyVAL.str = "false"
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1874
		{
			yyVAL.str = yyDollar[1].str
		}
	case 260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1879
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1890
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1902
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1917
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1922
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1926
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1931
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1935
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1951
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1955
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1959
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1963
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1967
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1971
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1975
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1979
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1983
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1987
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1991
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2017
		{
			yyVAL.item = nil
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2022
		{
			yyVAL.item = nil
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2046
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2059
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2065
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2070
		{
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2074
		{
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2079
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2088
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2092
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2096
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2100
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2104
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2108
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2112
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2116
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2120
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2126
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2134
		{
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2136
		{
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2155
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2168
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2178
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2184
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2190
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2196
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2206
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2218
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2222
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2257
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2262
		{
			yyVAL.str = ""
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2266
		{
			yyVAL.str = yyDollar[2].str
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2272
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2285
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2289
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2304
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2310
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2314
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2323
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2327
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2331
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2350
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2359
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2368
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2372
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2378
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2387
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2396
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2406
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2412
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2418
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2424
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2432
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2437
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2444
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2460
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2484
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2488
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2494
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2499
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2506
		{
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2508
		{
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2511
		{
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2520
		{
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2524
		{
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2529
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2538
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2545
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2551
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2559
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2566
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2573
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2592
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2596
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2600
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2606
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2615
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2619
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2625
		{
			yyVAL.str = yyDollar[1].str
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2629
		{
			yyVAL.str = yyDollar[3].str
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2635
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2639
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2645
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2650
		{
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2661
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2665
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2672
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2677
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2681
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2687
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2691
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2697
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2701
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2710
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2723
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2730
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2737
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2755
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2774
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2780
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2787
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2791
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2804
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2808
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2813
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2817
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2824
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2829
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2836
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2842
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2846
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2850
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2854
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2858
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2862
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2868
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2884
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2888
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2894
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2906
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2911
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2915
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2925
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2938
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2944
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2950
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2954
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2960
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2965
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2969
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2973
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2980
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2984
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2990
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2994
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3004
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3014
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3024
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3036
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3044
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3052
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3061
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3069
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3077
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3085
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3093
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3101
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3125
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3135
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3146
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3168
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3172
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3194
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3199
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3203
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3209
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3213
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3219
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3223
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3227
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3231
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3236
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3244
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3258
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3262
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3284
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3303
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3313
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3317
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3327
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3331
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3335
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3339
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3355
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3359
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3365
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3375
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3381
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3387
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3391
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3395
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3405
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3411
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3415
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3421
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3425
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3431
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3435
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3445
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3467
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3480
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3496
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3512
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3528
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3541
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3557
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3573
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3592
		{
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3593
		{
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3597
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3609
		{
			yyVAL.str = ""
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3613
		{
			yyVAL.str = yyDollar[1].str
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3617
		{
			yyVAL.str = yyDollar[2].str
		}
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3626
		{
			yyVAL.str = ""
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3630
		{
			yyVAL.str = yyDollar[1].str
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3634
		{
			yyVAL.str = yyDollar[2].str
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3638
		{
			yyVAL.str = yyDollar[1].str
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3642
		{
			yyVAL.str = yyDollar[2].str
		}
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3676
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3686
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3697
		{
		}
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3702
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3714
		{
			yyVAL.str = yyDollar[1].str
		}
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3720
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3730
		{
			yyVAL.str = yyDollar[1].str
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3736
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3743
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3749
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3757
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3763
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3770
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3778
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3784
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3793
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3805
		{
			yyVAL.str = yyDollar[1].str
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3810
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3816
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3824
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3930
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3934
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3950
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3954
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3960
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3970
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3974
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3978
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3983
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3987
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3993
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4000
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4006
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4019
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4028
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4032
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4038
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4055
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4059
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4063
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4067
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4073
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4096
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4118
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4122
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4126
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4130
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4140
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4144
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4150
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4155
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4160
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4164
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4168
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4172
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4176
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4182
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4196
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4200
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4209
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4215
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4219
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4225
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4229
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4233
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4238
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4242
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4248
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4259
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4270
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4277
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4284
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4295
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4308
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4319
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4323
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4332
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4342
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4346
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4359
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4365
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4369
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4375
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4384
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4398
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4404
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4408
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4414
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4421
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4430
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4434
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4439
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4443
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4448
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4452
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4457
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4461
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4471
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4475
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4486
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4494
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4502
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4510
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4521
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4531
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4541
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4545
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4550
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4554
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4559
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4563
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4569
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4573
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4577
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4583
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4587
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4591
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4595
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4599
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4603
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4607
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4611
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4615
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4619
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4623
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4627
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4631
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4635
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4639
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4643
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4647
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4651
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4655
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4659
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4663
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4667
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4671
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4675
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4679
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4683
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4687
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4691
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4695
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4702
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4706
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4712
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4717
		{
			yyVAL.str = ""
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4721
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4725
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4731
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4735
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4739
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4743
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4747
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4751
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4765
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4769
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4778
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4783
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4789
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4796
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4800
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4806
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4810
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4816
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4826
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4832
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4841
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4850
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4873
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4882
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4892
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4900
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4906
		{
			yyVAL.str = ""
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4910
		{
			yyVAL.str = yyDollar[1].str
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4920
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4926
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4932
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4946
		{
			yyVAL.str = ""
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:4953
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4959
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4963
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4967
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4978
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4982
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4986
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4995
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5001
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5005
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5011
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5015
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5027
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5035
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5039
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5043
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5047
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5051
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5055
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5059
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5063
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5078
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5082
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5087
		{
			yyVAL.str = ""
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5091
		{
			yyVAL.str = yyDollar[1].str
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5097
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5101
		{
			yyVAL.str = yyDollar[2].str
		}
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5107
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5119
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5126
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5133
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5140
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5147
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5156
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5162
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5168
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5172
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5176
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5180
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5184
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5189
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5196
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5200
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5204
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5213
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5218
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5222
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5238
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5244
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5248
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5252
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5256
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5260
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5264
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5268
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5272
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5276
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5280
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5284
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5288
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5292
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5298
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5302
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5306
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5310
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5314
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5318
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5322
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5326
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5330
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5334
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5338
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5342
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5347
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5355
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5359
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5363
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5372
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5376
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5380
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5384
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5388
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5397
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5406
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5412
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5416
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5422
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5432
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5449
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5466
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5479
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5492
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5504
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5518
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5533
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5548
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5565
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5580
		{
		}
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5586
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5595
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5603
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5611
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5620
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5629
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5638
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5647
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5656
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5665
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5674
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5683
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5692
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5701
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5710
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5726
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5734
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5742
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5750
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5758
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5767
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5775
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5784
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5793
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5801
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5809
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5818
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5828
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5849
		{
			yyVAL.str = yyDollar[1].str
		}
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5885
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5897
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5911
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5919
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5926
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5933
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5945
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5953
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5964
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5973
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5982
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5990
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6000
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6008
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6016
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6030
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6040
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6059
		{
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6061
		{
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6102
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6112
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6116
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6120
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6126
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6135
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6141
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6145
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6152
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6156
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6160
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6168
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6172
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6176
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6180
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6186
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6190
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6194
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6198
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6202
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6206
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6210
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6214
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6218
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6222
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6230
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6234
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6238
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6242
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6246
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6250
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6254
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6258
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6264
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6268
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6274
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6278
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6285
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6289
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6293
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6299
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6303
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6307
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6311
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6315
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6319
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6323
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6329
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6333
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6337
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6341
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6347
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6351
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6364
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6369
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6373
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6377
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6381
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6395
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6399
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6413
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6419
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6430
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6435
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6441
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6453
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6465
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6477
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6490
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6503
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6516
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6529
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6542
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6555
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6568
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6581
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6594
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6607
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6622
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6645
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6682
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6730
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6747
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6759
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6774
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6794
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6814
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6830
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6843
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6856
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6869
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6882
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6894
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6906
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6918
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6930
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6942
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6954
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6966
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6978
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6990
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7003
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7016
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7033
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7056
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7061
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7067
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7074
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7078
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7083
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7087
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7093
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7099
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7106
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7113
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7122
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7129
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7136
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7145
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7149
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7153
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7159
		{
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7171
		{
			yyVAL.str = ""
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7175
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

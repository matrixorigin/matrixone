// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const LOWER_THAN_SET = 57366
const SET = 57367
const ALL = 57368
const DISTINCT = 57369
const DISTINCTROW = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const INTO = 57375
const DUPLICATE = 57376
const DEFAULT = 57377
const LOCK = 57378
const KEYS = 57379
const VALUES = 57380
const NEXT = 57381
const VALUE = 57382
const SHARE = 57383
const MODE = 57384
const SQL_NO_CACHE = 57385
const SQL_CACHE = 57386
const JOIN = 57387
const STRAIGHT_JOIN = 57388
const LEFT = 57389
const RIGHT = 57390
const INNER = 57391
const OUTER = 57392
const CROSS = 57393
const NATURAL = 57394
const USE = 57395
const FORCE = 57396
const ON = 57397
const USING = 57398
const SUBQUERY_AS_EXPR = 57399
const LOWER_THAN_STRING = 57400
const ID = 57401
const AT_ID = 57402
const AT_AT_ID = 57403
const STRING = 57404
const VALUE_ARG = 57405
const LIST_ARG = 57406
const COMMENT = 57407
const COMMENT_KEYWORD = 57408
const INTEGRAL = 57409
const HEX = 57410
const BIT_LITERAL = 57411
const FLOAT = 57412
const HEXNUM = 57413
const NULL = 57414
const TRUE = 57415
const FALSE = 57416
const LOWER_THAN_CHARSET = 57417
const CHARSET = 57418
const UNIQUE = 57419
const KEY = 57420
const OR = 57421
const PIPE_CONCAT = 57422
const XOR = 57423
const AND = 57424
const NOT = 57425
const BETWEEN = 57426
const CASE = 57427
const WHEN = 57428
const THEN = 57429
const ELSE = 57430
const END = 57431
const LE = 57432
const GE = 57433
const NE = 57434
const NULL_SAFE_EQUAL = 57435
const IS = 57436
const LIKE = 57437
const REGEXP = 57438
const IN = 57439
const ASSIGNMENT = 57440
const SHIFT_LEFT = 57441
const SHIFT_RIGHT = 57442
const DIV = 57443
const MOD = 57444
const UNARY = 57445
const COLLATE = 57446
const BINARY = 57447
const UNDERSCORE_BINARY = 57448
const INTERVAL = 57449
const BEGIN = 57450
const START = 57451
const TRANSACTION = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const WORK = 57455
const CONSISTENT = 57456
const SNAPSHOT = 57457
const CHAIN = 57458
const NO = 57459
const RELEASE = 57460
const PRIORITY = 57461
const QUICK = 57462
const BIT = 57463
const TINYINT = 57464
const SMALLINT = 57465
const MEDIUMINT = 57466
const INT = 57467
const INTEGER = 57468
const BIGINT = 57469
const INTNUM = 57470
const REAL = 57471
const DOUBLE = 57472
const FLOAT_TYPE = 57473
const DECIMAL = 57474
const NUMERIC = 57475
const DECIMAL_VALUE = 57476
const TIME = 57477
const TIMESTAMP = 57478
const DATETIME = 57479
const YEAR = 57480
const CHAR = 57481
const VARCHAR = 57482
const BOOL = 57483
const CHARACTER = 57484
const VARBINARY = 57485
const NCHAR = 57486
const TEXT = 57487
const TINYTEXT = 57488
const MEDIUMTEXT = 57489
const LONGTEXT = 57490
const BLOB = 57491
const TINYBLOB = 57492
const MEDIUMBLOB = 57493
const LONGBLOB = 57494
const JSON = 57495
const ENUM = 57496
const GEOMETRY = 57497
const POINT = 57498
const LINESTRING = 57499
const POLYGON = 57500
const GEOMETRYCOLLECTION = 57501
const MULTIPOINT = 57502
const MULTILINESTRING = 57503
const MULTIPOLYGON = 57504
const INT1 = 57505
const INT2 = 57506
const INT3 = 57507
const INT4 = 57508
const INT8 = 57509
const SQL_SMALL_RESULT = 57510
const SQL_BIG_RESULT = 57511
const SQL_BUFFER_RESULT = 57512
const LOW_PRIORITY = 57513
const HIGH_PRIORITY = 57514
const DELAYED = 57515
const CREATE = 57516
const ALTER = 57517
const DROP = 57518
const RENAME = 57519
const ANALYZE = 57520
const ADD = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const CONSTRAINT = 57531
const SPATIAL = 57532
const FULLTEXT = 57533
const FOREIGN = 57534
const KEY_BLOCK_SIZE = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const MAXVALUE = 57544
const PARTITION = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const STATUS = 57551
const VARIABLES = 57552
const ROLE = 57553
const PROXY = 57554
const AVG_ROW_LENGTH = 57555
const STORAGE = 57556
const DISK = 57557
const MEMORY = 57558
const CHECKSUM = 57559
const COMPRESSION = 57560
const DATA = 57561
const DIRECTORY = 57562
const DELAY_KEY_WRITE = 57563
const ENCRYPTION = 57564
const ENGINE = 57565
const MAX_ROWS = 57566
const MIN_ROWS = 57567
const PACK_KEYS = 57568
const ROW_FORMAT = 57569
const STATS_AUTO_RECALC = 57570
const STATS_PERSISTENT = 57571
const STATS_SAMPLE_PAGES = 57572
const DYNAMIC = 57573
const COMPRESSED = 57574
const REDUNDANT = 57575
const COMPACT = 57576
const FIXED = 57577
const COLUMN_FORMAT = 57578
const AUTO_RANDOM = 57579
const RESTRICT = 57580
const CASCADE = 57581
const ACTION = 57582
const PARTIAL = 57583
const SIMPLE = 57584
const CHECK = 57585
const ENFORCED = 57586
const RANGE = 57587
const LIST = 57588
const ALGORITHM = 57589
const LINEAR = 57590
const PARTITIONS = 57591
const SUBPARTITION = 57592
const SUBPARTITIONS = 57593
const TYPE = 57594
const ANY = 57595
const SOME = 57596
const EXTERNAL = 57597
const LOCALFILE = 57598
const URL = 57599
const PREPARE = 57600
const DEALLOCATE = 57601
const PROPERTIES = 57602
const PARSER = 57603
const VISIBLE = 57604
const INVISIBLE = 57605
const BTREE = 57606
const HASH = 57607
const RTREE = 57608
const BSI = 57609
const ZONEMAP = 57610
const LEADING = 57611
const BOTH = 57612
const TRAILING = 57613
const UNKNOWN = 57614
const EXPIRE = 57615
const ACCOUNT = 57616
const UNLOCK = 57617
const DAY = 57618
const NEVER = 57619
const SECOND = 57620
const ASCII = 57621
const COALESCE = 57622
const COLLATION = 57623
const HOUR = 57624
const MICROSECOND = 57625
const MINUTE = 57626
const MONTH = 57627
const QUARTER = 57628
const REPEAT = 57629
const REVERSE = 57630
const ROW_COUNT = 57631
const WEEK = 57632
const REVOKE = 57633
const FUNCTION = 57634
const PRIVILEGES = 57635
const TABLESPACE = 57636
const EXECUTE = 57637
const SUPER = 57638
const GRANT = 57639
const OPTION = 57640
const REFERENCES = 57641
const REPLICATION = 57642
const SLAVE = 57643
const CLIENT = 57644
const USAGE = 57645
const RELOAD = 57646
const FILE = 57647
const TEMPORARY = 57648
const ROUTINE = 57649
const EVENT = 57650
const SHUTDOWN = 57651
const NULLX = 57652
const AUTO_INCREMENT = 57653
const APPROXNUM = 57654
const SIGNED = 57655
const UNSIGNED = 57656
const ZEROFILL = 57657
const ADMIN_NAME = 57658
const RANDOM = 57659
const SUSPEND = 57660
const ATTRIBUTE = 57661
const HISTORY = 57662
const REUSE = 57663
const CURRENT = 57664
const OPTIONAL = 57665
const FAILED_LOGIN_ATTEMPTS = 57666
const PASSWORD_LOCK_TIME = 57667
const UNBOUNDED = 57668
const SECONDARY = 57669
const USER = 57670
const IDENTIFIED = 57671
const CIPHER = 57672
const ISSUER = 57673
const X509 = 57674
const SUBJECT = 57675
const SAN = 57676
const REQUIRE = 57677
const SSL = 57678
const NONE = 57679
const PASSWORD = 57680
const MAX_QUERIES_PER_HOUR = 57681
const MAX_UPDATES_PER_HOUR = 57682
const MAX_CONNECTIONS_PER_HOUR = 57683
const MAX_USER_CONNECTIONS = 57684
const FORMAT = 57685
const VERBOSE = 57686
const CONNECTION = 57687
const LOAD = 57688
const INFILE = 57689
const TERMINATED = 57690
const OPTIONALLY = 57691
const ENCLOSED = 57692
const ESCAPED = 57693
const STARTING = 57694
const LINES = 57695
const ROWS = 57696
const DATABASES = 57697
const TABLES = 57698
const EXTENDED = 57699
const FULL = 57700
const PROCESSLIST = 57701
const FIELDS = 57702
const COLUMNS = 57703
const OPEN = 57704
const ERRORS = 57705
const WARNINGS = 57706
const INDEXES = 57707
const SCHEMAS = 57708
const NAMES = 57709
const GLOBAL = 57710
const SESSION = 57711
const ISOLATION = 57712
const LEVEL = 57713
const READ = 57714
const WRITE = 57715
const ONLY = 57716
const REPEATABLE = 57717
const COMMITTED = 57718
const UNCOMMITTED = 57719
const SERIALIZABLE = 57720
const LOCAL = 57721
const CURRENT_TIMESTAMP = 57722
const DATABASE = 57723
const CURRENT_TIME = 57724
const LOCALTIME = 57725
const LOCALTIMESTAMP = 57726
const UTC_DATE = 57727
const UTC_TIME = 57728
const UTC_TIMESTAMP = 57729
const REPLACE = 57730
const CONVERT = 57731
const SEPARATOR = 57732
const CURRENT_DATE = 57733
const CURRENT_USER = 57734
const CURRENT_ROLE = 57735
const SECOND_MICROSECOND = 57736
const MINUTE_MICROSECOND = 57737
const MINUTE_SECOND = 57738
const HOUR_MICROSECOND = 57739
const HOUR_SECOND = 57740
const HOUR_MINUTE = 57741
const DAY_MICROSECOND = 57742
const DAY_SECOND = 57743
const DAY_MINUTE = 57744
const DAY_HOUR = 57745
const YEAR_MONTH = 57746
const SQL_TSI_HOUR = 57747
const SQL_TSI_DAY = 57748
const SQL_TSI_WEEK = 57749
const SQL_TSI_MONTH = 57750
const SQL_TSI_QUARTER = 57751
const SQL_TSI_YEAR = 57752
const SQL_TSI_SECOND = 57753
const SQL_TSI_MINUTE = 57754
const RECURSIVE = 57755
const CONFIG = 57756
const MATCH = 57757
const AGAINST = 57758
const BOOLEAN = 57759
const LANGUAGE = 57760
const WITH = 57761
const QUERY = 57762
const EXPANSION = 57763
const ADDDATE = 57764
const BIT_AND = 57765
const BIT_OR = 57766
const BIT_XOR = 57767
const CAST = 57768
const COUNT = 57769
const APPROX_COUNT_DISTINCT = 57770
const APPROX_PERCENTILE = 57771
const CURDATE = 57772
const CURTIME = 57773
const DATE_ADD = 57774
const DATE_SUB = 57775
const EXTRACT = 57776
const GROUP_CONCAT = 57777
const MAX = 57778
const MID = 57779
const MIN = 57780
const NOW = 57781
const POSITION = 57782
const SESSION_USER = 57783
const STD = 57784
const STDDEV = 57785
const STDDEV_POP = 57786
const STDDEV_SAMP = 57787
const SUBDATE = 57788
const SUBSTR = 57789
const SUBSTRING = 57790
const SUM = 57791
const SYSDATE = 57792
const SYSTEM_USER = 57793
const TRANSLATE = 57794
const TRIM = 57795
const VARIANCE = 57796
const VAR_POP = 57797
const VAR_SAMP = 57798
const AVG = 57799
const JSON_EXTRACT = 57800
const ROW = 57801
const OUTFILE = 57802
const HEADER = 57803
const MAX_FILE_SIZE = 57804
const FORCE_QUOTE = 57805
const UNUSED = 57806

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7222

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	21, 433,
	-2, 414,
	-1, 68,
	199, 588,
	-2, 630,
	-1, 85,
	226, 291,
	227, 291,
	-2, 312,
	-1, 366,
	21, 434,
	-2, 397,
	-1, 442,
	94, 1314,
	105, 1314,
	124, 1314,
	-2, 1125,
	-1, 472,
	21, 434,
	-2, 397,
	-1, 633,
	58, 1465,
	-2, 1472,
	-1, 641,
	58, 1466,
	-2, 1480,
	-1, 643,
	58, 1462,
	-2, 1482,
	-1, 644,
	58, 1463,
	-2, 1483,
	-1, 649,
	58, 1464,
	-2, 1489,
	-1, 650,
	58, 1467,
	-2, 1490,
	-1, 651,
	58, 1468,
	-2, 1491,
	-1, 652,
	58, 887,
	-2, 1492,
	-1, 653,
	58, 888,
	-2, 1493,
	-1, 654,
	58, 889,
	-2, 1494,
	-1, 656,
	58, 1469,
	-2, 1496,
	-1, 657,
	58, 907,
	-2, 1497,
	-1, 658,
	58, 906,
	-2, 1498,
	-1, 661,
	58, 1470,
	-2, 1501,
	-1, 662,
	58, 1471,
	-2, 1502,
	-1, 668,
	58, 969,
	-2, 1314,
	-1, 669,
	58, 978,
	-2, 1339,
	-1, 670,
	58, 982,
	-2, 1378,
	-1, 671,
	58, 993,
	-2, 1438,
	-1, 672,
	58, 995,
	-2, 1448,
	-1, 673,
	58, 983,
	-2, 1453,
	-1, 674,
	58, 991,
	-2, 1457,
	-1, 675,
	58, 972,
	-2, 1458,
	-1, 833,
	1, 614,
	60, 614,
	482, 614,
	-2, 621,
	-1, 973,
	21, 433,
	-2, 815,
	-1, 1020,
	124, 1135,
	-2, 1133,
	-1, 1022,
	124, 532,
	-2, 1130,
	-1, 1023,
	124, 533,
	-2, 1131,
	-1, 1234,
	1, 615,
	60, 615,
	482, 615,
	-2, 621,
	-1, 1322,
	58, 1037,
	-2, 1455,
	-1, 1323,
	58, 1038,
	-2, 1456,
	-1, 1491,
	56, 354,
	59, 354,
	-2, 721,
	-1, 1811,
	79, 621,
	120, 621,
	156, 621,
	159, 621,
	-2, 669,
	-1, 1813,
	260, 782,
	-2, 763,
	-1, 1843,
	56, 354,
	59, 354,
	-2, 722,
	-1, 1920,
	79, 621,
	120, 621,
	156, 621,
	159, 621,
	-2, 670,
	-1, 1948,
	260, 782,
	-2, 764,
	-1, 2346,
	59, 642,
	60, 642,
	-2, 621,
	-1, 2350,
	59, 642,
	60, 642,
	-2, 621,
	-1, 2364,
	59, 646,
	60, 646,
	-2, 621,
	-1, 2369,
	59, 647,
	60, 647,
	-2, 621,
}

const yyPrivate = 57344

const yyLast = 21474

var yyAct = [...]int{
	816, 1325, 2352, 2358, 2350, 2349, 2327, 808, 2195, 678,
	1985, 2316, 2276, 1282, 1960, 697, 2260, 2167, 2233, 2171,
	2148, 2261, 1908, 1916, 1218, 1983, 903, 600, 102, 1984,
	1805, 2155, 2008, 319, 325, 609, 325, 1326, 1278, 1906,
	367, 1864, 804, 366, 676, 1968, 1836, 1634, 868, 105,
	1467, 1949, 329, 1997, 838, 1494, 440, 811, 1967, 1630,
	550, 323, 22, 1857, 1875, 1867, 632, 539, 1506, 888,
	862, 395, 1277, 709, 63, 1879, 101, 1639, 1635, 1817,
	1707, 1197, 1192, 1002, 1697, 1715, 1569, 677, 1686, 1649,
	1241, 467, 1017, 441, 1645, 335, 1020, 1628, 1193, 1011,
	1003, 102, 1409, 881, 311, 1395, 63, 62, 1532, 1313,
	687, 865, 1012, 1505, 847, 1264, 863, 1469, 322, 15,
	320, 6, 552, 1464, 1924, 1235, 1240, 3, 321, 5,
	1194, 802, 807, 818, 443, 1324, 679, 445, 826, 1327,
	1339, 624, 397, 849, 848, 312, 482, 909, 906, 469,
	1204, 885, 1227, 794, 1224, 432, 521, 1280, 940, 822,
	22, 801, 448, 30, 1304, 855, 825, 315, 447, 394,
	576, 338, 63, 12, 7, 337, 1910, 4, 2241, 1211,
	98, 2015, 1912, 1201, 592, 1804, 813, 1005, 324, 840,
	623, 610, 578, 2222, 2212, 30, 1976, 96, 501, 1450,
	537, 1442, 446, 520, 93, 97, 332, 27, 87, 69,
	1198, 1456, 1209, 384, 97, 870, 871, 15, 97, 6,
	27, 87, 69, 416, 327, 97, 466, 5, 97, 97,
	27, 87, 69, 851, 569, 310, 570, 1466, 795, 579,
	799, 810, 1595, 92, 97, 518, 27, 87, 69, 514,
	81, 433, 97, 94, 2248, 453, 452, 454, 563, 564,
	779, 30, 94, 2246, 798, 561, 94, 759, 560, 563,
	564, 51, 402, 94, 2237, 2238, 94, 94, 392, 2006,
	756, 1465, 2264, 2265, 1622, 451, 2009, 2010, 2011, 2012,
	2104, 2101, 94, 1623, 2018, 1624, 1806, 812, 485, 1437,
	758, 476, 2170, 882, 1800, 1825, 584, 1205, 417, 1981,
	1832, 1658, 1225, 475, 1994, 585, 1660, 1650, 790, 2076,
	1863, 1862, 505, 474, 1965, 1616, 1614, 325, 509, 102,
	386, 515, 456, 1447, 2221, 504, 516, 517, 2079, 1978,
	383, 382, 363, 88, 89, 364, 90, 91, 449, 797,
	2274, 471, 473, 326, 445, 472, 510, 878, 1655, 1656,
	334, 377, 418, 2250, 2070, 2343, 368, 2156, 2157, 2158,
	2160, 2159, 2359, 1657, 2283, 2193, 2194, 492, 2197, 2064,
	2197, 1537, 1317, 1318, 2245, 2290, 68, 2219, 95, 2337,
	63, 63, 447, 363, 395, 2033, 364, 2169, 2032, 2263,
	365, 2203, 450, 2224, 2225, 380, 85, 2252, 2253, 68,
	86, 95, 1478, 49, 485, 1210, 1480, 1481, 1482, 1483,
	588, 513, 512, 2360, 375, 562, 446, 494, 496, 85,
	80, 79, 538, 1472, 571, 441, 441, 441, 796, 507,
	604, 604, 526, 2354, 541, 542, 1654, 544, 559, 558,
	2366, 508, 511, 2328, 1570, 455, 381, 325, 627, 627,
	444, 2021, 540, 487, 486, 468, 333, 2099, 606, 577,
	1443, 761, 1291, 506, 501, 543, 1202, 820, 376, 30,
	30, 2055, 602, 602, 478, 479, 1619, 545, 1643, 777,
	424, 328, 547, 82, 83, 626, 626, 1316, 1317, 1318,
	1525, 604, 493, 604, 475, 873, 2059, 762, 1314, 389,
	390, 391, 1859, 1858, 809, 490, 1287, 2319, 612, 582,
	554, 874, 311, 1286, 587, 872, 59, 566, 567, 757,
	84, 385, 60, 420, 1652, 423, 1289, 1288, 2325, 426,
	425, 63, 604, 555, 421, 833, 580, 581, 2280, 395,
	1846, 786, 839, 1671, 63, 1625, 102, 829, 1534, 523,
	2223, 2353, 815, 63, 2251, 819, 525, 1495, 1445, 480,
	856, 856, 2168, 563, 564, 1199, 604, 102, 1199, 487,
	486, 61, 563, 564, 1651, 1444, 1436, 1199, 2077, 1661,
	441, 854, 604, 883, 1617, 1536, 1431, 1256, 1212, 1216,
	1188, 806, 1909, 1200, 844, 821, 1644, 921, 785, 897,
	782, 2365, 1977, 834, 1982, 1451, 500, 604, 781, 902,
	102, 102, 598, 599, 574, 575, 2320, 918, 788, 763,
	889, 70, 765, 803, 586, 907, 889, 889, 828, 858,
	70, 842, 611, 30, 70, 622, 791, 905, 768, 754,
	608, 70, 30, 310, 70, 70, 615, 616, 617, 618,
	619, 620, 621, 784, 783, 764, 922, 780, 904, 904,
	70, 908, 549, 805, 827, 800, 565, 444, 70, 568,
	814, 845, 846, 975, 879, 877, 595, 596, 597, 1471,
	884, 772, 773, 495, 2057, 1780, 488, 470, 2056, 1831,
	896, 1640, 1643, 2060, 2061, 1653, 958, 850, 827, 1675,
	1611, 1315, 553, 901, 1329, 1328, 556, 835, 836, 974,
	1754, 1751, 1752, 1753, 1613, 591, 1785, 982, 1784, 1783,
	1781, 459, 464, 465, 859, 2314, 857, 2303, 1475, 1476,
	1468, 861, 860, 1196, 843, 880, 984, 2317, 2318, 803,
	894, 895, 1474, 593, 408, 973, 852, 853, 2207, 1009,
	1009, 1014, 408, 2107, 594, 1684, 898, 1952, 1620, 1775,
	976, 977, 978, 979, 1612, 899, 1433, 776, 900, 1022,
	891, 892, 893, 1293, 477, 775, 1410, 2336, 1782, 446,
	839, 914, 387, 1195, 604, 1486, 590, 422, 2066, 980,
	1334, 1955, 1410, 2027, 1575, 557, 413, 1950, 1462, 998,
	824, 2133, 1963, 1964, 2065, 1023, 1821, 1816, 1951, 948,
	1644, 102, 102, 917, 914, 1637, 1764, 2335, 2050, 1638,
	1641, 410, 447, 2144, 409, 102, 1242, 2142, 2348, 410,
	1337, 2333, 409, 63, 1190, 2300, 1646, 2140, 408, 1402,
	1338, 319, 1956, 961, 962, 963, 964, 965, 958, 1258,
	2284, 2181, 907, 1400, 1401, 1399, 446, 2178, 2143, 1221,
	1223, 1008, 2141, 2130, 992, 915, 916, 917, 914, 1246,
	419, 1642, 2139, 1238, 1777, 915, 916, 917, 914, 427,
	461, 462, 463, 915, 916, 917, 914, 604, 908, 1979,
	1829, 2177, 1001, 2150, 1786, 1787, 2128, 2127, 2129, 1360,
	2126, 627, 1557, 102, 1487, 2123, 2117, 1187, 1283, 1015,
	1309, 1016, 1311, 1021, 2114, 410, 2113, 2016, 409, 889,
	889, 889, 30, 2002, 1980, 1830, 1962, 1186, 1636, 1298,
	1335, 1336, 2001, 1285, 2000, 1996, 1191, 1995, 626, 1828,
	1659, 1607, 1305, 1306, 1307, 1308, 766, 1556, 1236, 2273,
	407, 2256, 1580, 1958, 1252, 2149, 1254, 1917, 411, 363,
	1250, 1290, 364, 2239, 1332, 998, 2201, 1284, 1230, 915,
	916, 917, 914, 1303, 1544, 1957, 1959, 1374, 830, 831,
	832, 1319, 2200, 2188, 2176, 1419, 1253, 1251, 1255, 850,
	2131, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1260, 1259, 1586, 1404, 1405, 2124, 2120,
	2364, 1411, 2119, 1414, 2134, 2136, 2137, 2138, 2135, 915,
	916, 917, 914, 2118, 1247, 1248, 1249, 915, 916, 917,
	914, 1421, 2078, 1294, 1295, 1296, 2052, 1356, 1965, 1353,
	2017, 2013, 1302, 1355, 1352, 1354, 1358, 1359, 1403, 2341,
	1953, 1357, 957, 956, 966, 967, 959, 960, 961, 962,
	963, 964, 965, 958, 1330, 1331, 1998, 1333, 1915, 1397,
	969, 1913, 972, 1369, 1370, 1371, 1372, 1373, 1839, 1827,
	1379, 1380, 1381, 1382, 1826, 1823, 970, 971, 968, 1301,
	957, 956, 966, 967, 959, 960, 961, 962, 963, 964,
	965, 958, 959, 960, 961, 962, 963, 964, 965, 958,
	1802, 1413, 1415, 1416, 1793, 1412, 1648, 2302, 1618, 1528,
	1454, 1420, 1424, 1422, 1219, 1220, 725, 724, 1663, 1423,
	1213, 404, 994, 406, 416, 955, 954, 767, 403, 401,
	400, 412, 405, 1901, 414, 415, 925, 926, 927, 928,
	929, 930, 931, 923, 823, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1363, 1364, 1365, 1366,
	1367, 1368, 1361, 1362, 2228, 915, 916, 917, 914, 1438,
	1900, 1425, 2227, 370, 371, 372, 373, 2208, 1215, 604,
	396, 604, 2092, 604, 1578, 2088, 369, 1577, 475, 1540,
	2372, 2087, 915, 916, 917, 914, 1904, 1459, 1452, 966,
	967, 959, 960, 961, 962, 963, 964, 965, 958, 604,
	915, 916, 917, 914, 1584, 1214, 1540, 1540, 1583, 1902,
	1491, 1540, 2371, 1448, 1899, 2257, 1497, 614, 2363, 2362,
	1207, 2344, 1457, 1458, 1891, 819, 2174, 1502, 915, 916,
	917, 914, 475, 102, 102, 102, 102, 915, 916, 917,
	914, 1856, 1507, 2097, 475, 102, 1522, 1840, 915, 916,
	917, 914, 1461, 1811, 1507, 1449, 2340, 2339, 1489, 1795,
	2334, 1696, 604, 1485, 1676, 915, 916, 917, 914, 1587,
	102, 102, 1207, 2331, 1585, 22, 956, 966, 967, 959,
	960, 961, 962, 963, 964, 965, 958, 63, 1523, 1207,
	2330, 1582, 1441, 2279, 2278, 1581, 1439, 2081, 2271, 1283,
	1446, 803, 2075, 2081, 2266, 1545, 957, 956, 966, 967,
	959, 960, 961, 962, 963, 964, 965, 958, 1530, 1531,
	1579, 1460, 1300, 2254, 915, 916, 917, 914, 1549, 1236,
	1484, 827, 15, 1546, 6, 1541, 1490, 1477, 1542, 1543,
	1501, 1496, 5, 841, 1526, 1499, 1539, 1500, 1504, 1508,
	1509, 1510, 1511, 1503, 2243, 2242, 1521, 1520, 1519, 2081,
	2217, 2081, 2216, 2081, 2215, 2081, 2214, 1529, 2206, 2205,
	1564, 2096, 2095, 2003, 2094, 2093, 30, 1551, 1552, 1553,
	1554, 1555, 841, 1559, 2090, 2091, 1274, 1560, 1561, 1562,
	1563, 2090, 2089, 1524, 1535, 915, 916, 917, 914, 1887,
	1009, 1538, 1599, 1009, 1886, 1492, 1602, 1245, 2086, 1418,
	1498, 2081, 2080, 604, 1417, 1572, 1567, 1568, 1576, 613,
	1605, 915, 916, 917, 914, 1683, 915, 916, 917, 914,
	1885, 1588, 1540, 1769, 475, 889, 1540, 1755, 2361, 2311,
	1670, 889, 973, 1493, 1633, 1540, 1548, 1540, 1547, 1493,
	102, 1442, 915, 916, 917, 914, 1606, 1426, 1566, 475,
	1596, 1245, 1440, 102, 1242, 1812, 1674, 1594, 2309, 1633,
	1435, 1434, 63, 1601, 1796, 1565, 446, 1429, 1428, 1589,
	1397, 1574, 1245, 1244, 1598, 957, 956, 966, 967, 959,
	960, 961, 962, 963, 964, 965, 958, 1591, 1664, 1603,
	1274, 1615, 1600, 1604, 1590, 1700, 1665, 1666, 1667, 1610,
	501, 1609, 1597, 1771, 957, 956, 966, 967, 959, 960,
	961, 962, 963, 964, 965, 958, 1207, 1206, 770, 769,
	1432, 1407, 1300, 1672, 957, 956, 966, 967, 959, 960,
	961, 962, 963, 964, 965, 958, 1229, 1273, 1702, 604,
	1792, 1669, 1198, 1695, 1673, 604, 1668, 1217, 1756, 1189,
	548, 2069, 1774, 1903, 1681, 1762, 1763, 792, 1680, 1691,
	1228, 499, 915, 916, 917, 914, 1788, 912, 793, 604,
	1768, 1274, 1790, 1776, 915, 916, 917, 914, 1789, 498,
	102, 602, 97, 499, 1679, 589, 1700, 602, 102, 2313,
	2307, 1791, 915, 916, 917, 914, 2291, 1815, 1773, 957,
	956, 966, 967, 959, 960, 961, 962, 963, 964, 965,
	958, 910, 501, 1770, 2288, 2286, 2180, 2165, 1772, 2153,
	2151, 2146, 2108, 1779, 1866, 2073, 604, 604, 1801, 2072,
	94, 102, 1843, 2071, 1767, 1794, 1810, 2068, 1232, 1797,
	1766, 2063, 2048, 97, 475, 551, 87, 69, 1809, 1677,
	1678, 1798, 1799, 1835, 1507, 1682, 915, 916, 917, 914,
	63, 1855, 915, 916, 917, 914, 1876, 1819, 602, 1837,
	1694, 1868, 1880, 1814, 1813, 1765, 1818, 1883, 1818, 1283,
	1820, 1761, 889, 1848, 1873, 1851, 445, 1872, 1853, 1852,
	1845, 94, 1834, 1822, 1398, 94, 1854, 915, 916, 917,
	914, 1842, 1841, 915, 916, 917, 914, 1488, 1463, 1427,
	1292, 1243, 1849, 1000, 1850, 350, 999, 349, 353, 345,
	1870, 1871, 997, 1571, 996, 995, 993, 941, 990, 989,
	987, 341, 986, 1860, 1874, 985, 983, 1878, 953, 952,
	951, 360, 950, 1869, 957, 956, 966, 967, 959, 960,
	961, 962, 963, 964, 965, 958, 949, 947, 946, 1877,
	945, 944, 1888, 2347, 943, 942, 939, 363, 938, 937,
	364, 936, 935, 475, 1921, 1890, 934, 1969, 1971, 1760,
	1969, 1969, 1892, 1633, 933, 1894, 932, 1896, 1881, 789,
	1884, 760, 1759, 503, 889, 475, 1687, 1688, 1889, 491,
	2296, 915, 916, 917, 914, 2294, 2262, 1893, 1690, 1895,
	1897, 1898, 1758, 839, 915, 916, 917, 914, 1757, 1479,
	1975, 1966, 1844, 1970, 1299, 502, 1905, 1693, 1705, 1847,
	1692, 1918, 1946, 1513, 915, 916, 917, 914, 1972, 1973,
	915, 916, 917, 914, 1991, 1518, 1512, 1270, 1271, 1974,
	915, 916, 917, 914, 1430, 1516, 1514, 1237, 1988, 1845,
	1517, 1515, 1219, 1220, 50, 1453, 1704, 1992, 957, 956,
	966, 967, 959, 960, 961, 962, 963, 964, 965, 958,
	522, 29, 28, 2023, 1703, 1627, 1226, 1999, 915, 916,
	917, 914, 497, 2019, 1626, 307, 343, 342, 346, 2004,
	1406, 1276, 837, 2230, 348, 573, 915, 916, 917, 914,
	1329, 1328, 308, 309, 534, 535, 352, 604, 532, 533,
	530, 531, 915, 916, 917, 914, 102, 528, 529, 572,
	344, 1185, 524, 2024, 2025, 1971, 2028, 2029, 2030, 2031,
	2308, 2026, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 1966, 2051, 2185, 1837,
	2049, 2183, 2111, 2053, 1266, 1269, 1270, 1271, 1267, 2109,
	1268, 1272, 2106, 2105, 2067, 1261, 370, 371, 372, 373,
	2074, 2103, 1914, 1808, 2083, 2112, 1807, 2082, 2084, 369,
	2085, 1989, 1990, 445, 1699, 1266, 1269, 1270, 1271, 1267,
	2102, 1268, 1272, 527, 369, 1698, 1533, 2145, 841, 2298,
	2297, 875, 1608, 1550, 489, 2297, 2298, 347, 351, 354,
	1275, 355, 356, 398, 35, 357, 358, 359, 1, 475,
	361, 362, 475, 475, 475, 2125, 1203, 2115, 2116, 1824,
	1662, 2110, 475, 2121, 2122, 1647, 1283, 546, 388, 1375,
	536, 774, 458, 63, 2154, 484, 771, 2162, 2163, 2164,
	483, 481, 2161, 1408, 1340, 710, 1004, 2173, 1010, 2190,
	2147, 2172, 2229, 2275, 2179, 2232, 604, 604, 787, 696,
	2098, 2175, 1621, 2005, 2100, 2007, 1455, 2184, 1907, 2186,
	2187, 2182, 1208, 2191, 519, 1592, 1593, 722, 713, 988,
	715, 755, 460, 2198, 2199, 712, 1833, 102, 1473, 374,
	457, 399, 1993, 1803, 475, 1861, 1882, 1865, 602, 602,
	2357, 2346, 2326, 2306, 2196, 2342, 475, 2244, 2289, 2282,
	2192, 2020, 339, 2204, 876, 583, 430, 2166, 340, 2213,
	2220, 2236, 2152, 378, 1231, 379, 1234, 1233, 1320, 2209,
	924, 2218, 1396, 991, 981, 904, 2235, 630, 1573, 2226,
	686, 680, 1470, 1961, 1527, 34, 33, 32, 913, 2240,
	1018, 711, 104, 1257, 1019, 2189, 2247, 2249, 2014, 2234,
	695, 694, 693, 692, 691, 1265, 1263, 2255, 1262, 867,
	866, 911, 2259, 2258, 2267, 2268, 2269, 2270, 2210, 2211,
	2277, 1911, 2062, 2132, 2281, 2058, 2054, 2202, 1920, 1919,
	1947, 1948, 1954, 1714, 1710, 1712, 1713, 1711, 1778, 1706,
	1631, 1632, 1629, 1689, 1685, 1006, 1013, 817, 99, 864,
	1987, 11, 2272, 10, 778, 2292, 9, 14, 2295, 21,
	2236, 2305, 2293, 20, 19, 58, 2299, 475, 2301, 475,
	57, 2285, 56, 2287, 2310, 2235, 2312, 809, 2304, 809,
	55, 18, 8, 54, 53, 52, 17, 16, 47, 48,
	2321, 45, 2277, 44, 475, 2322, 43, 2329, 42, 41,
	40, 2332, 39, 46, 809, 38, 2338, 37, 36, 67,
	66, 65, 64, 23, 24, 25, 2315, 26, 77, 76,
	78, 2324, 74, 72, 75, 73, 71, 2345, 31, 13,
	2, 0, 0, 2356, 0, 0, 2355, 0, 0, 0,
	0, 0, 0, 2367, 0, 0, 0, 2368, 2370, 2369,
	1130, 1173, 2356, 0, 1118, 0, 1080, 1132, 1054, 1069,
	1140, 1070, 1071, 1105, 1033, 1089, 229, 1067, 0, 1121,
	1025, 1057, 1058, 1027, 1064, 1028, 1055, 1082, 174, 1053,
	1092, 199, 1138, 0, 0, 258, 213, 0, 0, 1085,
	1123, 1087, 1110, 1079, 1106, 1041, 1099, 1133, 1068, 1103,
	1134, 0, 0, 0, 0, 0, 830, 831, 832, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 1102,
	1127, 1066, 0, 159, 1131, 1086, 1104, 0, 0, 1026,
	1100, 0, 1031, 1034, 1139, 1125, 1061, 1062, 0, 0,
	0, 0, 0, 0, 0, 1083, 1088, 1107, 1076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1059, 0,
	1096, 0, 0, 0, 1036, 1032, 0, 1081, 0, 148,
	263, 277, 157, 254, 290, 162, 261, 153, 228, 250,
	0, 1172, 150, 275, 260, 210, 193, 194, 149, 0,
	245, 172, 185, 169, 226, 0, 1129, 302, 168, 293,
	1035, 285, 152, 1167, 284, 225, 272, 276, 211, 205,
	151, 274, 209, 204, 197, 176, 189, 237, 203, 238,
	190, 215, 214, 216, 1151, 1152, 1153, 1154, 1155, 1163,
	1164, 0, 1168, 1169, 1170, 1040, 0, 1060, 1108, 0,
	1024, 1116, 1124, 1078, 287, 1126, 1075, 1074, 1158, 0,
	1157, 262, 1159, 1160, 198, 1122, 1056, 1065, 303, 1063,
	248, 231, 1128, 1095, 1171, 246, 201, 273, 239, 278,
	264, 286, 242, 240, 144, 265, 171, 212, 154, 155,
	167, 173, 175, 177, 178, 221, 222, 234, 253, 266,
	267, 268, 170, 163, 247, 164, 187, 165, 145, 255,
	166, 146, 235, 271, 1156, 183, 243, 208, 147, 207,
	236, 270, 269, 294, 300, 301, 305, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 1166, 299, 181, 142, 282, 0, 227, 1119,
	1029, 1039, 1037, 1072, 1097, 1098, 223, 298, 1112, 1115,
	1113, 1141, 251, 0, 0, 0, 0, 0, 192, 233,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 259, 280, 292, 1174, 1175, 1176,
	1177, 0, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 283,
	1073, 1047, 1084, 291, 1050, 1048, 1111, 1049, 1101, 1143,
	217, 218, 219, 220, 184, 0, 161, 1093, 1077, 1144,
	1145, 1146, 1147, 1148, 1149, 1150, 1052, 304, 180, 186,
	0, 188, 160, 232, 182, 289, 195, 1117, 224, 191,
	256, 196, 202, 244, 288, 230, 249, 158, 279, 257,
	206, 1046, 1051, 1045, 1090, 1091, 1135, 1136, 1137, 1109,
	1038, 1120, 1042, 1044, 1043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1114, 0, 1094, 143, 0, 200,
	1142, 241, 179, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 688, 0, 0, 0, 174, 0, 0, 199, 0,
	0, 0, 258, 213, 0, 0, 0, 0, 733, 739,
	1161, 1162, 295, 296, 297, 281, 0, 0, 0, 681,
	0, 0, 0, 631, 725, 724, 698, 707, 0, 0,
	156, 699, 0, 706, 700, 704, 703, 701, 702, 0,
	668, 0, 0, 0, 0, 0, 0, 628, 685, 0,
	689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 682, 683, 0, 0, 0, 0, 719, 0, 684,
	0, 0, 721, 0, 708, 0, 148, 263, 277, 157,
	254, 290, 162, 261, 153, 228, 250, 0, 0, 150,
	275, 260, 210, 193, 194, 149, 0, 245, 172, 185,
	169, 226, 705, 717, 674, 168, 672, 716, 285, 152,
	0, 284, 225, 272, 276, 211, 205, 151, 274, 209,
	204, 197, 176, 189, 237, 203, 238, 190, 215, 214,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 714, 0,
	0, 287, 0, 0, 732, 0, 0, 0, 262, 0,
	0, 198, 0, 0, 0, 675, 0, 248, 231, 742,
	629, 0, 246, 201, 273, 239, 278, 264, 286, 242,
	240, 144, 265, 171, 212, 154, 155, 167, 173, 175,
	177, 178, 221, 222, 234, 253, 266, 267, 268, 170,
	163, 247, 164, 187, 165, 145, 255, 166, 146, 235,
	271, 0, 183, 243, 208, 147, 207, 236, 270, 269,
	294, 300, 301, 305, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1377, 1376, 1378,
	299, 181, 142, 282, 730, 227, 741, 726, 727, 728,
	731, 734, 735, 670, 673, 736, 738, 740, 743, 251,
	0, 0, 0, 0, 0, 192, 233, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 280, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 720, 217, 218, 219,
	220, 669, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 180, 186, 0, 188, 160,
	232, 182, 289, 195, 0, 224, 191, 256, 196, 202,
	244, 288, 230, 249, 158, 279, 257, 206, 749, 729,
	748, 750, 751, 747, 752, 753, 737, 690, 0, 745,
	744, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 200, 0, 241, 179,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 121, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 723, 0, 0, 295,
	296, 297, 281, 97, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 688, 0, 0, 0, 174, 0, 0,
	199, 0, 0, 0, 258, 213, 0, 0, 0, 0,
	733, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 681, 0, 0, 0, 631, 725, 724, 698, 707,
	0, 0, 156, 699, 0, 706, 700, 704, 703, 701,
	702, 0, 668, 0, 0, 0, 0, 0, 0, 628,
	685, 0, 689, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 682, 683, 0, 0, 0, 0, 719,
	0, 684, 0, 0, 721, 0, 708, 0, 148, 263,
	277, 157, 254, 290, 162, 261, 153, 228, 250, 0,
	0, 150, 275, 260, 210, 193, 194, 149, 0, 245,
	172, 185, 169, 226, 705, 717, 674, 168, 672, 716,
	285, 152, 0, 284, 225, 272, 276, 211, 205, 151,
	274, 209, 204, 197, 176, 189, 237, 203, 238, 190,
	215, 214, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	714, 0, 0, 287, 0, 0, 732, 0, 0, 0,
	262, 0, 0, 198, 0, 0, 0, 675, 0, 248,
	231, 742, 629, 0, 246, 201, 273, 239, 278, 264,
	286, 242, 240, 144, 265, 171, 212, 154, 155, 167,
	173, 175, 177, 178, 221, 222, 234, 253, 266, 267,
	268, 170, 163, 247, 164, 187, 165, 145, 255, 166,
	146, 235, 271, 0, 183, 243, 208, 147, 207, 236,
	270, 269, 294, 300, 301, 305, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 181, 142, 282, 730, 227, 741, 726,
	727, 728, 731, 734, 735, 670, 673, 736, 738, 740,
	743, 251, 0, 0, 0, 0, 0, 192, 233, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 280, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 671, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 720, 217,
	218, 219, 220, 669, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 180, 186, 0,
	188, 160, 232, 182, 289, 195, 0, 224, 191, 256,
	196, 202, 244, 288, 230, 249, 158, 279, 257, 206,
	749, 729, 748, 750, 751, 747, 752, 753, 737, 690,
	0, 745, 744, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 200, 70,
	241, 179, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 121, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 723, 718,
	0, 295, 296, 297, 281, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 688, 0, 0,
	0, 174, 890, 0, 199, 0, 0, 0, 258, 213,
	0, 0, 0, 0, 733, 739, 0, 0, 0, 0,
	0, 0, 886, 0, 0, 681, 0, 0, 0, 631,
	725, 724, 698, 707, 0, 0, 156, 699, 0, 706,
	700, 704, 703, 701, 702, 0, 668, 0, 0, 0,
	0, 0, 0, 628, 685, 0, 689, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 682, 683, 0,
	0, 0, 0, 719, 0, 684, 0, 0, 887, 0,
	708, 0, 148, 263, 277, 157, 254, 290, 162, 261,
	153, 228, 250, 0, 0, 150, 275, 260, 210, 193,
	194, 149, 0, 245, 172, 185, 169, 226, 705, 717,
	674, 168, 672, 716, 285, 152, 0, 284, 225, 272,
	276, 211, 205, 151, 274, 209, 204, 197, 176, 189,
	237, 203, 238, 190, 215, 214, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 714, 0, 0, 287, 0, 0,
	732, 0, 0, 0, 262, 0, 0, 198, 0, 0,
	0, 675, 0, 248, 231, 742, 629, 0, 246, 201,
	273, 239, 278, 264, 286, 242, 240, 144, 265, 171,
	212, 154, 155, 167, 173, 175, 177, 178, 221, 222,
	234, 253, 266, 267, 268, 170, 163, 247, 164, 187,
	165, 145, 255, 166, 146, 235, 271, 0, 183, 243,
	208, 147, 207, 236, 270, 269, 294, 300, 301, 305,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 181, 142, 282,
	730, 227, 741, 726, 727, 728, 731, 734, 735, 670,
	673, 736, 738, 740, 743, 251, 0, 0, 0, 0,
	0, 192, 233, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 280, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 720, 217, 218, 219, 220, 669, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 180, 186, 0, 188, 160, 232, 182, 289, 195,
	0, 224, 191, 256, 196, 202, 244, 288, 230, 249,
	158, 279, 257, 206, 749, 729, 748, 750, 751, 747,
	752, 753, 737, 690, 0, 745, 744, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 200, 0, 241, 179, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 121, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 723, 718, 0, 295, 296, 297, 281, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 688, 0, 0, 0, 174, 2323, 0, 199, 0,
	0, 0, 258, 213, 0, 0, 0, 0, 733, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 681,
	0, 0, 0, 631, 725, 724, 698, 707, 0, 0,
	156, 699, 0, 706, 700, 704, 703, 701, 702, 0,
	668, 0, 0, 0, 0, 0, 0, 628, 685, 0,
	689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 682, 683, 0, 0, 0, 0, 719, 0, 684,
	0, 0, 721, 0, 708, 0, 148, 263, 277, 157,
	254, 290, 162, 261, 153, 228, 250, 0, 0, 150,
	275, 260, 210, 193, 194, 149, 0, 245, 172, 185,
	169, 226, 705, 717, 674, 168, 672, 716, 285, 152,
	0, 284, 225, 272, 276, 211, 205, 151, 274, 209,
	204, 197, 176, 189, 237, 203, 238, 190, 215, 214,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 714, 0,
	0, 287, 0, 0, 732, 0, 0, 0, 262, 0,
	0, 198, 0, 0, 0, 675, 0, 248, 231, 742,
	629, 0, 246, 201, 273, 239, 278, 264, 286, 242,
	240, 144, 265, 171, 212, 154, 155, 167, 173, 175,
	177, 178, 221, 222, 234, 253, 266, 267, 268, 170,
	163, 247, 164, 187, 165, 145, 255, 166, 146, 235,
	271, 0, 183, 243, 208, 147, 207, 236, 270, 269,
	294, 300, 301, 305, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 181, 142, 282, 730, 227, 741, 726, 727, 728,
	731, 734, 735, 670, 673, 736, 738, 740, 743, 251,
	0, 0, 0, 0, 0, 192, 233, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 280, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 720, 217, 218, 219,
	220, 669, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 180, 186, 0, 188, 160,
	232, 182, 289, 195, 0, 224, 191, 256, 196, 202,
	244, 288, 230, 249, 158, 279, 257, 206, 749, 729,
	748, 750, 751, 747, 752, 753, 737, 690, 0, 745,
	744, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 200, 0, 241, 179,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 121, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 723, 718, 0, 295,
	296, 297, 281, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 688, 0, 0, 0, 174,
	890, 0, 199, 0, 0, 0, 258, 213, 0, 0,
	0, 0, 733, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 681, 0, 0, 0, 631, 725, 724,
	698, 707, 0, 0, 156, 699, 0, 706, 700, 704,
	703, 701, 702, 0, 668, 0, 0, 0, 0, 0,
	0, 628, 685, 0, 689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 682, 683, 0, 0, 0,
	0, 719, 0, 684, 0, 0, 721, 0, 708, 0,
	148, 263, 277, 157, 254, 290, 162, 261, 153, 228,
	250, 0, 0, 150, 275, 260, 210, 193, 194, 149,
	0, 245, 172, 185, 169, 226, 705, 717, 674, 168,
	672, 716, 285, 152, 0, 284, 225, 272, 276, 211,
	205, 151, 274, 209, 204, 197, 176, 189, 237, 203,
	238, 190, 215, 214, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 714, 0, 0, 287, 0, 0, 732, 0,
	0, 0, 262, 0, 0, 198, 0, 0, 0, 675,
	0, 248, 231, 742, 629, 0, 246, 201, 273, 239,
	278, 264, 286, 242, 240, 144, 265, 171, 212, 154,
	155, 167, 173, 175, 177, 178, 221, 222, 234, 253,
	266, 267, 268, 170, 163, 247, 164, 187, 165, 145,
	255, 166, 146, 235, 271, 0, 183, 243, 208, 147,
	207, 236, 270, 269, 294, 300, 301, 305, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 181, 142, 282, 730, 227,
	741, 726, 727, 728, 731, 734, 735, 670, 673, 736,
	738, 740, 743, 251, 0, 0, 0, 0, 0, 192,
	233, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 280, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	671, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	720, 217, 218, 219, 220, 669, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 180,
	186, 0, 188, 160, 232, 182, 289, 195, 0, 224,
	191, 256, 196, 202, 244, 288, 230, 249, 158, 279,
	257, 206, 749, 729, 748, 750, 751, 747, 752, 753,
	737, 690, 0, 745, 744, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	200, 0, 241, 179, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 121,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	723, 0, 0, 295, 296, 297, 281, 718, 0, 0,
	1558, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 688, 0, 0, 0, 174,
	0, 0, 199, 0, 0, 0, 258, 213, 0, 0,
	0, 0, 733, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 681, 0, 0, 0, 631, 725, 724,
	698, 707, 0, 0, 156, 699, 0, 706, 700, 704,
	703, 701, 702, 0, 668, 0, 0, 0, 0, 0,
	0, 628, 685, 0, 689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 682, 683, 0, 0, 0,
	0, 719, 0, 684, 0, 0, 721, 0, 708, 0,
	148, 263, 277, 157, 254, 290, 162, 261, 153, 228,
	250, 0, 0, 150, 275, 260, 210, 193, 194, 149,
	0, 245, 172, 185, 169, 226, 705, 717, 674, 168,
	672, 716, 285, 152, 0, 284, 225, 272, 276, 211,
	205, 151, 274, 209, 204, 197, 176, 189, 237, 203,
	238, 190, 215, 214, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 714, 0, 0, 287, 0, 0, 732, 0,
	0, 0, 262, 0, 0, 198, 0, 0, 0, 675,
	0, 248, 231, 742, 629, 0, 246, 201, 273, 239,
	278, 264, 286, 242, 240, 144, 265, 171, 212, 154,
	155, 167, 173, 175, 177, 178, 221, 222, 234, 253,
	266, 267, 268, 170, 163, 247, 164, 187, 165, 145,
	255, 166, 146, 235, 271, 0, 183, 243, 208, 147,
	207, 236, 270, 269, 294, 300, 301, 305, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 181, 142, 282, 730, 227,
	741, 726, 727, 728, 731, 734, 735, 670, 673, 736,
	738, 740, 743, 251, 0, 0, 0, 0, 0, 192,
	233, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 280, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	671, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	720, 217, 218, 219, 220, 669, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 180,
	186, 0, 188, 160, 232, 182, 289, 195, 0, 224,
	191, 256, 196, 202, 244, 288, 230, 249, 158, 279,
	257, 206, 749, 729, 748, 750, 751, 747, 752, 753,
	737, 690, 0, 745, 744, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	200, 0, 241, 179, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 121,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	723, 718, 0, 295, 296, 297, 281, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 688,
	0, 0, 0, 174, 0, 0, 199, 0, 0, 0,
	258, 213, 0, 0, 0, 0, 733, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 681, 0, 0,
	0, 631, 725, 724, 698, 707, 0, 0, 156, 699,
	0, 706, 700, 704, 703, 701, 702, 0, 668, 0,
	0, 0, 0, 0, 0, 628, 685, 0, 689, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 682,
	683, 625, 0, 0, 0, 719, 0, 684, 0, 0,
	721, 0, 708, 0, 148, 263, 277, 157, 254, 290,
	162, 261, 153, 228, 250, 0, 0, 150, 275, 260,
	210, 193, 194, 149, 0, 245, 172, 185, 169, 226,
	705, 717, 674, 168, 672, 716, 285, 152, 0, 284,
	225, 272, 276, 211, 205, 151, 274, 209, 204, 197,
	176, 189, 237, 203, 238, 190, 215, 214, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 714, 0, 0, 287,
	0, 0, 732, 0, 0, 0, 262, 0, 0, 198,
	0, 0, 0, 675, 0, 248, 231, 742, 629, 0,
	246, 201, 273, 239, 278, 264, 286, 242, 240, 144,
	265, 171, 212, 154, 155, 167, 173, 175, 177, 178,
	221, 222, 234, 253, 266, 267, 268, 170, 163, 247,
	164, 187, 165, 145, 255, 166, 146, 235, 271, 0,
	183, 243, 208, 147, 207, 236, 270, 269, 294, 300,
	301, 305, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 181,
	142, 282, 730, 227, 741, 726, 727, 728, 731, 734,
	735, 670, 673, 736, 738, 740, 743, 251, 0, 0,
	0, 0, 0, 192, 233, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	280, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 720, 217, 218, 219, 220, 669,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 180, 186, 0, 188, 160, 232, 182,
	289, 195, 0, 224, 191, 256, 196, 202, 244, 288,
	230, 249, 158, 279, 257, 206, 749, 729, 748, 750,
	751, 747, 752, 753, 737, 690, 0, 745, 744, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 200, 0, 241, 179, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 121, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 723, 718, 0, 295, 296, 297,
	281, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 688, 0, 0, 0, 174, 0, 0,
	199, 0, 0, 0, 258, 213, 0, 0, 0, 0,
	733, 739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 681, 0, 0, 0, 631, 725, 724, 698, 707,
	0, 0, 156, 699, 0, 706, 700, 704, 703, 701,
	702, 0, 668, 0, 0, 0, 0, 0, 0, 628,
	685, 0, 689, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 682, 683, 0, 0, 0, 0, 719,
	0, 684, 0, 0, 721, 0, 708, 0, 148, 263,
	277, 157, 254, 290, 162, 261, 153, 228, 250, 0,
	0, 150, 275, 260, 210, 193, 194, 149, 0, 245,
	172, 185, 169, 226, 705, 717, 674, 168, 672, 716,
	285, 152, 0, 284, 225, 272, 276, 211, 205, 151,
	274, 209, 204, 197, 176, 189, 237, 203, 238, 190,
	215, 214, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	714, 0, 0, 287, 0, 0, 732, 0, 0, 0,
	262, 0, 0, 198, 0, 0, 0, 675, 0, 248,
	231, 742, 629, 0, 246, 201, 273, 239, 278, 264,
	286, 242, 240, 144, 265, 171, 212, 154, 155, 167,
	173, 175, 177, 178, 221, 222, 234, 253, 266, 267,
	268, 170, 163, 247, 164, 187, 165, 145, 255, 166,
	146, 235, 271, 0, 183, 243, 208, 147, 207, 236,
	270, 269, 294, 300, 301, 305, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 181, 142, 282, 730, 227, 741, 726,
	727, 728, 731, 734, 735, 670, 673, 736, 738, 740,
	743, 251, 0, 0, 0, 0, 0, 192, 233, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 280, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 671, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 720, 217,
	218, 219, 220, 669, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 180, 186, 0,
	188, 160, 232, 182, 289, 195, 0, 224, 191, 256,
	196, 202, 244, 288, 230, 249, 158, 279, 257, 206,
	749, 729, 748, 750, 751, 747, 752, 753, 737, 690,
	0, 745, 744, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 200, 0,
	241, 179, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 121, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 723, 718,
	0, 295, 296, 297, 281, 0, 0, 0, 0, 229,
	0, 0, 0, 1321, 0, 0, 0, 688, 0, 0,
	0, 174, 0, 0, 199, 0, 0, 0, 258, 213,
	0, 0, 0, 0, 733, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 681, 0, 0, 0, 631,
	725, 724, 698, 707, 0, 0, 156, 699, 0, 706,
	700, 704, 703, 701, 702, 0, 668, 0, 0, 0,
	0, 0, 0, 0, 685, 0, 689, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 682, 683, 0,
	0, 0, 0, 719, 0, 684, 0, 0, 721, 0,
	708, 0, 148, 263, 277, 157, 254, 290, 162, 261,
	153, 228, 250, 0, 0, 150, 275, 260, 210, 193,
	194, 149, 0, 245, 172, 185, 169, 226, 705, 717,
	674, 168, 672, 716, 285, 152, 0, 284, 225, 272,
	276, 211, 205, 151, 274, 209, 204, 197, 176, 189,
	237, 203, 238, 190, 215, 214, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 714, 0, 0, 287, 0, 0,
	732, 0, 0, 0, 262, 0, 0, 198, 0, 0,
	0, 675, 0, 248, 231, 742, 0, 0, 246, 201,
	273, 239, 278, 264, 286, 242, 240, 144, 265, 171,
	212, 154, 155, 167, 173, 175, 177, 178, 221, 222,
	234, 253, 266, 267, 268, 170, 163, 247, 164, 187,
	165, 145, 255, 166, 146, 235, 271, 0, 183, 243,
	208, 147, 207, 236, 270, 269, 294, 1322, 1323, 305,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 181, 142, 282,
	730, 227, 741, 726, 727, 728, 731, 734, 735, 670,
	673, 736, 738, 740, 743, 251, 0, 0, 0, 0,
	0, 192, 233, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 280, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 671, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 720, 217, 218, 219, 220, 669, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 180, 186, 0, 188, 160, 232, 182, 289, 195,
	0, 224, 191, 256, 196, 202, 244, 288, 230, 249,
	158, 279, 257, 206, 749, 729, 748, 750, 751, 747,
	752, 753, 737, 690, 0, 745, 744, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 200, 0, 241, 179, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 121, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 723, 718, 0, 295, 296, 297, 281, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 688, 0, 0, 0, 174, 0, 0, 199, 0,
	0, 0, 258, 213, 0, 0, 0, 0, 733, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 631, 725, 724, 698, 707, 0, 0,
	156, 699, 0, 706, 700, 704, 703, 701, 702, 0,
	668, 0, 0, 0, 0, 0, 0, 628, 685, 0,
	689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 682, 683, 0, 0, 0, 0, 719, 0, 684,
	0, 0, 721, 0, 708, 0, 148, 263, 277, 157,
	254, 290, 162, 261, 153, 228, 250, 0, 0, 150,
	275, 260, 210, 193, 194, 149, 0, 245, 172, 185,
	169, 226, 705, 717, 674, 168, 672, 716, 285, 152,
	0, 284, 225, 272, 276, 211, 205, 151, 274, 209,
	204, 197, 176, 189, 237, 203, 238, 190, 215, 214,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 714, 0,
	0, 287, 0, 0, 732, 0, 0, 0, 262, 0,
	0, 198, 0, 0, 0, 675, 0, 248, 231, 742,
	629, 0, 246, 201, 273, 239, 278, 264, 286, 242,
	240, 144, 265, 171, 212, 154, 155, 167, 173, 175,
	177, 178, 221, 222, 234, 253, 266, 267, 268, 170,
	163, 247, 164, 187, 165, 145, 255, 166, 146, 235,
	271, 0, 183, 243, 208, 147, 207, 236, 270, 269,
	294, 300, 301, 305, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 181, 142, 282, 730, 227, 741, 726, 727, 728,
	731, 734, 735, 670, 673, 736, 738, 740, 743, 251,
	0, 0, 0, 0, 0, 192, 233, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 280, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 671, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 720, 217, 218, 219,
	220, 669, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 180, 186, 0, 188, 160,
	232, 182, 289, 195, 0, 224, 191, 256, 196, 202,
	244, 288, 230, 249, 158, 279, 257, 206, 749, 729,
	748, 750, 751, 747, 752, 753, 737, 690, 0, 745,
	744, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 200, 0, 241, 179,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 121, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 723, 718, 0, 295,
	296, 297, 281, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 688, 0, 0, 0, 174,
	0, 0, 199, 0, 0, 0, 258, 213, 0, 0,
	0, 0, 733, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 681, 0, 0, 0, 631, 725, 724,
	698, 707, 0, 0, 156, 699, 0, 706, 700, 704,
	703, 701, 702, 0, 668, 0, 0, 0, 0, 0,
	0, 0, 685, 0, 689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 682, 683, 0, 0, 0,
	0, 719, 0, 684, 0, 0, 721, 0, 708, 0,
	148, 263, 277, 157, 254, 290, 162, 261, 153, 228,
	250, 0, 0, 150, 275, 260, 210, 193, 194, 149,
	0, 245, 172, 185, 169, 226, 705, 717, 674, 168,
	672, 716, 285, 152, 0, 284, 225, 272, 276, 211,
	205, 151, 274, 209, 204, 197, 176, 189, 237, 203,
	238, 190, 215, 214, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 714, 0, 0, 287, 0, 0, 732, 0,
	0, 0, 262, 0, 0, 198, 0, 0, 0, 675,
	0, 248, 231, 742, 0, 0, 246, 201, 273, 239,
	278, 264, 286, 242, 240, 144, 265, 171, 212, 154,
	155, 167, 173, 175, 177, 178, 221, 222, 234, 253,
	266, 267, 268, 170, 163, 247, 164, 187, 165, 145,
	255, 166, 146, 235, 271, 0, 183, 243, 208, 147,
	207, 236, 270, 269, 294, 300, 301, 305, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 181, 142, 282, 730, 227,
	741, 726, 727, 728, 731, 734, 735, 670, 673, 736,
	738, 740, 743, 251, 0, 0, 0, 0, 0, 192,
	233, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 280, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	671, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	720, 217, 218, 219, 220, 669, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 180,
	186, 0, 188, 160, 232, 182, 289, 195, 0, 224,
	191, 256, 196, 202, 244, 288, 230, 249, 158, 279,
	257, 206, 749, 729, 748, 750, 751, 747, 752, 753,
	737, 690, 0, 745, 744, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	200, 0, 241, 179, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 121,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	723, 0, 0, 295, 296, 297, 281, 97, 0, 27,
	87, 69, 0, 0, 0, 0, 0, 0, 0, 229,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 199, 0, 0, 0, 258, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 349, 353, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 148, 263, 277, 157, 254, 290, 162, 261,
	153, 228, 250, 0, 0, 150, 275, 260, 210, 193,
	194, 149, 0, 245, 172, 185, 169, 226, 0, 0,
	302, 168, 293, 0, 285, 152, 0, 284, 225, 272,
	276, 211, 205, 151, 274, 209, 204, 197, 176, 189,
	237, 203, 238, 190, 215, 214, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 198, 0, 0,
	0, 303, 0, 248, 231, 0, 0, 0, 246, 201,
	273, 239, 278, 264, 286, 242, 240, 144, 265, 171,
	212, 154, 155, 167, 173, 175, 177, 178, 221, 222,
	234, 253, 266, 267, 268, 170, 163, 247, 164, 187,
	165, 145, 255, 166, 146, 235, 271, 0, 183, 243,
	208, 147, 207, 236, 270, 269, 294, 300, 301, 305,
	0, 306, 0, 343, 342, 346, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 299, 181, 142, 282,
	0, 227, 0, 352, 0, 0, 0, 0, 0, 223,
	298, 0, 0, 0, 0, 251, 0, 344, 0, 0,
	0, 192, 233, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 280, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 217, 218, 219, 220, 314, 316, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 180, 186, 0, 188, 160, 232, 182, 289, 195,
	0, 224, 191, 256, 196, 202, 244, 288, 230, 249,
	158, 279, 257, 206, 347, 351, 354, 0, 355, 356,
	0, 0, 357, 358, 359, 0, 0, 361, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 200, 70, 241, 179, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 229, 0, 0, 295, 296, 297, 281, 0,
	0, 0, 0, 0, 174, 0, 0, 199, 0, 0,
	0, 258, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	1640, 1643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 263, 277, 157, 254,
	290, 162, 261, 153, 228, 250, 0, 0, 150, 275,
	260, 210, 193, 194, 149, 0, 245, 172, 185, 169,
	226, 0, 0, 302, 168, 293, 0, 285, 152, 0,
	284, 225, 272, 276, 211, 205, 151, 274, 209, 204,
	197, 176, 189, 237, 203, 238, 190, 215, 214, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	287, 0, 0, 0, 1637, 0, 1636, 262, 1638, 1641,
	198, 0, 0, 0, 303, 0, 248, 231, 0, 0,
	0, 246, 201, 273, 239, 278, 264, 286, 242, 240,
	144, 265, 171, 212, 154, 155, 167, 173, 175, 177,
	178, 221, 222, 234, 253, 266, 267, 268, 170, 163,
	247, 164, 187, 165, 145, 255, 166, 146, 235, 271,
	1642, 183, 243, 208, 147, 207, 236, 270, 269, 294,
	300, 301, 305, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	181, 142, 282, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 223, 298, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 192, 233, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 280, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 217, 218, 219, 220,
	184, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 180, 186, 0, 188, 160, 232,
	182, 289, 195, 0, 224, 191, 256, 196, 202, 244,
	288, 230, 249, 158, 279, 257, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 200, 0, 241, 179, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 229, 0, 0, 295, 296,
	297, 281, 919, 0, 0, 0, 0, 174, 0, 0,
	199, 0, 0, 0, 258, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 920, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 915, 916, 917, 914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 263,
	277, 157, 254, 290, 162, 261, 153, 228, 250, 0,
	0, 150, 275, 260, 210, 193, 194, 149, 0, 245,
	172, 185, 169, 226, 0, 0, 302, 168, 293, 0,
	285, 152, 0, 284, 225, 272, 276, 211, 205, 151,
	274, 209, 204, 197, 176, 189, 237, 203, 238, 190,
	215, 214, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 198, 0, 0, 0, 303, 0, 248,
	231, 0, 0, 0, 246, 201, 273, 239, 278, 264,
	286, 242, 240, 144, 265, 171, 212, 154, 155, 167,
	173, 175, 177, 178, 221, 222, 234, 253, 266, 267,
	268, 170, 163, 247, 164, 187, 165, 145, 255, 166,
	146, 235, 271, 0, 183, 243, 208, 147, 207, 236,
	270, 269, 294, 300, 301, 305, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 181, 142, 282, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 223, 298, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 192, 233, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 280, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 217,
	218, 219, 220, 184, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 180, 186, 0,
	188, 160, 232, 182, 289, 195, 0, 224, 191, 256,
	196, 202, 244, 288, 230, 249, 158, 279, 257, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 200, 0,
	241, 179, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 229, 0,
	0, 295, 296, 297, 281, 0, 0, 0, 0, 0,
	174, 429, 0, 199, 0, 0, 0, 258, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 437,
	438, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 263, 277, 157, 254, 290, 162, 261, 153,
	228, 250, 0, 0, 150, 275, 260, 210, 193, 194,
	149, 0, 245, 172, 185, 169, 226, 0, 0, 302,
	168, 293, 410, 285, 152, 409, 284, 225, 272, 276,
	211, 205, 151, 274, 209, 204, 197, 176, 189, 237,
	203, 238, 190, 215, 214, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 198, 0, 0, 0,
	303, 0, 248, 231, 0, 0, 0, 246, 201, 273,
	239, 278, 264, 286, 428, 240, 144, 265, 171, 212,
	154, 155, 167, 173, 175, 177, 178, 221, 222, 234,
	253, 266, 267, 268, 170, 163, 247, 164, 187, 165,
	145, 255, 166, 146, 235, 271, 0, 183, 243, 208,
	147, 207, 236, 270, 269, 294, 300, 301, 305, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 181, 142, 282, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 223, 298,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	192, 233, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 280, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 431, 217, 218, 219, 220, 184, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	180, 186, 0, 188, 160, 232, 182, 289, 195, 0,
	439, 434, 435, 196, 202, 244, 288, 230, 249, 158,
	279, 257, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 200, 0, 241, 179, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 97, 0, 0, 295, 296, 297, 281, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 199, 0,
	0, 0, 258, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 1007, 0, 103, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 263, 277, 157,
	254, 290, 162, 261, 153, 228, 250, 0, 0, 150,
	275, 260, 210, 193, 194, 149, 0, 245, 172, 185,
	169, 226, 0, 0, 302, 168, 293, 0, 285, 152,
	0, 284, 225, 272, 276, 211, 205, 151, 274, 209,
	204, 197, 176, 189, 237, 203, 238, 190, 215, 214,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 198, 0, 0, 0, 303, 0, 248, 231, 0,
	0, 0, 246, 201, 273, 239, 278, 264, 286, 242,
	240, 144, 265, 171, 212, 154, 155, 167, 173, 175,
	177, 178, 221, 222, 234, 253, 266, 267, 268, 170,
	163, 247, 164, 187, 165, 145, 255, 166, 146, 235,
	271, 0, 183, 243, 208, 147, 207, 236, 270, 269,
	294, 300, 301, 305, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 181, 142, 282, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 223, 298, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 192, 233, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 280, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 217, 218, 219,
	220, 184, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 180, 186, 0, 188, 160,
	232, 182, 289, 195, 0, 224, 191, 256, 196, 202,
	244, 288, 230, 249, 158, 279, 257, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 200, 70, 241, 179,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 229, 0, 0, 295,
	296, 297, 281, 0, 0, 0, 0, 0, 174, 0,
	0, 199, 0, 0, 0, 258, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 437, 438, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	263, 277, 157, 254, 290, 162, 261, 153, 228, 250,
	0, 0, 150, 275, 260, 210, 193, 194, 149, 0,
	245, 172, 185, 169, 226, 0, 0, 302, 168, 293,
	410, 285, 152, 409, 284, 225, 272, 276, 211, 205,
	151, 274, 209, 204, 197, 176, 189, 237, 203, 238,
	190, 215, 214, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 198, 0, 0, 0, 303, 0,
	248, 231, 0, 0, 0, 246, 201, 273, 239, 278,
	264, 286, 242, 240, 144, 265, 171, 212, 154, 155,
	167, 173, 175, 177, 178, 221, 222, 234, 253, 266,
	267, 268, 170, 163, 247, 164, 187, 165, 145, 255,
	166, 146, 235, 271, 0, 183, 243, 208, 147, 207,
	236, 270, 269, 294, 300, 301, 305, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 181, 142, 282, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 223, 298, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 192, 233,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 280, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	217, 218, 219, 220, 184, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 180, 186,
	0, 188, 160, 232, 182, 289, 195, 0, 439, 434,
	435, 196, 202, 244, 288, 230, 249, 158, 279, 257,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 200,
	0, 241, 179, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 229,
	0, 0, 295, 296, 297, 281, 0, 0, 0, 0,
	0, 174, 607, 0, 199, 0, 0, 0, 258, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 605, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 148, 263, 277, 157, 254, 290, 162, 261,
	153, 228, 250, 0, 0, 150, 275, 260, 210, 193,
	194, 149, 0, 245, 172, 185, 169, 226, 0, 0,
	302, 168, 293, 0, 285, 152, 0, 284, 225, 272,
	276, 211, 205, 151, 274, 209, 204, 197, 176, 189,
	237, 203, 238, 190, 215, 214, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 198, 0, 0,
	0, 303, 0, 248, 231, 0, 0, 0, 246, 201,
	273, 239, 278, 264, 286, 242, 240, 144, 265, 171,
	212, 154, 155, 167, 173, 175, 177, 178, 221, 222,
	234, 253, 266, 267, 268, 170, 163, 247, 164, 187,
	165, 145, 255, 166, 146, 235, 271, 0, 183, 243,
	208, 147, 207, 236, 270, 269, 294, 300, 301, 305,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 181, 142, 282,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 223,
	298, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 192, 233, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 280, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 217, 218, 219, 220, 184, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 180, 186, 0, 188, 160, 232, 182, 289, 195,
	0, 224, 191, 256, 196, 202, 244, 288, 230, 249,
	158, 279, 257, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 200, 0, 241, 179, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 229, 0, 0, 295, 296, 297, 281, 0,
	0, 0, 0, 0, 174, 601, 0, 199, 0, 0,
	0, 258, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 605, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 148, 263, 277, 157, 254,
	290, 162, 261, 153, 228, 250, 0, 0, 150, 275,
	260, 210, 193, 194, 149, 0, 245, 172, 185, 169,
	226, 0, 0, 302, 168, 293, 0, 285, 152, 0,
	284, 225, 272, 276, 211, 205, 151, 274, 209, 204,
	197, 176, 189, 237, 203, 238, 190, 215, 214, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	198, 0, 0, 0, 303, 0, 248, 231, 0, 0,
	0, 246, 201, 273, 239, 278, 264, 286, 242, 240,
	144, 265, 171, 212, 154, 155, 167, 173, 175, 177,
	178, 221, 222, 234, 253, 266, 267, 268, 170, 163,
	247, 164, 187, 165, 145, 255, 166, 146, 235, 271,
	0, 183, 243, 208, 147, 207, 236, 270, 269, 294,
	300, 301, 305, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	181, 142, 282, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 223, 298, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 192, 233, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 280, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 217, 218, 219, 220,
	184, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 180, 186, 0, 188, 160, 232,
	182, 289, 195, 0, 224, 191, 256, 196, 202, 244,
	288, 230, 249, 158, 279, 257, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 200, 0, 241, 179, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 229, 0, 0, 295, 296,
	297, 281, 0, 0, 0, 0, 0, 174, 0, 0,
	199, 0, 0, 0, 258, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2231, 0, 103, 725, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 263,
	277, 157, 254, 290, 162, 261, 153, 228, 250, 0,
	0, 150, 275, 260, 210, 193, 194, 149, 0, 245,
	172, 185, 169, 226, 0, 0, 302, 168, 293, 0,
	285, 152, 0, 284, 225, 272, 276, 211, 205, 151,
	274, 209, 204, 197, 176, 189, 237, 203, 238, 190,
	215, 214, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 198, 0, 0, 0, 303, 0, 248,
	231, 0, 0, 0, 246, 201, 273, 239, 278, 264,
	286, 242, 240, 144, 265, 171, 212, 154, 155, 167,
	173, 175, 177, 178, 221, 222, 234, 253, 266, 267,
	268, 170, 163, 247, 164, 187, 165, 145, 255, 166,
	146, 235, 271, 0, 183, 243, 208, 147, 207, 236,
	270, 269, 294, 300, 301, 305, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 181, 142, 282, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 223, 298, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 192, 233, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 280, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 217,
	218, 219, 220, 184, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 180, 186, 0,
	188, 160, 232, 182, 289, 195, 0, 224, 191, 256,
	196, 202, 244, 288, 230, 249, 158, 279, 257, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 200, 0,
	241, 179, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 229, 0,
	0, 295, 296, 297, 281, 0, 0, 0, 0, 0,
	174, 0, 0, 199, 0, 0, 0, 258, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 605, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 148, 263, 277, 157, 254, 290, 162, 261, 153,
	228, 250, 0, 0, 150, 275, 260, 210, 193, 194,
	149, 0, 245, 172, 185, 169, 226, 0, 0, 302,
	168, 293, 0, 285, 152, 0, 284, 225, 272, 276,
	211, 205, 151, 274, 209, 204, 197, 176, 189, 237,
	203, 238, 190, 215, 214, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 198, 0, 0, 0,
	303, 0, 248, 231, 0, 0, 0, 246, 201, 273,
	239, 278, 264, 286, 242, 240, 144, 265, 171, 212,
	154, 155, 167, 173, 175, 177, 178, 221, 222, 234,
	253, 266, 267, 268, 170, 163, 247, 164, 187, 165,
	145, 255, 166, 146, 235, 271, 0, 183, 243, 208,
	147, 207, 236, 270, 269, 294, 300, 301, 305, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 181, 142, 282, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 223, 298,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	192, 233, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 280, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 217, 218, 219, 220, 184, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	180, 186, 0, 188, 160, 232, 182, 289, 195, 0,
	224, 191, 256, 196, 202, 244, 288, 230, 249, 158,
	279, 257, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 200, 0, 241, 179, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 229, 0, 0, 295, 296, 297, 281, 0, 0,
	0, 0, 0, 174, 0, 0, 199, 0, 0, 0,
	258, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 605, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 148, 263, 277, 157, 254, 290,
	162, 261, 153, 228, 250, 0, 0, 150, 275, 260,
	210, 193, 194, 149, 0, 245, 172, 185, 169, 226,
	0, 0, 302, 168, 293, 0, 285, 152, 0, 284,
	225, 272, 276, 211, 205, 151, 274, 209, 204, 197,
	176, 189, 237, 203, 238, 190, 215, 214, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 198,
	0, 0, 0, 303, 0, 248, 231, 0, 0, 0,
	246, 201, 273, 239, 278, 264, 286, 242, 240, 144,
	265, 171, 212, 154, 155, 167, 173, 175, 177, 178,
	221, 222, 234, 253, 266, 267, 268, 170, 163, 247,
	164, 187, 165, 145, 255, 166, 146, 235, 271, 0,
	183, 243, 208, 147, 207, 236, 270, 269, 294, 300,
	301, 305, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 181,
	142, 282, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 223, 298, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 192, 233, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	280, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 217, 218, 219, 220, 184,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 180, 186, 0, 188, 160, 232, 182,
	289, 195, 0, 224, 191, 256, 196, 202, 244, 288,
	230, 249, 158, 279, 257, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 200, 0, 241, 179, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 229, 0, 0, 295, 296, 297,
	281, 0, 0, 0, 0, 0, 174, 1297, 0, 199,
	0, 0, 0, 258, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 605, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 263, 277,
	157, 254, 290, 162, 261, 153, 228, 250, 0, 0,
	150, 275, 260, 210, 193, 194, 149, 0, 245, 172,
	185, 169, 226, 0, 0, 302, 168, 293, 0, 285,
	152, 0, 284, 225, 272, 276, 211, 205, 151, 274,
	209, 204, 197, 176, 189, 237, 203, 238, 190, 215,
	214, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 198, 0, 0, 0, 303, 0, 248, 231,
	0, 0, 0, 246, 201, 273, 239, 278, 264, 286,
	242, 240, 144, 265, 171, 212, 154, 155, 167, 173,
	175, 177, 178, 221, 222, 234, 253, 266, 267, 268,
	170, 163, 247, 164, 187, 165, 145, 255, 166, 146,
	235, 271, 0, 183, 243, 208, 147, 207, 236, 270,
	269, 294, 300, 301, 305, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 181, 142, 282, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 223, 298, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 192, 233, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 280, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 217, 218,
	219, 220, 184, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 180, 186, 0, 188,
	160, 232, 182, 289, 195, 0, 224, 191, 256, 196,
	202, 244, 288, 230, 249, 158, 279, 257, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 200, 0, 241,
	179, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 229, 0, 0,
	295, 296, 297, 281, 0, 0, 0, 0, 0, 174,
	0, 0, 199, 0, 0, 0, 258, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 725, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 263, 277, 157, 254, 290, 162, 261, 153, 228,
	250, 0, 0, 150, 275, 260, 210, 193, 194, 149,
	0, 245, 172, 185, 169, 226, 0, 0, 302, 168,
	293, 0, 285, 152, 0, 284, 225, 272, 276, 211,
	205, 151, 274, 209, 204, 197, 176, 189, 237, 203,
	238, 190, 215, 214, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 198, 0, 0, 0, 303,
	0, 248, 231, 0, 0, 0, 246, 201, 273, 239,
	278, 264, 286, 242, 240, 144, 265, 171, 212, 154,
	155, 167, 173, 175, 177, 178, 221, 222, 234, 253,
	266, 267, 268, 170, 163, 247, 164, 187, 165, 145,
	255, 166, 146, 235, 271, 0, 183, 243, 208, 147,
	207, 236, 270, 269, 294, 300, 301, 305, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 181, 142, 282, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 223, 298, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 192,
	233, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 280, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 217, 218, 219, 220, 184, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 180,
	186, 0, 188, 160, 232, 182, 289, 195, 0, 224,
	191, 256, 196, 202, 244, 288, 230, 249, 158, 279,
	257, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	200, 0, 241, 179, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	229, 0, 0, 295, 296, 297, 281, 0, 0, 0,
	0, 0, 174, 0, 0, 199, 0, 0, 0, 258,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 263, 277, 157, 254, 290, 162,
	261, 153, 228, 250, 0, 0, 150, 275, 260, 210,
	193, 194, 149, 0, 245, 172, 185, 169, 226, 0,
	0, 302, 168, 293, 0, 285, 152, 0, 284, 225,
	272, 276, 211, 205, 151, 274, 209, 204, 197, 176,
	189, 237, 203, 238, 190, 215, 214, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 198, 0,
	0, 0, 303, 0, 248, 231, 0, 0, 0, 246,
	201, 273, 239, 278, 264, 286, 242, 240, 144, 265,
	171, 212, 154, 155, 167, 173, 175, 177, 178, 221,
	222, 234, 253, 266, 267, 268, 170, 163, 247, 164,
	187, 165, 145, 255, 166, 146, 235, 271, 0, 183,
	243, 208, 147, 207, 236, 270, 269, 294, 300, 301,
	305, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 181, 142,
	282, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	223, 298, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 192, 233, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 280,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 217, 218, 219, 220, 184, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 180, 186, 0, 188, 160, 232, 182, 289,
	195, 0, 224, 191, 256, 196, 202, 244, 288, 230,
	249, 158, 279, 257, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 200, 0, 241, 179, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 229, 0, 0, 295, 296, 297, 281,
	0, 0, 0, 0, 0, 174, 0, 0, 199, 0,
	0, 0, 258, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 263, 277, 157,
	254, 290, 162, 261, 153, 228, 250, 0, 0, 150,
	275, 260, 210, 193, 194, 149, 0, 245, 172, 185,
	169, 226, 0, 0, 302, 168, 293, 0, 285, 152,
	0, 284, 225, 272, 276, 211, 205, 151, 274, 209,
	204, 197, 176, 189, 237, 203, 238, 190, 215, 214,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 198, 0, 0, 0, 303, 0, 248, 231, 0,
	0, 0, 246, 201, 273, 239, 278, 264, 286, 242,
	240, 144, 265, 171, 212, 154, 155, 167, 173, 175,
	177, 178, 221, 222, 234, 253, 266, 267, 268, 170,
	163, 247, 164, 187, 165, 145, 255, 166, 146, 235,
	271, 0, 183, 243, 208, 147, 207, 236, 270, 269,
	294, 300, 301, 305, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 181, 142, 282, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 223, 298, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 192, 233, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 280, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 217, 218, 219,
	220, 184, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 180, 186, 0, 188, 160,
	232, 182, 289, 195, 0, 224, 191, 256, 196, 202,
	244, 288, 230, 249, 158, 279, 257, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 200, 0, 241, 179,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 229, 0, 0, 295,
	296, 297, 281, 0, 0, 0, 0, 0, 174, 0,
	0, 199, 0, 0, 0, 258, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 869, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	263, 277, 157, 254, 290, 162, 261, 153, 228, 250,
	0, 0, 150, 275, 260, 210, 193, 194, 149, 0,
	245, 172, 185, 169, 226, 0, 0, 302, 168, 293,
	0, 285, 152, 0, 284, 225, 272, 276, 211, 205,
	151, 274, 209, 204, 197, 176, 189, 237, 203, 238,
	190, 215, 214, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 198, 0, 0, 0, 303, 0,
	248, 231, 0, 0, 0, 246, 201, 273, 239, 278,
	264, 286, 242, 240, 144, 265, 171, 212, 154, 155,
	167, 173, 175, 177, 178, 221, 222, 234, 253, 266,
	267, 268, 170, 163, 247, 164, 187, 165, 145, 255,
	166, 146, 235, 271, 0, 183, 243, 208, 147, 207,
	236, 270, 269, 294, 300, 301, 305, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 181, 142, 282, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 223, 298, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 192, 233,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 280, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	217, 218, 219, 220, 184, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 180, 186,
	0, 188, 160, 232, 182, 289, 195, 0, 224, 191,
	256, 196, 202, 244, 288, 230, 249, 158, 279, 257,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 200,
	0, 241, 179, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 229,
	0, 0, 295, 296, 297, 281, 0, 0, 0, 0,
	0, 174, 0, 0, 199, 0, 0, 0, 258, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 605, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 263, 277, 157, 254, 290, 162, 261,
	153, 228, 250, 0, 0, 150, 275, 260, 210, 193,
	194, 149, 0, 245, 172, 185, 169, 226, 0, 0,
	302, 168, 293, 0, 285, 152, 0, 284, 225, 272,
	276, 211, 205, 151, 274, 209, 204, 197, 176, 189,
	237, 203, 238, 190, 215, 214, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 198, 0, 0,
	0, 303, 0, 248, 231, 0, 0, 0, 246, 201,
	273, 239, 278, 264, 286, 242, 240, 144, 265, 171,
	212, 154, 155, 167, 173, 175, 177, 178, 221, 222,
	234, 253, 266, 267, 268, 170, 163, 247, 164, 187,
	165, 145, 255, 166, 146, 235, 271, 0, 183, 243,
	208, 147, 207, 236, 270, 269, 294, 300, 301, 305,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 181, 142, 282,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 223,
	298, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 192, 233, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 280, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 217, 218, 219, 220, 184, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 180, 186, 0, 188, 160, 232, 182, 289, 195,
	0, 224, 191, 256, 196, 202, 244, 288, 230, 249,
	158, 279, 257, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 200, 0, 241, 179, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 229, 0, 0, 295, 296, 297, 281, 0,
	0, 0, 0, 0, 174, 0, 0, 199, 0, 0,
	0, 258, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 263, 277, 157, 254,
	290, 162, 261, 153, 228, 250, 0, 0, 150, 275,
	260, 210, 193, 194, 149, 0, 245, 172, 185, 169,
	226, 0, 0, 302, 168, 293, 0, 285, 152, 0,
	284, 225, 272, 276, 211, 205, 151, 274, 209, 204,
	197, 176, 189, 237, 203, 238, 190, 215, 214, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	198, 0, 0, 0, 303, 0, 248, 231, 0, 0,
	0, 246, 201, 273, 239, 278, 264, 286, 242, 240,
	144, 265, 171, 212, 154, 155, 167, 173, 175, 177,
	178, 221, 222, 234, 253, 266, 267, 268, 170, 163,
	247, 164, 187, 165, 145, 255, 166, 146, 235, 271,
	0, 183, 243, 208, 147, 207, 236, 270, 269, 294,
	300, 301, 305, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	181, 142, 282, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 223, 298, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 192, 233, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 280, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 217, 218, 219, 220,
	184, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 180, 186, 0, 188, 160, 232,
	182, 289, 195, 0, 224, 191, 256, 196, 202, 244,
	288, 230, 249, 158, 279, 257, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 200, 0, 241, 179, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 229, 0, 0, 295, 296,
	297, 281, 0, 0, 0, 0, 0, 174, 0, 0,
	199, 0, 0, 0, 258, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 263,
	277, 157, 254, 290, 162, 261, 153, 228, 250, 0,
	0, 150, 275, 260, 210, 193, 194, 149, 0, 245,
	172, 185, 169, 226, 0, 0, 302, 168, 293, 0,
	285, 152, 0, 284, 225, 272, 276, 211, 205, 151,
	274, 209, 204, 197, 176, 189, 237, 203, 238, 190,
	215, 214, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 198, 0, 0, 0, 303, 0, 248,
	231, 0, 0, 0, 246, 201, 273, 239, 278, 264,
	286, 242, 240, 144, 265, 171, 212, 154, 155, 167,
	173, 175, 177, 178, 221, 222, 234, 253, 266, 267,
	268, 170, 163, 247, 164, 187, 165, 145, 255, 166,
	146, 235, 271, 0, 183, 243, 208, 147, 207, 236,
	270, 269, 294, 300, 301, 305, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 181, 142, 282, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 223, 298, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 192, 233, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 280, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 217,
	218, 219, 220, 184, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 180, 186, 0,
	188, 160, 232, 182, 289, 195, 0, 224, 191, 256,
	196, 202, 244, 288, 230, 249, 158, 279, 257, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 200, 0,
	241, 179, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 229, 0,
	0, 295, 296, 297, 281, 0, 0, 0, 0, 0,
	174, 0, 0, 199, 0, 0, 0, 258, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 1310, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 263, 277, 157, 254, 290, 162, 261, 153,
	228, 250, 0, 0, 150, 275, 260, 210, 193, 194,
	149, 0, 245, 172, 185, 169, 226, 0, 0, 302,
	168, 293, 0, 285, 152, 0, 284, 225, 272, 276,
	211, 205, 151, 274, 209, 204, 197, 176, 189, 237,
	203, 238, 190, 215, 214, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 198, 0, 0, 0,
	303, 0, 248, 231, 0, 0, 0, 246, 201, 273,
	239, 278, 264, 286, 242, 240, 144, 265, 171, 212,
	154, 155, 167, 173, 175, 177, 178, 221, 222, 234,
	253, 266, 267, 268, 170, 163, 247, 164, 187, 165,
	145, 255, 166, 146, 235, 271, 0, 183, 243, 208,
	147, 207, 236, 270, 269, 294, 300, 301, 305, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 181, 142, 282, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 223, 298,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	192, 233, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 280, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 217, 218, 219, 220, 184, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	180, 186, 0, 188, 160, 232, 182, 289, 195, 0,
	224, 191, 256, 196, 202, 244, 288, 230, 249, 158,
	279, 257, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 200, 0, 241, 179, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 1239, 0, 0, 295, 296, 297, 281, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 199, 0, 0, 0, 258, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 263, 277, 157, 254, 290, 162, 261, 153,
	228, 250, 0, 0, 150, 275, 260, 210, 193, 194,
	149, 0, 245, 172, 185, 169, 226, 0, 0, 302,
	168, 293, 0, 285, 152, 0, 284, 225, 272, 276,
	211, 205, 151, 274, 209, 204, 197, 176, 189, 237,
	203, 238, 190, 215, 214, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 198, 0, 0, 0,
	303, 0, 248, 231, 0, 0, 0, 246, 201, 273,
	239, 278, 264, 286, 242, 240, 144, 265, 171, 212,
	154, 155, 167, 173, 175, 177, 178, 221, 222, 234,
	253, 266, 267, 268, 170, 163, 247, 164, 187, 165,
	145, 255, 166, 146, 235, 271, 0, 183, 243, 208,
	147, 207, 236, 270, 269, 294, 300, 301, 305, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 181, 142, 282, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 223, 298,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	192, 233, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 280, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 217, 218, 219, 220, 184, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	180, 186, 0, 188, 160, 232, 182, 289, 195, 0,
	224, 191, 256, 196, 202, 244, 288, 230, 249, 158,
	279, 257, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 200, 0, 241, 179, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 229, 0, 0, 295, 296, 297, 281, 0, 0,
	0, 0, 0, 174, 0, 0, 199, 0, 0, 0,
	258, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 263, 277, 157, 254, 290,
	162, 261, 153, 228, 250, 0, 0, 150, 275, 260,
	210, 193, 194, 149, 0, 245, 172, 185, 169, 226,
	0, 0, 302, 168, 293, 0, 285, 152, 0, 284,
	225, 272, 276, 211, 205, 151, 274, 209, 204, 197,
	176, 189, 237, 203, 238, 190, 215, 214, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 1222, 0, 0, 0, 262, 0, 0, 198,
	0, 0, 0, 303, 0, 248, 231, 0, 0, 0,
	246, 201, 273, 239, 278, 264, 286, 242, 240, 144,
	265, 171, 212, 154, 155, 167, 173, 175, 177, 178,
	221, 222, 234, 253, 266, 267, 268, 170, 163, 247,
	164, 187, 165, 145, 255, 166, 146, 235, 271, 0,
	183, 243, 208, 147, 207, 236, 270, 269, 294, 300,
	301, 305, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 181,
	142, 282, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 223, 298, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 192, 233, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	280, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 217, 218, 219, 220, 184,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 180, 186, 0, 188, 160, 232, 182,
	289, 195, 0, 224, 191, 256, 196, 202, 244, 288,
	230, 249, 158, 279, 257, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 200, 0, 241, 179, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 229, 0, 0, 295, 296, 297,
	281, 0, 0, 0, 0, 0, 174, 0, 0, 199,
	0, 0, 0, 258, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 263, 277,
	157, 254, 290, 162, 261, 153, 228, 250, 0, 0,
	150, 275, 260, 210, 193, 194, 149, 0, 245, 172,
	185, 169, 226, 0, 0, 302, 168, 293, 0, 285,
	152, 0, 284, 225, 272, 276, 211, 205, 151, 274,
	209, 204, 197, 176, 189, 237, 203, 238, 190, 215,
	214, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 198, 0, 0, 0, 303, 0, 248, 231,
	0, 0, 0, 246, 201, 273, 239, 278, 264, 286,
	242, 240, 144, 265, 171, 212, 154, 155, 167, 173,
	175, 177, 178, 221, 222, 234, 253, 266, 267, 268,
	170, 163, 247, 164, 187, 165, 145, 255, 166, 146,
	235, 271, 0, 183, 243, 208, 147, 207, 236, 270,
	269, 294, 300, 301, 305, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 181, 142, 282, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 223, 298, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 192, 233, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 280, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 217, 218,
	219, 220, 184, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 180, 186, 0, 188,
	160, 232, 182, 289, 195, 0, 224, 191, 256, 196,
	202, 244, 288, 230, 249, 158, 279, 257, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 143, 0, 200, 0, 241,
	179, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 229, 0, 0,
	295, 296, 297, 281, 0, 0, 0, 0, 0, 174,
	0, 0, 199, 0, 0, 0, 258, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 263, 277, 157, 254, 290, 162, 261, 153, 228,
	250, 0, 0, 150, 275, 260, 210, 193, 194, 149,
	0, 245, 172, 185, 169, 226, 0, 0, 302, 168,
	293, 0, 285, 152, 0, 284, 225, 272, 276, 211,
	205, 151, 274, 209, 204, 197, 176, 189, 237, 203,
	238, 190, 215, 214, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 198, 0, 0, 0, 303,
	0, 248, 231, 0, 0, 0, 246, 201, 273, 239,
	278, 264, 286, 330, 240, 144, 265, 171, 212, 154,
	155, 167, 173, 175, 177, 178, 221, 222, 234, 253,
	266, 267, 268, 170, 163, 247, 164, 187, 165, 145,
	255, 166, 146, 235, 271, 0, 183, 243, 208, 147,
	207, 236, 270, 269, 294, 300, 301, 305, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 181, 142, 282, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 223, 298, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 192,
	233, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 280, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	283, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 217, 218, 219, 220, 184, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 180,
	186, 0, 188, 160, 232, 182, 289, 195, 0, 224,
	191, 256, 196, 202, 244, 288, 230, 249, 158, 279,
	257, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	200, 0, 241, 179, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	229, 0, 0, 295, 296, 297, 281, 0, 0, 0,
	0, 100, 174, 0, 0, 199, 0, 0, 0, 258,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 263, 277, 157, 254, 290, 162,
	261, 153, 228, 250, 0, 0, 150, 275, 260, 210,
	193, 194, 149, 0, 245, 172, 185, 169, 226, 0,
	0, 302, 168, 293, 0, 285, 152, 0, 284, 225,
	272, 276, 211, 205, 151, 274, 209, 204, 197, 176,
	189, 237, 203, 238, 190, 215, 214, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 198, 0,
	0, 0, 303, 0, 248, 231, 0, 0, 0, 246,
	201, 273, 239, 278, 264, 286, 242, 240, 144, 265,
	171, 212, 154, 155, 167, 173, 175, 177, 178, 221,
	222, 234, 253, 266, 267, 268, 170, 163, 247, 164,
	187, 165, 145, 255, 166, 146, 235, 271, 0, 183,
	243, 208, 147, 207, 236, 270, 269, 294, 300, 301,
	305, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 181, 142,
	282, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	223, 298, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 192, 233, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 280,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 217, 218, 219, 220, 184, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 180, 186, 0, 188, 160, 232, 182, 289,
	195, 0, 224, 191, 256, 196, 202, 244, 288, 230,
	249, 158, 279, 257, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 200, 0, 241, 179, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 229, 0, 0, 295, 296, 297, 281,
	0, 0, 0, 0, 0, 174, 0, 0, 199, 0,
	0, 0, 258, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 263, 277, 157,
	254, 290, 162, 261, 153, 228, 250, 0, 0, 150,
	275, 260, 210, 193, 194, 149, 0, 245, 172, 185,
	169, 226, 0, 0, 302, 168, 293, 0, 285, 152,
	0, 284, 225, 272, 276, 211, 205, 151, 274, 209,
	204, 197, 176, 189, 237, 203, 238, 190, 215, 214,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 198, 0, 0, 0, 303, 0, 248, 231, 0,
	0, 0, 246, 201, 273, 239, 278, 264, 286, 242,
	240, 144, 265, 171, 212, 154, 155, 167, 173, 175,
	177, 178, 221, 222, 234, 253, 266, 267, 268, 170,
	163, 247, 164, 187, 165, 145, 255, 166, 146, 235,
	271, 0, 183, 243, 208, 147, 207, 236, 270, 269,
	294, 300, 301, 305, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 181, 142, 282, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 223, 298, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 192, 233, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 280, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 217, 218, 219,
	220, 184, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 180, 186, 0, 188, 160,
	232, 182, 289, 195, 0, 224, 191, 256, 196, 202,
	244, 288, 230, 249, 158, 279, 257, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 200, 0, 241, 179,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 229, 0, 0, 295,
	296, 297, 281, 1279, 0, 0, 0, 0, 174, 0,
	0, 199, 0, 0, 0, 258, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 830, 831, 832, 1281,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	263, 277, 157, 254, 290, 162, 261, 153, 228, 250,
	0, 0, 150, 275, 260, 210, 193, 194, 149, 0,
	245, 172, 185, 169, 226, 0, 0, 302, 168, 293,
	0, 285, 152, 0, 284, 225, 272, 276, 211, 205,
	151, 274, 209, 204, 197, 176, 189, 237, 203, 238,
	190, 215, 214, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 198, 0, 0, 0, 303, 0,
	248, 231, 0, 0, 0, 246, 201, 273, 239, 278,
	264, 286, 242, 240, 144, 265, 171, 212, 154, 155,
	167, 173, 175, 177, 178, 221, 222, 234, 253, 266,
	267, 268, 170, 163, 247, 164, 187, 165, 145, 255,
	166, 146, 235, 271, 0, 183, 243, 208, 147, 207,
	236, 270, 269, 294, 300, 301, 305, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 181, 142, 282, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 223, 298, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 192, 233,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 280, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	217, 218, 219, 220, 184, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 180, 186,
	0, 188, 160, 232, 182, 289, 195, 0, 224, 191,
	256, 196, 202, 244, 288, 230, 249, 158, 279, 257,
	206, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 199, 0,
	0, 0, 258, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 200,
	0, 241, 179, 830, 831, 832, 1281, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 297, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 263, 277, 157,
	254, 290, 162, 261, 153, 228, 250, 0, 0, 150,
	275, 260, 210, 193, 194, 149, 0, 245, 172, 185,
	169, 226, 0, 0, 302, 168, 293, 0, 285, 152,
	0, 284, 225, 272, 276, 211, 205, 151, 274, 209,
	204, 197, 176, 189, 237, 203, 238, 190, 215, 214,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 198, 0, 0, 0, 303, 0, 248, 231, 0,
	0, 0, 246, 201, 273, 239, 278, 264, 286, 242,
	240, 144, 265, 171, 212, 154, 155, 167, 173, 175,
	177, 178, 221, 222, 234, 253, 266, 267, 268, 170,
	163, 247, 164, 187, 165, 145, 255, 166, 146, 235,
	271, 0, 183, 243, 208, 147, 207, 236, 270, 269,
	294, 300, 301, 305, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 181, 142, 282, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 223, 298, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 192, 233, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 280, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 217, 218, 219,
	220, 184, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 180, 186, 0, 188, 160,
	232, 182, 289, 195, 0, 224, 191, 256, 196, 202,
	244, 288, 230, 249, 158, 279, 257, 206, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 199, 0, 0, 0, 258,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 200, 0, 241, 179,
	830, 831, 832, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	296, 297, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 263, 277, 157, 254, 290, 162,
	261, 153, 228, 250, 0, 0, 150, 275, 260, 210,
	193, 194, 149, 0, 245, 172, 185, 169, 226, 0,
	0, 302, 168, 293, 0, 285, 152, 0, 284, 225,
	272, 276, 211, 205, 151, 274, 209, 204, 197, 176,
	189, 237, 203, 238, 190, 215, 214, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 198, 0,
	0, 0, 303, 0, 248, 231, 0, 0, 0, 246,
	201, 273, 239, 278, 264, 286, 242, 240, 144, 265,
	171, 212, 154, 155, 167, 173, 175, 177, 178, 221,
	222, 234, 253, 266, 267, 268, 170, 163, 247, 164,
	187, 165, 145, 255, 166, 146, 235, 271, 0, 183,
	243, 208, 147, 207, 236, 270, 269, 294, 300, 301,
	305, 0, 306, 0, 0, 915, 916, 917, 914, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 181, 142,
	282, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	223, 298, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 192, 233, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1730, 0, 0, 259, 280,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 0, 0, 291, 1360, 0,
	0, 0, 0, 0, 217, 218, 219, 220, 184, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 180, 186, 0, 188, 160, 232, 182, 289,
	195, 0, 224, 191, 256, 196, 202, 244, 288, 230,
	249, 158, 279, 257, 206, 0, 0, 0, 0, 0,
	0, 0, 1730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 200, 0, 241, 179, 0, 1737, 1741,
	1743, 1745, 1747, 1748, 1750, 1944, 1754, 1751, 1752, 1753,
	0, 0, 1732, 1733, 1734, 1735, 1716, 1717, 1738, 0,
	1719, 0, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1736, 0, 1237, 0, 295, 296, 297, 281,
	1740, 1742, 1744, 1746, 1749, 0, 1356, 0, 1353, 0,
	0, 0, 1355, 1352, 1354, 1358, 1359, 2351, 1718, 0,
	1357, 0, 0, 0, 0, 0, 0, 0, 1926, 0,
	0, 0, 0, 0, 1731, 1737, 1741, 1743, 1745, 1747,
	1748, 1750, 0, 1754, 1751, 1752, 1753, 0, 0, 1732,
	1733, 1734, 1735, 1716, 1717, 1738, 1944, 1719, 0, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1736,
	0, 0, 0, 0, 0, 0, 0, 1740, 1742, 1744,
	1746, 1749, 0, 0, 0, 1237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2022,
	0, 1731, 0, 0, 1944, 0, 0, 0, 0, 1926,
	0, 0, 0, 0, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1363, 1364, 1365, 1366, 1367,
	1368, 1361, 1362, 1237, 0, 0, 0, 0, 0, 0,
	1708, 1709, 0, 0, 0, 0, 0, 0, 1930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	0, 0, 0, 0, 0, 0, 0, 1926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1923,
	0, 0, 0, 1925, 1927, 1929, 0, 1931, 1932, 1933,
	1935, 1936, 1937, 1939, 1940, 1941, 1942, 350, 0, 349,
	353, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 0, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 363,
	1934, 0, 364, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1923, 0, 0, 0, 1925, 1927, 1929, 1922, 1931, 1932,
	1933, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 0, 0,
	0, 0, 0, 0, 1938, 0, 0, 0, 1934, 0,
	0, 1928, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 1923, 0,
	0, 0, 1925, 1927, 1929, 0, 1931, 1932, 1933, 1935,
	1936, 1937, 1939, 1940, 1941, 1942, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1922, 0,
	0, 0, 0, 0, 0, 1945, 0, 0, 343, 342,
	346, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 352, 0,
	0, 0, 1928, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 344, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1922, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1938, 0, 0, 0, 0, 0, 0,
	1928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	351, 354, 0, 355, 356, 0, 0, 357, 358, 359,
	0, 0, 361, 362,
}

var yyPact = [...]int{
	218, -1000, -302, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18808, -1000, -1000,
	1673, -1000, 7917, 19261, 78, 19261, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 293,
	-1000, 18355, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 263,
	21147, 164, -1000, 2010, -1000, -1000, -1000, -1000, 133, 321,
	17902, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 769, 17, 321, 403, 417,
	405, 405, 9276, 2010, 215, 57, -1000, 705, 218, 245,
	19261, -1000, 573, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2010, 2010, 19261, -61, 690, -1000, 234, 208, 219, 572,
	-1000, -1000, -1000, -1000, 2039, -1000, 19261, 1783, 19261, -1000,
	907, 199, 1745, 1902, 1564, 415, 1810, -1000, -1000, 1775,
	-1000, 25, -2, 128, -1000, -1000, 194, -1000, -1000, -1000,
	-1000, -1000, 49, -1000, 16, -1000, 18, -1000, -1000, -1000,
	-128, -1000, -1000, -1000, -1000, -193, 1887, 1951, 1612, 2023,
	1941, 1934, 1932, 1928, 2, 259, 259, 259, 276, 259,
	289, -1000, -1000, -1000, -1000, -1000, -1000, 355, -1000, -1000,
	-1000, -1000, 1531, 19261, -1000, 1627, 610, 610, 701, 222,
	-1000, -1000, -108, -152, 610, 610, -152, 36, -1000, 1944,
	1920, -1000, -1000, -1000, -1000, -1000, -1000, 263, 263, 267,
	-1000, -197, -1000, -1000, 413, -1000, 384, -1000, 280, 192,
	1566, 702, -1000, 659, 19261, 19261, 19261, 659, 659, 11100,
	10647, 526, -1000, 1951, 1612, -1000, 1389, 1187, 1612, 263,
	263, 263, 263, 263, 263, 263, 19261, 5589, 5589, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 242, 1773, -1000,
	19261, 1951, 1887, 1951, -1000, 508, 886, 1082, -1000, -1000,
	234, 1499, -1000, 615, -1000, -1000, -1000, -1000, 19261, 195,
	-1000, 1073, 1771, -1000, 292, 1542, 1593, -1000, 40, 8002,
	15177, 907, 15177, 19261, -1000, -1000, -1000, -1000, -132, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -67,
	-1000, -1000, -291, 1887, 6053, -1000, -1000, 6053, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 277, 259, -1000, 1102,
	724, 15177, 907, 926, 19261, 259, 267, -1000, 19261, 1531,
	1913, 19261, 2032, 7445, 2032, 19261, -1000, -1000, 610, 610,
	-1000, 701, 701, -1000, -1000, -140, 2032, 2032, -119, 19261,
	19261, 259, -1000, -1000, 1102, 15177, 14724, -1000, -175, 394,
	371, 388, -1000, -1000, 2044, -1000, -1000, 1481, 331, 10194,
	238, 15177, 3727, -1000, -1000, 659, 659, 659, 3727, 3727,
	580, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19261, 1887,
	-1000, -1000, -1000, -1000, -1000, 1102, 15177, 907, 19261, 19261,
	19261, 20468, -1000, 1592, -1000, -1000, 8823, 483, 6053, -1000,
	1062, 1768, -1000, -1000, 1766, 1758, 1754, 1753, 1751, 1750,
	1748, -1000, 1709, -1000, -1000, 1747, 1746, 1743, 1742, -1000,
	-1000, -1000, -1000, -1000, -1000, 1740, -1000, -1000, -1000, 1739,
	1709, -1000, -1000, 1738, 1724, 1722, 1721, 1720, -1000, -1000,
	-1000, -1000, -1000, -1000, 1081, 1080, 994, -1000, -1000, -1000,
	-1000, 3263, 7445, 7445, 7445, 7445, -1000, -1000, 1677, 6053,
	1718, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6981, -1000,
	1717, 1714, 1712, 1711, 1710, 1709, 1708, 1077, 1707, 1706,
	1704, 7445, 1698, 1695, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1592, -1000, -289, -1000, 9741, 19261,
	19261, -1000, 1887, -1000, 1887, 2364, -1000, 1948, -1000, 234,
	103, -1000, -1000, -1000, -1000, -1000, -1000, 476, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1530, -1000, 19261,
	-1000, -1000, 40, 15177, 681, -1000, -1000, -1000, -1000, -1000,
	-1000, 151, -1000, -1000, 120, -1000, 275, -39, 1497, -1000,
	-1000, 10, 114, 1075, -1000, 1176, 475, 1528, -1000, 1103,
	17449, 19261, -21, -1000, 1896, 1541, -1000, -39, 1481, 1622,
	-1000, -1000, -1000, 1862, 19261, 16996, -1000, 1693, 1453, -1000,
	-1000, 6053, -1000, -1000, 2032, 2032, 2032, 610, 20468, 701,
	19261, 701, -1000, -1000, 701, -1000, 473, -1000, 19261, -21,
	1541, 1990, 1552, -1000, -1000, -1000, -1000, 1912, 19714, 215,
	-1000, -1000, 391, 381, 402, 907, 271, -1000, -1000, 1481,
	-1000, -1000, -1000, 1692, 689, -1000, -1000, 7445, -1000, 803,
	-1000, 3727, 3727, 3727, -1000, -1000, 12912, -1000, -1000, -1000,
	1523, 1481, 1809, 1503, -1000, 1503, -1000, -1000, -1000, 2032,
	5589, -1000, 14724, -1000, 6053, 6053, 6053, 6053, -1000, 16536,
	-1000, 16083, -1000, 422, 6517, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 6053, 1924, 1924, 1924, 6053, 688, 6053, 6053,
	-1000, 780, 754, 1924, 1924, 1924, 1924, 1924, -1000, 2791,
	1924, 1924, 1924, 1924, -1000, -1000, 7445, 7445, 7445, 7445,
	7445, 7445, 7445, 7445, 7445, 7445, 7445, 7445, 1676, 761,
	7445, 7445, 7445, 1187, 1880, 1502, -1000, -1000, -1000, -1000,
	-1000, 696, 803, 6053, 20663, 6053, 6053, 6053, -1000, 1384,
	1379, -1000, -1000, 6053, -1000, 6053, 7445, 6053, -1000, 1924,
	1067, 2032, 1428, -1000, 1691, -1000, 1448, 1856, -1000, 472,
	1501, -1000, 682, 1441, -1000, -1000, -1000, -1000, 462, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -63, -1000, -1000, 19261, 1073,
	1432, 681, 1422, -1000, 269, 461, 444, -1000, 15177, 19,
	15177, -1000, 15177, -1000, -1000, 179, -1000, 19261, 1872, -1000,
	-1000, -1000, 1065, -166, 6053, 6053, 19261, 6053, -1000, -1000,
	-1000, 1627, 722, 1690, -98, 646, -1000, 397, 15177, 184,
	-1000, 1804, 135, -1000, 1862, -1000, 675, -1000, 1689, 19261,
	1420, -1000, 443, 218, -1000, 19261, 803, -1000, -1000, -1000,
	2032, -1000, 610, -1000, 610, 701, 19261, -1000, -1000, -98,
	397, 19261, 14724, 14724, 14724, 14724, -1000, 1841, 1828, -1000,
	1851, 1850, 1840, 19261, 14724, 19261, -1000, -1000, -1000, 20091,
	-1000, -1000, -1000, -1000, 1363, 2010, -1000, -1000, -1000, 365,
	1481, 15177, 1064, 238, -1000, -1000, -1000, -1000, -1000, 19261,
	19261, 2029, -1000, 1471, 1959, -1000, 739, 739, 706, -1000,
	-1000, 434, -1000, -1000, 306, -1000, -1000, -1000, -1000, -1000,
	1677, -1000, -1000, -1000, 1316, 1177, 803, 6053, -1000, -1000,
	6053, 6053, 955, 6053, 1303, 1418, 1416, -1000, 1298, 2038,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6053,
	6053, 6053, 6053, 6053, 897, 5125, -1000, -1000, -1000, 6053,
	6053, 6053, 6053, 1111, 1199, -1000, 741, 741, 589, 589,
	589, 589, 589, 1002, 1002, -1000, -1000, -1000, 3263, 1676,
	7445, 7445, 7445, 239, 1802, 1678, -1000, 6053, 712, -1000,
	6053, 1148, -1000, 1290, 947, 1265, 1261, -1000, -1000, 1178,
	1244, 956, 1239, 6053, 1450, 2029, -289, 4655, 204, 19261,
	-289, 19261, 19261, 4655, -1000, 19261, 2364, 881, -1000, -1000,
	-1000, 2037, 15177, 907, 598, 662, -1000, 11, -1000, 142,
	260, 1063, -1000, 288, 674, -86, -72, 803, 803, 431,
	-1000, 1905, 1895, 8370, 777, -1000, -1000, 1061, -1000, 248,
	-1000, -1000, -1000, 411, 21, 880, 246, -1000, 1076, 19261,
	-1000, -1000, -1000, -1000, -1000, 646, 646, 646, 8370, 245,
	1414, 429, 14724, 19261, -1000, 14271, 1234, -1000, -1000, 2032,
	2032, 610, -1000, 777, 248, 1396, -1000, 671, 1781, 1793,
	1781, -1000, -1000, -1000, -1000, 1825, -1000, 1822, -1000, -1000,
	1396, -1000, 1627, -1000, -1000, -1000, 1422, 1231, -1000, -1000,
	-1000, -1000, 2027, 2014, 15630, -1000, -1000, -1000, -1000, -1000,
	6053, 1864, 1846, 1808, 20770, 1407, -1000, -1000, -1000, -1000,
	6053, 1798, 1792, 1772, 1759, 1661, -1000, 6053, 6053, 811,
	1655, 1620, 1614, 1550, 1403, -1000, 239, 1802, 1458, -1000,
	7445, 7445, 1532, 676, -1000, 6053, 793, 574, 12006, -1000,
	6053, -1000, -1000, -1000, 12006, -1000, 7445, -1000, 1520, 1059,
	2027, -1000, 1229, 1445, -1000, -289, -1000, -1000, 1428, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15177, -1000,
	139, -1000, -1000, -1000, -1000, -1000, -1000, -51, -1000, 19261,
	1055, -293, -69, 2006, 2003, 19261, 215, 19261, 1223, 1436,
	-1000, -1000, -1000, 20847, 621, -1000, 19261, 736, 407, 259,
	407, 735, 1675, -1000, -1000, -1000, 1030, -41, -1000, -1000,
	1029, 1024, 879, -1000, -1000, 865, 576, -29, -1000, -1000,
	-1000, -1000, -1000, -1000, 1674, 12006, 12459, 1023, 1217, 19714,
	14724, 14271, 1357, -1000, 426, -1000, -1000, -1000, -1000, 2032,
	-1000, -1000, 2025, 19261, 4655, -1000, -1000, 6053, 1671, -1000,
	6053, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6053, 6053,
	-1000, -1000, 803, -1000, -1000, -1000, 1211, -1000, 370, 370,
	-10, -1000, -1000, -1000, 1606, -1000, 1653, 1653, 1606, 1606,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1669,
	1666, -1000, 1606, 1648, 1648, 1606, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1654, 1654, 1659, 1654, -1000, 1400, -1000, -1000, -1000,
	-1000, -1000, 1374, 1369, 6053, -1000, -1000, -1000, -1000, -1000,
	-1000, 7445, -1000, -1000, -1000, -1000, 803, 6053, 1194, -1000,
	1606, 1653, -1000, 1606, 1648, 1606, 370, 370, 1184, 1130,
	1179, 1533, -1000, 1156, -1000, -1000, 4655, 1428, 1422, -1000,
	-1000, -119, 117, -297, 1016, -1000, 2002, 1013, 902, -1000,
	1627, 21058, 8370, 732, -1000, -1000, 19261, 19261, -1000, 19261,
	19261, 259, 6053, -1000, -1000, 176, -1000, -1000, 46, -1000,
	-1000, 864, 274, -1000, 13818, -1000, -1000, -1000, -1000, -1000,
	-67, 2032, 1357, 426, -1000, -1000, 597, -1000, 1951, -1000,
	-1000, 803, 19261, 803, 803, 1177, -1000, -1000, -1000, -1000,
	-1000, -18, -1000, -1000, -1000, -1000, 877, -1000, 875, -1000,
	-1000, -1000, 1011, 1011, -1000, -1000, 874, -1000, -1000, -1000,
	872, -1000, -1000, 863, -1000, -1000, -1000, -1000, 1343, -1000,
	803, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 6053, -1000, -1000, -1000, -1000, -1000, -91, -79, -1000,
	986, -299, 857, -1000, 985, -73, -1000, -1000, 1904, 241,
	21000, -1000, 646, 646, 683, 646, 646, 646, 646, 161,
	158, 646, 646, 646, 646, 646, 646, 646, 646, 646,
	646, 646, 646, 646, 646, 1624, -1000, -1000, 732, -1000,
	-1000, 753, 7445, -1000, -1000, 981, 12459, 446, 471, 1623,
	-1000, 119, 733, 717, -1000, 19261, -1000, 1619, 1535, 95,
	1615, -1000, 1611, 1607, 19261, 1272, 254, 977, -1000, -1000,
	45, -1000, -1000, 1382, -1000, 1606, 6053, -1000, -119, 2025,
	-1000, -1000, 1378, -1000, -1000, 1151, 1145, 1362, -1000, 1355,
	1142, 1345, 1342, -1000, 1213, 265, -78, -79, -1000, 2001,
	-77, 1993, 1992, 669, -1000, 1604, -1000, -1000, 1989, 215,
	-1000, 1982, 21058, -1000, 856, 854, 646, 646, 846, 968,
	957, 954, 646, 646, 845, 953, 20091, 840, 837, 836,
	838, 935, 776, 812, 802, 798, 19261, 1603, 900, -1000,
	-1000, 1802, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 833, 1602, -1000, -1000, 1601, 13818, 86,
	86, 13818, 13818, 13818, 1599, 311, -1000, -53, -1000, -1000,
	-1000, 13818, 1871, 1196, -1000, 1951, -1000, -1000, -1000, -1000,
	929, -1000, -1000, -1000, 831, -1000, 797, -1000, 1598, 791,
	-69, 1981, -1000, 902, 1978, 902, 902, 928, 19261, 902,
	-1000, 113, -1000, -1000, -1000, 12006, 12006, -1000, -1000, -1000,
	-1000, 927, 911, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 170, 19261, 1339, -1000, 664,
	1137, 6053, -238, 13818, 1336, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1334, 1332, 1330, 13818, -1000, -1000, -1000, 126,
	-1000, 124, -1000, -1000, 1871, -1000, -1000, 1132, 1124, 1918,
	11553, -96, -1000, 908, -1000, 902, -1000, -1000, -307, 1325,
	-1000, -1000, 118, 205, 196, -1000, 282, -1000, -1000, -1000,
	-1000, -1000, -1000, 175, 1293, -1000, 900, 896, -1000, 1185,
	1791, -1000, 24, 1274, -1000, -1000, -1000, -1000, 1268, -1000,
	-1000, 646, 894, 72, -1000, -1000, -1000, -1000, -1000, -1000,
	19261, -1000, 1264, -1000, -1000, -1000, 424, -1000, -1000, -1000,
	-1000, -1000, -1000, 19261, 107, 790, 7445, 1597, 7445, 1596,
	121, 1578, -1000, -1000, -1000, -1000, -1000, 311, -1000, -1000,
	1790, 1785, 2036, -1000, -1000, -1000, -1000, 124, 124, 124,
	124, 8, 775, -1000, 926, 1068, -1000, 643, -1000, 13365,
	19261, -1000, 1572, 1960, -1000, 1438, 19261, 1409, 19261, 1571,
	641, 7445, -1000, -1000, 2043, -1000, 2041, 492, 492, -1000,
	-1000, -1000, 19261, 4191, -1000, 414, -1000, 233, 115, -1000,
	1260, -1000, 1243, 19261, 771, 1230, -1000, -1000, -1000, 752,
	132, -1000, -1000, -1000, 803, 19261, 1227, -1000, 997, 97,
	-1000, -1000, 1191, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	233, 1765, -1000, 768, -1000, -1000, 20909, 339, -1000, -1000,
	20909, 105, -1000, 200, 1410, -1000, -1000, 1189, -1000, 958,
	392, 6053, -1000, 105, 21058, -1000, 6053, 1182, -1000, 21058,
	1150, -1000, -1000,
}

var yyPgo = [...]int{
	0, 127, 2350, 177, 128, 120, 174, 2349, 1922, 1921,
	2348, 2346, 2345, 2344, 2343, 2342, 2340, 2339, 2338, 2337,
	2335, 2334, 2333, 2332, 2331, 2330, 2329, 173, 2328, 2327,
	2325, 2323, 2322, 2320, 2319, 2318, 2316, 2313, 2311, 2309,
	2308, 118, 2307, 1904, 2306, 2305, 2304, 2303, 2302, 167,
	2301, 2300, 2292, 2290, 2285, 2284, 2283, 2279, 2277, 2276,
	2274, 2273, 2271, 156, 57, 2270, 39, 61, 107, 204,
	73, 197, 190, 141, 70, 126, 164, 116, 2269, 2268,
	111, 24, 133, 2267, 43, 40, 35, 191, 112, 54,
	60, 91, 2266, 2265, 88, 2264, 2263, 97, 2262, 59,
	2261, 78, 48, 90, 26, 2260, 2259, 2258, 80, 2257,
	2256, 2255, 2254, 85, 2253, 63, 51, 2252, 2251, 2250,
	2249, 2248, 27, 2247, 46, 2246, 2245, 2243, 2242, 2241,
	2239, 2238, 11, 16, 21, 2233, 2232, 14, 2, 2231,
	147, 189, 84, 108, 2230, 366, 2229, 2228, 2226, 115,
	2225, 139, 2224, 2223, 2222, 2221, 2220, 10, 2219, 53,
	2218, 2215, 2214, 56, 2213, 2212, 2211, 96, 49, 50,
	92, 2210, 2208, 72, 157, 13, 42, 0, 148, 38,
	2207, 2206, 2205, 188, 145, 143, 165, 122, 272, 114,
	2204, 2203, 47, 2202, 117, 2201, 109, 66, 44, 2200,
	87, 2198, 37, 86, 2197, 105, 2194, 135, 1, 100,
	2193, 158, 2192, 2190, 2188, 125, 2187, 2186, 67, 124,
	2185, 2184, 2183, 25, 2182, 29, 19, 2180, 95, 171,
	2178, 132, 98, 131, 138, 82, 161, 166, 68, 113,
	797, 103, 81, 17, 2177, 155, 2176, 251, 184, 151,
	2175, 2174, 175, 360, 153, 2172, 130, 7, 2171, 2170,
	8, 2169, 22, 2168, 2167, 2165, 2164, 6, 2163, 2162,
	2161, 4, 3, 2160, 5, 110, 41, 65, 2157, 64,
	75, 2156, 2155, 2153, 2152, 2151, 206, 2150, 2149, 2148,
	2146, 2145, 2142, 2141, 83, 2140, 2139, 2138, 2137, 69,
	2136, 2135, 2134, 2132, 2128, 32, 2126, 2125, 23, 2124,
	30, 2123, 2122, 2120, 15, 136, 2119, 2118, 18, 2115,
	2114, 9, 12, 2113, 2112, 58, 45, 31, 79, 77,
	2110, 20, 2108, 99, 2106, 2105, 140, 2104, 102, 2103,
	162, 169, 278, 2101, 146, 2100, 2096, 2095, 2092, 2091,
	2090, 2089, 792, 2088, 2087, 170, 55, 159, 2085, 2080,
	154, 2079, 123, 94, 89, 150, 2076, 152, 2068, 2064,
	2063, 144, 2060,
}

//line mysql_sql.y:7222
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 368, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 57, 324, 324, 323, 323, 322,
	322, 321, 321, 321, 320, 320, 320, 319, 319, 318,
	318, 317, 317, 315, 315, 316, 314, 313, 313, 313,
	311, 311, 309, 309, 310, 310, 304, 304, 307, 307,
	305, 305, 305, 305, 308, 303, 303, 303, 302, 302,
	56, 56, 56, 242, 242, 55, 55, 256, 256, 256,
	256, 256, 254, 254, 254, 254, 254, 254, 253, 253,
	252, 252, 257, 257, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 50, 50, 50,
	50, 53, 54, 250, 250, 250, 250, 250, 251, 251,
	251, 51, 52, 52, 241, 241, 246, 246, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	249, 249, 249, 248, 248, 247, 247, 44, 44, 44,
	47, 46, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 45, 45, 45, 45, 45, 45, 42, 42, 42,
	42, 42, 41, 41, 43, 43, 239, 239, 238, 60,
	60, 60, 60, 60, 60, 60, 59, 59, 62, 62,
	61, 49, 49, 49, 49, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 347, 347, 347, 349, 349, 181,
	182, 369, 180, 180, 180, 343, 343, 344, 345, 346,
	346, 346, 58, 7, 7, 39, 40, 367, 367, 286,
	286, 194, 194, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 289,
	290, 190, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 31, 31, 38, 370, 370, 370, 36,
	37, 285, 285, 285, 35, 34, 33, 32, 32, 30,
	30, 29, 29, 187, 187, 189, 189, 185, 371, 371,
	262, 262, 188, 188, 28, 28, 28, 186, 186, 164,
	184, 184, 184, 6, 10, 10, 10, 10, 10, 10,
	10, 10, 16, 18, 236, 236, 233, 17, 13, 12,
	15, 11, 14, 5, 5, 5, 5, 8, 8, 9,
	75, 75, 103, 103, 356, 356, 352, 352, 353, 353,
	353, 354, 354, 355, 355, 4, 293, 293, 293, 293,
	293, 293, 332, 332, 332, 333, 93, 93, 88, 88,
	294, 294, 209, 334, 334, 301, 301, 300, 300, 299,
	299, 91, 91, 92, 92, 79, 79, 63, 63, 306,
	306, 306, 306, 312, 312, 283, 283, 129, 129, 160,
	160, 161, 161, 67, 67, 68, 68, 68, 68, 68,
	68, 340, 340, 342, 342, 341, 90, 90, 86, 86,
	87, 87, 87, 85, 85, 84, 83, 83, 82, 81,
	81, 81, 70, 70, 69, 69, 69, 69, 69, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 71, 71, 348, 348, 348, 287, 287, 287, 292,
	292, 142, 142, 143, 143, 141, 141, 72, 72, 73,
	73, 73, 73, 140, 140, 139, 74, 74, 80, 76,
	76, 78, 78, 78, 78, 150, 150, 149, 149, 149,
	149, 96, 96, 148, 147, 147, 147, 95, 95, 94,
	94, 89, 89, 77, 77, 146, 372, 372, 144, 173,
	173, 173, 179, 179, 172, 172, 172, 172, 172, 183,
	178, 178, 174, 174, 175, 175, 175, 3, 3, 3,
	3, 22, 22, 22, 22, 26, 26, 350, 350, 19,
	357, 360, 358, 361, 361, 361, 362, 362, 362, 363,
	363, 20, 359, 364, 364, 364, 237, 237, 234, 235,
	235, 232, 231, 231, 231, 366, 366, 365, 365, 365,
	176, 176, 21, 228, 228, 229, 230, 230, 222, 222,
	222, 222, 25, 226, 226, 227, 227, 227, 227, 227,
	223, 223, 225, 225, 221, 221, 221, 221, 221, 24,
	220, 220, 218, 218, 216, 216, 217, 217, 215, 215,
	215, 219, 219, 23, 23, 65, 64, 64, 64, 66,
	288, 288, 258, 258, 261, 261, 268, 268, 269, 269,
	267, 267, 274, 274, 273, 273, 272, 272, 271, 271,
	270, 270, 270, 270, 265, 265, 264, 264, 259, 259,
	259, 259, 259, 260, 260, 263, 263, 266, 266, 120,
	120, 121, 121, 121, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 330, 330, 331, 123, 123, 123, 127,
	127, 127, 127, 127, 127, 122, 122, 124, 124, 104,
	104, 102, 102, 97, 97, 98, 98, 99, 99, 100,
	100, 101, 101, 101, 101, 101, 101, 244, 244, 328,
	328, 329, 329, 325, 325, 325, 327, 327, 327, 327,
	327, 326, 326, 105, 158, 158, 158, 177, 177, 177,
	157, 157, 157, 119, 119, 118, 118, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	243, 243, 191, 191, 192, 192, 137, 135, 135, 136,
	136, 136, 136, 133, 134, 132, 132, 132, 132, 132,
	131, 131, 130, 130, 130, 224, 224, 128, 128, 126,
	126, 126, 125, 125, 125, 275, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	201, 201, 206, 206, 339, 339, 338, 106, 106, 106,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 115,
	115, 115, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 298, 298, 298,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 156, 351, 351, 351, 335, 335, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 154, 154, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 210, 210, 211, 211, 295, 295, 295, 295,
	295, 295, 296, 296, 297, 297, 297, 297, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 199, 151, 151, 151,
	212, 207, 207, 208, 208, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 204, 204, 204, 204,
	204, 196, 196, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 203, 203, 205, 205, 214, 214, 214, 213,
	213, 213, 213, 213, 213, 213, 117, 117, 117, 117,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	108, 108, 108, 108, 112, 112, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	113, 113, 113, 113, 111, 111, 111, 111, 111, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 110, 159, 159, 276, 276, 279,
	279, 277, 277, 278, 280, 280, 280, 281, 281, 281,
	282, 282, 282, 284, 284, 163, 163, 163, 169, 169,
	162, 162, 170, 170, 171, 171, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 9, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 2, 1, 2,
	3, 4, 3, 3, 1, 0, 1, 1, 0, 1,
	8, 5, 7, 0, 3, 8, 5, 1, 3, 3,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 3,
	1, 4, 1, 3, 1, 2, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 3, 6, 3, 1, 1, 1, 1, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 3, 3, 2, 4, 4, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 2, 0, 1, 4, 2, 4, 1, 5, 3,
	2, 1, 2, 2, 4, 4, 5, 2, 1, 3,
	4, 4, 1, 2, 9, 7, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 2, 1, 1,
	1, 1, 6, 1, 1, 7, 7, 0, 3, 0,
	2, 0, 1, 1, 1, 1, 4, 2, 2, 3,
	3, 4, 5, 3, 4, 4, 2, 2, 2, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 5, 1, 1, 1, 5,
	5, 0, 1, 1, 2, 2, 3, 6, 7, 4,
	4, 7, 8, 0, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 1, 3, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 3, 1, 4, 6, 4,
	4, 4, 3, 1, 1, 2, 2, 11, 8, 9,
	1, 3, 2, 4, 0, 2, 0, 1, 1, 1,
	1, 0, 1, 0, 1, 4, 2, 1, 5, 4,
	4, 2, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 4, 3, 0, 1, 2, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 11, 0, 1, 7,
	1, 4, 1, 3, 4, 3, 0, 1, 1, 0,
	2, 7, 1, 0, 2, 2, 1, 3, 2, 1,
	3, 2, 1, 3, 2, 0, 1, 3, 4, 3,
	1, 1, 4, 1, 3, 1, 1, 1, 0, 1,
	1, 1, 11, 0, 2, 3, 2, 3, 1, 1,
	1, 3, 3, 4, 0, 2, 2, 2, 2, 5,
	1, 1, 0, 3, 0, 1, 1, 2, 4, 4,
	4, 0, 1, 10, 9, 2, 2, 6, 10, 5,
	0, 1, 0, 6, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 5, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 6, 5, 0, 3, 0, 1, 0,
	1, 1, 3, 2, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 4, 1, 3, 3, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 1, 2,
	1, 7, 7, 7, 7, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 5, 6,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 5, 6, 6, 6, 1, 1, 1, 1, 1,
	0, 2, 0, 1, 1, 2, 4, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 5, 4, 4, 5, 5, 5, 5, 4,
	5, 5, 5, 5, 5, 5, 5, 1, 1, 1,
	4, 4, 6, 8, 6, 4, 5, 5, 4, 6,
	6, 7, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 4,
	2, 3, 2, 4, 6, 2, 2, 4, 6, 4,
	2, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	1, 3, 4, 3, 4, 1, 3, 4, 3, 4,
	1, 1, 1, 3, 4, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -368, -2, -1, -3, -4, -5, -6, -48, -59,
	-61, -62, -27, -7, -58, -41, -42, -44, -50, -55,
	-56, -57, -67, -22, -21, -20, -19, 12, -8, -9,
	-340, -10, -180, -181, -182, -369, -28, -29, -30, -32,
	-33, -34, -35, -36, -37, -38, -31, -40, -39, 195,
	-43, 53, -45, -46, -47, -51, -52, -53, -54, 308,
	314, 363, -68, -70, -23, -24, -25, -26, 191, 14,
	436, -11, -14, -12, -15, -13, -17, -18, -16, 213,
	212, 32, 275, 276, 312, 211, 192, 13, 125, 126,
	128, 129, 25, -69, 58, 193, -71, 10, 482, -79,
	33, -102, -177, 62, -165, -168, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 291, 433, 230, 254, 257, 264, 125, 144,
	138, 166, 158, 133, 234, 235, 69, 128, 393, 79,
	378, 362, 131, 249, 251, 253, 256, 236, 154, 149,
	248, 232, 147, 237, 34, 238, 171, 239, 240, 438,
	374, 290, 380, 261, 360, 148, 375, 252, 377, 172,
	176, 385, 314, 142, 143, 382, 387, 170, 210, 37,
	435, 222, 388, 174, 169, 165, 396, 265, 263, 168,
	141, 164, 233, 42, 178, 177, 179, 356, 357, 358,
	359, 241, 242, 302, 384, 161, 150, 294, 134, 22,
	391, 217, 379, 315, 243, 258, 266, 173, 175, 224,
	229, 437, 228, 262, 389, 146, 221, 250, 216, 392,
	135, 308, 317, 244, 129, 255, 386, 395, 41, 330,
	140, 132, 207, 126, 226, 231, 245, 246, 247, 268,
	267, 259, 162, 223, 167, 139, 163, 127, 225, 394,
	331, 481, 292, 345, 160, 157, 227, 200, 390, 381,
	130, 349, 332, 155, 269, 478, 479, 480, 303, 289,
	270, 271, 153, 214, 373, 272, 274, -43, -9, -8,
	-69, -70, -184, 23, 360, -49, 361, 195, 58, -177,
	-5, -4, -41, -67, -183, -177, 275, -183, 198, -177,
	228, 344, -286, 203, -253, -228, 229, -252, -229, -255,
	-230, 26, 192, 191, 225, 14, 193, 312, 199, 12,
	10, 313, 211, 13, 314, 316, 317, 320, 321, 322,
	36, 325, 326, 62, 65, 236, -84, -85, -145, 19,
	6, 7, 8, 9, -288, 291, 345, 228, -222, -220,
	272, 323, 208, 207, 80, 398, 197, -352, -353, 188,
	189, 190, -342, 430, -341, -177, 431, -163, -370, -285,
	381, 380, -188, 379, 372, 383, 374, 191, 79, 159,
	156, 199, 382, 37, 385, 386, 375, 291, 345, -352,
	130, 127, -240, 130, 85, 135, 134, -240, 228, 35,
	-246, 355, -245, -247, 385, 386, 396, 63, 64, 384,
	-163, -177, 79, -85, -145, -84, -68, -70, -340, 291,
	345, 228, 199, 198, 200, 398, 275, -287, -348, 26,
	-292, 185, 186, 187, 27, 28, -1, -91, 220, -102,
	124, -85, -84, -85, -157, -177, 362, 94, -49, -49,
	361, -343, -344, -345, -347, 195, 361, 360, 124, 15,
	-183, 56, -102, -229, 228, -253, -228, 30, 55, 59,
	201, 59, 55, 58, 310, 324, 345, 311, 323, 200,
	228, 324, 228, 372, 200, 315, 318, 319, 373, -302,
	396, -63, 33, -87, 21, -71, -70, 20, 26, 27,
	26, 27, 26, 27, 26, 27, -350, 198, 430, -218,
	203, -218, -218, 199, -218, 198, -354, 137, 59, -342,
	-90, 58, -187, 102, -187, -371, 15, 104, 227, 226,
	376, 373, -262, 377, 378, -188, -187, -187, -188, 198,
	200, 398, 25, 25, -286, -286, -355, 202, 389, 436,
	133, 134, 135, -250, 26, 35, 354, -228, 228, 59,
	94, 23, -248, 94, 105, -247, -247, -247, -248, -248,
	-122, 35, -176, 121, -177, 65, -122, 35, 124, -86,
	-87, -71, -70, 60, 60, -286, -286, -286, -286, -286,
	-286, -286, -183, -72, -73, 112, -202, -177, 86, 219,
	-204, 62, -197, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 455, 456,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 79, 360,
	302, 345, 155, 303, 153, 214, -198, -200, -321, -315,
	-195, 58, 110, 111, 118, 87, -199, -275, 30, 89,
	406, -152, -153, -154, -155, -156, -316, -314, 65, 70,
	73, 76, 77, 75, 74, 151, 72, 66, 123, -70,
	-335, -166, -291, -297, 197, -295, 156, 152, 12, 116,
	355, 121, -298, 475, 64, 63, 296, 297, 298, 398,
	293, 299, 203, 47, 300, 301, 304, 405, 305, 48,
	306, 295, 218, 307, 409, 408, 410, 402, 399, 397,
	400, 401, 403, 404, -72, -293, 38, -67, 58, 25,
	58, -177, -86, -63, -87, 124, 70, 65, -49, 60,
	59, -346, 76, 77, -349, 170, 162, -177, -60, 65,
	-3, -4, -5, -6, -27, -41, -67, -317, -315, 58,
	26, 354, 55, 15, -254, 198, 398, 309, 224, 200,
	-252, -236, -233, -231, -176, -229, -232, -231, -257, -157,
	373, -64, 364, 477, -63, -202, -177, -83, -82, -202,
	200, -218, -357, 62, 86, -237, -234, -231, -228, -175,
	62, 63, 64, -177, -218, -355, -341, 29, -89, -177,
	-141, 16, -200, -141, -102, -187, -187, -189, -371, -185,
	-371, 373, -141, -141, -262, -186, -177, -186, -218, -357,
	-237, -76, -74, -77, -78, -80, -144, -146, -102, 58,
	390, 391, 131, 134, 133, 7, -251, 354, 26, -228,
	-245, -241, 65, 355, -232, -249, 55, 121, -299, -202,
	35, -248, -248, -248, -249, -249, 120, -177, -63, -357,
	-236, -228, -177, -104, -102, -104, -178, -175, -168, -140,
	59, -139, 15, -172, 85, 82, 83, 84, -177, 29,
	65, 124, -202, 101, -213, 94, 95, 96, 97, 98,
	99, 100, 58, 58, 58, 58, 58, 58, 58, 58,
	-211, 58, 58, 58, 58, 58, 58, 58, -211, 58,
	58, 58, 58, 58, 65, 65, 107, 106, 117, 110,
	111, 112, 113, 114, 115, 116, 108, 109, 104, 86,
	102, 103, 88, -70, -202, -208, -200, -200, -200, -200,
	-275, -206, -202, 58, -202, 58, 58, 58, -296, 58,
	58, -210, -211, 58, 65, 58, 58, 58, -200, 58,
	58, -140, -294, -209, -334, 476, -93, 60, -88, -177,
	-332, -333, -88, -92, -177, -63, -63, -170, -171, -162,
	-167, -174, -175, -168, 196, 26, 85, 29, 31, 296,
	328, 88, 121, 20, 89, 156, 120, 298, 406, 297,
	191, 51, 408, 410, 409, 399, 397, 347, 351, 353,
	350, 398, 372, 35, 14, 32, 212, 27, 28, 114,
	193, 92, 93, 215, 30, 213, 77, 23, 54, 15,
	17, 18, 299, 346, 203, 202, 104, 364, 199, 49,
	12, 123, 33, 101, 348, 45, 81, 47, 102, 21,
	400, 401, 36, 363, 432, 219, 116, 300, 301, 52,
	86, 354, 75, 55, 82, 19, 50, 103, 194, 405,
	48, 352, 304, 306, 430, 305, 197, 383, 10, 295,
	407, 25, 211, 46, 198, 91, 201, 76, 218, 152,
	6, 80, 13, 53, 56, 402, 403, 404, 38, 90,
	16, 307, 436, 355, 365, 366, 367, 368, 369, 370,
	371, 180, 181, 182, 183, 184, 260, 206, 204, 208,
	209, 476, 477, 185, 186, 286, 288, 159, 188, 189,
	190, 220, 137, 7, 333, 334, 335, 336, 338, 339,
	340, 341, 342, 343, 344, 23, -49, -344, 124, 59,
	-89, -254, -235, -232, -256, 112, 62, -242, 59, 436,
	483, 63, 201, -366, -365, 346, 60, 59, -303, 202,
	405, 65, 484, 65, 59, 22, 124, 59, -81, 31,
	32, -102, 203, -102, -360, 333, 30, -367, 59, 35,
	-365, -221, 56, -216, -217, -215, -219, 35, -102, 15,
	-75, -103, -177, 58, 60, 59, -202, -141, -141, -141,
	-187, -178, -189, -184, -189, -185, 124, -164, -177, -360,
	-367, 25, -147, -148, -149, -150, 45, 49, 51, 46,
	47, 48, 52, 25, 59, -372, 29, -173, -179, 29,
	-174, 65, -175, -168, -68, -70, 132, 135, 135, 134,
	-228, 201, 58, 94, -249, -249, -249, 35, -176, 55,
	59, -141, -73, -74, -76, -202, -202, -202, -202, -177,
	65, -177, 112, -196, 86, 289, 75, 76, 77, -197,
	-214, 26, 270, 271, -207, -208, -202, -151, 27, 26,
	-151, -151, -202, -151, 112, -208, -208, 60, 70, -336,
	-337, 411, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 300, 295, 301, 299, 293, 307, 302, 303,
	155, 428, 429, 422, 423, 424, 425, 426, 427, -151,
	-151, -151, -151, -151, -202, -351, 287, 286, 288, -151,
	-151, -151, -151, -198, -198, -198, -198, -198, -198, -198,
	-198, -198, -198, -198, -198, -205, -212, -275, 58, 104,
	102, 103, 88, -200, -198, -198, 60, 59, -339, -338,
	90, -202, -336, -207, -202, -207, -207, 60, 60, -208,
	-207, -198, -207, -151, 65, -141, 59, 58, 60, 59,
	38, 124, 59, 94, 60, 59, 124, 362, -177, -315,
	60, -256, 59, 201, 124, 124, -233, 314, -176, -235,
	20, 436, -157, 33, 65, -306, 377, -202, -202, -177,
	-82, -90, 86, 58, -362, 379, 335, -169, 94, -194,
	-193, 292, 36, -289, 355, 341, 342, -234, 228, 55,
	281, 282, 283, 284, -215, -163, 120, 239, 58, -102,
	-75, -177, 15, 59, -356, 124, -1, -177, -141, -187,
	-187, -189, -177, -362, -194, -239, -238, -157, -77, -77,
	-77, -77, 45, 45, 45, 50, 45, 50, 45, -149,
	-239, -80, -177, -179, 60, 135, -235, -190, 65, -241,
	-102, -102, -143, 17, 124, -196, 289, 75, -275, 60,
	59, -202, -202, -202, 29, -208, 60, 60, 60, 60,
	15, -202, -202, -202, -202, -202, 60, 15, 15, -202,
	-202, -202, -202, -202, -208, -205, -200, -198, -198, -203,
	215, 85, -202, -201, -338, 92, -202, 59, 56, 60,
	15, 60, 60, 60, 56, 60, 59, 60, -202, 59,
	-143, -209, -301, -300, -299, 38, -67, -88, -294, -177,
	-333, -299, -177, -170, -167, -175, -168, 70, 15, -232,
	-228, 112, 112, 62, 315, -242, 65, 334, 65, 198,
	94, -312, 370, 365, 367, 124, 29, 30, -97, -98,
	-99, -105, -100, -157, -192, -101, 206, 204, 208, -329,
	80, 209, 260, 81, 199, -363, 69, -358, 65, -364,
	69, 336, 123, 294, 35, 337, 338, 352, 290, 70,
	70, 343, -359, 62, -102, -169, -169, -169, -97, -91,
	56, 124, -74, -103, -177, 112, 60, -141, -141, -187,
	-363, -364, -141, 59, 94, -95, -94, 55, 56, -96,
	55, -94, 45, 45, -141, -90, 60, -142, 18, 20,
	-177, 112, -202, 60, 60, 60, -106, -108, 330, 331,
	-112, -109, -111, -110, -114, -113, 156, 157, 121, 160,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	25, 214, 152, 153, 154, 155, 172, 138, 158, 434,
	180, 139, 181, 140, 182, 141, 183, 142, 143, 184,
	144, 147, 148, 149, 146, 60, -202, 60, 60, 60,
	60, 60, -202, -202, 15, 60, 60, 60, 60, 60,
	-203, 85, -200, -197, 60, 93, -202, 91, -107, -113,
	121, 156, 214, 155, 154, 152, 330, 331, -122, -202,
	-122, -198, 60, 65, -142, 60, 59, -294, -235, -242,
	355, -102, 65, -283, 478, -310, 365, 20, 20, -67,
	-102, 60, 59, -108, -101, -177, 81, -328, -329, -218,
	-328, 81, 58, 65, -361, 346, 65, 65, 70, 35,
	70, 123, 339, -290, 58, -122, -124, -176, 121, 65,
	60, -173, -74, -177, -141, -356, 124, -141, -85, -238,
	-299, -202, 58, -202, -202, -208, 60, -115, 143, 142,
	-115, -282, 331, 330, -276, -278, 58, -277, 58, -277,
	-276, -276, 58, 58, -276, -279, 58, -279, -276, -280,
	58, -280, -281, 58, -280, 60, 60, 60, -202, -197,
	-202, 60, -276, -277, -276, -279, -276, -115, -115, 60,
	60, 23, 60, 60, 60, -299, -66, -304, -262, 485,
	59, -129, 479, 65, 20, 65, -308, 65, -90, -120,
	-121, -138, 328, 230, -219, 234, 69, 235, 362, 236,
	199, 238, 239, 240, 210, 241, 242, 243, 355, 244,
	245, 246, 247, 311, 6, 277, -99, -119, -118, -116,
	75, 86, 35, 328, -117, 69, 120, 253, 231, 254,
	-137, -191, 204, 80, 81, 316, -192, -325, -326, -177,
	-326, -177, -325, -325, -218, -202, 20, 436, 293, 35,
	70, 35, 340, -223, -225, -157, 58, -65, -64, -141,
	-141, -86, -89, -284, 332, 70, 70, -159, 65, -159,
	70, 70, 70, 60, -202, -311, 370, -307, -305, 365,
	366, 367, 368, 65, -160, 480, 70, 65, 367, 29,
	-258, 220, 59, -138, -169, -169, -163, 120, -169, -169,
	-169, -169, 237, 237, -169, -169, -169, -169, -169, -169,
	-169, -169, -169, -169, -169, -169, -169, -169, 58, -116,
	75, -198, 65, -124, -125, 35, 252, 248, -126, 35,
	232, 233, -128, 58, 260, 81, 81, -102, 58, 56,
	269, 58, 58, 58, -326, 60, 65, 334, 65, 293,
	60, 59, -276, -202, -66, -85, 60, 60, 60, 60,
	59, 60, 60, 60, 59, 60, 59, 60, -313, 202,
	-309, 369, -305, 20, 367, 20, 20, 94, 58, 20,
	-67, 20, -138, 70, 70, -169, -169, 70, 65, 65,
	65, -169, -169, 70, 65, -179, 70, 70, 70, 70,
	35, 65, -127, 35, 248, 252, 249, 250, 251, 70,
	35, 70, 35, 70, 35, -177, 58, -330, -331, 65,
	70, 58, -224, 58, -223, -327, 281, 282, 283, 285,
	284, -327, -223, -223, -223, 58, -244, -243, 261, 86,
	355, -226, -225, -81, 60, -86, 65, 70, 70, -320,
	58, 70, -310, 20, -308, 20, -308, -308, 65, -161,
	-177, -308, -259, 262, 263, -260, -266, 265, -122, -122,
	65, 65, -123, 231, -104, 60, 59, 94, 60, -202,
	-131, -130, 432, -223, 60, 60, 60, 60, -223, 261,
	-227, 210, 69, 436, 279, 280, -81, 60, 60, -324,
	25, 60, -319, -318, -158, -314, -177, 370, 371, 65,
	-308, 485, 60, 59, -264, 266, 58, -262, 58, -262,
	81, 282, 232, 233, 60, -331, 65, 60, -135, -136,
	-133, -134, 55, 375, 258, 259, 60, -226, -226, -226,
	-226, 60, -169, 65, 278, -323, -322, -321, 60, 59,
	124, -177, -261, 267, 70, -198, 58, -198, 58, -263,
	264, 58, -243, -134, 55, -133, 55, 14, 13, -137,
	70, -175, 59, 94, -318, -177, -268, 58, 20, 60,
	-257, 60, -257, 58, 94, -198, -132, 255, 256, 25,
	134, -132, -322, 35, -202, 124, -269, -267, 220, -260,
	60, 60, -257, 70, 60, 75, 35, 257, -177, 60,
	59, 62, -265, 268, 60, -267, -270, 38, 70, -274,
	-271, 58, -138, 222, 104, -274, -138, -273, -272, 267,
	223, 58, 60, 59, 62, 219, 58, -208, -272, -271,
	-208, 60, 60,
}

var yyDef = [...]int{
	23, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 537, 538, 539, 540, 0, 343, 344,
	0, 323, 0, 0, 0, 0, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 243, 244, 0,
	192, 188, 167, 168, 169, 127, 128, 129, 130, 249,
	0, 0, 413, -2, 541, 542, 543, 544, -2, 356,
	0, 324, 325, 326, 327, 328, 329, 330, 331, 232,
	233, 234, 229, 230, 231, -2, 0, 356, 181, 0,
	172, 172, 0, 433, 0, 0, 444, 466, 23, 391,
	0, 396, 721, 757, 758, 759, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 193, 345, 346,
	433, 433, 215, 0, 1339, 219, 0, 0, 0, 320,
	211, 212, 213, 214, 0, 529, 0, 208, 0, 187,
	1397, 0, 0, 0, 0, 0, 0, 88, 583, 90,
	585, 94, 96, 97, 100, 101, 102, 103, 104, 105,
	106, 107, 0, 109, 0, 111, 0, 114, 115, 116,
	0, 125, 126, 586, 587, 68, -2, 0, 0, 0,
	449, 452, 455, 458, 547, 612, 612, 612, 0, 612,
	0, 631, 589, 590, 591, 610, 611, 361, 357, 358,
	359, 360, 421, 0, 423, 426, 303, 303, 0, 0,
	294, 295, 0, 312, 303, 303, 312, 0, 1125, 0,
	0, 286, 287, 288, 292, 293, 313, 249, 249, 363,
	182, 183, 171, 173, 0, 177, 0, 170, 1397, 0,
	141, 0, 146, 0, 1346, 1411, 1361, 0, 0, 1379,
	0, 165, -2, 428, 0, 434, 0, 433, 0, 249,
	249, 249, 249, 249, 249, 249, 0, 0, 0, 467,
	468, 463, 464, 465, 469, 470, 3, 0, 0, 395,
	0, 428, -2, 0, 216, 760, 0, 0, 220, 221,
	0, 0, 235, 0, 238, 224, 225, 226, 0, 0,
	210, 0, 0, 189, 0, 0, 0, 250, 82, 0,
	0, 0, 0, 0, 95, 124, 98, 99, 0, 119,
	121, 123, 122, 108, 120, 110, 112, 113, 118, 0,
	69, 416, 0, 397, 0, 446, 448, 0, 450, 451,
	453, 454, 456, 457, 459, 460, 0, 612, 548, 0,
	0, 0, 0, 0, 0, 612, 363, 362, 0, 422,
	0, 0, 475, 0, 475, 0, 308, 309, 303, 303,
	296, 305, 0, 310, 311, 0, 475, 475, 0, 0,
	0, 612, 1126, 1127, 0, 0, 0, 364, 0, 0,
	175, 0, 180, 131, 136, 134, 135, 137, 0, 0,
	0, 0, 0, 163, 164, 0, 0, 0, 0, 0,
	154, 157, 715, 716, 580, 581, 158, 159, 0, 397,
	429, 445, 447, 442, 443, 0, 0, 0, 0, 0,
	0, 0, 342, 483, 477, 479, 524, 31, 0, 1010,
	1015, 757, 1020, -2, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, -2, 1481, -2, -2, 1484, 1485, 1486, 1488, -2,
	-2, -2, -2, -2, -2, 1495, -2, -2, -2, 1499,
	1500, -2, -2, 1503, 1504, 1505, 1506, 1507, -2, -2,
	-2, -2, -2, -2, -2, -2, 1031, 828, 829, 830,
	831, 0, 0, 0, 0, 0, 838, 839, 0, 852,
	0, 845, 846, 847, 848, 849, 43, 44, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 977, 815,
	0, 0, 0, 962, 0, 952, 0, 990, 0, 0,
	0, 0, 0, 0, 45, 46, 968, 970, 971, 973,
	974, 975, 976, 979, 980, 981, 984, 985, 986, 987,
	988, 989, 992, 994, 964, 965, 966, 967, 956, 957,
	958, 959, 960, 961, 483, 365, 383, 367, 0, 372,
	0, 722, 397, 419, 397, 0, 217, 0, 222, 0,
	0, 237, 239, 240, 241, 227, 228, 321, 206, 207,
	199, 200, 201, 202, 203, 204, 205, 209, 41, 0,
	190, 191, 82, 0, 0, 83, 84, 85, 86, 87,
	89, 73, 334, 336, 572, 584, 0, 575, 0, 92,
	117, 65, 0, 0, 417, 430, 31, 435, 436, 439,
	0, 0, 0, 550, 0, 247, 566, 0, 582, 604,
	534, 535, 536, -2, 0, 0, 424, 0, 0, 511,
	283, 0, 304, 284, 475, 475, 475, 303, 0, 305,
	0, 305, 299, 300, 0, 314, 317, 315, 0, 0,
	247, 488, 0, 489, 490, 486, 513, 516, 519, 0,
	184, 185, 0, 0, 179, 0, 0, 138, 139, 140,
	147, 142, 144, 0, 0, 148, 160, 161, 162, 389,
	390, 0, 0, 0, 152, 153, 0, 166, 415, 332,
	333, 337, 0, 339, 719, 340, 341, 530, 531, 475,
	0, 484, 0, 480, 0, 0, 0, 0, 525, 0,
	527, 0, 1009, 0, 0, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1001, 997, 997, 997, 0, 997, 0, 0,
	937, 0, 0, 997, 997, 997, 997, 997, 938, 0,
	997, 997, 997, 997, 951, 945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 1003, 0, 834, 835, 836, 837,
	840, 0, 853, 0, 0, 1001, 1001, 1001, 940, 0,
	0, 942, 953, 0, 946, 1001, 0, 1001, 950, 997,
	0, 475, 366, 380, 0, 384, 0, 0, 376, 378,
	371, 373, 0, 0, 393, 418, 420, 761, 0, 1132,
	-2, 1134, -2, -2, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 0, 223, 236, 0, 0,
	0, 0, 76, 569, 0, 77, 81, 71, 0, 0,
	0, 574, 0, 571, 576, 0, 91, 0, 0, 66,
	67, 626, 0, 399, 0, 0, 0, 0, 438, 440,
	441, 426, 0, 0, 556, 1128, 613, 251, 0, 0,
	568, 0, 0, 609, -2, 616, 0, 622, 0, 0,
	0, 350, 354, 23, 427, 0, 476, 285, 289, 290,
	475, 306, 303, 307, 303, 305, 0, 316, 319, 556,
	251, 0, 0, 0, 0, 0, 504, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 517, 518, 520, 0,
	522, 523, 532, 533, 0, 433, 186, 174, 176, 0,
	133, 0, 0, 0, 149, 150, 151, 155, 156, 0,
	0, 473, 478, 485, 488, 1005, 1006, 1007, 1008, 526,
	528, 32, 481, 1011, 0, 1013, 1016, 1021, 1022, 1018,
	0, 1036, -2, -2, 0, 1002, 1003, 0, 998, 999,
	0, 0, 0, 0, 0, 0, 0, 954, 0, 0,
	908, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 0,
	0, 0, 0, 0, 0, 0, 903, 904, 905, 0,
	0, 0, 0, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 1023, 1034, 1035, 0, 0,
	0, 0, 0, 1032, 1027, 0, 832, 0, 850, 854,
	0, 0, 996, 0, 1003, 0, 0, 963, 941, 0,
	0, 0, 0, 0, 0, 473, 383, 385, 0, 0,
	383, 0, 0, 0, 392, 0, 0, 0, 322, 42,
	242, 0, 0, 0, 0, 0, 335, 0, 573, 73,
	0, 0, 93, 0, 0, 403, 0, 431, 432, 32,
	437, 0, 0, 723, 559, 557, 558, 0, 1129, 563,
	252, 253, 254, 255, 0, 0, 0, 567, 0, 0,
	605, 606, 607, 608, 617, 1128, 1128, 1128, 723, 391,
	0, -2, 0, 0, 352, 0, 0, 512, 297, 475,
	475, 303, 318, 559, 563, 475, 196, 0, 507, 501,
	0, 494, 505, 506, 497, 0, 499, 0, 495, 496,
	475, 487, 426, 521, 515, 178, 132, 0, 271, 143,
	338, 720, 471, 0, 0, 1012, 1014, 1017, 1019, 890,
	0, 0, 0, 0, 0, 0, 879, 873, 874, 955,
	0, 0, 0, 0, 0, 0, 898, 0, 0, 0,
	0, 0, 0, 0, 0, 1024, 1032, 1028, 0, 1025,
	0, 0, 1004, 0, 855, 0, 0, 0, 0, 891,
	0, 895, 939, 943, 0, 947, 0, 949, 0, 0,
	471, 381, 0, 386, 387, 383, 370, 377, 369, 379,
	374, 375, 394, 762, 1133, 1130, 1131, 218, 0, 570,
	73, 78, 79, 80, 74, 72, 577, 0, 579, 0,
	0, 405, 54, 0, 0, 0, 0, 0, 0, 724,
	725, 727, 728, 0, 0, 730, 784, 0, 739, 612,
	739, 0, 0, 741, 742, 549, 0, 0, 552, 561,
	0, 0, 0, 257, 258, 0, 0, 0, 270, 266,
	267, 268, 248, 562, 0, 0, 0, 0, 0, 519,
	0, 0, 475, 351, 354, 355, 425, 301, 298, 475,
	245, 246, 433, 0, 0, 491, 508, 0, 0, 492,
	0, 493, 498, 500, 195, 514, 145, 461, 0, 0,
	33, 482, 1004, 875, 876, 877, 0, 857, 869, 869,
	1120, 1061, 1062, 1063, 1107, 1065, 1111, 1111, 1107, 1107,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 0,
	0, 1084, 1107, 1109, 1109, 1107, 1104, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1114, 1114, 1117, 1114, 878, 0, 897, 880, 881,
	884, 882, 0, 0, 0, 896, 885, 886, 872, 1000,
	1026, 0, 1033, 1029, 833, 841, 851, 0, 0, 860,
	1107, 1111, 863, 1107, 1109, 1107, 869, 869, 0, 0,
	0, 0, 883, 0, 462, 382, 0, 368, 75, 70,
	578, 56, 0, 407, 0, 404, 0, 0, 0, 545,
	426, -2, 0, -2, 729, 785, 751, 751, 740, 751,
	751, 612, 0, 560, 551, 0, 564, 565, 0, 259,
	260, 0, 263, 269, 0, 618, 619, 717, 718, 620,
	0, 475, 475, -2, 348, 353, 0, 302, 428, 197,
	198, 509, 0, 502, 472, 474, 842, 858, 870, 871,
	859, 1123, 1121, 1122, 1064, 1108, 0, 1089, 0, 1090,
	1091, 1092, 0, 0, 1085, 1086, 0, 1087, 1088, 1080,
	0, 1081, 1082, 0, 1083, 894, 899, 900, 0, 1030,
	856, 843, 861, 862, 864, 865, 866, 867, 868, 844,
	892, 0, 944, 948, 902, 388, 24, 50, 0, 627,
	0, 409, 0, 406, 0, 400, 402, 64, 0, 632,
	-2, 671, 1128, 1128, 0, 1128, 1128, 1128, 1128, 0,
	0, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 1128, 1128, 1128, 1128, 0, 726, 753, -2, 765,
	767, 0, 0, 770, 771, 0, 0, 0, 0, 807,
	777, 0, 0, 1048, 1049, 0, 783, 0, 743, 752,
	0, 752, 0, 0, 751, 0, 0, 0, 256, 261,
	0, 264, 265, 0, 600, 1107, 0, 624, 56, 433,
	349, 194, 0, 1060, 1124, 0, 0, 0, 1105, 0,
	0, 0, 0, 901, 0, 47, 52, 57, 58, 0,
	0, 0, 0, 0, 398, 0, 408, 55, 0, 0,
	623, 0, 621, 673, 0, 0, 1128, 1128, 0, 0,
	0, 0, 1128, 1128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 766,
	768, 769, 772, 773, 774, 812, 813, 814, 775, 809,
	810, 811, 776, 0, 0, 1046, 1047, 805, 0, 0,
	0, 0, 0, 0, 0, 737, 553, 0, 555, 262,
	593, 0, 439, 0, 625, 428, 510, 1113, 1112, 1102,
	0, 1103, 1110, 1115, 0, 1118, 0, 893, 34, 0,
	54, 0, 59, 0, 0, 0, 0, 0, 0, 0,
	546, 667, 672, 674, 675, 0, 0, 678, 679, 680,
	681, 0, 0, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 709, 710, 711, 712, 713, 714, 694,
	695, 696, 697, 698, 699, 706, 0, 0, 703, 0,
	0, 0, 800, 0, 0, 744, 746, 747, 748, 749,
	750, 745, 0, 0, 0, 0, 736, 738, 780, 0,
	554, 592, 601, 602, 439, 347, 1106, 0, 0, 25,
	0, 0, 51, 0, 60, 0, 62, 63, 0, 0,
	411, 401, 656, 0, 0, 662, 0, 668, 676, 677,
	682, 683, 700, 0, 0, 702, 0, 0, 808, 0,
	787, 801, 0, 0, 593, 593, 593, 593, 0, 781,
	594, 1128, 0, 0, 598, 599, 603, 1116, 1119, 629,
	0, 35, 0, 37, 39, 40, 754, 48, 49, 53,
	61, 628, 410, 0, 634, 0, 0, 0, 0, 0,
	665, 0, 707, 708, 701, 704, 705, 778, 786, 788,
	789, 790, 0, 802, 803, 804, 806, 731, 732, 733,
	734, 0, 0, 596, 0, 26, 27, 0, 36, 0,
	0, 412, 636, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 779, 791, 0, 792, 0, 0, 0, 735,
	595, 597, 0, 0, 38, 755, 633, 0, 667, 658,
	0, 660, 0, 0, 0, 0, 793, 795, 796, 0,
	0, 794, 28, 29, 30, 0, 0, 638, 0, 654,
	659, 661, 0, 666, 664, 797, 799, 798, 756, 637,
	0, 650, 635, 0, 663, 639, -2, 0, 655, 640,
	-2, 0, 648, 0, 0, 641, 649, 0, 644, 0,
	0, 0, 643, 0, -2, 651, 0, 0, 645, -2,
	0, 653, 652,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 87, 3, 3, 3, 115, 107, 3,
	58, 60, 112, 110, 59, 111, 124, 113, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 482,
	95, 94, 96, 3, 483, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 117, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 484, 106, 485, 118,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 88, 89, 90, 91, 92, 93, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 108, 109, 114,
	116, 119, 120, 121, 122, 123, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:541
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:547
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:573
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:577
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:583
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:598
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:604
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:608
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:614
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:621
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:630
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:634
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:638
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:651
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:657
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:666
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:677
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:681
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:687
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:691
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:697
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:701
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:707
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:731
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//        	yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:750
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:754
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:758
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:763
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:767
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:775
		{
			yyVAL.str = ""
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:779
		{
			yyVAL.str = yyDollar[3].str
		}
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:784
		{
			yyVAL.str = "\n"
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:788
		{
			yyVAL.str = yyDollar[3].str
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:797
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:821
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:825
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:831
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:837
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:855
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:872
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:895
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:899
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:903
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:908
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:912
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:918
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:931
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:942
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:955
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:959
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:969
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Users:      yyDollar[8].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:982
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:995
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1001
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1014
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1022
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1030
		{
			yyLOCAL = tree.OBJECT_TYPE_NONE
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1034
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1038
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1042
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1046
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1050
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1056
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1060
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1066
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1073
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1082
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1086
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1092
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1096
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1100
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1104
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1108
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1112
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1116
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1120
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1124
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1128
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1132
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1140
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1148
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1152
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1156
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1160
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1164
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1168
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1172
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1176
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1180
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1184
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1192
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1196
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1200
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1204
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1208
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1212
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1216
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1220
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1232
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1238
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1250
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1254
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1258
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1262
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1268
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1272
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1276
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1282
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1288
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1292
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1299
		{
			yyVAL.str = yyDollar[3].str
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1305
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1309
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1315
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1323
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1332
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1340
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1348
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1371
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1394
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1401
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1408
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1416
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1423
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1430
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1443
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1447
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1453
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1457
		{
			yyVAL.str = yyDollar[1].str
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1464
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1475
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1481
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1514
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1518
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1528
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1536
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1541
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1546
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1552
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1559
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1565
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1572
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1579
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1589
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1596
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1607
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1618
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1622
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1628
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1640
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1656
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1660
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1666
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1675
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1681
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1685
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1701
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1709
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1717
		{
			explainStmt := tree.NewExplainStmt(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1727
		{
			explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
			explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1763
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1775
		{
			yyVAL.str = yyDollar[1].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1780
		{
			yyVAL.str = "true"
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1781
		{
			yyVAL.str = "false"
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1782
		{
			yyVAL.str = yyDollar[1].str
		}
	case 242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1798
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1810
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1825
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1830
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1834
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1839
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1843
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1867
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1871
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1887
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1891
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1895
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1899
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1919
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1925
		{
			yyVAL.item = nil
		}
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1930
		{
			yyVAL.item = nil
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1952
		{
			yyLOCAL = &tree.ShowTarget{Target: yyDollar[2].str, Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1956
		{
			yyLOCAL = &tree.ShowTarget{Target: "charset", Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1962
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[4].tableNameUnion(),
				Where:     yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1976
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1986
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1999
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2003
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2021
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2027
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2037
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2049
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2053
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2059
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2071
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2088
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2093
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2097
		{
			yyVAL.str = yyDollar[2].str
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2103
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2120
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2126
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2135
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2141
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2145
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2154
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2158
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2162
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2181
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2190
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2199
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2203
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2209
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2218
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2227
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2237
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2243
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2249
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2255
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2263
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2268
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2275
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2304
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2315
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2319
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2325
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2330
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2337
		{
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2339
		{
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2342
		{
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2351
		{
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2355
		{
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2360
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2369
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2376
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2382
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2390
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2397
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2404
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2423
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2427
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2431
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2437
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2446
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2450
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2456
		{
			yyVAL.str = yyDollar[1].str
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2460
		{
			yyVAL.str = yyDollar[3].str
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2466
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2470
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2476
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2481
		{
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2492
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2496
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2503
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2508
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2512
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2518
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2522
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2528
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2532
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2541
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2554
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2561
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2568
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2586
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2605
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2611
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2618
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2622
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2635
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2639
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2644
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2648
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2655
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2660
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2667
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2673
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2677
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2681
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2685
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2689
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2693
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2699
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2706
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2715
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2719
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2725
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2737
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2742
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2746
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2752
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2756
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2760
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2765
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2769
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2775
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2785
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2791
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2796
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2800
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2804
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2811
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2815
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2821
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2825
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2835
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2845
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2855
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2867
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2892
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2908
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2916
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2924
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2966
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2977
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3003
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3016
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3021
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3025
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3040
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3044
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3050
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3054
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3058
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3062
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3067
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3075
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3081
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3089
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3093
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3106
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3125
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3134
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3144
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3148
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3158
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3162
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3166
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3170
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3176
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3186
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3192
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3196
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3200
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3210
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3216
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3226
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3230
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3236
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3253
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3258
		{
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3259
		{
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3263
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3275
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3279
		{
			yyVAL.str = yyDollar[1].str
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3283
		{
			yyVAL.str = yyDollar[2].str
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3292
		{
			yyVAL.str = ""
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3296
		{
			yyVAL.str = yyDollar[1].str
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3300
		{
			yyVAL.str = yyDollar[2].str
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3304
		{
			yyVAL.str = yyDollar[1].str
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3308
		{
			yyVAL.str = yyDollar[2].str
		}
	case 545:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3342
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3352
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3363
		{
		}
	case 549:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3368
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3380
		{
			yyVAL.str = yyDollar[1].str
		}
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3386
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3396
		{
			yyVAL.str = yyDollar[1].str
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3402
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3409
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3415
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3423
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3429
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3436
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3444
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3450
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3459
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3471
		{
			yyVAL.str = yyDollar[1].str
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3476
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3482
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3490
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3596
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3600
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3606
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3616
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3620
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3626
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3636
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3640
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3644
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3653
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3659
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3666
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3672
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3685
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3694
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3698
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3721
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3725
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3729
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3733
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3739
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3758
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3762
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3784
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3788
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3792
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3796
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3800
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3806
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3810
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3816
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3821
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3826
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3830
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3834
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3838
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3842
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3848
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3862
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3866
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3871
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3875
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3881
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3885
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3891
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3895
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3899
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3914
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3925
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3936
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3943
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3950
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3961
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:3974
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3985
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3989
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3998
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4012
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4021
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4025
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4031
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4035
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4041
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4050
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4064
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4070
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4074
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4080
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4087
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4096
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4100
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4109
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4114
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4118
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4123
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4127
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4137
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4141
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4152
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4160
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4168
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4176
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4187
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4197
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4207
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4211
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4216
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4220
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4225
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4229
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4235
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4239
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4243
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4249
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4253
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4257
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4261
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4265
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4269
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4273
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4277
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4281
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4285
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4289
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4293
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4297
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4301
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4305
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4309
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4313
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4317
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4321
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4325
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4329
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4333
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4337
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4341
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4345
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4349
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4353
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4357
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4361
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4368
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4372
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4378
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4383
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4387
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4391
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4397
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4409
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4413
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4417
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4431
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4435
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4444
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4449
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4455
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4462
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4466
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4472
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4476
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4482
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4492
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4498
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4507
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4516
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4539
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4558
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4566
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4572
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4576
		{
			yyVAL.str = yyDollar[1].str
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4586
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4592
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4598
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4612
		{
			yyVAL.str = ""
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:4619
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4625
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4629
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4633
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4644
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4648
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4652
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4657
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4661
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4667
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4671
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4677
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4681
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4685
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4689
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4693
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4697
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4701
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4705
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4709
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4713
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4717
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4721
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4725
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4735
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4739
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4744
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4748
		{
			yyVAL.str = yyDollar[1].str
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4754
		{
			yyVAL.str = ""
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4758
		{
			yyVAL.str = yyDollar[2].str
		}
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:4764
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4775
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4785
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4792
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4799
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4806
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4815
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4821
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4827
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4831
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4835
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4839
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4843
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4848
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4855
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4859
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4863
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4872
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4877
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4881
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:4897
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4903
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4907
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4911
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4915
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4919
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4923
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4927
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4931
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4935
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4939
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4943
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4947
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4951
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4957
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4961
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4965
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4969
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4973
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4977
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4981
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4985
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4989
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4993
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4997
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5001
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5006
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5014
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5022
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5031
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5035
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5039
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5043
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5047
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5056
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5065
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5071
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5075
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5081
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5091
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5108
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5125
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5138
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5151
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5163
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5177
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5192
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5207
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5224
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5239
		{
		}
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5245
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5254
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5262
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5270
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5279
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5288
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5297
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5306
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5315
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5324
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5333
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5342
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5351
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5360
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5369
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5385
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5393
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5401
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5409
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5417
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5426
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5434
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5443
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5452
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5460
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5468
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5477
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5487
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5508
		{
			yyVAL.str = yyDollar[1].str
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5544
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5556
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5570
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5578
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5585
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5592
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5604
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5612
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5623
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5632
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5641
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5649
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5659
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5667
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5675
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5689
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5699
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5718
		{
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5720
		{
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5760
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5770
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5774
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5778
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:5784
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5793
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5799
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5803
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5810
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5814
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5818
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5826
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5830
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5834
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5838
		{
			yyLOCAL = tree.NewComparisonExpr(tree.EQUAL, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5842
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_EQUAL, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5846
		{
			arg := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), "", false, tree.P_char)
			yyLOCAL = tree.NewComparisonExpr(tree.EQUAL, yyDollar[1].exprUnion(), arg)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5851
		{
			arg := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), "", false, tree.P_char)
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_EQUAL, yyDollar[1].exprUnion(), arg)
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5856
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5862
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5866
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5870
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5874
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5881
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5885
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5891
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5895
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5899
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5903
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5907
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5911
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5915
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5919
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5929
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5935
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5939
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5946
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5950
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5954
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5960
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5964
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5968
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5972
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5976
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5980
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5984
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5990
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5994
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5998
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6002
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6008
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6012
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6025
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6030
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6034
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6038
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6042
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6056
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6060
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6074
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6080
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6091
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6096
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6102
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6114
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6126
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6138
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6151
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6164
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6177
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6190
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6203
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6216
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6229
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6242
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6255
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6268
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6283
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6306
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6343
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6391
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6408
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6420
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6435
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6455
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6475
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6491
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6504
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6517
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6530
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6543
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6555
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6567
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6579
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6591
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6603
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6615
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6627
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6639
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6651
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6664
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6679
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6702
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6707
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6713
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6720
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6724
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6729
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6733
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6739
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6745
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6752
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6759
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6768
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6775
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6791
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6795
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6799
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6805
		{
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6807
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6817
		{
			yyVAL.str = ""
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6821
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

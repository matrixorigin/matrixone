// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const LOWER_THAN_SET = 57366
const SET = 57367
const ALL = 57368
const DISTINCT = 57369
const DISTINCTROW = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const INTO = 57375
const DUPLICATE = 57376
const DEFAULT = 57377
const LOCK = 57378
const KEYS = 57379
const VALUES = 57380
const NEXT = 57381
const VALUE = 57382
const SHARE = 57383
const MODE = 57384
const SQL_NO_CACHE = 57385
const SQL_CACHE = 57386
const JOIN = 57387
const STRAIGHT_JOIN = 57388
const LEFT = 57389
const RIGHT = 57390
const INNER = 57391
const OUTER = 57392
const CROSS = 57393
const NATURAL = 57394
const USE = 57395
const FORCE = 57396
const ON = 57397
const USING = 57398
const SUBQUERY_AS_EXPR = 57399
const LOWER_THAN_STRING = 57400
const ID = 57401
const AT_ID = 57402
const AT_AT_ID = 57403
const STRING = 57404
const VALUE_ARG = 57405
const LIST_ARG = 57406
const COMMENT = 57407
const COMMENT_KEYWORD = 57408
const INTEGRAL = 57409
const HEX = 57410
const BIT_LITERAL = 57411
const FLOAT = 57412
const HEXNUM = 57413
const NULL = 57414
const TRUE = 57415
const FALSE = 57416
const LOWER_THAN_CHARSET = 57417
const CHARSET = 57418
const UNIQUE = 57419
const KEY = 57420
const OR = 57421
const PIPE_CONCAT = 57422
const XOR = 57423
const AND = 57424
const NOT = 57425
const BETWEEN = 57426
const CASE = 57427
const WHEN = 57428
const THEN = 57429
const ELSE = 57430
const END = 57431
const LE = 57432
const GE = 57433
const NE = 57434
const NULL_SAFE_EQUAL = 57435
const IS = 57436
const LIKE = 57437
const REGEXP = 57438
const IN = 57439
const ASSIGNMENT = 57440
const SHIFT_LEFT = 57441
const SHIFT_RIGHT = 57442
const DIV = 57443
const MOD = 57444
const UNARY = 57445
const COLLATE = 57446
const BINARY = 57447
const UNDERSCORE_BINARY = 57448
const INTERVAL = 57449
const BEGIN = 57450
const START = 57451
const TRANSACTION = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const WORK = 57455
const CONSISTENT = 57456
const SNAPSHOT = 57457
const CHAIN = 57458
const NO = 57459
const RELEASE = 57460
const PRIORITY = 57461
const QUICK = 57462
const BIT = 57463
const TINYINT = 57464
const SMALLINT = 57465
const MEDIUMINT = 57466
const INT = 57467
const INTEGER = 57468
const BIGINT = 57469
const INTNUM = 57470
const REAL = 57471
const DOUBLE = 57472
const FLOAT_TYPE = 57473
const DECIMAL = 57474
const NUMERIC = 57475
const DECIMAL_VALUE = 57476
const TIME = 57477
const TIMESTAMP = 57478
const DATETIME = 57479
const YEAR = 57480
const CHAR = 57481
const VARCHAR = 57482
const BOOL = 57483
const CHARACTER = 57484
const VARBINARY = 57485
const NCHAR = 57486
const TEXT = 57487
const TINYTEXT = 57488
const MEDIUMTEXT = 57489
const LONGTEXT = 57490
const BLOB = 57491
const TINYBLOB = 57492
const MEDIUMBLOB = 57493
const LONGBLOB = 57494
const JSON = 57495
const ENUM = 57496
const GEOMETRY = 57497
const POINT = 57498
const LINESTRING = 57499
const POLYGON = 57500
const GEOMETRYCOLLECTION = 57501
const MULTIPOINT = 57502
const MULTILINESTRING = 57503
const MULTIPOLYGON = 57504
const INT1 = 57505
const INT2 = 57506
const INT3 = 57507
const INT4 = 57508
const INT8 = 57509
const SQL_SMALL_RESULT = 57510
const SQL_BIG_RESULT = 57511
const SQL_BUFFER_RESULT = 57512
const LOW_PRIORITY = 57513
const HIGH_PRIORITY = 57514
const DELAYED = 57515
const CREATE = 57516
const ALTER = 57517
const DROP = 57518
const RENAME = 57519
const ANALYZE = 57520
const ADD = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const CONSTRAINT = 57531
const SPATIAL = 57532
const FULLTEXT = 57533
const FOREIGN = 57534
const KEY_BLOCK_SIZE = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const MAXVALUE = 57544
const PARTITION = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const STATUS = 57551
const VARIABLES = 57552
const ROLE = 57553
const PROXY = 57554
const AVG_ROW_LENGTH = 57555
const STORAGE = 57556
const DISK = 57557
const MEMORY = 57558
const CHECKSUM = 57559
const COMPRESSION = 57560
const DATA = 57561
const DIRECTORY = 57562
const DELAY_KEY_WRITE = 57563
const ENCRYPTION = 57564
const ENGINE = 57565
const MAX_ROWS = 57566
const MIN_ROWS = 57567
const PACK_KEYS = 57568
const ROW_FORMAT = 57569
const STATS_AUTO_RECALC = 57570
const STATS_PERSISTENT = 57571
const STATS_SAMPLE_PAGES = 57572
const DYNAMIC = 57573
const COMPRESSED = 57574
const REDUNDANT = 57575
const COMPACT = 57576
const FIXED = 57577
const COLUMN_FORMAT = 57578
const AUTO_RANDOM = 57579
const RESTRICT = 57580
const CASCADE = 57581
const ACTION = 57582
const PARTIAL = 57583
const SIMPLE = 57584
const CHECK = 57585
const ENFORCED = 57586
const RANGE = 57587
const LIST = 57588
const ALGORITHM = 57589
const LINEAR = 57590
const PARTITIONS = 57591
const SUBPARTITION = 57592
const SUBPARTITIONS = 57593
const TYPE = 57594
const ANY = 57595
const SOME = 57596
const EXTERNAL = 57597
const LOCALFILE = 57598
const URL = 57599
const PREPARE = 57600
const DEALLOCATE = 57601
const PROPERTIES = 57602
const PARSER = 57603
const VISIBLE = 57604
const INVISIBLE = 57605
const BTREE = 57606
const HASH = 57607
const RTREE = 57608
const BSI = 57609
const ZONEMAP = 57610
const LEADING = 57611
const BOTH = 57612
const TRAILING = 57613
const UNKNOWN = 57614
const EXPIRE = 57615
const ACCOUNT = 57616
const UNLOCK = 57617
const DAY = 57618
const NEVER = 57619
const SECOND = 57620
const ASCII = 57621
const COALESCE = 57622
const COLLATION = 57623
const HOUR = 57624
const MICROSECOND = 57625
const MINUTE = 57626
const MONTH = 57627
const QUARTER = 57628
const REPEAT = 57629
const REVERSE = 57630
const ROW_COUNT = 57631
const WEEK = 57632
const REVOKE = 57633
const FUNCTION = 57634
const PRIVILEGES = 57635
const TABLESPACE = 57636
const EXECUTE = 57637
const SUPER = 57638
const GRANT = 57639
const OPTION = 57640
const REFERENCES = 57641
const REPLICATION = 57642
const SLAVE = 57643
const CLIENT = 57644
const USAGE = 57645
const RELOAD = 57646
const FILE = 57647
const TEMPORARY = 57648
const ROUTINE = 57649
const EVENT = 57650
const SHUTDOWN = 57651
const NULLX = 57652
const AUTO_INCREMENT = 57653
const APPROXNUM = 57654
const SIGNED = 57655
const UNSIGNED = 57656
const ZEROFILL = 57657
const ADMIN_NAME = 57658
const RANDOM = 57659
const SUSPEND = 57660
const ATTRIBUTE = 57661
const HISTORY = 57662
const REUSE = 57663
const CURRENT = 57664
const OPTIONAL = 57665
const FAILED_LOGIN_ATTEMPTS = 57666
const PASSWORD_LOCK_TIME = 57667
const UNBOUNDED = 57668
const SECONDARY = 57669
const USER = 57670
const IDENTIFIED = 57671
const CIPHER = 57672
const ISSUER = 57673
const X509 = 57674
const SUBJECT = 57675
const SAN = 57676
const REQUIRE = 57677
const SSL = 57678
const NONE = 57679
const PASSWORD = 57680
const MAX_QUERIES_PER_HOUR = 57681
const MAX_UPDATES_PER_HOUR = 57682
const MAX_CONNECTIONS_PER_HOUR = 57683
const MAX_USER_CONNECTIONS = 57684
const FORMAT = 57685
const VERBOSE = 57686
const CONNECTION = 57687
const LOAD = 57688
const INFILE = 57689
const TERMINATED = 57690
const OPTIONALLY = 57691
const ENCLOSED = 57692
const ESCAPED = 57693
const STARTING = 57694
const LINES = 57695
const DATABASES = 57696
const TABLES = 57697
const EXTENDED = 57698
const FULL = 57699
const PROCESSLIST = 57700
const FIELDS = 57701
const COLUMNS = 57702
const OPEN = 57703
const ERRORS = 57704
const WARNINGS = 57705
const INDEXES = 57706
const SCHEMAS = 57707
const NAMES = 57708
const GLOBAL = 57709
const SESSION = 57710
const ISOLATION = 57711
const LEVEL = 57712
const READ = 57713
const WRITE = 57714
const ONLY = 57715
const REPEATABLE = 57716
const COMMITTED = 57717
const UNCOMMITTED = 57718
const SERIALIZABLE = 57719
const LOCAL = 57720
const CURRENT_TIMESTAMP = 57721
const DATABASE = 57722
const CURRENT_TIME = 57723
const LOCALTIME = 57724
const LOCALTIMESTAMP = 57725
const UTC_DATE = 57726
const UTC_TIME = 57727
const UTC_TIMESTAMP = 57728
const REPLACE = 57729
const CONVERT = 57730
const SEPARATOR = 57731
const CURRENT_DATE = 57732
const CURRENT_USER = 57733
const CURRENT_ROLE = 57734
const SECOND_MICROSECOND = 57735
const MINUTE_MICROSECOND = 57736
const MINUTE_SECOND = 57737
const HOUR_MICROSECOND = 57738
const HOUR_SECOND = 57739
const HOUR_MINUTE = 57740
const DAY_MICROSECOND = 57741
const DAY_SECOND = 57742
const DAY_MINUTE = 57743
const DAY_HOUR = 57744
const YEAR_MONTH = 57745
const SQL_TSI_HOUR = 57746
const SQL_TSI_DAY = 57747
const SQL_TSI_WEEK = 57748
const SQL_TSI_MONTH = 57749
const SQL_TSI_QUARTER = 57750
const SQL_TSI_YEAR = 57751
const SQL_TSI_SECOND = 57752
const SQL_TSI_MINUTE = 57753
const RECURSIVE = 57754
const CONFIG = 57755
const MATCH = 57756
const AGAINST = 57757
const BOOLEAN = 57758
const LANGUAGE = 57759
const WITH = 57760
const QUERY = 57761
const EXPANSION = 57762
const ADDDATE = 57763
const BIT_AND = 57764
const BIT_OR = 57765
const BIT_XOR = 57766
const CAST = 57767
const COUNT = 57768
const APPROX_COUNT_DISTINCT = 57769
const APPROX_PERCENTILE = 57770
const CURDATE = 57771
const CURTIME = 57772
const DATE_ADD = 57773
const DATE_SUB = 57774
const EXTRACT = 57775
const GROUP_CONCAT = 57776
const MAX = 57777
const MID = 57778
const MIN = 57779
const NOW = 57780
const POSITION = 57781
const SESSION_USER = 57782
const STD = 57783
const STDDEV = 57784
const STDDEV_POP = 57785
const STDDEV_SAMP = 57786
const SUBDATE = 57787
const SUBSTR = 57788
const SUBSTRING = 57789
const SUM = 57790
const SYSDATE = 57791
const SYSTEM_USER = 57792
const TRANSLATE = 57793
const TRIM = 57794
const VARIANCE = 57795
const VAR_POP = 57796
const VAR_SAMP = 57797
const AVG = 57798
const JSON_EXTRACT = 57799
const ROW = 57800
const OUTFILE = 57801
const HEADER = 57802
const MAX_FILE_SIZE = 57803
const FORCE_QUOTE = 57804
const UNUSED = 57805

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7200

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	21, 431,
	-2, 412,
	-1, 68,
	199, 586,
	-2, 628,
	-1, 85,
	226, 289,
	227, 289,
	-2, 310,
	-1, 366,
	21, 432,
	-2, 395,
	-1, 441,
	94, 1308,
	105, 1308,
	124, 1308,
	-2, 1120,
	-1, 471,
	21, 432,
	-2, 395,
	-1, 631,
	58, 1459,
	-2, 1466,
	-1, 639,
	58, 1460,
	-2, 1474,
	-1, 641,
	58, 1456,
	-2, 1476,
	-1, 642,
	58, 1457,
	-2, 1477,
	-1, 647,
	58, 1458,
	-2, 1483,
	-1, 648,
	58, 1461,
	-2, 1484,
	-1, 649,
	58, 1462,
	-2, 1485,
	-1, 650,
	58, 883,
	-2, 1486,
	-1, 651,
	58, 884,
	-2, 1487,
	-1, 652,
	58, 885,
	-2, 1488,
	-1, 654,
	58, 1463,
	-2, 1490,
	-1, 655,
	58, 903,
	-2, 1491,
	-1, 656,
	58, 902,
	-2, 1492,
	-1, 659,
	58, 1464,
	-2, 1495,
	-1, 660,
	58, 1465,
	-2, 1496,
	-1, 666,
	58, 965,
	-2, 1308,
	-1, 667,
	58, 974,
	-2, 1333,
	-1, 668,
	58, 978,
	-2, 1372,
	-1, 669,
	58, 989,
	-2, 1432,
	-1, 670,
	58, 991,
	-2, 1442,
	-1, 671,
	58, 979,
	-2, 1447,
	-1, 672,
	58, 987,
	-2, 1451,
	-1, 673,
	58, 968,
	-2, 1452,
	-1, 831,
	1, 612,
	60, 612,
	481, 612,
	-2, 619,
	-1, 971,
	21, 431,
	-2, 811,
	-1, 1018,
	124, 1130,
	-2, 1128,
	-1, 1020,
	124, 530,
	-2, 1125,
	-1, 1021,
	124, 531,
	-2, 1126,
	-1, 1231,
	1, 613,
	60, 613,
	481, 613,
	-2, 619,
	-1, 1319,
	58, 1032,
	-2, 1449,
	-1, 1320,
	58, 1033,
	-2, 1450,
	-1, 1488,
	56, 352,
	59, 352,
	-2, 717,
	-1, 1808,
	79, 619,
	120, 619,
	156, 619,
	159, 619,
	-2, 665,
	-1, 1810,
	260, 778,
	-2, 759,
	-1, 1840,
	56, 352,
	59, 352,
	-2, 718,
	-1, 1917,
	79, 619,
	120, 619,
	156, 619,
	159, 619,
	-2, 666,
	-1, 1945,
	260, 778,
	-2, 760,
	-1, 2342,
	59, 640,
	60, 640,
	-2, 619,
	-1, 2346,
	59, 640,
	60, 640,
	-2, 619,
	-1, 2358,
	59, 644,
	60, 644,
	-2, 619,
	-1, 2361,
	59, 645,
	60, 645,
	-2, 619,
}

const yyPrivate = 57344

const yyLast = 21365

var yyAct = [...]int{
	814, 1322, 2348, 2346, 2345, 2353, 2323, 806, 2192, 676,
	1982, 2312, 2272, 1279, 1957, 695, 2256, 2164, 2230, 2168,
	2145, 2257, 1905, 1913, 1215, 1980, 901, 599, 102, 1981,
	1802, 2152, 2005, 319, 325, 608, 325, 1323, 1275, 1903,
	367, 1861, 802, 366, 674, 1965, 1833, 1631, 866, 105,
	1464, 1946, 329, 1994, 836, 1491, 439, 809, 1964, 1627,
	549, 323, 22, 1854, 1872, 1864, 630, 538, 1503, 886,
	860, 395, 1274, 707, 63, 1876, 101, 1636, 1632, 1814,
	1704, 1194, 1189, 1000, 1694, 1712, 1566, 675, 1683, 1646,
	1238, 466, 1015, 440, 1642, 335, 1018, 1625, 1190, 551,
	1001, 102, 1010, 1406, 311, 1392, 63, 1009, 1529, 1310,
	685, 879, 863, 1261, 62, 1502, 861, 1466, 322, 15,
	845, 1237, 3, 1461, 1921, 1232, 320, 6, 321, 5,
	1191, 800, 816, 1321, 442, 824, 677, 444, 1324, 1336,
	623, 847, 397, 846, 447, 30, 312, 907, 1201, 468,
	883, 904, 1224, 792, 1221, 481, 805, 1277, 938, 820,
	22, 431, 315, 799, 1301, 853, 823, 394, 446, 1907,
	575, 520, 63, 337, 12, 7, 338, 30, 2237, 1208,
	4, 98, 1198, 2012, 1909, 1801, 811, 1003, 2209, 838,
	1973, 622, 324, 577, 591, 500, 97, 97, 609, 93,
	536, 2219, 1439, 97, 519, 27, 87, 69, 96, 445,
	1447, 1195, 1206, 2244, 568, 392, 569, 15, 2242, 97,
	97, 465, 27, 87, 69, 6, 97, 5, 327, 97,
	310, 27, 87, 69, 97, 92, 27, 87, 69, 432,
	578, 757, 81, 30, 94, 94, 402, 1592, 868, 869,
	793, 94, 797, 1463, 754, 562, 563, 1453, 777, 416,
	452, 451, 453, 51, 2260, 2261, 849, 94, 94, 332,
	808, 517, 513, 2098, 756, 560, 796, 94, 559, 562,
	563, 2234, 94, 2003, 2006, 2007, 2008, 2009, 1803, 2101,
	450, 1619, 1620, 2015, 1621, 810, 1462, 1434, 484, 475,
	2167, 1797, 880, 1822, 1202, 417, 508, 1829, 1657, 1978,
	1655, 583, 1647, 474, 2073, 1613, 1222, 1991, 1860, 1859,
	584, 504, 334, 473, 1962, 515, 516, 325, 1611, 102,
	514, 1444, 876, 788, 509, 88, 89, 455, 90, 91,
	503, 2076, 2218, 1975, 1534, 1314, 1315, 363, 2246, 2270,
	364, 470, 472, 448, 444, 471, 326, 1652, 1653, 418,
	2067, 795, 2339, 2354, 1651, 2279, 2190, 2191, 363, 2194,
	2194, 364, 1654, 2241, 1469, 368, 2286, 491, 2216, 2166,
	2259, 484, 2061, 2333, 68, 2052, 95, 2030, 2029, 365,
	63, 63, 446, 2200, 395, 2248, 2249, 1313, 1314, 1315,
	1475, 68, 86, 95, 85, 49, 587, 449, 1311, 558,
	557, 2221, 2222, 570, 1207, 1567, 511, 506, 2355, 2349,
	493, 85, 80, 79, 2324, 561, 2018, 467, 495, 507,
	510, 537, 539, 445, 440, 440, 440, 333, 2096, 603,
	603, 576, 525, 512, 540, 541, 500, 543, 1440, 794,
	542, 505, 1649, 1288, 2315, 1199, 325, 626, 626, 454,
	818, 30, 30, 486, 485, 546, 1616, 605, 544, 443,
	759, 328, 2153, 2154, 2155, 2157, 2156, 1640, 1522, 477,
	478, 601, 601, 1856, 1855, 82, 83, 1284, 775, 1477,
	1478, 1479, 1480, 2056, 625, 625, 581, 553, 1286, 1285,
	603, 871, 603, 474, 565, 566, 760, 492, 389, 390,
	391, 579, 580, 807, 872, 1283, 408, 611, 59, 489,
	870, 311, 84, 586, 60, 420, 421, 2321, 755, 2276,
	1843, 562, 563, 408, 1668, 1622, 562, 563, 1531, 1492,
	63, 603, 554, 1442, 831, 1441, 486, 485, 395, 2247,
	784, 837, 1433, 63, 2165, 102, 827, 1483, 1533, 1428,
	1253, 813, 63, 2316, 817, 1213, 522, 2220, 2130, 854,
	854, 1196, 1185, 61, 2024, 603, 102, 524, 1196, 1648,
	479, 1658, 1828, 2074, 1614, 1637, 1640, 1196, 499, 440,
	852, 603, 881, 410, 1906, 1641, 409, 1209, 2054, 919,
	804, 1197, 2053, 842, 819, 1974, 763, 783, 895, 548,
	410, 1312, 832, 409, 1979, 780, 603, 779, 900, 102,
	102, 70, 70, 1650, 30, 1448, 916, 786, 70, 887,
	1468, 597, 598, 30, 905, 887, 887, 826, 856, 585,
	840, 607, 766, 761, 70, 70, 903, 310, 621, 752,
	564, 70, 610, 567, 70, 494, 801, 843, 844, 70,
	875, 789, 487, 782, 781, 920, 469, 902, 902, 778,
	906, 762, 798, 594, 595, 596, 1484, 803, 894, 1472,
	1473, 973, 956, 877, 2313, 2314, 443, 573, 574, 882,
	2057, 2058, 1610, 1471, 812, 1672, 423, 825, 1608, 384,
	592, 770, 771, 552, 1641, 848, 2310, 1326, 1325, 1634,
	1193, 593, 899, 1635, 1638, 834, 833, 972, 614, 615,
	616, 617, 618, 619, 620, 980, 458, 463, 464, 555,
	2299, 825, 1465, 857, 2204, 855, 2104, 1681, 590, 1617,
	859, 858, 1609, 841, 982, 425, 424, 1399, 892, 893,
	878, 1430, 1290, 971, 476, 850, 851, 1007, 1007, 1012,
	1192, 1397, 1398, 1396, 1772, 1639, 422, 1407, 974, 975,
	976, 977, 801, 1407, 897, 1572, 1554, 1020, 387, 898,
	896, 2131, 2133, 2134, 2135, 2132, 1761, 774, 837, 889,
	890, 891, 603, 1331, 445, 773, 1459, 978, 957, 958,
	959, 960, 961, 962, 963, 956, 822, 996, 2047, 589,
	1216, 1217, 912, 1021, 1898, 2063, 386, 946, 556, 102,
	102, 1553, 913, 914, 915, 912, 383, 382, 915, 912,
	446, 1774, 2062, 102, 1239, 959, 960, 961, 962, 963,
	956, 63, 1187, 913, 914, 915, 912, 377, 1818, 319,
	1813, 1897, 2332, 913, 914, 915, 912, 1255, 426, 1006,
	905, 913, 914, 915, 912, 2344, 419, 1218, 1220, 2329,
	2296, 445, 990, 913, 914, 915, 912, 1243, 2141, 2139,
	2137, 1235, 2280, 1334, 2127, 460, 461, 462, 1976, 2178,
	1826, 380, 2331, 1335, 2175, 603, 906, 2174, 2147, 2125,
	999, 923, 924, 925, 926, 927, 928, 929, 921, 626,
	375, 102, 30, 2140, 2138, 2136, 1280, 1212, 1306, 2126,
	1308, 1019, 2124, 1977, 1184, 1827, 2123, 887, 887, 887,
	1183, 2120, 1013, 1575, 1014, 2114, 1574, 1295, 1332, 1333,
	2111, 1282, 381, 2110, 1188, 1247, 625, 2269, 2013, 1999,
	1302, 1303, 1304, 1305, 1211, 1998, 1233, 1997, 1577, 913,
	914, 915, 912, 1993, 376, 2252, 1992, 1825, 1249, 1287,
	1251, 1656, 1329, 996, 1227, 1604, 764, 913, 914, 915,
	912, 1300, 1281, 1643, 2146, 1371, 828, 829, 830, 1316,
	1914, 2235, 2198, 1416, 1252, 1250, 848, 2197, 1248, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1257, 1256, 2330, 1401, 1402, 385, 2185, 2358, 1408,
	1777, 1411, 2173, 2128, 1727, 913, 914, 915, 912, 2121,
	2117, 2116, 1244, 1245, 1246, 2115, 2075, 2049, 1541, 1418,
	1291, 1292, 1293, 2014, 2010, 1751, 1748, 1749, 1750, 1299,
	1995, 1782, 2307, 1781, 1780, 1778, 1400, 2337, 1912, 955,
	954, 964, 965, 957, 958, 959, 960, 961, 962, 963,
	956, 1327, 1328, 363, 1330, 1910, 364, 1394, 1836, 1824,
	1366, 1367, 1368, 1369, 1370, 1823, 1820, 1376, 1377, 1378,
	1379, 913, 914, 915, 912, 1799, 1790, 1298, 955, 954,
	964, 965, 957, 958, 959, 960, 961, 962, 963, 956,
	2253, 1645, 1615, 1779, 1525, 1660, 1451, 1410, 1412, 1413,
	1715, 1421, 1409, 913, 914, 915, 912, 1417, 1210, 1419,
	723, 722, 913, 914, 915, 912, 1420, 1734, 1738, 1740,
	1742, 1744, 1745, 1747, 992, 1751, 1748, 1749, 1750, 953,
	2171, 1729, 1730, 1731, 1732, 1713, 1714, 1735, 952, 1716,
	765, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1733, 913, 914, 915, 912, 821, 1537, 2363, 1737,
	1739, 1741, 1743, 1746, 1581, 2094, 1435, 1537, 1580, 1422,
	370, 371, 372, 373, 2357, 2356, 603, 2225, 603, 2224,
	603, 1204, 2340, 369, 2205, 474, 413, 913, 914, 915,
	912, 2072, 2089, 1728, 1456, 1449, 964, 965, 957, 958,
	959, 960, 961, 962, 963, 956, 603, 2336, 2335, 1783,
	1784, 1204, 2327, 913, 914, 915, 912, 1488, 1204, 2326,
	1445, 2085, 2000, 1494, 613, 2275, 2274, 2084, 408, 1454,
	1455, 1901, 817, 1884, 1499, 1899, 2078, 2267, 839, 474,
	102, 102, 102, 102, 913, 914, 915, 912, 1896, 1504,
	1883, 474, 102, 1519, 1888, 913, 914, 915, 912, 1458,
	1853, 1504, 1446, 2078, 2262, 1486, 1837, 2305, 1808, 603,
	1482, 1792, 913, 914, 915, 912, 1693, 102, 102, 1297,
	2250, 1271, 22, 954, 964, 965, 957, 958, 959, 960,
	961, 962, 963, 956, 63, 1520, 2239, 2238, 1673, 1438,
	2078, 2214, 1584, 1436, 1582, 410, 1280, 1443, 409, 1705,
	1706, 839, 1542, 955, 954, 964, 965, 957, 958, 959,
	960, 961, 962, 963, 956, 1527, 1528, 1457, 1579, 1496,
	1578, 1497, 801, 2078, 2213, 1576, 1233, 1481, 1487, 15,
	407, 1474, 1538, 1493, 1546, 1539, 1540, 6, 411, 5,
	1882, 1523, 1543, 1498, 1680, 1501, 1505, 1506, 1507, 1508,
	1500, 1536, 825, 1516, 1518, 30, 1517, 2078, 2212, 2078,
	2211, 1521, 913, 914, 915, 912, 1415, 1561, 2203, 2202,
	1789, 1414, 1526, 612, 1548, 1549, 1550, 1551, 1552, 790,
	1556, 2093, 2092, 498, 1557, 1558, 1559, 1560, 2091, 2090,
	2298, 1532, 913, 914, 915, 912, 1771, 1007, 1535, 1596,
	1007, 1765, 1736, 1599, 2087, 2088, 1537, 1495, 2087, 2086,
	603, 1439, 1569, 1564, 1565, 1573, 1423, 1602, 913, 914,
	915, 912, 1226, 913, 914, 915, 912, 1764, 1585, 1242,
	2083, 474, 887, 2078, 2077, 2359, 1900, 1667, 887, 971,
	1490, 1630, 1537, 1766, 1537, 1752, 1225, 102, 1809, 913,
	914, 915, 912, 1603, 1793, 1563, 474, 1593, 1537, 1545,
	102, 1239, 1586, 1671, 1591, 1489, 1630, 1537, 1544, 63,
	1598, 1271, 1562, 1242, 1437, 1432, 1431, 1394, 910, 1571,
	445, 1595, 955, 954, 964, 965, 957, 958, 959, 960,
	961, 962, 963, 956, 1588, 1661, 1600, 1270, 1612, 1594,
	1601, 1587, 1697, 1662, 1663, 1664, 1607, 1597, 1606, 1490,
	404, 1768, 406, 416, 1426, 1425, 791, 403, 401, 400,
	412, 405, 908, 414, 415, 1242, 1241, 1204, 1203, 500,
	1669, 1271, 955, 954, 964, 965, 957, 958, 959, 960,
	961, 962, 963, 956, 1429, 1699, 603, 1404, 1666, 1297,
	1692, 1670, 603, 1665, 497, 1753, 768, 767, 498, 1583,
	500, 1678, 1759, 1760, 1195, 1677, 1688, 1763, 1676, 396,
	1214, 97, 1186, 1785, 87, 69, 603, 1762, 547, 1787,
	1773, 97, 588, 2309, 2303, 1786, 2287, 102, 601, 913,
	914, 915, 912, 1697, 601, 102, 2284, 2282, 1788, 913,
	914, 915, 912, 2177, 1812, 1770, 955, 954, 964, 965,
	957, 958, 959, 960, 961, 962, 963, 956, 2162, 94,
	1767, 2150, 2148, 2143, 2105, 1769, 1863, 2070, 2069, 94,
	1776, 2068, 2065, 603, 603, 1798, 2060, 2045, 102, 1840,
	550, 1758, 1791, 1807, 1873, 2066, 1794, 1757, 1865, 1877,
	1880, 474, 1870, 1869, 1949, 1806, 1674, 1675, 1795, 1796,
	1832, 1504, 1679, 913, 914, 915, 912, 63, 1852, 913,
	914, 915, 912, 1849, 1816, 601, 1834, 1691, 1831, 1819,
	1811, 1810, 1395, 1815, 94, 1815, 1280, 1817, 1952, 887,
	1845, 1756, 1848, 444, 1947, 1850, 1485, 1842, 1460, 1960,
	1961, 1424, 1289, 1851, 1240, 1948, 998, 997, 1839, 1838,
	1755, 995, 994, 913, 914, 915, 912, 993, 991, 1846,
	939, 1847, 350, 988, 349, 353, 345, 1867, 1868, 987,
	1568, 985, 913, 914, 915, 912, 984, 983, 341, 1953,
	1857, 1871, 981, 951, 1875, 950, 949, 948, 360, 947,
	1866, 955, 954, 964, 965, 957, 958, 959, 960, 961,
	962, 963, 956, 945, 944, 943, 1874, 942, 941, 1885,
	2343, 940, 937, 936, 363, 935, 934, 364, 933, 932,
	474, 1918, 1887, 931, 1966, 1968, 1754, 1966, 1966, 1889,
	1630, 930, 1891, 787, 1893, 1878, 758, 1881, 502, 1684,
	1685, 887, 474, 1229, 490, 1886, 2292, 2290, 913, 914,
	915, 912, 2258, 1687, 1890, 1476, 1892, 1894, 1895, 1702,
	837, 1296, 501, 1959, 1690, 1633, 1513, 1972, 1963, 1841,
	1967, 1514, 1511, 1902, 1689, 1701, 1844, 1512, 1915, 1943,
	1510, 913, 914, 915, 912, 1969, 1970, 1509, 1427, 1234,
	1955, 1988, 1515, 1450, 1267, 1268, 1971, 913, 914, 915,
	912, 1216, 1217, 1624, 2227, 1985, 1842, 521, 50, 29,
	28, 1223, 1954, 1956, 1989, 955, 954, 964, 965, 957,
	958, 959, 960, 961, 962, 963, 956, 496, 2016, 1623,
	2020, 1700, 1273, 835, 1996, 1403, 1326, 1325, 572, 307,
	308, 309, 571, 343, 342, 346, 2001, 533, 534, 531,
	532, 348, 1182, 913, 914, 915, 912, 913, 914, 915,
	912, 529, 530, 352, 603, 1263, 1266, 1267, 1268, 1264,
	523, 1265, 1269, 102, 2304, 1962, 2182, 344, 527, 528,
	2021, 2022, 1968, 2025, 2026, 2027, 2028, 1950, 2023, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 1963, 2048, 2180, 1834, 2046, 2108, 2106,
	2050, 370, 371, 372, 373, 2103, 2102, 839, 2100, 1911,
	1805, 2064, 1258, 1804, 369, 1695, 1696, 2071, 526, 369,
	1530, 2080, 2109, 1605, 2079, 2081, 1547, 2082, 1986, 1987,
	444, 488, 1263, 1266, 1267, 1268, 1264, 2099, 1265, 1269,
	2294, 2293, 2293, 2294, 2142, 873, 1272, 398, 35, 1,
	1200, 1821, 1659, 1644, 347, 351, 354, 545, 355, 356,
	388, 1372, 357, 358, 359, 535, 474, 361, 362, 474,
	474, 474, 2122, 772, 2112, 2113, 457, 483, 2107, 474,
	2118, 2119, 769, 1280, 482, 480, 1405, 1337, 708, 1002,
	63, 2151, 1008, 2144, 2159, 2160, 2161, 2226, 2271, 2158,
	2176, 2229, 785, 694, 2170, 2095, 2187, 1618, 2169, 2002,
	2097, 2004, 1452, 603, 603, 1904, 1205, 518, 2172, 1589,
	1590, 720, 711, 986, 2181, 713, 2183, 2184, 2179, 753,
	2188, 459, 710, 1830, 1470, 374, 456, 399, 1990, 1800,
	2195, 2196, 1858, 1879, 102, 1862, 2352, 2342, 2322, 2302,
	2193, 474, 2338, 2240, 2285, 601, 601, 2278, 2189, 2017,
	339, 874, 582, 474, 429, 2163, 340, 2217, 2149, 378,
	2201, 1228, 379, 1231, 1230, 1317, 2210, 922, 2233, 1393,
	989, 979, 628, 1570, 684, 678, 2206, 1467, 2215, 1958,
	1524, 34, 902, 2232, 33, 32, 2223, 911, 1016, 709,
	104, 1254, 1017, 2186, 2011, 2231, 2236, 693, 692, 691,
	690, 689, 1262, 2243, 2245, 1260, 1259, 865, 864, 909,
	2255, 2254, 2207, 2208, 2251, 967, 1908, 970, 2059, 2129,
	2055, 2263, 2264, 2265, 2266, 2051, 2199, 2273, 1917, 1916,
	2277, 968, 969, 966, 1944, 955, 954, 964, 965, 957,
	958, 959, 960, 961, 962, 963, 956, 1945, 1951, 1711,
	1707, 1709, 1710, 1708, 1775, 1703, 1628, 1629, 1626, 2268,
	1686, 2288, 1682, 1004, 2291, 1011, 2233, 2301, 2289, 815,
	99, 862, 2295, 474, 2297, 474, 1984, 2281, 11, 2283,
	2306, 2232, 2308, 807, 2300, 807, 10, 776, 9, 14,
	21, 20, 19, 58, 57, 56, 2317, 55, 2273, 18,
	474, 2318, 8, 2325, 54, 53, 52, 2328, 17, 16,
	807, 47, 2334, 48, 45, 44, 43, 42, 41, 40,
	39, 46, 2311, 38, 37, 36, 67, 2320, 66, 65,
	64, 23, 24, 2341, 25, 26, 77, 76, 78, 2351,
	74, 2350, 72, 75, 73, 71, 31, 13, 2, 0,
	0, 2362, 2361, 2360, 2351, 1128, 1170, 0, 0, 1116,
	0, 1078, 1130, 1052, 1067, 1138, 1068, 1069, 1103, 1031,
	1087, 229, 1065, 0, 1119, 1023, 1055, 1056, 1025, 1062,
	1026, 1053, 1080, 174, 1051, 1090, 199, 1136, 0, 0,
	258, 213, 0, 0, 1083, 1121, 1085, 1108, 1077, 1104,
	1039, 1097, 1131, 1066, 1101, 1132, 0, 0, 0, 0,
	0, 828, 829, 830, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 1100, 1125, 1064, 0, 159, 1129,
	1084, 1102, 0, 0, 1024, 1098, 0, 1029, 1032, 1137,
	1123, 1059, 1060, 0, 0, 0, 0, 0, 0, 0,
	1081, 1086, 1105, 1074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1057, 0, 1094, 0, 0, 0, 1034,
	1030, 0, 1079, 0, 148, 263, 277, 157, 254, 290,
	162, 261, 153, 228, 250, 0, 1169, 150, 275, 260,
	210, 193, 194, 149, 0, 245, 172, 185, 169, 226,
	0, 1127, 302, 168, 293, 1033, 285, 152, 1164, 284,
	225, 272, 276, 211, 205, 151, 274, 209, 204, 197,
	176, 189, 237, 203, 238, 190, 215, 214, 216, 1148,
	1149, 1150, 1151, 1152, 1160, 1161, 0, 1165, 1166, 1167,
	1038, 0, 1058, 1106, 0, 1022, 1114, 1122, 1076, 287,
	1124, 1073, 1072, 1155, 0, 1154, 262, 1156, 1157, 198,
	1120, 1054, 1063, 303, 1061, 248, 231, 1126, 1093, 1168,
	246, 201, 273, 239, 278, 264, 286, 242, 240, 144,
	265, 171, 212, 154, 155, 167, 173, 175, 177, 178,
	221, 222, 234, 253, 266, 267, 268, 170, 163, 247,
	164, 187, 165, 145, 255, 166, 146, 235, 271, 1153,
	183, 243, 208, 147, 207, 236, 270, 269, 294, 300,
	301, 305, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1162, 0, 1163, 299, 181,
	142, 282, 0, 227, 1117, 1027, 1037, 1035, 1070, 1095,
	1096, 223, 298, 1110, 1113, 1111, 1139, 251, 0, 0,
	0, 0, 0, 192, 233, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1028, 0, 259,
	280, 292, 1171, 1172, 1173, 1174, 0, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 283, 1071, 1045, 1082, 291, 1048,
	1046, 1109, 1047, 1099, 1141, 217, 218, 219, 220, 184,
	0, 161, 1091, 1075, 1142, 1143, 1144, 1145, 1146, 1147,
	1050, 304, 180, 186, 0, 188, 160, 232, 182, 289,
	195, 1115, 224, 191, 256, 196, 202, 244, 288, 230,
	249, 158, 279, 257, 206, 1044, 1049, 1043, 1088, 1089,
	1133, 1134, 1135, 1107, 1036, 1118, 1040, 1042, 1041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 0,
	1092, 143, 0, 200, 1140, 241, 179, 716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 174,
	0, 0, 199, 0, 0, 0, 258, 213, 0, 0,
	0, 0, 731, 737, 1158, 1159, 295, 296, 297, 281,
	0, 0, 0, 679, 0, 0, 0, 629, 723, 722,
	696, 705, 0, 0, 156, 697, 0, 704, 698, 702,
	701, 699, 700, 0, 666, 0, 0, 0, 0, 0,
	0, 627, 683, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 681, 0, 0, 0,
	0, 717, 0, 682, 0, 0, 719, 0, 706, 0,
	148, 263, 277, 157, 254, 290, 162, 261, 153, 228,
	250, 0, 0, 150, 275, 260, 210, 193, 194, 149,
	0, 245, 172, 185, 169, 226, 703, 715, 672, 168,
	670, 714, 285, 152, 0, 284, 225, 272, 276, 211,
	205, 151, 274, 209, 204, 197, 176, 189, 237, 203,
	238, 190, 215, 214, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 712, 0, 0, 287, 0, 0, 730, 0,
	0, 0, 262, 0, 0, 198, 0, 0, 0, 673,
	0, 248, 231, 740, 0, 0, 246, 201, 273, 239,
	278, 264, 286, 242, 240, 144, 265, 171, 212, 154,
	155, 167, 173, 175, 177, 178, 221, 222, 234, 253,
	266, 267, 268, 170, 163, 247, 164, 187, 165, 145,
	255, 166, 146, 235, 271, 0, 183, 243, 208, 147,
	207, 236, 270, 269, 294, 300, 301, 305, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1374, 1373, 1375, 299, 181, 142, 282, 728, 227,
	739, 724, 725, 726, 729, 732, 733, 668, 671, 734,
	736, 738, 741, 251, 0, 0, 0, 0, 0, 192,
	233, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 280, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	718, 217, 218, 219, 220, 667, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 180, 186,
	0, 188, 160, 232, 182, 289, 195, 0, 224, 191,
	256, 196, 202, 244, 288, 230, 249, 158, 279, 257,
	206, 747, 727, 746, 748, 749, 745, 750, 751, 735,
	688, 0, 743, 742, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 200,
	0, 241, 179, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 121, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 721,
	0, 0, 295, 296, 297, 281, 97, 0, 716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	174, 0, 0, 199, 0, 0, 0, 258, 213, 0,
	0, 0, 0, 731, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 0, 0, 0, 629, 723,
	722, 696, 705, 0, 0, 156, 697, 0, 704, 698,
	702, 701, 699, 700, 0, 666, 0, 0, 0, 0,
	0, 0, 627, 683, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 681, 0, 0,
	0, 0, 717, 0, 682, 0, 0, 719, 0, 706,
	0, 148, 263, 277, 157, 254, 290, 162, 261, 153,
	228, 250, 0, 0, 150, 275, 260, 210, 193, 194,
	149, 0, 245, 172, 185, 169, 226, 703, 715, 672,
	168, 670, 714, 285, 152, 0, 284, 225, 272, 276,
	211, 205, 151, 274, 209, 204, 197, 176, 189, 237,
	203, 238, 190, 215, 214, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 712, 0, 0, 287, 0, 0, 730,
	0, 0, 0, 262, 0, 0, 198, 0, 0, 0,
	673, 0, 248, 231, 740, 0, 0, 246, 201, 273,
	239, 278, 264, 286, 242, 240, 144, 265, 171, 212,
	154, 155, 167, 173, 175, 177, 178, 221, 222, 234,
	253, 266, 267, 268, 170, 163, 247, 164, 187, 165,
	145, 255, 166, 146, 235, 271, 0, 183, 243, 208,
	147, 207, 236, 270, 269, 294, 300, 301, 305, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 181, 142, 282, 728,
	227, 739, 724, 725, 726, 729, 732, 733, 668, 671,
	734, 736, 738, 741, 251, 0, 0, 0, 0, 0,
	192, 233, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 280, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 718, 217, 218, 219, 220, 667, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 180,
	186, 0, 188, 160, 232, 182, 289, 195, 0, 224,
	191, 256, 196, 202, 244, 288, 230, 249, 158, 279,
	257, 206, 747, 727, 746, 748, 749, 745, 750, 751,
	735, 688, 0, 743, 742, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	200, 70, 241, 179, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 121,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	721, 716, 0, 295, 296, 297, 281, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 174, 888, 0, 199, 0, 0, 0,
	258, 213, 0, 0, 0, 0, 731, 737, 0, 0,
	0, 0, 0, 0, 884, 0, 0, 679, 0, 0,
	0, 629, 723, 722, 696, 705, 0, 0, 156, 697,
	0, 704, 698, 702, 701, 699, 700, 0, 666, 0,
	0, 0, 0, 0, 0, 627, 683, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	681, 0, 0, 0, 0, 717, 0, 682, 0, 0,
	885, 0, 706, 0, 148, 263, 277, 157, 254, 290,
	162, 261, 153, 228, 250, 0, 0, 150, 275, 260,
	210, 193, 194, 149, 0, 245, 172, 185, 169, 226,
	703, 715, 672, 168, 670, 714, 285, 152, 0, 284,
	225, 272, 276, 211, 205, 151, 274, 209, 204, 197,
	176, 189, 237, 203, 238, 190, 215, 214, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 712, 0, 0, 287,
	0, 0, 730, 0, 0, 0, 262, 0, 0, 198,
	0, 0, 0, 673, 0, 248, 231, 740, 0, 0,
	246, 201, 273, 239, 278, 264, 286, 242, 240, 144,
	265, 171, 212, 154, 155, 167, 173, 175, 177, 178,
	221, 222, 234, 253, 266, 267, 268, 170, 163, 247,
	164, 187, 165, 145, 255, 166, 146, 235, 271, 0,
	183, 243, 208, 147, 207, 236, 270, 269, 294, 300,
	301, 305, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 181,
	142, 282, 728, 227, 739, 724, 725, 726, 729, 732,
	733, 668, 671, 734, 736, 738, 741, 251, 0, 0,
	0, 0, 0, 192, 233, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	280, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 718, 217, 218, 219, 220, 667,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 180, 186, 0, 188, 160, 232, 182, 289,
	195, 0, 224, 191, 256, 196, 202, 244, 288, 230,
	249, 158, 279, 257, 206, 747, 727, 746, 748, 749,
	745, 750, 751, 735, 688, 0, 743, 742, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 200, 0, 241, 179, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 121, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 721, 716, 0, 295, 296, 297, 281,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 174, 2319, 0, 199,
	0, 0, 0, 258, 213, 0, 0, 0, 0, 731,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 0, 0, 0, 629, 723, 722, 696, 705, 0,
	0, 156, 697, 0, 704, 698, 702, 701, 699, 700,
	0, 666, 0, 0, 0, 0, 0, 0, 627, 683,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 681, 0, 0, 0, 0, 717, 0,
	682, 0, 0, 719, 0, 706, 0, 148, 263, 277,
	157, 254, 290, 162, 261, 153, 228, 250, 0, 0,
	150, 275, 260, 210, 193, 194, 149, 0, 245, 172,
	185, 169, 226, 703, 715, 672, 168, 670, 714, 285,
	152, 0, 284, 225, 272, 276, 211, 205, 151, 274,
	209, 204, 197, 176, 189, 237, 203, 238, 190, 215,
	214, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 712,
	0, 0, 287, 0, 0, 730, 0, 0, 0, 262,
	0, 0, 198, 0, 0, 0, 673, 0, 248, 231,
	740, 0, 0, 246, 201, 273, 239, 278, 264, 286,
	242, 240, 144, 265, 171, 212, 154, 155, 167, 173,
	175, 177, 178, 221, 222, 234, 253, 266, 267, 268,
	170, 163, 247, 164, 187, 165, 145, 255, 166, 146,
	235, 271, 0, 183, 243, 208, 147, 207, 236, 270,
	269, 294, 300, 301, 305, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 181, 142, 282, 728, 227, 739, 724, 725,
	726, 729, 732, 733, 668, 671, 734, 736, 738, 741,
	251, 0, 0, 0, 0, 0, 192, 233, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 280, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 718, 217, 218,
	219, 220, 667, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 180, 186, 0, 188, 160,
	232, 182, 289, 195, 0, 224, 191, 256, 196, 202,
	244, 288, 230, 249, 158, 279, 257, 206, 747, 727,
	746, 748, 749, 745, 750, 751, 735, 688, 0, 743,
	742, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 200, 0, 241, 179,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 121, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 721, 716, 0, 295,
	296, 297, 281, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 174,
	888, 0, 199, 0, 0, 0, 258, 213, 0, 0,
	0, 0, 731, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 629, 723, 722,
	696, 705, 0, 0, 156, 697, 0, 704, 698, 702,
	701, 699, 700, 0, 666, 0, 0, 0, 0, 0,
	0, 627, 683, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 681, 0, 0, 0,
	0, 717, 0, 682, 0, 0, 719, 0, 706, 0,
	148, 263, 277, 157, 254, 290, 162, 261, 153, 228,
	250, 0, 0, 150, 275, 260, 210, 193, 194, 149,
	0, 245, 172, 185, 169, 226, 703, 715, 672, 168,
	670, 714, 285, 152, 0, 284, 225, 272, 276, 211,
	205, 151, 274, 209, 204, 197, 176, 189, 237, 203,
	238, 190, 215, 214, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 712, 0, 0, 287, 0, 0, 730, 0,
	0, 0, 262, 0, 0, 198, 0, 0, 0, 673,
	0, 248, 231, 740, 0, 0, 246, 201, 273, 239,
	278, 264, 286, 242, 240, 144, 265, 171, 212, 154,
	155, 167, 173, 175, 177, 178, 221, 222, 234, 253,
	266, 267, 268, 170, 163, 247, 164, 187, 165, 145,
	255, 166, 146, 235, 271, 0, 183, 243, 208, 147,
	207, 236, 270, 269, 294, 300, 301, 305, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 181, 142, 282, 728, 227,
	739, 724, 725, 726, 729, 732, 733, 668, 671, 734,
	736, 738, 741, 251, 0, 0, 0, 0, 0, 192,
	233, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 280, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	718, 217, 218, 219, 220, 667, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 180, 186,
	0, 188, 160, 232, 182, 289, 195, 0, 224, 191,
	256, 196, 202, 244, 288, 230, 249, 158, 279, 257,
	206, 747, 727, 746, 748, 749, 745, 750, 751, 735,
	688, 0, 743, 742, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 200,
	0, 241, 179, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 121, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 721,
	0, 0, 295, 296, 297, 281, 716, 0, 0, 1555,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 174, 0,
	0, 199, 0, 0, 0, 258, 213, 0, 0, 0,
	0, 731, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 0, 0, 629, 723, 722, 696,
	705, 0, 0, 156, 697, 0, 704, 698, 702, 701,
	699, 700, 0, 666, 0, 0, 0, 0, 0, 0,
	627, 683, 0, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 681, 0, 0, 0, 0,
	717, 0, 682, 0, 0, 719, 0, 706, 0, 148,
	263, 277, 157, 254, 290, 162, 261, 153, 228, 250,
	0, 0, 150, 275, 260, 210, 193, 194, 149, 0,
	245, 172, 185, 169, 226, 703, 715, 672, 168, 670,
	714, 285, 152, 0, 284, 225, 272, 276, 211, 205,
	151, 274, 209, 204, 197, 176, 189, 237, 203, 238,
	190, 215, 214, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 712, 0, 0, 287, 0, 0, 730, 0, 0,
	0, 262, 0, 0, 198, 0, 0, 0, 673, 0,
	248, 231, 740, 0, 0, 246, 201, 273, 239, 278,
	264, 286, 242, 240, 144, 265, 171, 212, 154, 155,
	167, 173, 175, 177, 178, 221, 222, 234, 253, 266,
	267, 268, 170, 163, 247, 164, 187, 165, 145, 255,
	166, 146, 235, 271, 0, 183, 243, 208, 147, 207,
	236, 270, 269, 294, 300, 301, 305, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 181, 142, 282, 728, 227, 739,
	724, 725, 726, 729, 732, 733, 668, 671, 734, 736,
	738, 741, 251, 0, 0, 0, 0, 0, 192, 233,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 280, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 718,
	217, 218, 219, 220, 667, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 180, 186, 0,
	188, 160, 232, 182, 289, 195, 0, 224, 191, 256,
	196, 202, 244, 288, 230, 249, 158, 279, 257, 206,
	747, 727, 746, 748, 749, 745, 750, 751, 735, 688,
	0, 743, 742, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 200, 0,
	241, 179, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 121, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 721, 716,
	0, 295, 296, 297, 281, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 174, 0, 0, 199, 0, 0, 0, 258, 213,
	0, 0, 0, 0, 731, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 629,
	723, 722, 696, 705, 0, 0, 156, 697, 0, 704,
	698, 702, 701, 699, 700, 0, 666, 0, 0, 0,
	0, 0, 0, 627, 683, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 680, 681, 624,
	0, 0, 0, 717, 0, 682, 0, 0, 719, 0,
	706, 0, 148, 263, 277, 157, 254, 290, 162, 261,
	153, 228, 250, 0, 0, 150, 275, 260, 210, 193,
	194, 149, 0, 245, 172, 185, 169, 226, 703, 715,
	672, 168, 670, 714, 285, 152, 0, 284, 225, 272,
	276, 211, 205, 151, 274, 209, 204, 197, 176, 189,
	237, 203, 238, 190, 215, 214, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 712, 0, 0, 287, 0, 0,
	730, 0, 0, 0, 262, 0, 0, 198, 0, 0,
	0, 673, 0, 248, 231, 740, 0, 0, 246, 201,
	273, 239, 278, 264, 286, 242, 240, 144, 265, 171,
	212, 154, 155, 167, 173, 175, 177, 178, 221, 222,
	234, 253, 266, 267, 268, 170, 163, 247, 164, 187,
	165, 145, 255, 166, 146, 235, 271, 0, 183, 243,
	208, 147, 207, 236, 270, 269, 294, 300, 301, 305,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 181, 142, 282,
	728, 227, 739, 724, 725, 726, 729, 732, 733, 668,
	671, 734, 736, 738, 741, 251, 0, 0, 0, 0,
	0, 192, 233, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 280, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 718, 217, 218, 219, 220, 667, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	180, 186, 0, 188, 160, 232, 182, 289, 195, 0,
	224, 191, 256, 196, 202, 244, 288, 230, 249, 158,
	279, 257, 206, 747, 727, 746, 748, 749, 745, 750,
	751, 735, 688, 0, 743, 742, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 200, 0, 241, 179, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	121, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 721, 716, 0, 295, 296, 297, 281, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 174, 0, 0, 199, 0, 0,
	0, 258, 213, 0, 0, 0, 0, 731, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 629, 723, 722, 696, 705, 0, 0, 156,
	697, 0, 704, 698, 702, 701, 699, 700, 0, 666,
	0, 0, 0, 0, 0, 0, 627, 683, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 681, 0, 0, 0, 0, 717, 0, 682, 0,
	0, 719, 0, 706, 0, 148, 263, 277, 157, 254,
	290, 162, 261, 153, 228, 250, 0, 0, 150, 275,
	260, 210, 193, 194, 149, 0, 245, 172, 185, 169,
	226, 703, 715, 672, 168, 670, 714, 285, 152, 0,
	284, 225, 272, 276, 211, 205, 151, 274, 209, 204,
	197, 176, 189, 237, 203, 238, 190, 215, 214, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 0, 0,
	287, 0, 0, 730, 0, 0, 0, 262, 0, 0,
	198, 0, 0, 0, 673, 0, 248, 231, 740, 0,
	0, 246, 201, 273, 239, 278, 264, 286, 242, 240,
	144, 265, 171, 212, 154, 155, 167, 173, 175, 177,
	178, 221, 222, 234, 253, 266, 267, 268, 170, 163,
	247, 164, 187, 165, 145, 255, 166, 146, 235, 271,
	0, 183, 243, 208, 147, 207, 236, 270, 269, 294,
	300, 301, 305, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	181, 142, 282, 728, 227, 739, 724, 725, 726, 729,
	732, 733, 668, 671, 734, 736, 738, 741, 251, 0,
	0, 0, 0, 0, 192, 233, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 280, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 718, 217, 218, 219, 220,
	667, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 180, 186, 0, 188, 160, 232, 182,
	289, 195, 0, 224, 191, 256, 196, 202, 244, 288,
	230, 249, 158, 279, 257, 206, 747, 727, 746, 748,
	749, 745, 750, 751, 735, 688, 0, 743, 742, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 200, 0, 241, 179, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 121, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 721, 716, 0, 295, 296, 297,
	281, 0, 0, 0, 0, 229, 0, 0, 0, 1318,
	0, 0, 0, 686, 0, 0, 0, 174, 0, 0,
	199, 0, 0, 0, 258, 213, 0, 0, 0, 0,
	731, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 629, 723, 722, 696, 705,
	0, 0, 156, 697, 0, 704, 698, 702, 701, 699,
	700, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	683, 0, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 681, 0, 0, 0, 0, 717,
	0, 682, 0, 0, 719, 0, 706, 0, 148, 263,
	277, 157, 254, 290, 162, 261, 153, 228, 250, 0,
	0, 150, 275, 260, 210, 193, 194, 149, 0, 245,
	172, 185, 169, 226, 703, 715, 672, 168, 670, 714,
	285, 152, 0, 284, 225, 272, 276, 211, 205, 151,
	274, 209, 204, 197, 176, 189, 237, 203, 238, 190,
	215, 214, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	712, 0, 0, 287, 0, 0, 730, 0, 0, 0,
	262, 0, 0, 198, 0, 0, 0, 673, 0, 248,
	231, 740, 0, 0, 246, 201, 273, 239, 278, 264,
	286, 242, 240, 144, 265, 171, 212, 154, 155, 167,
	173, 175, 177, 178, 221, 222, 234, 253, 266, 267,
	268, 170, 163, 247, 164, 187, 165, 145, 255, 166,
	146, 235, 271, 0, 183, 243, 208, 147, 207, 236,
	270, 269, 294, 1319, 1320, 305, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 181, 142, 282, 728, 227, 739, 724,
	725, 726, 729, 732, 733, 668, 671, 734, 736, 738,
	741, 251, 0, 0, 0, 0, 0, 192, 233, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 280, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 718, 217,
	218, 219, 220, 667, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 180, 186, 0, 188,
	160, 232, 182, 289, 195, 0, 224, 191, 256, 196,
	202, 244, 288, 230, 249, 158, 279, 257, 206, 747,
	727, 746, 748, 749, 745, 750, 751, 735, 688, 0,
	743, 742, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 200, 0, 241,
	179, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 121, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 721, 716, 0,
	295, 296, 297, 281, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	174, 0, 0, 199, 0, 0, 0, 258, 213, 0,
	0, 0, 0, 731, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 0, 0, 0, 629, 723,
	722, 696, 705, 0, 0, 156, 697, 0, 704, 698,
	702, 701, 699, 700, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 683, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 681, 0, 0,
	0, 0, 717, 0, 682, 0, 0, 719, 0, 706,
	0, 148, 263, 277, 157, 254, 290, 162, 261, 153,
	228, 250, 0, 0, 150, 275, 260, 210, 193, 194,
	149, 0, 245, 172, 185, 169, 226, 703, 715, 672,
	168, 670, 714, 285, 152, 0, 284, 225, 272, 276,
	211, 205, 151, 274, 209, 204, 197, 176, 189, 237,
	203, 238, 190, 215, 214, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 712, 0, 0, 287, 0, 0, 730,
	0, 0, 0, 262, 0, 0, 198, 0, 0, 0,
	673, 0, 248, 231, 740, 0, 0, 246, 201, 273,
	239, 278, 264, 286, 242, 240, 144, 265, 171, 212,
	154, 155, 167, 173, 175, 177, 178, 221, 222, 234,
	253, 266, 267, 268, 170, 163, 247, 164, 187, 165,
	145, 255, 166, 146, 235, 271, 0, 183, 243, 208,
	147, 207, 236, 270, 269, 294, 300, 301, 305, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 181, 142, 282, 728,
	227, 739, 724, 725, 726, 729, 732, 733, 668, 671,
	734, 736, 738, 741, 251, 0, 0, 0, 0, 0,
	192, 233, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 280, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 718, 217, 218, 219, 220, 667, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 180,
	186, 0, 188, 160, 232, 182, 289, 195, 0, 224,
	191, 256, 196, 202, 244, 288, 230, 249, 158, 279,
	257, 206, 747, 727, 746, 748, 749, 745, 750, 751,
	735, 688, 0, 743, 742, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	200, 0, 241, 179, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 121,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	721, 716, 0, 295, 296, 297, 281, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 174, 0, 0, 199, 0, 0, 0,
	258, 213, 0, 0, 0, 0, 731, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 629, 723, 722, 696, 705, 0, 0, 156, 697,
	0, 704, 698, 702, 701, 699, 700, 0, 666, 0,
	0, 0, 0, 0, 0, 627, 683, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	681, 0, 0, 0, 0, 717, 0, 682, 0, 0,
	719, 0, 706, 0, 148, 263, 277, 157, 254, 290,
	162, 261, 153, 228, 250, 0, 0, 150, 275, 260,
	210, 193, 194, 149, 0, 245, 172, 185, 169, 226,
	703, 715, 672, 168, 670, 714, 285, 152, 0, 284,
	225, 272, 276, 211, 205, 151, 274, 209, 204, 197,
	176, 189, 237, 203, 238, 190, 215, 214, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 712, 0, 0, 287,
	0, 0, 730, 0, 0, 0, 262, 0, 0, 198,
	0, 0, 0, 673, 0, 248, 231, 740, 0, 0,
	246, 201, 273, 239, 278, 264, 286, 242, 240, 144,
	265, 171, 212, 154, 155, 167, 173, 175, 177, 178,
	221, 222, 234, 253, 266, 267, 268, 170, 163, 247,
	164, 187, 165, 145, 255, 166, 146, 235, 271, 0,
	183, 243, 208, 147, 207, 236, 270, 269, 294, 300,
	301, 305, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 181,
	142, 282, 728, 227, 739, 724, 725, 726, 729, 732,
	733, 668, 671, 734, 736, 738, 741, 251, 0, 0,
	0, 0, 0, 192, 233, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	280, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 718, 217, 218, 219, 220, 667,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 180, 186, 0, 188, 160, 232, 182, 289,
	195, 0, 224, 191, 256, 196, 202, 244, 288, 230,
	249, 158, 279, 257, 206, 747, 727, 746, 748, 749,
	745, 750, 751, 735, 688, 0, 743, 742, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 200, 0, 241, 179, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 121, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 721, 0, 0, 295, 296, 297, 281,
	97, 0, 27, 87, 69, 0, 0, 0, 0, 0,
	0, 0, 229, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 199, 0, 0,
	0, 258, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 349, 353, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 148, 263, 277, 157, 254,
	290, 162, 261, 153, 228, 250, 0, 0, 150, 275,
	260, 210, 193, 194, 149, 0, 245, 172, 185, 169,
	226, 0, 0, 302, 168, 293, 0, 285, 152, 0,
	284, 225, 272, 276, 211, 205, 151, 274, 209, 204,
	197, 176, 189, 237, 203, 238, 190, 215, 214, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	198, 0, 0, 0, 303, 0, 248, 231, 0, 0,
	0, 246, 201, 273, 239, 278, 264, 286, 242, 240,
	144, 265, 171, 212, 154, 155, 167, 173, 175, 177,
	178, 221, 222, 234, 253, 266, 267, 268, 170, 163,
	247, 164, 187, 165, 145, 255, 166, 146, 235, 271,
	0, 183, 243, 208, 147, 207, 236, 270, 269, 294,
	300, 301, 305, 0, 306, 343, 342, 346, 0, 1357,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 299,
	181, 142, 282, 0, 227, 352, 0, 0, 0, 0,
	0, 0, 223, 298, 0, 0, 0, 0, 251, 344,
	0, 0, 0, 0, 192, 233, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 280, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 217, 218, 219, 220,
	314, 316, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 180, 186, 0, 188, 160, 232, 182,
	289, 195, 0, 224, 191, 256, 196, 202, 244, 288,
	230, 249, 158, 279, 257, 206, 347, 351, 354, 0,
	355, 356, 0, 0, 357, 358, 359, 0, 0, 361,
	362, 0, 0, 0, 0, 0, 0, 1353, 0, 1350,
	0, 0, 0, 1352, 1349, 1351, 1355, 1356, 0, 0,
	0, 1354, 143, 0, 200, 70, 241, 179, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 229, 0, 0, 295, 296, 297,
	281, 0, 0, 0, 0, 0, 174, 0, 0, 199,
	0, 0, 0, 258, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 1637, 1640, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1360, 1361, 1362, 1363, 1364,
	1365, 1358, 1359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 263, 277,
	157, 254, 290, 162, 261, 153, 228, 250, 0, 0,
	150, 275, 260, 210, 193, 194, 149, 0, 245, 172,
	185, 169, 226, 0, 0, 302, 168, 293, 0, 285,
	152, 0, 284, 225, 272, 276, 211, 205, 151, 274,
	209, 204, 197, 176, 189, 237, 203, 238, 190, 215,
	214, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1641, 287, 0, 0, 0, 1634, 0, 1633, 262,
	1635, 1638, 198, 0, 0, 0, 303, 0, 248, 231,
	0, 0, 0, 246, 201, 273, 239, 278, 264, 286,
	242, 240, 144, 265, 171, 212, 154, 155, 167, 173,
	175, 177, 178, 221, 222, 234, 253, 266, 267, 268,
	170, 163, 247, 164, 187, 165, 145, 255, 166, 146,
	235, 271, 1639, 183, 243, 208, 147, 207, 236, 270,
	269, 294, 300, 301, 305, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 181, 142, 282, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 223, 298, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 192, 233, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 280, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 217, 218,
	219, 220, 184, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 180, 186, 0, 188, 160,
	232, 182, 289, 195, 0, 224, 191, 256, 196, 202,
	244, 288, 230, 249, 158, 279, 257, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 200, 0, 241, 179,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 229, 0, 0, 295,
	296, 297, 281, 917, 0, 0, 0, 0, 174, 0,
	0, 199, 0, 0, 0, 258, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 918,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 913, 914, 915, 912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	263, 277, 157, 254, 290, 162, 261, 153, 228, 250,
	0, 0, 150, 275, 260, 210, 193, 194, 149, 0,
	245, 172, 185, 169, 226, 0, 0, 302, 168, 293,
	0, 285, 152, 0, 284, 225, 272, 276, 211, 205,
	151, 274, 209, 204, 197, 176, 189, 237, 203, 238,
	190, 215, 214, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 198, 0, 0, 0, 303, 0,
	248, 231, 0, 0, 0, 246, 201, 273, 239, 278,
	264, 286, 242, 240, 144, 265, 171, 212, 154, 155,
	167, 173, 175, 177, 178, 221, 222, 234, 253, 266,
	267, 268, 170, 163, 247, 164, 187, 165, 145, 255,
	166, 146, 235, 271, 0, 183, 243, 208, 147, 207,
	236, 270, 269, 294, 300, 301, 305, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 181, 142, 282, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 223, 298, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 192, 233,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 280, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	217, 218, 219, 220, 184, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 180, 186, 0,
	188, 160, 232, 182, 289, 195, 0, 224, 191, 256,
	196, 202, 244, 288, 230, 249, 158, 279, 257, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 200, 0,
	241, 179, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 229, 0,
	0, 295, 296, 297, 281, 0, 0, 0, 0, 0,
	174, 428, 0, 199, 0, 0, 0, 258, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 436,
	437, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 263, 277, 157, 254, 290, 162, 261, 153,
	228, 250, 0, 0, 150, 275, 260, 210, 193, 194,
	149, 0, 245, 172, 185, 169, 226, 0, 0, 302,
	168, 293, 410, 285, 152, 409, 284, 225, 272, 276,
	211, 205, 151, 274, 209, 204, 197, 176, 189, 237,
	203, 238, 190, 215, 214, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 198, 0, 0, 0,
	303, 0, 248, 231, 0, 0, 0, 246, 201, 273,
	239, 278, 264, 286, 427, 240, 144, 265, 171, 212,
	154, 155, 167, 173, 175, 177, 178, 221, 222, 234,
	253, 266, 267, 268, 170, 163, 247, 164, 187, 165,
	145, 255, 166, 146, 235, 271, 0, 183, 243, 208,
	147, 207, 236, 270, 269, 294, 300, 301, 305, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 181, 142, 282, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 223, 298,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	192, 233, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 280, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 430, 217, 218, 219, 220, 184, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 180,
	186, 0, 188, 160, 232, 182, 289, 195, 0, 438,
	433, 434, 196, 202, 244, 288, 230, 249, 158, 279,
	257, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	200, 0, 241, 179, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	97, 0, 0, 295, 296, 297, 281, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 199, 0, 0,
	0, 258, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	1005, 0, 103, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 263, 277, 157, 254,
	290, 162, 261, 153, 228, 250, 0, 0, 150, 275,
	260, 210, 193, 194, 149, 0, 245, 172, 185, 169,
	226, 0, 0, 302, 168, 293, 0, 285, 152, 0,
	284, 225, 272, 276, 211, 205, 151, 274, 209, 204,
	197, 176, 189, 237, 203, 238, 190, 215, 214, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	198, 0, 0, 0, 303, 0, 248, 231, 0, 0,
	0, 246, 201, 273, 239, 278, 264, 286, 242, 240,
	144, 265, 171, 212, 154, 155, 167, 173, 175, 177,
	178, 221, 222, 234, 253, 266, 267, 268, 170, 163,
	247, 164, 187, 165, 145, 255, 166, 146, 235, 271,
	0, 183, 243, 208, 147, 207, 236, 270, 269, 294,
	300, 301, 305, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	181, 142, 282, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 223, 298, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 192, 233, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 280, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 217, 218, 219, 220,
	184, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 180, 186, 0, 188, 160, 232, 182,
	289, 195, 0, 224, 191, 256, 196, 202, 244, 288,
	230, 249, 158, 279, 257, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 200, 70, 241, 179, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 229, 0, 0, 295, 296, 297,
	281, 0, 0, 0, 0, 0, 174, 0, 0, 199,
	0, 0, 0, 258, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 436, 437, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 263, 277,
	157, 254, 290, 162, 261, 153, 228, 250, 0, 0,
	150, 275, 260, 210, 193, 194, 149, 0, 245, 172,
	185, 169, 226, 0, 0, 302, 168, 293, 410, 285,
	152, 409, 284, 225, 272, 276, 211, 205, 151, 274,
	209, 204, 197, 176, 189, 237, 203, 238, 190, 215,
	214, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 198, 0, 0, 0, 303, 0, 248, 231,
	0, 0, 0, 246, 201, 273, 239, 278, 264, 286,
	242, 240, 144, 265, 171, 212, 154, 155, 167, 173,
	175, 177, 178, 221, 222, 234, 253, 266, 267, 268,
	170, 163, 247, 164, 187, 165, 145, 255, 166, 146,
	235, 271, 0, 183, 243, 208, 147, 207, 236, 270,
	269, 294, 300, 301, 305, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 181, 142, 282, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 223, 298, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 192, 233, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 280, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 217, 218,
	219, 220, 184, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 180, 186, 0, 188, 160,
	232, 182, 289, 195, 0, 438, 433, 434, 196, 202,
	244, 288, 230, 249, 158, 279, 257, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 200, 0, 241, 179,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 229, 0, 0, 295,
	296, 297, 281, 0, 0, 0, 0, 0, 174, 606,
	0, 199, 0, 0, 0, 258, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 604,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 148,
	263, 277, 157, 254, 290, 162, 261, 153, 228, 250,
	0, 0, 150, 275, 260, 210, 193, 194, 149, 0,
	245, 172, 185, 169, 226, 0, 0, 302, 168, 293,
	0, 285, 152, 0, 284, 225, 272, 276, 211, 205,
	151, 274, 209, 204, 197, 176, 189, 237, 203, 238,
	190, 215, 214, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 198, 0, 0, 0, 303, 0,
	248, 231, 0, 0, 0, 246, 201, 273, 239, 278,
	264, 286, 242, 240, 144, 265, 171, 212, 154, 155,
	167, 173, 175, 177, 178, 221, 222, 234, 253, 266,
	267, 268, 170, 163, 247, 164, 187, 165, 145, 255,
	166, 146, 235, 271, 0, 183, 243, 208, 147, 207,
	236, 270, 269, 294, 300, 301, 305, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 181, 142, 282, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 223, 298, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 192, 233,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 280, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	217, 218, 219, 220, 184, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 180, 186, 0,
	188, 160, 232, 182, 289, 195, 0, 224, 191, 256,
	196, 202, 244, 288, 230, 249, 158, 279, 257, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 200, 0,
	241, 179, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 229, 0,
	0, 295, 296, 297, 281, 0, 0, 0, 0, 0,
	174, 600, 0, 199, 0, 0, 0, 258, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 604, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 148, 263, 277, 157, 254, 290, 162, 261, 153,
	228, 250, 0, 0, 150, 275, 260, 210, 193, 194,
	149, 0, 245, 172, 185, 169, 226, 0, 0, 302,
	168, 293, 0, 285, 152, 0, 284, 225, 272, 276,
	211, 205, 151, 274, 209, 204, 197, 176, 189, 237,
	203, 238, 190, 215, 214, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 198, 0, 0, 0,
	303, 0, 248, 231, 0, 0, 0, 246, 201, 273,
	239, 278, 264, 286, 242, 240, 144, 265, 171, 212,
	154, 155, 167, 173, 175, 177, 178, 221, 222, 234,
	253, 266, 267, 268, 170, 163, 247, 164, 187, 165,
	145, 255, 166, 146, 235, 271, 0, 183, 243, 208,
	147, 207, 236, 270, 269, 294, 300, 301, 305, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 181, 142, 282, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 223, 298,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	192, 233, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 280, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 217, 218, 219, 220, 184, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 180,
	186, 0, 188, 160, 232, 182, 289, 195, 0, 224,
	191, 256, 196, 202, 244, 288, 230, 249, 158, 279,
	257, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	200, 0, 241, 179, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	229, 0, 0, 295, 296, 297, 281, 0, 0, 0,
	0, 0, 174, 0, 0, 199, 0, 0, 0, 258,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2228, 0,
	103, 723, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 263, 277, 157, 254, 290, 162,
	261, 153, 228, 250, 0, 0, 150, 275, 260, 210,
	193, 194, 149, 0, 245, 172, 185, 169, 226, 0,
	0, 302, 168, 293, 0, 285, 152, 0, 284, 225,
	272, 276, 211, 205, 151, 274, 209, 204, 197, 176,
	189, 237, 203, 238, 190, 215, 214, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 198, 0,
	0, 0, 303, 0, 248, 231, 0, 0, 0, 246,
	201, 273, 239, 278, 264, 286, 242, 240, 144, 265,
	171, 212, 154, 155, 167, 173, 175, 177, 178, 221,
	222, 234, 253, 266, 267, 268, 170, 163, 247, 164,
	187, 165, 145, 255, 166, 146, 235, 271, 0, 183,
	243, 208, 147, 207, 236, 270, 269, 294, 300, 301,
	305, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 181, 142,
	282, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	223, 298, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 192, 233, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 280,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 217, 218, 219, 220, 184, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 180, 186, 0, 188, 160, 232, 182, 289, 195,
	0, 224, 191, 256, 196, 202, 244, 288, 230, 249,
	158, 279, 257, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 200, 0, 241, 179, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 229, 0, 0, 295, 296, 297, 281, 0,
	0, 0, 0, 0, 174, 0, 0, 199, 0, 0,
	0, 258, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 604, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 148, 263, 277, 157, 254,
	290, 162, 261, 153, 228, 250, 0, 0, 150, 275,
	260, 210, 193, 194, 149, 0, 245, 172, 185, 169,
	226, 0, 0, 302, 168, 293, 0, 285, 152, 0,
	284, 225, 272, 276, 211, 205, 151, 274, 209, 204,
	197, 176, 189, 237, 203, 238, 190, 215, 214, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	198, 0, 0, 0, 303, 0, 248, 231, 0, 0,
	0, 246, 201, 273, 239, 278, 264, 286, 242, 240,
	144, 265, 171, 212, 154, 155, 167, 173, 175, 177,
	178, 221, 222, 234, 253, 266, 267, 268, 170, 163,
	247, 164, 187, 165, 145, 255, 166, 146, 235, 271,
	0, 183, 243, 208, 147, 207, 236, 270, 269, 294,
	300, 301, 305, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	181, 142, 282, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 223, 298, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 192, 233, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 280, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 217, 218, 219, 220,
	184, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 180, 186, 0, 188, 160, 232, 182,
	289, 195, 0, 224, 191, 256, 196, 202, 244, 288,
	230, 249, 158, 279, 257, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 200, 0, 241, 179, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 229, 0, 0, 295, 296, 297,
	281, 0, 0, 0, 0, 0, 174, 0, 0, 199,
	0, 0, 0, 258, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 604, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 148, 263, 277,
	157, 254, 290, 162, 261, 153, 228, 250, 0, 0,
	150, 275, 260, 210, 193, 194, 149, 0, 245, 172,
	185, 169, 226, 0, 0, 302, 168, 293, 0, 285,
	152, 0, 284, 225, 272, 276, 211, 205, 151, 274,
	209, 204, 197, 176, 189, 237, 203, 238, 190, 215,
	214, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 198, 0, 0, 0, 303, 0, 248, 231,
	0, 0, 0, 246, 201, 273, 239, 278, 264, 286,
	242, 240, 144, 265, 171, 212, 154, 155, 167, 173,
	175, 177, 178, 221, 222, 234, 253, 266, 267, 268,
	170, 163, 247, 164, 187, 165, 145, 255, 166, 146,
	235, 271, 0, 183, 243, 208, 147, 207, 236, 270,
	269, 294, 300, 301, 305, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 181, 142, 282, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 223, 298, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 192, 233, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 280, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 217, 218,
	219, 220, 184, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 180, 186, 0, 188, 160,
	232, 182, 289, 195, 0, 224, 191, 256, 196, 202,
	244, 288, 230, 249, 158, 279, 257, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 200, 0, 241, 179,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 229, 0, 0, 295,
	296, 297, 281, 0, 0, 0, 0, 0, 174, 1294,
	0, 199, 0, 0, 0, 258, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 604,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	263, 277, 157, 254, 290, 162, 261, 153, 228, 250,
	0, 0, 150, 275, 260, 210, 193, 194, 149, 0,
	245, 172, 185, 169, 226, 0, 0, 302, 168, 293,
	0, 285, 152, 0, 284, 225, 272, 276, 211, 205,
	151, 274, 209, 204, 197, 176, 189, 237, 203, 238,
	190, 215, 214, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 198, 0, 0, 0, 303, 0,
	248, 231, 0, 0, 0, 246, 201, 273, 239, 278,
	264, 286, 242, 240, 144, 265, 171, 212, 154, 155,
	167, 173, 175, 177, 178, 221, 222, 234, 253, 266,
	267, 268, 170, 163, 247, 164, 187, 165, 145, 255,
	166, 146, 235, 271, 0, 183, 243, 208, 147, 207,
	236, 270, 269, 294, 300, 301, 305, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 181, 142, 282, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 223, 298, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 192, 233,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 280, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	217, 218, 219, 220, 184, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 180, 186, 0,
	188, 160, 232, 182, 289, 195, 0, 224, 191, 256,
	196, 202, 244, 288, 230, 249, 158, 279, 257, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 200, 0,
	241, 179, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 229, 0,
	0, 295, 296, 297, 281, 0, 0, 0, 0, 0,
	174, 0, 0, 199, 0, 0, 0, 258, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 723,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 263, 277, 157, 254, 290, 162, 261, 153,
	228, 250, 0, 0, 150, 275, 260, 210, 193, 194,
	149, 0, 245, 172, 185, 169, 226, 0, 0, 302,
	168, 293, 0, 285, 152, 0, 284, 225, 272, 276,
	211, 205, 151, 274, 209, 204, 197, 176, 189, 237,
	203, 238, 190, 215, 214, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 198, 0, 0, 0,
	303, 0, 248, 231, 0, 0, 0, 246, 201, 273,
	239, 278, 264, 286, 242, 240, 144, 265, 171, 212,
	154, 155, 167, 173, 175, 177, 178, 221, 222, 234,
	253, 266, 267, 268, 170, 163, 247, 164, 187, 165,
	145, 255, 166, 146, 235, 271, 0, 183, 243, 208,
	147, 207, 236, 270, 269, 294, 300, 301, 305, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 181, 142, 282, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 223, 298,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	192, 233, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 280, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 217, 218, 219, 220, 184, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 180,
	186, 0, 188, 160, 232, 182, 289, 195, 0, 224,
	191, 256, 196, 202, 244, 288, 230, 249, 158, 279,
	257, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	200, 0, 241, 179, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	229, 0, 0, 295, 296, 297, 281, 0, 0, 0,
	0, 0, 174, 0, 0, 199, 0, 0, 0, 258,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 263, 277, 157, 254, 290, 162,
	261, 153, 228, 250, 0, 0, 150, 275, 260, 210,
	193, 194, 149, 0, 245, 172, 185, 169, 226, 0,
	0, 302, 168, 293, 0, 285, 152, 0, 284, 225,
	272, 276, 211, 205, 151, 274, 209, 204, 197, 176,
	189, 237, 203, 238, 190, 215, 214, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 198, 0,
	0, 0, 303, 0, 248, 231, 0, 0, 0, 246,
	201, 273, 239, 278, 264, 286, 242, 240, 144, 265,
	171, 212, 154, 155, 167, 173, 175, 177, 178, 221,
	222, 234, 253, 266, 267, 268, 170, 163, 247, 164,
	187, 165, 145, 255, 166, 146, 235, 271, 0, 183,
	243, 208, 147, 207, 236, 270, 269, 294, 300, 301,
	305, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 181, 142,
	282, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	223, 298, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 192, 233, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 280,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 217, 218, 219, 220, 184, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 180, 186, 0, 188, 160, 232, 182, 289, 195,
	0, 224, 191, 256, 196, 202, 244, 288, 230, 249,
	158, 279, 257, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 200, 0, 241, 179, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 229, 0, 0, 295, 296, 297, 281, 0,
	0, 0, 0, 0, 174, 0, 0, 199, 0, 0,
	0, 258, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1672, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 263, 277, 157, 254,
	290, 162, 261, 153, 228, 250, 0, 0, 150, 275,
	260, 210, 193, 194, 149, 0, 245, 172, 185, 169,
	226, 0, 0, 302, 168, 293, 0, 285, 152, 0,
	284, 225, 272, 276, 211, 205, 151, 274, 209, 204,
	197, 176, 189, 237, 203, 238, 190, 215, 214, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	198, 0, 0, 0, 303, 0, 248, 231, 0, 0,
	0, 246, 201, 273, 239, 278, 264, 286, 242, 240,
	144, 265, 171, 212, 154, 155, 167, 173, 175, 177,
	178, 221, 222, 234, 253, 266, 267, 268, 170, 163,
	247, 164, 187, 165, 145, 255, 166, 146, 235, 271,
	0, 183, 243, 208, 147, 207, 236, 270, 269, 294,
	300, 301, 305, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	181, 142, 282, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 223, 298, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 192, 233, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 280, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 217, 218, 219, 220,
	184, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 180, 186, 0, 188, 160, 232, 182,
	289, 195, 0, 224, 191, 256, 196, 202, 244, 288,
	230, 249, 158, 279, 257, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 200, 0, 241, 179, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 229, 0, 0, 295, 296, 297,
	281, 0, 0, 0, 0, 0, 174, 0, 0, 199,
	0, 0, 0, 258, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	867, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 263, 277,
	157, 254, 290, 162, 261, 153, 228, 250, 0, 0,
	150, 275, 260, 210, 193, 194, 149, 0, 245, 172,
	185, 169, 226, 0, 0, 302, 168, 293, 0, 285,
	152, 0, 284, 225, 272, 276, 211, 205, 151, 274,
	209, 204, 197, 176, 189, 237, 203, 238, 190, 215,
	214, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 198, 0, 0, 0, 303, 0, 248, 231,
	0, 0, 0, 246, 201, 273, 239, 278, 264, 286,
	242, 240, 144, 265, 171, 212, 154, 155, 167, 173,
	175, 177, 178, 221, 222, 234, 253, 266, 267, 268,
	170, 163, 247, 164, 187, 165, 145, 255, 166, 146,
	235, 271, 0, 183, 243, 208, 147, 207, 236, 270,
	269, 294, 300, 301, 305, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 181, 142, 282, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 223, 298, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 192, 233, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 280, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 217, 218,
	219, 220, 184, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 180, 186, 0, 188, 160,
	232, 182, 289, 195, 0, 224, 191, 256, 196, 202,
	244, 288, 230, 249, 158, 279, 257, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 200, 0, 241, 179,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 229, 0, 0, 295,
	296, 297, 281, 0, 0, 0, 0, 0, 174, 0,
	0, 199, 0, 0, 0, 258, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 604,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	263, 277, 157, 254, 290, 162, 261, 153, 228, 250,
	0, 0, 150, 275, 260, 210, 193, 194, 149, 0,
	245, 172, 185, 169, 226, 0, 0, 302, 168, 293,
	0, 285, 152, 0, 284, 225, 272, 276, 211, 205,
	151, 274, 209, 204, 197, 176, 189, 237, 203, 238,
	190, 215, 214, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 198, 0, 0, 0, 303, 0,
	248, 231, 0, 0, 0, 246, 201, 273, 239, 278,
	264, 286, 242, 240, 144, 265, 171, 212, 154, 155,
	167, 173, 175, 177, 178, 221, 222, 234, 253, 266,
	267, 268, 170, 163, 247, 164, 187, 165, 145, 255,
	166, 146, 235, 271, 0, 183, 243, 208, 147, 207,
	236, 270, 269, 294, 300, 301, 305, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 181, 142, 282, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 223, 298, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 192, 233,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 280, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	217, 218, 219, 220, 184, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 180, 186, 0,
	188, 160, 232, 182, 289, 195, 0, 224, 191, 256,
	196, 202, 244, 288, 230, 249, 158, 279, 257, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 200, 0,
	241, 179, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 229, 0,
	0, 295, 296, 297, 281, 0, 0, 0, 0, 0,
	174, 0, 0, 199, 0, 0, 0, 258, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 263, 277, 157, 254, 290, 162, 261, 153,
	228, 250, 0, 0, 150, 275, 260, 210, 193, 194,
	149, 0, 245, 172, 185, 169, 226, 0, 0, 302,
	168, 293, 0, 285, 152, 0, 284, 225, 272, 276,
	211, 205, 151, 274, 209, 204, 197, 176, 189, 237,
	203, 238, 190, 215, 214, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 198, 0, 0, 0,
	303, 0, 248, 231, 0, 0, 0, 246, 201, 273,
	239, 278, 264, 286, 242, 240, 144, 265, 171, 212,
	154, 155, 167, 173, 175, 177, 178, 221, 222, 234,
	253, 266, 267, 268, 170, 163, 247, 164, 187, 165,
	145, 255, 166, 146, 235, 271, 0, 183, 243, 208,
	147, 207, 236, 270, 269, 294, 300, 301, 305, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 181, 142, 282, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 223, 298,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	192, 233, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 280, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 217, 218, 219, 220, 184, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 180,
	186, 0, 188, 160, 232, 182, 289, 195, 0, 224,
	191, 256, 196, 202, 244, 288, 230, 249, 158, 279,
	257, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	200, 0, 241, 179, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	229, 0, 0, 295, 296, 297, 281, 0, 0, 0,
	0, 0, 174, 0, 0, 199, 0, 0, 0, 258,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 263, 277, 157, 254, 290, 162,
	261, 153, 228, 250, 0, 0, 150, 275, 260, 210,
	193, 194, 149, 0, 245, 172, 185, 169, 226, 0,
	0, 302, 168, 293, 0, 285, 152, 0, 284, 225,
	272, 276, 211, 205, 151, 274, 209, 204, 197, 176,
	189, 237, 203, 238, 190, 215, 214, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 198, 0,
	0, 0, 303, 0, 248, 231, 0, 0, 0, 246,
	201, 273, 239, 278, 264, 286, 242, 240, 144, 265,
	171, 212, 154, 155, 167, 173, 175, 177, 178, 221,
	222, 234, 253, 266, 267, 268, 170, 163, 247, 164,
	187, 165, 145, 255, 166, 146, 235, 271, 0, 183,
	243, 208, 147, 207, 236, 270, 269, 294, 300, 301,
	305, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 181, 142,
	282, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	223, 298, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 192, 233, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 280,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 217, 218, 219, 220, 184, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 180, 186, 0, 188, 160, 232, 182, 289, 195,
	0, 224, 191, 256, 196, 202, 244, 288, 230, 249,
	158, 279, 257, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 200, 0, 241, 179, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 229, 0, 0, 295, 296, 297, 281, 0,
	0, 0, 0, 0, 174, 0, 0, 199, 0, 0,
	0, 258, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 1307, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 263, 277, 157, 254,
	290, 162, 261, 153, 228, 250, 0, 0, 150, 275,
	260, 210, 193, 194, 149, 0, 245, 172, 185, 169,
	226, 0, 0, 302, 168, 293, 0, 285, 152, 0,
	284, 225, 272, 276, 211, 205, 151, 274, 209, 204,
	197, 176, 189, 237, 203, 238, 190, 215, 214, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	198, 0, 0, 0, 303, 0, 248, 231, 0, 0,
	0, 246, 201, 273, 239, 278, 264, 286, 242, 240,
	144, 265, 171, 212, 154, 155, 167, 173, 175, 177,
	178, 221, 222, 234, 253, 266, 267, 268, 170, 163,
	247, 164, 187, 165, 145, 255, 166, 146, 235, 271,
	0, 183, 243, 208, 147, 207, 236, 270, 269, 294,
	300, 301, 305, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	181, 142, 282, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 223, 298, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 192, 233, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 280, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 217, 218, 219, 220,
	184, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 180, 186, 0, 188, 160, 232, 182,
	289, 195, 0, 224, 191, 256, 196, 202, 244, 288,
	230, 249, 158, 279, 257, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 200, 0, 241, 179, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 1236, 0, 0, 295, 296, 297,
	281, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 199, 0, 0, 0,
	258, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 263, 277, 157, 254, 290,
	162, 261, 153, 228, 250, 0, 0, 150, 275, 260,
	210, 193, 194, 149, 0, 245, 172, 185, 169, 226,
	0, 0, 302, 168, 293, 0, 285, 152, 0, 284,
	225, 272, 276, 211, 205, 151, 274, 209, 204, 197,
	176, 189, 237, 203, 238, 190, 215, 214, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 198,
	0, 0, 0, 303, 0, 248, 231, 0, 0, 0,
	246, 201, 273, 239, 278, 264, 286, 242, 240, 144,
	265, 171, 212, 154, 155, 167, 173, 175, 177, 178,
	221, 222, 234, 253, 266, 267, 268, 170, 163, 247,
	164, 187, 165, 145, 255, 166, 146, 235, 271, 0,
	183, 243, 208, 147, 207, 236, 270, 269, 294, 300,
	301, 305, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 181,
	142, 282, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 223, 298, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 192, 233, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	280, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 217, 218, 219, 220, 184,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 180, 186, 0, 188, 160, 232, 182, 289,
	195, 0, 224, 191, 256, 196, 202, 244, 288, 230,
	249, 158, 279, 257, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 200, 0, 241, 179, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 229, 0, 0, 295, 296, 297, 281,
	0, 0, 0, 0, 0, 174, 0, 0, 199, 0,
	0, 0, 258, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 263, 277, 157,
	254, 290, 162, 261, 153, 228, 250, 0, 0, 150,
	275, 260, 210, 193, 194, 149, 0, 245, 172, 185,
	169, 226, 0, 0, 302, 168, 293, 0, 285, 152,
	0, 284, 225, 272, 276, 211, 205, 151, 274, 209,
	204, 197, 176, 189, 237, 203, 238, 190, 215, 214,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 1219, 0, 0, 0, 262, 0,
	0, 198, 0, 0, 0, 303, 0, 248, 231, 0,
	0, 0, 246, 201, 273, 239, 278, 264, 286, 242,
	240, 144, 265, 171, 212, 154, 155, 167, 173, 175,
	177, 178, 221, 222, 234, 253, 266, 267, 268, 170,
	163, 247, 164, 187, 165, 145, 255, 166, 146, 235,
	271, 0, 183, 243, 208, 147, 207, 236, 270, 269,
	294, 300, 301, 305, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 181, 142, 282, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 223, 298, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 192, 233, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 280, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 217, 218, 219,
	220, 184, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 180, 186, 0, 188, 160, 232,
	182, 289, 195, 0, 224, 191, 256, 196, 202, 244,
	288, 230, 249, 158, 279, 257, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 200, 0, 241, 179, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 229, 0, 0, 295, 296,
	297, 281, 0, 0, 0, 0, 0, 174, 0, 0,
	199, 0, 0, 0, 258, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 263,
	277, 157, 254, 290, 162, 261, 153, 228, 250, 0,
	0, 150, 275, 260, 210, 193, 194, 149, 0, 245,
	172, 185, 169, 226, 0, 0, 302, 168, 293, 0,
	285, 152, 0, 284, 225, 272, 276, 211, 205, 151,
	274, 209, 204, 197, 176, 189, 237, 203, 238, 190,
	215, 214, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 198, 0, 0, 0, 303, 0, 248,
	231, 0, 0, 0, 246, 201, 273, 239, 278, 264,
	286, 242, 240, 144, 265, 171, 212, 154, 155, 167,
	173, 175, 177, 178, 221, 222, 234, 253, 266, 267,
	268, 170, 163, 247, 164, 187, 165, 145, 255, 166,
	146, 235, 271, 0, 183, 243, 208, 147, 207, 236,
	270, 269, 294, 300, 301, 305, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 181, 142, 282, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 223, 298, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 192, 233, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 280, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 217,
	218, 219, 220, 184, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 180, 186, 0, 188,
	160, 232, 182, 289, 195, 0, 224, 191, 256, 196,
	202, 244, 288, 230, 249, 158, 279, 257, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 143, 0, 200, 0, 241,
	179, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 229, 0, 0,
	295, 296, 297, 281, 0, 0, 0, 0, 0, 174,
	0, 0, 199, 0, 0, 0, 258, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 263, 277, 157, 254, 290, 162, 261, 153, 228,
	250, 0, 0, 150, 275, 260, 210, 193, 194, 149,
	0, 245, 172, 185, 169, 226, 0, 0, 302, 168,
	293, 0, 285, 152, 0, 284, 225, 272, 276, 211,
	205, 151, 274, 209, 204, 197, 176, 189, 237, 203,
	238, 190, 215, 214, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 198, 0, 0, 0, 303,
	0, 248, 231, 0, 0, 0, 246, 201, 273, 239,
	278, 264, 286, 330, 240, 144, 265, 171, 212, 154,
	155, 167, 173, 175, 177, 178, 221, 222, 234, 253,
	266, 267, 268, 170, 163, 247, 164, 187, 165, 145,
	255, 166, 146, 235, 271, 0, 183, 243, 208, 147,
	207, 236, 270, 269, 294, 300, 301, 305, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 181, 142, 282, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 223, 298, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 192,
	233, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 280, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	283, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 217, 218, 219, 220, 184, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 180, 186,
	0, 188, 160, 232, 182, 289, 195, 0, 224, 191,
	256, 196, 202, 244, 288, 230, 249, 158, 279, 257,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 200,
	0, 241, 179, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 229,
	0, 0, 295, 296, 297, 281, 0, 0, 0, 0,
	100, 174, 0, 0, 199, 0, 0, 0, 258, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 263, 277, 157, 254, 290, 162, 261,
	153, 228, 250, 0, 0, 150, 275, 260, 210, 193,
	194, 149, 0, 245, 172, 185, 169, 226, 0, 0,
	302, 168, 293, 0, 285, 152, 0, 284, 225, 272,
	276, 211, 205, 151, 274, 209, 204, 197, 176, 189,
	237, 203, 238, 190, 215, 214, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 198, 0, 0,
	0, 303, 0, 248, 231, 0, 0, 0, 246, 201,
	273, 239, 278, 264, 286, 242, 240, 144, 265, 171,
	212, 154, 155, 167, 173, 175, 177, 178, 221, 222,
	234, 253, 266, 267, 268, 170, 163, 247, 164, 187,
	165, 145, 255, 166, 146, 235, 271, 0, 183, 243,
	208, 147, 207, 236, 270, 269, 294, 300, 301, 305,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 181, 142, 282,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 223,
	298, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 192, 233, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 280, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 217, 218, 219, 220, 184, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	180, 186, 0, 188, 160, 232, 182, 289, 195, 0,
	224, 191, 256, 196, 202, 244, 288, 230, 249, 158,
	279, 257, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 200, 0, 241, 179, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 229, 0, 0, 295, 296, 297, 281, 0, 0,
	0, 0, 0, 174, 0, 0, 199, 0, 0, 0,
	258, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 263, 277, 157, 254, 290,
	162, 261, 153, 228, 250, 0, 0, 150, 275, 260,
	210, 193, 194, 149, 0, 245, 172, 185, 169, 226,
	0, 0, 302, 168, 293, 0, 285, 152, 0, 284,
	225, 272, 276, 211, 205, 151, 274, 209, 204, 197,
	176, 189, 237, 203, 238, 190, 215, 214, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 198,
	0, 0, 0, 303, 0, 248, 231, 0, 0, 0,
	246, 201, 273, 239, 278, 264, 286, 242, 240, 144,
	265, 171, 212, 154, 155, 167, 173, 175, 177, 178,
	221, 222, 234, 253, 266, 267, 268, 170, 163, 247,
	164, 187, 165, 145, 255, 166, 146, 235, 271, 0,
	183, 243, 208, 147, 207, 236, 270, 269, 294, 300,
	301, 305, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 181,
	142, 282, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 223, 298, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 192, 233, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	280, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 217, 218, 219, 220, 184,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 180, 186, 0, 188, 160, 232, 182, 289,
	195, 0, 224, 191, 256, 196, 202, 244, 288, 230,
	249, 158, 279, 257, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 200, 0, 241, 179, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 229, 0, 0, 295, 296, 297, 281,
	1276, 0, 0, 0, 0, 174, 0, 0, 199, 0,
	0, 0, 258, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 828, 829, 830, 1278, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 263, 277, 157,
	254, 290, 162, 261, 153, 228, 250, 0, 0, 150,
	275, 260, 210, 193, 194, 149, 0, 245, 172, 185,
	169, 226, 0, 0, 302, 168, 293, 0, 285, 152,
	0, 284, 225, 272, 276, 211, 205, 151, 274, 209,
	204, 197, 176, 189, 237, 203, 238, 190, 215, 214,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 198, 0, 0, 0, 303, 0, 248, 231, 0,
	0, 0, 246, 201, 273, 239, 278, 264, 286, 242,
	240, 144, 265, 171, 212, 154, 155, 167, 173, 175,
	177, 178, 221, 222, 234, 253, 266, 267, 268, 170,
	163, 247, 164, 187, 165, 145, 255, 166, 146, 235,
	271, 0, 183, 243, 208, 147, 207, 236, 270, 269,
	294, 300, 301, 305, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 181, 142, 282, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 223, 298, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 192, 233, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 280, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 217, 218, 219,
	220, 184, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 180, 186, 0, 188, 160, 232,
	182, 289, 195, 0, 224, 191, 256, 196, 202, 244,
	288, 230, 249, 158, 279, 257, 206, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 199, 0, 0, 0, 258, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 200, 0, 241, 179, 828,
	829, 830, 1278, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 296,
	297, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 263, 277, 157, 254, 290, 162, 261,
	153, 228, 250, 0, 0, 150, 275, 260, 210, 193,
	194, 149, 0, 245, 172, 185, 169, 226, 0, 0,
	302, 168, 293, 0, 285, 152, 0, 284, 225, 272,
	276, 211, 205, 151, 274, 209, 204, 197, 176, 189,
	237, 203, 238, 190, 215, 214, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 198, 0, 0,
	0, 303, 0, 248, 231, 0, 0, 0, 246, 201,
	273, 239, 278, 264, 286, 242, 240, 144, 265, 171,
	212, 154, 155, 167, 173, 175, 177, 178, 221, 222,
	234, 253, 266, 267, 268, 170, 163, 247, 164, 187,
	165, 145, 255, 166, 146, 235, 271, 0, 183, 243,
	208, 147, 207, 236, 270, 269, 294, 300, 301, 305,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 181, 142, 282,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 223,
	298, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 192, 233, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 280, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 217, 218, 219, 220, 184, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	180, 186, 0, 188, 160, 232, 182, 289, 195, 0,
	224, 191, 256, 196, 202, 244, 288, 230, 249, 158,
	279, 257, 206, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	199, 0, 0, 0, 258, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 200, 0, 241, 179, 828, 829, 830, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 296, 297, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 263,
	277, 157, 254, 290, 162, 261, 153, 228, 250, 0,
	0, 150, 275, 260, 210, 193, 194, 149, 0, 245,
	172, 185, 169, 226, 0, 0, 302, 168, 293, 0,
	285, 152, 0, 284, 225, 272, 276, 211, 205, 151,
	274, 209, 204, 197, 176, 189, 237, 203, 238, 190,
	215, 214, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 198, 0, 0, 0, 303, 0, 248,
	231, 0, 0, 0, 246, 201, 273, 239, 278, 264,
	286, 242, 240, 144, 265, 171, 212, 154, 155, 167,
	173, 175, 177, 178, 221, 222, 234, 253, 266, 267,
	268, 170, 163, 247, 164, 187, 165, 145, 255, 166,
	146, 235, 271, 0, 183, 243, 208, 147, 207, 236,
	270, 269, 294, 300, 301, 305, 0, 306, 913, 914,
	915, 912, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 181, 142, 282, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 223, 298, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 192, 233, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 259, 280, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 1357, 291, 0, 0, 0, 1941, 0, 0, 217,
	218, 219, 220, 184, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 180, 186, 0, 188,
	160, 232, 182, 289, 195, 1234, 224, 191, 256, 196,
	202, 244, 288, 230, 249, 158, 279, 257, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1923,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 200, 0, 241,
	179, 0, 1734, 1738, 1740, 1742, 1744, 1745, 1747, 0,
	1751, 1748, 1749, 1750, 0, 0, 1729, 1730, 1731, 1732,
	1713, 1714, 1735, 1941, 1716, 0, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1733, 0, 0, 0,
	295, 296, 297, 281, 1737, 1739, 1741, 1743, 1746, 1353,
	0, 1350, 1234, 0, 0, 1352, 1349, 1351, 1355, 1356,
	0, 0, 0, 1354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1941, 2019, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 1923, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 0, 0, 1927,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1923, 0,
	1920, 0, 0, 0, 1922, 1924, 1926, 0, 1928, 1929,
	1930, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1360, 1361, 1362,
	1363, 1364, 1365, 1358, 1359, 0, 0, 1942, 350, 0,
	349, 353, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 0, 1927, 0, 0, 0,
	0, 1940, 0, 0, 0, 0, 0, 1931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1919, 0,
	363, 0, 0, 364, 0, 0, 0, 1920, 0, 0,
	0, 1922, 1924, 1926, 0, 1928, 1929, 1930, 1932, 1933,
	1934, 1936, 1937, 1938, 1939, 1935, 0, 0, 1927, 0,
	0, 0, 1925, 0, 0, 0, 0, 0, 0, 1931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1942, 0, 0, 1736, 0, 1920,
	0, 0, 0, 1922, 1924, 1926, 0, 1928, 1929, 1930,
	1932, 1933, 1934, 1936, 1937, 1938, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1919, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	342, 346, 1935, 0, 0, 0, 0, 348, 0, 1925,
	1940, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 1919, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1935, 0, 0, 0, 0, 0,
	0, 1925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 351, 354, 0, 355, 356, 0, 0, 357, 358,
	359, 0, 0, 361, 362,
}

var yyPact = [...]int{
	210, -1000, -300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18767, -1000, -1000,
	1591, -1000, 7900, 19219, 81, 19219, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 273,
	-1000, 18315, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 234,
	21038, 153, -1000, 1995, -1000, -1000, -1000, -1000, 619, 320,
	17863, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1169, 14, 320, 395, 399,
	611, 611, 9256, 1995, 187, 62, -1000, 700, 210, 207,
	19219, -1000, 542, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1995, 1995, 19219, -63, 660, -1000, 224, 219, 186, 538,
	-1000, -1000, -1000, -1000, 2016, -1000, 19219, 1778, 19219, -1000,
	1011, 192, 1742, 1887, 1529, 387, 1797, -1000, -1000, 1770,
	-1000, 30, -3, 106, -1000, -1000, 188, -1000, -1000, -1000,
	-1000, -1000, 72, -1000, 15, -1000, 7, -1000, -1000, -1000,
	-101, -1000, -1000, -1000, -1000, -191, 1864, 1939, 1601, 1998,
	1942, 1925, 1913, 1911, 2, 229, 229, 229, 251, 229,
	270, -1000, -1000, -1000, -1000, -1000, -1000, 328, -1000, -1000,
	-1000, -1000, 1549, 19219, -1000, 1612, 601, 601, 714, 183,
	-1000, -1000, -97, -115, 601, 601, -115, 16, -1000, 1907,
	1903, -1000, -1000, -1000, -1000, -1000, -1000, 234, 234, 239,
	-1000, -195, -1000, 378, -1000, 361, -1000, 285, 178, 1553,
	715, -1000, 606, 19219, 19219, 19219, 606, 606, 11076, 10624,
	517, -1000, 1939, 1601, -1000, 1343, 1184, 1601, 234, 234,
	234, 234, 234, 234, 234, 19219, 5577, 5577, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 216, 1768, -1000, 19219,
	1939, 1864, 1939, -1000, 482, 906, 1095, -1000, -1000, 224,
	1527, -1000, 625, -1000, -1000, -1000, -1000, 19219, 193, -1000,
	1067, 1765, -1000, 307, 1354, 1531, -1000, 52, 7984, 15144,
	1011, 15144, 19219, -1000, -1000, -1000, -1000, -102, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -69, -1000,
	-1000, -290, 1864, 6040, -1000, -1000, 6040, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 260, 229, -1000, 1114, 720,
	15144, 1011, 924, 19219, 229, 239, -1000, 19219, 1549, 1894,
	19219, 1991, 6966, 1991, 19219, -1000, -1000, 601, 601, -1000,
	714, 714, -1000, -1000, -106, 1991, 1991, -121, 19219, 19219,
	229, -1000, -1000, 1114, 15144, 14692, -1000, -141, 389, 367,
	381, -1000, -1000, 2038, -1000, -1000, 1500, 306, 10172, 237,
	15144, 3719, -1000, -1000, 606, 606, 606, 3719, 3719, 558,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19219, 1864, -1000,
	-1000, -1000, -1000, -1000, 1114, 15144, 1011, 19219, 19219, 19219,
	20423, -1000, 1493, -1000, -1000, 8804, 475, 6040, 807, 1763,
	-1000, -1000, 1755, 1751, 1750, 1748, 1747, 1745, 1744, -1000,
	1692, -1000, -1000, 1743, 1740, 1739, 1737, -1000, -1000, -1000,
	-1000, -1000, -1000, 1736, -1000, -1000, -1000, 1735, 1692, -1000,
	-1000, 1721, 1719, 1718, 1717, 1715, -1000, -1000, -1000, -1000,
	-1000, -1000, 1093, 1084, 2139, -1000, -1000, -1000, -1000, 3256,
	6966, 6966, 6966, 6966, -1000, -1000, 1656, 6040, 1714, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7429, -1000, 1709, 1708,
	1703, 1701, 1695, 1692, 1690, 1079, 1689, 1684, 1683, 6966,
	1679, 1678, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1493, -1000, -288, -1000, 9720, 19219, 19219, -1000,
	1864, -1000, 1864, 2359, -1000, 1919, -1000, 224, 103, -1000,
	-1000, -1000, -1000, -1000, -1000, 448, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1543, -1000, 19219, -1000, -1000,
	52, 15144, 648, -1000, -1000, -1000, -1000, -1000, -1000, 152,
	-1000, -1000, 119, -1000, 254, -42, 1498, -1000, -1000, 10,
	114, 1063, -1000, 895, 441, 1541, -1000, 779, 17411, 19219,
	-17, -1000, 1871, 1417, -1000, -42, 1500, 1777, -1000, -1000,
	-1000, 1844, 19219, 16959, -1000, 1676, 1496, -1000, -1000, 6040,
	-1000, -1000, 1991, 1991, 1991, 601, 20423, 714, 19219, 714,
	-1000, -1000, 714, -1000, 436, -1000, 19219, -17, 1417, 1987,
	1502, -1000, -1000, -1000, -1000, 1893, 19671, 187, -1000, -1000,
	383, 352, 364, 1011, 252, -1000, -1000, 1500, -1000, -1000,
	-1000, 1674, 658, -1000, -1000, 6966, -1000, 1041, -1000, 3719,
	3719, 3719, -1000, -1000, 12884, -1000, -1000, -1000, 1535, 1500,
	1796, 1520, -1000, 1520, -1000, -1000, -1000, 1991, 5577, -1000,
	14692, -1000, 6040, 6040, 6040, 6040, -1000, 16500, -1000, 16048,
	-1000, 322, 6503, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	6040, 1900, 1900, 1900, 6040, 681, 6040, 6040, -1000, 823,
	8024, 1900, 1900, 1900, 1900, 1900, -1000, 2785, 1900, 1900,
	1900, 1900, -1000, -1000, 6966, 6966, 6966, 6966, 6966, 6966,
	6966, 6966, 6966, 6966, 6966, 6966, 1654, 659, 6966, 6966,
	6966, 1184, 1865, 1518, -1000, -1000, -1000, -1000, -1000, 677,
	1041, 6040, 20616, 6040, 6040, 6040, -1000, 1341, 1336, -1000,
	-1000, 6040, -1000, 6040, 6966, 6040, -1000, 1900, 1056, 1991,
	1387, -1000, 1673, -1000, 1485, 1840, -1000, 435, 1515, -1000,
	657, 1446, -1000, -1000, -1000, -1000, 428, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -65, -1000, -1000, 19219, 1067, 1444, 648, 1382,
	-1000, 247, 421, 419, -1000, 15144, 17, 15144, -1000, 15144,
	-1000, -1000, 190, -1000, 19219, 1850, -1000, -1000, -1000, 1051,
	-119, 6040, 6040, 19219, 6040, -1000, -1000, -1000, 1612, 710,
	1670, -82, 638, -1000, 338, 15144, 172, -1000, 1790, 208,
	-1000, 1844, -1000, 437, -1000, 1668, 19219, 1480, -1000, 415,
	210, -1000, 19219, 1041, -1000, -1000, -1000, 1991, -1000, 601,
	-1000, 601, 714, 19219, -1000, -1000, -82, 338, 19219, 14692,
	14692, 14692, 14692, -1000, 1832, 1825, -1000, 1817, 1811, 1837,
	19219, 14692, 19219, -1000, -1000, -1000, 20047, -1000, -1000, -1000,
	-1000, 1331, 1995, -1000, -1000, -1000, 343, 1500, 15144, 1049,
	237, -1000, -1000, -1000, -1000, -1000, 19219, 19219, 2003, -1000,
	1442, 1910, -1000, 744, 744, 727, -1000, -1000, 414, -1000,
	-1000, 269, -1000, -1000, -1000, -1000, -1000, 1656, -1000, -1000,
	-1000, 1321, 1377, 1041, 6040, -1000, -1000, 6040, 6040, 1009,
	6040, 1312, 1438, 1429, -1000, 1304, 2011, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 6040, 6040, 6040, 6040,
	6040, 761, 5114, -1000, -1000, -1000, 6040, 6040, 6040, 6040,
	1108, 1196, -1000, 723, 723, 565, 565, 565, 565, 565,
	688, 688, -1000, -1000, -1000, 3256, 1654, 6966, 6966, 6966,
	200, 1799, 1675, -1000, 6040, 683, -1000, 6040, 877, -1000,
	1295, 943, 1290, 1288, -1000, -1000, 1128, 1264, 1530, 1262,
	6040, 1433, 2003, -288, 4645, 209, 19219, -288, 19219, 19219,
	4645, -1000, 19219, 2359, 905, -1000, -1000, -1000, 2008, 15144,
	1011, 586, 630, -1000, 13, -1000, 143, 250, 1047, -1000,
	268, 645, -79, -73, 1041, 1041, 411, -1000, 1890, 1863,
	8352, 914, -1000, -1000, 1046, -1000, 243, -1000, -1000, -1000,
	329, 20, 901, 238, -1000, 1053, 19219, -1000, -1000, -1000,
	-1000, -1000, 638, 638, 638, 8352, 207, 1411, 410, 14692,
	19219, -1000, 14240, 1258, -1000, -1000, 1991, 1991, 601, -1000,
	914, 243, 1315, -1000, 643, 1774, 1788, 1774, -1000, -1000,
	-1000, -1000, 1819, -1000, 1809, -1000, -1000, 1315, -1000, 1612,
	-1000, -1000, -1000, 1382, 1236, -1000, -1000, -1000, -1000, 1997,
	1996, 15596, -1000, -1000, -1000, -1000, -1000, 6040, 1861, 1805,
	1789, 999, 1415, -1000, -1000, -1000, -1000, 6040, 1756, 1680,
	1661, 1617, 1611, -1000, 6040, 6040, 771, 1547, 1537, 1397,
	1371, 1413, -1000, 200, 1799, 1456, -1000, 6966, 6966, 1366,
	671, -1000, 6040, 740, 899, 11980, -1000, 6040, -1000, -1000,
	-1000, 11980, -1000, 6966, -1000, 1340, 1031, 1997, -1000, 1231,
	1425, -1000, -288, -1000, -1000, 1387, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 15144, -1000, 136, -1000, -1000,
	-1000, -1000, -1000, -1000, -54, -1000, 19219, 1030, -292, -77,
	1993, 1990, 19219, 187, 19219, 1228, 1419, -1000, -1000, -1000,
	20724, 505, -1000, 19219, 769, 396, 229, 396, 767, 1651,
	-1000, -1000, -1000, 1021, -43, -1000, -1000, 1020, 1014, 897,
	-1000, -1000, 855, 459, -32, -1000, -1000, -1000, -1000, -1000,
	-1000, 1650, 11980, 12432, 1013, 1226, 19671, 14692, 14240, 1242,
	-1000, 406, -1000, -1000, -1000, -1000, 1991, -1000, -1000, 2000,
	19219, 4645, -1000, -1000, 6040, 1645, -1000, 6040, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 6040, 6040, -1000, -1000, 1041,
	-1000, -1000, -1000, 1220, -1000, 341, 341, -12, -1000, -1000,
	-1000, 1598, -1000, 1620, 1620, 1598, 1598, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1625, 1624, -1000, 1598,
	1616, 1616, 1598, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1621, 1621,
	1622, 1621, -1000, 1310, -1000, -1000, -1000, -1000, -1000, 1210,
	1193, 6040, -1000, -1000, -1000, -1000, -1000, -1000, 6966, -1000,
	-1000, -1000, -1000, 1041, 6040, 1214, -1000, 1598, 1620, -1000,
	1598, 1616, 1598, 341, 341, 1208, 791, 1195, 1406, -1000,
	1191, -1000, -1000, 4645, 1387, 1382, -1000, -1000, -121, 110,
	-294, 1010, -1000, 1989, 993, 925, -1000, 1612, 20929, 8352,
	1649, -1000, -1000, 19219, 19219, -1000, 19219, 19219, 229, 6040,
	-1000, -1000, 170, -1000, -1000, 50, -1000, -1000, 853, 274,
	-1000, 13788, -1000, -1000, -1000, -1000, -1000, -69, 1991, 1242,
	406, -1000, -1000, 583, -1000, 1939, -1000, -1000, 1041, 19219,
	1041, 1041, 1377, -1000, -1000, -1000, -1000, -1000, -15, -1000,
	-1000, -1000, -1000, 896, -1000, 893, -1000, -1000, -1000, 985,
	985, -1000, -1000, 887, -1000, -1000, -1000, 885, -1000, -1000,
	879, -1000, -1000, -1000, -1000, 1182, -1000, 1041, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6040, -1000,
	-1000, -1000, -1000, -1000, -87, -81, -1000, 979, -296, 878,
	-1000, 978, -74, -1000, -1000, 1889, 206, 20877, -1000, 638,
	638, 454, 638, 638, 638, 638, 151, 150, 638, 638,
	638, 638, 638, 638, 638, 638, 638, 638, 638, 638,
	638, 638, 1609, -1000, -1000, 1649, -1000, -1000, 733, 6966,
	-1000, -1000, 972, 12432, 350, 458, 1608, -1000, 122, 751,
	734, -1000, 19219, -1000, 1604, 1619, 91, 1603, -1000, 1600,
	1599, 19219, 1151, 249, 971, -1000, -1000, 48, -1000, -1000,
	1404, -1000, 1598, 6040, -1000, -121, 2000, -1000, -1000, 1400,
	-1000, -1000, 1187, 1181, 1379, -1000, 1375, 1152, 1359, 1352,
	-1000, 1125, 236, -96, -81, -1000, 1988, -78, 1986, 1985,
	642, -1000, 1596, -1000, -1000, 1979, 187, -1000, 1978, 20929,
	-1000, 873, 870, 638, 638, 865, 970, 966, 965, 638,
	638, 861, 964, 20047, 856, 852, 829, 849, 958, 533,
	845, 844, 843, 19219, 1595, 919, -1000, -1000, 1799, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	828, 1594, -1000, -1000, 1593, 13788, 191, 191, 13788, 13788,
	13788, 1590, 293, -1000, -55, -1000, -1000, -1000, 13788, 1860,
	1090, -1000, 1939, -1000, -1000, -1000, -1000, 957, -1000, -1000,
	-1000, 827, -1000, 824, -1000, 1575, 819, -77, 1975, -1000,
	925, 1946, 925, 925, 952, 19219, 925, -1000, 104, -1000,
	-1000, -1000, 11980, 11980, -1000, -1000, -1000, -1000, 932, 927,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 162, 19219, 1339, -1000, 640, 1144, 6040, -243,
	13788, 1330, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1328,
	1294, 1261, 13788, -1000, -1000, -1000, 117, -1000, 132, -1000,
	-1000, 1860, -1000, -1000, 1139, 1137, 1869, 11528, -89, -1000,
	926, -1000, 925, -1000, -1000, -306, 1257, -1000, -1000, 107,
	160, 155, -1000, 267, -1000, -1000, -1000, -1000, -1000, -1000,
	163, 1240, -1000, 919, 900, -1000, 1050, 1787, -1000, 6,
	1224, -1000, -1000, -1000, -1000, 1197, -1000, -1000, 638, 882,
	71, -1000, -1000, -1000, -1000, -1000, -1000, 19219, -1000, 1186,
	-1000, -1000, -1000, 405, -1000, -1000, -1000, -1000, -1000, 19219,
	98, 812, 6966, 1569, 6966, 1568, 112, 1558, -1000, -1000,
	-1000, -1000, -1000, 293, -1000, -1000, 1782, 1781, 2027, -1000,
	-1000, -1000, -1000, 132, 132, 132, 132, 8, 800, -1000,
	924, 1361, -1000, 636, -1000, 13336, 19219, -1000, 1556, 1944,
	-1000, 1227, 19219, 992, 19219, 1555, 612, 6966, -1000, -1000,
	2030, -1000, 2028, 429, 429, -1000, -1000, -1000, 19219, 4182,
	-1000, 403, -1000, 204, 105, -1000, 1179, -1000, 1172, 19219,
	799, 953, -1000, -1000, -1000, 817, 126, -1000, -1000, -1000,
	1041, 19219, 1168, -1000, 995, 94, -1000, -1000, 1142, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 204, 1762, -1000, 795,
	-1000, -1000, 20770, 197, -1000, -1000, 20770, 96, -1000, 195,
	-1000, -1000, 1135, -1000, 956, 1407, -1000, 96, 20929, 6040,
	-1000, 20929, 1118, -1000,
}

var yyPgo = [...]int{
	0, 122, 2358, 180, 128, 126, 175, 2357, 1900, 1899,
	2356, 2355, 2354, 2353, 2352, 2350, 2348, 2347, 2346, 2345,
	2344, 2342, 2341, 2340, 2339, 2338, 2336, 174, 2335, 2334,
	2333, 2331, 2330, 2329, 2328, 2327, 2326, 2325, 2324, 2323,
	2321, 118, 2319, 1898, 2318, 2316, 2315, 2314, 2312, 162,
	2309, 2307, 2305, 2304, 2303, 2302, 2301, 2300, 2299, 2298,
	2297, 2296, 2288, 171, 57, 2286, 39, 61, 114, 199,
	73, 208, 191, 140, 70, 121, 164, 116, 2281, 2280,
	112, 24, 132, 2279, 43, 40, 35, 198, 102, 54,
	60, 91, 2275, 2273, 88, 2272, 2270, 97, 2268, 59,
	2267, 78, 48, 90, 26, 2266, 2265, 2264, 80, 2263,
	2262, 2261, 2260, 85, 2259, 63, 51, 2258, 2257, 2244,
	2239, 2238, 27, 2236, 46, 2235, 2230, 2229, 2228, 2226,
	2223, 2222, 11, 16, 21, 2221, 2220, 14, 2, 2219,
	147, 189, 84, 108, 2218, 375, 2217, 2216, 2215, 113,
	2212, 138, 2211, 2210, 2209, 2208, 2207, 10, 2205, 53,
	2204, 2203, 2202, 56, 2201, 2200, 2199, 96, 49, 50,
	92, 2198, 2197, 72, 157, 13, 42, 0, 151, 38,
	2195, 2194, 2191, 192, 146, 141, 165, 99, 246, 120,
	2190, 2189, 47, 2187, 117, 2185, 109, 66, 44, 2184,
	87, 2183, 37, 86, 2182, 105, 2181, 133, 1, 100,
	2180, 158, 2179, 2177, 2175, 125, 2174, 2173, 67, 124,
	2172, 2171, 2169, 25, 2168, 29, 19, 2167, 95, 176,
	2166, 156, 98, 131, 135, 82, 163, 166, 68, 115,
	766, 111, 81, 17, 2165, 161, 2164, 239, 194, 150,
	2162, 2161, 173, 322, 153, 2160, 130, 7, 2159, 2158,
	8, 2157, 22, 2154, 2153, 2152, 2150, 6, 2149, 2148,
	2147, 3, 5, 2146, 4, 110, 41, 65, 2145, 64,
	75, 2143, 2142, 2139, 2138, 2137, 269, 2136, 2135, 2134,
	2133, 2132, 2131, 2129, 83, 2125, 2123, 2122, 2121, 69,
	2120, 2119, 2117, 2116, 2115, 32, 2112, 2111, 23, 2110,
	30, 2109, 2107, 2105, 15, 136, 2103, 2102, 18, 2101,
	2100, 9, 12, 2098, 2097, 58, 45, 31, 79, 77,
	2093, 20, 2092, 107, 2089, 2088, 139, 2087, 103, 2086,
	144, 167, 215, 2085, 155, 2084, 2082, 2077, 2076, 2073,
	2065, 2061, 778, 2060, 2057, 170, 55, 159, 2053, 2052,
	154, 2051, 123, 94, 89, 148, 2050, 152, 2049, 2048,
	2047, 143, 2046,
}

//line mysql_sql.y:7200
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 368, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 57, 324, 324, 323, 323, 322,
	322, 321, 321, 321, 320, 320, 320, 319, 319, 318,
	318, 317, 317, 315, 315, 316, 314, 313, 313, 311,
	311, 309, 309, 310, 310, 304, 304, 307, 307, 305,
	305, 305, 305, 308, 303, 303, 303, 302, 302, 56,
	56, 56, 242, 242, 55, 55, 256, 256, 256, 256,
	256, 254, 254, 254, 254, 254, 254, 253, 253, 252,
	252, 257, 257, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 50, 50, 50, 50,
	53, 54, 250, 250, 250, 250, 250, 251, 251, 251,
	51, 52, 52, 241, 241, 246, 246, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 249,
	249, 249, 248, 248, 247, 247, 44, 44, 44, 47,
	46, 240, 240, 240, 240, 240, 240, 240, 240, 45,
	45, 45, 45, 45, 45, 42, 42, 42, 42, 42,
	41, 41, 43, 43, 239, 239, 238, 60, 60, 60,
	60, 60, 60, 60, 59, 59, 62, 62, 61, 49,
	49, 49, 49, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 347, 347, 347, 349, 349, 181, 182, 369,
	180, 180, 180, 343, 343, 344, 345, 346, 346, 346,
	58, 7, 7, 39, 40, 367, 367, 286, 286, 194,
	194, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 289, 290, 190,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 31, 31, 38, 370, 370, 370, 36, 37, 285,
	285, 285, 35, 34, 33, 32, 32, 30, 30, 29,
	29, 187, 187, 189, 189, 185, 371, 371, 262, 262,
	188, 188, 28, 28, 28, 186, 186, 164, 184, 184,
	184, 6, 10, 10, 10, 10, 10, 10, 10, 10,
	16, 18, 236, 236, 233, 17, 13, 12, 15, 11,
	14, 5, 5, 5, 5, 8, 8, 9, 75, 75,
	103, 103, 356, 356, 352, 352, 353, 353, 353, 354,
	354, 355, 355, 4, 293, 293, 293, 293, 293, 293,
	332, 332, 332, 333, 93, 93, 88, 88, 294, 294,
	209, 334, 334, 301, 301, 300, 300, 299, 299, 91,
	91, 92, 92, 79, 79, 63, 63, 306, 306, 306,
	306, 312, 312, 283, 283, 129, 129, 160, 160, 161,
	161, 67, 67, 68, 68, 68, 68, 68, 68, 340,
	340, 342, 342, 341, 90, 90, 86, 86, 87, 87,
	87, 85, 85, 84, 83, 83, 82, 81, 81, 81,
	70, 70, 69, 69, 69, 69, 69, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 71,
	71, 348, 348, 348, 287, 287, 287, 292, 292, 142,
	142, 143, 143, 141, 141, 72, 72, 73, 73, 73,
	73, 140, 140, 139, 74, 74, 80, 76, 76, 78,
	78, 78, 78, 150, 150, 149, 149, 149, 149, 96,
	96, 148, 147, 147, 147, 95, 95, 94, 94, 89,
	89, 77, 77, 146, 372, 372, 144, 173, 173, 173,
	179, 179, 172, 172, 172, 172, 172, 183, 178, 178,
	174, 174, 175, 175, 175, 3, 3, 3, 3, 22,
	22, 22, 22, 26, 26, 350, 350, 19, 357, 360,
	358, 361, 361, 361, 362, 362, 362, 363, 363, 20,
	359, 364, 364, 364, 237, 237, 234, 235, 235, 232,
	231, 231, 231, 366, 366, 365, 365, 365, 176, 176,
	21, 228, 228, 229, 230, 230, 222, 222, 222, 222,
	25, 226, 226, 227, 227, 227, 227, 227, 223, 223,
	225, 225, 221, 221, 221, 221, 221, 24, 220, 220,
	218, 218, 216, 216, 217, 217, 215, 215, 215, 219,
	219, 23, 23, 65, 64, 64, 64, 66, 288, 288,
	258, 258, 261, 261, 268, 268, 269, 269, 267, 267,
	274, 274, 273, 273, 272, 272, 271, 271, 270, 270,
	265, 265, 264, 264, 259, 259, 259, 259, 259, 260,
	260, 263, 263, 266, 266, 120, 120, 121, 121, 121,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 330,
	330, 331, 123, 123, 123, 127, 127, 127, 127, 127,
	127, 122, 122, 124, 124, 104, 104, 102, 102, 97,
	97, 98, 98, 99, 99, 100, 100, 101, 101, 101,
	101, 101, 101, 244, 244, 328, 328, 329, 329, 325,
	325, 325, 327, 327, 327, 327, 327, 326, 326, 105,
	158, 158, 158, 177, 177, 177, 157, 157, 157, 119,
	119, 118, 118, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 243, 243, 191, 191,
	192, 192, 137, 135, 135, 136, 136, 136, 136, 133,
	134, 132, 132, 132, 132, 132, 131, 131, 130, 130,
	130, 224, 224, 128, 128, 126, 126, 126, 125, 125,
	125, 275, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 201, 201, 206, 206,
	339, 339, 338, 106, 106, 106, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 115, 115, 115, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 298, 298, 298, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 156, 351,
	351, 351, 335, 335, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 154, 154, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 210, 210,
	211, 211, 295, 295, 295, 295, 295, 295, 296, 296,
	297, 297, 297, 297, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 199, 151, 151, 151, 212, 207, 207, 208,
	208, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 204, 204, 204, 204, 204, 196, 196, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 203, 203, 205,
	205, 214, 214, 214, 213, 213, 213, 213, 213, 213,
	213, 117, 117, 117, 117, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 108, 108, 108, 108, 112,
	112, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 113, 113, 113, 113, 111,
	111, 111, 111, 111, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 110,
	159, 159, 276, 276, 279, 279, 277, 277, 278, 280,
	280, 280, 281, 281, 281, 282, 282, 282, 284, 284,
	163, 163, 163, 169, 169, 162, 162, 170, 170, 171,
	171, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 9, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 0,
	3, 0, 3, 0, 3, 0, 2, 1, 2, 3,
	4, 3, 3, 1, 0, 1, 1, 0, 1, 8,
	5, 7, 0, 3, 8, 5, 1, 3, 3, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 3, 1,
	4, 1, 3, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 6, 3, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 0, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 2, 4, 3, 1,
	1, 1, 1, 2, 3, 4, 7, 2, 3, 3,
	4, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 7, 7, 0, 3, 0, 2, 0,
	1, 1, 1, 1, 4, 2, 2, 3, 3, 4,
	5, 3, 4, 4, 2, 2, 2, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 5, 1, 1, 1, 5, 5, 0,
	1, 1, 2, 2, 3, 6, 7, 4, 4, 7,
	8, 0, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 1, 3, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 3, 1, 4, 6, 4, 4, 4,
	3, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	0, 1, 3, 3, 1, 3, 1, 3, 1, 3,
	4, 0, 1, 0, 1, 1, 3, 1, 1, 0,
	4, 1, 3, 2, 1, 0, 8, 0, 4, 7,
	4, 0, 2, 0, 2, 0, 2, 0, 4, 1,
	3, 1, 1, 4, 3, 4, 5, 4, 5, 2,
	3, 1, 3, 6, 0, 3, 0, 1, 2, 4,
	4, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 7,
	7, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	4, 4, 3, 2, 2, 2, 3, 2, 3, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 4, 3, 0, 1, 2, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 11, 0, 1, 7, 1, 4,
	1, 3, 4, 3, 0, 1, 1, 0, 2, 7,
	1, 0, 2, 2, 1, 3, 2, 1, 3, 2,
	1, 3, 2, 0, 1, 3, 4, 3, 1, 1,
	4, 1, 3, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 5, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 10, 9, 2, 2, 6, 10, 5, 0, 1,
	0, 6, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 6,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 6,
	5, 0, 3, 0, 1, 0, 1, 1, 3, 2,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 4, 1,
	3, 3, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 1, 7, 7, 7,
	7, 8, 5, 0, 1, 0, 1, 1, 1, 1,
	3, 3, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 5, 6, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 1, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 2,
	2, 0, 3, 0, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 3, 5,
	2, 2, 2, 2, 1, 1, 2, 5, 6, 6,
	6, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	1, 2, 4, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 5, 4,
	4, 5, 5, 5, 5, 4, 5, 5, 5, 5,
	5, 5, 5, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 5, 4, 6, 6, 7, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 4, 2, 3, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 3, 4, 3, 4,
	1, 3, 4, 3, 4, 1, 1, 1, 3, 4,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	1, 3, 0, 1, 0, 3, 0, 3, 3, 0,
	3, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -368, -2, -1, -3, -4, -5, -6, -48, -59,
	-61, -62, -27, -7, -58, -41, -42, -44, -50, -55,
	-56, -57, -67, -22, -21, -20, -19, 12, -8, -9,
	-340, -10, -180, -181, -182, -369, -28, -29, -30, -32,
	-33, -34, -35, -36, -37, -38, -31, -40, -39, 195,
	-43, 53, -45, -46, -47, -51, -52, -53, -54, 308,
	314, 363, -68, -70, -23, -24, -25, -26, 191, 14,
	435, -11, -14, -12, -15, -13, -17, -18, -16, 213,
	212, 32, 275, 276, 312, 211, 192, 13, 125, 126,
	128, 129, 25, -69, 58, 193, -71, 10, 481, -79,
	33, -102, -177, 62, -165, -168, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 291, 432, 230, 254, 257, 264, 125, 144,
	138, 166, 158, 133, 234, 235, 69, 128, 392, 79,
	377, 362, 131, 249, 251, 253, 256, 236, 154, 149,
	248, 232, 147, 237, 34, 238, 171, 239, 240, 437,
	373, 290, 379, 261, 360, 148, 374, 252, 376, 172,
	176, 384, 314, 142, 143, 381, 386, 170, 210, 37,
	434, 222, 387, 174, 169, 165, 395, 265, 263, 168,
	141, 164, 233, 42, 178, 177, 179, 356, 357, 358,
	359, 241, 242, 302, 383, 161, 150, 294, 134, 22,
	390, 217, 378, 315, 243, 258, 266, 173, 175, 224,
	229, 436, 228, 262, 388, 146, 221, 250, 216, 391,
	135, 308, 317, 244, 129, 255, 385, 394, 41, 330,
	140, 132, 207, 126, 226, 231, 245, 246, 247, 268,
	267, 259, 162, 223, 167, 139, 163, 127, 225, 393,
	331, 480, 292, 345, 160, 157, 227, 200, 389, 380,
	130, 349, 332, 155, 269, 477, 478, 479, 303, 289,
	270, 271, 153, 214, 372, 272, 274, -43, -9, -8,
	-69, -70, -184, 23, 360, -49, 361, 195, 58, -177,
	-5, -4, -41, -67, -183, -177, 275, -183, 198, -177,
	228, 344, -286, 203, -253, -228, 229, -252, -229, -255,
	-230, 26, 192, 191, 225, 14, 193, 312, 199, 12,
	10, 313, 211, 13, 314, 316, 317, 320, 321, 322,
	36, 325, 326, 62, 65, 236, -84, -85, -145, 19,
	6, 7, 8, 9, -288, 291, 345, 228, -222, -220,
	272, 323, 208, 207, 80, 397, 197, -352, -353, 188,
	189, 190, -342, 429, -341, -177, 430, -163, -370, -285,
	380, 379, -188, 378, 371, 382, 373, 191, 79, 159,
	156, 199, 381, 37, 384, 385, 374, 291, 345, -352,
	130, 127, -240, 85, 135, 134, -240, 228, 35, -246,
	355, -245, -247, 384, 385, 395, 63, 64, 383, -163,
	-177, 79, -85, -145, -84, -68, -70, -340, 291, 345,
	228, 199, 198, 200, 397, 275, -287, -348, 26, -292,
	185, 186, 187, 27, 28, -1, -91, 220, -102, 124,
	-85, -84, -85, -157, -177, 362, 94, -49, -49, 361,
	-343, -344, -345, -347, 195, 361, 360, 124, 15, -183,
	56, -102, -229, 228, -253, -228, 30, 55, 59, 201,
	59, 55, 58, 310, 324, 345, 311, 323, 200, 228,
	324, 228, 371, 200, 315, 318, 319, 372, -302, 395,
	-63, 33, -87, 21, -71, -70, 20, 26, 27, 26,
	27, 26, 27, 26, 27, -350, 198, 429, -218, 203,
	-218, -218, 199, -218, 198, -354, 137, 59, -342, -90,
	58, -187, 102, -187, -371, 15, 104, 227, 226, 375,
	372, -262, 376, 377, -188, -187, -187, -188, 198, 200,
	397, 25, 25, -286, -286, -355, 202, 388, 435, 133,
	134, 135, -250, 26, 35, 354, -228, 228, 59, 94,
	23, -248, 94, 105, -247, -247, -247, -248, -248, -122,
	35, -176, 121, -177, 65, -122, 35, 124, -86, -87,
	-71, -70, 60, 60, -286, -286, -286, -286, -286, -286,
	-286, -183, -72, -73, 112, -202, -177, 86, -204, 62,
	-197, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 454, 455, 456, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 79, 360, 302, 345,
	155, 303, 153, 214, -198, -200, -321, -315, -195, 58,
	110, 111, 118, 87, -199, -275, 30, 89, 405, -152,
	-153, -154, -155, -156, -316, -314, 65, 70, 73, 76,
	77, 75, 74, 151, 72, 66, 123, -70, -335, -166,
	-291, -297, 197, -295, 156, 152, 12, 116, 355, 121,
	-298, 474, 64, 63, 296, 297, 298, 397, 293, 299,
	203, 47, 300, 301, 304, 404, 305, 48, 306, 295,
	218, 307, 408, 407, 409, 401, 398, 396, 399, 400,
	402, 403, -72, -293, 38, -67, 58, 25, 58, -177,
	-86, -63, -87, 124, 70, 65, -49, 60, 59, -346,
	76, 77, -349, 170, 162, -177, -60, 65, -3, -4,
	-5, -6, -27, -41, -67, -317, -315, 58, 26, 354,
	55, 15, -254, 198, 397, 309, 224, 200, -252, -236,
	-233, -231, -176, -229, -232, -231, -257, -157, 372, -64,
	364, 476, -63, -202, -177, -83, -82, -202, 200, -218,
	-357, 62, 86, -237, -234, -231, -228, -175, 62, 63,
	64, -177, -218, -355, -341, 29, -89, -177, -141, 16,
	-200, -141, -102, -187, -187, -189, -371, -185, -371, 372,
	-141, -141, -262, -186, -177, -186, -218, -357, -237, -76,
	-74, -77, -78, -80, -144, -146, -102, 58, 389, 390,
	131, 134, 133, 7, -251, 354, 26, -228, -245, -241,
	65, 355, -232, -249, 55, 121, -299, -202, 35, -248,
	-248, -248, -249, -249, 120, -177, -63, -357, -236, -228,
	-177, -104, -102, -104, -178, -175, -168, -140, 59, -139,
	15, -172, 85, 82, 83, 84, -177, 29, 65, 124,
	-202, 101, -213, 94, 95, 96, 97, 98, 99, 100,
	58, 58, 58, 58, 58, 58, 58, 58, -211, 58,
	58, 58, 58, 58, 58, 58, -211, 58, 58, 58,
	58, 58, 65, 65, 107, 106, 117, 110, 111, 112,
	113, 114, 115, 116, 108, 109, 104, 86, 102, 103,
	88, -70, -202, -208, -200, -200, -200, -200, -275, -206,
	-202, 58, -202, 58, 58, 58, -296, 58, 58, -210,
	-211, 58, 65, 58, 58, 58, -200, 58, 58, -140,
	-294, -209, -334, 475, -93, 60, -88, -177, -332, -333,
	-88, -92, -177, -63, -63, -170, -171, -162, -167, -174,
	-175, -168, 196, 26, 85, 29, 31, 296, 328, 88,
	121, 20, 89, 156, 120, 298, 405, 297, 191, 51,
	407, 409, 408, 398, 396, 347, 351, 353, 350, 397,
	371, 35, 14, 32, 212, 27, 28, 114, 193, 92,
	93, 215, 30, 213, 77, 23, 54, 15, 17, 18,
	299, 346, 203, 202, 104, 364, 199, 49, 12, 123,
	33, 101, 348, 45, 81, 47, 102, 21, 399, 400,
	36, 363, 431, 219, 116, 300, 301, 52, 86, 354,
	75, 55, 82, 19, 50, 103, 194, 404, 48, 352,
	304, 306, 429, 305, 197, 382, 10, 295, 406, 25,
	211, 46, 198, 91, 201, 76, 218, 152, 6, 80,
	13, 53, 56, 401, 402, 403, 38, 90, 16, 307,
	435, 355, 365, 366, 367, 368, 369, 370, 180, 181,
	182, 183, 184, 260, 206, 204, 208, 209, 475, 476,
	185, 186, 286, 288, 159, 188, 189, 190, 220, 137,
	7, 333, 334, 335, 336, 338, 339, 340, 341, 342,
	343, 344, 23, -49, -344, 124, 59, -89, -254, -235,
	-232, -256, 112, 62, -242, 59, 435, 482, 63, 201,
	-366, -365, 346, 60, 59, -303, 202, 404, 65, 483,
	65, 59, 22, 124, 59, -81, 31, 32, -102, 203,
	-102, -360, 333, 30, -367, 59, 35, -365, -221, 56,
	-216, -217, -215, -219, 35, -102, 15, -75, -103, -177,
	58, 60, 59, -202, -141, -141, -141, -187, -178, -189,
	-184, -189, -185, 124, -164, -177, -360, -367, 25, -147,
	-148, -149, -150, 45, 49, 51, 46, 47, 48, 52,
	25, 59, -372, 29, -173, -179, 29, -174, 65, -175,
	-168, -68, -70, 132, 135, 135, 134, -228, 201, 58,
	94, -249, -249, -249, 35, -176, 55, 59, -141, -73,
	-74, -76, -202, -202, -202, -202, -177, 65, -177, 112,
	-196, 86, 289, 75, 76, 77, -197, -214, 26, 270,
	271, -207, -208, -202, -151, 27, 26, -151, -151, -202,
	-151, 112, -208, -208, 60, 70, -336, -337, 410, 411,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 300,
	295, 301, 299, 293, 307, 302, 303, 155, 427, 428,
	421, 422, 423, 424, 425, 426, -151, -151, -151, -151,
	-151, -202, -351, 287, 286, 288, -151, -151, -151, -151,
	-198, -198, -198, -198, -198, -198, -198, -198, -198, -198,
	-198, -198, -205, -212, -275, 58, 104, 102, 103, 88,
	-200, -198, -198, 60, 59, -339, -338, 90, -202, -336,
	-207, -202, -207, -207, 60, 60, -208, -207, -198, -207,
	-151, 65, -141, 59, 58, 60, 59, 38, 124, 59,
	94, 60, 59, 124, 362, -177, -315, 60, -256, 59,
	201, 124, 124, -233, 314, -176, -235, 20, 435, -157,
	33, 65, -306, 376, -202, -202, -177, -82, -90, 86,
	58, -362, 378, 335, -169, 94, -194, -193, 292, 36,
	-289, 355, 341, 342, -234, 228, 55, 281, 282, 283,
	284, -215, -163, 120, 239, 58, -102, -75, -177, 15,
	59, -356, 124, -1, -177, -141, -187, -187, -189, -177,
	-362, -194, -239, -238, -157, -77, -77, -77, -77, 45,
	45, 45, 50, 45, 50, 45, -149, -239, -80, -177,
	-179, 60, 135, -235, -190, 65, -241, -102, -102, -143,
	17, 124, -196, 289, 75, -275, 60, 59, -202, -202,
	-202, 29, -208, 60, 60, 60, 60, 15, -202, -202,
	-202, -202, -202, 60, 15, 15, -202, -202, -202, -202,
	-202, -208, -205, -200, -198, -198, -203, 215, 85, -202,
	-201, -338, 92, -202, 59, 56, 60, 15, 60, 60,
	60, 56, 60, 59, 60, -202, 59, -143, -209, -301,
	-300, -299, 38, -67, -88, -294, -177, -333, -299, -177,
	-170, -167, -175, -168, 70, 15, -232, -228, 112, 112,
	62, 315, -242, 65, 334, 65, 198, 94, -312, 370,
	365, 367, 124, 29, 30, -97, -98, -99, -105, -100,
	-157, -192, -101, 206, 204, 208, -329, 80, 209, 260,
	81, 199, -363, 69, -358, 65, -364, 69, 336, 123,
	294, 35, 337, 338, 352, 290, 70, 70, 343, -359,
	62, -102, -169, -169, -169, -97, -91, 56, 124, -74,
	-103, -177, 112, 60, -141, -141, -187, -363, -364, -141,
	59, 94, -95, -94, 55, 56, -96, 55, -94, 45,
	45, -141, -90, 60, -142, 18, 20, -177, 112, -202,
	60, 60, 60, -106, -108, 330, 331, -112, -109, -111,
	-110, -114, -113, 156, 157, 121, 160, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 25, 214, 152,
	153, 154, 155, 172, 138, 158, 433, 180, 139, 181,
	140, 182, 141, 183, 142, 143, 184, 144, 147, 148,
	149, 146, 60, -202, 60, 60, 60, 60, 60, -202,
	-202, 15, 60, 60, 60, 60, 60, -203, 85, -200,
	-197, 60, 93, -202, 91, -107, -113, 121, 156, 214,
	155, 154, 152, 330, 331, -122, -202, -122, -198, 60,
	65, -142, 60, 59, -294, -235, -242, 355, -102, 65,
	-283, 477, -310, 365, 20, 20, -67, -102, 60, 59,
	-108, -101, -177, 81, -328, -329, -218, -328, 81, 58,
	65, -361, 346, 65, 65, 70, 35, 70, 123, 339,
	-290, 58, -122, -124, -176, 121, 65, 60, -173, -74,
	-177, -141, -356, 124, -141, -85, -238, -299, -202, 58,
	-202, -202, -208, 60, -115, 143, 142, -115, -282, 331,
	330, -276, -278, 58, -277, 58, -277, -276, -276, 58,
	58, -276, -279, 58, -279, -276, -280, 58, -280, -281,
	58, -280, 60, 60, 60, -202, -197, -202, 60, -276,
	-277, -276, -279, -276, -115, -115, 60, 60, 23, 60,
	60, 60, -299, -66, -304, -262, 484, 59, -129, 478,
	65, 20, 65, -308, 65, -90, -120, -121, -138, 328,
	230, -219, 234, 69, 235, 362, 236, 199, 238, 239,
	240, 210, 241, 242, 243, 355, 244, 245, 246, 247,
	311, 6, 277, -99, -119, -118, -116, 75, 86, 35,
	328, -117, 69, 120, 253, 231, 254, -137, -191, 204,
	80, 81, 316, -192, -325, -326, -177, -326, -177, -325,
	-325, -218, -202, 20, 435, 293, 35, 70, 35, 340,
	-223, -225, -157, 58, -65, -64, -141, -141, -86, -89,
	-284, 332, 70, 70, -159, 65, -159, 70, 70, 70,
	60, -202, -311, 370, -307, -305, 365, 366, 367, 368,
	65, -160, 479, 70, 65, 367, 29, -258, 220, 59,
	-138, -169, -169, -163, 120, -169, -169, -169, -169, 237,
	237, -169, -169, -169, -169, -169, -169, -169, -169, -169,
	-169, -169, -169, -169, -169, 58, -116, 75, -198, 65,
	-124, -125, 35, 252, 248, -126, 35, 232, 233, -128,
	58, 260, 81, 81, -102, 58, 56, 269, 58, 58,
	58, -326, 60, 65, 334, 65, 293, 60, 59, -276,
	-202, -66, -85, 60, 60, 60, 60, 59, 60, 60,
	60, 59, 60, 59, 60, -313, 202, -309, 369, -305,
	20, 367, 20, 20, 94, 58, 20, -67, 20, -138,
	70, 70, -169, -169, 70, 65, 65, 65, -169, -169,
	70, 65, -179, 70, 70, 70, 70, 35, 65, -127,
	35, 248, 252, 249, 250, 251, 70, 35, 70, 35,
	70, 35, -177, 58, -330, -331, 65, 70, 58, -224,
	58, -223, -327, 281, 282, 283, 285, 284, -327, -223,
	-223, -223, 58, -244, -243, 261, 86, 355, -226, -225,
	-81, 60, -86, 65, 70, 70, -320, 58, 70, -310,
	20, -308, 20, -308, -308, 65, -161, -177, -308, -259,
	262, 263, -260, -266, 265, -122, -122, 65, 65, -123,
	231, -104, 60, 59, 94, 60, -202, -131, -130, 431,
	-223, 60, 60, 60, 60, -223, 261, -227, 210, 69,
	435, 279, 280, -81, 60, 60, -324, 25, 60, -319,
	-318, -158, -314, -177, 370, 65, -308, 484, 60, 59,
	-264, 266, 58, -262, 58, -262, 81, 282, 232, 233,
	60, -331, 65, 60, -135, -136, -133, -134, 55, 374,
	258, 259, 60, -226, -226, -226, -226, 60, -169, 65,
	278, -323, -322, -321, 60, 59, 124, -177, -261, 267,
	70, -198, 58, -198, 58, -263, 264, 58, -243, -134,
	55, -133, 55, 14, 13, -137, 70, -175, 59, 94,
	-318, -177, -268, 58, 20, 60, -257, 60, -257, 58,
	94, -198, -132, 255, 256, 25, 134, -132, -322, 35,
	-202, 124, -269, -267, 220, -260, 60, 60, -257, 70,
	60, 75, 35, 257, -177, 60, 59, 62, -265, 268,
	60, -267, -270, 38, 70, -274, -271, 58, -138, 222,
	-274, -138, -273, -272, 267, 223, 60, 59, 62, 58,
	-272, -271, -208, 60,
}

var yyDef = [...]int{
	23, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 535, 536, 537, 538, 0, 341, 342,
	0, 321, 0, 0, 0, 0, 270, 271, 272, 273,
	274, 275, 276, 277, 278, 279, 280, 241, 242, 0,
	190, 186, 166, 167, 168, 126, 127, 128, 129, 247,
	0, 0, 411, -2, 539, 540, 541, 542, -2, 354,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 230,
	231, 232, 227, 228, 229, -2, 0, 354, 179, 0,
	171, 171, 0, 431, 0, 0, 442, 464, 23, 389,
	0, 394, 717, 753, 754, 755, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 191, 343, 344,
	431, 431, 213, 0, 1333, 217, 0, 0, 0, 318,
	209, 210, 211, 212, 0, 527, 0, 206, 0, 185,
	1391, 0, 0, 0, 0, 0, 0, 87, 581, 89,
	583, 93, 95, 96, 99, 100, 101, 102, 103, 104,
	105, 106, 0, 108, 0, 110, 0, 113, 114, 115,
	0, 124, 125, 584, 585, 67, -2, 0, 0, 0,
	447, 450, 453, 456, 545, 610, 610, 610, 0, 610,
	0, 629, 587, 588, 589, 608, 609, 359, 355, 356,
	357, 358, 419, 0, 421, 424, 301, 301, 0, 0,
	292, 293, 0, 310, 301, 301, 310, 0, 1120, 0,
	0, 284, 285, 286, 290, 291, 311, 247, 247, 361,
	180, 181, 170, 0, 175, 0, 169, 1391, 0, 140,
	0, 145, 0, 1340, 1405, 1355, 0, 0, 1373, 0,
	164, -2, 426, 0, 432, 0, 431, 0, 247, 247,
	247, 247, 247, 247, 247, 0, 0, 0, 465, 466,
	461, 462, 463, 467, 468, 3, 0, 0, 393, 0,
	426, -2, 0, 214, 756, 0, 0, 218, 219, 0,
	0, 233, 0, 236, 222, 223, 224, 0, 0, 208,
	0, 0, 187, 0, 0, 0, 248, 81, 0, 0,
	0, 0, 0, 94, 123, 97, 98, 0, 118, 120,
	122, 121, 107, 119, 109, 111, 112, 117, 0, 68,
	414, 0, 395, 0, 444, 446, 0, 448, 449, 451,
	452, 454, 455, 457, 458, 0, 610, 546, 0, 0,
	0, 0, 0, 0, 610, 361, 360, 0, 420, 0,
	0, 473, 0, 473, 0, 306, 307, 301, 301, 294,
	303, 0, 308, 309, 0, 473, 473, 0, 0, 0,
	610, 1121, 1122, 0, 0, 0, 362, 0, 0, 173,
	0, 178, 130, 135, 133, 134, 136, 0, 0, 0,
	0, 0, 162, 163, 0, 0, 0, 0, 0, 153,
	156, 711, 712, 578, 579, 157, 158, 0, 395, 427,
	443, 445, 440, 441, 0, 0, 0, 0, 0, 0,
	0, 340, 481, 475, 477, 522, 31, 0, 1010, 753,
	1015, -2, 1467, 1468, 1469, 1470, 1471, 1472, 1473, -2,
	1475, -2, -2, 1478, 1479, 1480, 1482, -2, -2, -2,
	-2, -2, -2, 1489, -2, -2, -2, 1493, 1494, -2,
	-2, 1497, 1498, 1499, 1500, 1501, -2, -2, -2, -2,
	-2, -2, -2, -2, 1026, 824, 825, 826, 827, 0,
	0, 0, 0, 0, 834, 835, 0, 848, 0, 841,
	842, 843, 844, 845, 43, 44, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 973, 811, 0, 0,
	0, 958, 0, 948, 0, 986, 0, 0, 0, 0,
	0, 0, 45, 46, 964, 966, 967, 969, 970, 971,
	972, 975, 976, 977, 980, 981, 982, 983, 984, 985,
	988, 990, 960, 961, 962, 963, 952, 953, 954, 955,
	956, 957, 481, 363, 381, 365, 0, 370, 0, 718,
	395, 417, 395, 0, 215, 0, 220, 0, 0, 235,
	237, 238, 239, 225, 226, 319, 204, 205, 197, 198,
	199, 200, 201, 202, 203, 207, 41, 0, 188, 189,
	81, 0, 0, 82, 83, 84, 85, 86, 88, 72,
	332, 334, 570, 582, 0, 573, 0, 91, 116, 64,
	0, 0, 415, 428, 31, 433, 434, 437, 0, 0,
	0, 548, 0, 245, 564, 0, 580, 602, 532, 533,
	534, -2, 0, 0, 422, 0, 0, 509, 281, 0,
	302, 282, 473, 473, 473, 301, 0, 303, 0, 303,
	297, 298, 0, 312, 315, 313, 0, 0, 245, 486,
	0, 487, 488, 484, 511, 514, 517, 0, 182, 183,
	0, 0, 177, 0, 0, 137, 138, 139, 146, 141,
	143, 0, 0, 147, 159, 160, 161, 387, 388, 0,
	0, 0, 151, 152, 0, 165, 413, 330, 331, 335,
	0, 337, 715, 338, 339, 528, 529, 473, 0, 482,
	0, 478, 0, 0, 0, 0, 523, 0, 525, 0,
	1005, 0, 0, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	997, 993, 993, 993, 0, 993, 0, 0, 933, 0,
	0, 993, 993, 993, 993, 993, 934, 0, 993, 993,
	993, 993, 947, 941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 999, 0, 830, 831, 832, 833, 836, 0,
	849, 0, 0, 997, 997, 997, 936, 0, 0, 938,
	949, 0, 942, 997, 0, 997, 946, 993, 0, 473,
	364, 378, 0, 382, 0, 0, 374, 376, 369, 371,
	0, 0, 391, 416, 418, 757, 0, 1127, -2, 1129,
	-2, -2, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 0, 221, 234, 0, 0, 0, 0, 75,
	567, 0, 76, 80, 70, 0, 0, 0, 572, 0,
	569, 574, 0, 90, 0, 0, 65, 66, 624, 0,
	397, 0, 0, 0, 0, 436, 438, 439, 424, 0,
	0, 554, 1123, 611, 249, 0, 0, 566, 0, 0,
	607, -2, 614, 0, 620, 0, 0, 0, 348, 352,
	23, 425, 0, 474, 283, 287, 288, 473, 304, 301,
	305, 301, 303, 0, 314, 317, 554, 249, 0, 0,
	0, 0, 0, 502, 0, 0, 501, 0, 0, 0,
	0, 0, 0, 515, 516, 518, 0, 520, 521, 530,
	531, 0, 431, 184, 172, 174, 0, 132, 0, 0,
	0, 148, 149, 150, 154, 155, 0, 0, 471, 476,
	483, 486, 1001, 1002, 1003, 1004, 524, 526, 32, 479,
	1006, 0, 1008, 1011, 1016, 1017, 1013, 0, 1031, -2,
	-2, 0, 998, 999, 0, 994, 995, 0, 0, 0,
	0, 0, 0, 0, 950, 0, 0, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 0, 0, 0, 0,
	0, 0, 0, 899, 900, 901, 0, 0, 0, 0,
	812, 813, 814, 815, 816, 817, 818, 819, 820, 821,
	822, 823, 1018, 1029, 1030, 0, 0, 0, 0, 0,
	1027, 1022, 0, 828, 0, 846, 850, 0, 0, 992,
	0, 999, 0, 0, 959, 937, 0, 0, 0, 0,
	0, 0, 471, 381, 383, 0, 0, 381, 0, 0,
	0, 390, 0, 0, 0, 320, 42, 240, 0, 0,
	0, 0, 0, 333, 0, 571, 72, 0, 0, 92,
	0, 0, 401, 0, 429, 430, 32, 435, 0, 0,
	719, 557, 555, 556, 0, 1124, 561, 250, 251, 252,
	253, 0, 0, 0, 565, 0, 0, 603, 604, 605,
	606, 615, 1123, 1123, 1123, 719, 389, 0, -2, 0,
	0, 350, 0, 0, 510, 295, 473, 473, 301, 316,
	557, 561, 473, 194, 0, 505, 499, 0, 492, 503,
	504, 495, 0, 497, 0, 493, 494, 473, 485, 424,
	519, 513, 176, 131, 0, 269, 142, 336, 716, 469,
	0, 0, 1007, 1009, 1012, 1014, 886, 0, 0, 0,
	0, 0, 0, 875, 869, 870, 951, 0, 0, 0,
	0, 0, 0, 894, 0, 0, 0, 0, 0, 0,
	0, 0, 1019, 1027, 1023, 0, 1020, 0, 0, 1000,
	0, 851, 0, 0, 0, 0, 887, 0, 891, 935,
	939, 0, 943, 0, 945, 0, 0, 469, 379, 0,
	384, 385, 381, 368, 375, 367, 377, 372, 373, 392,
	758, 1128, 1125, 1126, 216, 0, 568, 72, 77, 78,
	79, 73, 71, 575, 0, 577, 0, 0, 403, 53,
	0, 0, 0, 0, 0, 0, 720, 721, 723, 724,
	0, 0, 726, 780, 0, 735, 610, 735, 0, 0,
	737, 738, 547, 0, 0, 550, 559, 0, 0, 0,
	255, 256, 0, 0, 0, 268, 264, 265, 266, 246,
	560, 0, 0, 0, 0, 0, 517, 0, 0, 473,
	349, 352, 353, 423, 299, 296, 473, 243, 244, 431,
	0, 0, 489, 506, 0, 0, 490, 0, 491, 496,
	498, 193, 512, 144, 459, 0, 0, 33, 480, 1000,
	871, 872, 873, 0, 853, 865, 865, 1115, 1056, 1057,
	1058, 1102, 1060, 1106, 1106, 1102, 1102, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 0, 0, 1079, 1102,
	1104, 1104, 1102, 1099, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1109, 1109,
	1112, 1109, 874, 0, 893, 876, 877, 880, 878, 0,
	0, 0, 892, 881, 882, 868, 996, 1021, 0, 1028,
	1024, 829, 837, 847, 0, 0, 856, 1102, 1106, 859,
	1102, 1104, 1102, 865, 865, 0, 0, 0, 0, 879,
	0, 460, 380, 0, 366, 74, 69, 576, 55, 0,
	405, 0, 402, 0, 0, 0, 543, 424, -2, 0,
	-2, 725, 781, 747, 747, 736, 747, 747, 610, 0,
	558, 549, 0, 562, 563, 0, 257, 258, 0, 261,
	267, 0, 616, 617, 713, 714, 618, 0, 473, 473,
	-2, 346, 351, 0, 300, 426, 195, 196, 507, 0,
	500, 470, 472, 838, 854, 866, 867, 855, 1118, 1116,
	1117, 1059, 1103, 0, 1084, 0, 1085, 1086, 1087, 0,
	0, 1080, 1081, 0, 1082, 1083, 1075, 0, 1076, 1077,
	0, 1078, 890, 895, 896, 0, 1025, 852, 839, 857,
	858, 860, 861, 862, 863, 864, 840, 888, 0, 940,
	944, 898, 386, 24, 49, 0, 625, 0, 407, 0,
	404, 0, 398, 400, 63, 0, 630, -2, 667, 1123,
	1123, 0, 1123, 1123, 1123, 1123, 0, 0, 1123, 1123,
	1123, 1123, 1123, 1123, 1123, 1123, 1123, 1123, 1123, 1123,
	1123, 1123, 0, 722, 749, -2, 761, 763, 0, 0,
	766, 767, 0, 0, 0, 0, 803, 773, 0, 0,
	1043, 1044, 0, 779, 0, 739, 748, 0, 748, 0,
	0, 747, 0, 0, 0, 254, 259, 0, 262, 263,
	0, 598, 1102, 0, 622, 55, 431, 347, 192, 0,
	1055, 1119, 0, 0, 0, 1100, 0, 0, 0, 0,
	897, 0, 47, 51, 56, 57, 0, 0, 0, 0,
	0, 396, 0, 406, 54, 0, 0, 621, 0, 619,
	669, 0, 0, 1123, 1123, 0, 0, 0, 0, 1123,
	1123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 762, 764, 765, 768,
	769, 770, 808, 809, 810, 771, 805, 806, 807, 772,
	0, 0, 1041, 1042, 801, 0, 0, 0, 0, 0,
	0, 0, 733, 551, 0, 553, 260, 591, 0, 437,
	0, 623, 426, 508, 1108, 1107, 1097, 0, 1098, 1105,
	1110, 0, 1113, 0, 889, 34, 0, 53, 0, 58,
	0, 0, 0, 0, 0, 0, 0, 544, 663, 668,
	670, 671, 0, 0, 674, 675, 676, 677, 0, 0,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	705, 706, 707, 708, 709, 710, 690, 691, 692, 693,
	694, 695, 702, 0, 0, 699, 0, 0, 0, 796,
	0, 0, 740, 742, 743, 744, 745, 746, 741, 0,
	0, 0, 0, 732, 734, 776, 0, 552, 590, 599,
	600, 437, 345, 1101, 0, 0, 25, 0, 0, 50,
	0, 59, 0, 61, 62, 0, 0, 409, 399, 652,
	0, 0, 658, 0, 664, 672, 673, 678, 679, 696,
	0, 0, 698, 0, 0, 804, 0, 783, 797, 0,
	0, 591, 591, 591, 591, 0, 777, 592, 1123, 0,
	0, 596, 597, 601, 1111, 1114, 627, 0, 35, 0,
	37, 39, 40, 750, 48, 52, 60, 626, 408, 0,
	632, 0, 0, 0, 0, 0, 661, 0, 703, 704,
	697, 700, 701, 774, 782, 784, 785, 786, 0, 798,
	799, 800, 802, 727, 728, 729, 730, 0, 0, 594,
	0, 26, 27, 0, 36, 0, 0, 410, 634, 0,
	653, 0, 0, 0, 0, 0, 0, 0, 775, 787,
	0, 788, 0, 0, 0, 731, 593, 595, 0, 0,
	38, 751, 631, 0, 663, 654, 0, 656, 0, 0,
	0, 0, 789, 791, 792, 0, 0, 790, 28, 29,
	30, 0, 0, 636, 0, 650, 655, 657, 0, 662,
	660, 793, 795, 794, 752, 635, 0, 648, 633, 0,
	659, 637, -2, 0, 651, 638, -2, 0, 646, 0,
	639, 647, 0, 642, 0, 0, 641, 0, -2, 0,
	643, -2, 0, 649,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 87, 3, 3, 3, 115, 107, 3,
	58, 60, 112, 110, 59, 111, 124, 113, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 481,
	95, 94, 96, 3, 482, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 117, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 483, 106, 484, 118,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 88, 89, 90, 91, 92, 93, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 108, 109, 114,
	116, 119, 120, 121, 122, 123, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:541
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:547
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:573
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:577
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:583
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:598
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:604
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:608
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:614
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:621
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:630
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:634
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:638
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:651
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:657
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:666
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:677
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:681
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:687
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:691
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:697
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:701
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:707
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:731
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//        	yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:750
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:754
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:763
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:771
		{
			yyVAL.str = ""
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:775
		{
			yyVAL.str = yyDollar[3].str
		}
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:780
		{
			yyVAL.str = "\n"
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:784
		{
			yyVAL.str = yyDollar[3].str
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:793
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:817
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:821
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:827
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:833
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:851
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:868
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:891
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:895
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:899
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:914
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:927
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:951
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:955
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:965
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Users:      yyDollar[8].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:978
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:991
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:997
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1003
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1010
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1018
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1026
		{
			yyLOCAL = tree.OBJECT_TYPE_NONE
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1030
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1034
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1038
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1042
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1046
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1052
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1056
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1069
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1078
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1082
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1088
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1092
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1096
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1100
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1104
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1108
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1112
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1116
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1120
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1124
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1128
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1132
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1140
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1148
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1152
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1156
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1160
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1164
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1168
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1172
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1176
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1180
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1184
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1192
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1196
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1200
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1204
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1208
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1212
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1216
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1228
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1234
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1242
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1250
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1254
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1258
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1264
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1268
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1272
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1278
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1284
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1288
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1295
		{
			yyVAL.str = yyDollar[3].str
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1301
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1305
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1311
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1319
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1328
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1336
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1344
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1367
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1390
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1397
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1412
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1419
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1426
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1435
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1453
		{
			yyVAL.str = yyDollar[1].str
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1460
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1471
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1477
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1520
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1528
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1533
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1551
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1557
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1581
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1588
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1599
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1614
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1620
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1632
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1652
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1658
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1667
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1673
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1677
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1693
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1701
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1709
		{
			explainStmt := tree.NewExplainStmt(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1719
		{
			explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
			explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1755
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1767
		{
			yyVAL.str = yyDollar[1].str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1772
		{
			yyVAL.str = "true"
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1773
		{
			yyVAL.str = "false"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1774
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1790
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1802
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1817
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1822
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1826
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1835
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1851
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1855
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1867
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1871
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1887
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1891
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1895
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1899
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1917
		{
			yyVAL.item = nil
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1922
		{
			yyVAL.item = nil
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1944
		{
			yyLOCAL = &tree.ShowTarget{Target: yyDollar[2].str, Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1948
		{
			yyLOCAL = &tree.ShowTarget{Target: "charset", Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[4].tableNameUnion(),
				Where:     yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1968
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1978
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1987
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1991
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2013
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2045
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2063
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2080
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2085
		{
			yyVAL.str = ""
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2089
		{
			yyVAL.str = yyDollar[2].str
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2095
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2108
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2112
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2123
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2127
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2133
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2137
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2146
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2150
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2154
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2173
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2191
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2195
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2201
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2210
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2219
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2229
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2235
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2241
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2255
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2260
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2267
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2283
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2307
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2311
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2317
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2322
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2329
		{
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2331
		{
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2334
		{
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2343
		{
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2347
		{
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2352
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2361
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2368
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2374
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2382
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2389
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2396
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2419
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2423
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2429
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2438
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2442
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2448
		{
			yyVAL.str = yyDollar[1].str
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2452
		{
			yyVAL.str = yyDollar[3].str
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2458
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2462
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2468
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2473
		{
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2484
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2488
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2495
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2500
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2504
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2510
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2514
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2520
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2524
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2529
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2533
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2546
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2553
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2560
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2578
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2597
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2603
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2610
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2614
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2627
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2631
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2636
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2640
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2647
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2652
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2659
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2665
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2669
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2673
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2677
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2681
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2685
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2691
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2698
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2707
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2711
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2717
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2729
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2738
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2744
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2748
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2752
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2757
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2761
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2767
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2773
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2777
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2783
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2788
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2792
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2796
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2803
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2807
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2813
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2817
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2827
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2837
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2847
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2859
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2867
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2884
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2892
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2908
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2916
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2924
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2958
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2987
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2991
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2995
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3008
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3017
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3026
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3032
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3036
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3042
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3046
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3050
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3054
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3059
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3067
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3073
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3081
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3085
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3098
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3126
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3136
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3140
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3150
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3154
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3158
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3162
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3172
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3178
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3184
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3188
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3192
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3202
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3208
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3212
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3218
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3222
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3228
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3245
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3250
		{
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3251
		{
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3255
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3267
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3271
		{
			yyVAL.str = yyDollar[1].str
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3275
		{
			yyVAL.str = yyDollar[2].str
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3284
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3288
		{
			yyVAL.str = yyDollar[1].str
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3292
		{
			yyVAL.str = yyDollar[2].str
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3296
		{
			yyVAL.str = yyDollar[1].str
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3300
		{
			yyVAL.str = yyDollar[2].str
		}
	case 543:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3334
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3355
		{
		}
	case 547:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3372
		{
			yyVAL.str = yyDollar[1].str
		}
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3378
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3388
		{
			yyVAL.str = yyDollar[1].str
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3394
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3401
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3407
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3415
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3421
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3428
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3436
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3442
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3451
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3463
		{
			yyVAL.str = yyDollar[1].str
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3468
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3474
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3482
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3588
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3592
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3598
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3608
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3612
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3618
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3628
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3632
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3636
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3645
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3651
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3658
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3664
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3686
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3690
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3696
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3713
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3717
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3721
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3725
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3731
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3750
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3754
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3776
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3780
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3784
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3788
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3792
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3798
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3802
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3808
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3813
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3818
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3822
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3826
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3830
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3834
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3840
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3854
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3858
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3867
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3873
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3877
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3883
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3887
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3891
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3896
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3900
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3906
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3917
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3928
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3935
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3942
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3953
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:3966
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3977
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3981
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3986
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3990
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4004
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4017
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4023
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4027
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4033
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4042
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4056
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4062
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4066
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4072
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4079
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4088
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4092
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4097
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4101
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4106
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4110
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4120
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4124
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4135
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4143
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4151
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4159
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4170
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4180
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4190
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4194
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4199
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4203
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4212
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4218
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4222
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4226
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4232
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4236
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4240
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4244
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4248
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4252
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4256
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4260
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4264
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4268
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4272
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4276
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4280
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4284
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4288
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4292
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4296
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4300
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4304
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4308
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4312
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4316
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4320
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4324
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4328
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4332
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4336
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4340
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4344
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4351
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4355
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4361
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4366
		{
			yyVAL.str = ""
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4370
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4374
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4380
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4384
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4388
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4392
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4396
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4400
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4414
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4418
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4427
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4432
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4438
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4445
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4449
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4455
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4459
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4465
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4475
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4481
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4490
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4499
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4522
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4531
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4541
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4549
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4555
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4559
		{
			yyVAL.str = yyDollar[1].str
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4569
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4575
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4581
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4595
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:4602
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4608
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4612
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4616
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4627
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4631
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4635
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4640
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4644
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4650
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4654
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4660
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4664
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4668
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4672
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4676
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4680
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4684
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4688
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4692
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4696
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4700
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4704
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4708
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4718
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4722
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4727
		{
			yyVAL.str = ""
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4731
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4737
		{
			yyVAL.str = ""
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4741
		{
			yyVAL.str = yyDollar[2].str
		}
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:4747
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4758
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4768
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4775
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4782
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4789
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4798
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4804
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4810
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4814
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4818
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4822
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4826
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4831
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4838
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4842
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4846
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4855
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4860
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4864
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4886
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4890
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4894
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4898
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4902
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4906
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4910
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4914
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4918
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4922
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4926
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4930
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4934
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4940
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4944
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4948
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4952
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4956
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4960
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4964
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4968
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4972
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4976
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4980
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4984
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4989
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4997
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5001
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5005
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5014
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5018
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5022
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5026
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5030
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5039
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5048
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5054
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5058
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5064
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5074
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5091
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5108
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5121
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5134
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5146
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5160
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5175
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5190
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5207
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5222
		{
		}
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5228
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5237
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5245
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5253
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5262
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5271
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5280
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5289
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5298
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5307
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5316
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5325
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5334
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5343
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5352
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5368
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5376
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5384
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5392
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5400
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5409
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5417
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5426
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5435
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5443
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5451
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5460
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5470
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5491
		{
			yyVAL.str = yyDollar[1].str
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5527
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5539
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5553
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5561
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5568
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5575
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5587
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5595
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5606
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5615
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5624
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5632
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5642
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5650
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5658
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5668
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5672
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5682
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5701
		{
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5703
		{
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5743
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5753
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5757
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5761
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:5767
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5776
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5782
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5786
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5793
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5797
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5801
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5809
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5813
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5817
		{
			yyLOCAL = tree.NewComparisonExpr(tree.EQUAL, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5821
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_EQUAL, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5825
		{
			arg := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), "", false, tree.P_char)
			yyLOCAL = tree.NewComparisonExpr(tree.EQUAL, yyDollar[1].exprUnion(), arg)
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5830
		{
			arg := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), "", false, tree.P_char)
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_EQUAL, yyDollar[1].exprUnion(), arg)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5835
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5841
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5845
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5849
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5853
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5860
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5864
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5870
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5874
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5878
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5882
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5886
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5890
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5894
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5898
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5904
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5908
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5914
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5918
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5925
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5929
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5933
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5939
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5943
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5947
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5951
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5955
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5959
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5963
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5969
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5973
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5977
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5981
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5987
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5991
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6004
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6009
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6013
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6017
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6021
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6035
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6039
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6053
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6059
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6070
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6075
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6081
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6093
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6105
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6117
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6130
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6143
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6156
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6169
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6182
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6195
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6208
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6221
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6234
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6247
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6262
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6285
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6322
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6370
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6387
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6399
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6414
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6434
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6454
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6470
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6483
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6496
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6509
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6522
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6534
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6546
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6558
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6570
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6582
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6594
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6606
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6618
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6630
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6643
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6658
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6681
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6686
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6692
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6699
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6703
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6708
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6712
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6718
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6724
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6731
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6738
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6747
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6754
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6761
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6770
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6774
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6778
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6784
		{
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6786
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6796
		{
			yyVAL.str = ""
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6800
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

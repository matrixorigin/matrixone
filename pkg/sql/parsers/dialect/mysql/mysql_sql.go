// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const SQL_SMALL_RESULT = 57521
const SQL_BIG_RESULT = 57522
const SQL_BUFFER_RESULT = 57523
const LOW_PRIORITY = 57524
const HIGH_PRIORITY = 57525
const DELAYED = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const SCHEMA = 57533
const TABLE = 57534
const INDEX = 57535
const VIEW = 57536
const TO = 57537
const IGNORE = 57538
const IF = 57539
const PRIMARY = 57540
const COLUMN = 57541
const CONSTRAINT = 57542
const SPATIAL = 57543
const FULLTEXT = 57544
const FOREIGN = 57545
const KEY_BLOCK_SIZE = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const MAXVALUE = 57555
const PARTITION = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const STATUS = 57562
const VARIABLES = 57563
const ROLE = 57564
const PROXY = 57565
const AVG_ROW_LENGTH = 57566
const STORAGE = 57567
const DISK = 57568
const MEMORY = 57569
const CHECKSUM = 57570
const COMPRESSION = 57571
const DATA = 57572
const DIRECTORY = 57573
const DELAY_KEY_WRITE = 57574
const ENCRYPTION = 57575
const ENGINE = 57576
const MAX_ROWS = 57577
const MIN_ROWS = 57578
const PACK_KEYS = 57579
const ROW_FORMAT = 57580
const STATS_AUTO_RECALC = 57581
const STATS_PERSISTENT = 57582
const STATS_SAMPLE_PAGES = 57583
const DYNAMIC = 57584
const COMPRESSED = 57585
const REDUNDANT = 57586
const COMPACT = 57587
const FIXED = 57588
const COLUMN_FORMAT = 57589
const AUTO_RANDOM = 57590
const RESTRICT = 57591
const CASCADE = 57592
const ACTION = 57593
const PARTIAL = 57594
const SIMPLE = 57595
const CHECK = 57596
const ENFORCED = 57597
const RANGE = 57598
const LIST = 57599
const ALGORITHM = 57600
const LINEAR = 57601
const PARTITIONS = 57602
const SUBPARTITION = 57603
const SUBPARTITIONS = 57604
const TYPE = 57605
const ANY = 57606
const SOME = 57607
const EXTERNAL = 57608
const LOCALFILE = 57609
const URL = 57610
const PREPARE = 57611
const DEALLOCATE = 57612
const PROPERTIES = 57613
const PARSER = 57614
const VISIBLE = 57615
const INVISIBLE = 57616
const BTREE = 57617
const HASH = 57618
const RTREE = 57619
const BSI = 57620
const ZONEMAP = 57621
const LEADING = 57622
const BOTH = 57623
const TRAILING = 57624
const UNKNOWN = 57625
const EXPIRE = 57626
const ACCOUNT = 57627
const UNLOCK = 57628
const DAY = 57629
const NEVER = 57630
const PUMP = 57631
const SECOND = 57632
const ASCII = 57633
const COALESCE = 57634
const COLLATION = 57635
const HOUR = 57636
const MICROSECOND = 57637
const MINUTE = 57638
const MONTH = 57639
const QUARTER = 57640
const REPEAT = 57641
const REVERSE = 57642
const ROW_COUNT = 57643
const WEEK = 57644
const REVOKE = 57645
const FUNCTION = 57646
const PRIVILEGES = 57647
const TABLESPACE = 57648
const EXECUTE = 57649
const SUPER = 57650
const GRANT = 57651
const OPTION = 57652
const REFERENCES = 57653
const REPLICATION = 57654
const SLAVE = 57655
const CLIENT = 57656
const USAGE = 57657
const RELOAD = 57658
const FILE = 57659
const TEMPORARY = 57660
const ROUTINE = 57661
const EVENT = 57662
const SHUTDOWN = 57663
const NULLX = 57664
const AUTO_INCREMENT = 57665
const APPROXNUM = 57666
const SIGNED = 57667
const UNSIGNED = 57668
const ZEROFILL = 57669
const ENGINES = 57670
const ADMIN_NAME = 57671
const RANDOM = 57672
const SUSPEND = 57673
const ATTRIBUTE = 57674
const HISTORY = 57675
const REUSE = 57676
const CURRENT = 57677
const OPTIONAL = 57678
const FAILED_LOGIN_ATTEMPTS = 57679
const PASSWORD_LOCK_TIME = 57680
const UNBOUNDED = 57681
const SECONDARY = 57682
const USER = 57683
const IDENTIFIED = 57684
const CIPHER = 57685
const ISSUER = 57686
const X509 = 57687
const SUBJECT = 57688
const SAN = 57689
const REQUIRE = 57690
const SSL = 57691
const NONE = 57692
const PASSWORD = 57693
const MAX_QUERIES_PER_HOUR = 57694
const MAX_UPDATES_PER_HOUR = 57695
const MAX_CONNECTIONS_PER_HOUR = 57696
const MAX_USER_CONNECTIONS = 57697
const FORMAT = 57698
const VERBOSE = 57699
const CONNECTION = 57700
const TRIGGERS = 57701
const PROFILES = 57702
const LOAD = 57703
const INFILE = 57704
const TERMINATED = 57705
const OPTIONALLY = 57706
const ENCLOSED = 57707
const ESCAPED = 57708
const STARTING = 57709
const LINES = 57710
const ROWS = 57711
const IMPORT = 57712
const DATABASES = 57713
const TABLES = 57714
const EXTENDED = 57715
const FULL = 57716
const PROCESSLIST = 57717
const FIELDS = 57718
const COLUMNS = 57719
const OPEN = 57720
const ERRORS = 57721
const WARNINGS = 57722
const INDEXES = 57723
const SCHEMAS = 57724
const NAMES = 57725
const GLOBAL = 57726
const SESSION = 57727
const ISOLATION = 57728
const LEVEL = 57729
const READ = 57730
const WRITE = 57731
const ONLY = 57732
const REPEATABLE = 57733
const COMMITTED = 57734
const UNCOMMITTED = 57735
const SERIALIZABLE = 57736
const LOCAL = 57737
const EVENTS = 57738
const PLUGINS = 57739
const CURRENT_TIMESTAMP = 57740
const DATABASE = 57741
const CURRENT_TIME = 57742
const LOCALTIME = 57743
const LOCALTIMESTAMP = 57744
const UTC_DATE = 57745
const UTC_TIME = 57746
const UTC_TIMESTAMP = 57747
const REPLACE = 57748
const CONVERT = 57749
const SEPARATOR = 57750
const CURRENT_DATE = 57751
const CURRENT_USER = 57752
const CURRENT_ROLE = 57753
const SECOND_MICROSECOND = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const HOUR_MICROSECOND = 57757
const HOUR_SECOND = 57758
const HOUR_MINUTE = 57759
const DAY_MICROSECOND = 57760
const DAY_SECOND = 57761
const DAY_MINUTE = 57762
const DAY_HOUR = 57763
const YEAR_MONTH = 57764
const SQL_TSI_HOUR = 57765
const SQL_TSI_DAY = 57766
const SQL_TSI_WEEK = 57767
const SQL_TSI_MONTH = 57768
const SQL_TSI_QUARTER = 57769
const SQL_TSI_YEAR = 57770
const SQL_TSI_SECOND = 57771
const SQL_TSI_MINUTE = 57772
const RECURSIVE = 57773
const CONFIG = 57774
const DRAINER = 57775
const MATCH = 57776
const AGAINST = 57777
const BOOLEAN = 57778
const LANGUAGE = 57779
const WITH = 57780
const QUERY = 57781
const EXPANSION = 57782
const ADDDATE = 57783
const BIT_AND = 57784
const BIT_OR = 57785
const BIT_XOR = 57786
const CAST = 57787
const COUNT = 57788
const APPROX_COUNT_DISTINCT = 57789
const APPROX_PERCENTILE = 57790
const CURDATE = 57791
const CURTIME = 57792
const DATE_ADD = 57793
const DATE_SUB = 57794
const EXTRACT = 57795
const GROUP_CONCAT = 57796
const MAX = 57797
const MID = 57798
const MIN = 57799
const NOW = 57800
const POSITION = 57801
const SESSION_USER = 57802
const STD = 57803
const STDDEV = 57804
const STDDEV_POP = 57805
const STDDEV_SAMP = 57806
const SUBDATE = 57807
const SUBSTR = 57808
const SUBSTRING = 57809
const SUM = 57810
const SYSDATE = 57811
const SYSTEM_USER = 57812
const TRANSLATE = 57813
const TRIM = 57814
const VARIANCE = 57815
const VAR_POP = 57816
const VAR_SAMP = 57817
const AVG = 57818
const JSON_EXTRACT = 57819
const UNNEST = 57820
const ROW = 57821
const OUTFILE = 57822
const HEADER = 57823
const MAX_FILE_SIZE = 57824
const FORCE_QUOTE = 57825
const UNUSED = 57826
const BINDINGS = 57827

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7661

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	21, 473,
	-2, 454,
	-1, 74,
	210, 644,
	-2, 686,
	-1, 91,
	42, 322,
	210, 322,
	237, 329,
	238, 329,
	398, 322,
	-2, 350,
	-1, 387,
	21, 474,
	-2, 437,
	-1, 428,
	393, 350,
	394, 350,
	-2, 323,
	-1, 471,
	103, 1376,
	114, 1376,
	133, 1376,
	-2, 1184,
	-1, 501,
	21, 474,
	-2, 437,
	-1, 688,
	67, 1533,
	-2, 1541,
	-1, 696,
	67, 1534,
	-2, 1549,
	-1, 698,
	67, 1530,
	-2, 1551,
	-1, 699,
	67, 1531,
	-2, 1552,
	-1, 704,
	67, 1532,
	-2, 1558,
	-1, 705,
	67, 1535,
	-2, 1559,
	-1, 706,
	67, 1536,
	-2, 1560,
	-1, 707,
	67, 943,
	-2, 1561,
	-1, 708,
	67, 944,
	-2, 1562,
	-1, 709,
	67, 945,
	-2, 1563,
	-1, 711,
	67, 1537,
	-2, 1565,
	-1, 712,
	67, 964,
	-2, 1566,
	-1, 713,
	67, 963,
	-2, 1567,
	-1, 716,
	67, 1538,
	-2, 1570,
	-1, 717,
	67, 1539,
	-2, 1571,
	-1, 723,
	67, 1026,
	-2, 1376,
	-1, 724,
	67, 1035,
	-2, 1401,
	-1, 725,
	67, 1039,
	-2, 1440,
	-1, 726,
	67, 1047,
	-2, 1493,
	-1, 727,
	67, 1050,
	-2, 1502,
	-1, 728,
	67, 1052,
	-2, 1512,
	-1, 729,
	67, 1040,
	-2, 1517,
	-1, 730,
	67, 1048,
	-2, 1521,
	-1, 731,
	67, 1029,
	-2, 1522,
	-1, 899,
	1, 670,
	68, 670,
	503, 670,
	-2, 677,
	-1, 1047,
	21, 473,
	-2, 871,
	-1, 1095,
	133, 1194,
	-2, 1192,
	-1, 1097,
	133, 588,
	-2, 1189,
	-1, 1098,
	133, 589,
	-2, 1190,
	-1, 1315,
	1, 671,
	68, 671,
	503, 671,
	-2, 677,
	-1, 1405,
	67, 1095,
	-2, 1519,
	-1, 1406,
	67, 1096,
	-2, 1520,
	-1, 1580,
	65, 392,
	134, 392,
	-2, 777,
	-1, 1917,
	87, 677,
	129, 677,
	166, 677,
	169, 677,
	-2, 725,
	-1, 1919,
	271, 839,
	-2, 819,
	-1, 1949,
	65, 392,
	134, 392,
	-2, 778,
	-1, 2029,
	87, 677,
	129, 677,
	166, 677,
	169, 677,
	-2, 726,
	-1, 2057,
	271, 839,
	-2, 820,
	-1, 2470,
	68, 698,
	134, 698,
	-2, 677,
	-1, 2474,
	68, 698,
	134, 698,
	-2, 677,
	-1, 2488,
	68, 702,
	134, 702,
	-2, 677,
	-1, 2493,
	68, 703,
	134, 703,
	-2, 677,
}

const yyPrivate = 57344

const yyLast = 23047

var yyAct = [...]int{
	879, 1408, 2476, 2482, 2474, 2473, 2451, 867, 733, 2319,
	2095, 2440, 735, 2400, 2069, 754, 1365, 2384, 2358, 2287,
	2291, 2385, 2267, 2016, 2025, 1066, 1299, 2093, 975, 2094,
	108, 1911, 2275, 863, 111, 331, 337, 610, 337, 773,
	1361, 2122, 656, 335, 24, 388, 1972, 2014, 2078, 2111,
	904, 1583, 469, 870, 1942, 2077, 341, 1729, 940, 1085,
	1965, 766, 69, 1733, 2058, 1556, 687, 1983, 1975, 598,
	1987, 1598, 933, 962, 908, 587, 1360, 416, 1738, 1923,
	1811, 1734, 1275, 1077, 1819, 1786, 347, 1665, 107, 602,
	1801, 1322, 1748, 1727, 323, 1409, 69, 1744, 496, 470,
	1271, 1092, 1095, 1086, 1087, 875, 1626, 108, 1078, 1493,
	68, 1479, 955, 734, 936, 1270, 744, 1597, 934, 474,
	1347, 334, 15, 3, 1558, 2033, 1553, 892, 477, 32,
	332, 6, 333, 5, 1316, 1321, 884, 866, 1272, 861,
	1422, 679, 736, 959, 431, 472, 1305, 914, 24, 1308,
	1407, 915, 916, 1410, 927, 978, 1286, 926, 324, 1282,
	852, 511, 476, 32, 981, 498, 69, 1363, 327, 1067,
	888, 1388, 860, 891, 461, 625, 648, 569, 922, 415,
	635, 349, 350, 12, 385, 2018, 7, 4, 2366, 387,
	1289, 104, 1279, 2129, 2021, 1910, 880, 1080, 386, 2347,
	611, 530, 2086, 99, 678, 103, 344, 1527, 1276, 102,
	336, 475, 103, 103, 29, 93, 75, 103, 637, 29,
	93, 75, 2337, 585, 1535, 103, 15, 564, 495, 1287,
	538, 405, 540, 32, 2373, 6, 322, 5, 2371, 103,
	622, 413, 623, 462, 1544, 817, 943, 944, 339, 1691,
	607, 1555, 103, 2220, 29, 93, 75, 616, 617, 441,
	541, 814, 100, 2388, 2389, 482, 481, 483, 638, 100,
	100, 918, 869, 562, 100, 837, 557, 807, 2120, 806,
	808, 809, 816, 810, 811, 853, 424, 857, 614, 2362,
	2363, 613, 616, 617, 1720, 480, 100, 1721, 1554, 1722,
	545, 2223, 546, 2123, 2124, 2125, 2126, 2132, 1912, 100,
	871, 856, 514, 1522, 505, 2290, 1905, 563, 956, 948,
	1931, 1283, 1938, 534, 952, 504, 1749, 445, 2191, 1759,
	548, 1757, 1306, 2108, 2075, 503, 1712, 848, 1710, 337,
	559, 108, 485, 2346, 536, 1971, 1970, 560, 561, 1532,
	533, 407, 1753, 2091, 2194, 2398, 539, 542, 478, 2088,
	2185, 404, 403, 380, 338, 2467, 381, 2483, 500, 502,
	2375, 346, 2407, 2370, 2321, 1397, 1400, 1401, 858, 535,
	1754, 1755, 398, 446, 2414, 2387, 1398, 2178, 2289, 2147,
	69, 69, 476, 543, 2146, 1756, 389, 855, 2344, 521,
	2461, 514, 2317, 2318, 74, 2321, 101, 2276, 2277, 2278,
	2280, 2279, 2349, 2350, 479, 416, 383, 382, 605, 1569,
	1570, 1571, 1572, 2327, 91, 2173, 401, 2377, 2378, 1567,
	566, 525, 644, 643, 609, 608, 2478, 537, 523, 1288,
	2484, 475, 442, 501, 1751, 396, 629, 624, 615, 544,
	601, 574, 2452, 555, 556, 2490, 1561, 32, 32, 2135,
	1666, 612, 586, 497, 470, 470, 470, 588, 345, 660,
	660, 2218, 484, 589, 590, 636, 592, 530, 402, 516,
	515, 1528, 1375, 1280, 1575, 886, 337, 682, 682, 2443,
	591, 1742, 854, 1717, 1715, 593, 473, 507, 508, 340,
	819, 397, 658, 658, 1629, 1631, 1632, 547, 595, 442,
	665, 1619, 662, 410, 411, 412, 619, 620, 835, 946,
	2169, 444, 1277, 1372, 443, 522, 1967, 1966, 1277, 1277,
	660, 641, 660, 504, 947, 667, 1374, 1373, 820, 323,
	815, 1371, 2252, 868, 945, 830, 831, 639, 640, 519,
	448, 2141, 1769, 449, 2496, 529, 2477, 2017, 69, 406,
	616, 617, 844, 2426, 616, 617, 2288, 1517, 516, 515,
	1635, 69, 530, 1511, 2376, 1918, 1356, 2348, 1292, 1527,
	69, 509, 681, 681, 1685, 626, 1357, 626, 444, 571,
	660, 443, 1399, 899, 1491, 2449, 387, 416, 1750, 573,
	905, 660, 2192, 2444, 873, 1576, 606, 1760, 895, 1384,
	1713, 630, 1743, 957, 1739, 1742, 1276, 1752, 2489, 872,
	1635, 1582, 1290, 923, 923, 1278, 928, 1298, 2174, 2175,
	1267, 928, 865, 834, 596, 660, 108, 2087, 32, 642,
	843, 833, 876, 654, 655, 921, 470, 32, 660, 840,
	76, 839, 633, 634, 1581, 949, 597, 76, 76, 1536,
	951, 887, 76, 846, 877, 969, 2092, 862, 882, 900,
	76, 885, 660, 849, 974, 108, 108, 894, 826, 821,
	1357, 322, 990, 666, 76, 670, 671, 672, 673, 674,
	675, 676, 812, 979, 919, 920, 677, 76, 912, 913,
	925, 565, 842, 822, 977, 841, 838, 651, 652, 653,
	859, 980, 618, 864, 2495, 621, 524, 910, 1560, 473,
	1681, 1630, 645, 1680, 2486, 2441, 2442, 893, 909, 2468,
	550, 953, 551, 976, 976, 452, 1743, 2463, 906, 2171,
	1049, 1736, 909, 2170, 877, 1737, 1740, 2455, 958, 881,
	877, 877, 874, 626, 2404, 2454, 911, 1952, 2402, 973,
	553, 2253, 2255, 2256, 2257, 2254, 1674, 917, 1297, 1564,
	1565, 1770, 893, 1582, 1718, 901, 902, 907, 1628, 994,
	1635, 2395, 451, 1563, 2390, 2379, 454, 453, 929, 1635,
	2487, 987, 988, 989, 986, 1285, 1310, 1741, 966, 967,
	1047, 1584, 924, 2464, 930, 2367, 2342, 932, 931, 862,
	2341, 2340, 1937, 1285, 984, 2339, 2329, 1084, 1084, 1089,
	954, 1285, 390, 549, 2403, 851, 2214, 2212, 963, 964,
	965, 2210, 1530, 2208, 1048, 1673, 987, 988, 989, 986,
	1097, 971, 1056, 970, 972, 2201, 1357, 2196, 905, 475,
	2196, 1384, 660, 1050, 1051, 1052, 1053, 554, 1098, 2195,
	1783, 1058, 1054, 2105, 2103, 1874, 850, 1012, 488, 493,
	494, 2368, 2196, 1860, 1798, 1032, 2196, 2196, 476, 552,
	1296, 2196, 2330, 1796, 1529, 1020, 1643, 108, 108, 69,
	1309, 1071, 2215, 2213, 527, 1642, 1525, 2209, 1268, 2209,
	1521, 108, 1323, 1516, 987, 988, 989, 986, 928, 1340,
	1519, 1326, 108, 1294, 1513, 1325, 1293, 2061, 331, 1266,
	1284, 1083, 993, 827, 649, 2196, 928, 475, 1774, 2106,
	2104, 1635, 979, 982, 823, 650, 528, 567, 1707, 1635,
	1799, 2071, 664, 603, 530, 1302, 1304, 647, 968, 1797,
	980, 1880, 1635, 517, 2064, 499, 32, 1709, 1274, 1319,
	2059, 1635, 1326, 2438, 528, 2073, 2074, 2427, 1557, 660,
	1331, 2060, 2331, 2226, 1366, 1366, 1520, 1074, 1784, 1443,
	1514, 1326, 1292, 682, 1716, 108, 1285, 1332, 1333, 828,
	1265, 1096, 1393, 627, 1395, 1518, 1264, 1377, 1090, 506,
	1091, 1494, 1382, 1369, 1334, 1330, 2065, 1551, 1708, 1273,
	890, 1269, 1418, 1419, 450, 1412, 1411, 1367, 1035, 1036,
	1037, 1038, 1039, 1032, 1494, 1317, 1671, 646, 408, 1291,
	1639, 989, 986, 490, 491, 492, 986, 2181, 2180, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1927, 1368, 1311, 1488, 1489, 1385, 1387, 1922, 877,
	877, 877, 1084, 1402, 1336, 1329, 1338, 2460, 1687, 2164,
	1504, 1335, 2472, 917, 1339, 1071, 1337, 1342, 681, 1506,
	1341, 1343, 1389, 1390, 1391, 1392, 987, 988, 989, 986,
	2457, 628, 2072, 1420, 1735, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1032, 1421, 1415, 1417, 2424, 1378, 1379, 1380,
	2459, 1885, 455, 2204, 2205, 1486, 2263, 1457, 1439, 2067,
	2408, 1436, 447, 2305, 1386, 1438, 1435, 1437, 1441, 1442,
	1484, 1485, 1483, 1440, 2202, 2203, 2261, 1859, 1856, 1857,
	1858, 2066, 2068, 1890, 1745, 1889, 1888, 1886, 2302, 1509,
	2301, 2269, 2247, 1495, 2262, 1498, 2246, 2245, 1487, 1481,
	1413, 1414, 2242, 1416, 2236, 2259, 1500, 387, 2233, 1452,
	1453, 1454, 1455, 1456, 2260, 2232, 1462, 1463, 1464, 1465,
	1466, 1031, 1030, 1040, 1041, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1032, 987, 988, 989, 986, 2130, 2116, 1496,
	1683, 2115, 1882, 2258, 2249, 2075, 1887, 1876, 1300, 1301,
	1497, 1499, 2114, 1501, 2110, 2109, 1934, 2062, 1758, 1703,
	1505, 987, 988, 989, 986, 824, 1507, 2397, 2089, 1031,
	1030, 1040, 1041, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1032, 1869, 2248, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1446, 1447, 1448, 1449, 1450, 1451,
	1444, 1445, 987, 988, 989, 986, 2090, 1523, 896, 897,
	898, 1935, 2381, 380, 2268, 1667, 381, 660, 2026, 660,
	2364, 660, 2458, 2009, 2325, 1676, 504, 997, 998, 999,
	1000, 1001, 1002, 1003, 995, 1542, 1537, 1031, 1030, 1040,
	1041, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1032, 1936,
	660, 2324, 1533, 2312, 2300, 2250, 987, 988, 989, 986,
	2243, 1580, 2239, 1891, 1892, 2238, 2237, 1586, 2008, 1031,
	1030, 1040, 1041, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1032, 1594, 2193, 2488, 2166, 504, 108, 108, 108, 108,
	987, 988, 989, 986, 1652, 1599, 2131, 504, 108, 1614,
	987, 988, 989, 986, 2127, 2112, 1541, 1599, 24, 2024,
	1574, 504, 1550, 2022, 1961, 1960, 660, 2382, 1945, 1578,
	1933, 1618, 2465, 1932, 108, 108, 69, 1929, 877, 1907,
	1898, 1747, 1545, 1546, 885, 1714, 1534, 1366, 2294, 987,
	988, 989, 986, 1615, 1622, 1539, 1589, 1651, 1526, 1590,
	1524, 781, 780, 1762, 862, 1587, 1531, 1508, 1640, 1588,
	987, 988, 989, 986, 1295, 1028, 1591, 1027, 1592, 987,
	988, 989, 986, 1026, 825, 1547, 2216, 1566, 2353, 889,
	2352, 1317, 1624, 1625, 2332, 2299, 15, 893, 1585, 2298,
	1573, 2297, 2296, 32, 2211, 6, 1579, 5, 987, 988,
	989, 986, 2207, 2206, 1600, 1601, 1602, 1603, 1596, 1595,
	2012, 2010, 1613, 2007, 1612, 1999, 1611, 1964, 1946, 391,
	392, 393, 394, 1917, 1660, 1901, 1800, 1593, 1775, 387,
	1623, 1620, 390, 1682, 1663, 1664, 1040, 1041, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1032, 1636, 2190, 1679, 1637,
	1638, 2117, 1678, 1677, 1675, 1084, 1659, 1695, 1084, 103,
	1633, 1698, 93, 75, 1644, 1641, 1634, 1616, 660, 987,
	988, 989, 986, 987, 988, 989, 986, 1503, 1701, 1502,
	103, 669, 1995, 668, 1047, 2485, 2437, 2431, 1646, 1647,
	1648, 1649, 1650, 504, 1654, 2415, 1702, 1692, 1655, 1656,
	1657, 1658, 2412, 1732, 987, 988, 989, 986, 2410, 108,
	1013, 2304, 2285, 2273, 2270, 69, 100, 2265, 504, 2227,
	1974, 2188, 108, 1323, 2187, 1773, 876, 1668, 1732, 2186,
	1672, 2183, 1697, 475, 2177, 1661, 2162, 100, 1662, 1694,
	1481, 599, 1670, 1684, 1984, 1976, 1988, 1991, 877, 1994,
	1981, 1980, 2184, 1993, 877, 1706, 1686, 1711, 1690, 1693,
	1688, 1696, 1958, 1699, 1700, 1328, 1897, 1763, 1705, 1804,
	1940, 987, 988, 989, 986, 987, 988, 989, 986, 1928,
	1764, 1765, 1766, 1482, 100, 1577, 1313, 2435, 987, 988,
	989, 986, 1552, 1512, 1771, 1549, 1879, 1376, 1370, 1324,
	1073, 1072, 1070, 1776, 1069, 1068, 1777, 1778, 1065, 1064,
	1062, 1767, 1782, 1061, 1772, 660, 1060, 1768, 987, 988,
	989, 986, 660, 1779, 1795, 1059, 1057, 1794, 1791, 1781,
	1029, 1025, 1896, 1780, 1031, 1030, 1040, 1041, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1032, 1024, 1023, 658, 1022,
	1021, 1019, 1018, 1017, 1016, 658, 108, 1893, 108, 1804,
	1873, 1015, 1014, 1011, 1895, 1010, 1009, 108, 2420, 1872,
	1008, 1806, 1007, 1006, 1878, 1005, 1921, 1871, 1004, 847,
	818, 1861, 987, 988, 989, 986, 568, 532, 1867, 1868,
	1875, 987, 988, 989, 986, 1787, 1788, 520, 1884, 987,
	988, 989, 986, 2418, 2386, 660, 660, 1881, 1790, 1915,
	108, 1949, 1894, 1568, 1906, 1902, 1908, 1899, 1383, 1076,
	1877, 531, 1793, 1608, 504, 1916, 1870, 69, 1609, 1904,
	1606, 1903, 1792, 1605, 1599, 1607, 1604, 2471, 658, 1943,
	1723, 1724, 1318, 1366, 1510, 1963, 2053, 1941, 987, 988,
	989, 986, 1515, 1919, 1925, 1920, 1924, 1540, 1924, 1926,
	1610, 1538, 1353, 1354, 570, 1951, 1866, 1726, 1954, 1030,
	1040, 1041, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1032,
	1318, 1865, 1948, 1300, 1301, 1947, 1950, 1307, 987, 988,
	989, 986, 526, 2133, 1953, 1955, 1725, 1359, 1956, 903,
	1412, 1411, 2355, 987, 988, 989, 986, 2475, 632, 1978,
	1979, 1864, 582, 583, 1968, 580, 581, 2035, 578, 579,
	877, 1863, 631, 1957, 1982, 54, 1959, 1986, 1862, 558,
	1977, 572, 1809, 987, 988, 989, 986, 1263, 1962, 576,
	577, 1084, 600, 987, 988, 989, 986, 1985, 2432, 31,
	987, 988, 989, 986, 987, 988, 989, 986, 319, 504,
	2030, 30, 1808, 2079, 2081, 2309, 2079, 2079, 1989, 1732,
	1992, 2307, 2000, 2230, 390, 2002, 2228, 2004, 2225, 1807,
	2224, 504, 320, 1997, 987, 988, 989, 986, 2222, 2023,
	1914, 1913, 2005, 2006, 321, 2001, 2019, 2003, 1803, 905,
	2013, 987, 988, 989, 986, 1996, 1490, 1349, 1352, 1353,
	1354, 1350, 2080, 1351, 1355, 575, 2055, 1802, 1998, 1627,
	909, 2082, 2083, 2076, 2422, 2421, 2027, 1704, 987, 988,
	989, 986, 2101, 391, 392, 393, 394, 1645, 2422, 518,
	2098, 1951, 2421, 2084, 2179, 1900, 390, 1358, 604, 2102,
	2039, 37, 1, 1344, 1281, 1930, 1761, 1746, 594, 409,
	1458, 2043, 2099, 2100, 2085, 584, 832, 487, 513, 829,
	512, 2113, 2137, 510, 1492, 1423, 1349, 1352, 1353, 1354,
	1350, 2032, 1351, 1355, 767, 2034, 2036, 2038, 1079, 2040,
	2041, 2042, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2266,
	2354, 2399, 2303, 2357, 845, 753, 660, 2217, 1719, 2119,
	2165, 2219, 2121, 1543, 2015, 1689, 108, 420, 778, 771,
	1063, 1075, 417, 813, 489, 2081, 2140, 770, 2054, 1939,
	1562, 395, 486, 421, 2107, 1909, 1969, 2138, 2139, 1943,
	2142, 2143, 2144, 2145, 1990, 2118, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2167, 2076, 2163, 2052, 1973, 2481, 2470, 2450, 2430, 2320,
	2466, 2369, 2413, 2189, 2182, 2406, 2316, 2134, 351, 2231,
	2031, 950, 2197, 442, 459, 2200, 2199, 1031, 1030, 1040,
	1041, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1032, 2286,
	352, 2264, 1327, 2221, 2345, 2272, 399, 1312, 2047, 400,
	1315, 1314, 1403, 996, 1480, 2037, 1055, 2229, 685, 1669,
	743, 737, 1559, 2070, 504, 1366, 1621, 504, 504, 504,
	36, 2244, 2198, 35, 34, 69, 985, 504, 1093, 768,
	110, 1094, 2313, 2128, 2359, 752, 2234, 2235, 751, 750,
	749, 2274, 2240, 2241, 2282, 2283, 2284, 748, 2281, 2271,
	1348, 1346, 444, 1345, 2293, 443, 2292, 938, 2314, 937,
	983, 2383, 2335, 2336, 2020, 660, 660, 2176, 2295, 2251,
	2172, 2168, 2326, 2029, 2028, 2056, 2057, 2308, 2063, 2310,
	2311, 2306, 1818, 2315, 1814, 1816, 1817, 1815, 429, 1883,
	1810, 1730, 1731, 1728, 1789, 418, 108, 1785, 658, 658,
	1081, 1088, 883, 1548, 504, 939, 105, 2322, 2323, 935,
	2097, 384, 23, 11, 10, 836, 504, 9, 14, 22,
	21, 434, 20, 19, 2328, 62, 61, 2334, 60, 59,
	18, 2338, 8, 58, 57, 2361, 56, 17, 16, 51,
	52, 47, 46, 2343, 45, 419, 44, 43, 42, 41,
	2360, 2351, 50, 49, 976, 48, 40, 39, 38, 73,
	72, 71, 70, 25, 2365, 26, 2433, 27, 28, 83,
	82, 2372, 2374, 84, 80, 78, 81, 79, 77, 33,
	13, 2, 0, 2380, 0, 0, 0, 0, 0, 0,
	2391, 2392, 2393, 2394, 0, 0, 2333, 0, 2401, 2405,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	2409, 0, 2411, 1031, 1030, 1040, 1041, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1032, 0, 0, 0, 0, 0,
	0, 432, 2416, 2419, 2361, 2429, 2417, 0, 0, 0,
	2423, 504, 2396, 504, 0, 2425, 0, 0, 2434, 2360,
	2436, 868, 2428, 868, 2439, 0, 0, 0, 0, 0,
	0, 0, 433, 438, 2445, 0, 0, 0, 504, 2401,
	2446, 0, 2453, 0, 426, 2456, 428, 441, 868, 0,
	2462, 425, 423, 422, 0, 427, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 2469, 0, 0, 0, 0, 0, 2480, 0, 0,
	2479, 0, 0, 0, 0, 0, 0, 2491, 0, 0,
	0, 2492, 2494, 2493, 0, 0, 2480, 0, 0, 0,
	1209, 1251, 0, 0, 1198, 430, 1156, 1211, 1129, 1145,
	1219, 1146, 1147, 1184, 1108, 1166, 235, 1143, 0, 0,
	0, 0, 0, 2448, 1201, 1100, 1132, 1133, 1102, 1139,
	1103, 1130, 1158, 180, 1128, 1169, 205, 1181, 1142, 1163,
	1217, 0, 0, 265, 219, 0, 0, 1161, 1203, 1164,
	1189, 1155, 1185, 1116, 1177, 1212, 1144, 0, 1182, 1213,
	0, 0, 0, 0, 896, 897, 898, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 1180, 1207, 1141,
	0, 165, 1210, 1162, 1183, 0, 0, 1101, 1178, 0,
	1106, 1109, 1218, 1205, 1136, 1137, 0, 0, 0, 0,
	0, 0, 0, 0, 1159, 1165, 1186, 1152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1134, 0, 1174,
	0, 0, 0, 1111, 1107, 0, 1157, 0, 0, 154,
	270, 285, 163, 261, 298, 168, 268, 159, 234, 257,
	0, 1250, 156, 283, 267, 216, 199, 200, 155, 0,
	252, 178, 191, 175, 232, 0, 282, 310, 174, 301,
	1110, 293, 158, 1245, 292, 231, 279, 284, 217, 211,
	157, 281, 215, 210, 203, 182, 0, 195, 243, 209,
	244, 196, 221, 220, 222, 1229, 1230, 1231, 1232, 1233,
	1241, 1242, 0, 1246, 1247, 1248, 1115, 0, 1135, 1187,
	0, 1099, 1196, 1204, 1154, 295, 1206, 1151, 1150, 1236,
	0, 1235, 269, 1237, 1238, 204, 1202, 1131, 1140, 311,
	1138, 255, 237, 1208, 1173, 1249, 253, 207, 280, 245,
	286, 271, 294, 249, 246, 150, 272, 177, 218, 160,
	161, 173, 179, 181, 183, 184, 227, 228, 240, 260,
	273, 274, 275, 176, 169, 254, 170, 193, 171, 151,
	262, 172, 152, 241, 278, 1234, 189, 250, 214, 153,
	213, 242, 277, 276, 302, 308, 309, 313, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 1243, 0, 1244, 307, 187, 148, 290, 0, 233,
	0, 1199, 1104, 1114, 1112, 1148, 1175, 1176, 229, 306,
	1191, 1195, 1192, 1220, 258, 0, 0, 0, 0, 0,
	198, 239, 1193, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1105, 0, 266, 288, 300, 317,
	1252, 1253, 1254, 1255, 0, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 291, 1149, 1122, 1160, 299, 1125, 1123, 1190,
	1124, 1179, 315, 223, 224, 225, 226, 190, 0, 167,
	318, 248, 1170, 1153, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1171, 1127, 312, 186, 192, 0, 194, 166, 238,
	188, 297, 201, 1197, 230, 197, 263, 202, 208, 251,
	296, 236, 256, 164, 287, 264, 212, 2011, 0, 1121,
	1126, 1120, 1167, 1168, 1214, 1215, 1216, 1188, 1113, 1200,
	1117, 1119, 1118, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1194, 775, 0, 1172, 149, 0, 206, 1221,
	247, 185, 0, 235, 1031, 1030, 1040, 1041, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1032, 745, 0, 0, 0,
	180, 0, 0, 205, 0, 0, 0, 769, 0, 0,
	265, 219, 0, 0, 0, 0, 790, 796, 0, 0,
	1239, 1240, 303, 304, 305, 289, 0, 0, 738, 0,
	0, 686, 781, 780, 755, 764, 0, 0, 162, 756,
	0, 763, 757, 761, 760, 758, 759, 1043, 723, 1046,
	0, 0, 0, 0, 0, 683, 742, 0, 746, 0,
	0, 0, 0, 0, 1044, 1045, 1042, 0, 1031, 1030,
	1040, 1041, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1032,
	739, 740, 0, 0, 0, 0, 776, 0, 741, 0,
	0, 777, 0, 765, 0, 0, 154, 270, 285, 163,
	261, 298, 168, 268, 159, 234, 257, 0, 0, 156,
	283, 267, 216, 199, 200, 155, 0, 252, 178, 191,
	175, 232, 762, 726, 730, 174, 728, 774, 293, 158,
	0, 292, 231, 279, 284, 217, 211, 157, 281, 215,
	210, 203, 182, 801, 195, 243, 209, 244, 196, 221,
	220, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 772,
	0, 0, 295, 0, 0, 789, 0, 0, 0, 269,
	0, 0, 204, 0, 0, 0, 731, 0, 255, 237,
	799, 684, 0, 253, 207, 280, 245, 286, 271, 294,
	249, 246, 150, 272, 177, 218, 160, 161, 173, 179,
	181, 183, 184, 227, 228, 240, 260, 273, 274, 275,
	176, 169, 254, 170, 193, 171, 151, 262, 172, 152,
	241, 278, 0, 189, 250, 214, 153, 213, 242, 277,
	276, 302, 308, 309, 313, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 1460, 1459,
	1461, 307, 187, 148, 290, 787, 233, 0, 798, 783,
	784, 785, 788, 791, 792, 725, 729, 793, 795, 797,
	800, 258, 0, 0, 0, 0, 0, 198, 239, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 288, 300, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 732,
	223, 224, 225, 226, 724, 0, 167, 318, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 186, 192, 0, 194, 166, 238, 188, 297, 201,
	0, 230, 197, 263, 202, 208, 251, 296, 236, 256,
	164, 287, 264, 212, 0, 0, 807, 786, 806, 808,
	809, 805, 810, 811, 794, 747, 0, 803, 802, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 206, 0, 247, 185, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 127, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 779, 782, 0, 0, 303,
	304, 305, 289, 103, 0, 775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 180, 0, 0, 205, 0, 0, 0, 769,
	0, 0, 265, 219, 0, 0, 0, 0, 790, 796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 686, 781, 780, 755, 764, 0, 0,
	162, 756, 0, 763, 757, 761, 760, 758, 759, 0,
	723, 0, 0, 0, 0, 0, 0, 683, 742, 0,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 739, 740, 0, 0, 0, 0, 776, 0,
	741, 0, 0, 777, 0, 765, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 762, 726, 730, 174, 728, 774,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 801, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 772, 0, 0, 295, 0, 0, 789, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 731, 0,
	255, 237, 799, 684, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 787, 233, 0,
	798, 783, 784, 785, 788, 791, 792, 725, 729, 793,
	795, 797, 800, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 732, 223, 224, 225, 226, 724, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 807, 786,
	806, 808, 809, 805, 810, 811, 794, 747, 0, 803,
	802, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 76, 247,
	185, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 127, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 779, 782, 775,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 180, 878, 0, 205,
	0, 0, 0, 769, 0, 0, 265, 219, 0, 0,
	0, 0, 790, 796, 0, 0, 0, 0, 0, 0,
	0, 960, 0, 0, 738, 0, 0, 686, 781, 780,
	755, 764, 0, 0, 162, 756, 0, 763, 757, 761,
	760, 758, 759, 0, 723, 0, 0, 0, 0, 0,
	0, 683, 742, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 739, 740, 0, 0,
	0, 0, 776, 0, 741, 0, 0, 961, 0, 765,
	0, 0, 154, 270, 285, 163, 261, 298, 168, 268,
	159, 234, 257, 0, 0, 156, 283, 267, 216, 199,
	200, 155, 0, 252, 178, 191, 175, 232, 762, 726,
	730, 174, 728, 774, 293, 158, 0, 292, 231, 279,
	284, 217, 211, 157, 281, 215, 210, 203, 182, 801,
	195, 243, 209, 244, 196, 221, 220, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 772, 0, 0, 295, 0,
	0, 789, 0, 0, 0, 269, 0, 0, 204, 0,
	0, 0, 731, 0, 255, 237, 799, 684, 0, 253,
	207, 280, 245, 286, 271, 294, 249, 246, 150, 272,
	177, 218, 160, 161, 173, 179, 181, 183, 184, 227,
	228, 240, 260, 273, 274, 275, 176, 169, 254, 170,
	193, 171, 151, 262, 172, 152, 241, 278, 0, 189,
	250, 214, 153, 213, 242, 277, 276, 302, 308, 309,
	313, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 307, 187, 148,
	290, 787, 233, 0, 798, 783, 784, 785, 788, 791,
	792, 725, 729, 793, 795, 797, 800, 258, 0, 0,
	0, 0, 0, 198, 239, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	288, 300, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 727, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 732, 223, 224, 225, 226,
	724, 0, 167, 318, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 186, 192, 0,
	194, 166, 238, 188, 297, 201, 0, 230, 197, 263,
	202, 208, 251, 296, 236, 256, 164, 287, 264, 212,
	0, 0, 807, 786, 806, 808, 809, 805, 810, 811,
	794, 747, 0, 803, 802, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 206, 0, 247, 185, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	127, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 779, 782, 775, 0, 303, 304, 305, 289, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	180, 2447, 0, 205, 0, 0, 0, 769, 0, 0,
	265, 219, 0, 0, 0, 0, 790, 796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 0,
	0, 686, 781, 780, 755, 764, 0, 0, 162, 756,
	0, 763, 757, 761, 760, 758, 759, 0, 723, 0,
	0, 0, 0, 0, 0, 683, 742, 0, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	739, 740, 0, 0, 0, 0, 776, 0, 741, 0,
	0, 777, 0, 765, 0, 0, 154, 270, 285, 163,
	261, 298, 168, 268, 159, 234, 257, 0, 0, 156,
	283, 267, 216, 199, 200, 155, 0, 252, 178, 191,
	175, 232, 762, 726, 730, 174, 728, 774, 293, 158,
	0, 292, 231, 279, 284, 217, 211, 157, 281, 215,
	210, 203, 182, 801, 195, 243, 209, 244, 196, 221,
	220, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 772,
	0, 0, 295, 0, 0, 789, 0, 0, 0, 269,
	0, 0, 204, 0, 0, 0, 731, 0, 255, 237,
	799, 684, 0, 253, 207, 280, 245, 286, 271, 294,
	249, 246, 150, 272, 177, 218, 160, 161, 173, 179,
	181, 183, 184, 227, 228, 240, 260, 273, 274, 275,
	176, 169, 254, 170, 193, 171, 151, 262, 172, 152,
	241, 278, 0, 189, 250, 214, 153, 213, 242, 277,
	276, 302, 308, 309, 313, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 307, 187, 148, 290, 787, 233, 0, 798, 783,
	784, 785, 788, 791, 792, 725, 729, 793, 795, 797,
	800, 258, 0, 0, 0, 0, 0, 198, 239, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 288, 300, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 732,
	223, 224, 225, 226, 724, 0, 167, 318, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 186, 192, 0, 194, 166, 238, 188, 297, 201,
	0, 230, 197, 263, 202, 208, 251, 296, 236, 256,
	164, 287, 264, 212, 0, 0, 807, 786, 806, 808,
	809, 805, 810, 811, 794, 747, 0, 803, 802, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 206, 0, 247, 185, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 127, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 779, 782, 775, 0, 303,
	304, 305, 289, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 180, 878, 0, 205, 0, 0,
	0, 769, 0, 0, 265, 219, 0, 0, 0, 0,
	790, 796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 686, 781, 780, 755, 764,
	0, 0, 162, 756, 0, 763, 757, 761, 760, 758,
	759, 0, 723, 0, 0, 0, 0, 0, 0, 683,
	742, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 739, 740, 0, 0, 0, 0,
	776, 0, 741, 0, 0, 777, 0, 765, 0, 0,
	154, 270, 285, 163, 261, 298, 168, 268, 159, 234,
	257, 0, 0, 156, 283, 267, 216, 199, 200, 155,
	0, 252, 178, 191, 175, 232, 762, 726, 730, 174,
	728, 774, 293, 158, 0, 292, 231, 279, 284, 217,
	211, 157, 281, 215, 210, 203, 182, 801, 195, 243,
	209, 244, 196, 221, 220, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 0, 0, 295, 0, 0, 789,
	0, 0, 0, 269, 0, 0, 204, 0, 0, 0,
	731, 0, 255, 237, 799, 684, 0, 253, 207, 280,
	245, 286, 271, 294, 249, 246, 150, 272, 177, 218,
	160, 161, 173, 179, 181, 183, 184, 227, 228, 240,
	260, 273, 274, 275, 176, 169, 254, 170, 193, 171,
	151, 262, 172, 152, 241, 278, 0, 189, 250, 214,
	153, 213, 242, 277, 276, 302, 308, 309, 313, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 307, 187, 148, 290, 787,
	233, 0, 798, 783, 784, 785, 788, 791, 792, 725,
	729, 793, 795, 797, 800, 258, 0, 0, 0, 0,
	0, 198, 239, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 288, 300,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 732, 223, 224, 225, 226, 724, 0,
	167, 318, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 186, 192, 0, 194, 166,
	238, 188, 297, 201, 0, 230, 197, 263, 202, 208,
	251, 296, 236, 256, 164, 287, 264, 212, 0, 0,
	807, 786, 806, 808, 809, 805, 810, 811, 794, 747,
	0, 803, 802, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 206,
	0, 247, 185, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 127, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 779,
	782, 0, 0, 303, 304, 305, 289, 775, 0, 0,
	1653, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 180, 0, 0, 205, 0, 0,
	0, 769, 0, 0, 265, 219, 0, 0, 0, 0,
	790, 796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 686, 781, 780, 755, 764,
	0, 0, 162, 756, 0, 763, 757, 761, 760, 758,
	759, 0, 723, 0, 0, 0, 0, 0, 0, 683,
	742, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 739, 740, 0, 0, 0, 0,
	776, 0, 741, 0, 0, 777, 0, 765, 0, 0,
	154, 270, 285, 163, 261, 298, 168, 268, 159, 234,
	257, 0, 0, 156, 283, 267, 216, 199, 200, 155,
	0, 252, 178, 191, 175, 232, 762, 726, 730, 174,
	728, 774, 293, 158, 0, 292, 231, 279, 284, 217,
	211, 157, 281, 215, 210, 203, 182, 801, 195, 243,
	209, 244, 196, 221, 220, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 0, 0, 295, 0, 0, 789,
	0, 0, 0, 269, 0, 0, 204, 0, 0, 0,
	731, 0, 255, 237, 799, 684, 0, 253, 207, 280,
	245, 286, 271, 294, 249, 246, 150, 272, 177, 218,
	160, 161, 173, 179, 181, 183, 184, 227, 228, 240,
	260, 273, 274, 275, 176, 169, 254, 170, 193, 171,
	151, 262, 172, 152, 241, 278, 0, 189, 250, 214,
	153, 213, 242, 277, 276, 302, 308, 309, 313, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 307, 187, 148, 290, 787,
	233, 0, 798, 783, 784, 785, 788, 791, 792, 725,
	729, 793, 795, 797, 800, 258, 0, 0, 0, 0,
	0, 198, 239, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 288, 300,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 732, 223, 224, 225, 226, 724, 0,
	167, 318, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 186, 192, 0, 194, 166,
	238, 188, 297, 201, 0, 230, 197, 263, 202, 208,
	251, 296, 236, 256, 164, 287, 264, 212, 0, 0,
	807, 786, 806, 808, 809, 805, 810, 811, 794, 747,
	0, 803, 802, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 206,
	0, 247, 185, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 127, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 779,
	782, 775, 0, 303, 304, 305, 289, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 180, 0,
	0, 205, 0, 0, 0, 769, 0, 0, 265, 219,
	0, 0, 0, 0, 790, 796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 738, 0, 0, 686,
	781, 780, 755, 764, 0, 0, 162, 756, 0, 763,
	757, 761, 760, 758, 759, 0, 723, 0, 0, 0,
	0, 0, 0, 683, 742, 0, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 740,
	680, 0, 0, 0, 776, 0, 741, 0, 0, 777,
	0, 765, 0, 0, 154, 270, 285, 163, 261, 298,
	168, 268, 159, 234, 257, 0, 0, 156, 283, 267,
	216, 199, 200, 155, 0, 252, 178, 191, 175, 232,
	762, 726, 730, 174, 728, 774, 293, 158, 0, 292,
	231, 279, 284, 217, 211, 157, 281, 215, 210, 203,
	182, 801, 195, 243, 209, 244, 196, 221, 220, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 772, 0, 0,
	295, 0, 0, 789, 0, 0, 0, 269, 0, 0,
	204, 0, 0, 0, 731, 0, 255, 237, 799, 684,
	0, 253, 207, 280, 245, 286, 271, 294, 249, 246,
	150, 272, 177, 218, 160, 161, 173, 179, 181, 183,
	184, 227, 228, 240, 260, 273, 274, 275, 176, 169,
	254, 170, 193, 171, 151, 262, 172, 152, 241, 278,
	0, 189, 250, 214, 153, 213, 242, 277, 276, 302,
	308, 309, 313, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 307,
	187, 148, 290, 787, 233, 0, 798, 783, 784, 785,
	788, 791, 792, 725, 729, 793, 795, 797, 800, 258,
	0, 0, 0, 0, 0, 198, 239, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 288, 300, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 727, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 732, 223, 224,
	225, 226, 724, 0, 167, 318, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 186,
	192, 0, 194, 166, 238, 188, 297, 201, 0, 230,
	197, 263, 202, 208, 251, 296, 236, 256, 164, 287,
	264, 212, 0, 0, 807, 786, 806, 808, 809, 805,
	810, 811, 794, 747, 0, 803, 802, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 206, 0, 247, 185, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 127, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 779, 782, 775, 0, 303, 304, 305,
	289, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 180, 0, 0, 205, 0, 0, 0, 769,
	0, 0, 265, 219, 0, 0, 0, 0, 790, 796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 686, 781, 780, 755, 764, 0, 0,
	162, 756, 0, 763, 757, 761, 760, 758, 759, 0,
	723, 0, 0, 0, 0, 0, 0, 683, 742, 0,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 739, 740, 0, 0, 0, 0, 776, 0,
	741, 0, 0, 777, 0, 765, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 762, 726, 730, 174, 728, 774,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 801, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 772, 0, 0, 295, 0, 0, 789, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 731, 0,
	255, 237, 799, 684, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 787, 233, 0,
	798, 783, 784, 785, 788, 791, 792, 725, 729, 793,
	795, 797, 800, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 732, 223, 224, 225, 226, 724, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 807, 786,
	806, 808, 809, 805, 810, 811, 794, 747, 0, 803,
	802, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 127, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 779, 782, 775,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 1404, 0,
	0, 0, 745, 0, 0, 0, 180, 0, 0, 205,
	0, 0, 0, 769, 0, 0, 265, 219, 0, 0,
	0, 0, 790, 796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 0, 686, 781, 780,
	755, 764, 0, 0, 162, 756, 0, 763, 757, 761,
	760, 758, 759, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 742, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 739, 740, 0, 0,
	0, 0, 776, 0, 741, 0, 0, 777, 0, 765,
	0, 0, 154, 270, 285, 163, 261, 298, 168, 268,
	159, 234, 257, 0, 0, 156, 283, 267, 216, 199,
	200, 155, 0, 252, 178, 191, 175, 232, 762, 726,
	730, 174, 728, 774, 293, 158, 0, 292, 231, 279,
	284, 217, 211, 157, 281, 215, 210, 203, 182, 801,
	195, 243, 209, 244, 196, 221, 220, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 772, 0, 0, 295, 0,
	0, 789, 0, 0, 0, 269, 0, 0, 204, 0,
	0, 0, 731, 0, 255, 237, 799, 0, 0, 253,
	207, 280, 245, 286, 271, 294, 249, 246, 150, 272,
	177, 218, 160, 161, 173, 179, 181, 183, 184, 227,
	228, 240, 260, 273, 274, 275, 176, 169, 254, 170,
	193, 171, 151, 262, 172, 152, 241, 278, 0, 189,
	250, 214, 153, 213, 242, 277, 276, 302, 1405, 1406,
	313, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 307, 187, 148,
	290, 787, 233, 0, 798, 783, 784, 785, 788, 791,
	792, 725, 729, 793, 795, 797, 800, 258, 0, 0,
	0, 0, 0, 198, 239, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	288, 300, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 727, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 732, 223, 224, 225, 226,
	724, 0, 167, 318, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 186, 192, 0,
	194, 166, 238, 188, 297, 201, 0, 230, 197, 263,
	202, 208, 251, 296, 236, 256, 164, 287, 264, 212,
	0, 0, 807, 786, 806, 808, 809, 805, 810, 811,
	794, 747, 0, 803, 802, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 206, 0, 247, 185, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	127, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 779, 782, 775, 0, 303, 304, 305, 289, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	180, 0, 0, 205, 0, 0, 0, 769, 0, 0,
	265, 219, 0, 0, 0, 0, 790, 796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 781, 780, 755, 764, 0, 0, 162, 756,
	0, 763, 757, 761, 760, 758, 759, 0, 723, 0,
	0, 0, 0, 0, 0, 683, 742, 0, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	739, 740, 0, 0, 0, 0, 776, 0, 741, 0,
	0, 777, 0, 765, 0, 0, 154, 270, 285, 163,
	261, 298, 168, 268, 159, 234, 257, 0, 0, 156,
	283, 267, 216, 199, 200, 155, 0, 252, 178, 191,
	175, 232, 762, 726, 730, 174, 728, 774, 293, 158,
	0, 292, 231, 279, 284, 217, 211, 157, 281, 215,
	210, 203, 182, 801, 195, 243, 209, 244, 196, 221,
	220, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 772,
	0, 0, 295, 0, 0, 789, 0, 0, 0, 269,
	0, 0, 204, 0, 0, 0, 731, 0, 255, 237,
	799, 684, 0, 253, 207, 280, 245, 286, 271, 294,
	249, 246, 150, 272, 177, 218, 160, 161, 173, 179,
	181, 183, 184, 227, 228, 240, 260, 273, 274, 275,
	176, 169, 254, 170, 193, 171, 151, 262, 172, 152,
	241, 278, 0, 189, 250, 214, 153, 213, 242, 277,
	276, 302, 308, 309, 313, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 307, 187, 148, 290, 787, 233, 0, 798, 783,
	784, 785, 788, 791, 792, 725, 729, 793, 795, 797,
	800, 258, 0, 0, 0, 0, 0, 198, 239, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 288, 300, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 732,
	223, 224, 225, 226, 724, 0, 167, 318, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 186, 192, 0, 194, 166, 238, 188, 297, 201,
	0, 230, 197, 263, 202, 208, 251, 296, 236, 256,
	164, 287, 264, 212, 0, 0, 807, 786, 806, 808,
	809, 805, 810, 811, 794, 747, 0, 803, 802, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 206, 0, 247, 185, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 127, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 779, 782, 775, 0, 303,
	304, 305, 289, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 180, 0, 0, 205, 0, 0,
	0, 769, 0, 0, 265, 219, 0, 0, 0, 0,
	790, 796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 686, 781, 780, 755, 764,
	0, 0, 162, 756, 0, 763, 757, 761, 760, 758,
	759, 0, 723, 0, 0, 0, 0, 0, 0, 0,
	742, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 739, 740, 0, 0, 0, 0,
	776, 0, 741, 0, 0, 777, 0, 765, 0, 0,
	154, 270, 285, 163, 261, 298, 168, 268, 159, 234,
	257, 0, 0, 156, 283, 267, 216, 199, 200, 155,
	0, 252, 178, 191, 175, 232, 762, 726, 730, 174,
	728, 774, 293, 158, 0, 292, 231, 279, 284, 217,
	211, 157, 281, 215, 210, 203, 182, 801, 195, 243,
	209, 244, 196, 221, 220, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 0, 0, 295, 0, 0, 789,
	0, 0, 0, 269, 0, 0, 204, 0, 0, 0,
	731, 0, 255, 237, 799, 0, 0, 253, 207, 280,
	245, 286, 271, 294, 249, 246, 150, 272, 177, 218,
	160, 161, 173, 179, 181, 183, 184, 227, 228, 240,
	260, 273, 274, 275, 176, 169, 254, 170, 193, 171,
	151, 262, 172, 152, 241, 278, 0, 189, 250, 214,
	153, 213, 242, 277, 276, 302, 308, 309, 313, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 307, 187, 148, 290, 787,
	233, 0, 798, 783, 784, 785, 788, 791, 792, 725,
	729, 793, 795, 797, 800, 258, 0, 0, 0, 0,
	0, 198, 239, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 288, 300,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 732, 223, 224, 225, 226, 724, 0,
	167, 318, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 186, 192, 0, 194, 166,
	238, 188, 297, 201, 0, 230, 197, 263, 202, 208,
	251, 296, 236, 256, 164, 287, 264, 212, 0, 0,
	807, 786, 806, 808, 809, 805, 810, 811, 794, 747,
	0, 803, 802, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 206,
	0, 247, 185, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 127, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 779,
	782, 0, 0, 303, 304, 305, 289, 103, 0, 29,
	93, 75, 0, 0, 0, 0, 0, 0, 0, 235,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 265, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 270, 285, 163, 261, 298, 168, 268,
	159, 234, 257, 0, 0, 156, 283, 267, 216, 199,
	200, 155, 0, 252, 178, 191, 175, 232, 0, 282,
	310, 174, 301, 0, 293, 158, 0, 292, 231, 279,
	284, 217, 211, 157, 281, 215, 210, 203, 182, 0,
	195, 243, 209, 244, 196, 221, 220, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 204, 0,
	0, 0, 311, 0, 255, 237, 0, 0, 0, 253,
	207, 280, 245, 286, 271, 294, 249, 246, 150, 272,
	177, 218, 160, 161, 173, 179, 181, 183, 184, 227,
	228, 240, 260, 273, 274, 275, 176, 169, 254, 170,
	193, 171, 151, 262, 172, 152, 241, 278, 0, 189,
	250, 214, 153, 213, 242, 277, 276, 302, 308, 309,
	313, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 1443, 307, 187, 148,
	290, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 306, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 198, 239, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	288, 300, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 315, 223, 224, 225, 226,
	326, 328, 167, 318, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 186, 192, 0,
	194, 166, 238, 188, 297, 201, 0, 230, 197, 263,
	202, 208, 251, 296, 236, 256, 164, 287, 264, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1439, 0, 0, 1436, 0,
	0, 0, 1438, 1435, 1437, 1441, 1442, 0, 0, 149,
	1440, 206, 76, 247, 185, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 235, 0, 0, 0, 303, 304, 305, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 265, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 1739, 1742, 0,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1446, 1447, 1448, 1449, 1450, 1451, 1444, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 270, 285, 163, 261, 298,
	168, 268, 159, 234, 257, 0, 0, 156, 283, 267,
	216, 199, 200, 155, 0, 252, 178, 191, 175, 232,
	0, 282, 310, 174, 301, 0, 293, 158, 0, 292,
	231, 279, 284, 217, 211, 157, 281, 215, 210, 203,
	182, 0, 195, 243, 209, 244, 196, 221, 220, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	295, 0, 0, 0, 1736, 0, 1735, 269, 1737, 1740,
	204, 0, 0, 0, 311, 0, 255, 237, 0, 0,
	0, 253, 207, 280, 245, 286, 271, 294, 249, 246,
	150, 272, 177, 218, 160, 161, 173, 179, 181, 183,
	184, 227, 228, 240, 260, 273, 274, 275, 176, 169,
	254, 170, 193, 171, 151, 262, 172, 152, 241, 278,
	1741, 189, 250, 214, 153, 213, 242, 277, 276, 302,
	308, 309, 313, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 307,
	187, 148, 290, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 306, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 198, 239, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 288, 300, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 315, 223, 224,
	225, 226, 190, 0, 167, 318, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 186,
	192, 0, 194, 166, 238, 188, 297, 201, 0, 230,
	197, 263, 202, 208, 251, 296, 236, 256, 164, 287,
	264, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 206, 0, 247, 185, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 235, 0, 0, 0, 303, 304, 305,
	289, 0, 0, 0, 0, 991, 0, 0, 0, 0,
	180, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	265, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 992, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 987, 988, 989, 986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 270, 285, 163,
	261, 298, 168, 268, 159, 234, 257, 0, 0, 156,
	283, 267, 216, 199, 200, 155, 0, 252, 178, 191,
	175, 232, 0, 282, 310, 174, 301, 0, 293, 158,
	0, 292, 231, 279, 284, 217, 211, 157, 281, 215,
	210, 203, 182, 0, 195, 243, 209, 244, 196, 221,
	220, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 204, 0, 0, 0, 311, 0, 255, 237,
	0, 0, 0, 253, 207, 280, 245, 286, 271, 294,
	249, 246, 150, 272, 177, 218, 160, 161, 173, 179,
	181, 183, 184, 227, 228, 240, 260, 273, 274, 275,
	176, 169, 254, 170, 193, 171, 151, 262, 172, 152,
	241, 278, 0, 189, 250, 214, 153, 213, 242, 277,
	276, 302, 308, 309, 313, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 307, 187, 148, 290, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 306, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 198, 239, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 288, 300, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 315,
	223, 224, 225, 226, 190, 0, 167, 318, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 186, 192, 0, 194, 166, 238, 188, 297, 201,
	0, 230, 197, 263, 202, 208, 251, 296, 236, 256,
	164, 287, 264, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 206, 0, 247, 185, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 235, 0, 0, 0, 303,
	304, 305, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 458, 0, 205, 0, 0, 0, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 466, 467, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 0, 282, 310, 174, 301, 444,
	293, 158, 443, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 0, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 311, 0,
	255, 237, 0, 0, 0, 253, 207, 280, 245, 286,
	271, 294, 456, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 306, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 291, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 460, 223, 224, 225, 226, 190, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 468, 463, 464, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 103, 0, 0,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 265, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 1082, 0, 109, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 270, 285, 163, 261, 298, 168, 268,
	159, 234, 257, 0, 0, 156, 283, 267, 216, 199,
	200, 155, 0, 252, 178, 191, 175, 232, 0, 282,
	310, 174, 301, 0, 293, 158, 0, 292, 231, 279,
	284, 217, 211, 157, 281, 215, 210, 203, 182, 0,
	195, 243, 209, 244, 196, 221, 220, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 204, 0,
	0, 0, 311, 0, 255, 237, 0, 0, 0, 253,
	207, 280, 245, 286, 271, 294, 249, 246, 150, 272,
	177, 218, 160, 161, 173, 179, 181, 183, 184, 227,
	228, 240, 260, 273, 274, 275, 176, 169, 254, 170,
	193, 171, 151, 262, 172, 152, 241, 278, 0, 189,
	250, 214, 153, 213, 242, 277, 276, 302, 308, 309,
	313, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 307, 187, 148,
	290, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 306, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 198, 239, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	288, 300, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 315, 223, 224, 225, 226,
	190, 0, 167, 318, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 186, 192, 0,
	194, 166, 238, 188, 297, 201, 0, 230, 197, 263,
	202, 208, 251, 296, 236, 256, 164, 287, 264, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 206, 76, 247, 185, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 235, 0, 0, 0, 303, 304, 305, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 265, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	466, 467, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 270, 285, 163, 261, 298,
	168, 268, 159, 234, 257, 0, 0, 156, 283, 267,
	216, 199, 200, 155, 0, 252, 178, 191, 175, 232,
	0, 282, 310, 174, 301, 444, 293, 158, 443, 292,
	231, 279, 284, 217, 211, 157, 281, 215, 210, 203,
	182, 0, 195, 243, 209, 244, 196, 221, 220, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	204, 0, 0, 0, 311, 0, 255, 237, 0, 0,
	0, 253, 207, 280, 245, 286, 271, 294, 249, 246,
	150, 272, 177, 218, 160, 161, 173, 179, 181, 183,
	184, 227, 228, 240, 260, 273, 274, 275, 176, 169,
	254, 170, 193, 171, 151, 262, 172, 152, 241, 278,
	0, 189, 250, 214, 153, 213, 242, 277, 276, 302,
	308, 309, 313, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 307,
	187, 148, 290, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 306, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 198, 239, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 288, 300, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 315, 223, 224,
	225, 226, 190, 0, 167, 318, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 186,
	192, 0, 194, 166, 238, 188, 297, 201, 0, 468,
	463, 464, 202, 208, 251, 296, 236, 256, 164, 287,
	264, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 206, 0, 247, 185, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 235, 0, 0, 0, 303, 304, 305,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 663, 0, 205, 0, 0, 0, 0, 0, 0,
	265, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 661, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 659, 0, 0, 0, 0, 154, 270, 285, 163,
	261, 298, 168, 268, 159, 234, 257, 0, 0, 156,
	283, 267, 216, 199, 200, 155, 0, 252, 178, 191,
	175, 232, 0, 282, 310, 174, 301, 0, 293, 158,
	0, 292, 231, 279, 284, 217, 211, 157, 281, 215,
	210, 203, 182, 0, 195, 243, 209, 244, 196, 221,
	220, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 204, 0, 0, 0, 311, 0, 255, 237,
	0, 0, 0, 253, 207, 280, 245, 286, 271, 294,
	249, 246, 150, 272, 177, 218, 160, 161, 173, 179,
	181, 183, 184, 227, 228, 240, 260, 273, 274, 275,
	176, 169, 254, 170, 193, 171, 151, 262, 172, 152,
	241, 278, 0, 189, 250, 214, 153, 213, 242, 277,
	276, 302, 308, 309, 313, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 307, 187, 148, 290, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 306, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 198, 239, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 288, 300, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 315,
	223, 224, 225, 226, 190, 0, 167, 318, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 186, 192, 0, 194, 166, 238, 188, 297, 201,
	0, 230, 197, 263, 202, 208, 251, 296, 236, 256,
	164, 287, 264, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 206, 0, 247, 185, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 235, 0, 0, 0, 303,
	304, 305, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 657, 0, 205, 0, 0, 0, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 661, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 0, 282, 310, 174, 301, 0,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 0, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 311, 0,
	255, 237, 0, 0, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 306, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 315, 223, 224, 225, 226, 190, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 235, 0, 0,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 265, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2356, 0, 109, 781, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 270, 285, 163, 261, 298, 168, 268, 159, 234,
	257, 0, 0, 156, 283, 267, 216, 199, 200, 155,
	0, 252, 178, 191, 175, 232, 0, 282, 310, 174,
	301, 0, 293, 158, 0, 292, 231, 279, 284, 217,
	211, 157, 281, 215, 210, 203, 182, 0, 195, 243,
	209, 244, 196, 221, 220, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 204, 0, 0, 0,
	311, 0, 255, 237, 0, 0, 0, 253, 207, 280,
	245, 286, 271, 294, 249, 246, 150, 272, 177, 218,
	160, 161, 173, 179, 181, 183, 184, 227, 228, 240,
	260, 273, 274, 275, 176, 169, 254, 170, 193, 171,
	151, 262, 172, 152, 241, 278, 0, 189, 250, 214,
	153, 213, 242, 277, 276, 302, 308, 309, 313, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 307, 187, 148, 290, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	306, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 198, 239, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 288, 300,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 315, 223, 224, 225, 226, 190, 0,
	167, 318, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 186, 192, 0, 194, 166,
	238, 188, 297, 201, 0, 230, 197, 263, 202, 208,
	251, 296, 236, 256, 164, 287, 264, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 206,
	0, 247, 185, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 235,
	0, 0, 0, 303, 304, 305, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 265, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	661, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 659, 0, 0,
	0, 0, 154, 270, 285, 163, 261, 298, 168, 268,
	159, 234, 257, 0, 0, 156, 283, 267, 216, 199,
	200, 155, 0, 252, 178, 191, 175, 232, 0, 282,
	310, 174, 301, 0, 293, 158, 0, 292, 231, 279,
	284, 217, 211, 157, 281, 215, 210, 203, 182, 0,
	195, 243, 209, 244, 196, 221, 220, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 204, 0,
	0, 0, 311, 0, 255, 237, 0, 0, 0, 253,
	207, 280, 245, 286, 271, 294, 249, 246, 150, 272,
	177, 218, 160, 161, 173, 179, 181, 183, 184, 227,
	228, 240, 260, 273, 274, 275, 176, 169, 254, 170,
	193, 171, 151, 262, 172, 152, 241, 278, 0, 189,
	250, 214, 153, 213, 242, 277, 276, 302, 308, 309,
	313, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 307, 187, 148,
	290, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 306, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 198, 239, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	288, 300, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 315, 223, 224, 225, 226,
	190, 0, 167, 318, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 186, 192, 0,
	194, 166, 238, 188, 297, 201, 0, 230, 197, 263,
	202, 208, 251, 296, 236, 256, 164, 287, 264, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 206, 0, 247, 185, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 235, 0, 0, 0, 303, 304, 305, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 265, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 661, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1944,
	0, 0, 0, 0, 154, 270, 285, 163, 261, 298,
	168, 268, 159, 234, 257, 0, 0, 156, 283, 267,
	216, 199, 200, 155, 0, 252, 178, 191, 175, 232,
	0, 282, 310, 174, 301, 0, 293, 158, 0, 292,
	231, 279, 284, 217, 211, 157, 281, 215, 210, 203,
	182, 0, 195, 243, 209, 244, 196, 221, 220, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	204, 0, 0, 0, 311, 0, 255, 237, 0, 0,
	0, 253, 207, 280, 245, 286, 271, 294, 249, 246,
	150, 272, 177, 218, 160, 161, 173, 179, 181, 183,
	184, 227, 228, 240, 260, 273, 274, 275, 176, 169,
	254, 170, 193, 171, 151, 262, 172, 152, 241, 278,
	0, 189, 250, 214, 153, 213, 242, 277, 276, 302,
	308, 309, 313, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 307,
	187, 148, 290, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 306, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 198, 239, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 288, 300, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 315, 223, 224,
	225, 226, 190, 0, 167, 318, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 186,
	192, 0, 194, 166, 238, 188, 297, 201, 0, 230,
	197, 263, 202, 208, 251, 296, 236, 256, 164, 287,
	264, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 206, 0, 247, 185, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 235, 0, 0, 0, 303, 304, 305,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	265, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 941, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 270, 285, 163,
	261, 298, 168, 268, 159, 234, 257, 0, 0, 156,
	283, 267, 216, 199, 200, 155, 0, 252, 178, 191,
	175, 232, 0, 282, 310, 174, 301, 0, 293, 158,
	0, 292, 231, 279, 284, 217, 211, 157, 281, 215,
	210, 203, 182, 0, 195, 243, 209, 244, 196, 221,
	220, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 204, 0, 0, 0, 311, 0, 255, 237,
	0, 0, 0, 253, 207, 280, 245, 286, 271, 294,
	249, 246, 150, 272, 177, 218, 160, 161, 173, 179,
	181, 183, 184, 227, 228, 240, 260, 273, 274, 275,
	176, 169, 254, 170, 193, 171, 151, 262, 172, 152,
	241, 278, 0, 189, 250, 214, 153, 213, 242, 277,
	276, 302, 308, 309, 313, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 307, 187, 148, 290, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 306, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 198, 239, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 288, 300, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 315,
	223, 224, 225, 226, 190, 0, 167, 318, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 186, 192, 0, 194, 166, 238, 188, 297, 201,
	0, 230, 197, 263, 202, 208, 251, 296, 236, 256,
	164, 287, 264, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 206, 0, 247, 185, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 235, 942, 0, 0, 303,
	304, 305, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 1381, 0, 205, 0, 0, 0, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 661, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 0, 282, 310, 174, 301, 0,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 0, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 311, 0,
	255, 237, 0, 0, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 306, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 315, 223, 224, 225, 226, 190, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 235, 0, 0,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 265, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 781, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 270, 285, 163, 261, 298, 168, 268, 159, 234,
	257, 0, 0, 156, 283, 267, 216, 199, 200, 155,
	0, 252, 178, 191, 175, 232, 0, 282, 310, 174,
	301, 0, 293, 158, 0, 292, 231, 279, 284, 217,
	211, 157, 281, 215, 210, 203, 182, 0, 195, 243,
	209, 244, 196, 221, 220, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 204, 0, 0, 0,
	311, 0, 255, 237, 0, 0, 0, 253, 207, 280,
	245, 286, 271, 294, 249, 246, 150, 272, 177, 218,
	160, 161, 173, 179, 181, 183, 184, 227, 228, 240,
	260, 273, 274, 275, 176, 169, 254, 170, 193, 171,
	151, 262, 172, 152, 241, 278, 0, 189, 250, 214,
	153, 213, 242, 277, 276, 302, 308, 309, 313, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 307, 187, 148, 290, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	306, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 198, 239, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 288, 300,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 315, 223, 224, 225, 226, 190, 0,
	167, 318, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 186, 192, 0, 194, 166,
	238, 188, 297, 201, 0, 230, 197, 263, 202, 208,
	251, 296, 236, 256, 164, 287, 264, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 206,
	0, 247, 185, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 235,
	0, 0, 0, 303, 304, 305, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 265, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2096, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 270, 285, 163, 261, 298, 168, 268,
	159, 234, 257, 0, 0, 156, 283, 267, 216, 199,
	200, 155, 0, 252, 178, 191, 175, 232, 0, 282,
	310, 174, 301, 0, 293, 158, 0, 292, 231, 279,
	284, 217, 211, 157, 281, 215, 210, 203, 182, 0,
	195, 243, 209, 244, 196, 221, 220, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 204, 0,
	0, 0, 311, 0, 255, 237, 0, 0, 0, 253,
	207, 280, 245, 286, 271, 294, 249, 246, 150, 272,
	177, 218, 160, 161, 173, 179, 181, 183, 184, 227,
	228, 240, 260, 273, 274, 275, 176, 169, 254, 170,
	193, 171, 151, 262, 172, 152, 241, 278, 0, 189,
	250, 214, 153, 213, 242, 277, 276, 302, 308, 309,
	313, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 307, 187, 148,
	290, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 306, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 198, 239, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	288, 300, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 315, 223, 224, 225, 226,
	190, 0, 167, 318, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 186, 192, 0,
	194, 166, 238, 188, 297, 201, 0, 230, 197, 263,
	202, 208, 251, 296, 236, 256, 164, 287, 264, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 206, 0, 247, 185, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 235, 0, 0, 0, 303, 304, 305, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 265, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 270, 285, 163, 261, 298,
	168, 268, 159, 234, 257, 0, 0, 156, 283, 267,
	216, 199, 200, 155, 0, 252, 178, 191, 175, 232,
	0, 282, 310, 174, 301, 0, 293, 158, 0, 292,
	231, 279, 284, 217, 211, 157, 281, 215, 210, 203,
	182, 0, 195, 243, 209, 244, 196, 221, 220, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	204, 0, 0, 0, 311, 0, 255, 237, 0, 0,
	0, 253, 207, 280, 245, 286, 271, 294, 249, 246,
	150, 272, 177, 218, 160, 161, 173, 179, 181, 183,
	184, 227, 228, 240, 260, 273, 274, 275, 176, 169,
	254, 170, 193, 171, 151, 262, 172, 152, 241, 278,
	0, 189, 250, 214, 153, 213, 242, 277, 276, 302,
	308, 309, 313, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 307,
	187, 148, 290, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 306, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 198, 239, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 288, 300, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 315, 223, 224,
	225, 226, 190, 0, 167, 318, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 186,
	192, 0, 194, 166, 238, 188, 297, 201, 0, 230,
	197, 263, 202, 208, 251, 296, 236, 256, 164, 287,
	264, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 206, 0, 247, 185, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 235, 0, 0, 0, 303, 304, 305,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	265, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 270, 285, 163,
	261, 298, 168, 268, 159, 234, 257, 0, 0, 156,
	283, 267, 216, 199, 200, 155, 0, 252, 178, 191,
	175, 232, 0, 282, 310, 174, 301, 0, 293, 158,
	0, 292, 231, 279, 284, 217, 211, 157, 281, 215,
	210, 203, 182, 0, 195, 243, 209, 244, 196, 221,
	220, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 204, 0, 0, 0, 311, 0, 255, 237,
	0, 0, 0, 253, 207, 280, 245, 286, 271, 294,
	249, 246, 150, 272, 177, 218, 160, 161, 173, 179,
	181, 183, 184, 227, 228, 240, 260, 273, 274, 275,
	176, 169, 254, 170, 193, 171, 151, 262, 172, 152,
	241, 278, 0, 189, 250, 214, 153, 213, 242, 277,
	276, 302, 308, 309, 313, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 307, 187, 148, 290, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 306, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 198, 239, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 288, 300, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 315,
	223, 224, 225, 226, 190, 0, 167, 318, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 186, 192, 0, 194, 166, 238, 188, 297, 201,
	0, 230, 197, 263, 202, 208, 251, 296, 236, 256,
	164, 287, 264, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 206, 0, 247, 185, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 235, 0, 0, 0, 303,
	304, 305, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 661, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 0, 282, 310, 174, 301, 0,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 0, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 311, 0,
	255, 237, 0, 0, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 306, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 315, 223, 224, 225, 226, 190, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 235, 0, 0,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 265, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 1617, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 270, 285, 163, 261, 298, 168, 268, 159, 234,
	257, 0, 0, 156, 283, 267, 216, 199, 200, 155,
	0, 252, 178, 191, 175, 232, 0, 282, 310, 174,
	301, 0, 293, 158, 0, 292, 231, 279, 284, 217,
	211, 157, 281, 215, 210, 203, 182, 0, 195, 243,
	209, 244, 196, 221, 220, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 204, 0, 0, 0,
	311, 0, 255, 237, 0, 0, 0, 253, 207, 280,
	245, 286, 271, 294, 249, 246, 150, 272, 177, 218,
	160, 161, 173, 179, 181, 183, 184, 227, 228, 240,
	260, 273, 274, 275, 176, 169, 254, 170, 193, 171,
	151, 262, 172, 152, 241, 278, 0, 189, 250, 214,
	153, 213, 242, 277, 276, 302, 308, 309, 313, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 307, 187, 148, 290, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	306, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 198, 239, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 288, 300,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 315, 223, 224, 225, 226, 190, 0,
	167, 318, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 186, 192, 0, 194, 166,
	238, 188, 297, 201, 0, 230, 197, 263, 202, 208,
	251, 296, 236, 256, 164, 287, 264, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 206,
	0, 247, 185, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 235,
	0, 0, 0, 303, 304, 305, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 265, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 270, 285, 163, 261, 298, 168, 268,
	159, 234, 257, 0, 0, 156, 283, 267, 216, 199,
	200, 155, 0, 252, 178, 191, 175, 232, 0, 282,
	310, 174, 301, 0, 293, 158, 0, 292, 231, 279,
	284, 217, 211, 157, 281, 215, 210, 203, 182, 0,
	195, 243, 209, 244, 196, 221, 220, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 204, 0,
	0, 0, 311, 0, 255, 237, 0, 0, 0, 253,
	207, 280, 245, 286, 271, 294, 249, 246, 150, 272,
	177, 218, 160, 161, 173, 179, 181, 183, 184, 227,
	228, 240, 260, 273, 274, 275, 176, 169, 254, 170,
	193, 171, 151, 262, 172, 152, 241, 278, 0, 189,
	250, 214, 153, 213, 242, 277, 276, 302, 308, 309,
	313, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 307, 187, 148,
	290, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 306, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 198, 239, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	288, 300, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 315, 223, 224, 225, 226,
	190, 0, 167, 318, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 186, 192, 0,
	194, 166, 238, 188, 297, 201, 0, 230, 197, 263,
	202, 208, 251, 296, 236, 256, 164, 287, 264, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 206, 0, 247, 185, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 235, 0, 0, 0, 303, 304, 305, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 265, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 1394, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 270, 285, 163, 261, 298,
	168, 268, 159, 234, 257, 0, 0, 156, 283, 267,
	216, 199, 200, 155, 0, 252, 178, 191, 175, 232,
	0, 282, 310, 174, 301, 0, 293, 158, 0, 292,
	231, 279, 284, 217, 211, 157, 281, 215, 210, 203,
	182, 0, 195, 243, 209, 244, 196, 221, 220, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	204, 0, 0, 0, 311, 0, 255, 237, 0, 0,
	0, 253, 207, 280, 245, 286, 271, 294, 249, 246,
	150, 272, 177, 218, 160, 161, 173, 179, 181, 183,
	184, 227, 228, 240, 260, 273, 274, 275, 176, 169,
	254, 170, 193, 171, 151, 262, 172, 152, 241, 278,
	0, 189, 250, 214, 153, 213, 242, 277, 276, 302,
	308, 309, 313, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 307,
	187, 148, 290, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 306, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 198, 239, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 288, 300, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 315, 223, 224,
	225, 226, 190, 0, 167, 318, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 186,
	192, 0, 194, 166, 238, 188, 297, 201, 0, 230,
	197, 263, 202, 208, 251, 296, 236, 256, 164, 287,
	264, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 206, 0, 247, 185, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 0, 1320, 0, 0, 303, 304, 305,
	289, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 265, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 270, 285, 163, 261, 298,
	168, 268, 159, 234, 257, 0, 0, 156, 283, 267,
	216, 199, 200, 155, 0, 252, 178, 191, 175, 232,
	0, 282, 310, 174, 301, 0, 293, 158, 0, 292,
	231, 279, 284, 217, 211, 157, 281, 215, 210, 203,
	182, 0, 195, 243, 209, 244, 196, 221, 220, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	204, 0, 0, 0, 311, 0, 255, 237, 0, 0,
	0, 253, 207, 280, 245, 286, 271, 294, 249, 246,
	150, 272, 177, 218, 160, 161, 173, 179, 181, 183,
	184, 227, 228, 240, 260, 273, 274, 275, 176, 169,
	254, 170, 193, 171, 151, 262, 172, 152, 241, 278,
	0, 189, 250, 214, 153, 213, 242, 277, 276, 302,
	308, 309, 313, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 307,
	187, 148, 290, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 306, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 198, 239, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 288, 300, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 315, 223, 224,
	225, 226, 190, 0, 167, 318, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 186,
	192, 0, 194, 166, 238, 188, 297, 201, 0, 230,
	197, 263, 202, 208, 251, 296, 236, 256, 164, 287,
	264, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 206, 0, 247, 185, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 235, 0, 0, 0, 303, 304, 305,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	265, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 270, 285, 163,
	261, 298, 168, 268, 159, 234, 257, 0, 0, 156,
	283, 267, 216, 199, 200, 155, 0, 252, 178, 191,
	175, 232, 0, 282, 310, 174, 301, 0, 293, 158,
	0, 292, 231, 279, 284, 217, 211, 157, 281, 215,
	210, 203, 182, 0, 195, 243, 209, 244, 196, 221,
	220, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 1303, 0, 0, 0, 269,
	0, 0, 204, 0, 0, 0, 311, 0, 255, 237,
	0, 0, 0, 253, 207, 280, 245, 286, 271, 294,
	249, 246, 150, 272, 177, 218, 160, 161, 173, 179,
	181, 183, 184, 227, 228, 240, 260, 273, 274, 275,
	176, 169, 254, 170, 193, 171, 151, 262, 172, 152,
	241, 278, 0, 189, 250, 214, 153, 213, 242, 277,
	276, 302, 308, 309, 313, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 307, 187, 148, 290, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 306, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 198, 239, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 288, 300, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 315,
	223, 224, 225, 226, 190, 0, 167, 318, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 186, 192, 0, 194, 166, 238, 188, 297, 201,
	0, 230, 197, 263, 202, 208, 251, 296, 236, 256,
	164, 287, 264, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 206, 0, 247, 185, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 235, 0, 0, 0, 303,
	304, 305, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 0, 282, 310, 174, 301, 0,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 0, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 311, 0,
	255, 237, 0, 0, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 306, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 315, 223, 224, 225, 226, 190, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 235, 0, 0,
	0, 303, 304, 305, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 265, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 270, 285, 163, 261, 298, 168, 268, 159, 234,
	257, 0, 0, 156, 283, 267, 216, 199, 200, 155,
	0, 252, 178, 191, 175, 232, 0, 282, 310, 174,
	301, 0, 293, 158, 0, 292, 231, 279, 284, 217,
	211, 157, 281, 215, 210, 203, 182, 0, 195, 243,
	209, 244, 196, 221, 220, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 204, 0, 0, 0,
	311, 0, 255, 237, 0, 0, 0, 253, 207, 280,
	245, 286, 271, 294, 342, 246, 150, 272, 177, 218,
	160, 161, 173, 179, 181, 183, 184, 227, 228, 240,
	260, 273, 274, 275, 176, 169, 254, 170, 193, 171,
	151, 262, 172, 152, 241, 278, 0, 189, 250, 214,
	153, 213, 242, 277, 276, 302, 308, 309, 313, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 307, 187, 148, 290, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	306, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 198, 239, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 288, 300,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 291, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 315, 223, 224, 225, 226, 190, 0,
	167, 318, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 186, 192, 0, 194, 166,
	238, 188, 297, 201, 0, 230, 197, 263, 202, 208,
	251, 296, 236, 256, 164, 287, 264, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 206,
	0, 247, 185, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 235,
	0, 0, 0, 303, 304, 305, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 180, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 265, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 270, 285, 163, 261, 298, 168, 268,
	159, 234, 257, 0, 0, 156, 283, 267, 216, 199,
	200, 155, 0, 252, 178, 191, 175, 232, 0, 282,
	310, 174, 301, 0, 293, 158, 0, 292, 231, 279,
	284, 217, 211, 157, 281, 215, 210, 203, 182, 0,
	195, 243, 209, 244, 196, 221, 220, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 204, 0,
	0, 0, 311, 0, 255, 237, 0, 0, 0, 253,
	207, 280, 245, 286, 271, 294, 249, 246, 150, 272,
	177, 218, 160, 161, 173, 179, 181, 183, 184, 227,
	228, 240, 260, 273, 274, 275, 176, 169, 254, 170,
	193, 171, 151, 262, 172, 152, 241, 278, 0, 189,
	250, 214, 153, 213, 242, 277, 276, 302, 308, 309,
	313, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 307, 187, 148,
	290, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 306, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 198, 239, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	288, 300, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 315, 223, 224, 225, 226,
	190, 0, 167, 318, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 186, 192, 0,
	194, 166, 238, 188, 297, 201, 0, 230, 197, 263,
	202, 208, 251, 296, 236, 256, 164, 287, 264, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 206, 0, 247, 185, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 235, 0, 0, 0, 303, 304, 305, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 265, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 270, 285, 163, 261, 298,
	168, 268, 159, 234, 257, 0, 0, 156, 283, 267,
	216, 199, 200, 155, 0, 252, 178, 191, 175, 232,
	0, 282, 310, 174, 301, 0, 293, 158, 0, 292,
	231, 279, 284, 217, 211, 157, 281, 215, 210, 203,
	182, 0, 195, 243, 209, 244, 196, 221, 220, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	204, 0, 0, 0, 311, 0, 255, 237, 0, 0,
	0, 253, 207, 280, 245, 286, 271, 294, 249, 246,
	150, 272, 177, 218, 160, 161, 173, 179, 181, 183,
	184, 227, 228, 240, 260, 273, 274, 275, 176, 169,
	254, 170, 193, 171, 151, 262, 172, 152, 241, 278,
	0, 189, 250, 214, 153, 213, 242, 277, 276, 302,
	308, 309, 313, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 307,
	187, 148, 290, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 306, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 198, 239, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 288, 300, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 315, 223, 224,
	225, 226, 190, 0, 167, 318, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 186,
	192, 0, 194, 166, 238, 188, 297, 201, 0, 230,
	197, 263, 202, 208, 251, 296, 236, 256, 164, 287,
	264, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 206, 0, 247, 185, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 235, 0, 0, 0, 303, 304, 305,
	289, 0, 0, 0, 0, 1362, 0, 0, 0, 0,
	180, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	265, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 896, 897, 898, 1364, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 270, 285, 163,
	261, 298, 168, 268, 159, 234, 257, 0, 0, 156,
	283, 267, 216, 199, 200, 155, 0, 252, 178, 191,
	175, 232, 0, 282, 310, 174, 301, 0, 293, 158,
	0, 292, 231, 279, 284, 217, 211, 157, 281, 215,
	210, 203, 182, 0, 195, 243, 209, 244, 196, 221,
	220, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 204, 0, 0, 0, 311, 0, 255, 237,
	0, 0, 0, 253, 207, 280, 245, 286, 271, 294,
	249, 246, 150, 272, 177, 218, 160, 161, 173, 179,
	181, 183, 184, 227, 228, 240, 260, 273, 274, 275,
	176, 169, 254, 170, 193, 171, 151, 262, 172, 152,
	241, 278, 0, 189, 250, 214, 153, 213, 242, 277,
	276, 302, 308, 309, 313, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 307, 187, 148, 290, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 306, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 198, 239, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 288, 300, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 315,
	223, 224, 225, 226, 190, 0, 167, 318, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 186, 192, 0, 194, 166, 238, 188, 297, 201,
	0, 230, 197, 263, 202, 208, 251, 296, 236, 256,
	164, 287, 264, 212, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 265, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 206, 0, 247, 185, 0,
	0, 0, 896, 897, 898, 1364, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 270, 285,
	163, 261, 298, 168, 268, 159, 234, 257, 0, 0,
	156, 283, 267, 216, 199, 200, 155, 0, 252, 178,
	191, 175, 232, 0, 282, 310, 174, 301, 0, 293,
	158, 0, 292, 231, 279, 284, 217, 211, 157, 281,
	215, 210, 203, 182, 0, 195, 243, 209, 244, 196,
	221, 220, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 204, 0, 0, 0, 311, 0, 255,
	237, 0, 0, 0, 253, 207, 280, 245, 286, 271,
	294, 249, 246, 150, 272, 177, 218, 160, 161, 173,
	179, 181, 183, 184, 227, 228, 240, 260, 273, 274,
	275, 176, 169, 254, 170, 193, 171, 151, 262, 172,
	152, 241, 278, 0, 189, 250, 214, 153, 213, 242,
	277, 276, 302, 308, 309, 313, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 307, 187, 148, 290, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 306, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 198, 239,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 288, 300, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	315, 223, 224, 225, 226, 190, 0, 167, 318, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 186, 192, 0, 194, 166, 238, 188, 297,
	201, 0, 230, 197, 263, 202, 208, 251, 296, 236,
	256, 164, 287, 264, 212, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 265, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 206, 0, 247, 185,
	0, 0, 0, 896, 897, 898, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 270,
	285, 163, 261, 298, 168, 268, 159, 234, 257, 0,
	0, 156, 283, 267, 216, 199, 200, 155, 0, 252,
	178, 191, 175, 232, 0, 282, 310, 174, 301, 0,
	293, 158, 0, 292, 231, 279, 284, 217, 211, 157,
	281, 215, 210, 203, 182, 0, 195, 243, 209, 244,
	196, 221, 220, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 204, 0, 0, 0, 311, 0,
	255, 237, 0, 0, 0, 253, 207, 280, 245, 286,
	271, 294, 249, 246, 150, 272, 177, 218, 160, 161,
	173, 179, 181, 183, 184, 227, 228, 240, 260, 273,
	274, 275, 176, 169, 254, 170, 193, 171, 151, 262,
	172, 152, 241, 278, 0, 189, 250, 214, 153, 213,
	242, 277, 276, 302, 308, 309, 313, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 307, 187, 148, 290, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 306, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 198,
	239, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 266, 288, 300, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 315, 223, 224, 225, 226, 190, 0, 167, 318,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 186, 192, 0, 194, 166, 238, 188,
	297, 201, 0, 230, 197, 263, 202, 208, 251, 296,
	236, 256, 164, 287, 264, 212, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 206, 0, 247,
	185, 0, 1842, 1846, 1848, 1850, 1852, 1853, 1855, 0,
	1859, 1856, 1857, 1858, 0, 0, 1837, 1838, 1839, 1840,
	1820, 1821, 1843, 0, 1823, 0, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1835, 1841, 0, 0,
	0, 303, 304, 305, 289, 1845, 1847, 1849, 1851, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	1842, 1846, 1848, 1850, 1852, 1853, 1855, 0, 1859, 1856,
	1857, 1858, 0, 0, 1837, 1838, 1839, 1840, 1820, 1821,
	1843, 2053, 1823, 0, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1835, 1841, 103, 0, 29, 93,
	75, 0, 0, 1845, 1847, 1849, 1851, 1854, 2053, 0,
	0, 0, 0, 0, 0, 1318, 98, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 67, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 1318, 0, 0, 0, 0, 55, 0, 0,
	0, 0, 2035, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 1813, 0, 2035,
	0, 0, 0, 362, 0, 361, 368, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 0,
	367, 371, 0, 0, 353, 0, 0, 0, 0, 2136,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 94, 95, 0, 96, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 361, 368, 358, 0,
	0, 0, 0, 380, 0, 0, 381, 0, 365, 366,
	0, 367, 371, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2039, 0, 1844, 74, 92,
	101, 0, 53, 0, 380, 0, 2043, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 86,
	85, 0, 2039, 0, 0, 0, 2032, 0, 0, 0,
	2034, 2036, 2038, 2043, 2040, 2041, 2042, 2044, 2045, 2046,
	2048, 2049, 2050, 2051, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 2034, 2036, 2038,
	0, 2040, 2041, 2042, 2044, 2045, 2046, 2048, 2049, 2050,
	2051, 0, 0, 2054, 0, 1844, 0, 0, 0, 0,
	0, 0, 88, 89, 0, 354, 356, 355, 0, 0,
	0, 0, 0, 360, 0, 0, 0, 0, 0, 0,
	2054, 0, 0, 0, 0, 364, 0, 0, 2052, 0,
	0, 0, 379, 0, 0, 0, 63, 0, 0, 357,
	90, 0, 64, 348, 0, 2031, 0, 0, 362, 0,
	361, 368, 358, 0, 0, 2052, 354, 356, 355, 0,
	0, 0, 365, 366, 360, 367, 371, 0, 0, 353,
	0, 0, 2031, 2047, 0, 0, 364, 0, 0, 376,
	2037, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 65, 0, 0, 0, 0, 0,
	2047, 0, 0, 66, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 363, 369,
	0, 370, 372, 0, 0, 373, 374, 375, 0, 0,
	377, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 0, 0, 0, 359, 363,
	369, 0, 370, 372, 0, 0, 373, 374, 375, 0,
	0, 377, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 356, 355, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 363, 369, 0, 370, 372, 0, 0,
	373, 374, 375, 0, 0, 377, 378,
}

var yyPact = [...]int{
	22386, -1000, -312, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20097,
	-1000, -1000, 1509, -1000, 8277, 20569, 78, 20569, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 290, -1000, 19625, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 254, 22473, 170, 169, -298, -1000, 1987,
	-1000, -1000, -1000, -1000, 143, 314, 19153, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2056, 25, 314, 410, 416, 642, 642, 9693, 1987,
	229, 56, -1000, 837, 22386, 232, 20569, -1000, 822, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1987, 1987, 20569, -61, 896, -1000, 242, 207,
	195, 820, -1000, -1000, -1000, -1000, 1984, -1000, 20569, 1692,
	20569, -1000, 1203, 199, 22524, 1817, 830, 343, 1717, -1000,
	-1000, 1680, -1000, 28, 21, 91, 521, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 65, -1000, 1863, -1000, -1000, 13,
	-1000, -1000, 17, -1000, -1000, -1000, -116, -1000, -1000, -1000,
	-1000, -1000, -185, -185, 803, -1000, 1679, 1786, 1870, 1530,
	1955, 1868, 1847, 1844, 1841, 14, 253, 253, 253, 280,
	253, 286, -1000, -1000, -1000, -1000, -1000, -1000, 361, -1000,
	-1000, -1000, -1000, 500, 20569, -1000, 1534, 1879, 213, 832,
	208, 197, 1870, 1870, -101, -132, 832, 832, -132, 31,
	-1000, -1000, -1000, 978, 209, 978, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1852, 1838, 254, 254, 262, -1000, -187,
	-1000, -1000, 404, -1000, 386, -1000, 1203, 194, 193, 588,
	924, -1000, 821, 20569, 20569, 20569, 821, 821, 11593, 11121,
	809, -1000, 1870, 1530, -1000, 1475, 1473, 1530, 254, 254,
	254, 254, 254, 254, 254, 20569, 5849, 5849, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 215, 1673, -1000, 20569,
	1870, 1786, 1870, -1000, 801, 1147, 1361, -1000, -1000, 242,
	855, -1000, 461, -1000, -1000, -1000, -1000, 20569, 202, -1000,
	1340, 1672, -1000, 306, 802, 810, -1000, 76, 22708, 16313,
	1203, 16313, 20569, -1000, -1000, -1000, -1000, -1000, -1000, -117,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -69, -1000, -69, 1870, -298, 4875, -1000,
	-301, 1786, 6333, -1000, -1000, 6333, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 274, 253, -1000, 1369, 916, 16313,
	1203, 1198, 20569, 253, 262, -1000, 20569, 500, 1825, 20569,
	16313, 978, 1964, 7785, 978, -1000, -1000, -1000, 832, 832,
	-1000, -1000, -1000, -1000, 978, 978, -1000, -1000, -118, 1964,
	1964, -136, 20569, 20569, 253, 20569, -1000, -1000, -1000, -1000,
	20569, -1000, -1000, 1369, 16313, 13481, -1000, -160, 403, 375,
	391, -1000, -1000, 288, 293, 10649, 245, 16313, 3907, -1000,
	-1000, 821, 821, 821, 3907, 3907, 819, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 20569, 1786, -1000, -1000, -1000, -1000,
	1369, 16313, 1203, 20569, 20569, 20569, 21823, -1000, 799, -1000,
	-1000, 9221, 789, 6333, -1000, 1184, 1671, -1000, -1000, 1668,
	1666, 1665, 1663, 1659, 1658, 1656, -1000, 1503, -1000, -1000,
	1655, 1654, 1647, 1646, -1000, -1000, -1000, -1000, -1000, -1000,
	1645, -1000, -1000, -1000, 1644, 1503, -1000, -1000, 1643, 1642,
	1640, 1639, 1624, -1000, -1000, -1000, 1360, -1000, -1000, -1000,
	1354, 1352, 1623, 2923, -1000, -1000, -1000, -1000, 3423, 7785,
	7785, 7785, 7785, -1000, -1000, 1577, 6333, 1619, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7301, -1000, 1618, 1609, 1606,
	1603, 1602, 1601, 1503, 1598, 1597, 1595, 7785, 1594, 1593,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 799, 1715, -299, -1000, 10177, 20569, 20569, -1000,
	1786, -1000, 1786, 2494, -1000, 1874, -1000, 242, 106, -1000,
	-1000, -1000, -1000, -1000, -1000, 786, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 496, -1000, 20569, -1000, -1000,
	76, 16313, 888, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	74, -1000, -1000, 121, -1000, 271, -38, 852, -1000, -1000,
	16, 117, 16, -1000, -1000, 848, -1000, 1131, -1000, 780,
	1351, -1000, 746, 493, -1000, 1172, 18681, 20569, -14, -1000,
	1812, 756, -1000, -38, 438, 1581, -1000, -1000, -1000, 1762,
	20569, 18209, -1000, 1592, 847, -1000, 1560, 20569, -1000, 6333,
	-1000, 20569, 1964, 1964, 832, 21823, 978, 20569, 978, -1000,
	-1000, 978, -1000, 776, -1000, 20569, -1000, -1000, -1000, -1000,
	-14, 756, 1983, 546, -1000, -1000, -1000, -1000, 1823, 21041,
	21041, 229, 1591, -1000, -1000, 399, 378, 392, -1000, -1000,
	270, -1000, -1000, 438, -1000, -1000, -1000, 1590, 894, -1000,
	-1000, 7785, -1000, 3907, 3907, 3907, -1000, -1000, 13953, -1000,
	-1000, -1000, 482, 438, 1714, 475, -1000, 475, -1000, -1000,
	-1000, 1964, 5849, -1000, 13481, -1000, 6333, 6333, 6333, 6333,
	-1000, 17729, -1000, 17257, -1000, 292, 6817, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 6333, 1829, 1829, 1829, 6333, 984,
	6333, 6333, -1000, 1025, 8411, 1829, 1829, 1829, 1829, 1829,
	-1000, 2931, 1829, 1829, 1829, 1829, -1000, -1000, -1000, 6333,
	7785, 7785, 7785, 7785, 7785, 7785, 7785, 7785, 7785, 7785,
	7785, 7785, 1576, 1019, 7785, 7785, 7785, 1473, 1898, 460,
	-1000, -1000, -1000, -1000, -1000, 903, 1131, 6333, 814, 6333,
	6333, 20569, 6333, -1000, 1471, 1469, -1000, -1000, 6333, 6333,
	7785, -1000, 1829, 1344, 1964, -1000, 1765, 439, -1000, 1586,
	-1000, 846, 1766, -1000, 770, 433, -1000, 892, 842, -1000,
	-1000, -1000, -1000, 767, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -62, -1000, -1000, 20569, 1340, 828, 888,
	445, -1000, 269, 751, 699, -1000, 16313, 23, 16313, -1000,
	16313, -1000, -1000, 204, -1000, 20569, 1783, -1000, -1000, -1000,
	1332, 1779, 4875, -1000, 20569, -149, 6333, 6333, 6333, 1612,
	-1000, -1000, 1534, 913, 1585, -97, 865, -1000, 415, 16313,
	190, -1000, 1709, 127, -1000, 1762, -1000, 355, -1000, 1578,
	20569, 639, -1000, 668, 22386, -1000, 20569, -1000, 1203, 832,
	1131, 1964, -1000, -1000, 1964, -1000, 832, -1000, 832, 978,
	20569, -1000, -97, 415, 20569, 13481, 13481, 13481, 13481, -1000,
	1743, 1740, -1000, 1737, 1730, 1767, 20569, 13481, 20569, -1000,
	-1000, -1000, 21432, -1000, -1000, -1000, -1000, -1000, 1459, 1987,
	16785, -1000, -1000, -1000, 366, 16313, 1331, 245, -1000, -1000,
	-1000, -1000, -1000, 20569, 20569, 1962, -1000, 452, 1914, -1000,
	939, 939, 943, -1000, -1000, 645, -1000, -1000, 421, -1000,
	-1000, -1000, -1000, 1577, -1000, -1000, -1000, 1458, 436, 1131,
	6333, -1000, -1000, 6333, 6333, 996, 6333, 1457, 827, 818,
	-1000, 1456, 1982, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 6333, 6333, 6333, 6333, 6333, 1339, 5365, -1000,
	-1000, -1000, 6333, 6333, 6333, 6333, 1448, 1379, 1713, -1000,
	897, 897, 749, 749, 749, 749, 749, 976, 976, -1000,
	-1000, -1000, 3423, 1576, 7785, 7785, 7785, 234, 2032, 1182,
	-1000, 6333, 926, -1000, 6333, 701, -1000, 1446, 1270, 1445,
	1444, 1440, -1000, -1000, 655, 1425, 1066, 6333, 450, 1962,
	979, -299, 4875, 203, 20569, -299, 20569, 20569, 4875, -1000,
	20569, 2494, 1141, -1000, -1000, -1000, 1972, 16313, 1203, 817,
	887, -1000, 11, -1000, 73, 263, 1322, -1000, 285, 881,
	284, -1000, 641, -91, -83, 1131, 1131, -1000, -1000, 1756,
	1822, 1792, 8749, 1067, -1000, -1000, 1318, -1000, 249, -1000,
	-1000, -1000, 312, 30, 1140, 251, -1000, 1343, 20569, -1000,
	-1000, -1000, -1000, -1000, 865, 865, 865, 8749, 232, 487,
	638, 13481, 20569, -1000, 15369, 1420, -1000, 438, 1964, -1000,
	-1000, 1964, 1964, 832, -1000, 1067, 249, 726, -1000, 875,
	1691, 1704, 1691, -1000, -1000, -1000, -1000, 1739, -1000, 1729,
	-1000, -1000, 726, -1000, 1534, -1000, -1000, 815, 806, -1000,
	445, 1418, -1000, -1000, -1000, -1000, 1959, 1938, 15841, -1000,
	-1000, -1000, -1000, -1000, -1000, 6333, 1871, 1854, 1824, 22134,
	805, -1000, -1000, -1000, -1000, 6333, 1820, 1813, 1803, 1773,
	1758, -1000, 6333, 6333, 1226, 1718, 1669, 1661, 1652, -1000,
	797, -1000, 234, 2032, 1114, -1000, 7785, 7785, 1588, 850,
	-1000, 6333, 1103, 981, 12537, -1000, 6333, -1000, -1000, -1000,
	-1000, 12537, -1000, 7785, 1558, 1317, 1959, 1992, -1000, 1417,
	444, -299, -1000, -1000, 439, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1203, -1000, 67, -1000, -1000, -1000,
	-1000, -1000, -1000, -52, -1000, 20569, 1316, 20569, 20569, -303,
	-72, 1931, 1930, -1000, -1000, 229, 20569, 1415, 441, -1000,
	-1000, -1000, 22212, 526, -1000, 20569, 969, 402, 253, 402,
	962, 1572, -1000, -1000, -1000, 1314, -39, -1000, -1000, 1310,
	1307, 1138, -1000, -1000, 1231, 680, -30, -1000, -1000, -1000,
	-1000, -1000, -1000, 1563, 12537, 13009, 1305, 1410, 21041, 13481,
	15369, 712, -1000, 624, -1000, -1000, -1000, -1000, -1000, 1964,
	-1000, -1000, 1915, 20569, 4875, -1000, -1000, 6333, 1555, -1000,
	6333, -1000, -1000, -1000, -1000, -1000, -1000, 1302, -1000, 1301,
	-1000, -1000, 6333, 6333, -1000, -1000, 1131, -1000, -1000, -1000,
	1409, -1000, 374, 374, 3, -1000, -1000, -1000, 1513, -1000,
	1538, 1538, 1513, 1513, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1544, 1543, -1000, -1000, 1513, 1537, 1537,
	1513, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1539, 1539, 1540, 1539,
	-1000, 1545, -1000, -1000, -1000, -1000, -1000, 1541, 1474, 6333,
	-1000, -1000, -1000, -1000, -1000, -1000, 7785, -1000, -1000, -1000,
	-1000, 1131, 6333, 1407, -1000, 1513, 1538, -1000, 1513, 1537,
	1513, 374, 374, 1405, 1260, 1403, 2839, -1000, 1402, -1000,
	20569, -1000, 439, 438, -1000, -1000, -136, 51, -136, -305,
	1300, -1000, 1929, 1296, 1205, -1000, 1534, 22402, 8749, 877,
	-1000, -1000, 20569, 20569, -1000, 20569, 20569, 253, 6333, -1000,
	-1000, 182, -1000, -1000, 55, -1000, -1000, 1188, 313, -1000,
	14897, -1000, -1000, -1000, -1000, -1000, -69, 1964, 712, 624,
	-1000, -1000, 807, -1000, 1870, -1000, -1000, 1131, 20569, 1131,
	796, 795, 1131, 436, -1000, -1000, -1000, -1000, -1000, -11,
	-1000, -1000, -1000, -1000, 1137, -1000, 1136, -1000, -1000, -1000,
	1292, 1292, -1000, -1000, 1134, -1000, -1000, -1000, 1123, -1000,
	-1000, 1120, -1000, -1000, -1000, -1000, 1443, -1000, 1131, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6333,
	-1000, -1000, -1000, 433, -1000, -107, -77, -1000, 1291, -1000,
	-307, 1119, -1000, 1283, -75, -1000, -1000, 1819, 228, 22375,
	-1000, 865, 865, 422, 865, 865, 865, 865, 146, 141,
	865, 865, 865, 865, 865, 865, 865, 865, 865, 865,
	865, 865, 865, 865, 1529, -1000, -1000, 877, -1000, -1000,
	986, 7785, -1000, -1000, 1271, 13009, 480, 385, 1527, -1000,
	116, 1991, 949, 948, -1000, 20569, -1000, 1524, 1547, 80,
	1522, -1000, 1517, 1514, 20569, 1439, 255, 1269, -1000, -1000,
	50, -1000, -1000, 791, -1000, 1513, 6333, -1000, -136, 1915,
	-1000, -1000, 777, -1000, 1050, -1000, 1029, -1000, -1000, 1395,
	1394, 765, -1000, 763, 1386, 759, 758, -1000, 1368, 258,
	-131, -77, -1000, 1928, -81, 1920, 1918, 870, -1000, 1512,
	-1000, -1000, 1916, 229, -1000, 1913, 22402, -1000, 1097, 1090,
	865, 865, 1086, 1253, 1252, 1249, 865, 865, 1084, 1247,
	21432, 1079, 1078, 1074, 1164, 1242, 502, 1125, 1096, 1076,
	20569, 1510, 1201, -1000, -1000, 2032, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1073, 1507, -138,
	-1000, -1000, 1506, 14897, 115, 115, 14897, 14897, 14897, 1505,
	294, -1000, -53, -1000, -1000, -1000, 14897, 1807, 1330, -1000,
	1870, -1000, 1384, 1383, 1381, 1377, -1000, -1000, -1000, 1241,
	-1000, -1000, -1000, 1072, -1000, 1070, -1000, 1504, 1045, -72,
	1911, -1000, 1205, 1905, 1205, 1205, 1240, 20569, 1205, -1000,
	129, -1000, -1000, -1000, 12537, 12537, -1000, -1000, -1000, -1000,
	1238, 1211, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 181, 20569, 748, -1000, 869, 1376,
	6333, 1503, -229, 14897, 747, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 743, 742, 738, 14897, -1000, -1000, -1000, 126,
	-1000, 122, -1000, -1000, 1807, -1000, -1000, -1000, -1000, -1000,
	-1000, 1372, 1370, 1832, 12065, -96, -1000, 1207, -1000, 1205,
	-1000, -1000, -318, 737, -1000, -1000, 96, 171, 167, -1000,
	281, -1000, -1000, -1000, -1000, -1000, -1000, 184, 717, -1000,
	1201, 1199, -1000, 1309, -1000, 1700, -1000, -6, 716, -1000,
	-1000, -1000, -1000, 713, -1000, -1000, 865, 1154, 66, -1000,
	-1000, -1000, -1000, -1000, -1000, 20569, -1000, 690, -1000, -1000,
	-1000, 621, -1000, -1000, -1000, -1000, -1000, -1000, 20569, 94,
	1042, 7785, 1501, 7785, 1495, 109, 1488, -1000, -1000, -1000,
	-1000, -1000, 294, -1000, 1699, 1664, 1971, -1000, -1000, -1000,
	-1000, 122, 122, 122, 122, 6, 1028, -1000, 1198, 429,
	-1000, 864, -1000, 14425, 20569, -1000, 1480, 1888, -1000, 2268,
	20569, 1579, 20569, 1479, 860, 7785, -1000, -1000, 1985, -1000,
	1988, 459, 459, -1000, -1000, -1000, 20569, 4391, -1000, 462,
	-1000, 221, 98, -1000, 687, -1000, 679, 20569, 1012, 1214,
	-1000, -1000, -1000, 1027, 132, -1000, -1000, -1000, 1131, 20569,
	669, -1000, 1312, 86, -1000, -1000, 661, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 221, 1751, -1000, 994, -1000, -1000,
	1800, 323, -1000, -1000, 1800, 89, -1000, 206, 1478, -1000,
	-1000, 656, -1000, 1273, 388, 6333, -1000, 89, 22402, -1000,
	6333, 646, -1000, 22402, 486, -1000, -1000,
}

var yyPgo = [...]int{
	0, 123, 2351, 187, 132, 130, 186, 2350, 1921, 1909,
	2349, 2348, 2347, 2346, 2345, 2344, 2343, 2340, 2339, 2338,
	2337, 2335, 2333, 2332, 2331, 2330, 2329, 183, 2328, 2327,
	2326, 2325, 2323, 2322, 2319, 2318, 2317, 2316, 2315, 2314,
	2312, 2311, 2310, 2309, 121, 2308, 1885, 2307, 2306, 2304,
	2303, 2302, 168, 2300, 2299, 2298, 2296, 2295, 2293, 2292,
	2290, 2289, 2288, 2287, 2285, 2284, 2283, 2282, 2281, 184,
	177, 53, 2280, 47, 43, 110, 203, 61, 209, 204,
	141, 72, 135, 171, 118, 2279, 2276, 114, 2275, 26,
	2273, 136, 2272, 119, 45, 37, 200, 104, 50, 69,
	98, 2271, 2270, 85, 2267, 2264, 93, 2263, 57, 2262,
	81, 58, 91, 28, 2261, 2260, 2259, 80, 2257, 2256,
	2255, 2254, 84, 2252, 60, 64, 2248, 2246, 2245, 2244,
	2243, 42, 2242, 54, 2241, 2240, 2239, 2237, 2234, 2233,
	2232, 11, 17, 21, 2231, 14, 2, 2230, 164, 74,
	90, 106, 2229, 396, 2227, 2223, 2221, 120, 2220, 153,
	2217, 2210, 2209, 2208, 2205, 10, 2204, 49, 2203, 2202,
	2201, 52, 154, 157, 2200, 2199, 102, 34, 65, 101,
	2198, 2196, 76, 167, 16, 33, 0, 155, 40, 2194,
	2193, 2190, 210, 158, 152, 178, 89, 286, 147, 2186,
	2183, 63, 2182, 124, 2181, 66, 8, 2180, 113, 2179,
	95, 87, 2178, 111, 2176, 150, 1, 108, 25, 169,
	2174, 2173, 2172, 134, 2171, 2170, 75, 125, 2169, 2167,
	2166, 27, 2165, 29, 20, 2164, 86, 2162, 182, 2160,
	137, 100, 139, 127, 115, 172, 173, 71, 117, 1014,
	112, 82, 19, 2159, 174, 2144, 243, 176, 143, 2141,
	181, 371, 160, 2138, 138, 7, 2137, 2136, 9, 2135,
	23, 2132, 2131, 2130, 2129, 6, 2128, 2127, 2126, 4,
	3, 2125, 5, 116, 46, 68, 2124, 67, 70, 2104,
	2096, 2095, 2094, 2093, 206, 2092, 2091, 2090, 2089, 2087,
	2084, 2083, 2081, 83, 39, 2080, 2079, 2078, 2077, 73,
	105, 2075, 317, 156, 2074, 41, 2073, 2072, 24, 2071,
	31, 2069, 2068, 2067, 15, 142, 2065, 2064, 18, 2063,
	2062, 12, 13, 2061, 2060, 55, 48, 32, 79, 78,
	2059, 22, 59, 103, 2048, 2044, 140, 2035, 109, 2034,
	128, 179, 241, 2033, 161, 2030, 2029, 2028, 2027, 2026,
	2025, 2020, 1028, 2019, 2018, 180, 51, 170, 2017, 2016,
	146, 2015, 126, 97, 92, 159, 2014, 149, 2012, 2011,
	175, 151, 2008, 2007,
}

//line mysql_sql.y:7661
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 378, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 61, 60, 334, 334,
	333, 333, 332, 332, 331, 331, 331, 330, 330, 330,
	329, 329, 328, 328, 327, 327, 325, 325, 326, 324,
	323, 323, 323, 321, 321, 319, 319, 320, 320, 314,
	314, 317, 317, 315, 315, 315, 315, 318, 313, 313,
	313, 312, 312, 59, 59, 59, 251, 251, 58, 58,
	264, 264, 264, 264, 264, 262, 262, 262, 262, 262,
	262, 261, 261, 260, 260, 265, 265, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 53, 53, 53,
	53, 56, 56, 56, 57, 259, 259, 259, 54, 55,
	55, 250, 250, 255, 255, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 258, 258, 258,
	257, 257, 256, 256, 47, 47, 47, 50, 49, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 48, 48,
	48, 48, 48, 48, 45, 45, 45, 45, 45, 44,
	44, 46, 46, 248, 248, 247, 64, 64, 64, 64,
	64, 64, 64, 63, 63, 66, 66, 65, 52, 52,
	52, 52, 51, 51, 51, 51, 51, 51, 51, 51,
	51, 357, 357, 357, 359, 359, 190, 191, 379, 189,
	189, 189, 353, 353, 354, 355, 356, 356, 356, 62,
	7, 7, 42, 43, 377, 377, 294, 294, 203, 203,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 297, 298, 199, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 33, 33, 237, 237, 32, 380, 380, 173,
	173, 31, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 41, 308, 308, 382, 382, 382, 39, 40, 293,
	293, 293, 37, 36, 35, 34, 34, 30, 30, 29,
	29, 196, 196, 198, 198, 194, 381, 381, 270, 270,
	197, 197, 28, 28, 28, 195, 195, 172, 193, 193,
	193, 6, 10, 10, 10, 10, 10, 10, 10, 10,
	16, 18, 245, 245, 242, 17, 13, 12, 15, 11,
	14, 5, 5, 5, 5, 8, 8, 9, 82, 82,
	112, 112, 366, 366, 362, 362, 363, 363, 363, 364,
	364, 365, 365, 4, 301, 301, 301, 301, 301, 301,
	302, 302, 342, 342, 342, 343, 102, 102, 97, 97,
	303, 303, 217, 344, 344, 311, 311, 310, 310, 309,
	309, 100, 100, 101, 101, 86, 86, 70, 70, 316,
	316, 316, 316, 322, 322, 291, 291, 138, 138, 168,
	168, 169, 169, 74, 74, 75, 75, 75, 75, 75,
	75, 350, 350, 352, 352, 351, 99, 99, 95, 95,
	96, 96, 96, 94, 94, 93, 92, 92, 91, 89,
	89, 89, 90, 90, 90, 77, 77, 76, 76, 76,
	76, 76, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 78, 78, 358, 358, 358, 295,
	295, 295, 300, 300, 150, 150, 151, 151, 149, 149,
	79, 79, 80, 80, 80, 80, 148, 148, 147, 81,
	81, 87, 83, 83, 85, 85, 85, 85, 158, 158,
	157, 157, 157, 157, 67, 68, 68, 69, 105, 105,
	156, 155, 155, 155, 104, 104, 103, 103, 98, 98,
	84, 84, 84, 154, 88, 88, 88, 88, 88, 88,
	88, 88, 383, 383, 152, 182, 182, 182, 188, 188,
	181, 181, 181, 181, 181, 192, 187, 187, 183, 183,
	184, 184, 184, 3, 3, 3, 3, 22, 22, 22,
	22, 26, 26, 360, 360, 19, 367, 370, 368, 371,
	371, 371, 372, 372, 372, 373, 373, 20, 369, 374,
	374, 374, 246, 246, 243, 244, 244, 241, 240, 240,
	240, 376, 376, 375, 375, 375, 185, 185, 21, 236,
	236, 238, 239, 239, 230, 230, 230, 230, 25, 234,
	234, 235, 235, 235, 235, 235, 231, 231, 233, 233,
	229, 229, 229, 229, 229, 24, 228, 228, 226, 226,
	224, 224, 225, 225, 223, 223, 223, 227, 227, 23,
	23, 72, 71, 71, 71, 73, 296, 296, 266, 266,
	269, 269, 276, 276, 277, 277, 275, 275, 282, 282,
	281, 281, 280, 280, 279, 279, 278, 278, 278, 278,
	273, 273, 272, 272, 267, 267, 267, 267, 267, 268,
	268, 271, 271, 274, 274, 129, 129, 130, 130, 130,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 340,
	340, 341, 132, 132, 132, 136, 136, 136, 136, 136,
	136, 131, 131, 133, 133, 113, 113, 111, 111, 106,
	106, 107, 107, 108, 108, 109, 109, 110, 110, 110,
	110, 110, 110, 253, 253, 338, 338, 339, 339, 335,
	335, 335, 337, 337, 337, 337, 337, 336, 336, 114,
	166, 166, 166, 186, 186, 186, 165, 165, 165, 128,
	128, 127, 127, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 252, 252, 200,
	200, 201, 201, 145, 144, 144, 144, 144, 144, 142,
	143, 141, 141, 141, 141, 141, 140, 140, 139, 139,
	139, 232, 232, 137, 137, 135, 135, 135, 134, 134,
	134, 283, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 209, 209, 214, 214,
	349, 349, 348, 115, 115, 115, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 124, 124, 124, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 307, 307, 307, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 164,
	361, 361, 361, 345, 345, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 162, 162, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 218,
	218, 219, 219, 304, 304, 304, 304, 304, 304, 305,
	305, 306, 306, 306, 306, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 207, 159, 159, 159, 220, 215,
	215, 216, 216, 210, 210, 210, 210, 210, 210, 210,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	211, 211, 213, 213, 222, 222, 222, 221, 221, 221,
	221, 221, 221, 221, 126, 126, 126, 126, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 117, 117,
	117, 117, 121, 121, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 122, 122,
	122, 122, 120, 120, 120, 120, 120, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 119, 167, 167, 284, 284, 287, 287,
	285, 285, 286, 288, 288, 288, 289, 289, 289, 290,
	290, 290, 292, 292, 171, 171, 171, 178, 178, 170,
	170, 179, 179, 180, 180, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 9, 9, 0, 2,
	1, 3, 3, 3, 1, 3, 5, 0, 2, 3,
	1, 3, 1, 1, 1, 3, 1, 1, 1, 1,
	0, 3, 3, 0, 3, 0, 3, 0, 3, 0,
	2, 1, 2, 3, 4, 3, 3, 1, 0, 1,
	1, 0, 1, 8, 5, 7, 0, 3, 8, 5,
	1, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 4, 1, 3, 1, 2, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 2, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 6, 1, 1, 1, 2, 4,
	6, 1, 4, 1, 3, 3, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 0,
	1, 4, 2, 4, 1, 5, 3, 2, 1, 2,
	2, 4, 4, 5, 2, 1, 3, 4, 4, 1,
	2, 9, 7, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 7, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 5, 0, 2, 7, 0, 1, 0,
	1, 4, 1, 1, 1, 3, 2, 3, 1, 1,
	1, 6, 0, 1, 1, 1, 1, 5, 5, 0,
	1, 1, 3, 3, 3, 6, 7, 4, 4, 7,
	8, 0, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 1, 3, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 3, 1, 4, 6, 4, 4, 4,
	3, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 5, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 1, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 7, 7, 1, 1, 1, 0,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 2,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 4, 1, 3, 4, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 4, 2, 3, 4, 6, 8, 8, 4, 6,
	8, 8, 0, 1, 2, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 11, 0, 1, 7, 1, 4, 1, 3,
	4, 3, 0, 1, 1, 0, 2, 7, 1, 0,
	2, 2, 1, 3, 2, 1, 3, 2, 1, 3,
	2, 0, 1, 3, 4, 3, 1, 1, 4, 1,
	3, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 5, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 10,
	9, 2, 2, 6, 10, 5, 0, 1, 0, 6,
	0, 4, 0, 3, 1, 3, 4, 5, 0, 3,
	1, 3, 2, 3, 1, 2, 0, 4, 6, 5,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 6,
	5, 0, 3, 0, 1, 0, 1, 1, 3, 2,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 4, 1,
	3, 3, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 1, 7, 7, 7,
	7, 8, 5, 0, 1, 0, 1, 1, 1, 1,
	3, 3, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 5, 6, 4, 1, 2, 0,
	1, 1, 2, 5, 0, 1, 1, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 2,
	2, 0, 3, 0, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 3, 5,
	2, 2, 2, 2, 1, 1, 2, 5, 6, 6,
	6, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	1, 2, 4, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 5, 4,
	4, 5, 5, 5, 5, 4, 5, 5, 5, 5,
	5, 5, 5, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 5, 4, 6, 6, 7, 4, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 4, 2, 3, 2,
	4, 6, 2, 2, 4, 6, 4, 2, 2, 0,
	1, 2, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 1, 1, 3, 0, 1, 0, 3,
	0, 3, 3, 0, 3, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -378, -2, -1, -3, -4, -5, -6, -51, -63,
	-65, -66, -27, -7, -62, -44, -45, -47, -53, -58,
	-59, -60, -61, -67, -74, -22, -21, -20, -19, 12,
	-8, -9, -350, -10, -189, -190, -191, -379, -28, -29,
	-30, -34, -35, -36, -37, -39, -40, -41, -31, -32,
	-33, -43, -42, 206, -46, 61, -48, -49, -50, -54,
	-55, -56, -57, 320, 326, 378, 387, 46, -75, -77,
	-23, -24, -25, -26, 202, 14, 455, -11, -14, -12,
	-15, -13, -17, -18, -16, 224, 223, 37, 286, 287,
	324, 222, 203, 13, 135, 136, 138, 139, 30, -76,
	67, 204, -78, 10, 503, -86, 38, -111, -186, 70,
	-174, -177, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 302, 452,
	241, 265, 268, 275, 135, 154, 148, 176, 168, 143,
	245, 246, 77, 138, 409, 87, 394, 375, 141, 260,
	262, 264, 267, 247, 164, 159, 259, 243, 157, 248,
	39, 249, 181, 250, 251, 457, 390, 301, 396, 272,
	373, 158, 391, 263, 393, 183, 187, 401, 326, 152,
	153, 398, 403, 180, 221, 42, 454, 233, 404, 185,
	179, 175, 412, 276, 274, 178, 151, 174, 244, 50,
	189, 188, 190, 369, 370, 371, 372, 252, 253, 314,
	400, 171, 160, 305, 144, 22, 407, 228, 395, 327,
	254, 269, 277, 184, 186, 235, 240, 456, 377, 239,
	273, 405, 156, 232, 261, 227, 408, 145, 320, 329,
	255, 139, 266, 402, 411, 49, 342, 150, 142, 218,
	136, 237, 242, 256, 257, 258, 279, 278, 270, 172,
	234, 177, 162, 149, 173, 137, 236, 410, 343, 501,
	303, 358, 170, 167, 238, 211, 406, 397, 140, 362,
	344, 165, 280, 498, 499, 500, 315, 300, 281, 282,
	163, 225, 389, 283, 285, 368, 293, 345, 376, -46,
	-9, -8, -76, -77, -193, 23, 373, -52, 374, 206,
	67, -186, -5, -4, -44, -74, -192, -186, 286, -192,
	209, -186, 239, 357, -294, 214, -261, -236, 240, -260,
	-238, -263, -239, 31, 202, 204, 203, 236, 14, 324,
	210, 12, 10, 325, 222, 24, 25, 27, 13, 326,
	328, 28, 329, 332, 333, 334, 41, 337, 338, 229,
	70, 73, 247, 247, -68, -69, 496, -93, -94, -153,
	19, 6, 7, 8, 9, -296, 302, 358, 239, -230,
	-228, 283, 335, 219, 218, 88, 416, 208, -362, -363,
	199, 200, 201, -352, 448, -351, -186, 26, 209, -38,
	-308, -293, 397, 396, -197, 395, 388, 399, 390, 202,
	449, -171, 345, 376, 235, 413, 414, 322, 377, 401,
	402, 391, 87, 169, 166, 302, 358, -362, 140, 137,
	-249, 140, 93, 145, 144, -249, 239, 357, 40, -255,
	368, -254, -256, 401, 402, 412, 71, 72, 400, -171,
	-186, 87, -94, -153, -93, -75, -77, -350, 302, 358,
	239, 210, 209, 211, 416, 286, -295, -358, 31, -300,
	196, 197, 198, 32, 33, -1, -100, 231, -111, 133,
	-94, -93, -94, -165, -186, 375, 103, -52, -52, 374,
	-353, -354, -355, -357, 206, 374, 373, 133, 15, -192,
	65, -111, -238, 239, -261, -236, 35, 64, 134, 212,
	134, 64, 67, 322, 302, 358, 323, 416, 209, 335,
	211, 239, 336, 302, 358, 209, 211, 416, 239, 302,
	209, 211, 358, 239, 336, 388, 389, 211, 26, 327,
	330, 331, 389, -312, 412, -312, -94, 134, 67, -70,
	38, -96, 21, -78, -77, 20, 31, 32, 31, 32,
	31, 32, 31, 32, -360, 209, 448, -226, 214, -226,
	-226, 210, -226, 209, -364, 147, 134, -352, -99, 67,
	23, 237, -196, 111, -382, 210, 398, 42, 238, 237,
	-95, -96, -95, 392, 389, -270, 393, 394, -197, -196,
	-196, -197, 209, 211, 416, -380, -381, 15, 113, 237,
	-380, 30, 30, -294, -294, -365, 213, 405, 455, 143,
	144, 145, -238, 239, 239, 134, 103, 23, -257, 103,
	114, -256, -256, -256, -257, -257, -131, 40, -185, 130,
	-186, 73, -131, 40, 133, -95, -78, -77, 68, 68,
	-294, -294, -294, -294, -294, -294, -294, -192, -79, -80,
	121, -210, -186, 94, 230, -212, 70, -205, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 87, 373, 314, 162, 358, 165, 315,
	163, 225, 368, -206, -208, -331, -325, -204, 67, 119,
	120, 127, 95, -207, -283, 35, 97, 424, -160, -161,
	-162, -163, -164, -326, -324, 73, 78, 81, 84, 85,
	83, 82, 161, 80, 74, 132, -77, -345, -175, 46,
	-299, -306, 208, -304, 166, 12, 125, 130, -307, 494,
	72, 71, 495, 308, 309, 310, 416, 304, 311, 214,
	55, 312, 313, 316, 423, 317, 56, 318, 307, 229,
	319, 182, 427, 426, 428, 420, 417, 415, 418, 419,
	421, 422, -79, -301, 46, -74, 67, 30, 67, -186,
	-95, -70, -96, 133, 78, 73, -52, 68, 134, -356,
	84, 85, -359, 180, 172, -186, -64, 73, -3, -4,
	-5, -6, -27, -44, -74, -327, -325, 67, 31, 367,
	64, 15, -262, 209, 416, 321, 235, 211, 302, -260,
	-245, -242, -240, -185, -238, -241, -240, -265, -165, 389,
	-71, 379, -71, -95, -69, -310, -309, -210, 40, -186,
	497, -70, -210, -92, -91, -210, 211, -226, -367, 70,
	94, -246, -243, -240, -236, -184, 70, 71, 72, -186,
	-226, -365, -351, 34, -98, -186, -240, -380, -149, 16,
	-208, -381, -196, -196, -198, -381, -194, -381, 389, -149,
	-149, -270, -195, -186, -195, -226, -173, -172, -186, -173,
	-367, -246, -83, -81, -84, -85, -87, -152, -154, -88,
	-111, 67, 495, 406, 407, 141, 144, 143, 31, 367,
	-259, 367, 31, -236, -254, -250, 73, 368, -241, -258,
	64, 130, -309, -257, -257, -257, -258, -258, 129, -186,
	-70, -367, -245, -236, -186, -113, -111, -113, -187, -184,
	-177, -148, 134, -147, 15, -181, 93, 90, 91, 92,
	-186, 34, 73, 133, -210, 110, -221, 103, 104, 105,
	106, 107, 108, 109, 67, 67, 67, 67, 67, 67,
	67, 67, -219, 67, 67, 67, 67, 67, 67, 67,
	-219, 67, 67, 67, 67, 67, 73, 73, 73, 67,
	116, 115, 126, 119, 120, 121, 122, 123, 124, 125,
	117, 118, 113, 94, 111, 112, 96, -77, -210, -216,
	-208, -208, -208, -208, -283, -214, -210, 67, -210, 67,
	67, 67, 67, -305, 67, 67, -218, -219, 67, 67,
	67, -208, 67, 67, -148, -302, 64, -303, -217, -344,
	496, -102, 68, -97, -186, -342, -343, -97, -101, -186,
	-70, -70, -179, -180, -170, -176, -183, -184, -177, 207,
	31, 93, 34, 36, 308, 340, 96, 130, 20, 97,
	166, 129, 310, 424, 309, 202, 59, 426, 428, 427,
	417, 415, 360, 364, 366, 363, 416, 388, 40, 14,
	37, 223, 32, 33, 123, 204, 100, 101, 226, 35,
	224, 85, 44, 23, 62, 15, 17, 18, 311, 359,
	214, 213, 113, 379, 210, 57, 12, 132, 38, 110,
	361, 53, 89, 45, 55, 111, 21, 418, 419, 41,
	378, 387, 451, 230, 125, 312, 313, 60, 94, 367,
	83, 43, 64, 90, 19, 58, 112, 205, 423, 56,
	365, 316, 318, 328, 448, 317, 208, 399, 10, 307,
	425, 30, 222, 54, 209, 99, 212, 84, 229, 6,
	88, 13, 61, 65, 420, 421, 422, 46, 98, 16,
	319, 455, 380, 381, 382, 383, 384, 385, 386, 191,
	192, 193, 194, 195, 271, 217, 215, 219, 220, 496,
	497, 196, 197, 297, 299, 169, 199, 200, 201, 231,
	147, 7, 346, 347, 348, 349, 351, 352, 353, 354,
	355, 356, 357, 23, -52, -354, 133, 134, -98, -262,
	-244, -241, -264, 121, 70, -251, 134, 455, 504, 71,
	212, -376, -375, 359, 68, 134, -313, 213, 423, 73,
	505, -313, 134, 68, 133, 73, 134, 22, 134, -89,
	36, 37, -111, 214, -111, -370, 346, 35, -377, 134,
	40, -375, -229, 65, -224, -225, -223, -227, 40, -111,
	15, -82, -112, -186, 67, 68, 134, -237, 65, -173,
	-210, -111, -149, -149, -196, -187, -198, -193, -198, -194,
	133, -172, -370, -377, 30, -155, -156, -157, -158, 53,
	57, 59, 54, 55, 56, 60, 30, 134, -383, 34,
	-182, -188, 34, -183, 73, -184, -177, -182, -75, -77,
	67, 142, 145, 145, 144, 212, 67, 103, -258, -258,
	-258, 40, -185, 64, 134, -149, -80, -81, -83, -210,
	-210, -210, -210, -186, 73, -186, 121, 83, 94, 300,
	84, 85, -205, -222, 31, 281, 282, -215, -216, -210,
	-159, 32, 31, -159, -159, -210, -159, 121, -216, -216,
	68, 78, -346, -347, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 312, 307, 313, 311, 304,
	319, 314, 315, 165, 446, 447, 440, 441, 442, 443,
	444, 445, -159, -159, -159, -159, -159, -210, -361, 298,
	297, 299, -159, -159, -159, -159, -215, -206, -206, -206,
	-206, -206, -206, -206, -206, -206, -206, -206, -206, -213,
	-220, -283, 67, 113, 111, 112, 96, -208, -206, -206,
	68, 134, -349, -348, 98, -210, -346, -215, -210, -215,
	-97, -215, 68, 68, -216, -215, -206, -159, 73, -149,
	39, 134, 67, 68, 134, 46, 133, 134, 103, 68,
	134, 133, 375, -186, -325, 68, -264, 134, 212, 133,
	133, -242, 326, -185, -244, 20, 455, -165, 38, 73,
	38, -309, -186, -316, 393, -210, -210, -91, -90, 43,
	-99, 94, 67, -372, 395, 348, -178, 103, -203, -202,
	303, 41, -297, 368, 354, 355, -243, 239, 64, 292,
	293, 294, 295, -223, -171, 129, 250, 67, -111, -82,
	-186, 15, 134, -366, 133, -1, -186, -236, -196, -149,
	-149, -196, -196, -198, -186, -372, -203, -248, -247, -165,
	-84, -84, -84, -84, 53, 53, 53, 58, 53, 58,
	53, -157, -248, -87, -186, -188, 68, 73, -165, 145,
	-244, -199, 73, -250, -111, -111, -151, 17, 133, 83,
	300, 84, 85, -283, 68, 134, -210, -210, -210, 34,
	-216, 68, 68, 68, 68, 15, -210, -210, -210, -210,
	-210, 68, 15, 15, -210, -210, -210, -210, -210, 68,
	-216, -213, -208, -206, -206, -211, 226, 93, -210, -209,
	-348, 100, -210, 134, 65, 68, 15, 68, 68, 68,
	68, 65, 68, 134, -210, 134, -151, 89, -217, -311,
	-310, 46, -74, -97, -303, -186, -343, -309, -186, -179,
	-176, -184, -177, 78, 15, -241, -236, 121, 121, 70,
	327, -251, 73, 347, 73, 209, 103, 209, 133, -322,
	385, 380, 382, 44, 45, 34, 35, -106, -107, -108,
	-114, -109, -165, -201, -110, 217, 215, 219, -339, 88,
	220, 271, 89, 210, -373, 77, -368, 73, -374, 77,
	349, 132, 305, 40, 350, 351, 365, 301, 78, 78,
	356, -369, 70, -111, -178, -178, -178, -106, -100, 65,
	133, -81, -112, -186, 121, 68, -149, -149, -149, -196,
	-373, -374, -149, 134, 103, -104, -103, 64, 65, -105,
	64, -103, 53, 53, -149, -99, 68, 134, 68, 134,
	68, -150, 18, 20, -186, 121, -210, 68, 68, 68,
	-115, -117, 342, 343, -121, -118, -120, -119, -123, -122,
	166, 167, 130, 170, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 30, 182, 225, 162, 163, 164,
	165, 183, 148, 168, 453, 191, 149, 192, 150, 193,
	151, 194, 152, 153, 195, 154, 157, 158, 159, 156,
	68, -210, 68, 68, 68, 68, 68, -210, -210, 15,
	68, 68, 68, 68, 68, -211, 93, -208, -205, 68,
	101, -210, 99, -116, -122, 130, 166, 225, 165, 164,
	162, 342, 343, -131, -210, -131, -206, 68, 73, -150,
	13, 68, -303, -236, -251, 368, -111, 73, -111, -291,
	498, -320, 380, 20, 20, -74, -111, 68, 134, -117,
	-110, -186, 89, -338, -339, -226, -338, 89, 67, 73,
	-371, 359, 73, 73, 78, 40, 78, 132, 352, -298,
	67, -131, -133, -185, 130, 73, 68, -182, -81, -186,
	-149, -366, 133, -149, -94, -247, -309, -210, 67, -210,
	73, 73, -210, -216, 68, -124, 153, 152, -124, -290,
	343, 342, -284, -286, 67, -285, 67, -285, -284, -284,
	67, 67, -284, -287, 67, -287, -284, -288, 67, -288,
	-289, 67, -288, 68, 68, 68, -210, -205, -210, 68,
	-284, -285, -284, -287, -284, -124, -124, 68, 68, 23,
	68, 68, 68, -342, -73, -314, -270, 506, 134, -73,
	-138, 499, 73, 20, 73, -318, 73, -99, -129, -130,
	-146, 340, 241, -227, 245, 77, 246, 375, 247, 210,
	249, 250, 251, 221, 252, 253, 254, 368, 255, 256,
	257, 258, 323, 6, 288, -108, -128, -127, -125, 83,
	94, 40, 340, -126, 77, 129, 264, 242, 265, -145,
	-200, 64, 215, 88, 89, 328, -201, -335, -336, -186,
	-336, -186, -335, -335, -226, -210, 20, 455, 304, 40,
	78, 40, 353, -231, -233, -165, 67, -72, -71, -149,
	-149, -95, -98, 68, 134, 68, 134, -292, 344, 78,
	78, -167, 73, -167, 78, 78, 78, 68, -210, -321,
	385, -317, -315, 380, 381, 382, 383, 73, -168, 500,
	78, 73, 382, 34, -266, 231, 134, -146, -178, -178,
	-171, 129, -178, -178, -178, -178, 248, 248, -178, -178,
	-178, -178, -178, -178, -178, -178, -178, -178, -178, -178,
	-178, -178, 67, -125, 83, -206, 73, -133, -134, 40,
	263, 259, -135, 40, 243, 244, -137, 67, 271, 13,
	89, 89, -111, 67, 65, 280, 67, 67, 67, -336,
	68, 73, 347, 73, 304, 68, 134, -284, -210, -73,
	-94, 68, 84, 85, 84, 85, 68, 68, 68, 134,
	68, 68, 68, 134, 68, 134, 68, -323, 213, -319,
	384, -315, 20, 382, 20, 20, 103, 67, 20, -74,
	20, -146, 78, 78, -178, -178, 78, 73, 73, 73,
	-178, -178, 78, 73, -188, 78, 78, 78, 78, 40,
	73, -136, 40, 259, 263, 260, 261, 262, 78, 40,
	78, 40, 78, 40, -186, 67, -340, -341, 73, 78,
	67, -304, -232, 67, -231, -337, 292, 293, 294, 296,
	295, -337, -231, -231, -231, 67, -253, -252, 272, 94,
	368, -234, -233, -89, 68, -95, 68, 68, 68, 68,
	73, 78, 78, -330, 67, 78, -320, 20, -318, 20,
	-318, -318, 73, -169, -186, -318, -267, 273, 274, -268,
	-274, 276, -131, -131, 73, 73, -132, 242, -113, 68,
	134, 103, 68, -210, -218, -140, -139, 451, -231, 68,
	68, 68, 68, -231, 272, -235, 221, 77, 455, 290,
	291, -89, 68, 68, -334, 30, 68, -329, -328, -166,
	-324, -186, 385, 386, 73, -318, 506, 68, 134, -272,
	277, 67, -270, 67, -270, 89, 293, 243, 244, 68,
	-341, 73, 68, -144, -142, -143, 64, 391, 269, 270,
	68, -234, -234, -234, -234, 68, -178, 73, 289, -333,
	-332, -331, 68, 134, 133, -186, -269, 278, 78, -206,
	67, -206, 67, -271, 275, 67, -252, -143, 64, -142,
	64, 14, 13, -145, 78, -184, 134, 103, -328, -186,
	-276, 67, 20, 68, -265, 68, -265, 67, 103, -206,
	-141, 266, 267, 30, 144, -141, -332, 40, -210, 133,
	-277, -275, 231, -268, 68, 68, -265, 78, 68, 83,
	40, 268, -186, 68, 134, 70, -273, 279, 68, -275,
	-278, 46, 78, -282, -279, 67, -146, 233, 113, -282,
	-146, -281, -280, 278, 234, 67, 68, 134, 70, 230,
	67, -216, -280, -279, -216, 68, 68,
}

var yyDef = [...]int{
	25, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 593, 594, 595, 596, 0,
	381, 382, 0, 361, 0, 0, 0, 0, 289, 290,
	291, 292, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 260, 261, 0, 209, 205, 184, 185, 186, 147,
	148, 149, 150, 266, 0, 0, 0, 0, 453, -2,
	597, 598, 599, 600, -2, 394, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 249, 250, 251, 246, 247,
	248, -2, 0, 394, 198, 0, 189, 189, 0, 473,
	0, 0, 487, 509, 25, 431, 0, 436, 777, 813,
	814, 815, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 210,
	383, 384, 473, 473, 232, 0, 1401, 236, 0, 0,
	0, 358, 228, 229, 230, 231, 0, 585, 0, 225,
	0, 204, 1460, 0, 0, 0, 0, 0, 0, 91,
	639, 93, 641, 97, 104, 0, 0, 109, 110, 113,
	114, 115, 116, 117, 0, 121, 0, 123, 126, 0,
	128, 129, 0, 132, 133, 134, 0, 144, 145, 146,
	642, 643, 71, 71, 473, 545, 0, -2, 0, 0,
	0, 492, 495, 498, 501, 603, 668, 668, 668, 0,
	668, 0, 687, 645, 646, 647, 666, 667, 399, 395,
	396, 397, 398, 461, 0, 463, 466, 302, 0, 341,
	0, 0, 468, 468, 0, 350, 341, 341, -2, 0,
	312, 313, 314, 307, 0, 307, 318, 319, 320, 330,
	331, 351, 1184, 0, 0, 266, 266, 401, 199, 200,
	188, 190, 0, 194, 0, 187, 1460, 0, 0, 158,
	1526, 163, 0, 1408, 1474, 1423, 0, 0, 1441, 0,
	182, -2, 468, 0, 474, 0, 473, 0, 266, 266,
	266, 266, 266, 266, 266, 0, 0, 0, 510, 511,
	506, 507, 508, 512, 513, 3, 0, 0, 435, 0,
	468, -2, 0, 233, 816, 0, 0, 237, 238, 0,
	0, 252, 0, 255, 241, 242, 243, 0, 0, 227,
	0, 0, 206, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 101, 98, 105, 108, 118, 125, 0,
	137, 139, 142, 99, 106, 111, 112, 119, 140, 100,
	102, 103, 107, 141, 143, 120, 124, 138, 122, 127,
	130, 131, 136, 0, 72, 0, 468, 0, 0, 456,
	0, 437, 0, 489, 491, 0, 493, 494, 496, 497,
	499, 500, 502, 503, 0, 668, 604, 0, 0, 0,
	0, 0, 0, 668, 401, 400, 0, 462, 0, 0,
	0, 307, 518, 0, 0, 324, 325, 326, 341, 341,
	332, 469, 333, 334, 343, 0, 348, 349, 0, 518,
	518, 0, 0, 0, 668, 309, 308, 346, 347, 316,
	309, 1185, 1186, 0, 0, 0, 402, 0, 0, 192,
	0, 197, 151, 0, 0, 0, 0, 0, 0, 180,
	181, 0, 0, 0, 0, 0, 171, 174, 771, 772,
	636, 637, 175, 176, 0, 437, 488, 490, 485, 486,
	0, 0, 0, 0, 0, 0, 0, 380, 526, 520,
	522, 580, 34, 0, 1068, 1069, 813, 1080, -2, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, -2, 1550, -2, -2,
	1553, 1554, 1555, 1557, -2, -2, -2, -2, -2, -2,
	1564, -2, -2, -2, 1568, 1569, -2, -2, 1572, 1573,
	1574, 1575, 1576, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1526, 1089, 884, 885, 886, 887, 0, 0,
	0, 0, 0, 894, 895, 0, 908, 0, 901, 902,
	903, 904, 905, 46, 47, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1034, 871, 0, 0, 0,
	0, 1019, 0, 1009, 0, 0, 0, 0, 0, 0,
	48, 49, 1540, 1025, 1027, 1028, 1030, 1031, 1032, 1033,
	1036, 1037, 1038, 1041, 1042, 1043, 1044, 1045, 1046, 1049,
	1051, 1053, 1021, 1022, 1023, 1024, 1013, 1014, 1015, 1016,
	1017, 1018, 526, 410, 423, 405, 0, 412, 0, 778,
	437, 459, 437, 0, 234, 0, 239, 0, 0, 254,
	256, 257, 258, 244, 245, 359, 223, 224, 216, 217,
	218, 219, 220, 221, 222, 226, 44, 0, 207, 208,
	0, 0, 0, 85, 86, 87, 88, 89, 90, 92,
	76, 372, 374, 628, 640, 0, 631, 0, 95, 135,
	68, 0, 68, 544, 546, 0, 427, 429, 430, 34,
	0, 457, 470, 475, 476, 479, 0, 0, 0, 606,
	0, 264, 622, 0, 638, 660, 590, 591, 592, -2,
	0, 0, 464, 0, 0, 558, 304, 309, 311, 0,
	342, 0, 518, 518, 341, 0, 343, 0, 343, 337,
	338, 0, 352, 355, 353, 0, 315, 310, 357, 317,
	0, 264, 531, 0, 532, 533, 529, 560, 572, 575,
	575, 0, 0, 201, 202, 0, 0, 196, 152, 153,
	0, 155, 156, 157, 164, 159, 161, 0, 0, 165,
	177, 178, 179, 0, 0, 0, 169, 170, 0, 183,
	455, 370, 371, 375, 0, 377, 775, 378, 379, 586,
	587, 518, 0, 527, 0, 523, 0, 0, 0, 0,
	581, 0, 583, 0, 1067, 0, 0, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1059, 1055, 1055, 1055, 0, 1055,
	0, 0, 994, 0, 0, 1055, 1055, 1055, 1055, 1055,
	995, 0, 1055, 1055, 1055, 1055, 1003, 1008, 1002, 1059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1061, 0,
	890, 891, 892, 893, 896, 0, 909, 0, 0, 1059,
	1059, 0, 1059, 997, 0, 0, 999, 1010, 0, 1059,
	0, 1007, 1055, 0, 518, 403, 0, 404, 420, 0,
	424, 0, 0, 416, 418, 409, 413, 0, 0, 433,
	458, 460, 817, 0, 1191, -2, 1193, -2, -2, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 0, 240, 253, 0, 0, 0, 0,
	79, 625, 0, 80, 84, 74, 0, 0, 0, 630,
	0, 627, 632, 0, 94, 0, 0, 69, 70, 682,
	0, 0, 0, 547, 0, 439, 0, 0, 0, 482,
	480, 481, 466, 0, 0, 612, 1187, 669, 268, 0,
	0, 624, 0, 0, 665, -2, 672, 0, 678, 0,
	0, 0, 388, 392, 25, 467, 0, 303, 0, 341,
	519, 518, 327, 328, 518, 344, 341, 345, 341, 343,
	0, 354, 612, 268, 0, 0, 0, 0, 0, 551,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 573,
	562, 576, 0, 578, 579, 588, 589, 574, 0, 473,
	0, 203, 191, 193, 0, 0, 0, 0, 166, 167,
	168, 172, 173, 0, 0, 516, 521, 528, 531, 1063,
	1064, 1065, 1066, 582, 584, 35, 524, 1070, 0, 1072,
	1074, 1076, 1078, 0, 1094, -2, -2, 0, 1060, 1061,
	0, 1056, 1057, 0, 0, 0, 0, 0, 0, 0,
	1011, 0, 0, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 0, 0, 0, 0, 0, 0, 0, 960,
	961, 962, 0, 0, 0, 0, 0, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 1081,
	1092, 1093, 0, 0, 0, 0, 0, 1090, 1085, 0,
	888, 0, 906, 910, 0, 0, 1054, 0, 1061, 0,
	0, 0, 1020, 998, 0, 0, 0, 0, 0, 516,
	0, 423, 425, 0, 0, 423, 0, 0, 0, 432,
	0, 0, 0, 360, 45, 259, 0, 0, 0, 0,
	0, 373, 0, 629, 76, 0, 0, 96, 0, 0,
	0, 428, 35, 443, 0, 471, 472, 477, 478, 0,
	0, 0, 779, 615, 613, 614, 0, 1188, 619, 269,
	270, 271, 272, 0, 0, 0, 623, 0, 0, 661,
	662, 663, 664, 673, 1187, 1187, 1187, 779, 431, 0,
	-2, 0, 0, 390, 0, 0, 559, 305, 518, 321,
	335, 518, 518, 341, 356, 615, 619, 518, 213, 0,
	554, 548, 0, 537, 552, 553, 540, 0, 542, 0,
	538, 539, 518, 530, 466, 577, 563, 0, 0, 195,
	154, 0, 288, 160, 376, 776, 514, 0, 0, 1071,
	1073, 1075, 1077, 1079, 946, 0, 0, 0, 0, 0,
	0, 935, 929, 930, 1012, 0, 0, 0, 0, 0,
	0, 954, 0, 0, 0, 0, 0, 0, 0, 1006,
	0, 1082, 1090, 1086, 0, 1083, 0, 0, 1062, 0,
	911, 0, 0, 0, 0, 947, 0, 951, 958, 996,
	1000, 0, 1004, 0, 0, 0, 514, 0, 421, 0,
	426, 423, 408, 417, 407, 419, 414, 415, 434, 818,
	1192, 1189, 1190, 235, 0, 626, 76, 81, 82, 83,
	77, 75, 633, 0, 635, 0, 0, 0, 0, 445,
	57, 0, 0, 483, 484, 0, 0, 0, 780, 781,
	783, 784, 0, 0, 786, 841, 0, 795, 668, 795,
	0, 0, 797, 798, 605, 0, 0, 608, 617, 0,
	0, 0, 274, 275, 0, 0, 0, 287, 283, 284,
	285, 265, 618, 0, 0, 0, 0, 0, 575, 0,
	0, 518, 389, 392, 393, 465, 306, 339, 336, 518,
	262, 263, 473, 0, 0, 534, 555, 0, 0, 535,
	0, 536, 541, 543, 212, 561, 564, 0, 568, 0,
	162, 504, 0, 0, 36, 525, 1062, 931, 932, 933,
	0, 913, 925, 925, 1179, 1119, 1120, 1121, 1166, 1123,
	1170, 1170, 1166, 1166, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 0, 0, 1162, 1142, 1166, 1168, 1168,
	1166, 1163, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 1135, 1136, 1137, 1173, 1173, 1176, 1173,
	934, 0, 953, 936, 937, 940, 938, 0, 0, 0,
	952, 941, 942, 928, 1058, 1084, 0, 1091, 1087, 889,
	897, 907, 0, 0, 916, 1166, 1170, 919, 1166, 1168,
	1166, 925, 925, 0, 0, 0, 0, 939, 0, 505,
	412, 422, 406, 78, 73, 634, 59, 0, 59, 447,
	0, 444, 0, 0, 0, 601, 466, -2, 0, -2,
	785, 842, 807, 807, 796, 807, 807, 668, 0, 616,
	607, 0, 620, 621, 0, 276, 277, 0, 280, 286,
	0, 674, 675, 773, 774, 676, 0, 518, 518, -2,
	386, 391, 0, 340, 468, 214, 215, 556, 0, 549,
	0, 0, 515, 517, 898, 914, 926, 927, 915, 1182,
	1180, 1181, 1122, 1167, 0, 1147, 0, 1148, 1149, 1150,
	0, 0, 1143, 1144, 0, 1145, 1146, 1138, 0, 1139,
	1140, 0, 1141, 950, 955, 956, 0, 1088, 912, 899,
	917, 918, 920, 921, 922, 923, 924, 900, 948, 0,
	1001, 1005, 959, 411, 27, 53, 0, 683, 0, 26,
	449, 0, 446, 0, 440, 442, 67, 0, 688, -2,
	727, 1187, 1187, 0, 1187, 1187, 1187, 1187, 0, 0,
	1187, 1187, 1187, 1187, 1187, 1187, 1187, 1187, 1187, 1187,
	1187, 1187, 1187, 1187, 0, 782, 809, -2, 821, 823,
	0, 0, 826, 827, 0, 0, 0, 0, 863, 833,
	0, 0, 0, 1106, 1107, 0, 840, 0, 799, 808,
	0, 808, 0, 0, 807, 0, 0, 0, 273, 278,
	0, 281, 282, 0, 656, 1166, 0, 680, 59, 473,
	387, 211, 0, 565, 0, 569, 0, 1118, 1183, 0,
	0, 0, 1164, 0, 0, 0, 0, 957, 0, 50,
	55, 60, 61, 0, 0, 0, 0, 0, 438, 0,
	448, 58, 0, 0, 679, 0, 677, 729, 0, 0,
	1187, 1187, 0, 0, 0, 0, 1187, 1187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 822, 824, 825, 828, 829, 830, 868,
	869, 870, 831, 865, 866, 867, 832, 0, 0, 0,
	1104, 1105, 861, 0, 0, 0, 0, 0, 0, 0,
	793, 609, 0, 611, 279, 649, 0, 479, 0, 681,
	468, 557, 0, 0, 0, 0, 1172, 1171, 1160, 0,
	1161, 1169, 1174, 0, 1177, 0, 949, 37, 0, 57,
	0, 62, 0, 0, 0, 0, 0, 0, 0, 602,
	723, 728, 730, 731, 0, 0, 734, 735, 736, 737,
	0, 0, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 765, 766, 767, 768, 769, 770, 750, 751,
	752, 753, 754, 755, 762, 0, 0, 759, 0, 0,
	0, 1009, 856, 0, 0, 800, 802, 803, 804, 805,
	806, 801, 0, 0, 0, 0, 792, 794, 837, 0,
	610, 648, 657, 658, 479, 385, 566, 567, 570, 571,
	1165, 0, 0, 28, 0, 0, 54, 0, 63, 0,
	65, 66, 0, 0, 451, 441, 712, 0, 0, 718,
	0, 724, 732, 733, 738, 739, 756, 0, 0, 758,
	0, 0, 864, 0, 836, 844, 857, 0, 0, 649,
	649, 649, 649, 0, 838, 650, 1187, 0, 0, 654,
	655, 659, 1175, 1178, 685, 0, 38, 0, 40, 42,
	43, 810, 51, 52, 56, 64, 684, 450, 0, 690,
	0, 0, 0, 0, 0, 721, 0, 763, 764, 757,
	760, 761, 834, 843, 845, 846, 0, 858, 859, 860,
	862, 787, 788, 789, 790, 0, 0, 652, 0, 29,
	30, 0, 39, 0, 0, 452, 692, 0, 713, 0,
	0, 0, 0, 0, 0, 0, 835, 847, 0, 848,
	0, 0, 0, 791, 651, 653, 0, 0, 41, 811,
	689, 0, 723, 714, 0, 716, 0, 0, 0, 0,
	849, 851, 852, 0, 0, 850, 31, 32, 33, 0,
	0, 694, 0, 710, 715, 717, 0, 722, 720, 853,
	855, 854, 812, 693, 0, 706, 691, 0, 719, 695,
	-2, 0, 711, 696, -2, 0, 704, 0, 0, 697,
	705, 0, 700, 0, 0, 0, 699, 0, -2, 707,
	0, 0, 701, -2, 0, 709, 708,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 503,
	104, 103, 105, 3, 504, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 505, 115, 506, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:555
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:561
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:589
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:593
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:599
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:611
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:626
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:632
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:636
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:642
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:649
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:658
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:662
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:666
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:671
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:679
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:685
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:694
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:705
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:709
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:715
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:719
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:725
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:729
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:735
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:759
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:778
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:782
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:786
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:795
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:803
		{
			yyVAL.str = ""
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:807
		{
			yyVAL.str = yyDollar[3].str
		}
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:812
		{
			yyVAL.str = "\n"
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:816
		{
			yyVAL.str = yyDollar[3].str
		}
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:825
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:849
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:853
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:859
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:865
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:883
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:900
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:923
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:927
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:931
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:940
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:946
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:959
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:970
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:983
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:987
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:997
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1010
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1023
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1029
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1035
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1042
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1050
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1059
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1063
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1067
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1071
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1075
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1079
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1086
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1090
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1096
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1103
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1112
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1116
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1122
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1126
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1130
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1134
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1138
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1142
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1146
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1150
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1154
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1158
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1162
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1166
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1170
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1174
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1178
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1182
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1186
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1190
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1194
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1198
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1202
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1206
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1210
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1214
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1218
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1222
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1226
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1230
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1234
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1238
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1242
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1246
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1250
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1254
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1258
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1262
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1266
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1270
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1274
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1302
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1306
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1310
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1314
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1318
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1330
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1337
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1344
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1353
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1383
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1387
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1391
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1397
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1403
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1407
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1414
		{
			yyVAL.str = yyDollar[3].str
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1420
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1424
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1430
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1438
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1447
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1455
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1463
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1486
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1509
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1523
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1531
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1554
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1558
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1562
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1568
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1572
		{
			yyVAL.str = yyDollar[1].str
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1579
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1590
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1596
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1633
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1639
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1643
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1647
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1651
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1656
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1661
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1667
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1674
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1680
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1687
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1694
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1704
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1711
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1722
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1737
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1743
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1755
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1790
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1796
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1800
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1816
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1824
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1832
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1842
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1880
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1884
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1890
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1896
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1901
		{
			yyVAL.str = "true"
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1902
		{
			yyVAL.str = "false"
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1903
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1908
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1919
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1931
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1946
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1951
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1955
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1964
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1980
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1984
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1992
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1996
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2000
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2004
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2008
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2012
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2020
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2024
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2028
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2032
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2036
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2040
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2046
		{
			yyVAL.item = nil
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2051
		{
			yyVAL.item = nil
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2075
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2079
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2088
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2094
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2099
		{
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2103
		{
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2108
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2117
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2121
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2125
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2129
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2133
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2137
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2141
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2149
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2155
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2163
		{
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2165
		{
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2184
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2197
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2207
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2213
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2219
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2225
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2235
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2247
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2251
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2282
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2286
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2291
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2295
		{
			yyVAL.str = yyDollar[2].str
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2301
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2314
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2318
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2339
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2343
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2352
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2356
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2360
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2379
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2397
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2401
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2407
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2416
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2425
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2435
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2441
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2447
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2453
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2502
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2513
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2517
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2523
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2528
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2535
		{
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2537
		{
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2540
		{
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2549
		{
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2553
		{
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2568
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2575
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2581
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2589
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2603
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2626
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2645
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2649
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2653
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2659
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2668
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2672
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2678
		{
			yyVAL.str = yyDollar[1].str
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2682
		{
			yyVAL.str = yyDollar[3].str
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2688
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2692
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2698
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2703
		{
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2714
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2718
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2725
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2734
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2740
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2744
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2750
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2754
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2763
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2776
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2783
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2790
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2808
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2827
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2833
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2840
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2844
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2857
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2861
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2866
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2870
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2877
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2882
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2895
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2899
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2903
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2915
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2937
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2941
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2959
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2968
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2974
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2978
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2982
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2987
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2991
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2997
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3003
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3007
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3013
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3018
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3022
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3026
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3031
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3035
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3039
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3045
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3049
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3055
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3069
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3089
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3101
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3126
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3134
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3142
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3150
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3158
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3166
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3182
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3190
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3200
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3211
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3229
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3233
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3237
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3259
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3264
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3268
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3274
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3278
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3284
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3288
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3292
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3296
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3301
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3309
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3323
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3327
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3340
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3359
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3368
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3378
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3382
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3392
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3396
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3400
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3404
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3410
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3420
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3424
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3430
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3440
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3446
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3452
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3456
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3460
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3470
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3476
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3486
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3490
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3496
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3500
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3510
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3526
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3532
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3545
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3561
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3577
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3593
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3606
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3622
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3638
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			yyLOCAL = &tree.Unnest{
				Param: &tree.UnnestParam{
					Origin: a1,
					Path:   a2,
					Outer:  a3,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3657
		{
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3658
		{
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3662
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3674
		{
			yyVAL.str = ""
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3678
		{
			yyVAL.str = yyDollar[1].str
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3682
		{
			yyVAL.str = yyDollar[2].str
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3691
		{
			yyVAL.str = ""
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3695
		{
			yyVAL.str = yyDollar[1].str
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3699
		{
			yyVAL.str = yyDollar[2].str
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3703
		{
			yyVAL.str = yyDollar[1].str
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3707
		{
			yyVAL.str = yyDollar[2].str
		}
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3751
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3762
		{
		}
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3767
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3779
		{
			yyVAL.str = yyDollar[1].str
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3785
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3795
		{
			yyVAL.str = yyDollar[1].str
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3801
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3808
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3814
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3822
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3828
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3835
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3843
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3849
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3858
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3870
		{
			yyVAL.str = yyDollar[1].str
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3875
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3881
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3889
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3995
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3999
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4005
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4015
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4019
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4025
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4035
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4039
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4043
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4052
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4058
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4065
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4071
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4084
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4093
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4097
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4103
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4120
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4124
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4128
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4132
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4138
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4161
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4183
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4187
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4191
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4195
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4199
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4205
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4209
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4215
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4220
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4225
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4229
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4233
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4237
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4241
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4247
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4261
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4265
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4270
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4274
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4280
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4284
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4290
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4294
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4298
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4303
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4307
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4313
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4324
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4335
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4342
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4349
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4360
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4373
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4397
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4420
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4424
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4430
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4434
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4440
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4449
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4463
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4469
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4473
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4479
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4486
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4495
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4499
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4508
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4513
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4517
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4522
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4526
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4536
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4540
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4551
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4559
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4567
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4586
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4596
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4606
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4610
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4615
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4619
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4628
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4634
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4638
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4642
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4648
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4652
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4656
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4660
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4664
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4668
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4672
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4676
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4680
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4684
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4688
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4692
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4696
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4700
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4704
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4708
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4712
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4716
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4720
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4724
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4728
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4732
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4736
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4740
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4744
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4748
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4752
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4756
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4760
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4767
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4771
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4777
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4782
		{
			yyVAL.str = ""
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4786
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4790
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4796
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4800
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4804
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4808
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4812
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4816
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4830
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4834
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4843
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4848
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4854
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4861
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4865
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4871
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4875
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4881
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4891
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4897
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4906
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4915
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4947
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4957
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4965
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4971
		{
			yyVAL.str = ""
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4975
		{
			yyVAL.str = yyDollar[1].str
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4985
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4991
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4997
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5011
		{
			yyVAL.str = ""
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5024
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5028
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5032
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5043
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5047
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5051
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5060
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5066
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5070
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5076
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5080
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5084
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5088
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5092
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5096
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5100
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5104
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5108
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5112
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5116
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5120
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5124
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5128
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5143
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5147
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5152
		{
			yyVAL.str = ""
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5156
		{
			yyVAL.str = yyDollar[1].str
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5162
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5166
		{
			yyVAL.str = yyDollar[2].str
		}
	case 843:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5172
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5184
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5191
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5198
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5205
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5212
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5221
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5227
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5233
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5237
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5241
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5245
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5254
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5261
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5265
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5269
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5278
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5283
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5287
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5303
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5309
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5313
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5317
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5321
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5325
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5329
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5333
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5337
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5341
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5345
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5349
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5353
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5357
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5363
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5367
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5371
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5375
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5379
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5383
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5387
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5395
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5399
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5403
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5407
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5412
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5420
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5424
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5428
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5437
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5441
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5445
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5449
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5453
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5458
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5462
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5467
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5471
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5477
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5481
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5487
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5497
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5514
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5531
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5544
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5557
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5569
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5583
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5598
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5613
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5630
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5645
		{
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5651
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5660
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5668
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5676
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5685
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5694
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5703
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5712
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5721
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5730
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5739
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5748
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5757
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5766
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5775
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5791
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5799
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5807
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5815
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5823
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5832
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5840
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5849
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5858
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5866
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5874
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5883
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5892
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5903
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5924
		{
			yyVAL.str = yyDollar[1].str
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5960
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5972
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5986
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5994
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6001
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6008
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6020
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6028
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6039
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6048
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6057
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6065
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6075
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6083
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6091
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6105
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6115
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6134
		{
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6136
		{
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6177
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6187
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6191
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6195
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6201
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6210
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6216
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6220
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6227
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6231
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6235
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6243
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6247
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6251
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6255
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6261
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6265
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6269
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6273
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6277
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6281
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6285
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6289
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6293
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6297
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6305
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6309
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6313
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6317
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6321
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6325
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6329
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6333
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6343
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6349
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6353
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6360
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6364
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6368
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6374
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6378
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6382
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6386
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6390
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6394
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6398
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6404
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6408
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6412
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6416
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6422
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6426
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6439
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6444
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6448
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6452
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6456
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6470
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6474
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6488
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6494
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6505
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6510
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6516
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6528
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6540
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6552
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6565
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6578
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6591
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6604
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6617
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6630
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6643
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6656
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6669
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6682
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6697
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6720
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6757
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6805
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6822
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6834
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6849
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6869
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6889
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6905
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6918
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6931
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6944
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6957
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6969
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6981
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6993
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7005
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7017
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7029
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7041
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7053
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7065
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7078
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7091
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7108
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7131
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7136
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7142
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7149
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7153
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7158
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7162
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7168
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7174
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7181
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7188
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7197
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7204
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7211
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7220
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7224
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7228
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7234
		{
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7236
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7246
		{
			yyVAL.str = ""
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7250
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

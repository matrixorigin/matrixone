// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const VALUES = 57389
const NEXT = 57390
const VALUE = 57391
const SHARE = 57392
const MODE = 57393
const SQL_NO_CACHE = 57394
const SQL_CACHE = 57395
const JOIN = 57396
const STRAIGHT_JOIN = 57397
const LEFT = 57398
const RIGHT = 57399
const INNER = 57400
const OUTER = 57401
const CROSS = 57402
const NATURAL = 57403
const USE = 57404
const FORCE = 57405
const LOWER_THAN_ON = 57406
const ON = 57407
const USING = 57408
const SUBQUERY_AS_EXPR = 57409
const LOWER_THAN_STRING = 57410
const ID = 57411
const AT_ID = 57412
const AT_AT_ID = 57413
const STRING = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const QUOTE_ID = 57419
const INTEGRAL = 57420
const HEX = 57421
const BIT_LITERAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const NULL = 57425
const TRUE = 57426
const FALSE = 57427
const LOWER_THAN_CHARSET = 57428
const CHARSET = 57429
const UNIQUE = 57430
const KEY = 57431
const OR = 57432
const PIPE_CONCAT = 57433
const XOR = 57434
const AND = 57435
const NOT = 57436
const BETWEEN = 57437
const CASE = 57438
const WHEN = 57439
const THEN = 57440
const ELSE = 57441
const END = 57442
const ELSEIF = 57443
const LOWER_THAN_EQ = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT = 57453
const ILIKE = 57454
const SHIFT_LEFT = 57455
const SHIFT_RIGHT = 57456
const DIV = 57457
const MOD = 57458
const UNARY = 57459
const COLLATE = 57460
const BINARY = 57461
const UNDERSCORE_BINARY = 57462
const INTERVAL = 57463
const OUT = 57464
const INOUT = 57465
const BEGIN = 57466
const START = 57467
const TRANSACTION = 57468
const COMMIT = 57469
const ROLLBACK = 57470
const WORK = 57471
const CONSISTENT = 57472
const SNAPSHOT = 57473
const CHAIN = 57474
const NO = 57475
const RELEASE = 57476
const PRIORITY = 57477
const QUICK = 57478
const BIT = 57479
const TINYINT = 57480
const SMALLINT = 57481
const MEDIUMINT = 57482
const INT = 57483
const INTEGER = 57484
const BIGINT = 57485
const INTNUM = 57486
const REAL = 57487
const DOUBLE = 57488
const FLOAT_TYPE = 57489
const DECIMAL = 57490
const NUMERIC = 57491
const DECIMAL_VALUE = 57492
const TIME = 57493
const TIMESTAMP = 57494
const DATETIME = 57495
const YEAR = 57496
const CHAR = 57497
const VARCHAR = 57498
const BOOL = 57499
const CHARACTER = 57500
const VARBINARY = 57501
const NCHAR = 57502
const TEXT = 57503
const TINYTEXT = 57504
const MEDIUMTEXT = 57505
const LONGTEXT = 57506
const BLOB = 57507
const TINYBLOB = 57508
const MEDIUMBLOB = 57509
const LONGBLOB = 57510
const JSON = 57511
const ENUM = 57512
const UUID = 57513
const GEOMETRY = 57514
const POINT = 57515
const LINESTRING = 57516
const POLYGON = 57517
const GEOMETRYCOLLECTION = 57518
const MULTIPOINT = 57519
const MULTILINESTRING = 57520
const MULTIPOLYGON = 57521
const INT1 = 57522
const INT2 = 57523
const INT3 = 57524
const INT4 = 57525
const INT8 = 57526
const S3OPTION = 57527
const SQL_SMALL_RESULT = 57528
const SQL_BIG_RESULT = 57529
const SQL_BUFFER_RESULT = 57530
const LOW_PRIORITY = 57531
const HIGH_PRIORITY = 57532
const DELAYED = 57533
const CREATE = 57534
const ALTER = 57535
const DROP = 57536
const RENAME = 57537
const ANALYZE = 57538
const ADD = 57539
const RETURNS = 57540
const SCHEMA = 57541
const TABLE = 57542
const SEQUENCE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const CONSTRAINT = 57551
const SPATIAL = 57552
const FULLTEXT = 57553
const FOREIGN = 57554
const KEY_BLOCK_SIZE = 57555
const SHOW = 57556
const DESCRIBE = 57557
const EXPLAIN = 57558
const DATE = 57559
const ESCAPE = 57560
const REPAIR = 57561
const OPTIMIZE = 57562
const TRUNCATE = 57563
const MAXVALUE = 57564
const PARTITION = 57565
const REORGANIZE = 57566
const LESS = 57567
const THAN = 57568
const PROCEDURE = 57569
const TRIGGER = 57570
const STATUS = 57571
const VARIABLES = 57572
const ROLE = 57573
const PROXY = 57574
const AVG_ROW_LENGTH = 57575
const STORAGE = 57576
const DISK = 57577
const MEMORY = 57578
const CHECKSUM = 57579
const COMPRESSION = 57580
const DATA = 57581
const DIRECTORY = 57582
const DELAY_KEY_WRITE = 57583
const ENCRYPTION = 57584
const ENGINE = 57585
const MAX_ROWS = 57586
const MIN_ROWS = 57587
const PACK_KEYS = 57588
const ROW_FORMAT = 57589
const STATS_AUTO_RECALC = 57590
const STATS_PERSISTENT = 57591
const STATS_SAMPLE_PAGES = 57592
const DYNAMIC = 57593
const COMPRESSED = 57594
const REDUNDANT = 57595
const COMPACT = 57596
const FIXED = 57597
const COLUMN_FORMAT = 57598
const AUTO_RANDOM = 57599
const RESTRICT = 57600
const CASCADE = 57601
const ACTION = 57602
const PARTIAL = 57603
const SIMPLE = 57604
const CHECK = 57605
const ENFORCED = 57606
const RANGE = 57607
const LIST = 57608
const ALGORITHM = 57609
const LINEAR = 57610
const PARTITIONS = 57611
const SUBPARTITION = 57612
const SUBPARTITIONS = 57613
const CLUSTER = 57614
const TYPE = 57615
const ANY = 57616
const SOME = 57617
const EXTERNAL = 57618
const LOCALFILE = 57619
const URL = 57620
const PREPARE = 57621
const DEALLOCATE = 57622
const RESET = 57623
const EXTENSION = 57624
const INCREMENT = 57625
const CYCLE = 57626
const MINVALUE = 57627
const PUBLICATION = 57628
const SUBSCRIPTIONS = 57629
const PUBLICATIONS = 57630
const PROPERTIES = 57631
const PARSER = 57632
const VISIBLE = 57633
const INVISIBLE = 57634
const BTREE = 57635
const HASH = 57636
const RTREE = 57637
const BSI = 57638
const ZONEMAP = 57639
const LEADING = 57640
const BOTH = 57641
const TRAILING = 57642
const UNKNOWN = 57643
const EXPIRE = 57644
const ACCOUNT = 57645
const ACCOUNTS = 57646
const UNLOCK = 57647
const DAY = 57648
const NEVER = 57649
const PUMP = 57650
const MYSQL_COMPATIBILITY_MODE = 57651
const SECOND = 57652
const ASCII = 57653
const COALESCE = 57654
const COLLATION = 57655
const HOUR = 57656
const MICROSECOND = 57657
const MINUTE = 57658
const MONTH = 57659
const QUARTER = 57660
const REPEAT = 57661
const REVERSE = 57662
const ROW_COUNT = 57663
const WEEK = 57664
const REVOKE = 57665
const FUNCTION = 57666
const PRIVILEGES = 57667
const TABLESPACE = 57668
const EXECUTE = 57669
const SUPER = 57670
const GRANT = 57671
const OPTION = 57672
const REFERENCES = 57673
const REPLICATION = 57674
const SLAVE = 57675
const CLIENT = 57676
const USAGE = 57677
const RELOAD = 57678
const FILE = 57679
const TEMPORARY = 57680
const ROUTINE = 57681
const EVENT = 57682
const SHUTDOWN = 57683
const NULLX = 57684
const AUTO_INCREMENT = 57685
const APPROXNUM = 57686
const SIGNED = 57687
const UNSIGNED = 57688
const ZEROFILL = 57689
const ENGINES = 57690
const LOW_CARDINALITY = 57691
const ADMIN_NAME = 57692
const RANDOM = 57693
const SUSPEND = 57694
const ATTRIBUTE = 57695
const HISTORY = 57696
const REUSE = 57697
const CURRENT = 57698
const OPTIONAL = 57699
const FAILED_LOGIN_ATTEMPTS = 57700
const PASSWORD_LOCK_TIME = 57701
const UNBOUNDED = 57702
const SECONDARY = 57703
const USER = 57704
const IDENTIFIED = 57705
const CIPHER = 57706
const ISSUER = 57707
const X509 = 57708
const SUBJECT = 57709
const SAN = 57710
const REQUIRE = 57711
const SSL = 57712
const NONE = 57713
const PASSWORD = 57714
const MAX_QUERIES_PER_HOUR = 57715
const MAX_UPDATES_PER_HOUR = 57716
const MAX_CONNECTIONS_PER_HOUR = 57717
const MAX_USER_CONNECTIONS = 57718
const FORMAT = 57719
const VERBOSE = 57720
const CONNECTION = 57721
const TRIGGERS = 57722
const PROFILES = 57723
const LOAD = 57724
const INFILE = 57725
const TERMINATED = 57726
const OPTIONALLY = 57727
const ENCLOSED = 57728
const ESCAPED = 57729
const STARTING = 57730
const LINES = 57731
const ROWS = 57732
const IMPORT = 57733
const MODUMP = 57734
const OVER = 57735
const PRECEDING = 57736
const FOLLOWING = 57737
const GROUPS = 57738
const DATABASES = 57739
const TABLES = 57740
const SEQUENCES = 57741
const EXTENDED = 57742
const FULL = 57743
const PROCESSLIST = 57744
const FIELDS = 57745
const COLUMNS = 57746
const OPEN = 57747
const ERRORS = 57748
const WARNINGS = 57749
const INDEXES = 57750
const SCHEMAS = 57751
const NODE = 57752
const LOCKS = 57753
const ROLES = 57754
const TABLE_NUMBER = 57755
const COLUMN_NUMBER = 57756
const TABLE_VALUES = 57757
const TABLE_SIZE = 57758
const NAMES = 57759
const GLOBAL = 57760
const PERSIST = 57761
const SESSION = 57762
const ISOLATION = 57763
const LEVEL = 57764
const READ = 57765
const WRITE = 57766
const ONLY = 57767
const REPEATABLE = 57768
const COMMITTED = 57769
const UNCOMMITTED = 57770
const SERIALIZABLE = 57771
const LOCAL = 57772
const EVENTS = 57773
const PLUGINS = 57774
const CURRENT_TIMESTAMP = 57775
const DATABASE = 57776
const CURRENT_TIME = 57777
const LOCALTIME = 57778
const LOCALTIMESTAMP = 57779
const UTC_DATE = 57780
const UTC_TIME = 57781
const UTC_TIMESTAMP = 57782
const REPLACE = 57783
const CONVERT = 57784
const SEPARATOR = 57785
const TIMESTAMPDIFF = 57786
const CURRENT_DATE = 57787
const CURRENT_USER = 57788
const CURRENT_ROLE = 57789
const SECOND_MICROSECOND = 57790
const MINUTE_MICROSECOND = 57791
const MINUTE_SECOND = 57792
const HOUR_MICROSECOND = 57793
const HOUR_SECOND = 57794
const HOUR_MINUTE = 57795
const DAY_MICROSECOND = 57796
const DAY_SECOND = 57797
const DAY_MINUTE = 57798
const DAY_HOUR = 57799
const YEAR_MONTH = 57800
const SQL_TSI_HOUR = 57801
const SQL_TSI_DAY = 57802
const SQL_TSI_WEEK = 57803
const SQL_TSI_MONTH = 57804
const SQL_TSI_QUARTER = 57805
const SQL_TSI_YEAR = 57806
const SQL_TSI_SECOND = 57807
const SQL_TSI_MINUTE = 57808
const RECURSIVE = 57809
const CONFIG = 57810
const DRAINER = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const ADDDATE = 57819
const BIT_AND = 57820
const BIT_OR = 57821
const BIT_XOR = 57822
const CAST = 57823
const COUNT = 57824
const APPROX_COUNT_DISTINCT = 57825
const APPROX_PERCENTILE = 57826
const CURDATE = 57827
const CURTIME = 57828
const DATE_ADD = 57829
const DATE_SUB = 57830
const EXTRACT = 57831
const GROUP_CONCAT = 57832
const MAX = 57833
const MID = 57834
const MIN = 57835
const NOW = 57836
const POSITION = 57837
const SESSION_USER = 57838
const STD = 57839
const STDDEV = 57840
const MEDIAN = 57841
const STDDEV_POP = 57842
const STDDEV_SAMP = 57843
const SUBDATE = 57844
const SUBSTR = 57845
const SUBSTRING = 57846
const SUM = 57847
const SYSDATE = 57848
const SYSTEM_USER = 57849
const TRANSLATE = 57850
const TRIM = 57851
const VARIANCE = 57852
const VAR_POP = 57853
const VAR_SAMP = 57854
const AVG = 57855
const RANK = 57856
const ROW_NUMBER = 57857
const NEXTVAL = 57858
const SETVAL = 57859
const CURRVAL = 57860
const LASTVAL = 57861
const ARROW = 57862
const ROW = 57863
const OUTFILE = 57864
const HEADER = 57865
const MAX_FILE_SIZE = 57866
const FORCE_QUOTE = 57867
const PARALLEL = 57868
const UNUSED = 57869
const BINDINGS = 57870
const DO = 57871
const DECLARE = 57872
const LOOP = 57873
const WHILE = 57874
const LEAVE = 57875
const ITERATE = 57876
const UNTIL = 57877
const CALL = 57878
const SPBEGIN = 57879
const BACKEND = 57880
const SERVERS = 57881
const KILL = 57882
const QUERY_RESULT = 57883

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9531

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 110,
	21, 635,
	-2, 616,
	-1, 124,
	219, 852,
	-2, 923,
	-1, 146,
	42, 458,
	219, 458,
	246, 465,
	247, 465,
	425, 458,
	-2, 491,
	-1, 182,
	560, 1592,
	-2, 376,
	-1, 502,
	295, 130,
	400, 130,
	-2, 1505,
	-1, 565,
	68, 1308,
	-2, 1646,
	-1, 566,
	68, 1326,
	-2, 1617,
	-1, 570,
	68, 1327,
	-2, 1645,
	-1, 594,
	68, 1238,
	-2, 1707,
	-1, 595,
	68, 1239,
	-2, 1706,
	-1, 596,
	68, 1240,
	-2, 1696,
	-1, 597,
	68, 1671,
	-2, 1691,
	-1, 598,
	68, 1672,
	-2, 1692,
	-1, 599,
	68, 1673,
	-2, 1698,
	-1, 600,
	68, 1674,
	-2, 1681,
	-1, 601,
	68, 1675,
	-2, 1689,
	-1, 602,
	68, 1676,
	-2, 1699,
	-1, 603,
	68, 1677,
	-2, 1700,
	-1, 604,
	68, 1678,
	-2, 1705,
	-1, 605,
	68, 1679,
	-2, 1710,
	-1, 606,
	68, 1680,
	-2, 1711,
	-1, 608,
	68, 1305,
	-2, 1497,
	-1, 615,
	68, 1314,
	-2, 1523,
	-1, 619,
	68, 1318,
	-2, 1563,
	-1, 620,
	68, 1319,
	-2, 1641,
	-1, 628,
	68, 1329,
	-2, 1626,
	-1, 630,
	68, 1331,
	-2, 1636,
	-1, 631,
	68, 1332,
	-2, 1661,
	-1, 642,
	68, 1216,
	-2, 1701,
	-1, 643,
	68, 1217,
	-2, 1702,
	-1, 644,
	68, 1218,
	-2, 1703,
	-1, 648,
	21, 636,
	-2, 599,
	-1, 718,
	420, 491,
	421, 491,
	-2, 459,
	-1, 760,
	106, 1497,
	117, 1497,
	137, 1497,
	-2, 1472,
	-1, 860,
	21, 636,
	-2, 599,
	-1, 960,
	21, 635,
	-2, 1117,
	-1, 1303,
	68, 1376,
	-2, 1643,
	-1, 1304,
	68, 1377,
	-2, 1644,
	-1, 1437,
	69, 777,
	-2, 783,
	-1, 1765,
	69, 1458,
	138, 1458,
	-2, 1628,
	-1, 1766,
	69, 1458,
	138, 1458,
	-2, 1627,
	-1, 1767,
	69, 1436,
	138, 1436,
	-2, 1614,
	-1, 1768,
	69, 1437,
	138, 1437,
	-2, 1619,
	-1, 1769,
	69, 1438,
	138, 1438,
	-2, 1551,
	-1, 1770,
	69, 1439,
	138, 1439,
	-2, 1545,
	-1, 1771,
	69, 1440,
	138, 1440,
	-2, 1488,
	-1, 1772,
	69, 1441,
	138, 1441,
	-2, 1616,
	-1, 1773,
	69, 1442,
	138, 1442,
	-2, 1549,
	-1, 1774,
	69, 1443,
	138, 1443,
	-2, 1544,
	-1, 1775,
	69, 1444,
	138, 1444,
	-2, 1537,
	-1, 1777,
	69, 1447,
	138, 1447,
	-2, 1661,
	-1, 1778,
	69, 1427,
	138, 1427,
	-2, 1646,
	-1, 1779,
	69, 1456,
	138, 1456,
	-2, 1617,
	-1, 1780,
	69, 1456,
	138, 1456,
	-2, 1645,
	-1, 1781,
	69, 1456,
	138, 1456,
	-2, 1506,
	-1, 1782,
	69, 1454,
	138, 1454,
	-2, 1636,
	-1, 1783,
	69, 1451,
	138, 1451,
	-2, 1528,
	-1, 1784,
	68, 1409,
	69, 1409,
	138, 1409,
	362, 1409,
	363, 1409,
	364, 1409,
	-2, 1487,
	-1, 1785,
	68, 1410,
	69, 1410,
	138, 1410,
	362, 1410,
	363, 1410,
	364, 1410,
	-2, 1489,
	-1, 1786,
	68, 1413,
	69, 1413,
	138, 1413,
	362, 1413,
	363, 1413,
	364, 1413,
	-2, 1618,
	-1, 1787,
	68, 1415,
	69, 1415,
	138, 1415,
	362, 1415,
	363, 1415,
	364, 1415,
	-2, 1601,
	-1, 1788,
	68, 1417,
	69, 1417,
	138, 1417,
	362, 1417,
	363, 1417,
	364, 1417,
	-2, 1550,
	-1, 1789,
	68, 1419,
	69, 1419,
	138, 1419,
	362, 1419,
	363, 1419,
	364, 1419,
	-2, 1533,
	-1, 1790,
	68, 1420,
	69, 1420,
	138, 1420,
	362, 1420,
	363, 1420,
	364, 1420,
	-2, 1534,
	-1, 1791,
	68, 1422,
	69, 1422,
	138, 1422,
	362, 1422,
	363, 1422,
	364, 1422,
	-2, 1486,
	-1, 1792,
	69, 1461,
	138, 1461,
	362, 1461,
	363, 1461,
	364, 1461,
	-2, 1511,
	-1, 1793,
	69, 1461,
	138, 1461,
	362, 1461,
	363, 1461,
	364, 1461,
	-2, 1524,
	-1, 1794,
	69, 1464,
	138, 1464,
	362, 1464,
	363, 1464,
	364, 1464,
	-2, 1507,
	-1, 1795,
	69, 1461,
	138, 1461,
	362, 1461,
	363, 1461,
	364, 1461,
	-2, 1586,
	-1, 1808,
	89, 887,
	133, 887,
	172, 887,
	175, 887,
	259, 887,
	-2, 880,
	-1, 1922,
	21, 635,
	-2, 727,
	-1, 2101,
	89, 887,
	133, 887,
	172, 887,
	175, 887,
	259, 887,
	-2, 881,
	-1, 2113,
	66, 545,
	138, 545,
	-2, 1018,
	-1, 2135,
	280, 1085,
	-2, 1064,
	-1, 2402,
	280, 1085,
	-2, 1065,
	-1, 2535,
	89, 887,
	133, 887,
	172, 887,
	175, 887,
	-2, 966,
	-1, 2538,
	89, 887,
	133, 887,
	172, 887,
	175, 887,
	-2, 966,
	-1, 2548,
	66, 545,
	138, 545,
	-2, 1019,
	-1, 2647,
	89, 887,
	133, 887,
	172, 887,
	175, 887,
	-2, 967,
	-1, 2948,
	69, 938,
	138, 938,
	-2, 887,
	-1, 2952,
	69, 938,
	138, 938,
	-2, 887,
	-1, 2966,
	69, 942,
	138, 942,
	-2, 887,
	-1, 2971,
	69, 943,
	138, 943,
	-2, 887,
}

const yyPrivate = 57344

const yyLast = 34763

var yyAct = [...]int{
	532, 1222, 1500, 2951, 2952, 2931, 173, 2960, 1284, 2842,
	513, 2890, 534, 511, 2860, 521, 2614, 2882, 2619, 2771,
	2414, 2798, 2679, 2799, 1743, 2763, 1096, 2491, 2782, 2786,
	2640, 2701, 991, 2728, 2492, 2639, 2691, 649, 2617, 419,
	1213, 1458, 2772, 2774, 2668, 562, 2646, 2374, 425, 1287,
	430, 430, 2116, 2558, 2609, 158, 430, 446, 455, 2203,
	1280, 455, 1559, 2519, 2204, 1147, 2403, 2188, 2426, 1847,
	1534, 2196, 2489, 515, 1916, 2006, 1621, 2477, 2225, 1652,
	2460, 2199, 1763, 1850, 466, 2350, 2347, 2425, 2345, 2202,
	1138, 1817, 1504, 1573, 1900, 2102, 2131, 1761, 460, 854,
	510, 1753, 1209, 1204, 1556, 2372, 759, 504, 2047, 505,
	2005, 2255, 1460, 2294, 1419, 1630, 1622, 1629, 2641, 2238,
	1956, 1221, 1595, 36, 1552, 1647, 1537, 695, 1648, 1070,
	1917, 1535, 1054, 765, 2084, 2080, 1905, 2137, 1487, 1848,
	1496, 169, 8, 1427, 1816, 2375, 6, 53, 1445, 751,
	419, 1973, 168, 7, 809, 1680, 514, 1278, 1649, 1156,
	1659, 109, 1801, 35, 1178, 503, 2377, 1333, 1317, 1214,
	424, 1470, 2376, 173, 1085, 173, 1759, 800, 801, 1469,
	452, 1269, 1625, 1628, 522, 871, 505, 2048, 418, 1072,
	763, 1104, 1611, 1277, 1185, 1028, 750, 26, 1924, 1283,
	15, 1585, 1444, 13, 439, 14, 1081, 1130, 1338, 694,
	159, 646, 468, 1105, 32, 1339, 442, 23, 454, 152,
	16, 1177, 1666, 469, 10, 1868, 506, 1097, 796, 155,
	798, 713, 692, 2008, 1052, 1656, 2484, 2288, 992, 1962,
	2288, 1959, 1960, 1192, 648, 1957, 1188, 797, 793, 792,
	793, 793, 157, 725, 451, 426, 1117, 447, 1542, 1190,
	449, 2607, 450, 929, 930, 931, 928, 929, 930, 931,
	928, 448, 2251, 435, 2249, 1600, 2697, 2692, 2610, 458,
	2490, 1423, 986, 2776, 1624, 156, 647, 49, 148, 125,
	156, 657, 49, 148, 125, 2738, 2833, 2632, 892, 8,
	1993, 769, 1653, 2001, 791, 149, 156, 156, 429, 429,
	7, 1044, 141, 2631, 437, 766, 150, 768, 156, 156,
	156, 156, 108, 2747, 464, 683, 2317, 156, 465, 49,
	148, 125, 1270, 156, 1805, 1274, 1937, 97, 1236, 2739,
	1229, 1664, 1938, 153, 2270, 926, 1431, 1432, 153, 156,
	512, 49, 148, 125, 1254, 1233, 108, 1226, 2263, 1273,
	1571, 2878, 1045, 1093, 153, 153, 1113, 1100, 1974, 1114,
	108, 1099, 1102, 1103, 2876, 2082, 1235, 153, 1228, 153,
	650, 1102, 1103, 2802, 2803, 153, 637, 658, 636, 638,
	639, 153, 640, 641, 734, 1483, 1286, 794, 795, 924,
	907, 739, 799, 908, 738, 2627, 762, 153, 919, 761,
	2779, 2829, 2778, 2828, 2777, 2827, 112, 113, 900, 114,
	115, 902, 2779, 2778, 2777, 1735, 2864, 2865, 2081, 430,
	2493, 910, 2699, 2256, 2765, 1275, 2765, 2768, 2695, 430,
	864, 2702, 2703, 2704, 2705, 2257, 2493, 2258, 2832, 903,
	874, 685, 1116, 680, 1289, 670, 1272, 455, 455, 1988,
	430, 865, 682, 681, 2781, 2502, 1545, 1553, 2520, 1549,
	1265, 1191, 1189, 859, 861, 1660, 2527, 2351, 2720, 668,
	2361, 2637, 2283, 674, 124, 147, 154, 743, 95, 124,
	1608, 154, 1895, 2359, 1800, 1373, 2713, 2281, 2713, 2714,
	803, 2714, 921, 905, 740, 2072, 146, 140, 139, 499,
	895, 146, 501, 55, 2708, 1198, 1197, 500, 962, 922,
	923, 896, 874, 2801, 679, 2421, 2835, 2836, 678, 2608,
	2626, 858, 1998, 764, 667, 2250, 2628, 2192, 673, 1898,
	1091, 1901, 1897, 2723, 898, 2356, 2357, 2355, 887, 2634,
	2880, 2871, 2716, 2371, 2716, 671, 901, 904, 863, 1288,
	2358, 2381, 906, 742, 864, 2791, 1271, 452, 452, 2735,
	860, 142, 143, 144, 2434, 2435, 669, 1665, 2109, 2579,
	897, 457, 456, 2715, 2787, 2715, 1125, 2945, 2961, 2899,
	686, 2875, 2844, 769, 1569, 1570, 912, 151, 2906, 913,
	1115, 1080, 917, 918, 1669, 1671, 1672, 766, 2754, 768,
	2571, 1295, 1298, 1299, 672, 104, 1878, 2840, 2841, 145,
	2844, 105, 1296, 2096, 2097, 2098, 2099, 915, 2885, 2910,
	1877, 876, 875, 2681, 909, 741, 878, 995, 2584, 2585,
	2441, 451, 451, 2353, 447, 447, 2093, 449, 449, 450,
	450, 1654, 899, 1654, 2566, 1654, 2562, 1134, 448, 448,
	867, 868, 2506, 1133, 769, 2287, 1095, 1094, 1050, 425,
	1053, 885, 1078, 2087, 106, 880, 881, 1077, 766, 1076,
	768, 2968, 996, 1025, 48, 884, 684, 856, 2962, 2932,
	2729, 2956, 793, 855, 695, 793, 2333, 862, 793, 911,
	793, 2540, 793, 876, 875, 793, 2737, 1853, 968, 2834,
	1667, 1681, 869, 1102, 1103, 2605, 453, 1958, 883, 1055,
	2736, 1193, 464, 2762, 1655, 1131, 1102, 1103, 1856, 2227,
	2229, 1994, 1101, 50, 932, 916, 1927, 1867, 453, 1098,
	430, 892, 1127, 961, 1657, 1668, 1092, 1866, 2886, 1060,
	2286, 970, 647, 419, 419, 419, 419, 1064, 914, 1151,
	1151, 1063, 430, 1062, 459, 2341, 126, 1435, 2633, 2352,
	2881, 126, 2721, 975, 2002, 50, 2284, 2362, 1067, 455,
	1053, 425, 1554, 1181, 1181, 1749, 1748, 126, 126, 2709,
	1158, 2709, 886, 2710, 173, 2773, 2071, 50, 1747, 126,
	126, 126, 126, 419, 1056, 1057, 1058, 1059, 126, 1061,
	1004, 1005, 2173, 1065, 126, 2638, 764, 2955, 2680, 1149,
	1149, 107, 38, 1546, 891, 1153, 1548, 1266, 47, 5,
	126, 2354, 111, 689, 690, 691, 1048, 1670, 1434, 1051,
	1746, 1852, 2296, 2295, 1297, 1433, 1854, 1145, 1146, 1199,
	659, 1220, 2967, 1223, 1046, 1047, 1857, 660, 1231, 2669,
	2670, 2671, 2673, 2672, 2654, 2911, 2567, 2568, 964, 965,
	966, 967, 663, 2883, 2884, 2974, 1756, 1030, 1252, 687,
	1032, 1087, 1088, 2386, 2564, 735, 1237, 927, 2563, 2228,
	2457, 1079, 1151, 735, 1151, 864, 892, 1855, 1089, 1757,
	1758, 648, 1141, 1142, 1143, 1144, 1107, 1108, 1461, 1110,
	1111, 1112, 2973, 1126, 1202, 651, 1205, 1206, 1082, 1086,
	1086, 1086, 1976, 662, 1461, 2453, 1069, 665, 664, 1872,
	2114, 1211, 1212, 2536, 1118, 1119, 1737, 2369, 784, 789,
	790, 1082, 1082, 1993, 927, 1247, 1248, 1106, 1915, 2964,
	1109, 1174, 1194, 2077, 2086, 2115, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 737, 1132,
	1914, 736, 1328, 1329, 1337, 2074, 737, 1741, 1227, 736,
	1981, 927, 1234, 1376, 1377, 1378, 1939, 1386, 1712, 435,
	1803, 1711, 1267, 452, 1159, 2025, 1392, 1172, 1123, 1393,
	1653, 1840, 769, 1261, 1183, 1182, 769, 2090, 2091, 1180,
	1180, 1400, 1401, 1285, 1173, 1395, 2946, 1216, 2965, 1219,
	1157, 2089, 1282, 849, 846, 847, 848, 2941, 744, 2030,
	1915, 2029, 2028, 2026, 927, 1300, 2935, 1251, 2934, 1263,
	2174, 2176, 2177, 2178, 2175, 1250, 2457, 929, 930, 931,
	928, 1083, 1417, 2115, 889, 430, 1238, 1443, 1151, 1447,
	927, 1449, 1450, 2370, 651, 890, 430, 451, 2915, 695,
	447, 2892, 1459, 449, 2854, 450, 1151, 1260, 1915, 1742,
	1257, 1716, 1127, 1256, 448, 1662, 1243, 446, 1802, 1239,
	1420, 1279, 2809, 1740, 648, 2027, 2942, 1259, 1368, 1369,
	1258, 1372, 1385, 1276, 1255, 1662, 1482, 1662, 1644, 1387,
	786, 787, 788, 2804, 1488, 1488, 1281, 1127, 1567, 1127,
	1127, 1691, 1394, 430, 1396, 1443, 1443, 890, 1486, 1151,
	1532, 1544, 929, 930, 931, 928, 419, 1662, 1151, 1319,
	2893, 2756, 1068, 2855, 1448, 1331, 1442, 929, 930, 931,
	928, 1135, 1084, 2929, 1290, 1291, 1292, 1293, 1294, 2755,
	2526, 2725, 2894, 2551, 2387, 430, 1443, 1151, 2240, 1578,
	430, 430, 1581, 857, 1588, 2752, 2751, 1584, 2315, 2117,
	1268, 1590, 2725, 1026, 1996, 1995, 1987, 1371, 173, 1837,
	1707, 173, 173, 1690, 173, 1451, 1452, 1453, 1335, 1336,
	1692, 1643, 1475, 2750, 1370, 547, 110, 1593, 1566, 2391,
	2757, 110, 1380, 2749, 1527, 1528, 1439, 1481, 2724, 1550,
	1484, 1485, 1397, 2031, 2032, 2586, 1424, 2443, 1821, 1386,
	1386, 1632, 1560, 1561, 1562, 1563, 1386, 1386, 1418, 1240,
	2222, 1639, 1359, 1599, 2725, 2725, 1602, 1603, 1490, 1605,
	1564, 1565, 1577, 1489, 1421, 1575, 2053, 1446, 1425, 436,
	973, 1428, 110, 1579, 1580, 1459, 1555, 1467, 1468, 1151,
	1651, 2009, 2725, 1991, 1455, 1464, 1480, 1471, 1456, 1473,
	1474, 1985, 2725, 1466, 1477, 1478, 1983, 2725, 1491, 1978,
	1082, 1472, 1479, 1971, 1939, 1969, 2444, 1586, 1492, 1493,
	1967, 1965, 1820, 892, 1476, 1738, 1645, 1326, 1327, 1915,
	1633, 877, 857, 1440, 852, 1086, 1720, 1719, 1710, 1701,
	1700, 850, 1674, 944, 1454, 927, 1699, 1661, 1446, 1533,
	2278, 1531, 1551, 1375, 1374, 1139, 2924, 1073, 1678, 1679,
	927, 1074, 1821, 1244, 1627, 1926, 1140, 2792, 2912, 2655,
	1979, 1627, 1869, 1137, 1572, 1984, 1957, 1083, 1979, 767,
	1576, 2382, 1972, 110, 1970, 1421, 1279, 2543, 452, 1966,
	1966, 1821, 1421, 1421, 1737, 2482, 769, 2458, 110, 1596,
	110, 1494, 2448, 769, 1594, 927, 927, 927, 927, 927,
	766, 2793, 768, 2656, 1355, 927, 1662, 766, 1352, 768,
	1717, 1613, 1354, 1351, 1353, 1357, 1358, 1724, 2016, 2445,
	1356, 2544, 1245, 1598, 857, 2289, 1601, 2194, 1634, 1604,
	1636, 2383, 1606, 1574, 1462, 1463, 2541, 1406, 1574, 1574,
	661, 1642, 1982, 1637, 1929, 1638, 1136, 504, 866, 864,
	1796, 1951, 451, 1334, 1334, 447, 1687, 1597, 449, 1646,
	450, 2242, 430, 430, 430, 1186, 1818, 1597, 1084, 448,
	1441, 1641, 1689, 535, 544, 2384, 1825, 1127, 769, 536,
	2542, 543, 537, 541, 540, 538, 539, 1830, 929, 930,
	931, 928, 766, 1682, 768, 1703, 1673, 931, 928, 2485,
	1675, 1127, 947, 948, 949, 950, 951, 944, 864, 1861,
	1686, 2555, 2826, 1398, 1399, 928, 1319, 1402, 1403, 1404,
	1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 463,
	929, 930, 931, 928, 545, 943, 942, 952, 953, 945,
	946, 947, 948, 949, 950, 951, 944, 2574, 2573, 1702,
	1919, 1919, 1544, 1919, 1714, 2259, 666, 1362, 1363, 1364,
	1365, 1366, 1367, 1360, 1361, 2149, 542, 1764, 1684, 864,
	2148, 1688, 929, 930, 931, 928, 2143, 1151, 430, 2141,
	1797, 945, 946, 947, 948, 949, 950, 951, 944, 1325,
	1827, 1828, 1390, 864, 425, 2635, 2950, 1181, 2909, 1544,
	1831, 1832, 1946, 1391, 1948, 1322, 1324, 1321, 173, 1323,
	1698, 2938, 1750, 1734, 1736, 2524, 499, 1804, 1705, 501,
	2900, 1871, 1923, 2895, 500, 1921, 1846, 1925, 2845, 929,
	930, 931, 928, 2817, 1839, 2636, 1718, 1935, 2483, 1721,
	1722, 1723, 995, 2908, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 2794, 1842, 1989, 2525, 1826, 1651, 2740, 110,
	110, 767, 2693, 1952, 1151, 2184, 1151, 2182, 1151, 1945,
	2661, 1836, 1838, 864, 1845, 1930, 1931, 1932, 1933, 1833,
	1844, 2658, 1834, 1676, 1677, 1835, 2657, 996, 952, 953,
	945, 946, 947, 948, 949, 950, 951, 944, 1822, 769,
	2180, 2545, 1151, 2034, 1899, 2183, 2523, 2181, 1943, 2360,
	1086, 1764, 2274, 766, 2254, 768, 2253, 1950, 2041, 2168,
	1810, 1811, 1812, 1151, 2167, 2166, 1999, 929, 930, 931,
	928, 2870, 960, 2163, 2157, 2154, 2018, 1936, 2043, 1870,
	2179, 1873, 1874, 1875, 1876, 1829, 2012, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1944, 1149, 2153, 1942, 2045, 864, 2033, 1616, 1941,
	943, 942, 952, 953, 945, 946, 947, 948, 949, 950,
	951, 944, 2020, 1149, 929, 930, 931, 928, 2042, 2170,
	1615, 2003, 1614, 2000, 2014, 1961, 1610, 1421, 1421, 1421,
	1421, 1609, 1241, 775, 770, 774, 776, 1043, 2040, 2197,
	2064, 1990, 2346, 1151, 2615, 1992, 2094, 2866, 2830, 2760,
	1443, 1997, 2722, 1180, 2694, 2645, 2113, 2613, 2611, 2169,
	780, 2742, 2119, 2590, 773, 2588, 1157, 2189, 2557, 2049,
	2522, 2521, 2010, 2011, 2054, 2518, 2511, 2505, 2128, 929,
	930, 931, 928, 2007, 864, 2024, 2452, 2078, 1953, 2450,
	2439, 2438, 2140, 1279, 1744, 1745, 1033, 2963, 2338, 2337,
	2145, 2146, 2285, 2147, 2252, 2233, 2171, 2150, 1488, 2706,
	1206, 2164, 778, 2160, 2075, 929, 930, 931, 928, 781,
	2159, 2158, 1919, 1211, 1212, 1739, 2068, 929, 930, 931,
	928, 2065, 2185, 593, 592, 1186, 771, 2110, 419, 2104,
	1618, 2103, 1443, 864, 1544, 1544, 1544, 1544, 1612, 2120,
	929, 930, 931, 928, 2017, 864, 1544, 779, 1430, 1919,
	1242, 1003, 2035, 2036, 929, 930, 931, 928, 1151, 2135,
	2038, 2039, 999, 2138, 998, 974, 853, 2138, 2538, 2537,
	430, 430, 2122, 2044, 2535, 2510, 2124, 929, 930, 931,
	928, 2092, 2497, 2796, 173, 772, 1187, 2488, 2487, 173,
	2112, 8, 1846, 1216, 1421, 1219, 2118, 2066, 2067, 1428,
	1160, 2476, 7, 2475, 2218, 436, 929, 930, 931, 928,
	1386, 2130, 1386, 2139, 2392, 2269, 2313, 2136, 2273, 2134,
	2306, 2142, 2298, 2293, 1151, 2237, 2076, 2280, 2073, 110,
	156, 1968, 1446, 148, 125, 1964, 2152, 1963, 1725, 2243,
	1715, 1713, 2165, 1709, 2247, 1708, 2121, 1706, 1697, 2308,
	1694, 2205, 1693, 1617, 2125, 2126, 2083, 777, 2127, 1416,
	2190, 1415, 2013, 2205, 2195, 2206, 2207, 2208, 2209, 1389,
	1420, 1388, 2219, 1379, 2123, 2268, 2220, 2193, 2230, 2221,
	2217, 1163, 156, 2231, 2234, 1161, 648, 2266, 153, 2923,
	110, 2917, 2907, 2272, 110, 2307, 2904, 2902, 2816, 2301,
	2241, 2303, 2758, 993, 2111, 110, 2245, 2244, 864, 2277,
	2282, 1201, 2677, 2665, 2349, 110, 2662, 2599, 929, 930,
	931, 928, 2262, 2260, 2364, 2265, 430, 2155, 2156, 2267,
	2597, 1695, 2264, 2161, 2162, 2581, 864, 864, 864, 2271,
	153, 2580, 2577, 2291, 2576, 1544, 1818, 2570, 2390, 2290,
	2530, 2191, 2276, 1210, 2394, 1203, 769, 2785, 1071, 2299,
	2300, 2186, 2302, 769, 864, 2144, 2297, 2107, 2424, 2106,
	2427, 2105, 2427, 2427, 1215, 2304, 2305, 1218, 1207, 2432,
	929, 930, 931, 928, 2578, 2318, 1151, 1151, 2340, 2319,
	2320, 2321, 2322, 2063, 2323, 2324, 2325, 2326, 2327, 2328,
	2329, 2330, 1977, 1928, 1893, 2342, 2339, 2334, 929, 930,
	931, 928, 1819, 1320, 2246, 2388, 2248, 430, 153, 2365,
	1582, 1438, 2349, 1437, 2103, 1264, 1764, 2367, 2235, 2236,
	1230, 1443, 1443, 2344, 1421, 2422, 2423, 2389, 1208, 1421,
	2368, 2385, 2378, 2379, 1027, 1024, 1149, 1149, 1023, 1022,
	1021, 2436, 2437, 2621, 1846, 1846, 1846, 769, 1020, 2428,
	2429, 2400, 1019, 1018, 2393, 1017, 1016, 1015, 2395, 2396,
	1014, 2034, 1013, 1012, 1011, 2292, 929, 930, 931, 928,
	2486, 1010, 2399, 2398, 1009, 1008, 1007, 1006, 1122, 1002,
	1124, 1001, 1128, 1129, 1000, 997, 990, 2312, 935, 936,
	937, 938, 939, 940, 941, 933, 2430, 769, 2447, 2446,
	2442, 2451, 2454, 2455, 2449, 989, 987, 430, 986, 2465,
	1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 985, 984,
	983, 1176, 2620, 2469, 982, 981, 980, 979, 2850, 2583,
	978, 2472, 2473, 2474, 977, 976, 2456, 2397, 2508, 2481,
	972, 971, 2848, 2939, 894, 929, 930, 931, 928, 851,
	1824, 2468, 929, 930, 931, 928, 1543, 2461, 2462, 1807,
	2498, 929, 930, 931, 928, 882, 2800, 2499, 2464, 652,
	653, 654, 655, 2095, 2366, 1940, 1620, 2501, 893, 2467,
	2500, 2466, 651, 2214, 2504, 2212, 2311, 2211, 2215, 2512,
	2213, 2431, 2534, 943, 942, 952, 953, 945, 946, 947,
	948, 949, 950, 951, 944, 2210, 1919, 1544, 2548, 929,
	930, 931, 928, 110, 2949, 1986, 110, 110, 2216, 110,
	1911, 1912, 2310, 2602, 427, 2601, 2132, 2514, 2133, 2070,
	1980, 1151, 1162, 1975, 2335, 2336, 96, 2517, 1526, 52,
	2556, 2343, 430, 2309, 2516, 929, 930, 931, 928, 51,
	1195, 2424, 1744, 1745, 767, 2004, 1029, 2529, 2062, 1224,
	2600, 767, 2061, 2550, 1798, 1574, 929, 930, 931, 928,
	110, 2060, 1583, 888, 1443, 431, 2780, 2547, 864, 2129,
	2546, 929, 930, 931, 928, 929, 930, 931, 928, 2554,
	432, 2559, 2422, 433, 929, 930, 931, 928, 2079, 2059,
	1814, 2604, 1457, 434, 173, 1907, 1910, 1911, 1912, 1908,
	1436, 1909, 1913, 2058, 2593, 1375, 1374, 864, 2857, 2582,
	1896, 2549, 929, 930, 931, 928, 1530, 2552, 1041, 1042,
	2553, 2589, 2587, 1039, 1040, 2629, 929, 930, 931, 928,
	1121, 2595, 2594, 2057, 1037, 1038, 960, 2056, 1035, 1036,
	1120, 864, 1151, 1151, 920, 2507, 2471, 864, 2648, 2606,
	1640, 2648, 2509, 2592, 1075, 2503, 929, 930, 931, 928,
	929, 930, 931, 928, 2591, 1031, 2616, 943, 942, 952,
	953, 945, 946, 947, 948, 949, 950, 951, 944, 2630,
	652, 653, 654, 655, 2918, 2838, 2205, 864, 864, 2055,
	2823, 864, 864, 651, 2649, 2652, 2644, 2651, 2821, 2788,
	2770, 2769, 1149, 2559, 2531, 2532, 2533, 2643, 1459, 651,
	2685, 2550, 929, 930, 931, 928, 2767, 2759, 2689, 2690,
	2052, 2688, 2666, 2667, 2687, 2205, 2675, 2676, 2663, 2622,
	2682, 2051, 2612, 2513, 2674, 2495, 2494, 2479, 2050, 1034,
	2478, 2239, 2719, 929, 930, 931, 928, 1461, 2275, 2683,
	1809, 2712, 2852, 2851, 929, 930, 931, 928, 2046, 1696,
	2731, 929, 930, 931, 928, 1846, 879, 2851, 2852, 2659,
	2660, 2572, 2496, 1090, 2406, 60, 864, 2717, 2707, 2711,
	2, 929, 930, 931, 928, 1568, 1421, 1155, 864, 1,
	2575, 1429, 2726, 160, 3, 1421, 2733, 656, 2596, 2416,
	2732, 2598, 2223, 2224, 2470, 2226, 2744, 2741, 1658, 1894,
	1799, 2748, 2409, 2363, 2037, 2603, 1066, 688, 1381, 2404,
	1249, 1683, 783, 2753, 2419, 2420, 873, 1246, 872, 870,
	2405, 1332, 549, 1623, 2775, 2187, 864, 929, 930, 931,
	928, 2684, 2766, 2789, 2764, 943, 942, 952, 953, 945,
	946, 947, 948, 949, 950, 951, 944, 1922, 2015, 2856,
	2889, 2784, 2815, 2859, 1262, 533, 2783, 2410, 2810, 2813,
	2761, 2698, 2819, 2790, 2700, 2618, 1663, 925, 2795, 2261,
	709, 929, 930, 931, 928, 1330, 2814, 585, 2805, 2806,
	2807, 2808, 560, 988, 2822, 1232, 2824, 2825, 1225, 2316,
	2820, 2818, 785, 559, 1543, 2528, 2088, 2734, 929, 930,
	931, 928, 677, 110, 697, 782, 710, 1524, 1607, 2696,
	2837, 1196, 1217, 1200, 2653, 2539, 2380, 2863, 2108, 2846,
	2959, 2849, 2847, 2948, 2930, 2916, 2843, 1902, 2944, 2862,
	2853, 2874, 2905, 2625, 2623, 2624, 2898, 2839, 470, 864,
	2867, 1526, 2775, 1547, 417, 748, 2868, 2678, 2418, 1619,
	1851, 1907, 1910, 1911, 1912, 1908, 2888, 1909, 1913, 2877,
	2879, 471, 1823, 2831, 2664, 675, 1806, 735, 2891, 2727,
	2887, 676, 2896, 2101, 864, 2412, 2100, 1301, 934, 1506,
	1318, 2331, 2897, 2332, 969, 509, 1685, 2085, 2415, 2743,
	2901, 2232, 2903, 59, 2863, 2914, 58, 2411, 2413, 57,
	56, 1589, 181, 864, 551, 864, 2862, 180, 2913, 2812,
	2861, 2920, 531, 2922, 530, 529, 528, 527, 1906, 1904,
	1903, 2925, 2891, 2926, 864, 1539, 1538, 1587, 2933, 2433,
	2940, 2151, 2937, 2943, 1865, 1858, 1495, 2797, 2745, 2746,
	2569, 2172, 2565, 975, 2561, 2440, 2921, 2647, 2947, 2401,
	737, 2954, 2402, 736, 2408, 2958, 2957, 2872, 1813, 808,
	804, 806, 2966, 807, 805, 2969, 2023, 2019, 1841, 2954,
	2972, 2971, 2421, 2970, 2958, 2373, 1755, 1754, 1752, 1751,
	1049, 2718, 2515, 1762, 2407, 1760, 2463, 722, 2459, 1631,
	2417, 1426, 1285, 2069, 1540, 698, 943, 942, 952, 953,
	945, 946, 947, 948, 949, 950, 951, 944, 1536, 1808,
	87, 1499, 1498, 1501, 86, 1497, 94, 137, 46, 2919,
	1510, 1285, 700, 1285, 165, 110, 164, 167, 166, 163,
	1954, 1514, 1955, 162, 2314, 1184, 161, 2650, 645, 37,
	33, 12, 1285, 11, 34, 21, 22, 20, 1253, 19,
	25, 1503, 31, 30, 103, 1505, 1507, 1509, 2869, 1511,
	1512, 1513, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 943,
	942, 952, 953, 945, 946, 947, 948, 949, 950, 951,
	944, 102, 721, 720, 943, 942, 952, 953, 945, 946,
	947, 948, 949, 950, 951, 944, 29, 101, 100, 719,
	99, 98, 28, 18, 955, 41, 959, 1525, 696, 1543,
	1543, 1543, 1543, 40, 39, 9, 93, 91, 27, 699,
	730, 1543, 956, 958, 954, 92, 957, 943, 942, 952,
	953, 945, 946, 947, 948, 949, 950, 951, 944, 2928,
	89, 90, 88, 726, 1523, 942, 952, 953, 945, 946,
	947, 948, 949, 950, 951, 944, 71, 70, 69, 110,
	84, 1502, 83, 82, 110, 81, 80, 79, 77, 78,
	708, 68, 67, 66, 65, 727, 731, 64, 75, 85,
	76, 74, 73, 72, 110, 63, 62, 61, 122, 123,
	1518, 110, 716, 121, 714, 718, 734, 1508, 120, 119,
	715, 712, 711, 118, 717, 702, 703, 701, 704, 705,
	706, 707, 117, 732, 116, 733, 42, 43, 44, 353,
	567, 45, 133, 132, 134, 136, 728, 729, 138, 135,
	316, 130, 128, 131, 129, 127, 54, 17, 24, 4,
	0, 0, 0, 523, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 558, 0, 0, 345, 300,
	0, 0, 0, 724, 616, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 0, 0, 548,
	593, 592, 535, 544, 0, 110, 243, 179, 536, 0,
	543, 537, 541, 540, 538, 539, 0, 608, 0, 0,
	0, 0, 0, 0, 507, 520, 0, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 723, 0, 110, 0, 568, 0, 519,
	0, 0, 563, 545, 546, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 542, 566, 570, 255, 630,
	564, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 631, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 561, 0, 0, 0, 376, 0,
	0, 614, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 565, 0, 336, 318, 627, 508, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 1383, 1382, 1384, 388, 268, 226, 227,
	423, 612, 314, 0, 0, 626, 607, 609, 610, 613,
	617, 618, 619, 620, 621, 623, 625, 629, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 380, 1543, 0, 0, 0, 0, 569, 304, 305,
	306, 307, 615, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 637, 611,
	636, 638, 639, 635, 640, 641, 622, 526, 0, 573,
	633, 632, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 600, 578, 579, 580, 525, 581, 576, 577,
	601, 571, 597, 598, 550, 574, 582, 596, 583, 599,
	602, 603, 642, 643, 589, 644, 586, 604, 595, 594,
	584, 572, 605, 606, 557, 552, 587, 588, 575, 590,
	591, 553, 554, 555, 556, 353, 567, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	0, 0, 0, 261, 1422, 0, 286, 0, 0, 0,
	0, 558, 0, 0, 345, 300, 0, 0, 0, 0,
	616, 624, 0, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 516, 0, 0, 548, 593, 592, 535, 544,
	0, 0, 243, 179, 536, 0, 543, 537, 541, 540,
	538, 539, 0, 608, 0, 0, 0, 0, 0, 0,
	507, 520, 0, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 0,
	0, 0, 0, 568, 0, 519, 0, 0, 1558, 545,
	546, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 542, 566, 570, 255, 630, 564, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 631, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	561, 0, 0, 0, 376, 0, 0, 614, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 565, 0,
	336, 318, 627, 508, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 612, 314, 0,
	0, 626, 607, 609, 610, 613, 617, 618, 619, 620,
	621, 623, 625, 629, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 569, 304, 305, 306, 307, 615, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 637, 611, 636, 638, 639, 635,
	640, 641, 622, 526, 0, 573, 633, 632, 634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 600, 578,
	579, 580, 525, 581, 576, 577, 601, 571, 597, 598,
	550, 574, 582, 596, 583, 599, 602, 603, 642, 643,
	589, 644, 586, 604, 595, 594, 584, 572, 605, 606,
	557, 552, 587, 588, 575, 590, 591, 553, 554, 555,
	556, 156, 353, 567, 384, 385, 386, 408, 370, 0,
	420, 0, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 963, 0,
	0, 345, 300, 0, 0, 0, 0, 616, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 548, 593, 592, 535, 544, 0, 0, 243,
	179, 536, 0, 543, 537, 541, 540, 538, 539, 0,
	608, 0, 0, 0, 0, 0, 0, 507, 520, 0,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 0, 0, 0, 0,
	568, 0, 519, 0, 0, 563, 545, 546, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 542, 566,
	570, 255, 630, 564, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 631,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 561, 0, 0,
	0, 376, 0, 0, 614, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 565, 0, 336, 318, 627,
	508, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 612, 314, 0, 0, 626, 607,
	609, 610, 613, 617, 618, 619, 620, 621, 623, 625,
	629, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	569, 304, 305, 306, 307, 615, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 637, 611, 636, 638, 639, 635, 640, 641, 622,
	526, 0, 573, 633, 632, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 126, 328, 266, 600, 578, 579, 580, 525,
	581, 576, 577, 601, 571, 597, 598, 550, 574, 582,
	596, 583, 599, 602, 603, 642, 643, 589, 644, 586,
	604, 595, 594, 584, 572, 605, 606, 557, 552, 587,
	588, 575, 590, 591, 553, 554, 555, 556, 353, 567,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 0, 0, 0, 261, 2927, 0, 286,
	0, 0, 0, 0, 558, 0, 0, 345, 300, 0,
	0, 0, 0, 616, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 0, 0, 548, 593,
	592, 535, 544, 0, 0, 243, 179, 536, 0, 543,
	537, 541, 540, 538, 539, 0, 608, 0, 0, 0,
	0, 0, 0, 507, 520, 0, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 0, 0, 0, 0, 568, 0, 519, 0,
	0, 563, 545, 546, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 542, 566, 570, 255, 630, 564,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 631, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 561, 0, 0, 0, 376, 0, 0,
	614, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 565, 0, 336, 318, 627, 508, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	612, 314, 0, 0, 626, 607, 609, 610, 613, 617,
	618, 619, 620, 621, 623, 625, 629, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 569, 304, 305, 306,
	307, 615, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 637, 611, 636,
	638, 639, 635, 640, 641, 622, 526, 0, 573, 633,
	632, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 600, 578, 579, 580, 525, 581, 576, 577, 601,
	571, 597, 598, 550, 574, 582, 596, 583, 599, 602,
	603, 642, 643, 589, 644, 586, 604, 595, 594, 584,
	572, 605, 606, 557, 552, 587, 588, 575, 590, 591,
	553, 554, 555, 556, 353, 567, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 0,
	0, 0, 261, 1422, 0, 286, 0, 0, 0, 0,
	558, 0, 0, 345, 300, 0, 0, 0, 0, 616,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 0, 548, 593, 592, 535, 544, 0,
	0, 243, 179, 536, 0, 543, 537, 541, 540, 538,
	539, 0, 608, 0, 0, 0, 0, 0, 0, 507,
	520, 0, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 517, 518, 0, 0,
	0, 0, 568, 0, 519, 0, 0, 563, 545, 546,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	542, 566, 570, 255, 630, 564, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 631, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 561,
	0, 0, 0, 376, 0, 0, 614, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 565, 0, 336,
	318, 627, 508, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 612, 314, 0, 0,
	626, 607, 609, 610, 613, 617, 618, 619, 620, 621,
	623, 625, 629, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 569, 304, 305, 306, 307, 615, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 637, 611, 636, 638, 639, 635, 640,
	641, 622, 526, 0, 573, 633, 632, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 600, 578, 579,
	580, 525, 581, 576, 577, 601, 571, 597, 598, 550,
	574, 582, 596, 583, 599, 602, 603, 642, 643, 589,
	644, 586, 604, 595, 594, 584, 572, 605, 606, 557,
	552, 587, 588, 575, 590, 591, 553, 554, 555, 556,
	353, 567, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 0, 558, 0, 0, 345,
	300, 0, 0, 0, 0, 616, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 0, 0,
	548, 593, 592, 535, 544, 0, 0, 243, 179, 536,
	0, 543, 537, 541, 540, 538, 539, 0, 608, 0,
	0, 0, 0, 0, 0, 507, 520, 0, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 517, 518, 1179, 0, 0, 0, 568, 0,
	519, 0, 0, 563, 545, 546, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 542, 566, 570, 255,
	630, 564, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 631, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 0, 0, 0, 376,
	0, 0, 614, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 565, 0, 336, 318, 627, 508, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 612, 314, 0, 0, 626, 607, 609, 610,
	613, 617, 618, 619, 620, 621, 623, 625, 629, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 569, 304,
	305, 306, 307, 615, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 637,
	611, 636, 638, 639, 635, 640, 641, 622, 526, 0,
	573, 633, 632, 634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 600, 578, 579, 580, 525, 581, 576,
	577, 601, 571, 597, 598, 550, 574, 582, 596, 583,
	599, 602, 603, 642, 643, 589, 644, 586, 604, 595,
	594, 584, 572, 605, 606, 557, 552, 587, 588, 575,
	590, 591, 553, 554, 555, 556, 0, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 353, 567, 0, 0,
	1704, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 558, 0, 0, 345, 300, 0, 0, 0,
	0, 616, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 516, 0, 0, 548, 593, 592, 535,
	544, 0, 0, 243, 179, 536, 0, 543, 537, 541,
	540, 538, 539, 0, 608, 0, 0, 0, 0, 0,
	0, 507, 520, 0, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 517, 518,
	0, 0, 0, 0, 568, 0, 519, 0, 0, 563,
	545, 546, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 542, 566, 570, 255, 630, 564, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 631, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 561, 0, 0, 0, 376, 0, 0, 614, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 565,
	0, 336, 318, 627, 508, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 612, 314,
	0, 0, 626, 607, 609, 610, 613, 617, 618, 619,
	620, 621, 623, 625, 629, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 569, 304, 305, 306, 307, 615,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 637, 611, 636, 638, 639,
	635, 640, 641, 622, 526, 0, 573, 633, 632, 634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 600,
	578, 579, 580, 525, 581, 576, 577, 601, 571, 597,
	598, 550, 574, 582, 596, 583, 599, 602, 603, 642,
	643, 589, 644, 586, 604, 595, 594, 584, 572, 605,
	606, 557, 552, 587, 588, 575, 590, 591, 553, 554,
	555, 556, 353, 567, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 558, 0,
	0, 345, 300, 0, 0, 0, 0, 616, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 548, 593, 592, 535, 544, 0, 0, 243,
	179, 536, 0, 543, 537, 541, 540, 538, 539, 0,
	608, 0, 0, 0, 0, 0, 0, 507, 520, 0,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 0, 0, 0, 0,
	568, 0, 519, 0, 0, 563, 545, 546, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 542, 566,
	570, 255, 630, 564, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 631,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 561, 0, 0,
	0, 376, 0, 0, 614, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 565, 0, 336, 318, 627,
	508, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 612, 314, 0, 0, 626, 607,
	609, 610, 613, 617, 618, 619, 620, 621, 623, 625,
	629, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	569, 304, 305, 306, 307, 615, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 637, 611, 636, 638, 639, 635, 640, 641, 622,
	526, 0, 573, 633, 632, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 600, 578, 579, 580, 525,
	581, 576, 577, 601, 571, 597, 598, 550, 574, 582,
	596, 583, 599, 602, 603, 642, 643, 589, 644, 586,
	604, 595, 594, 584, 572, 605, 606, 557, 552, 587,
	588, 575, 590, 591, 553, 554, 555, 556, 353, 567,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 1302, 0,
	0, 0, 523, 0, 0, 0, 261, 0, 0, 286,
	0, 0, 0, 0, 558, 0, 0, 345, 300, 0,
	0, 0, 0, 616, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 0, 0, 548, 593,
	592, 535, 544, 0, 0, 243, 179, 536, 0, 543,
	537, 541, 540, 538, 539, 0, 608, 0, 0, 0,
	0, 0, 0, 0, 520, 0, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 0, 0, 0, 0, 568, 0, 519, 0,
	0, 563, 545, 546, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 542, 566, 570, 255, 630, 564,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 631, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 561, 0, 0, 0, 376, 0, 0,
	614, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 565, 0, 336, 318, 627, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 1303, 1304,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	612, 314, 0, 0, 626, 607, 609, 610, 613, 617,
	618, 619, 620, 621, 623, 625, 629, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 569, 304, 305, 306,
	307, 615, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 637, 611, 636,
	638, 639, 635, 640, 641, 622, 526, 0, 573, 633,
	632, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 600, 578, 579, 580, 525, 581, 576, 577, 601,
	571, 597, 598, 550, 574, 582, 596, 583, 599, 602,
	603, 642, 643, 589, 644, 586, 604, 595, 594, 584,
	572, 605, 606, 557, 552, 587, 588, 575, 590, 591,
	553, 554, 555, 556, 353, 567, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	558, 0, 0, 345, 300, 0, 0, 0, 0, 616,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 548, 593, 592, 535, 544, 0,
	0, 243, 179, 536, 0, 543, 537, 541, 540, 538,
	539, 0, 608, 0, 0, 0, 0, 0, 0, 507,
	520, 0, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 517, 518, 0, 0,
	0, 0, 568, 0, 519, 0, 0, 563, 545, 546,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	542, 566, 570, 255, 630, 564, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 631, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 561,
	0, 0, 0, 376, 0, 0, 614, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 565, 0, 336,
	318, 627, 508, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 612, 314, 0, 0,
	626, 607, 609, 610, 613, 617, 618, 619, 620, 621,
	623, 625, 629, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 569, 304, 305, 306, 307, 615, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 637, 611, 636, 638, 639, 635, 640,
	641, 622, 526, 0, 573, 633, 632, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 600, 578, 579,
	580, 525, 581, 576, 577, 601, 571, 597, 598, 550,
	574, 582, 596, 583, 599, 602, 603, 642, 643, 589,
	644, 586, 604, 595, 594, 584, 572, 605, 606, 557,
	552, 587, 588, 575, 590, 591, 553, 554, 555, 556,
	353, 567, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 0, 558, 0, 0, 345,
	300, 0, 0, 0, 0, 616, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 0, 0,
	548, 593, 592, 535, 544, 0, 0, 243, 179, 536,
	0, 543, 537, 541, 540, 538, 539, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 520, 0, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 517, 518, 0, 0, 0, 0, 568, 0,
	519, 0, 0, 563, 545, 546, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 542, 566, 570, 255,
	630, 564, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 631, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 0, 0, 0, 376,
	0, 0, 614, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 565, 0, 336, 318, 627, 0, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 612, 314, 0, 0, 626, 607, 609, 610,
	613, 617, 618, 619, 620, 621, 623, 625, 629, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 569, 304,
	305, 306, 307, 615, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 637,
	611, 636, 638, 639, 635, 640, 641, 622, 526, 0,
	573, 633, 632, 634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 600, 578, 579, 580, 525, 581, 576,
	577, 601, 571, 597, 598, 550, 574, 582, 596, 583,
	599, 602, 603, 642, 643, 589, 644, 586, 604, 595,
	594, 584, 572, 605, 606, 557, 552, 587, 588, 575,
	590, 591, 553, 554, 555, 556, 0, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 156, 353, 49, 148,
	125, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 141, 0, 261, 0, 150, 286, 0,
	0, 0, 0, 108, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 153, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 124, 147, 154, 0, 95,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 171,
	0, 0, 0, 349, 0, 0, 285, 146, 140, 139,
	392, 0, 336, 318, 55, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 142, 143, 144, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 371, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 174, 0, 0, 0, 182, 0, 0, 0,
	145, 0, 183, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 48, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 126, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 222,
	223, 224, 225, 0, 0, 0, 384, 385, 386, 408,
	370, 353, 184, 38, 172, 175, 177, 176, 0, 47,
	5, 0, 316, 111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 994, 0,
	0, 178, 0, 0, 535, 544, 0, 0, 243, 179,
	536, 0, 543, 537, 541, 540, 538, 539, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 542, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 222, 223, 224, 225, 0, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 156, 353, 49,
	148, 125, 0, 0, 0, 0, 0, 0, 0, 316,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 345, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 445, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 0, 363, 391, 255, 382, 0,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 407, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 392, 0, 336, 318, 0, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 387, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 397, 304, 305, 306,
	307, 441, 443, 248, 400, 329, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 126, 328,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 824, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 812, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 1784, 1786, 1787,
	1788, 1789, 1790, 1791, 0, 1795, 1792, 1793, 1794, 313,
	0, 1779, 1780, 1781, 1782, 810, 1765, 1785, 0, 1766,
	312, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1783, 324, 290, 325, 277, 302, 301, 303,
	835, 837, 839, 841, 844, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 1778, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 834, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 0, 222, 223, 224, 225,
	353, 0, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 345,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 1853,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 0, 363, 391, 255,
	382, 0, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 407, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 376,
	0, 0, 0, 1852, 1843, 1851, 349, 1849, 1854, 285,
	0, 0, 0, 392, 0, 336, 318, 0, 0, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 1855,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 387, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 397, 304,
	305, 306, 307, 271, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 0, 222, 223, 224, 225, 353, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 1853, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 0, 363, 391, 255, 382, 0, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 376, 0, 0, 0, 1852,
	0, 1851, 349, 1849, 1854, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 1855, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 397, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1591, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 1592, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 929, 930, 931, 928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 1359, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1355, 0, 0, 0,
	1352, 0, 0, 0, 1354, 1351, 1353, 1357, 1358, 228,
	0, 287, 1356, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 0, 222, 223, 224, 225, 353, 0,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 747, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 345, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 756,
	757, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 760, 0, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1362,
	1363, 1364, 1365, 1366, 1367, 1360, 1361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 0, 363, 391, 255, 382, 737,
	374, 238, 736, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 407, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 392, 0, 336, 318, 0, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 745, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 387, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 746, 372, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 749, 304, 305, 306,
	307, 271, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 758, 752, 753, 754, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 376, 0, 0, 0, 1864, 1862, 0,
	349, 0, 1863, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 0, 222, 223, 224, 225,
	156, 353, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 108, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 1635,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 126, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 222, 223, 224, 225, 156, 353, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 286,
	0, 0, 0, 0, 108, 0, 0, 345, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 1626, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 0, 363, 391, 255, 382, 0,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 407, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 392, 0, 336, 318, 0, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 387, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 397, 304, 305, 306,
	307, 271, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 126, 328,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 0,
	222, 223, 224, 225, 156, 353, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 108, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1541, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 126, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 756, 757, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 737, 374, 238, 736, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 758, 752, 753, 754, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 2198, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 2201, 0, 0,
	2200, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 1154, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 1152, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1150, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1148, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 1152, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1150, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2858, 0, 178, 593, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 1152, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2560, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	1152, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1150, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1918, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 1920, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1934, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 1152, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2936, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 593, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2873, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 2811, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2642, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 2686, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1541, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 2348, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 1152, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	1920, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 1947, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 222, 223, 224,
	225, 0, 0, 0, 384, 385, 386, 408, 370, 353,
	420, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 1152, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 1465, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 1175,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 693, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 461, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 462, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 502, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	156, 406, 49, 148, 125, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	149, 824, 0, 0, 0, 0, 0, 141, 0, 0,
	0, 150, 0, 221, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 153, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 0, 222, 223, 224, 225, 824,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	0, 0, 0, 0, 0, 812, 929, 930, 931, 928,
	0, 112, 113, 0, 114, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 832, 836, 838, 840, 842,
	843, 845, 0, 849, 846, 847, 848, 0, 0, 827,
	828, 829, 830, 810, 811, 833, 0, 813, 0, 814,
	815, 816, 817, 818, 819, 820, 821, 822, 823, 825,
	831, 0, 0, 0, 0, 0, 0, 0, 835, 837,
	839, 841, 844, 0, 0, 0, 0, 0, 0, 124,
	147, 154, 0, 95, 0, 1359, 0, 0, 0, 0,
	0, 0, 0, 812, 0, 0, 0, 802, 0, 0,
	0, 146, 140, 139, 0, 826, 0, 0, 55, 0,
	0, 0, 0, 832, 836, 838, 840, 842, 843, 845,
	0, 849, 846, 847, 848, 0, 0, 827, 828, 829,
	830, 810, 811, 833, 0, 813, 0, 814, 815, 816,
	817, 818, 819, 820, 821, 822, 823, 825, 831, 0,
	0, 0, 0, 0, 0, 0, 835, 837, 839, 841,
	844, 0, 824, 0, 0, 0, 142, 143, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 826, 0, 0, 0, 0, 0, 0,
	0, 1524, 0, 0, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 145, 0, 105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2021, 2022, 1526, 0, 1355, 0, 0,
	0, 1352, 0, 0, 0, 1354, 1351, 1353, 1357, 1358,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2953, 0, 0, 812, 0, 0, 106,
	0, 0, 0, 1506, 0, 1524, 0, 0, 0, 48,
	0, 0, 0, 0, 0, 0, 832, 836, 838, 840,
	842, 843, 845, 1524, 849, 846, 847, 848, 0, 0,
	827, 828, 829, 830, 810, 811, 833, 0, 813, 1526,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	825, 831, 0, 0, 0, 0, 0, 1526, 50, 835,
	837, 839, 841, 844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	834, 126, 0, 0, 0, 1506, 826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1362, 1363, 1364, 1365, 1366, 1367, 1360, 1361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2730, 0, 0,
	0, 0, 0, 0, 1510, 0, 107, 38, 0, 0,
	0, 0, 0, 47, 0, 1514, 0, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 0, 0, 834, 1505,
	1507, 1509, 0, 1511, 1512, 1513, 1515, 1516, 1517, 1519,
	1520, 1521, 1522, 481, 0, 480, 487, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 485, 0,
	486, 490, 0, 0, 472, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 1514,
	0, 1525, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 0, 1503,
	0, 0, 0, 1505, 1507, 1509, 0, 1511, 1512, 1513,
	1515, 1516, 1517, 1519, 1520, 1521, 1522, 1503, 1523, 0,
	0, 1505, 1507, 1509, 0, 1511, 1512, 1513, 1515, 1516,
	1517, 1519, 1520, 1521, 1522, 1502, 481, 0, 480, 487,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	484, 485, 0, 486, 490, 1525, 0, 472, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 495, 0, 0,
	0, 1508, 0, 1525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 0, 499, 0, 0,
	501, 834, 0, 0, 481, 500, 480, 487, 477, 1502,
	1523, 0, 0, 0, 0, 0, 0, 0, 484, 485,
	0, 486, 490, 0, 0, 472, 0, 1502, 0, 0,
	0, 0, 0, 0, 0, 495, 0, 0, 1518, 0,
	0, 0, 473, 475, 474, 1508, 0, 0, 0, 0,
	0, 0, 479, 0, 0, 0, 1518, 0, 0, 0,
	0, 0, 0, 1508, 483, 499, 0, 0, 501, 0,
	0, 498, 0, 500, 0, 0, 0, 0, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 475, 474, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 0, 467, 0, 478, 482, 488,
	0, 489, 491, 0, 0, 492, 493, 494, 0, 0,
	496, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 475, 474, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 482, 488, 0, 489, 491, 0, 0, 492, 493,
	494, 0, 0, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 482,
	488, 0, 489, 491, 0, 0, 492, 493, 494, 0,
	0, 496, 497,
}

var yyPact = [...]int{
	275, -1000, -1000, -1000, -307, 9016, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32716, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32716, -303, 32190,
	32190, -1000, -1000, 1990, -1000, 31664, 10087, 32716, 286, 285,
	32716, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 547, -1000, 31138, -1000, -1000,
	-1000, -1000, -1000, -1000, 499, 34336, 33242, 6901, -252, -1000,
	2564, -105, 704, 714, 777, 777, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 235, 627, 30612, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2778, 184, 627, 12717,
	-6, -9, 2564, 323, 1576, -1000, 907, 33660, 146, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	6901, 6901, 9016, -313, 9016, 6901, 32716, 32716, -1000, -1000,
	-1000, -1000, 499, 34336, 6901, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -9, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33749, -1000, 1184,
	-1000, -1000, -1000, -1000, 2261, 1177, 1862, 453, 32716, -1000,
	1175, 453, -1000, -1000, -1000, 2564, 2564, -1000, 32716, 32716,
	65, 1332, -1000, 339, 317, 309, 1174, -1000, -1000, -1000,
	-1000, -1000, -1000, 380, 2641, -1000, 32716, 32716, 2279, 32716,
	-1000, 1535, 423, 34404, 2418, 989, 603, 2293, -1000, -1000,
	2256, -1000, 168, 201, 183, 379, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 188, -1000, 2508, -1000, -1000, 155, -1000,
	-1000, 169, -1000, -1000, -1000, -16, -1000, -1000, -1000, -1000,
	-1000, -1000, -102, -1000, -1000, 749, 1832, 6901, -1000, 2162,
	-1000, 3008, -1000, -1000, -1000, -1000, 4261, 8479, 8479, 8479,
	8479, -1000, -1000, 2120, 6901, 2253, 2252, -1000, -1000, -1000,
	-1000, -1000, 1123, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1861, 7953, -1000, 2247, 2246,
	2242, 2239, 2238, 2237, 2236, 2232, 2231, 2230, 2220, 2218,
	2217, 2198, 2005, 9550, 2197, 1860, 1858, 2196, 2193, 2191,
	1847, 2005, 2005, 2189, 2188, 2187, 2186, 2183, 2176, 2175,
	2174, 2172, 2169, 2168, 2167, 2165, 2164, 2160, 2152, 2151,
	2150, 2147, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1045, -1000, 2146, 2398, 2534,
	2042, 2609, 2497, 2493, 2482, 2477, 1717, -1000, -1000, -1000,
	-129, -1000, -1000, 705, -1000, 685, -1000, 32716, 32716, 32716,
	496, 496, 496, 496, 496, 530, 496, 546, 544, 540,
	496, -1000, -1000, -1000, -1000, -1000, -1000, 625, -1000, -1000,
	-1000, -1000, 1004, 32716, -1000, 2060, 1223, 2521, 433, 431,
	426, 1223, 318, -1000, 1342, 1342, 1342, 1342, 1223, 321,
	420, 2534, 2534, -48, 1342, -24, 1223, 1223, -24, 1223,
	1223, 1223, 149, -300, -1000, -1000, -1000, 1342, 1342, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2500, 2490, 499, 32716,
	101, 32716, 499, 499, 503, 1535, 415, 409, 1013, 1330,
	-1000, 1229, 32716, 32716, 32716, 32716, 1229, 1229, 16928, 16402,
	-1000, 32716, -1000, 2534, 2042, -1000, 1986, 2343, 1982, 2042,
	499, 499, 499, 499, 499, 499, 499, 499, 32716, 32716,
	30086, 499, 5839, 5839, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 9016, 1795, 1855, 143, -77, -309, 175,
	-1000, -1000, 32716, 2390, 153, -1000, -1000, -1000, 2013, -1000,
	2057, 2057, 2057, 2057, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2080, 2140, -1000, -1000, 2055, 2055, 2055,
	2013, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2076, 2076, 2079, 2076,
	32716, 6901, 32716, 2401, 310, 2132, -1000, 32716, 308, 2534,
	2398, 2534, -1000, -1000, 1102, 1712, 1846, -1000, -1000, 339,
	1274, -1000, 859, -1000, -1000, -1000, -1000, 32716, -102, 280,
	-1000, -1000, 1821, 2127, -1000, 439, 927, 1165, -1000, 115,
	34243, 25870, 1535, 25870, 32716, -1000, -1000, -1000, -1000, -1000,
	-1000, -19, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 159, -1000, 6901, 6901, 6901,
	6901, 6901, -1000, 526, 7427, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8479, 8479, 8479, 8479, 8479, 8479, 8479, 8479,
	8479, 8479, 8479, 8479, 2115, 1481, 8479, 8479, 8479, 8479,
	2343, 2706, 1007, 214, -1000, -1000, -1000, -1000, -1000, 1343,
	1832, 6901, 6901, 32716, -1000, 33704, 6901, 6901, 12343, 6901,
	2464, 6901, 6901, 6901, 1974, 3208, 32716, 6901, -1000, 1972,
	1970, -1000, -1000, 1513, 6901, -1000, -1000, 6901, -1000, -1000,
	6901, 8479, 6901, -1000, -1000, -1000, 1071, 2464, 2464, 6901,
	6901, 2464, 2464, 2464, 1302, 2464, 2464, 2464, 2464, 2464,
	2464, 2464, 2464, 1962, 1960, 2534, -252, 5313, -1000, -258,
	2398, 6901, -1000, -1000, 6901, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1844, -95, 698, 688, 618, -1000, 2456,
	-1000, 2125, 2123, 1079, 32716, 1364, 32716, 25870, 32716, 1535,
	32716, 32716, 496, 496, 496, 32716, 503, -1000, 32716, 1004,
	2448, 32716, 2621, 8479, 8479, 29560, 1342, 1223, 1223, -1000,
	-1000, 32716, -1000, -1000, -1000, 1342, 32716, 1342, 1342, 2621,
	1342, -1000, -1000, -1000, 1223, 1223, -1000, -1000, -1000, -1000,
	1342, 1342, -1000, -1000, 2621, 32716, -20, 2621, 2621, -39,
	-1000, -1000, -1000, 32716, 32716, 496, 32716, -1000, 32716, 32716,
	-1000, -1000, 32716, 2801, 32716, 29034, 2476, -1000, 25870, 32716,
	23766, -1000, -1000, 435, 438, 15350, 393, 25870, 3734, -1000,
	-1000, 1229, 1229, 1229, 1229, 3734, 3734, 1075, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 980, -1000, 154, 2398, -1000,
	-1000, -1000, -1000, -1000, 32716, 32716, 25870, 1535, 32716, 32716,
	32716, 32716, -1000, 2122, -1000, 2417, 32716, 1159, -1000, -1000,
	12191, 1070, 1159, -1000, 1355, -1000, 6901, 9016, -273, 6901,
	9016, 9016, 6901, 9016, -1000, 6901, 126, -1000, -1000, -1000,
	-1000, 1711, -1000, 1706, -1000, -1000, -1000, 1834, 1834, -1000,
	1702, -1000, -1000, -1000, -1000, 1700, -1000, -1000, 1678, -1000,
	-1000, 1954, 749, -1000, 1826, 2291, -254, -1000, 14297, 32716,
	32716, -1000, -1000, -254, -1000, 13770, 32716, 2398, -1000, 2398,
	32716, -1000, 2517, -1000, 339, 237, -1000, -1000, -1000, -1000,
	-1000, -1000, 1064, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 970, -1000, 32716, -1000, -1000, 115, 25870, 26922,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 164, -1000, -1000,
	163, -1000, 523, 95, 1258, -1000, -1000, 119, 148, 543,
	1832, -1000, 1393, 1393, 1410, -1000, 519, -1000, -1000, -1000,
	-1000, 2120, -1000, -1000, -1000, 1557, 3025, -1000, 1367, 1367,
	1193, 1193, 1193, 1193, 1193, 1448, 1448, -1000, -1000, -1000,
	4261, 2115, 8479, 8479, 8479, 8479, 476, 476, 2438, 2616,
	-1000, 6901, 1344, -1000, 6901, 1428, 1055, 1063, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1953, 1951,
	2086, 2634, 1949, 6901, -1000, -1000, 1257, 1251, 1250, -1000,
	1470, 6375, -1000, -1000, -1000, 1948, 1053, 1946, -1000, -1000,
	-1000, 1944, 1249, 922, 1942, 1406, 1941, 943, 6901, 6901,
	1248, 1247, 6901, 6901, 6901, 6901, 1939, 6901, 6901, 6901,
	6901, 6901, 6901, 6901, 6901, 15, 15, -1000, -1000, 1236,
	-1000, 1832, -1000, 1811, -1000, 955, 941, -1000, 1818, -1000,
	-1000, -1000, -1000, 692, 647, 635, 32716, 760, 10613, 32716,
	2060, 2409, 127, -1000, 950, -1000, 95, -117, 758, 2273,
	2625, 32716, 32716, 32716, 2446, 28508, -1000, 2114, 1233, -1000,
	-1000, 6901, -1000, -1000, 2264, 32716, 32716, 2621, 2621, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 32716, 2621, 2621, 1223,
	1342, -1000, -1000, 1342, -1000, -1000, 1342, -1000, 1052, -1000,
	32716, -1000, -1000, -1000, 2060, 863, -1000, 11139, 13243, 528,
	-1000, 516, 1246, 1246, 796, 1246, 1246, 1246, 1246, 373,
	359, 1246, 1246, 1246, 1246, 1246, 1246, 1246, 1246, 1246,
	1246, 1246, 1246, 1246, 1246, 2106, -1000, 125, 2470, 216,
	213, 950, 221, 2797, 940, -1000, -1000, -1000, -1000, 19032,
	19032, 14824, 19032, -1000, 1277, -1000, -1000, 515, -1000, -1000,
	758, -1000, -1000, -1000, 2105, 1328, -1000, -1000, 9550, -1000,
	3734, 3734, 3734, 3734, -1000, -1000, 19558, 32716, -1000, -111,
	-1000, -99, -1000, 848, -1000, -1000, 862, 758, 2290, 848,
	848, -1000, 10613, 32716, -1000, 2621, 5839, -1000, 23766, -1000,
	-1000, 27974, -1000, 27448, 2621, 1338, -1000, 9016, 1747, 141,
	-1000, 171, -311, 139, 1682, 136, 1832, -1000, -1000, 1938,
	1936, 1232, -1000, 1231, 1932, 1226, 1224, -1000, -52, -1000,
	2374, 784, -1000, 2104, -1000, 1220, 2363, -1000, 842, -1000,
	1326, 1217, -1000, 784, 1212, 2348, 842, -1000, -1000, 1049,
	63, -1000, -1000, 32716, 1821, 1204, 26922, 805, -1000, 510,
	1048, 1047, -1000, 25870, 186, 25870, -1000, 25870, -1000, -1000,
	283, -1000, 32716, 2397, -1000, -1000, -1000, 1769, -329, -1000,
	-1000, -1000, -1000, -1000, 1202, -1000, 476, 476, 2438, 1641,
	-1000, 8479, -1000, 8479, 2679, 1305, -1000, 6901, 1625, 33661,
	861, 18506, 32716, -1000, -1000, 6901, 6901, -1000, 2635, -1000,
	-1000, -1000, -1000, 6901, 6901, 1783, -1000, 32716, -1000, -1000,
	-1000, -1000, 18506, -1000, 8479, -1000, 6901, 896, 2579, 15,
	15, 2559, 2552, 2541, 1187, 15, 2510, 2458, 2454, 2424,
	2410, 2382, 2373, 2369, -1000, 2095, -1000, 5313, -1000, -52,
	6901, 6901, 6901, 2366, -1000, -1000, -1000, -1000, -1000, 645,
	151, 1929, 837, -1000, -1000, 32716, -1000, -1000, -1000, 1927,
	815, -1000, -1000, -1000, 33922, 2057, 2057, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2080, -1000, -1000, 2055,
	2055, 2055, 2013, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2076, 2076, 2079, 2076, -1000, 2444, -1000, 6,
	1246, 632, 25870, 398, -1000, 32716, 2288, 313, 2378, 32716,
	2073, 2071, 2069, 278, 33922, 32716, 915, -1000, 1042, 33660,
	-1000, 32716, 1832, -1000, 1535, -1000, 1223, -1000, -1000, 2621,
	1036, -1000, -1000, 2621, 1223, 1223, 1342, 32716, -1000, 2425,
	2801, -1000, 2362, 32716, -1000, -1000, 33922, 617, -1000, 637,
	496, 32716, 1478, 637, 1475, 2067, -1000, -1000, -1000, 32716,
	32716, -1000, 32716, 1469, 1464, -1000, 32716, 32716, 1673, -1000,
	1645, 1246, 1246, 1644, 1807, 1806, 1799, 1246, 1246, 1643,
	1797, 26396, 1635, 1634, 1629, 1739, 1792, 772, 1650, 1617,
	1615, 32716, 2063, 1753, 6, 1246, 211, 32716, 1311, 632,
	1721, 15876, 32716, 23766, 23766, 23766, 23766, -1000, 2331, 2313,
	-1000, 2311, 2309, 2344, 32716, 23766, 2060, -1000, 26396, -1000,
	-1000, -1000, 2343, 1171, 2431, 667, 6901, 25870, 1791, 393,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32716,
	32716, 1926, -1000, 2614, -1000, 810, -1000, -1000, 1031, -1000,
	2614, 1352, -308, 9016, 1345, 1252, -1000, 6901, 9016, 6901,
	-274, 199, -277, -1000, -1000, -1000, 1790, -1000, -1000, -1000,
	1626, -1000, 1624, 27, 44, 1454, -254, 5313, 311, 32716,
	-254, 32716, 5313, -1000, 32716, 297, -254, 32716, 1622, -1000,
	-1000, -1000, 2623, 25870, 1535, 1205, 25344, -1000, 150, -1000,
	162, 408, 1788, -1000, 533, 102, -1000, 1309, 1769, -1000,
	-1000, -1000, 8479, -1000, -1000, -1000, -1000, 1832, 6901, 1924,
	-1000, 684, 684, 1923, -1000, 2057, 2057, -1000, 2013, 2055,
	2013, 684, 684, 1921, -1000, 1996, 2354, -1000, 2333, 2297,
	6901, -1000, 1917, 2965, 1040, -134, 15, -1000, -1000, -1000,
	15, 15, 15, 15, -1000, 15, 15, 15, 15, 15,
	15, 15, 15, 456, -1000, 27, 1832, 1832, -1000, -1000,
	2370, -1000, 1785, 1784, 760, 33922, 550, 10613, 2381, 296,
	1724, -1000, -1000, 24818, 399, -1000, -1000, -1000, 507, 174,
	1619, 400, -1000, 32716, 221, 32716, -1000, -1000, -1000, -1000,
	-1000, 2378, -1000, 804, 250, 11665, 11665, 11665, 259, 1341,
	-1000, 453, 817, 1027, 23766, 32716, -1000, 23240, 1915, -1000,
	758, 2621, -1000, 32716, -1000, 2621, 2621, 1223, -1000, 296,
	-1000, -1000, -1000, 32716, 2362, 2624, -1000, 32716, -1000, 32716,
	-1000, 32716, 32716, 496, 6901, -1000, -1000, -1000, 32716, -1000,
	266, -1000, -1000, -1000, -1000, 18506, 18506, -1000, -1000, -1000,
	-1000, 1777, 1776, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 389, 32716, 1158, -1000, 1303,
	1724, 24818, 1276, 1229, 1775, 399, -1000, 1772, -1000, 787,
	32716, 32716, -1000, 908, -1000, 1271, 2272, 2283, 2272, -1000,
	-1000, -1000, -1000, 2307, -1000, 2305, -1000, -1000, 908, -1000,
	-1000, -1000, -1000, -1000, 667, -1000, 2513, 637, 637, 637,
	1904, 805, 1902, -1000, -1000, -1000, -1000, -1000, 2612, 2607,
	24292, 2612, -1000, -308, 1272, -1000, 1527, 133, 1386, 32716,
	-1000, -1000, -1000, 1889, 1888, -260, 45, 2606, 2605, 2649,
	-1000, 1883, 798, -254, -1000, -1000, 784, -1000, -1000, -1000,
	-254, -1000, 784, -1000, -1000, 1535, -1000, 160, -1000, -1000,
	-1000, -1000, -1000, -1000, 76, -1000, 32716, -1000, 1769, 1763,
	99, -1000, 1832, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6901, -1000,
	-1000, -1000, 2249, -1000, -1000, 6901, 1876, 1762, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2580, -1000, 2603, -260, -1000, -1000, -1000, -1000, -1000,
	-1000, 33922, -1000, 1389, -1000, -1000, 1761, 88, -1000, -1000,
	-1000, 1757, 1756, 1616, -1000, -1000, 1565, 1024, 103, -1000,
	-1000, -1000, -1000, -1000, -1000, 1721, 2052, -1000, 1246, 1246,
	1246, 32716, 1875, 795, -1000, -1000, -1000, -1000, 1870, 1869,
	462, 1346, 1287, -1000, 1611, 19032, 23766, 23240, 892, -1000,
	1026, -1000, -1000, -1000, 2621, -1000, -1000, 2621, -1000, -1000,
	-1000, -1000, 2624, -1000, -1000, 1416, 8479, -1000, -1000, 1754,
	17980, 616, 614, 2049, -1000, 330, 2648, -1000, 1447, 1446,
	-1000, 32716, -1000, 2046, -1000, 2044, 2088, 289, 2043, 2037,
	32716, 2240, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 386, 1156, -1000, 1753, 1751, -1000, 88, 1749, 3734,
	-1000, -1000, -1000, 32716, 787, 787, 2580, 32716, 5313, -1000,
	-1000, 6901, 2032, -1000, 6901, -1000, -1000, -1000, -1000, -1000,
	2019, 2386, -1000, -1000, -1000, -1000, -1000, -1000, 6901, 6901,
	-1000, -1000, 492, 9016, -288, 193, -1000, -1000, -1000, -263,
	1744, -1000, -1000, 2602, 1743, 1730, 32716, -1000, 784, 784,
	758, -1000, -1000, -39, -1000, -1000, -1000, 2233, -1000, 2154,
	15, -1000, 123, 6901, -263, -177, -1000, -1000, -1000, -1000,
	277, -1000, -1000, 226, -1000, -1000, 1545, 441, -1000, -1000,
	22188, 18506, 17980, 1741, -1000, 34077, 11665, 159, 34077, 722,
	1269, -1000, 1596, -1000, 1591, -1000, 2621, 892, 1026, -1000,
	-1000, 1084, -1000, -1000, -1000, -1000, 2438, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1580, 2018, -64, -1000, -1000, 2015, 22188, 22188, 549, 549,
	22188, 22188, 2014, 537, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2534, -1000, -1000, 1832, 32716, 1832, 22714,
	-1000, 2594, 2591, 1832, 749, -1000, -308, 32716, 32716, -265,
	1572, -1000, 1740, 35, -1000, -1000, 752, -267, 26, 40,
	-1000, -1000, -1000, 1800, -1000, 416, -1000, -1000, -1000, 749,
	-265, 32716, 404, 1738, -1000, -1000, 220, -1000, -1000, 1149,
	-1000, 2013, 6901, -1000, -1000, -1000, 450, 34059, -1000, -1000,
	-1000, -39, 450, 419, 215, -1000, 1568, -1000, -1000, 2580,
	-1000, 1752, 6901, 2005, -164, 22188, 1144, 1134, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1107, 1106, 22188, -1000, -1000,
	-1000, 327, -1000, 1090, 1072, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2004, -1000, -1000, 2587, -1000, 1735, 501, 29,
	40, -1000, 2586, 34, 2571, 2570, -1000, -1000, 418, -255,
	13, 12, 11, -1000, -1000, -1000, 6901, -1000, 2422, -1000,
	-1000, 75, -1000, -1000, -1000, 22188, 2396, 2058, 295, 2569,
	34077, -1000, -1000, 295, -1000, 264, -1000, 1267, -1000, 1562,
	-1000, 2534, -1000, 1884, -1000, 2281, -1000, 105, 1044, -1000,
	-1000, -1000, -1000, 1023, -1000, -1000, -1000, 21662, 32716, 1730,
	-1000, 2000, 1543, 45, 31, 2568, -1000, 1730, 2560, 1730,
	1730, 1407, -1000, 3, 1, -1, -1000, -1000, -1000, -1000,
	1734, -1000, 218, -1000, -1000, 2396, -1000, 2555, 335, -1000,
	-1000, -1000, -1000, 1538, -1000, -1000, 537, -1000, 2257, 2243,
	2629, -1000, -1000, -1000, -1000, 218, 218, 218, 218, 177,
	-1000, -1000, 1005, -1000, -1000, 2468, 17454, 20, -1000, -1000,
	-1000, 1733, -1000, 1730, -1000, -1000, 418, -1000, -1000, -1000,
	-1000, -1000, 1246, 1647, 244, -1000, -1000, -1000, 21136, 305,
	306, 293, -1000, 459, -1000, -1000, -1000, -1000, 2645, -1000,
	2643, 598, 598, -1000, -1000, 32716, -1000, 32716, -1000, 1002,
	-1000, -1000, -1000, 1025, -1000, -1000, -1000, -1000, -1000, 1533,
	-1000, 32716, -1000, 32716, 302, 1530, 8479, 1999, 8479, 1998,
	314, 1994, -1000, -1000, -1000, 1548, 352, -1000, -1000, 727,
	-1000, 1242, -1000, 20610, 32716, -1000, -1000, 999, 1993, 2554,
	-1000, 2950, 32716, 2877, 32716, 1991, 1230, 8479, -1000, -1000,
	-1000, 32716, 4787, -1000, 1016, -1000, -1000, 449, 307, -1000,
	969, -1000, 967, 20084, 1521, 2254, -1000, -1000, 1832, 32716,
	958, -1000, 32716, 299, -1000, -1000, -1000, 947, -1000, -1000,
	-1000, -1000, 449, 2347, -1000, 1506, -1000, -1000, 33985, 575,
	-1000, -1000, 33985, 301, -1000, 445, 1789, -1000, -1000, 880,
	-1000, 32716, 613, 6901, -1000, 301, 34077, -1000, 6901, 843,
	-1000, 34077, 806, -1000, -1000,
}

var yyPgo = [...]int{
	0, 146, 2683, 210, 152, 3239, 55, 224, 203, 200,
	220, 3238, 3237, 2429, 2419, 3236, 3235, 3234, 3233, 3232,
	3231, 3229, 3228, 3225, 3224, 3223, 3222, 3221, 3218, 3217,
	3216, 3214, 3212, 3203, 3199, 3198, 3193, 3189, 3188, 217,
	3187, 3186, 3185, 3183, 3182, 3181, 3180, 3179, 3178, 3177,
	3174, 3173, 3172, 3171, 3170, 3169, 3168, 3167, 3166, 3165,
	3163, 3162, 3160, 3158, 3157, 3156, 3142, 3141, 3140, 3125,
	197, 3118, 2416, 3117, 3116, 3115, 3114, 3113, 3105, 3103,
	216, 3102, 3101, 3100, 3098, 3097, 3096, 3081, 3054, 3053,
	3052, 214, 3050, 3049, 3048, 3047, 3046, 3045, 205, 3044,
	141, 163, 3043, 3041, 3040, 3039, 3038, 211, 195, 49,
	3037, 38, 3036, 194, 3035, 122, 3033, 120, 3032, 3030,
	3029, 3028, 3027, 3026, 3024, 3018, 3017, 3016, 3014, 3010,
	71, 3009, 94, 123, 161, 219, 1205, 229, 221, 164,
	144, 70, 3008, 2404, 2994, 131, 198, 126, 24, 2993,
	143, 2991, 133, 37, 26, 227, 115, 41, 129, 99,
	2989, 182, 81, 80, 2988, 2986, 234, 176, 2985, 97,
	2983, 2982, 2981, 2980, 165, 170, 2979, 2978, 101, 2977,
	2976, 105, 2975, 47, 172, 139, 166, 2968, 258, 91,
	93, 145, 2967, 2966, 82, 2964, 2963, 2961, 2960, 154,
	2959, 2958, 113, 66, 2954, 2952, 2949, 46, 2947, 65,
	2945, 53, 2944, 2942, 2941, 2940, 54, 2939, 2938, 17,
	21, 23, 2937, 20, 2936, 140, 2935, 2934, 2931, 96,
	2929, 2, 2927, 201, 112, 77, 119, 2926, 380, 2925,
	2920, 2919, 136, 2918, 495, 2917, 2916, 2915, 2914, 2912,
	118, 2910, 192, 36, 2909, 75, 110, 106, 171, 179,
	2907, 2904, 2902, 225, 74, 60, 0, 2901, 130, 2900,
	2899, 2896, 218, 2893, 204, 174, 138, 189, 231, 191,
	2891, 2888, 69, 2887, 134, 73, 43, 100, 13, 15,
	350, 2886, 226, 155, 2885, 168, 2884, 121, 1, 116,
	2883, 2881, 32, 238, 2880, 2878, 2877, 95, 2876, 2873,
	132, 92, 2871, 2866, 2865, 35, 2864, 30, 28, 2863,
	84, 2862, 223, 2861, 199, 128, 157, 148, 125, 193,
	202, 64, 59, 2849, 1430, 124, 79, 22, 2847, 196,
	2845, 149, 90, 2844, 104, 2843, 212, 328, 181, 2838,
	158, 8, 33, 29, 2837, 9, 2836, 108, 187, 2835,
	2834, 19, 42, 2833, 18, 2832, 2831, 2828, 2826, 5,
	2825, 2824, 2823, 4, 7, 2820, 3, 184, 2818, 2816,
	2815, 2814, 40, 103, 2813, 102, 169, 2812, 2811, 72,
	2809, 2808, 2806, 1519, 2805, 2802, 2797, 2796, 2795, 2793,
	2792, 2789, 2788, 2785, 76, 45, 2783, 2782, 2777, 2770,
	62, 114, 2769, 2767, 2766, 2765, 31, 151, 2764, 16,
	2762, 27, 25, 34, 2761, 111, 2760, 12, 156, 2755,
	2754, 14, 2753, 2752, 10, 11, 2750, 2749, 87, 2731,
	68, 44, 137, 83, 2725, 67, 183, 117, 2723, 2722,
	208, 215, 167, 2721, 147, 209, 232, 2719, 185, 2718,
	2717, 2716, 2712, 2710, 2708, 879, 2707, 2706, 207, 52,
	89, 86, 2703, 2700, 2699, 63, 135, 88, 85, 160,
	2698, 162, 2695, 2694, 78, 2693, 2692, 2687, 2681, 2679,
	159, 2677, 2675, 2670, 2665, 206, 213, 2663,
}

//line mysql_sql.y:9531
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 489, 493, 493, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 105, 487, 487, 487, 488, 488, 102, 122,
	121, 124, 124, 123, 123, 120, 120, 116, 119, 119,
	118, 118, 117, 112, 114, 114, 113, 115, 115, 103,
	91, 104, 437, 437, 436, 436, 435, 435, 390, 390,
	434, 434, 434, 433, 433, 433, 432, 432, 431, 431,
	430, 430, 428, 428, 429, 427, 426, 426, 426, 424,
	424, 424, 420, 420, 422, 421, 421, 423, 415, 415,
	418, 418, 416, 416, 416, 416, 419, 414, 414, 414,
	413, 413, 90, 90, 90, 336, 336, 89, 89, 350,
	350, 350, 350, 350, 348, 348, 348, 348, 348, 348,
	347, 347, 346, 346, 351, 351, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 81, 81, 81, 81,
	84, 84, 84, 85, 345, 345, 345, 82, 83, 83,
	335, 335, 340, 340, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 344, 344, 344,
	342, 342, 341, 341, 343, 343, 75, 75, 75, 78,
	77, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	76, 76, 76, 76, 76, 76, 71, 71, 71, 71,
	71, 70, 70, 72, 72, 332, 332, 331, 86, 86,
	87, 491, 491, 490, 492, 492, 492, 492, 88, 94,
	94, 94, 94, 94, 94, 94, 93, 93, 96, 96,
	95, 97, 80, 80, 80, 80, 80, 80, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 461, 461, 461,
	463, 463, 270, 271, 494, 273, 269, 269, 269, 457,
	457, 458, 459, 460, 460, 460, 92, 11, 11, 11,
	11, 11, 11, 69, 74, 224, 224, 225, 225, 225,
	225, 225, 225, 225, 229, 229, 229, 228, 226, 226,
	226, 226, 226, 226, 227, 230, 230, 67, 73, 73,
	73, 474, 474, 68, 481, 481, 393, 393, 284, 284,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 397, 398, 280, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 46, 45, 45,
	45, 321, 321, 44, 495, 495, 259, 259, 56, 55,
	48, 57, 58, 59, 60, 61, 62, 43, 54, 54,
	54, 54, 54, 54, 54, 54, 65, 65, 409, 409,
	497, 497, 497, 63, 64, 392, 392, 392, 53, 52,
	51, 50, 49, 49, 42, 42, 41, 41, 47, 128,
	129, 277, 277, 277, 279, 279, 275, 496, 496, 364,
	364, 278, 278, 40, 40, 40, 40, 66, 276, 276,
	258, 274, 274, 274, 12, 12, 10, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 23,
	24, 26, 329, 329, 326, 25, 18, 17, 20, 16,
	19, 21, 22, 22, 9, 9, 9, 9, 13, 13,
	14, 140, 140, 189, 189, 469, 469, 465, 465, 466,
	466, 466, 467, 467, 468, 468, 98, 403, 403, 403,
	403, 403, 403, 8, 162, 162, 402, 402, 402, 402,
	402, 402, 333, 333, 446, 446, 446, 447, 161, 161,
	156, 156, 404, 404, 299, 448, 448, 412, 412, 411,
	411, 410, 410, 159, 159, 160, 160, 143, 143, 108,
	108, 417, 417, 417, 417, 425, 425, 389, 389, 216,
	216, 253, 253, 254, 254, 133, 133, 134, 134, 134,
	134, 134, 134, 454, 454, 456, 456, 455, 158, 158,
	154, 154, 155, 155, 155, 153, 153, 152, 151, 151,
	150, 148, 148, 148, 149, 149, 149, 136, 136, 136,
	135, 135, 135, 135, 135, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 137, 137, 462,
	462, 462, 394, 394, 394, 400, 400, 235, 235, 236,
	236, 234, 234, 138, 138, 139, 139, 139, 139, 233,
	233, 232, 141, 141, 147, 146, 146, 142, 142, 142,
	142, 243, 243, 242, 242, 242, 242, 101, 106, 106,
	107, 165, 165, 241, 240, 240, 240, 164, 164, 163,
	163, 157, 157, 145, 145, 145, 145, 239, 144, 237,
	486, 486, 485, 485, 484, 482, 482, 482, 483, 483,
	483, 483, 439, 439, 439, 439, 439, 264, 264, 264,
	268, 268, 267, 267, 267, 267, 267, 272, 7, 7,
	7, 7, 7, 30, 30, 30, 30, 30, 30, 30,
	30, 36, 173, 174, 37, 175, 175, 176, 176, 177,
	177, 178, 179, 180, 180, 180, 180, 35, 166, 166,
	167, 167, 168, 168, 169, 170, 170, 170, 172, 171,
	34, 27, 470, 473, 471, 471, 475, 475, 475, 476,
	476, 476, 477, 477, 28, 125, 130, 130, 127, 132,
	132, 132, 132, 132, 126, 472, 478, 478, 478, 330,
	330, 327, 328, 328, 325, 324, 324, 324, 480, 480,
	479, 479, 479, 265, 265, 29, 320, 320, 322, 323,
	323, 323, 314, 314, 314, 314, 33, 318, 318, 319,
	319, 319, 319, 319, 315, 315, 317, 317, 313, 313,
	313, 313, 313, 32, 131, 131, 312, 312, 310, 310,
	308, 308, 309, 309, 307, 307, 307, 311, 311, 31,
	31, 31, 110, 109, 109, 109, 256, 256, 255, 255,
	111, 38, 201, 201, 378, 378, 378, 378, 378, 396,
	396, 396, 379, 379, 379, 380, 380, 380, 381, 381,
	381, 381, 381, 395, 395, 352, 352, 353, 353, 353,
	356, 356, 370, 370, 371, 371, 369, 369, 376, 376,
	375, 375, 374, 374, 373, 373, 372, 372, 372, 372,
	367, 367, 366, 366, 354, 354, 354, 354, 354, 355,
	355, 355, 365, 365, 368, 368, 207, 207, 208, 208,
	208, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	444, 444, 445, 210, 210, 210, 214, 214, 214, 214,
	214, 214, 209, 209, 211, 211, 190, 190, 188, 188,
	181, 181, 182, 182, 183, 183, 183, 187, 187, 186,
	186, 184, 184, 185, 185, 185, 185, 338, 338, 442,
	442, 443, 443, 438, 438, 438, 441, 441, 441, 441,
	441, 440, 440, 191, 251, 251, 251, 266, 266, 266,
	266, 250, 250, 250, 206, 206, 205, 205, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 337, 337, 281, 281, 282, 282, 223,
	222, 222, 222, 222, 222, 220, 221, 219, 219, 219,
	219, 219, 218, 218, 217, 217, 217, 316, 316, 215,
	215, 213, 213, 213, 212, 212, 212, 377, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 249, 249, 291, 291, 296, 296, 453, 453,
	452, 192, 192, 192, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 202, 202, 202, 361, 361, 361, 361,
	362, 362, 362, 362, 363, 363, 363, 359, 359, 360,
	360, 300, 301, 301, 401, 401, 357, 357, 358, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 408, 408, 408, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 464, 464, 464, 449, 449,
	449, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 451, 451, 451, 451, 451, 451, 451,
	451, 451, 451, 451, 451, 451, 451, 451, 451, 451,
	247, 247, 247, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 302, 302,
	303, 303, 405, 405, 405, 405, 405, 405, 406, 406,
	407, 407, 407, 407, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 289, 244, 244, 244, 304, 297, 297,
	298, 298, 292, 292, 292, 292, 292, 292, 292, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 293, 293, 295, 295, 306, 306, 306, 305, 305,
	305, 305, 305, 305, 305, 204, 204, 204, 204, 286,
	286, 286, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 194, 194, 194, 194, 198, 198, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 199, 199, 199, 199, 197, 197, 197,
	197, 197, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 99, 100,
	100, 196, 252, 252, 382, 382, 385, 385, 383, 383,
	384, 386, 386, 386, 387, 387, 387, 388, 388, 388,
	391, 391, 257, 257, 257, 263, 263, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 4, 6, 1, 1, 1, 2, 4, 6,
	1, 4, 1, 3, 3, 4, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 2,
	2, 0, 1, 4, 2, 4, 1, 5, 3, 2,
	1, 2, 2, 4, 4, 5, 2, 1, 3, 4,
	4, 1, 2, 9, 7, 1, 3, 3, 1, 1,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 1, 2, 3,
	4, 7, 2, 3, 3, 4, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 2, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 7, 4, 1, 3, 2, 2, 2,
	1, 3, 3, 4, 0, 1, 2, 1, 2, 2,
	1, 2, 3, 2, 3, 1, 1, 7, 7, 8,
	8, 0, 4, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 2, 5,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 5,
	3, 3, 2, 4, 4, 4, 4, 4, 1, 1,
	1, 3, 3, 1, 1, 1, 6, 8, 0, 1,
	1, 1, 1, 5, 5, 0, 1, 1, 3, 3,
	3, 4, 6, 7, 4, 4, 7, 8, 3, 3,
	3, 0, 2, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 4, 3, 1, 3,
	1, 1, 3, 5, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 1, 3, 1, 4, 6, 4, 4, 4,
	3, 6, 3, 5, 1, 1, 2, 2, 11, 8,
	9, 1, 3, 2, 4, 0, 2, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 4, 2, 1, 5,
	4, 4, 2, 5, 1, 3, 2, 1, 5, 4,
	4, 2, 0, 5, 0, 1, 3, 3, 1, 3,
	1, 3, 1, 3, 4, 0, 1, 0, 1, 1,
	3, 1, 1, 0, 4, 1, 3, 2, 1, 0,
	8, 0, 4, 7, 4, 0, 2, 0, 2, 0,
	2, 0, 4, 1, 3, 1, 1, 4, 3, 4,
	5, 4, 5, 2, 3, 1, 3, 6, 0, 3,
	0, 1, 2, 4, 4, 0, 1, 3, 1, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 3, 3,
	1, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 7, 7, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 2, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 4, 4,
	3, 2, 2, 2, 3, 2, 3, 4, 1, 3,
	4, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 3, 2, 3, 1, 4, 3,
	0, 1, 1, 2, 5, 2, 2, 2, 0, 2,
	3, 3, 0, 1, 3, 1, 3, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 12, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	7, 7, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 0, 2, 7, 8, 0, 2, 6, 0,
	2, 2, 3, 3, 4, 1, 0, 2, 2, 1,
	3, 2, 1, 3, 2, 1, 3, 2, 0, 1,
	3, 4, 3, 1, 1, 4, 1, 3, 1, 1,
	1, 1, 0, 1, 1, 1, 11, 0, 2, 3,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 6, 0, 4, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 11,
	9, 11, 2, 2, 4, 5, 1, 3, 0, 3,
	5, 10, 0, 2, 0, 3, 2, 4, 3, 0,
	2, 1, 0, 2, 3, 0, 2, 3, 0, 3,
	2, 4, 3, 0, 1, 0, 6, 0, 3, 5,
	0, 4, 0, 3, 1, 3, 4, 5, 0, 3,
	1, 3, 2, 3, 1, 2, 0, 4, 6, 5,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 5,
	6, 5, 0, 3, 0, 1, 0, 1, 1, 3,
	2, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 4,
	1, 3, 3, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 1, 1, 1, 7,
	7, 2, 1, 7, 7, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 4, 1, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 6, 6, 1, 1, 1,
	1, 1, 4, 4, 0, 2, 0, 1, 1, 2,
	4, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	2, 2, 2, 0, 1, 1, 1, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 2, 5, 0,
	1, 3, 0, 1, 0, 2, 0, 1, 6, 8,
	6, 5, 5, 6, 6, 6, 6, 5, 6, 6,
	6, 6, 6, 6, 6, 6, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 4, 4, 4, 3,
	4, 6, 6, 7, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 8, 4, 2, 3, 2, 4, 2, 2,
	4, 6, 2, 2, 4, 6, 4, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 0, 1,
	1, 3, 3, 3, 3, 3, 2, 1, 1, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 1,
	3, 4, 4, 5, 4, 5, 3, 4, 5, 6,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -489, -493, -2, -5, 554, -1, -4, -100, -75,
	-7, -102, -103, -8, -98, -9, -10, -12, -79, -93,
	-95, -97, -96, -39, -11, -92, -70, -71, -81, -86,
	-89, -90, -91, -104, -99, -101, -133, -105, 547, -76,
	-77, -78, -30, -29, -28, -27, -125, 553, 409, 12,
	458, -13, -14, -454, -15, 238, -269, -270, -271, -273,
	-494, -40, -41, -42, -49, -50, -51, -52, -53, -63,
	-64, -65, -43, -44, -45, -48, -46, -56, -55, -57,
	-58, -59, -60, -61, -62, -47, -128, -129, -66, -68,
	-67, -73, -69, -74, -127, 213, -72, 62, -82, -83,
	-84, -85, -87, -88, 340, 346, 399, 546, 47, -134,
	-136, 557, 141, 142, 144, 145, -31, -32, -33, -34,
	-35, -36, -38, -37, 209, 14, 491, -16, -19, -17,
	-20, -18, -25, -26, -24, -21, -23, -126, -22, 233,
	232, 37, 296, 297, 298, 344, 231, 210, 13, 30,
	41, 322, -135, 68, 211, -137, 10, 559, -6, -3,
	-2, -112, -116, -120, -123, -124, -121, -122, -4, -100,
	99, 223, 548, -266, 336, 549, 551, 550, 71, 79,
	-260, -262, 340, 346, 546, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 461, 533, 534, 535, 536, 320, 321, 488, 250,
	274, 370, 277, 284, 141, 160, 154, 182, 174, 149,
	254, 289, 255, 78, 144, 444, 89, 421, 396, 147,
	269, 271, 273, 276, 256, 170, 165, 268, 252, 163,
	257, 39, 258, 187, 259, 260, 493, 417, 319, 423,
	281, 394, 164, 418, 272, 420, 189, 193, 435, 436,
	158, 159, 425, 438, 186, 230, 42, 490, 242, 439,
	191, 185, 181, 447, 285, 283, 184, 157, 180, 253,
	51, 195, 194, 196, 390, 391, 392, 393, 261, 262,
	334, 434, 177, 166, 324, 150, 22, 442, 237, 422,
	347, 263, 278, 286, 190, 192, 244, 249, 492, 398,
	248, 282, 440, 162, 241, 270, 236, 443, 151, 349,
	264, 145, 275, 437, 446, 50, 362, 156, 148, 227,
	142, 246, 251, 11, 265, 266, 267, 288, 287, 279,
	178, 243, 183, 168, 155, 179, 143, 245, 445, 363,
	544, 322, 379, 176, 173, 247, 220, 441, 424, 146,
	383, 364, 171, 290, 540, 541, 542, 335, 318, 291,
	292, 169, 234, 415, 416, 293, 295, 389, 311, 365,
	397, 371, 366, 202, 299, 427, 429, 188, 543, 300,
	301, 302, 419, 303, 304, 305, 306, -343, -341, -266,
	546, 346, 340, 322, -175, -266, 558, -143, 38, -188,
	-266, -143, -72, -14, -13, -135, -136, -188, 217, -274,
	23, 394, -80, 395, 213, 68, -266, -9, -91, -8,
	-98, -70, -133, 399, -272, -266, 296, 296, -272, 217,
	-266, 248, 378, -393, 223, -347, -320, 249, -346, -322,
	-349, -323, 31, 209, 211, 210, 245, 14, 344, 219,
	12, 10, 345, 231, 24, 25, 27, 13, 346, 348,
	28, 349, 352, 353, 354, 41, 357, 358, 238, 71,
	79, 74, 256, -174, -266, -298, -292, 96, 239, -294,
	-287, -288, -290, -434, -428, -285, 68, 123, 124, 131,
	97, -289, -377, 35, 99, 498, 459, -245, -246, -247,
	-248, -249, -266, -429, -427, 74, 80, 83, 86, 87,
	85, 84, 167, 82, 75, 135, 136, -136, 71, -449,
	506, -261, 527, 533, 534, 535, 536, 526, 47, -399,
	-407, 216, -405, 134, 172, 234, 168, 12, 129, 389,
	169, 503, 523, 461, 507, 530, 500, 501, 495, 496,
	497, 499, 508, 510, 522, -408, 518, 528, 529, 516,
	531, 532, 73, 72, 521, 520, 509, 504, 505, 511,
	494, 502, 512, 513, 519, 524, 525, 328, 89, 329,
	330, 451, 323, 331, 223, 394, 56, 332, 333, 334,
	335, 336, 458, 337, 57, 338, 327, 238, 379, 339,
	171, 188, 463, 462, 464, 455, 452, 450, 453, 454,
	456, 457, 514, 515, 517, -106, -107, 538, -152, -153,
	-238, 19, 6, 7, 8, 9, -487, 396, 492, 146,
	143, -334, 146, 95, 151, 150, -334, 299, 244, 341,
	220, 320, 379, 303, 248, -314, -312, -395, 293, 289,
	218, 228, 227, 90, 451, 216, 355, -465, -466, 206,
	207, 208, -456, 484, -455, -266, 330, 26, 217, 341,
	244, 429, 427, 428, 430, 431, 432, 433, -54, -409,
	-392, 424, 423, -278, 416, 422, 414, 426, 417, 321,
	305, 304, 209, 555, 485, -257, 365, 397, 448, 449,
	342, 398, 435, 437, 418, 89, 175, 172, 220, 217,
	320, 451, 379, 303, -465, 248, 378, 40, -340, 389,
	-339, -341, 435, 436, 437, 447, 72, 73, 434, -257,
	89, 415, 415, -153, -238, -152, -134, -136, -101, -454,
	218, 320, 379, 248, 219, 217, 220, 451, 296, 341,
	244, 303, -394, -462, 31, -400, 203, 204, 205, 32,
	33, -1, 103, 559, -292, -292, -6, 560, -6, -292,
	-266, -266, 138, -194, -198, -195, -197, -196, -200, -199,
	172, 173, 134, 176, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 30, 188, 234, 168, 169, 170,
	171, 189, 154, 174, 489, 197, 155, 198, 156, 199,
	157, 200, 158, 159, 201, 160, 163, 164, 165, 162,
	137, 68, 137, 74, -159, 240, -188, 137, -159, -153,
	-152, -153, -188, -250, -266, 396, 106, -80, -80, 395,
	-457, -458, -459, -461, 213, 395, 394, 137, 256, 15,
	-272, -272, 66, -188, -322, 248, -347, -320, 35, 65,
	138, 221, 138, 65, 68, 342, 320, 379, 343, 451,
	217, 355, 220, 248, 356, 320, 379, 217, 220, 451,
	248, 320, 217, 220, 379, 248, 356, 414, 415, 220,
	26, 347, 350, 351, 415, -413, 447, 138, 95, 92,
	93, 94, -292, 113, -305, 106, 107, 108, 109, 110,
	111, 112, 120, 119, 130, 123, 124, 125, 126, 127,
	128, 129, 121, 122, 116, 96, 114, 118, 115, 98,
	-136, -292, -298, 47, -290, -290, -290, -290, -377, -296,
	-292, 68, 68, 137, 74, -292, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, -406, 68,
	68, -302, -303, 68, 68, -285, -250, 68, 74, 74,
	68, 68, 68, 74, -303, -303, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, -153, 138, 68, -108, 38,
	-155, 21, -137, -136, 20, 31, 32, 31, 32, 31,
	32, 31, 32, 80, 440, 491, 149, 150, 151, -173,
	-266, -175, -166, -266, -310, 223, -310, -310, -310, -310,
	219, -310, 217, 217, 217, -310, -467, 153, 138, -456,
	-158, 68, -277, 114, 118, 23, 246, 246, 246, -277,
	283, -495, -496, 15, 116, -275, -496, -275, -275, -277,
	-497, 219, 425, 42, 247, 246, -154, -155, -154, 419,
	415, -364, 420, 421, -279, -496, -278, -277, -277, -278,
	-277, -277, -277, 217, 220, 451, 303, 556, -495, -495,
	30, 30, -393, -188, -393, 485, -258, -266, -393, -393,
	-468, 222, -322, 248, 248, 138, 106, 23, -342, 106,
	117, -341, -341, -341, -341, -342, -342, -209, 40, -265,
	134, -266, 74, -209, 40, -491, -490, -188, -154, -137,
	-136, 69, 69, 69, -393, -393, -393, -393, -393, -393,
	-393, -393, -272, -166, -175, 223, -393, -138, -139, 125,
	-292, -266, -138, -3, -114, -113, 100, 101, 103, 549,
	336, 548, 552, 546, -341, 40, -388, 363, 362, -382,
	-384, 68, -383, 68, -383, -383, -383, 68, 68, -385,
	68, -385, -385, -382, -386, 68, -386, -387, 68, -386,
	-266, -297, -298, -266, 38, -402, 47, -133, 68, 30,
	68, -266, -403, 47, -133, 68, 30, -154, -108, -155,
	137, 80, 74, -80, 69, 138, -460, 86, 87, -463,
	186, 178, -266, -94, 74, -7, -8, -9, -10, -39,
	-70, -133, -430, -428, 68, 31, 388, 65, 15, -348,
	217, 451, 341, 244, 220, 320, -346, -329, -326, -324,
	-265, -322, -325, -324, -351, -250, 415, -109, 400, 295,
	-292, -292, -292, -292, -292, 85, 96, 318, 86, 87,
	-287, -306, 31, 291, 292, -288, -288, -288, -288, -288,
	-288, -288, -288, -288, -288, -288, -288, -295, -304, -377,
	68, 116, 114, 118, 115, 98, -290, -290, -288, -288,
	69, 138, -453, -452, 100, -292, -292, -266, -450, -451,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 332, 327, 333, 331, 323, 339, 334, 335, 171,
	482, 483, 476, 477, 478, 479, 480, 481, -297, -297,
	-292, -450, -297, -244, 32, 31, -298, -298, -298, 69,
	-292, -464, 316, 315, 317, -156, -266, -297, 69, 69,
	69, 80, -298, -298, -297, -288, -297, -451, -244, -244,
	-298, -298, -244, -244, -244, -244, 125, -244, -244, -244,
	-244, -244, -244, -244, -244, 69, 69, -154, -107, -411,
	-410, -292, 40, 539, -108, -292, -151, -150, -292, -488,
	74, 441, 442, 147, 150, 149, 34, 68, 68, 137,
	-188, 96, -470, -266, -330, -327, -324, -266, -320, -266,
	-266, -310, -310, -310, -188, -468, -455, 34, -157, -266,
	-234, 16, -290, -290, -324, 248, -495, -277, -277, -259,
	-258, -279, -274, -279, -279, -234, -496, -277, -277, -279,
	-275, -234, -266, 415, -234, -234, -364, -276, -266, -276,
	-310, -258, -259, -259, -188, -224, -225, 214, 211, 210,
	-231, 212, 360, 250, -311, 254, 78, 255, 396, 256,
	219, 258, 259, 260, 230, 261, 262, 263, 389, 264,
	265, 266, 267, 343, 6, 306, 40, -470, -470, 30,
	30, -330, -266, -146, -141, -145, -142, -147, -237, -239,
	-144, 68, -188, -136, -266, 31, 388, -345, 388, 31,
	-320, -339, -335, 74, 389, -325, -344, 65, 134, -410,
	-342, -342, -342, -342, -344, -344, 133, 138, -492, 440,
	441, 206, -108, -190, -188, -470, -329, -320, -266, -190,
	-190, -266, 68, 35, -266, -233, 138, -232, 15, -267,
	-266, 34, 74, 137, -233, -115, -113, 102, -292, -6,
	548, -292, -6, -6, -292, -6, -292, -391, 364, 80,
	80, -252, 74, -252, 80, 80, 80, 69, 74, -333,
	65, -404, -299, -448, 538, -161, 69, -156, -446, -447,
	-156, -160, -266, -404, -161, 69, -446, -108, -108, -266,
	23, -80, -458, 137, 138, -157, -348, -328, -325, -350,
	125, -266, -336, 138, 491, 561, 72, 221, -480, -479,
	380, 69, 138, -414, 222, 458, 74, 562, 202, 85,
	318, 86, 87, -377, -298, -295, -290, -290, -288, -288,
	-293, 235, -293, 95, -292, -291, -452, 102, -292, 34,
	138, 66, 137, 69, 69, 15, 15, 69, -292, 69,
	69, 69, 69, 15, 15, -292, 69, 137, 69, 69,
	69, 69, 66, 69, 138, 69, 138, -298, -292, 69,
	69, -292, -292, -292, -298, 69, -292, -292, -292, -292,
	-292, -292, -292, -292, -358, 410, -358, 138, 69, 74,
	138, 22, 138, -148, 36, 37, 148, 151, 151, 150,
	-174, -176, -177, -178, -179, -180, 116, 139, 140, -167,
	-168, -169, -170, -194, -250, 173, 176, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 234, 168,
	169, 170, 171, 189, 154, 174, 155, 156, 157, 158,
	159, 160, 163, 164, 165, 162, -266, -158, 35, -473,
	367, -481, 138, 40, -479, 451, -313, 66, -131, 15,
	-188, -188, -188, -201, 34, 15, -140, -189, -266, 68,
	69, 138, -292, -321, 66, -266, -259, -234, -234, -188,
	-266, -234, -234, -277, -279, -279, -275, 137, -258, -158,
	138, -187, -191, 225, -184, -186, -250, -282, -185, 228,
	-443, 226, 224, 90, 229, 280, 91, 219, -226, 219,
	91, -266, 225, 229, 224, -227, 219, 221, -263, 106,
	-263, -257, 133, -263, -263, -263, -263, 257, 257, -263,
	-263, -263, -263, -263, -263, -263, -263, -263, -263, -263,
	-263, -263, -263, 68, -474, 367, 30, 326, 326, -481,
	-132, 320, 30, -240, -241, -242, -243, 54, 58, 60,
	55, 56, 57, 61, 30, 138, -264, -268, 34, -266,
	74, -264, -136, -141, -146, -264, 68, 221, 68, 106,
	-344, -344, -344, -344, 40, -265, -490, 447, 441, 138,
	65, -167, -175, -234, -139, -141, -266, 74, -266, 125,
	-234, 103, -6, 101, -119, -118, -117, 104, 546, 552,
	103, 103, 103, 69, 69, 69, 138, 69, 69, 69,
	138, 69, 138, -417, 420, 39, 138, 68, 69, 138,
	47, 138, 106, 69, 138, 69, 47, 137, 396, -266,
	-428, 69, -350, 138, 221, 137, 137, -326, 346, -265,
	-328, 20, 491, -250, 38, -256, -255, 74, 562, 69,
	-293, -293, 95, -290, -287, 69, 103, -292, 101, -192,
	-194, 362, 363, -193, -199, 134, 172, 234, 171, 170,
	168, 362, 363, -209, -266, -292, -292, 69, -292, -292,
	15, -266, -209, -288, -292, -153, 69, -357, -358, -357,
	69, 69, 69, 69, -357, 69, 69, 69, 69, 69,
	69, 69, 69, 68, -410, -417, -292, -292, -150, -149,
	43, 151, 354, 69, 138, -250, 69, 138, -194, 34,
	-476, 422, 369, -263, -284, -283, 322, 41, -397, 389,
	375, 376, -327, 248, -266, 65, 310, 311, 312, 313,
	-308, -309, -307, -311, -470, 68, 68, 68, -378, 300,
	-194, -188, -140, -266, 15, 138, -469, 137, -1, -266,
	-320, -277, -234, -496, -234, -277, -277, -279, -266, 34,
	-225, -229, 44, 46, -191, -194, -185, -442, -443, -310,
	-266, 91, -442, 91, 68, -266, -266, -266, 91, 91,
	-266, -228, -276, 80, 80, -263, -263, 80, 74, 74,
	74, -263, -263, 80, 74, -268, 80, 80, 80, 80,
	40, 74, -214, 40, 268, 272, 269, 270, 271, 80,
	40, 80, 40, 80, 40, -266, 68, -444, -445, 74,
	-476, -263, 326, -341, 106, -284, -130, 78, 31, -162,
	214, 211, -470, -332, -331, -250, -145, -145, -145, -145,
	54, 54, 54, 59, 54, 59, 54, -242, -332, -147,
	-158, -268, 69, -486, -485, -484, -482, 62, 222, 63,
	-297, -328, -280, 74, -335, -188, -188, 69, -236, 17,
	137, -236, 99, -6, -115, -117, -292, -6, -292, 548,
	336, 549, 74, 80, 80, -425, 406, 401, 403, 91,
	-299, -412, -411, 47, -133, -156, -404, -447, -410, -266,
	47, -133, -404, -266, 80, 15, -325, -320, 125, 125,
	-266, 347, -336, 74, 368, 74, 217, 563, 138, 106,
	-256, -287, -292, 69, -202, 159, 158, -202, 69, -383,
	-383, -382, -385, -382, -202, -202, 69, 69, 23, 69,
	69, 69, -292, 69, 69, 138, -401, 460, -357, -357,
	-357, -357, -357, -357, -357, -357, -357, -357, -357, -357,
	-357, -301, -300, 240, -425, 44, 45, 74, 74, -178,
	-194, 215, -169, 40, -133, -477, 78, -471, 74, -266,
	-478, 78, 370, 136, 324, 40, 371, 372, 386, 319,
	80, 80, 377, -472, -266, -132, -188, -307, -257, 133,
	259, 303, -181, -182, -183, -191, -184, -186, -181, -181,
	-379, 302, 20, 80, 124, -159, 66, 137, -141, -189,
	-266, 125, 69, -234, -266, -234, -234, -277, -133, -250,
	-229, -206, -205, -203, 85, 96, 40, 360, -204, 78,
	133, 273, 251, 274, -223, -281, 65, 366, 224, 90,
	91, 348, -282, -440, -266, -438, -440, -266, -438, -438,
	-310, -292, -266, -230, 308, 309, -209, -209, 74, 74,
	-210, 251, -190, 69, 138, 106, -477, -471, 106, -342,
	74, -478, 74, 138, -162, -162, -234, 138, 106, -164,
	-163, 65, 66, -165, 65, -163, 54, 54, -234, -484,
	-483, 23, -443, -443, -443, 69, 69, -235, 18, 20,
	125, -235, 103, 101, 103, 103, -266, 69, 69, -389,
	540, -421, -423, 401, 20, 20, 13, 69, -404, -404,
	-320, -336, 389, -188, -255, 74, 563, -292, 69, -292,
	69, 74, -153, 20, -389, -171, -194, -285, 74, -475,
	380, 74, 74, 80, 40, 80, 136, 373, -398, -130,
	68, -263, -263, -263, -266, 69, 138, 69, 69, -380,
	239, 80, 124, 80, 124, 80, -264, -141, -266, -234,
	-469, 137, -234, -234, -203, 85, -288, 74, -211, -265,
	134, -212, 40, 272, 268, -213, 40, 252, 253, -215,
	68, 280, 13, 91, 91, -188, 68, 68, 66, 290,
	68, 68, -440, 69, 252, 253, 69, -445, 74, -475,
	74, -344, -470, -153, -331, -410, -292, 68, -292, 68,
	54, 19, 17, -292, -298, 223, -6, 549, 336, -216,
	541, 74, 20, 74, -419, 74, -332, -111, -415, -364,
	69, 69, -357, -360, -359, -363, 407, 282, 413, -298,
	-216, 490, 20, 491, 323, 40, 80, 40, 374, -315,
	-317, -250, 68, -209, -211, 74, -207, -208, -231, -183,
	-110, -109, -207, -381, 142, 80, 124, 80, 80, -234,
	-234, 80, 68, -405, -316, 68, -315, -315, -441, 310,
	311, 312, 314, 313, -441, -315, -315, 68, -338, -337,
	281, 96, -154, -157, -439, -266, 224, 20, 20, -266,
	-266, -253, 542, 80, 74, 403, -390, 543, -424, 406,
	-418, -416, 401, 402, 403, 404, 69, -362, 98, 373,
	377, -286, -289, 80, 83, 167, 136, -253, -172, -266,
	74, 368, 74, 323, 69, 138, -382, -292, -352, 240,
	138, -231, -111, -352, -396, 150, 301, 491, 80, 124,
	80, -153, 69, -292, -302, -218, -217, 487, -315, 69,
	69, 69, 69, -315, 281, 69, 69, 138, 68, 20,
	74, -426, 222, -422, -423, 405, -416, 20, 403, 20,
	20, -361, -362, 377, -286, -289, 538, 411, 411, 411,
	34, 389, -318, -317, -148, 69, -353, 289, 20, -231,
	-353, 301, 80, 124, 80, -154, 69, -222, -220, -221,
	65, 418, 278, 279, 69, -318, -318, -318, -318, 69,
	-266, 224, -254, -266, -419, -433, 68, 80, -421, -420,
	-422, 20, -419, 20, -419, -419, 95, 412, 412, 412,
	74, -319, 230, 78, 491, 308, 309, -148, 20, -354,
	282, 283, -355, -368, 285, 80, -337, -221, 65, -220,
	65, 14, 13, -223, 69, 138, -437, 30, 69, -432,
	-431, -251, -427, -266, 406, 407, 74, -419, -361, -263,
	74, 307, -250, 68, -366, 286, 68, -364, 68, -364,
	91, 311, -219, 275, 276, 30, 150, -219, -266, -436,
	-435, -434, 69, 138, 137, 80, -266, -351, -356, 287,
	80, -288, 68, -288, 68, -365, 284, 68, 85, 40,
	277, 138, 106, -431, -266, 69, -370, 68, 20, 69,
	-351, 69, -351, 68, 106, -288, -435, 40, -292, 137,
	-371, -369, 240, -355, 69, 69, 69, -351, 80, 69,
	-266, 69, 138, -266, -367, 288, 69, -369, -372, 47,
	80, -376, -373, 68, -231, 242, 116, -376, -231, -375,
	-374, 287, 243, 68, 69, 138, -266, 239, 68, -298,
	-374, -373, -298, 69, 69,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 246,
	247, 248, 758, 759, 760, 761, 762, 0, 0, 0,
	0, 534, 535, 0, 506, 0, 0, 0, 0, 0,
	0, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 337,
	338, 339, 340, 341, 342, 0, 271, 267, 206, 207,
	208, 209, 278, 279, 376, 0, 0, 0, 0, 615,
	-2, 53, 260, 0, 251, 251, 763, 764, 765, 766,
	767, 768, 769, 770, -2, 547, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 326,
	327, 328, 322, 323, 325, 324, -2, 0, 547, 0,
	0, 0, 635, 0, 0, 650, 672, 23, 0, 7,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	0, 0, 19, 0, 19, 0, 0, 0, 1057, 1058,
	1059, 1060, -2, 1532, 1510, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 0, 244, 242,
	1510, 1532, 1592, 1625, 0, 775, 0, 593, 0, 598,
	1018, 593, 272, 536, 537, 635, 635, 504, 0, 308,
	0, 1523, 312, 0, 0, 0, 501, 302, 303, 304,
	305, 306, 307, 0, 0, 757, 0, 0, 298, 0,
	266, 1583, 0, 0, 0, 0, 0, 0, 150, 846,
	152, 848, 156, 163, 0, 0, 168, 169, 172, 173,
	174, 175, 176, 0, 180, 0, 182, 185, 0, 187,
	188, 0, 191, 192, 193, 0, 203, 204, 205, 849,
	850, 851, -2, 81, 773, 1448, 1340, 0, 1347, 1348,
	1359, 1370, 1130, 1131, 1132, 1133, 0, 0, 0, 0,
	0, 1140, 1141, 0, 1156, 1685, 0, 1147, 1148, 1149,
	1150, 1151, 90, 102, 103, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 0, 1313, 1117, 1057, 0,
	1693, 0, 1713, 1718, 1719, 1720, 1721, 1712, 0, 0,
	1298, 0, 1288, 0, 0, -2, -2, 0, 0, 1651,
	-2, 1690, 1709, 1717, 1694, 1716, 1687, 1688, 1682, 1683,
	1684, 1686, 1695, 1697, 1708, 0, 1704, 1714, 1715, 0,
	0, 0, 104, 105, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1304, -2, 1306,
	1307, 1309, 1310, 1311, 1312, -2, 1315, 1316, 1317, -2,
	-2, 1320, 1321, 1322, 1323, 1324, 1325, 1328, -2, 1330,
	-2, -2, 1300, 1301, 1302, 1303, 1292, 1293, 1294, 1295,
	1296, 1297, -2, -2, -2, 635, 708, 0, -2, 0,
	0, 0, 655, 658, 661, 664, 0, 54, 55, 261,
	262, 250, 252, 0, 256, 0, 249, 0, 0, 0,
	878, 878, 878, 878, 878, 0, 878, 0, 0, 0,
	878, 853, 854, 855, 876, 877, 924, 552, 548, 549,
	550, 551, 623, 0, 625, 628, 481, 428, 0, 0,
	0, 481, 0, 442, 434, 0, 0, 0, 481, 0,
	0, 630, 630, 0, 484, 491, 481, 481, -2, 481,
	481, 481, 0, 0, 448, 449, 450, 434, 434, 453,
	454, 455, 466, 467, 492, 1472, 0, 0, 376, 0,
	376, 0, 376, 376, 554, 1583, 0, 0, 217, 1651,
	222, 0, 1530, 1531, 1597, 1546, 0, 0, 1564, 0,
	-2, 0, 288, 630, 0, 636, 0, 635, 0, 0,
	376, 376, 376, 376, 376, 376, 376, 376, 0, 0,
	0, 376, 0, 0, 673, 674, 669, 670, 671, 675,
	676, 5, 6, 19, 0, 0, 0, 0, 0, 0,
	60, 59, 0, 1449, 1467, 1404, 1405, 1406, 1454, 1408,
	1458, 1458, 1458, 1458, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 0, 0, 1447, 1427, 1456, 1456, 1456,
	1454, 1451, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1461, 1461, 1464, 1461,
	0, 1338, 0, 0, 0, 0, 597, 0, 0, 630,
	-2, 0, 505, 309, 1061, 0, 0, 313, 314, 0,
	0, 329, 0, 332, 317, 318, 319, 0, 130, 0,
	300, 301, 0, 0, 268, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 160, 157, 164, 167, 177,
	184, 0, 196, 198, 201, 158, 165, 170, 171, 178,
	199, 159, 161, 162, 166, 200, 202, 179, 183, 197,
	181, 186, 189, 190, 195, 0, 131, 0, 0, 0,
	0, 0, 1346, 0, 0, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1340, 0, 0, 1136, 1137, 1138, 1139, 1142, 0,
	1157, 0, 0, 0, 1402, 0, 1338, 1338, 0, 1338,
	1334, 0, 0, 0, 0, 0, 0, 1338, 1274, 0,
	0, 1276, 1289, 0, 0, 1278, 1279, 0, 1282, 1283,
	1338, 0, 1338, 1287, 1270, 1271, 0, 1334, 1334, 0,
	0, 1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334,
	1334, 1334, 1334, 0, 0, 630, 0, 0, 618, 0,
	599, 0, 652, 654, 0, 656, 657, 659, 660, 662,
	663, 665, 666, 56, 0, 0, 254, 0, 259, 0,
	772, 0, 0, 788, 0, 0, 0, 0, 0, 0,
	0, 0, 878, 878, 878, 0, 554, 553, 0, 624,
	0, 0, 681, 0, 0, 0, 434, 481, 481, 440,
	441, 436, 435, 487, 488, 484, 0, 484, 484, 681,
	0, 460, 461, 462, 481, 481, 468, 631, 469, 470,
	484, 0, 489, 490, 681, 0, 0, 681, 681, 0,
	478, 479, 480, 0, 0, 878, 0, 497, 436, 436,
	1473, 1474, 0, 887, 0, 0, 0, 500, 0, 0,
	0, 555, 210, 0, 0, 0, 0, 0, 0, 240,
	241, 0, 0, 0, 0, 0, 0, 231, 234, 1012,
	1013, 843, 844, 235, 236, 280, 281, 0, 599, 651,
	653, 647, 648, 649, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 0, 532, 0, 0, 689, 683, 685,
	752, 90, 689, 8, 77, 74, 0, 19, 0, 0,
	19, 19, 0, 19, 245, 0, 1470, 1468, 1469, 1407,
	1455, 0, 1432, 0, 1433, 1434, 1435, 0, 0, 1428,
	0, 1429, 1430, 1431, 1423, 0, 1424, 1425, 0, 1426,
	243, 0, 1339, 776, 0, 572, 585, 567, 0, 574,
	0, 1019, 556, 585, 558, 0, 574, 599, 621, 599,
	0, 310, 0, 315, 0, 0, 331, 333, 334, 335,
	320, 321, 502, 296, 297, 289, 290, 291, 292, 293,
	294, 295, 299, 100, 0, 269, 270, 0, 0, 0,
	144, 145, 146, 147, 148, 149, 151, 135, 522, 524,
	835, 847, 0, 838, 0, 154, 194, 127, 0, 0,
	1341, 1342, 1343, 1344, 1345, 1349, 0, 1351, 1353, 1355,
	1357, 0, 1375, -2, -2, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1360, 1373, 1374,
	0, 0, 0, 0, 0, 0, 1371, 1371, 1366, 0,
	1134, 0, 1154, 1158, 0, 0, 0, 91, 1333, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 0, 0,
	1340, 0, 0, 0, 1335, 1336, 0, 0, 0, 1229,
	0, 0, 1235, 1236, 1237, 0, 580, 0, 1299, 1275,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 709, 0,
	589, 591, 592, 0, 619, 632, 637, 638, 641, 52,
	57, 263, 264, 0, 0, 258, 0, -2, 790, 0,
	628, 0, 0, 802, 374, 829, 0, 0, 845, 868,
	874, 0, 0, 0, 902, 0, 626, 0, 0, 721,
	427, 0, 482, 483, 431, 1583, 436, 681, 681, 443,
	437, 444, 486, 445, 446, 447, 0, 681, 681, 481,
	484, 471, 485, 484, 474, 475, 0, 493, 498, 494,
	0, 496, 451, 452, 628, 344, 345, 0, 0, 0,
	350, 0, 1475, 1475, 0, 1475, 1475, 1475, 1475, 0,
	0, 1475, 1475, 1475, 1475, 1475, 1475, 1475, 1475, 1475,
	1475, 1475, 1475, 1475, 1475, 0, 888, 371, 0, 0,
	0, 374, 819, 694, 0, 695, 696, 692, 723, 747,
	747, 0, 747, 727, 1018, 211, 212, 0, 214, 215,
	216, 223, 218, 220, 0, 0, 224, 237, 238, 239,
	0, 0, 0, 0, 229, 230, 0, 0, 283, 284,
	286, 0, 617, 519, 1016, 520, 521, 525, 0, 527,
	528, 529, 790, 0, 824, 681, 0, 690, 0, 686,
	753, 0, 755, 0, 681, 0, 75, 19, 0, 68,
	65, 0, 0, 0, 0, 0, 1450, 1403, 1471, 0,
	0, 0, 1452, 0, 0, 0, 0, 58, 601, 563,
	0, 566, 582, 0, 586, 0, 0, 578, 571, 575,
	0, 0, 595, 557, 0, 0, 562, 620, 622, 1062,
	0, 316, 330, 0, 0, 0, 0, 138, 832, 0,
	139, 143, 133, 0, 0, 0, 837, 0, 834, 839,
	0, 153, 0, 0, 128, 129, 893, 898, 0, 1350,
	1352, 1354, 1356, 1358, 0, 1361, 1371, 1371, 1367, 0,
	1362, 0, 1364, 0, 1341, 0, 1159, 0, 0, 0,
	0, 0, 0, 1219, 1220, 0, 0, 1224, 0, 1226,
	1227, 1228, 1230, 0, 0, 0, 1234, 0, 1273, 1291,
	1277, 1280, 0, 1284, 0, 1286, 0, 635, 0, 1196,
	1196, 0, 0, 0, 0, 1196, 0, 0, 0, 0,
	0, 0, 0, 0, 1152, 0, 1153, 0, 710, 601,
	0, 0, 0, 644, 642, 643, 265, 253, 255, 0,
	0, 0, 778, 779, 781, 0, 784, 785, 786, 0,
	791, 792, 794, 795, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1515, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 789, 0, 879, 809,
	1475, 378, 0, 0, 831, 0, 0, 0, -2, 0,
	0, 0, 0, 904, 0, 0, 0, 541, 545, 23,
	629, 0, 682, 429, 0, 430, 481, 438, 439, 681,
	1018, 463, 464, 681, 481, 481, 484, 0, 495, 0,
	887, 347, 354, 0, 1027, 1028, 0, 0, 1032, 1039,
	878, 1087, 0, 1039, 0, 0, 1041, 1042, 348, 0,
	0, 360, 0, 0, 0, 349, 0, 0, 0, 1476,
	0, 1475, 1475, 0, 0, 0, 0, 1475, 1475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 1475, 0, 0, 0, 378,
	816, 0, 0, 0, 0, 0, 0, 714, 0, 0,
	713, 0, 0, 0, 0, 0, 628, 748, 0, 750,
	751, 725, -2, 0, 694, 730, 1338, 0, 0, 0,
	225, 226, 227, 228, 232, 233, 282, 285, 287, 0,
	0, 0, 533, 679, 684, 691, 754, 756, 91, 687,
	679, 0, 78, 19, 77, 69, 70, 0, 19, 0,
	0, 0, 0, 1460, 1459, 1445, 0, 1446, 1457, 1462,
	0, 1465, 0, 605, 0, 0, 585, 587, 0, 0,
	585, 0, 0, 594, 0, 0, 585, 0, 0, 503,
	101, 336, 0, 0, 0, 0, 0, 523, 0, 836,
	135, 0, 0, 155, 0, 0, 896, 0, 898, 1337,
	1363, 1365, 0, 1372, 1368, 1135, 1143, 1155, 0, 0,
	1161, 1173, 1173, 0, 1164, 1458, 1458, 1167, 1454, 1456,
	1454, 1173, 1173, 0, 92, 0, 0, 1225, 0, 0,
	0, 581, 0, 0, 0, 1194, 1196, 1201, 1197, 1202,
	1196, 1196, 1196, 1196, 1207, 1196, 1196, 1196, 1196, 1196,
	1196, 1196, 1196, 1192, 590, 605, 633, 634, 639, 640,
	0, 257, 0, 0, 783, 0, 0, 0, 796, 0,
	812, 810, 811, 0, 826, 379, 380, 381, 382, 0,
	0, 0, 830, 0, 819, 0, 869, 870, 871, 872,
	873, -2, 882, 0, 0, 1020, 1020, 1020, 912, 0,
	903, 593, 0, -2, 0, 0, 543, 0, 0, 722,
	432, 681, 456, 0, 472, 681, 681, 481, 499, 0,
	346, 352, 355, 0, 354, -2, 1031, 1051, 1040, 1051,
	1088, 1051, 1051, 878, 0, 358, 359, 361, 0, 363,
	0, 351, 357, 971, 972, 0, 0, 975, 976, 977,
	978, 0, 0, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 1006, 1007, 1008, 1009, 1010, 1011, 991,
	992, 993, 994, 995, 996, 1003, 0, 0, 1000, 0,
	812, 0, 0, 0, 0, 826, 818, 0, 820, 821,
	0, 0, 564, 681, 275, 0, 717, 711, 0, 700,
	715, 716, 703, 0, 705, 0, 701, 702, 681, 693,
	724, 749, 726, 729, 731, 732, 738, 0, 0, 0,
	0, 213, 0, 398, 219, 1017, 526, 531, 677, 0,
	0, 677, 73, 76, 0, 71, 0, 0, 0, 0,
	63, 61, 1453, 0, 0, 607, 115, 0, 0, 0,
	583, 0, 588, 585, 570, 579, 569, 576, 577, 596,
	585, 561, 560, 1063, 311, 0, 833, 135, 140, 141,
	142, 136, 134, 840, 0, 842, 0, 894, 898, 0,
	0, 1369, 1160, 1144, 1162, 1174, 1175, 1163, 1145, 1165,
	1166, 1168, 1169, 1170, 1171, 1172, 1146, 1221, 0, 1223,
	1231, 1232, 0, 1281, 1285, 0, 0, 0, 1200, 1203,
	1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 635, 1193, 0, 607, 645, 646, 771, 774, 780,
	782, 0, 793, 0, 800, 801, 0, 0, 804, 805,
	814, 0, 0, 0, 384, 385, 0, 0, 0, 397,
	393, 394, 395, 375, 825, 816, 0, 883, 1475, 1475,
	1475, 0, 0, 1021, 1022, 1024, 1025, 1026, 0, 0,
	915, 0, 0, 906, 0, 747, 0, 0, 681, 542,
	545, 546, 627, 433, 681, 476, 473, 681, 343, 356,
	353, 1053, -2, 1066, 1068, 0, 0, 1071, 1072, 0,
	0, 0, 0, 1109, 1078, 0, 0, 1082, 0, 1387,
	1388, 0, 1086, 0, 1052, 0, 1043, 1052, 0, 0,
	1051, 0, 362, 364, 365, 366, 973, 974, 979, 980,
	997, 0, 0, 999, 0, 0, 367, 0, 0, 0,
	368, 373, 817, 0, 822, 823, 635, 0, 0, 697,
	718, 0, 0, 698, 0, 699, 704, 706, 274, 733,
	0, 0, 735, 736, 737, 728, 221, 667, 0, 0,
	688, 668, 0, 19, 0, 0, 66, 1463, 1466, 609,
	0, 606, 116, 0, 0, 0, 0, 584, 568, 559,
	137, 132, 841, 118, 897, 899, 895, 0, 1233, 0,
	1196, 1195, 1189, 0, 609, 0, 799, 797, 813, 803,
	0, 827, 828, 0, 386, 387, 0, 390, 396, 815,
	0, 0, 0, 0, 875, -2, 0, 0, -2, 918,
	0, 913, 0, 905, 0, 908, 681, 681, -2, 539,
	544, 0, 457, 477, 1067, 1069, 1070, 1073, 1074, 1014,
	1015, 1075, 1114, 1115, 1116, 1076, 1111, 1112, 1113, 1077,
	0, 0, 0, 1385, 1386, 1107, 0, 0, 0, 0,
	0, 0, 0, 1037, 1004, 1005, 998, 1001, 1002, 372,
	369, 370, 565, 630, 276, 277, 719, 0, 712, 742,
	739, 0, 0, 678, 680, 67, 72, 0, 0, 611,
	0, 608, 0, 602, 604, 126, 573, 88, 109, 0,
	1222, 1272, 1199, 0, 1190, 0, 1184, 1185, 1186, 1191,
	611, 0, 0, 0, 383, 388, 0, 391, 392, 0,
	864, 1454, 0, 884, 885, 886, 925, -2, 968, 1023,
	890, 118, 925, 909, 0, 916, 0, 914, 907, 635,
	540, 0, 0, 1288, 1102, 0, 0, 0, 1044, 1046,
	1047, 1048, 1049, 1050, 1045, 0, 0, 0, 1036, 1038,
	1083, 0, 273, 0, 0, 743, 745, 740, 741, 62,
	64, 79, 0, 610, 117, 0, 80, 0, 106, 0,
	119, 120, 0, 0, 0, 0, 1198, 1187, 0, 0,
	0, 0, 0, 1389, 1390, 1391, 0, 600, 0, 798,
	806, 0, 808, 389, 857, 0, 641, 0, 927, 0,
	887, 970, 892, 927, 901, 0, 911, 0, 920, 0,
	917, 630, 1110, 0, 1081, 1090, 1103, 0, 0, 857,
	857, 857, 857, 0, 1084, 720, 734, 0, 0, 0,
	89, 93, 0, 115, 112, 0, 121, 0, 0, 0,
	0, 0, 1176, 0, 0, 0, 1180, 1181, 1182, 1183,
	0, 807, 856, 865, 866, 641, 889, 0, 964, 969,
	891, 910, 919, 0, 922, 538, 1079, 1089, 1091, 1092,
	0, 1104, 1105, 1106, 1108, 1029, 1030, 1033, 1034, 0,
	744, 746, 0, 613, 603, 82, 0, 0, 110, 111,
	113, 0, 122, 0, 124, 125, 0, 1177, 1178, 1179,
	787, 858, 1475, 0, 0, 862, 863, 867, 0, 952,
	0, 0, 958, 0, 965, 921, 1080, 1093, 0, 1094,
	0, 0, 0, 1035, 612, 0, 900, 0, 94, 0,
	96, 98, 99, 1054, 107, 108, 114, 123, 1188, 0,
	860, 0, 928, 0, 930, 0, 0, 0, 0, 0,
	962, 0, 1095, 1097, 1098, 0, 0, 1096, 614, 83,
	84, 0, 95, 0, 0, 859, 861, 0, 932, 0,
	953, 0, 0, 0, 0, 0, 0, 0, 1099, 1101,
	1100, 0, 0, 97, 1055, 929, 926, 0, 964, 954,
	0, 956, 0, 0, 0, 0, 85, 86, 87, 0,
	0, 934, 0, 950, 955, 957, 959, 0, 963, 961,
	1056, 933, 0, 946, 931, 0, 960, 935, -2, 0,
	951, 936, -2, 0, 944, 0, 0, 937, 945, 0,
	940, 0, 0, 0, 939, 0, -2, 947, 0, 0,
	941, -2, 0, 949, 948,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 97, 3, 3, 3, 128, 120, 3,
	68, 69, 125, 123, 138, 124, 137, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 560, 559,
	107, 106, 108, 3, 561, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 562, 119, 563, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 98, 99, 100, 101, 102, 103, 104,
	105, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 121, 122, 127, 129, 132, 133, 134, 135, 136,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:712
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:719
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:725
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:733
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:739
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:743
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:758
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:762
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:768
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:773
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:777
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:836
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:842
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:849
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:857
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:863
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:872
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:882
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:890
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:898
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:906
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:916
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:924
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:934
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:941
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:950
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:964
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:970
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:974
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:980
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:989
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:999
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1003
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1009
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1022
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1028
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1049
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1073
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1079
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1083
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1089
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1096
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1104
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1108
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1122
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1126
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1130
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1143
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1149
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1158
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1169
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1173
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1179
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1183
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1189
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1193
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1199
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1223
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1242
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1246
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1250
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1259
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1266
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1274
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1281
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1286
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1293
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1302
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1326
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1330
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1336
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1342
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1360
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1377
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1400
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1408
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1423
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1436
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1447
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1460
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1474
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1487
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1500
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1506
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1519
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1527
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1536
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1540
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1544
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1548
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1552
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1556
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1563
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1567
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1580
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1589
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1593
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1599
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1603
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1607
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1611
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1615
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1619
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1623
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1627
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1631
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1807
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1814
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1821
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1830
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1860
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1864
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1868
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1884
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1891
		{
			yyVAL.str = yyDollar[3].str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1897
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1901
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1924
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1933
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1941
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1949
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1972
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2002
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2017
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2024
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2031
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2040
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2044
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2048
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2054
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2058
		{
			yyVAL.str = yyDollar[1].str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2064
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2068
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2074
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2078
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2095
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2100
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2104
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2108
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2112
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2116
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2120
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2124
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2128
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2132
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2142
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2150
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2155
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2166
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2173
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2186
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2203
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2210
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2221
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2232
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2236
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2242
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2258
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2262
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2274
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2278
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2282
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2286
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2292
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2304
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2320
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2357
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2361
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2365
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2369
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2373
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2381
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2389
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2399
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2440
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2444
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2456
		{
			yyVAL.str = yyDollar[1].str
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2461
		{
			yyVAL.str = "true"
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2462
		{
			yyVAL.str = "false"
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2463
		{
			yyVAL.str = yyDollar[1].str
		}
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2494
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2503
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2507
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2513
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2520
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2524
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2528
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2532
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2536
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2545
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2555
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2561
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2567
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2577
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2585
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2592
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2599
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2606
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2613
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2620
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2628
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2637
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2641
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2648
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2660
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2668
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2676
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2689
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2695
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2706
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2721
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2726
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2730
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2735
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2739
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2755
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2759
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2763
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2767
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2771
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2775
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2779
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2783
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2787
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2791
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2795
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2799
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2803
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2807
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2811
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2815
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2821
		{
			yyVAL.item = nil
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2826
		{
			yyVAL.item = nil
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2865
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2870
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2878
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2887
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2891
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2897
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2902
		{
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2906
		{
		}
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2931
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2939
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2945
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2951
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2957
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2963
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2975
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2984
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2988
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2992
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3000
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3004
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3008
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3012
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3018
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3025
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3035
		{
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3037
		{
		}
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3046
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3073
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3085
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3091
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3097
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3106
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3128
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3132
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3138
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3150
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3164
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3170
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3177
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3186
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3190
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3195
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3199
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3205
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3218
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3222
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3233
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3237
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3247
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3253
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3257
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3263
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3269
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3273
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3277
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3283
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3287
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3319
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3328
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3337
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3341
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3347
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3356
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3365
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3375
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3381
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3387
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3393
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3399
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3408
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3415
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3426
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3431
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3438
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3454
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3467
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3478
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3482
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3488
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3493
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3500
		{
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3502
		{
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3505
		{
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3514
		{
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3518
		{
		}
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3523
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3532
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3545
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3553
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3560
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3567
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3587
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3597
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3601
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3607
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3614
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3620
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3628
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3635
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3642
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3661
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3665
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3674
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3678
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3684
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3693
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3697
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3703
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3707
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3713
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3717
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3723
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3728
		{
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3732
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3739
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3743
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3750
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3759
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3765
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3769
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3775
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3779
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3784
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3788
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3801
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3808
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3815
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3833
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3852
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3858
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3865
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3869
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3882
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3886
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3891
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3895
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3902
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3907
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3914
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3920
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3924
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3928
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3932
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3936
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3946
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3953
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3962
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3966
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3972
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3984
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3989
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3993
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3999
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4003
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4007
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4016
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4022
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4028
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4032
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4038
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4043
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4047
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4051
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4056
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4060
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4064
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4070
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4074
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4078
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4092
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4096
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4106
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4116
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4126
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4138
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4146
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4154
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4163
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4171
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4179
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4187
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4195
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4203
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4211
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4219
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4227
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4237
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4248
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4262
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4266
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4270
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4275
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4279
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4283
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4296
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4305
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4314
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4320
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4324
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4330
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4334
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4339
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4343
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4348
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4356
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4362
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4370
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4378
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4388
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4394
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4403
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4412
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4421
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4431
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4435
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4445
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4449
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4453
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4457
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4463
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4473
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4477
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4483
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4493
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4499
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4505
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4509
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4513
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4523
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4533
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4539
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4543
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4549
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4553
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4563
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4576
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4582
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4588
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4619
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4623
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4629
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4639
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4643
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4647
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4652
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4656
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4660
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4664
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4673
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4677
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4681
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4685
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4690
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4694
		{
			yyVAL.str = yyDollar[1].str
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4698
		{
			yyVAL.str = yyDollar[2].str
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4704
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4710
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4714
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4718
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4722
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4726
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4732
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 771:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4765
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4775
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4781
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 774:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4787
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4797
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4802
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4808
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4815
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4819
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4825
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4831
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4836
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4840
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4844
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4848
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4855
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4867
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4872
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4878
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4885
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4889
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4895
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4901
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4905
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4909
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4915
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4921
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4927
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4950
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4956
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4966
		{
			yyVAL.str = yyDollar[1].str
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4970
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4976
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4983
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4989
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4997
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5003
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5010
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5024
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5033
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5045
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5056
		{
			yyVAL.str = ""
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5060
		{
			yyVAL.str = yyDollar[2].str
		}
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5066
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5080
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5086
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5092
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5098
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5107
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5116
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5121
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5127
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5135
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5241
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5245
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5251
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5261
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5265
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5271
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5281
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5285
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5289
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5298
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5304
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5311
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5317
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5326
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5333
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5342
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5346
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5352
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5366
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5370
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5374
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5379
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5383
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5387
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5397
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5420
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5442
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5446
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5450
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5454
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5458
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5464
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5468
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5474
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5479
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5488
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5492
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5496
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5500
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5506
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5517
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5521
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5531
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5535
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5544
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5550
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5554
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5560
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5564
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5568
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5573
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5577
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5583
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5595
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5604
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5617
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5624
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5634
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5642
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5653
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5657
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5662
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5666
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5673
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5684
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5697
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5711
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5715
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5719
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5726
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5733
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5740
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5747
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5751
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5755
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5763
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5770
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5781
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5788
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5799
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5806
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5813
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5820
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5827
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5831
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5836
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5840
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5854
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5861
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5872
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5885
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5891
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5895
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5901
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5910
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5924
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5930
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5934
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5940
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5947
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5956
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5960
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5969
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5974
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5978
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5983
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5987
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5997
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6001
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6012
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6020
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6028
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6036
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6047
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6056
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6066
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6076
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6080
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6085
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6089
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6094
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6098
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6104
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6108
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6112
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6118
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6122
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6126
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6130
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6134
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6138
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6143
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6147
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6151
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6155
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6159
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6163
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6167
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6171
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6175
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6179
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6183
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6187
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6191
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6195
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6199
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6203
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6207
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6211
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6215
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6219
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6223
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6227
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6231
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6238
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6242
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6248
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6253
		{
			yyVAL.str = ""
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6257
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6261
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6267
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6271
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6275
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6279
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6283
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6287
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6301
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6305
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6314
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6319
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6325
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6332
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6336
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6342
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6346
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6350
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6356
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6360
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6366
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6375
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6400
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6414
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6420
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6429
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6438
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6448
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6456
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6462
		{
			yyVAL.str = ""
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6466
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6476
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6482
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6488
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6502
		{
			yyVAL.str = ""
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6506
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6512
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6518
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6522
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6526
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6532
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6536
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6540
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6544
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6550
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6554
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6558
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6563
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6567
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6573
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6577
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6583
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6587
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6591
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6595
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6599
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6603
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6608
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6612
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6616
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6620
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6624
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6628
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6632
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6636
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6649
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6655
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6659
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6664
		{
			yyVAL.str = ""
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6668
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6674
		{
			yyVAL.str = ""
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6678
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6684
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6696
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6703
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6710
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6717
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6724
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6733
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6739
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6745
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6749
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6753
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6757
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6761
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6766
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6773
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6777
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6781
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6790
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6795
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6799
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6815
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6821
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6825
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6829
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6833
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6837
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6841
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6845
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6849
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6853
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6857
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6861
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6865
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6869
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6875
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6879
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6883
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6887
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6891
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6895
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6899
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6903
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6907
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6911
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6915
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6919
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6924
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6932
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6937
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6941
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6950
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6954
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6958
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6962
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6966
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6972
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6980
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6989
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6993
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7002
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7008
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7012
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7018
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7027
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7039
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7056
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7073
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7086
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7099
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7111
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7125
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7140
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7155
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7172
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7187
		{
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7194
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7198
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7202
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7208
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7212
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7216
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7220
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7226
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7230
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7234
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7240
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7248
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7262
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7269
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7278
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7283
		{
			yyVAL.str = ","
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7287
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7299
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7325
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7336
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7346
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7355
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7364
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7374
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7384
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7394
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7404
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7414
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7424
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7434
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7444
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7454
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7464
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7474
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7484
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7501
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7509
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7517
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7525
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7533
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7543
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7551
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7560
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7568
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7576
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7584
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7592
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7603
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7613
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7625
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7636
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7658
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7694
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7706
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7718
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7729
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7737
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7744
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7751
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7763
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7771
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7781
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7791
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7799
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7810
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7819
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7828
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7836
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7846
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7854
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7868
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7878
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7897
		{
		}
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7899
		{
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7940
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7951
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7955
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7959
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7965
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7970
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7974
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7980
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7984
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7991
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7995
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7999
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8007
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8011
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8015
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8019
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8025
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8029
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8033
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8037
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8041
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8045
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8049
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8053
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8057
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8061
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8069
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8073
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8077
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8081
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8085
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8089
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8093
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8097
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8101
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8105
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8115
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8121
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8125
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8132
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8136
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8140
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8146
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8150
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8154
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8158
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8162
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8166
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8170
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8176
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8180
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8184
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8188
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8194
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8207
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8212
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8218
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8222
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8235
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8240
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8244
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8248
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8252
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8256
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8260
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8274
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8278
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8285
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8296
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8301
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8307
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8319
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8331
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8343
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8356
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8369
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8382
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8395
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8408
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8421
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8434
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8447
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8460
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8473
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8488
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8515
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8557
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8605
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8622
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8634
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8654
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8674
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8694
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8710
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8723
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8736
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8749
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8762
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8774
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8786
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8798
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8810
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8822
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8834
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8846
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8858
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8870
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8883
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8896
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8911
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8919
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8928
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8938
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8961
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8966
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8972
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8979
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8983
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8988
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8992
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8998
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9004
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9011
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9018
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9027
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9034
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9041
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9050
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9054
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9058
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9064
		{
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9066
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9076
		{
			yyVAL.str = ""
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9080
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

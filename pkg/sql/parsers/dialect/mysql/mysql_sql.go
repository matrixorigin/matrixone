// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const MODIFY = 57671
const CHANGE = 57672
const SECOND = 57673
const ASCII = 57674
const COALESCE = 57675
const COLLATION = 57676
const HOUR = 57677
const MICROSECOND = 57678
const MINUTE = 57679
const MONTH = 57680
const QUARTER = 57681
const REPEAT = 57682
const REVERSE = 57683
const ROW_COUNT = 57684
const WEEK = 57685
const REVOKE = 57686
const FUNCTION = 57687
const PRIVILEGES = 57688
const TABLESPACE = 57689
const EXECUTE = 57690
const SUPER = 57691
const GRANT = 57692
const OPTION = 57693
const REFERENCES = 57694
const REPLICATION = 57695
const SLAVE = 57696
const CLIENT = 57697
const USAGE = 57698
const RELOAD = 57699
const FILE = 57700
const TEMPORARY = 57701
const ROUTINE = 57702
const EVENT = 57703
const SHUTDOWN = 57704
const NULLX = 57705
const AUTO_INCREMENT = 57706
const APPROXNUM = 57707
const SIGNED = 57708
const UNSIGNED = 57709
const ZEROFILL = 57710
const ENGINES = 57711
const LOW_CARDINALITY = 57712
const AUTOEXTEND_SIZE = 57713
const ADMIN_NAME = 57714
const RANDOM = 57715
const SUSPEND = 57716
const ATTRIBUTE = 57717
const HISTORY = 57718
const REUSE = 57719
const CURRENT = 57720
const OPTIONAL = 57721
const FAILED_LOGIN_ATTEMPTS = 57722
const PASSWORD_LOCK_TIME = 57723
const UNBOUNDED = 57724
const SECONDARY = 57725
const RESTRICTED = 57726
const USER = 57727
const IDENTIFIED = 57728
const CIPHER = 57729
const ISSUER = 57730
const X509 = 57731
const SUBJECT = 57732
const SAN = 57733
const REQUIRE = 57734
const SSL = 57735
const NONE = 57736
const PASSWORD = 57737
const SHARED = 57738
const EXCLUSIVE = 57739
const MAX_QUERIES_PER_HOUR = 57740
const MAX_UPDATES_PER_HOUR = 57741
const MAX_CONNECTIONS_PER_HOUR = 57742
const MAX_USER_CONNECTIONS = 57743
const FORMAT = 57744
const VERBOSE = 57745
const CONNECTION = 57746
const TRIGGERS = 57747
const PROFILES = 57748
const LOAD = 57749
const INLINE = 57750
const INFILE = 57751
const TERMINATED = 57752
const OPTIONALLY = 57753
const ENCLOSED = 57754
const ESCAPED = 57755
const STARTING = 57756
const LINES = 57757
const ROWS = 57758
const IMPORT = 57759
const DISCARD = 57760
const MODUMP = 57761
const OVER = 57762
const PRECEDING = 57763
const FOLLOWING = 57764
const GROUPS = 57765
const DATABASES = 57766
const TABLES = 57767
const SEQUENCES = 57768
const EXTENDED = 57769
const FULL = 57770
const PROCESSLIST = 57771
const FIELDS = 57772
const COLUMNS = 57773
const OPEN = 57774
const ERRORS = 57775
const WARNINGS = 57776
const INDEXES = 57777
const SCHEMAS = 57778
const NODE = 57779
const LOCKS = 57780
const ROLES = 57781
const TABLE_NUMBER = 57782
const COLUMN_NUMBER = 57783
const TABLE_VALUES = 57784
const TABLE_SIZE = 57785
const NAMES = 57786
const GLOBAL = 57787
const PERSIST = 57788
const SESSION = 57789
const ISOLATION = 57790
const LEVEL = 57791
const READ = 57792
const WRITE = 57793
const ONLY = 57794
const REPEATABLE = 57795
const COMMITTED = 57796
const UNCOMMITTED = 57797
const SERIALIZABLE = 57798
const LOCAL = 57799
const EVENTS = 57800
const PLUGINS = 57801
const CURRENT_TIMESTAMP = 57802
const DATABASE = 57803
const CURRENT_TIME = 57804
const LOCALTIME = 57805
const LOCALTIMESTAMP = 57806
const UTC_DATE = 57807
const UTC_TIME = 57808
const UTC_TIMESTAMP = 57809
const REPLACE = 57810
const CONVERT = 57811
const SEPARATOR = 57812
const TIMESTAMPDIFF = 57813
const CURRENT_DATE = 57814
const CURRENT_USER = 57815
const CURRENT_ROLE = 57816
const SECOND_MICROSECOND = 57817
const MINUTE_MICROSECOND = 57818
const MINUTE_SECOND = 57819
const HOUR_MICROSECOND = 57820
const HOUR_SECOND = 57821
const HOUR_MINUTE = 57822
const DAY_MICROSECOND = 57823
const DAY_SECOND = 57824
const DAY_MINUTE = 57825
const DAY_HOUR = 57826
const YEAR_MONTH = 57827
const SQL_TSI_HOUR = 57828
const SQL_TSI_DAY = 57829
const SQL_TSI_WEEK = 57830
const SQL_TSI_MONTH = 57831
const SQL_TSI_QUARTER = 57832
const SQL_TSI_YEAR = 57833
const SQL_TSI_SECOND = 57834
const SQL_TSI_MINUTE = 57835
const RECURSIVE = 57836
const CONFIG = 57837
const DRAINER = 57838
const SOURCE = 57839
const STREAM = 57840
const HEADERS = 57841
const MATCH = 57842
const AGAINST = 57843
const BOOLEAN = 57844
const LANGUAGE = 57845
const WITH = 57846
const QUERY = 57847
const EXPANSION = 57848
const WITHOUT = 57849
const VALIDATION = 57850
const ADDDATE = 57851
const BIT_AND = 57852
const BIT_OR = 57853
const BIT_XOR = 57854
const CAST = 57855
const COUNT = 57856
const APPROX_COUNT = 57857
const APPROX_COUNT_DISTINCT = 57858
const APPROX_PERCENTILE = 57859
const CURDATE = 57860
const CURTIME = 57861
const DATE_ADD = 57862
const DATE_SUB = 57863
const EXTRACT = 57864
const GROUP_CONCAT = 57865
const MAX = 57866
const MID = 57867
const MIN = 57868
const NOW = 57869
const POSITION = 57870
const SESSION_USER = 57871
const STD = 57872
const STDDEV = 57873
const MEDIAN = 57874
const STDDEV_POP = 57875
const STDDEV_SAMP = 57876
const SUBDATE = 57877
const SUBSTR = 57878
const SUBSTRING = 57879
const SUM = 57880
const SYSDATE = 57881
const SYSTEM_USER = 57882
const TRANSLATE = 57883
const TRIM = 57884
const VARIANCE = 57885
const VAR_POP = 57886
const VAR_SAMP = 57887
const AVG = 57888
const RANK = 57889
const ROW_NUMBER = 57890
const DENSE_RANK = 57891
const BIT_CAST = 57892
const NEXTVAL = 57893
const SETVAL = 57894
const CURRVAL = 57895
const LASTVAL = 57896
const ARROW = 57897
const ROW = 57898
const OUTFILE = 57899
const HEADER = 57900
const MAX_FILE_SIZE = 57901
const FORCE_QUOTE = 57902
const PARALLEL = 57903
const UNUSED = 57904
const BINDINGS = 57905
const DO = 57906
const DECLARE = 57907
const LOOP = 57908
const WHILE = 57909
const LEAVE = 57910
const ITERATE = 57911
const UNTIL = 57912
const CALL = 57913
const SPBEGIN = 57914
const BACKEND = 57915
const SERVERS = 57916
const KILL = 57917
const BACKUP = 57918
const FILESYSTEM = 57919
const QUERY_RESULT = 57920

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10380

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 116,
	21, 699,
	-2, 680,
	-1, 132,
	233, 1036,
	235, 954,
	-2, 994,
	-1, 155,
	42, 519,
	235, 519,
	262, 526,
	263, 526,
	452, 519,
	-2, 552,
	-1, 191,
	599, 1745,
	-2, 435,
	-1, 528,
	314, 133,
	425, 133,
	426, 133,
	-2, 1656,
	-1, 592,
	81, 1453,
	-2, 1799,
	-1, 593,
	81, 1471,
	-2, 1770,
	-1, 597,
	81, 1472,
	-2, 1798,
	-1, 623,
	81, 1383,
	-2, 1868,
	-1, 624,
	81, 1384,
	-2, 1867,
	-1, 625,
	81, 1385,
	-2, 1857,
	-1, 626,
	81, 1831,
	-2, 1852,
	-1, 627,
	81, 1832,
	-2, 1853,
	-1, 628,
	81, 1833,
	-2, 1859,
	-1, 629,
	81, 1834,
	-2, 1841,
	-1, 630,
	81, 1835,
	-2, 1850,
	-1, 631,
	81, 1836,
	-2, 1860,
	-1, 632,
	81, 1837,
	-2, 1861,
	-1, 633,
	81, 1838,
	-2, 1866,
	-1, 634,
	81, 1839,
	-2, 1871,
	-1, 635,
	81, 1840,
	-2, 1872,
	-1, 637,
	81, 1450,
	-2, 1644,
	-1, 639,
	81, 1452,
	-2, 1651,
	-1, 641,
	81, 1455,
	-2, 1657,
	-1, 644,
	81, 1459,
	-2, 1676,
	-1, 648,
	81, 1463,
	-2, 1716,
	-1, 649,
	81, 1464,
	-2, 1794,
	-1, 657,
	81, 1474,
	-2, 1779,
	-1, 658,
	81, 1475,
	-2, 1823,
	-1, 659,
	81, 1476,
	-2, 1789,
	-1, 660,
	81, 1477,
	-2, 1813,
	-1, 671,
	81, 1361,
	-2, 1862,
	-1, 672,
	81, 1362,
	-2, 1863,
	-1, 673,
	81, 1363,
	-2, 1864,
	-1, 677,
	21, 700,
	-2, 663,
	-1, 756,
	447, 552,
	448, 552,
	-2, 520,
	-1, 801,
	122, 1644,
	133, 1644,
	153, 1644,
	-2, 1619,
	-1, 905,
	21, 700,
	-2, 663,
	-1, 1005,
	21, 699,
	-2, 1258,
	-1, 1378,
	81, 1521,
	-2, 1796,
	-1, 1379,
	81, 1522,
	-2, 1797,
	-1, 1518,
	82, 845,
	-2, 851,
	-1, 1902,
	82, 1605,
	154, 1605,
	-2, 1781,
	-1, 1903,
	82, 1605,
	154, 1605,
	-2, 1780,
	-1, 1904,
	82, 1583,
	154, 1583,
	-2, 1767,
	-1, 1905,
	82, 1584,
	154, 1584,
	-2, 1772,
	-1, 1906,
	82, 1585,
	154, 1585,
	-2, 1704,
	-1, 1907,
	82, 1586,
	154, 1586,
	-2, 1698,
	-1, 1908,
	82, 1587,
	154, 1587,
	-2, 1635,
	-1, 1909,
	82, 1588,
	154, 1588,
	-2, 1769,
	-1, 1910,
	82, 1589,
	154, 1589,
	-2, 1702,
	-1, 1911,
	82, 1590,
	154, 1590,
	-2, 1697,
	-1, 1912,
	82, 1591,
	154, 1591,
	-2, 1690,
	-1, 1914,
	82, 1594,
	154, 1594,
	-2, 1813,
	-1, 1915,
	82, 1574,
	154, 1574,
	-2, 1799,
	-1, 1916,
	82, 1603,
	154, 1603,
	-2, 1770,
	-1, 1917,
	82, 1603,
	154, 1603,
	-2, 1798,
	-1, 1918,
	82, 1603,
	154, 1603,
	-2, 1658,
	-1, 1919,
	82, 1601,
	154, 1601,
	-2, 1789,
	-1, 1920,
	82, 1598,
	154, 1598,
	-2, 1681,
	-1, 1921,
	81, 1555,
	82, 1555,
	154, 1555,
	383, 1555,
	384, 1555,
	385, 1555,
	-2, 1634,
	-1, 1922,
	81, 1556,
	82, 1556,
	154, 1556,
	383, 1556,
	384, 1556,
	385, 1556,
	-2, 1636,
	-1, 1923,
	81, 1559,
	82, 1559,
	154, 1559,
	383, 1559,
	384, 1559,
	385, 1559,
	-2, 1771,
	-1, 1924,
	81, 1561,
	82, 1561,
	154, 1561,
	383, 1561,
	384, 1561,
	385, 1561,
	-2, 1754,
	-1, 1925,
	81, 1563,
	82, 1563,
	154, 1563,
	383, 1563,
	384, 1563,
	385, 1563,
	-2, 1703,
	-1, 1926,
	81, 1565,
	82, 1565,
	154, 1565,
	383, 1565,
	384, 1565,
	385, 1565,
	-2, 1686,
	-1, 1927,
	81, 1566,
	82, 1566,
	154, 1566,
	383, 1566,
	384, 1566,
	385, 1566,
	-2, 1687,
	-1, 1928,
	81, 1568,
	82, 1568,
	154, 1568,
	383, 1568,
	384, 1568,
	385, 1568,
	-2, 1633,
	-1, 1929,
	82, 1608,
	154, 1608,
	383, 1608,
	384, 1608,
	385, 1608,
	-2, 1663,
	-1, 1930,
	82, 1608,
	154, 1608,
	383, 1608,
	384, 1608,
	385, 1608,
	-2, 1677,
	-1, 1931,
	82, 1611,
	154, 1611,
	383, 1611,
	384, 1611,
	385, 1611,
	-2, 1659,
	-1, 1932,
	82, 1611,
	154, 1611,
	383, 1611,
	384, 1611,
	385, 1611,
	-2, 1719,
	-1, 1933,
	82, 1608,
	154, 1608,
	383, 1608,
	384, 1608,
	385, 1608,
	-2, 1739,
	-1, 1951,
	105, 989,
	149, 989,
	188, 989,
	191, 989,
	275, 989,
	-2, 982,
	-1, 2089,
	21, 699,
	-2, 793,
	-1, 2291,
	105, 989,
	149, 989,
	188, 989,
	191, 989,
	275, 989,
	-2, 983,
	-1, 2303,
	79, 609,
	154, 609,
	-2, 1145,
	-1, 2640,
	191, 989,
	299, 1226,
	-2, 1198,
	-1, 2778,
	105, 989,
	149, 989,
	188, 989,
	191, 989,
	-2, 1088,
	-1, 2780,
	105, 989,
	149, 989,
	188, 989,
	191, 989,
	-2, 1088,
	-1, 2790,
	79, 609,
	154, 609,
	-2, 1146,
	-1, 2799,
	191, 989,
	299, 1226,
	-2, 1199,
	-1, 2926,
	105, 989,
	149, 989,
	188, 989,
	191, 989,
	-2, 1089,
	-1, 3298,
	82, 1054,
	154, 1054,
	-2, 989,
	-1, 3302,
	82, 1054,
	154, 1054,
	-2, 989,
	-1, 3316,
	82, 1058,
	154, 1058,
	-2, 989,
	-1, 3321,
	82, 1059,
	154, 1059,
	-2, 989,
}

const yyPrivate = 57344

const yyLast = 38068

var yyAct = [...]int{
	559, 1598, 3302, 3301, 3310, 3281, 182, 1358, 537, 3173,
	539, 3234, 561, 532, 3199, 3252, 3181, 2658, 3182, 2879,
	547, 2874, 3091, 1877, 2967, 3105, 2813, 1038, 3082, 1354,
	2721, 1157, 1217, 3109, 2916, 2917, 2914, 3002, 589, 2722,
	444, 3040, 1296, 800, 2877, 541, 1286, 2263, 2753, 2992,
	451, 3092, 456, 456, 2769, 3094, 1551, 2921, 456, 472,
	481, 2800, 2932, 481, 2925, 2306, 2576, 1361, 2421, 2893,
	1991, 2869, 2928, 678, 2422, 1684, 1687, 2604, 2758, 2344,
	2655, 2637, 2404, 2324, 2781, 167, 2644, 1660, 2414, 2083,
	2719, 1652, 1781, 2707, 2443, 2574, 1750, 2690, 2417, 492,
	2420, 2282, 1994, 486, 2588, 2585, 2577, 2617, 2583, 1960,
	1210, 1898, 899, 530, 2292, 2067, 1699, 1881, 1890, 2480,
	2643, 1777, 1759, 1880, 536, 2518, 1758, 1498, 2463, 2131,
	1751, 1724, 1680, 806, 2084, 732, 1277, 1900, 1776, 455,
	455, 1130, 2271, 1655, 2266, 463, 2326, 2072, 1992, 1590,
	1580, 1165, 1959, 2298, 178, 8, 531, 177, 7, 444,
	6, 1529, 2148, 853, 1506, 2194, 1282, 1287, 1352, 1778,
	1653, 1295, 1810, 1290, 2111, 540, 1896, 1226, 115, 1942,
	2579, 1196, 182, 35, 182, 1251, 844, 845, 1110, 1788,
	450, 1563, 2578, 838, 839, 1562, 2225, 1408, 843, 763,
	1146, 529, 1987, 548, 1392, 1343, 26, 916, 1357, 2224,
	1740, 15, 1258, 13, 793, 1132, 1714, 1757, 1351, 1754,
	465, 1528, 2091, 1195, 731, 14, 675, 1415, 494, 1193,
	1414, 168, 32, 23, 468, 804, 531, 16, 10, 480,
	1250, 1103, 1142, 161, 495, 1553, 36, 1158, 709, 164,
	677, 729, 713, 1785, 1039, 794, 841, 3034, 2772, 1795,
	2714, 751, 2250, 2250, 2250, 477, 2183, 840, 55, 842,
	473, 2132, 475, 2137, 2135, 1511, 2134, 1261, 1265, 836,
	1077, 837, 166, 1166, 476, 837, 2021, 837, 1094, 452,
	1178, 474, 1263, 2867, 2476, 443, 2474, 1729, 2998, 461,
	2993, 2870, 484, 2720, 1502, 478, 1033, 3096, 1753, 676,
	2803, 974, 975, 976, 973, 2029, 538, 974, 975, 976,
	973, 8, 1449, 165, 7, 165, 165, 835, 165, 51,
	157, 133, 3164, 165, 51, 157, 133, 165, 51, 157,
	133, 807, 165, 1310, 1303, 3051, 809, 686, 2815, 2903,
	2264, 937, 2169, 2262, 2177, 1095, 165, 2894, 1782, 165,
	165, 2806, 2892, 3128, 1524, 490, 491, 2542, 1122, 1107,
	1946, 2801, 2109, 1307, 1300, 1793, 2823, 2824, 2110, 3023,
	971, 666, 2802, 665, 667, 668, 2449, 669, 670, 3052,
	2495, 1664, 162, 3217, 1309, 1302, 945, 162, 3215, 947,
	2450, 2451, 162, 1328, 2488, 679, 162, 114, 114, 1096,
	2097, 162, 2149, 2096, 952, 1344, 2098, 953, 1348, 2807,
	1174, 1697, 1197, 1175, 1199, 162, 772, 948, 162, 162,
	2268, 810, 1665, 1666, 782, 1512, 1513, 1163, 1164, 2888,
	2269, 1576, 1347, 1360, 969, 955, 1161, 1154, 687, 803,
	1160, 1163, 1164, 802, 3099, 456, 964, 3099, 3159, 868,
	3098, 3158, 3097, 3157, 3098, 456, 909, 3097, 1868, 3203,
	3204, 3084, 3185, 3186, 3003, 3004, 3005, 3006, 2723, 3087,
	3000, 2481, 3084, 481, 481, 2996, 456, 3163, 2267, 2482,
	2723, 2483, 2164, 910, 1797, 919, 1681, 1675, 3102, 2360,
	2732, 1671, 941, 1339, 2759, 1789, 2599, 2766, 2908, 1177,
	2822, 2061, 1995, 2589, 3029, 2508, 1940, 1737, 1264, 1262,
	950, 1349, 1271, 1270, 720, 2253, 2174, 943, 967, 968,
	2825, 2274, 3161, 2506, 966, 904, 906, 2811, 2027, 946,
	949, 132, 901, 163, 1346, 2868, 940, 977, 2475, 908,
	525, 2408, 907, 527, 3032, 2064, 1006, 1364, 526, 2808,
	2812, 2810, 2809, 155, 1015, 942, 2063, 805, 3166, 3167,
	903, 2887, 2905, 928, 778, 776, 919, 777, 2889, 856,
	847, 2068, 2593, 951, 3219, 1007, 3210, 1022, 2837, 932,
	2613, 909, 2286, 2287, 2288, 2289, 905, 2817, 2818, 876,
	880, 882, 884, 886, 887, 889, 2618, 894, 890, 891,
	892, 893, 3120, 871, 872, 873, 874, 854, 855, 877,
	3184, 857, 1794, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 869, 875, 3056, 1042, 3048, 1187, 2825,
	1152, 944, 879, 881, 883, 885, 888, 1109, 1108, 2413,
	807, 2804, 3115, 2656, 2657, 809, 2597, 2816, 2299, 954,
	1345, 962, 963, 783, 1093, 1176, 1695, 1696, 1363, 1362,
	1799, 1801, 1802, 1948, 1043, 483, 477, 477, 482, 870,
	779, 473, 473, 475, 475, 921, 920, 2968, 2969, 2970,
	2972, 2971, 2830, 3110, 2591, 476, 476, 3295, 1101, 451,
	1104, 3033, 474, 474, 912, 913, 2735, 2512, 2249, 3311,
	3243, 2594, 2595, 1370, 1373, 1374, 478, 478, 1783, 1783,
	3214, 807, 925, 926, 1371, 1783, 809, 2596, 3175, 3250,
	2840, 732, 929, 3171, 3172, 1141, 3175, 837, 3101, 2660,
	810, 914, 2958, 781, 722, 479, 723, 837, 1074, 479,
	837, 837, 3275, 1013, 837, 2038, 837, 2037, 2880, 1163,
	1164, 923, 3165, 2280, 1163, 1164, 921, 920, 1784, 1796,
	3050, 1162, 1206, 1997, 957, 2058, 2059, 958, 1205, 456,
	2113, 1189, 1159, 930, 2133, 1139, 2821, 444, 444, 3057,
	1266, 3049, 3015, 2264, 3024, 3016, 444, 444, 676, 1138,
	1221, 1221, 1137, 456, 3312, 960, 52, 3220, 2953, 2600,
	52, 810, 2196, 2197, 2590, 3255, 3282, 3030, 2509, 780,
	3041, 1682, 481, 1104, 451, 2782, 2947, 1254, 1254, 1219,
	1219, 2273, 134, 1223, 134, 134, 1228, 134, 182, 3306,
	1253, 1253, 134, 1156, 1155, 2820, 134, 444, 3018, 900,
	2904, 134, 2010, 1051, 1052, 2178, 931, 1153, 1990, 2012,
	1009, 1010, 1011, 1012, 2909, 134, 1185, 805, 134, 134,
	2361, 773, 2362, 2363, 3318, 2656, 2657, 1674, 2559, 3017,
	956, 1672, 1811, 1340, 1990, 2592, 2007, 2277, 2278, 1102,
	1227, 2865, 1112, 1113, 1114, 1115, 1294, 1117, 1297, 1272,
	1111, 1121, 2276, 1305, 490, 2652, 1800, 1996, 1215, 1216,
	3081, 1194, 1998, 2445, 2447, 2611, 2011, 2170, 961, 2101,
	2460, 2461, 2025, 1326, 1786, 1105, 1079, 2659, 937, 1081,
	2000, 2511, 1116, 1120, 1119, 1118, 1311, 1221, 485, 1221,
	909, 2569, 677, 959, 2653, 1148, 1149, 1798, 878, 1372,
	1135, 3256, 2960, 1106, 775, 1140, 2358, 774, 2520, 2519,
	3015, 1127, 1150, 3016, 2252, 3305, 1999, 726, 727, 728,
	1168, 1169, 1188, 1171, 1172, 1173, 2379, 2380, 3010, 1884,
	773, 1099, 1129, 1321, 1322, 1515, 1365, 1366, 1367, 1368,
	1369, 1275, 721, 1278, 1279, 1516, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1179, 1180,
	1883, 936, 1403, 1404, 1246, 1167, 3018, 1514, 1170, 689,
	1413, 1886, 1885, 1359, 2024, 2050, 1143, 1147, 1147, 1147,
	1410, 1411, 1412, 1204, 1462, 690, 2954, 2955, 1446, 1284,
	1285, 2612, 1201, 1203, 1097, 1098, 1456, 3017, 3317, 1143,
	1143, 1213, 1214, 2933, 461, 1229, 3258, 1471, 2001, 1289,
	1356, 1244, 1293, 775, 1245, 1239, 774, 1292, 1255, 1256,
	2949, 1452, 1453, 1454, 2948, 1325, 2446, 2623, 972, 3253,
	3254, 1341, 724, 1324, 1468, 1893, 3279, 1469, 3324, 2006,
	1500, 3011, 2687, 2004, 1504, 3093, 2304, 1507, 2378, 937,
	1478, 1479, 1267, 1337, 1375, 2151, 1496, 3323, 1894, 1895,
	1554, 1526, 1944, 1221, 1531, 1532, 1554, 1534, 1535, 2683,
	2750, 477, 456, 2734, 1871, 1221, 473, 2169, 475, 732,
	1843, 1334, 1552, 1842, 680, 3314, 1331, 1221, 1330, 677,
	476, 2654, 1717, 1189, 3296, 1353, 1301, 474, 472, 1317,
	1308, 3291, 2305, 1499, 1313, 3285, 1461, 935, 1333, 3284,
	972, 478, 1332, 1329, 1350, 2662, 3262, 1575, 810, 2081,
	1822, 1335, 810, 680, 3236, 1581, 1581, 693, 1189, 972,
	1189, 1189, 1355, 2388, 456, 456, 1312, 1526, 1526, 2082,
	1579, 1221, 1649, 1650, 1662, 1444, 1445, 3193, 1448, 974,
	975, 976, 973, 1394, 2258, 972, 1463, 3315, 444, 1539,
	1221, 1525, 828, 833, 834, 1533, 1791, 3187, 3138, 1470,
	3238, 1472, 2255, 3292, 1500, 2156, 1943, 1791, 692, 1500,
	1500, 1791, 695, 694, 2305, 456, 1526, 1221, 1791, 1704,
	784, 456, 456, 1708, 1709, 1821, 3237, 2082, 3075, 1712,
	1713, 3074, 2113, 2687, 1719, 3070, 1447, 1144, 1600, 3011,
	3069, 182, 3068, 3012, 182, 182, 3067, 182, 1342, 3194,
	3036, 1587, 1588, 1727, 1782, 2898, 1730, 972, 1663, 1733,
	1715, 1473, 1735, 934, 1985, 1876, 1847, 1644, 1645, 3037,
	3037, 1690, 1691, 2082, 1521, 2844, 1522, 1523, 1564, 1773,
	1566, 1567, 1497, 1462, 1462, 1761, 1676, 1536, 1537, 1538,
	1462, 1462, 1668, 1572, 1670, 1768, 1075, 1693, 1401, 1402,
	3076, 1530, 1700, 1964, 1688, 1689, 1582, 3037, 1700, 1700,
	1128, 1683, 3037, 1544, 3037, 2671, 1701, 1703, 3037, 1552,
	1997, 2000, 3037, 1221, 1780, 1557, 1728, 2899, 1406, 1731,
	1732, 1207, 1734, 1549, 1560, 1561, 1548, 1706, 1707, 935,
	1503, 2440, 2231, 1573, 2223, 1583, 2765, 2113, 1565, 1584,
	2793, 1570, 1571, 1145, 2624, 1585, 1586, 1474, 1475, 1476,
	1559, 2184, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 902, 1774, 1568, 2465, 2307, 1530,
	830, 831, 832, 2172, 1762, 2167, 937, 2672, 1808, 1809,
	2160, 1574, 1648, 2171, 1577, 1578, 1651, 2163, 2158, 2153,
	1814, 1143, 1677, 1818, 1667, 1756, 1669, 2389, 2391, 2392,
	2393, 2390, 1756, 2082, 972, 1569, 972, 1980, 1804, 974,
	975, 976, 973, 2146, 2144, 1353, 1147, 1838, 1823, 1772,
	1555, 1556, 989, 972, 1875, 1702, 1722, 1520, 1314, 2142,
	1019, 922, 2140, 1829, 1963, 902, 897, 895, 2981, 2001,
	1725, 1836, 1723, 1872, 1996, 1990, 1995, 1964, 1993, 1998,
	1853, 807, 2154, 1852, 1841, 2540, 809, 2842, 807, 1849,
	2159, 2154, 1742, 809, 1854, 1855, 1856, 1832, 1692, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 2628, 2503, 1698,
	1831, 1830, 3271, 3116, 2934, 2147, 2145, 1848, 530, 1850,
	909, 1934, 456, 456, 456, 477, 1857, 1771, 1765, 1763,
	473, 2141, 475, 1999, 2141, 1790, 1964, 456, 456, 456,
	974, 975, 976, 973, 476, 1871, 1318, 1775, 2093, 1961,
	1133, 474, 972, 1770, 1134, 972, 972, 3117, 2935, 1968,
	1189, 1211, 2785, 1209, 2783, 478, 691, 1144, 1965, 972,
	1973, 810, 1212, 1400, 807, 1812, 3259, 2022, 810, 809,
	1803, 2132, 972, 972, 1189, 2201, 1874, 2619, 2712, 1397,
	1399, 1396, 1766, 1398, 1767, 1451, 1450, 3035, 2017, 3007,
	1394, 1805, 2951, 1901, 2950, 1816, 2786, 1791, 2784, 1935,
	1936, 1937, 2191, 894, 890, 891, 892, 893, 1319, 2206,
	902, 2205, 2204, 2202, 1953, 1954, 1955, 997, 998, 990,
	991, 992, 993, 994, 995, 996, 989, 562, 572, 1451,
	1450, 2771, 2688, 2681, 2023, 2676, 563, 2673, 571, 564,
	568, 567, 565, 566, 2126, 2606, 2410, 1972, 2086, 2086,
	1662, 2086, 1208, 2620, 810, 2284, 2251, 988, 987, 997,
	998, 990, 991, 992, 993, 994, 995, 996, 989, 444,
	444, 489, 1500, 1145, 1500, 2203, 1845, 909, 2182, 696,
	1867, 1869, 1870, 1221, 456, 992, 993, 994, 995, 996,
	989, 569, 1500, 1500, 2157, 1484, 456, 2621, 2103, 1124,
	1123, 909, 451, 1938, 1806, 1807, 1254, 1726, 1662, 1887,
	1945, 2121, 2107, 2123, 911, 1977, 1409, 182, 1978, 1253,
	1984, 2467, 1042, 570, 990, 991, 992, 993, 994, 995,
	996, 989, 1527, 1409, 2099, 1817, 2100, 2963, 2088, 1477,
	2092, 2090, 1259, 3156, 1726, 1969, 980, 981, 982, 983,
	984, 985, 986, 978, 2104, 2105, 974, 975, 976, 973,
	1043, 973, 1989, 2165, 2962, 1981, 1780, 2715, 976, 973,
	1979, 1227, 2484, 1221, 1988, 1221, 2350, 1221, 1976, 2216,
	2349, 2332, 909, 1700, 1901, 2002, 2003, 2330, 2008, 974,
	975, 976, 973, 2911, 2912, 2942, 1970, 1971, 1021, 2120,
	2136, 3274, 2127, 1466, 2175, 3300, 1974, 1975, 2207, 2208,
	3288, 1020, 2115, 1221, 2210, 3244, 3239, 1467, 2065, 3177,
	3147, 2192, 3118, 974, 975, 976, 973, 1826, 807, 2217,
	2211, 2212, 2713, 809, 1221, 2094, 3060, 3053, 2214, 2215,
	2994, 2937, 1219, 2936, 2219, 2209, 974, 975, 976, 973,
	2787, 2220, 2762, 1147, 2598, 2193, 974, 975, 976, 973,
	2906, 2108, 3273, 1219, 1259, 2179, 2218, 974, 975, 976,
	973, 974, 975, 976, 973, 1500, 2128, 2116, 2244, 2245,
	1507, 2499, 2028, 909, 2030, 2031, 2032, 2033, 2034, 2035,
	2036, 2119, 2117, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2533, 2051, 2052, 2053, 2054, 2055,
	2181, 2056, 2221, 2479, 2478, 2176, 2907, 2763, 810, 974,
	975, 976, 973, 2400, 1201, 1203, 2383, 2382, 2189, 456,
	2381, 2162, 2398, 2373, 1221, 2168, 2367, 2281, 2242, 2166,
	2366, 2173, 2396, 1526, 2385, 1878, 1879, 2195, 2195, 2303,
	2118, 974, 975, 976, 973, 2309, 3178, 2365, 2364, 2125,
	1260, 1745, 1744, 2532, 1743, 1739, 2256, 1738, 1315, 2185,
	2186, 2318, 1092, 2764, 2283, 2200, 2198, 2770, 909, 2399,
	2415, 1353, 974, 975, 976, 973, 2329, 2584, 2397, 974,
	975, 976, 973, 909, 909, 909, 1581, 3209, 2395, 909,
	2384, 2340, 2341, 2342, 909, 525, 2346, 2347, 527, 2348,
	2875, 3108, 3205, 526, 2293, 3160, 2265, 974, 975, 976,
	973, 974, 975, 976, 973, 3104, 2243, 2915, 3090, 2259,
	1279, 2246, 2086, 3079, 3064, 3059, 2301, 974, 975, 976,
	973, 3058, 3031, 2294, 2995, 2944, 2401, 2924, 1600, 2910,
	2873, 2871, 2226, 2227, 444, 2851, 2848, 2310, 2232, 1526,
	909, 1662, 1662, 1662, 1662, 2846, 2405, 2260, 2261, 2761,
	2760, 2757, 909, 1662, 1284, 1285, 2086, 2335, 2336, 2740,
	2682, 2678, 2339, 2669, 2323, 2300, 2327, 2345, 1289, 2668,
	2327, 1293, 1221, 1834, 2607, 2279, 1292, 2566, 2565, 2334,
	2564, 2302, 1882, 2513, 456, 456, 2510, 8, 2477, 2454,
	7, 2320, 2394, 2308, 2386, 2376, 2374, 2370, 2188, 182,
	2369, 2317, 2368, 1873, 182, 2322, 2319, 622, 621, 3125,
	2325, 1747, 1741, 1510, 2331, 1509, 2471, 1316, 2473, 1050,
	2436, 2882, 1530, 2423, 1046, 1462, 2338, 1462, 1045, 898,
	2494, 2881, 688, 3121, 2498, 2423, 1500, 3008, 2902, 1833,
	1221, 1500, 2780, 2505, 2779, 2778, 2375, 974, 975, 976,
	973, 2749, 2739, 2328, 2834, 2311, 2727, 974, 975, 976,
	973, 2718, 2717, 2315, 2316, 974, 975, 976, 973, 2706,
	2705, 2457, 2458, 2629, 2538, 2406, 2531, 2516, 2411, 2523,
	974, 975, 976, 973, 2468, 2522, 2517, 2462, 2312, 2472,
	2439, 2737, 2314, 677, 2257, 2438, 2437, 2270, 2435, 1499,
	2537, 2254, 2143, 2139, 2493, 165, 2455, 157, 133, 2138,
	2452, 2424, 2425, 2426, 2427, 1858, 2536, 974, 975, 976,
	973, 2526, 2491, 2528, 2466, 1851, 1846, 2313, 2497, 909,
	2470, 2469, 1844, 909, 1840, 2448, 2535, 1839, 1837, 2507,
	2502, 2587, 974, 975, 976, 973, 1828, 2490, 1825, 1824,
	2487, 2602, 2485, 2492, 1746, 1495, 456, 1494, 1493, 2534,
	1465, 2501, 974, 975, 976, 973, 909, 909, 909, 1464,
	1455, 1233, 165, 1231, 162, 1662, 1961, 2514, 2627, 3313,
	2356, 2357, 2515, 3270, 2631, 974, 975, 976, 973, 2409,
	3225, 3264, 3251, 2521, 2371, 2372, 2240, 2642, 3248, 2645,
	3246, 2645, 2645, 2529, 2530, 1820, 909, 2610, 2524, 2525,
	3146, 1040, 1901, 3077, 3066, 3061, 1274, 2649, 2407, 2976,
	2664, 2961, 974, 975, 976, 973, 2957, 1221, 1221, 2859,
	2661, 2857, 2832, 2560, 2293, 2831, 2828, 2827, 2563, 2663,
	2570, 162, 2527, 2608, 2567, 987, 997, 998, 990, 991,
	992, 993, 994, 995, 996, 989, 1219, 1219, 2773, 2665,
	2666, 2614, 2615, 2616, 2568, 1819, 2625, 2603, 2582, 2581,
	2489, 1283, 1276, 456, 1131, 2402, 2609, 2496, 2587, 974,
	975, 976, 973, 2641, 2622, 2626, 2650, 2333, 2297, 1526,
	1526, 2296, 810, 2295, 574, 116, 1288, 2635, 2239, 810,
	116, 1291, 2543, 2544, 1280, 2241, 2152, 2102, 2545, 2546,
	2547, 2548, 2651, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2646, 2647, 2057, 974, 975, 976, 973, 1183, 1184,
	2238, 1186, 2640, 1190, 1191, 1192, 2210, 1962, 1395, 974,
	975, 976, 973, 162, 1710, 2716, 681, 682, 683, 684,
	462, 680, 2237, 116, 1519, 1518, 974, 975, 976, 973,
	1700, 1338, 1304, 1234, 1235, 1236, 1237, 1238, 1281, 1240,
	1241, 1242, 1243, 2236, 1076, 1073, 1248, 1249, 974, 975,
	976, 973, 456, 2675, 2680, 2674, 2679, 2684, 2685, 2670,
	2677, 2648, 1072, 1071, 2695, 1070, 1069, 1068, 1067, 974,
	975, 976, 973, 2634, 1066, 1065, 1064, 2699, 2235, 1063,
	1062, 1061, 1060, 1059, 1058, 2187, 1057, 2736, 2702, 2703,
	2704, 3223, 1232, 1056, 2738, 1055, 1054, 2630, 1053, 1049,
	2711, 2632, 2633, 1048, 974, 975, 976, 973, 2636, 988,
	987, 997, 998, 990, 991, 992, 993, 994, 995, 996,
	989, 1047, 2754, 909, 2234, 2728, 1044, 808, 1037, 1036,
	810, 116, 2729, 2233, 1034, 2731, 1033, 1032, 1031, 2733,
	2730, 2230, 1030, 1029, 1028, 1027, 116, 2229, 116, 1026,
	974, 975, 976, 973, 2777, 2228, 1025, 2746, 1024, 974,
	975, 976, 973, 2086, 1662, 2790, 1023, 974, 975, 976,
	973, 2741, 2222, 974, 975, 976, 973, 1018, 1017, 1016,
	909, 974, 975, 976, 973, 2213, 939, 896, 3137, 2642,
	3135, 2743, 3133, 909, 2691, 2692, 3131, 2829, 974, 975,
	976, 973, 1967, 909, 1950, 927, 3183, 2686, 1221, 2694,
	2285, 974, 975, 976, 973, 2114, 1749, 938, 2756, 2697,
	2432, 2430, 2698, 2696, 1526, 2433, 2431, 2429, 909, 2428,
	2190, 1500, 2768, 2792, 2861, 3299, 2434, 1219, 2078, 2079,
	2843, 2862, 1500, 1405, 2161, 2856, 2155, 2745, 2858, 1125,
	453, 2826, 2788, 2819, 182, 2789, 974, 975, 976, 973,
	2796, 101, 2863, 2797, 1546, 1547, 2605, 909, 2248, 974,
	975, 976, 973, 2835, 2838, 2833, 2836, 2074, 2077, 2078,
	2079, 2075, 2841, 2076, 2080, 54, 2345, 53, 2026, 2069,
	2860, 909, 2864, 2849, 2847, 2845, 2839, 2638, 2850, 2639,
	2853, 1636, 2854, 457, 2571, 2855, 1541, 1542, 1543, 2561,
	2562, 2423, 1268, 2150, 909, 1221, 1221, 458, 1878, 1879,
	2927, 2180, 2927, 1078, 2852, 2890, 2074, 2077, 2078, 2079,
	2075, 1298, 2076, 2080, 1941, 2876, 1711, 2896, 933, 2866,
	3100, 459, 2580, 460, 1219, 2922, 2573, 2920, 1221, 2572,
	2423, 2321, 2943, 1983, 2352, 2891, 1957, 2897, 2895, 2747,
	2748, 2353, 2354, 2355, 1550, 1517, 456, 2751, 909, 909,
	1451, 1450, 909, 909, 1090, 1091, 3196, 2922, 1088, 1089,
	3063, 810, 810, 1086, 1087, 2931, 2979, 2930, 2667, 810,
	1084, 1085, 2978, 2066, 2062, 2973, 2792, 2918, 1552, 2940,
	2986, 2941, 2965, 2966, 1647, 2945, 2974, 2975, 2990, 2991,
	2826, 2791, 2819, 1182, 1181, 965, 2701, 2794, 2112, 1769,
	2795, 1136, 1080, 3265, 3169, 2983, 3153, 3151, 3111, 3089,
	3088, 3086, 3078, 3021, 116, 116, 808, 2774, 2775, 2776,
	2754, 2989, 2988, 2872, 2742, 2982, 2725, 3014, 2724, 2709,
	2013, 2918, 2918, 2964, 2984, 2918, 2918, 1083, 2708, 2464,
	2500, 1705, 1554, 3227, 3226, 1151, 1952, 1827, 3043, 3227,
	924, 3226, 2959, 3039, 681, 682, 683, 684, 3009, 680,
	2726, 3019, 3013, 2456, 680, 62, 3026, 3027, 3025, 2883,
	3028, 169, 3, 2, 1198, 2095, 1694, 1225, 1, 1508,
	1000, 3289, 1004, 685, 2441, 3038, 2442, 1005, 2700, 2444,
	1787, 2412, 3044, 3046, 2060, 3045, 1939, 909, 1001, 1003,
	999, 1221, 1002, 988, 987, 997, 998, 990, 991, 992,
	993, 994, 995, 996, 989, 3268, 825, 2601, 3062, 1126,
	725, 1457, 1323, 827, 918, 1320, 917, 915, 1407, 576,
	1219, 3071, 3054, 3072, 988, 987, 997, 998, 990, 991,
	992, 993, 994, 995, 996, 989, 1752, 2403, 2377, 2985,
	3195, 3095, 1022, 3233, 2938, 2939, 3145, 3198, 909, 3085,
	3083, 2900, 2901, 1336, 3112, 560, 3080, 2999, 988, 987,
	997, 998, 990, 991, 992, 993, 994, 995, 996, 989,
	2918, 3149, 3107, 3001, 2878, 1792, 970, 909, 2486, 747,
	613, 3103, 587, 3106, 1221, 3122, 1035, 3140, 3143, 1306,
	3114, 1299, 2541, 829, 586, 2767, 3119, 2275, 2459, 3047,
	3123, 826, 748, 3130, 3132, 3134, 3136, 1736, 2997, 1269,
	3144, 3129, 735, 1219, 1082, 1273, 3139, 1982, 3152, 3055,
	3154, 3155, 3150, 3148, 1221, 3309, 3298, 3280, 3263, 3174,
	3294, 2918, 3213, 3249, 1435, 3179, 2886, 2884, 2885, 2980,
	3242, 3170, 3168, 496, 1673, 820, 816, 811, 815, 818,
	442, 791, 2977, 1219, 1748, 497, 3176, 3202, 1966, 3162,
	2918, 3065, 707, 1949, 708, 701, 3188, 2291, 3189, 3201,
	3190, 2290, 3191, 823, 1376, 3192, 979, 814, 1393, 2557,
	909, 734, 2558, 1014, 535, 3206, 1815, 3095, 2272, 3207,
	2814, 773, 2453, 61, 60, 59, 58, 1718, 190, 578,
	189, 3216, 3218, 2913, 3142, 3232, 3221, 3200, 558, 3224,
	3222, 557, 556, 555, 554, 2073, 2071, 3235, 2070, 1657,
	1656, 3240, 1716, 909, 3228, 3229, 3230, 3231, 821, 2343,
	3241, 2337, 2009, 2014, 3245, 824, 3247, 1589, 3180, 3126,
	1230, 3127, 2956, 2387, 1540, 462, 2005, 1606, 3202, 3261,
	2359, 1603, 812, 3257, 1602, 2351, 2952, 909, 2946, 909,
	3201, 1633, 3260, 3211, 3267, 2752, 3269, 2926, 2798, 2799,
	3272, 2805, 116, 1956, 775, 822, 852, 774, 3073, 3235,
	3276, 909, 848, 3278, 850, 3283, 851, 849, 3287, 1431,
	3290, 2199, 1986, 3293, 2575, 1428, 1892, 1891, 1889, 1430,
	1427, 1429, 1433, 1434, 1888, 1100, 1359, 1432, 3297, 3020,
	3304, 760, 2744, 1899, 3308, 813, 3307, 1897, 2693, 736,
	3266, 2689, 3316, 1760, 1435, 1505, 2247, 1658, 3304, 3321,
	3320, 1654, 1951, 3308, 116, 3022, 1545, 700, 116, 1947,
	1359, 3113, 1359, 98, 2539, 147, 738, 48, 89, 116,
	88, 97, 145, 47, 174, 173, 176, 175, 172, 116,
	3124, 2129, 2130, 171, 1359, 1257, 3319, 165, 51, 157,
	133, 3322, 170, 988, 987, 997, 998, 990, 991, 992,
	993, 994, 995, 996, 989, 158, 2929, 674, 38, 37,
	33, 819, 150, 12, 11, 34, 159, 988, 987, 997,
	998, 990, 991, 992, 993, 994, 995, 996, 989, 759,
	758, 21, 22, 20, 1327, 114, 19, 25, 31, 30,
	109, 108, 29, 107, 106, 105, 757, 104, 817, 103,
	102, 28, 18, 42, 41, 40, 162, 733, 9, 96,
	94, 27, 95, 92, 93, 90, 73, 72, 737, 768,
	1438, 1439, 1440, 1441, 1442, 1443, 1436, 1437, 71, 86,
	3208, 85, 84, 83, 82, 81, 79, 80, 746, 70,
	69, 68, 764, 67, 66, 91, 77, 87, 78, 1431,
	76, 75, 74, 65, 64, 1428, 63, 131, 129, 1430,
	1427, 1429, 1433, 1434, 130, 128, 127, 1432, 126, 125,
	124, 123, 43, 44, 45, 46, 141, 140, 765, 769,
	142, 144, 119, 120, 146, 121, 122, 143, 138, 136,
	139, 137, 135, 56, 99, 17, 24, 754, 4, 752,
	756, 772, 0, 0, 0, 753, 750, 749, 0, 755,
	740, 741, 739, 742, 743, 744, 745, 0, 770, 0,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 767, 988, 987, 997, 998, 990, 991, 992,
	993, 994, 995, 996, 989, 0, 0, 0, 0, 0,
	132, 156, 163, 0, 100, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 0,
	0, 0, 155, 149, 148, 0, 0, 0, 0, 57,
	988, 987, 997, 998, 990, 991, 992, 993, 994, 995,
	996, 989, 0, 0, 0, 0, 0, 0, 1661, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1438, 1439, 1440, 1441, 1442, 1443, 1436, 1437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 152, 153, 0, 0, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 160, 0, 116, 116,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	154, 0, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 808, 0, 0,
	0, 0, 335, 0, 808, 0, 0, 0, 441, 0,
	0, 0, 0, 116, 0, 549, 0, 0, 0, 279,
	0, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 112,
	585, 0, 0, 364, 319, 0, 0, 0, 0, 645,
	653, 50, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 575, 622, 621, 562, 572, 0,
	0, 256, 188, 438, 0, 439, 563, 0, 571, 564,
	568, 567, 565, 566, 0, 637, 0, 0, 0, 0,
	1005, 0, 533, 546, 0, 550, 0, 0, 0, 0,
	52, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 595, 0, 545, 0, 0,
	590, 569, 573, 0, 0, 0, 134, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 570, 593, 597, 273, 659, 591, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 660, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 113, 39, 421, 0,
	0, 0, 0, 49, 5, 0, 0, 117, 118, 0,
	0, 0, 588, 0, 0, 0, 395, 0, 0, 643,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	592, 0, 355, 337, 656, 534, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 1459, 1458, 1460, 407, 286, 239,
	240, 448, 641, 333, 0, 0, 0, 0, 655, 636,
	638, 639, 642, 646, 647, 648, 649, 650, 652, 654,
	658, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 596, 0, 0, 323, 324, 325, 326, 644,
	0, 261, 418, 348, 974, 975, 976, 973, 0, 0,
	0, 0, 1661, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	868, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 666, 640, 665,
	667, 668, 664, 669, 670, 651, 553, 0, 600, 662,
	661, 663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1435, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 0, 347, 284, 0, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 868, 0, 0, 403, 404, 405, 426, 389,
	856, 445, 0, 0, 846, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 440, 0, 0, 0, 0, 0,
	876, 880, 882, 884, 886, 887, 889, 0, 894, 890,
	891, 892, 893, 0, 871, 872, 873, 874, 854, 855,
	877, 0, 857, 0, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 869, 875, 0, 0, 0, 0,
	0, 0, 0, 879, 881, 883, 885, 888, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1431, 0,
	0, 0, 0, 0, 1428, 0, 0, 0, 1430, 1427,
	1429, 1433, 1434, 0, 0, 0, 1432, 116, 0, 0,
	870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 876, 880, 882, 884, 886, 887, 889, 0,
	894, 890, 891, 892, 893, 0, 871, 872, 873, 874,
	854, 855, 877, 0, 857, 0, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 869, 875, 0, 0,
	0, 0, 0, 0, 0, 879, 881, 883, 885, 888,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1661, 1661, 1661, 1661, 0,
	0, 0, 870, 0, 0, 0, 0, 1661, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1438,
	1439, 1440, 1441, 1442, 1443, 1436, 1437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 0, 0, 0, 549, 878,
	0, 0, 279, 1501, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 585, 0, 0, 364, 319, 0, 0,
	0, 0, 645, 653, 0, 0, 0, 0, 0, 0,
	0, 1685, 0, 0, 542, 0, 0, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 438, 0, 439, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 1661,
	0, 0, 0, 0, 0, 533, 546, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 595, 0,
	545, 878, 0, 1686, 569, 573, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 570, 593, 597, 273,
	659, 591, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 660, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 395,
	0, 0, 643, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 592, 0, 355, 337, 656, 534, 0,
	353, 307, 380, 345, 386, 370, 394, 349, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 641, 333, 0, 0, 0,
	0, 655, 636, 638, 639, 642, 646, 647, 648, 649,
	650, 652, 654, 658, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 116, 116, 0,
	0, 0, 0, 0, 0, 116, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 596, 0, 0, 323, 324,
	325, 326, 644, 0, 261, 418, 348, 0, 1661, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	666, 640, 665, 667, 668, 664, 669, 670, 651, 553,
	0, 600, 662, 661, 663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 116, 237,
	0, 241, 0, 306, 0, 347, 284, 0, 0, 629,
	606, 607, 608, 551, 609, 603, 604, 605, 630, 598,
	626, 627, 577, 601, 610, 625, 611, 628, 631, 632,
	671, 672, 617, 673, 614, 633, 624, 623, 612, 599,
	634, 635, 584, 579, 615, 616, 602, 618, 619, 620,
	552, 580, 581, 582, 583, 165, 594, 0, 403, 404,
	405, 426, 389, 0, 445, 335, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 0, 449, 440, 549, 0,
	0, 0, 279, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 1008, 0, 0, 364, 319, 0, 0,
	0, 0, 645, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 438, 0, 439, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 0,
	0, 0, 0, 0, 0, 533, 546, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 595, 0,
	545, 0, 0, 590, 569, 573, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 570, 593, 597, 273,
	659, 591, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 660, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 395,
	0, 0, 643, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 592, 0, 355, 337, 656, 534, 0,
	353, 307, 380, 345, 386, 370, 394, 349, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 641, 333, 0, 0, 0,
	0, 655, 636, 638, 639, 642, 646, 647, 648, 649,
	650, 652, 654, 658, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 596, 0, 0, 323, 324,
	325, 326, 644, 0, 261, 418, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	666, 640, 665, 667, 668, 664, 669, 670, 651, 553,
	0, 600, 662, 661, 663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 237,
	0, 241, 0, 306, 134, 347, 284, 0, 0, 629,
	606, 607, 608, 551, 609, 603, 604, 605, 630, 598,
	626, 627, 577, 601, 610, 625, 611, 628, 631, 632,
	671, 672, 617, 673, 614, 633, 624, 623, 612, 599,
	634, 635, 584, 579, 615, 616, 602, 618, 619, 620,
	552, 580, 581, 582, 583, 0, 594, 0, 403, 404,
	405, 426, 389, 0, 445, 335, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 0, 449, 440, 549, 0,
	0, 0, 279, 3277, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 585, 0, 0, 364, 319, 0, 0,
	0, 0, 645, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 438, 0, 439, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 0,
	0, 0, 0, 0, 0, 533, 546, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 595, 0,
	545, 0, 0, 590, 569, 573, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 570, 593, 597, 273,
	659, 591, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 660, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 395,
	0, 0, 643, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 592, 0, 355, 337, 656, 534, 0,
	353, 307, 380, 345, 386, 370, 394, 349, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 641, 333, 0, 0, 0,
	0, 655, 636, 638, 639, 642, 646, 647, 648, 649,
	650, 652, 654, 658, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 596, 0, 0, 323, 324,
	325, 326, 644, 0, 261, 418, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	666, 640, 665, 667, 668, 664, 669, 670, 651, 553,
	0, 600, 662, 661, 663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 237,
	0, 241, 0, 306, 0, 347, 284, 0, 0, 629,
	606, 607, 608, 551, 609, 603, 604, 605, 630, 598,
	626, 627, 577, 601, 610, 625, 611, 628, 631, 632,
	671, 672, 617, 673, 614, 633, 624, 623, 612, 599,
	634, 635, 584, 579, 615, 616, 602, 618, 619, 620,
	552, 580, 581, 582, 583, 0, 594, 0, 403, 404,
	405, 426, 389, 0, 445, 335, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 0, 449, 440, 549, 0,
	0, 0, 279, 1501, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 585, 0, 0, 364, 319, 0, 0,
	0, 0, 645, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 438, 0, 439, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 0,
	0, 0, 0, 0, 0, 533, 546, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 595, 0,
	545, 0, 0, 590, 569, 573, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 570, 593, 597, 273,
	659, 591, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 660, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 395,
	0, 0, 643, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 592, 0, 355, 337, 656, 534, 0,
	353, 307, 380, 345, 386, 370, 394, 349, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 641, 333, 0, 0, 0,
	0, 655, 636, 638, 639, 642, 646, 647, 648, 649,
	650, 652, 654, 658, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 596, 0, 0, 323, 324,
	325, 326, 644, 0, 261, 418, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	666, 640, 665, 667, 668, 664, 669, 670, 651, 553,
	0, 600, 662, 661, 663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 237,
	0, 241, 0, 306, 0, 347, 284, 0, 0, 629,
	606, 607, 608, 551, 609, 603, 604, 605, 630, 598,
	626, 627, 577, 601, 610, 625, 611, 628, 631, 632,
	671, 672, 617, 673, 614, 633, 624, 623, 612, 599,
	634, 635, 584, 579, 615, 616, 602, 618, 619, 620,
	552, 580, 581, 582, 583, 0, 594, 0, 403, 404,
	405, 426, 389, 0, 445, 335, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 0, 449, 440, 549, 0,
	0, 0, 279, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 585, 0, 0, 364, 319, 0, 0,
	0, 0, 645, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 438, 0, 439, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 0,
	0, 0, 0, 0, 0, 533, 546, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 1252, 0, 0, 0, 595, 0,
	545, 0, 0, 590, 569, 573, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 570, 593, 597, 273,
	659, 591, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 660, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 395,
	0, 0, 643, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 592, 0, 355, 337, 656, 534, 0,
	353, 307, 380, 345, 386, 370, 394, 349, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 641, 333, 0, 0, 0,
	0, 655, 636, 638, 639, 642, 646, 647, 648, 649,
	650, 652, 654, 658, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 596, 0, 0, 323, 324,
	325, 326, 644, 0, 261, 418, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	666, 640, 665, 667, 668, 664, 669, 670, 651, 553,
	0, 600, 662, 661, 663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 237,
	0, 241, 0, 306, 0, 347, 284, 0, 0, 629,
	606, 607, 608, 551, 609, 603, 604, 605, 630, 598,
	626, 627, 577, 601, 610, 625, 611, 628, 631, 632,
	671, 672, 617, 673, 614, 633, 624, 623, 612, 599,
	634, 635, 584, 579, 615, 616, 602, 618, 619, 620,
	552, 580, 581, 582, 583, 0, 0, 0, 403, 404,
	405, 426, 389, 594, 445, 0, 1835, 0, 0, 0,
	0, 0, 335, 0, 0, 0, 449, 440, 441, 0,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 279,
	0, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	585, 0, 0, 364, 319, 0, 0, 0, 0, 645,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 575, 622, 621, 562, 572, 0,
	0, 256, 188, 438, 0, 439, 563, 0, 571, 564,
	568, 567, 565, 566, 0, 637, 0, 0, 0, 0,
	0, 0, 533, 546, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 595, 0, 545, 0, 0,
	590, 569, 573, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 570, 593, 597, 273, 659, 591, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 660, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 395, 0, 0, 643,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	592, 0, 355, 337, 656, 534, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 641, 333, 0, 0, 0, 0, 655, 636,
	638, 639, 642, 646, 647, 648, 649, 650, 652, 654,
	658, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 596, 0, 0, 323, 324, 325, 326, 644,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 666, 640, 665,
	667, 668, 664, 669, 670, 651, 553, 0, 600, 662,
	661, 663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 0, 347, 284, 0, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 0, 594, 0, 403, 404, 405, 426, 389,
	0, 445, 335, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 449, 440, 549, 0, 0, 0, 279,
	0, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	585, 0, 0, 364, 319, 0, 0, 0, 0, 645,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 575, 622, 621, 562, 572, 0,
	0, 256, 188, 438, 0, 439, 563, 0, 571, 564,
	568, 567, 565, 566, 0, 637, 0, 0, 0, 0,
	0, 0, 533, 546, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 595, 0, 545, 0, 0,
	590, 569, 573, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 570, 593, 597, 273, 659, 591, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 660, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 395, 0, 0, 643,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	592, 0, 355, 337, 656, 534, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 641, 333, 0, 0, 0, 0, 655, 636,
	638, 639, 642, 646, 647, 648, 649, 650, 652, 654,
	658, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 596, 0, 0, 323, 324, 325, 326, 644,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 666, 640, 665,
	667, 668, 664, 669, 670, 651, 553, 0, 600, 662,
	661, 663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 0, 347, 284, 0, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 0, 594, 0, 403, 404, 405, 426, 389,
	0, 445, 335, 0, 0, 0, 0, 0, 441, 0,
	0, 1377, 0, 449, 440, 549, 0, 0, 0, 279,
	0, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	585, 0, 0, 364, 319, 0, 0, 0, 0, 645,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 575, 622, 621, 562, 572, 0,
	0, 256, 188, 438, 0, 439, 563, 0, 571, 564,
	568, 567, 565, 566, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 546, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 595, 0, 545, 0, 0,
	590, 569, 573, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 570, 593, 597, 273, 659, 591, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 660, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 395, 0, 0, 643,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	592, 0, 355, 337, 656, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	1378, 1379, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 641, 333, 0, 0, 0, 0, 655, 636,
	638, 639, 642, 646, 647, 648, 649, 650, 652, 654,
	658, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 596, 0, 0, 323, 324, 325, 326, 644,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 666, 640, 665,
	667, 668, 664, 669, 670, 651, 553, 0, 600, 662,
	661, 663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 0, 347, 284, 0, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 0, 594, 0, 403, 404, 405, 426, 389,
	0, 445, 335, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 449, 440, 549, 0, 0, 0, 279,
	0, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	585, 0, 0, 364, 319, 0, 0, 0, 0, 645,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 622, 621, 562, 572, 0,
	0, 256, 188, 438, 0, 439, 563, 0, 571, 564,
	568, 567, 565, 566, 0, 637, 0, 0, 0, 0,
	0, 0, 533, 546, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 595, 0, 545, 0, 0,
	590, 569, 573, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 570, 593, 597, 273, 659, 591, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 660, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 395, 0, 0, 643,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	592, 0, 355, 337, 656, 534, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 641, 333, 0, 0, 0, 0, 655, 636,
	638, 639, 642, 646, 647, 648, 649, 650, 652, 654,
	658, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 596, 0, 0, 323, 324, 325, 326, 644,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 666, 640, 665,
	667, 668, 664, 669, 670, 651, 553, 0, 600, 662,
	661, 663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 0, 347, 284, 0, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 0, 594, 0, 403, 404, 405, 426, 389,
	0, 445, 335, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 449, 440, 549, 0, 0, 0, 279,
	0, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	585, 0, 0, 364, 319, 0, 0, 0, 0, 645,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 575, 622, 621, 562, 572, 0,
	0, 256, 188, 438, 0, 439, 563, 0, 571, 564,
	568, 567, 565, 566, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 546, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 595, 0, 545, 0, 0,
	590, 569, 573, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 570, 593, 597, 273, 659, 591, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 660, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 395, 0, 0, 643,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	592, 0, 355, 337, 656, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 641, 333, 0, 0, 0, 0, 655, 636,
	638, 639, 642, 646, 647, 648, 649, 650, 652, 654,
	658, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 596, 0, 0, 323, 324, 325, 326, 644,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 666, 640, 665,
	667, 668, 664, 669, 670, 651, 553, 0, 600, 662,
	661, 663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 0, 347, 284, 0, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 0, 0, 0, 403, 404, 405, 426, 389,
	0, 445, 165, 51, 157, 133, 0, 0, 0, 0,
	0, 0, 335, 449, 440, 0, 0, 0, 441, 0,
	158, 0, 0, 0, 0, 0, 0, 150, 0, 279,
	0, 159, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	114, 0, 0, 364, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 162, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 438, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 0, 382, 410, 273, 401, 0, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 425, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 132, 156, 163, 0, 100,
	0, 0, 0, 0, 0, 0, 395, 0, 0, 180,
	0, 0, 0, 368, 0, 0, 304, 155, 149, 148,
	411, 0, 355, 337, 57, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 151, 152, 153, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 390, 272, 333, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 329, 406, 183, 0, 0,
	435, 191, 0, 0, 0, 154, 0, 192, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 415, 0, 0, 323, 324, 325, 326, 290,
	0, 261, 418, 348, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 134, 347, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 403, 404, 405, 426, 389,
	0, 193, 39, 181, 184, 186, 185, 0, 49, 5,
	335, 0, 117, 194, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1041,
	0, 0, 187, 0, 0, 562, 572, 0, 0, 256,
	188, 438, 0, 439, 563, 0, 571, 564, 568, 567,
	565, 566, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 570, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 165, 51, 157, 133, 0, 0, 0,
	0, 449, 440, 335, 466, 0, 0, 0, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 436, 0, 437, 0,
	0, 0, 0, 0, 364, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 438, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 369,
	385, 257, 360, 398, 262, 367, 252, 334, 357, 0,
	0, 249, 383, 366, 316, 299, 300, 248, 0, 352,
	277, 291, 274, 332, 0, 382, 410, 273, 401, 0,
	393, 251, 0, 392, 331, 379, 384, 317, 311, 250,
	381, 315, 310, 303, 281, 425, 295, 343, 309, 344,
	296, 321, 320, 322, 0, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 0, 0, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 368, 0, 0, 304, 0, 0,
	0, 411, 0, 355, 337, 0, 0, 0, 353, 307,
	380, 345, 386, 370, 394, 349, 346, 242, 371, 276,
	318, 253, 255, 271, 278, 280, 282, 283, 327, 328,
	340, 359, 372, 373, 374, 275, 263, 354, 264, 293,
	265, 243, 268, 267, 269, 361, 270, 245, 341, 378,
	0, 288, 350, 314, 246, 313, 342, 377, 376, 254,
	402, 408, 409, 0, 0, 414, 0, 0, 0, 422,
	427, 428, 429, 431, 432, 433, 434, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 407, 286,
	239, 240, 448, 272, 333, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 329, 406, 0, 0,
	0, 435, 447, 0, 0, 0, 0, 0, 446, 339,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 388, 400, 417, 420, 0,
	0, 0, 0, 244, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 415, 0, 0, 323, 324, 325, 326,
	467, 469, 261, 418, 348, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 413, 285, 292, 430, 294, 260,
	338, 287, 397, 301, 0, 423, 0, 424, 0, 0,
	0, 0, 330, 297, 298, 362, 302, 308, 351, 396,
	336, 356, 258, 387, 363, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 237, 0, 241,
	0, 306, 134, 347, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 335, 238, 233,
	234, 235, 236, 441, 0, 868, 403, 404, 405, 426,
	389, 0, 445, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 449, 440, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 0, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 856, 0, 0, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 1921, 1923, 1924, 1925, 1926,
	1927, 1928, 0, 1933, 1929, 1930, 1931, 1932, 0, 1916,
	1917, 1918, 1919, 854, 1902, 1922, 0, 1903, 331, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1920, 343, 309, 344, 296, 321, 320, 322, 879, 881,
	883, 885, 888, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 1915, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 878, 306, 0, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 335, 238, 233, 234, 235, 236, 441, 0, 0,
	403, 404, 405, 426, 389, 0, 445, 0, 279, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 449, 440,
	289, 0, 0, 0, 436, 0, 437, 0, 0, 0,
	0, 0, 364, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 438, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 1997, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 369, 385, 257,
	360, 398, 262, 367, 252, 334, 357, 0, 0, 249,
	383, 366, 316, 299, 300, 248, 0, 352, 277, 291,
	274, 332, 0, 382, 410, 273, 401, 0, 393, 251,
	0, 392, 331, 379, 384, 317, 311, 250, 381, 315,
	310, 303, 281, 425, 295, 343, 309, 344, 296, 321,
	320, 322, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2001, 395, 0, 0, 0, 1996,
	0, 1995, 368, 1993, 1998, 304, 0, 0, 0, 411,
	0, 355, 337, 0, 0, 0, 353, 307, 380, 345,
	386, 370, 394, 349, 346, 242, 371, 276, 318, 253,
	255, 271, 278, 280, 282, 283, 327, 328, 340, 359,
	372, 373, 374, 275, 263, 354, 264, 293, 265, 243,
	268, 267, 269, 361, 270, 245, 341, 378, 1999, 288,
	350, 314, 246, 313, 342, 377, 376, 254, 402, 408,
	409, 0, 0, 414, 0, 0, 0, 422, 427, 428,
	429, 431, 432, 433, 434, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 407, 286, 239, 240,
	448, 272, 333, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 329, 406, 0, 0, 0, 435,
	447, 0, 0, 0, 0, 0, 446, 339, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 388, 400, 417, 420, 0, 0, 0,
	0, 244, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 415, 0, 0, 323, 324, 325, 326, 290, 0,
	261, 418, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 413, 285, 292, 430, 294, 260, 338, 287,
	397, 301, 0, 423, 0, 424, 0, 0, 0, 0,
	330, 297, 298, 362, 302, 308, 351, 396, 336, 356,
	258, 387, 363, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 237, 0, 241, 0, 306,
	0, 347, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 403, 404, 405, 426, 389, 335,
	445, 0, 0, 0, 0, 441, 0, 0, 0, 0,
	0, 1720, 449, 440, 0, 0, 279, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 436, 0, 437, 0, 0, 0, 0, 0,
	364, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 1721, 0, 0, 0, 256, 188,
	438, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 974, 975, 976, 973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 369, 385, 257, 360, 398,
	262, 367, 252, 334, 357, 0, 0, 249, 383, 366,
	316, 299, 300, 248, 0, 352, 277, 291, 274, 332,
	0, 382, 410, 273, 401, 0, 393, 251, 0, 392,
	331, 379, 384, 317, 311, 250, 381, 315, 310, 303,
	281, 425, 295, 343, 309, 344, 296, 321, 320, 322,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	368, 0, 0, 304, 0, 0, 0, 411, 0, 355,
	337, 0, 0, 0, 353, 307, 380, 345, 386, 370,
	394, 349, 346, 242, 371, 276, 318, 253, 255, 271,
	278, 280, 282, 283, 327, 328, 340, 359, 372, 373,
	374, 275, 263, 354, 264, 293, 265, 243, 268, 267,
	269, 361, 270, 245, 341, 378, 0, 288, 350, 314,
	246, 313, 342, 377, 376, 254, 402, 408, 409, 0,
	0, 414, 0, 0, 0, 422, 427, 428, 429, 431,
	432, 433, 434, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 407, 286, 239, 240, 448, 272,
	333, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 329, 406, 0, 0, 0, 435, 447, 0,
	0, 0, 0, 0, 446, 339, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 388, 400, 417, 420, 0, 0, 0, 0, 244,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 415,
	0, 0, 323, 324, 325, 326, 290, 0, 261, 418,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 285, 292, 430, 294, 260, 338, 287, 397, 301,
	0, 423, 0, 424, 0, 0, 0, 0, 330, 297,
	298, 362, 302, 308, 351, 396, 336, 356, 258, 387,
	363, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 237, 0, 241, 0, 306, 0, 347,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 335, 238, 233, 234, 235, 236, 441,
	0, 0, 403, 404, 405, 426, 389, 0, 445, 0,
	279, 790, 0, 305, 0, 0, 0, 0, 0, 0,
	449, 440, 289, 0, 0, 0, 436, 0, 437, 0,
	0, 0, 0, 0, 364, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 797, 798, 0, 0,
	0, 0, 256, 188, 438, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 369,
	785, 257, 360, 398, 262, 367, 252, 334, 357, 0,
	0, 249, 383, 366, 316, 299, 300, 248, 0, 352,
	277, 291, 274, 332, 0, 382, 410, 273, 401, 775,
	393, 251, 774, 392, 331, 379, 384, 317, 311, 250,
	381, 315, 310, 303, 281, 425, 295, 343, 309, 344,
	296, 321, 320, 322, 0, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 368, 0, 0, 304, 0, 0,
	0, 411, 0, 355, 337, 0, 0, 0, 353, 307,
	380, 345, 386, 370, 394, 788, 346, 242, 371, 276,
	318, 253, 255, 271, 278, 280, 282, 283, 327, 328,
	340, 359, 372, 373, 374, 275, 263, 354, 264, 293,
	265, 243, 268, 267, 269, 361, 270, 245, 341, 378,
	0, 288, 350, 314, 246, 313, 342, 377, 376, 254,
	402, 408, 409, 0, 0, 414, 0, 0, 0, 422,
	427, 428, 429, 431, 432, 433, 434, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 407, 286,
	239, 240, 448, 272, 333, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 329, 406, 0, 0,
	0, 435, 447, 0, 0, 0, 0, 0, 446, 339,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 388, 400, 417, 420, 0,
	0, 0, 0, 244, 419, 0, 0, 0, 0, 0,
	0, 789, 0, 391, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 792, 0, 0, 323, 324, 325, 326,
	290, 0, 261, 418, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 413, 285, 292, 430, 294, 260,
	338, 287, 397, 301, 0, 423, 0, 424, 0, 0,
	0, 0, 799, 786, 795, 787, 302, 308, 351, 396,
	336, 356, 258, 387, 363, 796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 237, 0, 241,
	0, 306, 0, 347, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 335, 238, 233,
	234, 235, 236, 441, 0, 0, 403, 404, 405, 426,
	389, 0, 445, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 449, 440, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 0, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 2016, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 0, 382,
	410, 273, 401, 0, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 425,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2015, 395, 0, 0, 0, 2020, 2018, 0, 368, 0,
	2019, 304, 0, 0, 0, 411, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 0, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 0, 238, 233, 234, 235, 236, 165, 0, 0,
	403, 404, 405, 426, 389, 0, 445, 335, 0, 0,
	0, 0, 0, 441, 0, 0, 0, 0, 449, 440,
	0, 0, 0, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 114, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 1764, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 0, 382,
	410, 273, 401, 0, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 425,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 411, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 134, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 0, 238, 233, 234, 235, 236, 165, 0, 0,
	403, 404, 405, 426, 389, 0, 445, 335, 0, 0,
	0, 0, 0, 441, 0, 0, 0, 0, 449, 440,
	0, 0, 0, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 114, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 1755, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 0, 382,
	410, 273, 401, 0, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 425,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 411, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 134, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 0, 238, 233, 234, 235, 236, 165, 0, 0,
	403, 404, 405, 426, 389, 0, 445, 335, 0, 0,
	0, 0, 0, 441, 0, 0, 0, 0, 449, 440,
	0, 0, 0, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 114, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1659, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 0, 382,
	410, 273, 401, 0, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 425,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 411, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 134, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 335, 238, 233, 234, 235, 236, 441, 0, 0,
	403, 404, 405, 426, 389, 0, 445, 0, 279, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 449, 440,
	289, 0, 0, 0, 436, 0, 437, 0, 0, 0,
	0, 0, 364, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 797, 798, 0, 0, 0, 0,
	256, 188, 438, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 369, 385, 257,
	360, 398, 262, 367, 252, 334, 357, 0, 0, 249,
	383, 366, 316, 299, 300, 248, 0, 352, 277, 291,
	274, 332, 0, 382, 410, 273, 401, 775, 393, 251,
	774, 392, 331, 379, 384, 317, 311, 250, 381, 315,
	310, 303, 281, 425, 295, 343, 309, 344, 296, 321,
	320, 322, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 304, 0, 0, 0, 411,
	0, 355, 337, 0, 0, 0, 353, 307, 380, 345,
	386, 370, 394, 349, 346, 242, 371, 276, 318, 253,
	255, 271, 278, 280, 282, 283, 327, 328, 340, 359,
	372, 373, 374, 275, 263, 354, 264, 293, 265, 243,
	268, 267, 269, 361, 270, 245, 341, 378, 0, 288,
	350, 314, 246, 313, 342, 377, 376, 254, 402, 408,
	409, 0, 0, 414, 0, 0, 0, 422, 427, 428,
	429, 431, 432, 433, 434, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 407, 286, 239, 240,
	448, 272, 333, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 329, 406, 0, 0, 0, 435,
	447, 0, 0, 0, 0, 0, 446, 339, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 388, 400, 417, 420, 0, 0, 0,
	0, 244, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 415, 0, 0, 323, 324, 325, 326, 290, 0,
	261, 418, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 413, 285, 292, 430, 294, 260, 338, 287,
	397, 301, 0, 423, 0, 424, 0, 0, 0, 0,
	799, 1678, 795, 1679, 302, 308, 351, 396, 336, 356,
	258, 387, 363, 796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 237, 0, 241, 0, 306,
	0, 347, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 403, 404, 405, 426, 389, 335,
	445, 0, 0, 0, 0, 441, 0, 0, 2416, 0,
	0, 0, 449, 440, 0, 0, 279, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 436, 0, 437, 0, 0, 0, 0, 0,
	364, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	438, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 369, 385, 257, 360, 398,
	262, 367, 252, 334, 357, 0, 0, 249, 383, 366,
	316, 299, 300, 248, 0, 352, 277, 291, 274, 332,
	0, 382, 410, 273, 401, 0, 393, 251, 0, 392,
	331, 379, 384, 317, 311, 250, 381, 315, 310, 303,
	281, 425, 295, 343, 309, 344, 296, 321, 320, 322,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 2419, 0, 0, 2418, 0, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	368, 0, 0, 304, 0, 0, 0, 411, 0, 355,
	337, 0, 0, 0, 353, 307, 380, 345, 386, 370,
	394, 349, 346, 242, 371, 276, 318, 253, 255, 271,
	278, 280, 282, 283, 327, 328, 340, 359, 372, 373,
	374, 275, 263, 354, 264, 293, 265, 243, 268, 267,
	269, 361, 270, 245, 341, 378, 0, 288, 350, 314,
	246, 313, 342, 377, 376, 254, 402, 408, 409, 0,
	0, 414, 0, 0, 0, 422, 427, 428, 429, 431,
	432, 433, 434, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 407, 286, 239, 240, 448, 272,
	333, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 329, 406, 0, 0, 0, 435, 447, 0,
	0, 0, 0, 0, 446, 339, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 388, 400, 417, 420, 0, 0, 0, 0, 244,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 415,
	0, 0, 323, 324, 325, 326, 290, 0, 261, 418,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 285, 292, 430, 294, 260, 338, 287, 397, 301,
	0, 423, 0, 424, 0, 0, 0, 0, 330, 297,
	298, 362, 302, 308, 351, 396, 336, 356, 258, 387,
	363, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 237, 0, 241, 0, 306, 0, 347,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 335, 238, 233, 234, 235, 236, 441,
	0, 0, 403, 404, 405, 426, 389, 0, 445, 0,
	279, 1224, 0, 305, 0, 0, 0, 0, 0, 0,
	449, 440, 289, 0, 0, 0, 436, 0, 437, 0,
	0, 0, 0, 0, 364, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 1222, 0,
	0, 0, 256, 188, 438, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 0, 0, 0, 0, 0, 0, 247, 369,
	385, 257, 360, 398, 262, 367, 252, 334, 357, 0,
	0, 249, 383, 366, 316, 299, 300, 248, 0, 352,
	277, 291, 274, 332, 0, 382, 410, 273, 401, 0,
	393, 251, 0, 392, 331, 379, 384, 317, 311, 250,
	381, 315, 310, 303, 281, 425, 295, 343, 309, 344,
	296, 321, 320, 322, 0, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 368, 0, 0, 304, 0, 0,
	0, 411, 0, 355, 337, 0, 0, 0, 353, 307,
	380, 345, 386, 370, 394, 349, 346, 242, 371, 276,
	318, 253, 255, 271, 278, 280, 282, 283, 327, 328,
	340, 359, 372, 373, 374, 275, 263, 354, 264, 293,
	265, 243, 268, 267, 269, 361, 270, 245, 341, 378,
	0, 288, 350, 314, 246, 313, 342, 377, 376, 254,
	402, 408, 409, 0, 0, 414, 0, 0, 0, 422,
	427, 428, 429, 431, 432, 433, 434, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 407, 286,
	239, 240, 448, 272, 333, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 329, 406, 0, 0,
	0, 435, 447, 0, 0, 0, 0, 0, 446, 339,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 388, 400, 417, 420, 0,
	0, 0, 0, 244, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 415, 0, 0, 323, 324, 325, 326,
	290, 0, 261, 418, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 413, 285, 292, 430, 294, 260,
	338, 287, 397, 301, 0, 423, 0, 424, 0, 0,
	0, 0, 330, 297, 298, 362, 302, 308, 351, 396,
	336, 356, 258, 387, 363, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 237, 0, 241,
	0, 306, 0, 347, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 335, 238, 233,
	234, 235, 236, 441, 0, 0, 403, 404, 405, 426,
	389, 0, 445, 0, 279, 1218, 0, 305, 0, 0,
	0, 0, 0, 0, 449, 440, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 0, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 1222, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1220, 0, 0, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 0, 382,
	410, 273, 401, 0, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 425,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 411, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 0, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 335, 238, 233, 234, 235, 236, 441, 0, 0,
	403, 404, 405, 426, 389, 0, 445, 0, 279, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 449, 440,
	289, 0, 0, 0, 436, 0, 437, 0, 0, 0,
	0, 0, 364, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3197, 0, 187, 622, 0, 0, 0, 0, 0,
	256, 188, 438, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 369, 385, 257,
	360, 398, 262, 367, 252, 334, 357, 0, 0, 249,
	383, 366, 316, 299, 300, 248, 0, 352, 277, 291,
	274, 332, 0, 382, 410, 273, 401, 0, 393, 251,
	0, 392, 331, 379, 384, 317, 311, 250, 381, 315,
	310, 303, 281, 425, 295, 343, 309, 344, 296, 321,
	320, 322, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 304, 0, 0, 0, 411,
	0, 355, 337, 0, 0, 0, 353, 307, 380, 345,
	386, 370, 394, 349, 346, 242, 371, 276, 318, 253,
	255, 271, 278, 280, 282, 283, 327, 328, 340, 359,
	372, 373, 374, 275, 263, 354, 264, 293, 265, 243,
	268, 267, 269, 361, 270, 245, 341, 378, 0, 288,
	350, 314, 246, 313, 342, 377, 376, 254, 402, 408,
	409, 0, 0, 414, 0, 0, 0, 422, 427, 428,
	429, 431, 432, 433, 434, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 407, 286, 239, 240,
	448, 272, 333, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 329, 406, 0, 0, 0, 435,
	447, 0, 0, 0, 0, 0, 446, 339, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 388, 400, 417, 420, 0, 0, 0,
	0, 244, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 415, 0, 0, 323, 324, 325, 326, 290, 0,
	261, 418, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 413, 285, 292, 430, 294, 260, 338, 287,
	397, 301, 0, 423, 0, 424, 0, 0, 0, 0,
	330, 297, 298, 362, 302, 308, 351, 396, 336, 356,
	258, 387, 363, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 237, 0, 241, 0, 306,
	0, 347, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 335, 238, 233, 234, 235,
	236, 441, 0, 0, 403, 404, 405, 426, 389, 0,
	445, 0, 279, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 449, 440, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 0, 0, 0, 364, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	1222, 0, 0, 0, 256, 188, 438, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1220, 0, 0, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 0, 382, 410, 273,
	401, 0, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 425, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 411, 0, 355, 337, 0, 0, 0,
	353, 307, 380, 345, 386, 370, 394, 349, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 272, 333, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 329, 406,
	0, 0, 0, 435, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 415, 0, 0, 323, 324,
	325, 326, 290, 0, 261, 418, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 237,
	0, 241, 0, 306, 0, 347, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 335,
	238, 233, 234, 235, 236, 441, 0, 0, 403, 404,
	405, 426, 389, 0, 445, 0, 279, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 449, 440, 289, 0,
	0, 0, 436, 0, 437, 0, 0, 0, 0, 0,
	364, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 1222, 0, 0, 0, 256, 188,
	438, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2923, 0, 0,
	0, 0, 0, 0, 247, 369, 385, 257, 360, 398,
	262, 367, 252, 334, 357, 0, 0, 249, 383, 366,
	316, 299, 300, 248, 0, 352, 277, 291, 274, 332,
	0, 382, 410, 273, 401, 0, 393, 251, 0, 392,
	331, 379, 384, 317, 311, 250, 381, 315, 310, 303,
	281, 425, 295, 343, 309, 344, 296, 321, 320, 322,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	368, 0, 0, 304, 0, 0, 0, 411, 0, 355,
	337, 0, 0, 0, 353, 307, 380, 345, 386, 370,
	394, 349, 346, 242, 371, 276, 318, 253, 255, 271,
	278, 280, 282, 283, 327, 328, 340, 359, 372, 373,
	374, 275, 263, 354, 264, 293, 265, 243, 268, 267,
	269, 361, 270, 245, 341, 378, 0, 288, 350, 314,
	246, 313, 342, 377, 376, 254, 402, 408, 409, 0,
	0, 414, 0, 0, 0, 422, 427, 428, 429, 431,
	432, 433, 434, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 407, 286, 239, 240, 448, 272,
	333, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 329, 406, 0, 0, 0, 435, 447, 0,
	0, 0, 0, 0, 446, 339, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 388, 400, 417, 420, 0, 0, 0, 0, 244,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 415,
	0, 0, 323, 324, 325, 326, 290, 0, 261, 418,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 285, 292, 430, 294, 260, 338, 287, 397, 301,
	0, 423, 0, 424, 0, 0, 0, 0, 330, 297,
	298, 362, 302, 308, 351, 396, 336, 356, 258, 387,
	363, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 237, 0, 241, 0, 306, 0, 347,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 403, 404, 405, 426, 389, 335, 445, 0,
	0, 0, 0, 441, 0, 0, 0, 0, 0, 2085,
	449, 440, 0, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 0, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 2087, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 0, 382,
	410, 273, 401, 0, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 425,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 411, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 0, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 335, 238, 233, 234, 235, 236, 441, 0, 0,
	403, 404, 405, 426, 389, 0, 445, 0, 279, 2106,
	0, 305, 0, 0, 0, 0, 0, 0, 449, 440,
	289, 0, 0, 0, 436, 0, 437, 0, 0, 0,
	0, 0, 364, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 1222, 0, 0, 0,
	256, 188, 438, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 369, 385, 257,
	360, 398, 262, 367, 252, 334, 357, 0, 0, 249,
	383, 366, 316, 299, 300, 248, 0, 352, 277, 291,
	274, 332, 0, 382, 410, 273, 401, 0, 393, 251,
	0, 392, 331, 379, 384, 317, 311, 250, 381, 315,
	310, 303, 281, 425, 295, 343, 309, 344, 296, 321,
	320, 322, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 304, 0, 0, 0, 411,
	0, 355, 337, 0, 0, 0, 353, 307, 380, 345,
	386, 370, 394, 349, 346, 242, 371, 276, 318, 253,
	255, 271, 278, 280, 282, 283, 327, 328, 340, 359,
	372, 373, 374, 275, 263, 354, 264, 293, 265, 243,
	268, 267, 269, 361, 270, 245, 341, 378, 0, 288,
	350, 314, 246, 313, 342, 377, 376, 254, 402, 408,
	409, 0, 0, 414, 0, 0, 0, 422, 427, 428,
	429, 431, 432, 433, 434, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 407, 286, 239, 240,
	448, 272, 333, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 329, 406, 0, 0, 0, 435,
	447, 0, 0, 0, 0, 0, 446, 339, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 388, 400, 417, 420, 0, 0, 0,
	0, 244, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 415, 0, 0, 323, 324, 325, 326, 290, 0,
	261, 418, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 413, 285, 292, 430, 294, 260, 338, 287,
	397, 301, 0, 423, 0, 424, 0, 0, 0, 0,
	330, 297, 298, 362, 302, 308, 351, 396, 336, 356,
	258, 387, 363, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 237, 0, 241, 0, 306,
	0, 347, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 335, 238, 233, 234, 235,
	236, 441, 0, 0, 403, 404, 405, 426, 389, 0,
	445, 0, 279, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 449, 440, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 0, 0, 0, 364, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3286, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 438, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 0, 382, 410, 273,
	401, 0, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 425, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 411, 0, 355, 337, 0, 0, 0,
	353, 307, 380, 345, 386, 370, 394, 349, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 272, 333, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 329, 406,
	0, 0, 0, 435, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 415, 0, 0, 323, 324,
	325, 326, 290, 0, 261, 418, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 237,
	0, 241, 0, 306, 0, 347, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 335,
	238, 233, 234, 235, 236, 441, 0, 0, 403, 404,
	405, 426, 389, 0, 445, 0, 279, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 449, 440, 289, 0,
	0, 0, 436, 0, 437, 0, 0, 0, 0, 0,
	364, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 622, 0, 0, 0, 0, 0, 256, 188,
	438, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 369, 385, 257, 360, 398,
	262, 367, 252, 334, 357, 0, 0, 249, 383, 366,
	316, 299, 300, 248, 0, 352, 277, 291, 274, 332,
	0, 382, 410, 273, 401, 0, 393, 251, 0, 392,
	331, 379, 384, 317, 311, 250, 381, 315, 310, 303,
	281, 425, 295, 343, 309, 344, 296, 321, 320, 322,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	368, 0, 0, 304, 0, 0, 0, 411, 0, 355,
	337, 0, 0, 0, 353, 307, 380, 345, 386, 370,
	394, 349, 346, 242, 371, 276, 318, 253, 255, 271,
	278, 280, 282, 283, 327, 328, 340, 359, 372, 373,
	374, 275, 263, 354, 264, 293, 265, 243, 268, 267,
	269, 361, 270, 245, 341, 378, 0, 288, 350, 314,
	246, 313, 342, 377, 376, 254, 402, 408, 409, 0,
	0, 414, 0, 0, 0, 422, 427, 428, 429, 431,
	432, 433, 434, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 407, 286, 239, 240, 448, 272,
	333, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 329, 406, 0, 0, 0, 435, 447, 0,
	0, 0, 0, 0, 446, 339, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 388, 400, 417, 420, 0, 0, 0, 0, 244,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 415,
	0, 0, 323, 324, 325, 326, 290, 0, 261, 418,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 285, 292, 430, 294, 260, 338, 287, 397, 301,
	0, 423, 0, 424, 0, 0, 0, 0, 330, 297,
	298, 362, 302, 308, 351, 396, 336, 356, 258, 387,
	363, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 237, 0, 241, 0, 306, 0, 347,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 335, 238, 233, 234, 235, 236, 441,
	0, 0, 403, 404, 405, 426, 389, 0, 445, 0,
	279, 0, 0, 305, 0, 0, 0, 0, 0, 0,
	449, 440, 289, 0, 0, 0, 436, 0, 437, 0,
	0, 0, 0, 0, 364, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3212, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 438, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 369,
	385, 257, 360, 398, 262, 367, 252, 334, 357, 0,
	0, 249, 383, 366, 316, 299, 300, 248, 0, 352,
	277, 291, 274, 332, 0, 382, 410, 273, 401, 0,
	393, 251, 0, 392, 331, 379, 384, 317, 311, 250,
	381, 315, 310, 303, 281, 425, 295, 343, 309, 344,
	296, 321, 320, 322, 0, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 368, 0, 0, 304, 0, 0,
	0, 411, 0, 355, 337, 0, 0, 0, 353, 307,
	380, 345, 386, 370, 394, 349, 346, 242, 371, 276,
	318, 253, 255, 271, 278, 280, 282, 283, 327, 328,
	340, 359, 372, 373, 374, 275, 263, 354, 264, 293,
	265, 243, 268, 267, 269, 361, 270, 245, 341, 378,
	0, 288, 350, 314, 246, 313, 342, 377, 376, 254,
	402, 408, 409, 0, 0, 414, 0, 0, 0, 422,
	427, 428, 429, 431, 432, 433, 434, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 407, 286,
	239, 240, 448, 272, 333, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 329, 406, 0, 0,
	0, 435, 447, 0, 0, 0, 0, 0, 446, 339,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 388, 400, 417, 420, 0,
	0, 0, 0, 244, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 415, 0, 0, 323, 324, 325, 326,
	290, 0, 261, 418, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 413, 285, 292, 430, 294, 260,
	338, 287, 397, 301, 0, 423, 0, 424, 0, 0,
	0, 0, 330, 297, 298, 362, 302, 308, 351, 396,
	336, 356, 258, 387, 363, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 237, 0, 241,
	0, 306, 0, 347, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 335, 238, 233,
	234, 235, 236, 441, 0, 0, 403, 404, 405, 426,
	389, 0, 445, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 449, 440, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 0, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 0, 382,
	410, 273, 401, 0, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 425,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 3141, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 411, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 0, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 335, 238, 233, 234, 235, 236, 441, 0, 0,
	403, 404, 405, 426, 389, 0, 445, 0, 279, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 449, 440,
	289, 0, 0, 0, 436, 0, 437, 0, 0, 0,
	0, 0, 364, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2919, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 438, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 369, 385, 257,
	360, 398, 262, 367, 252, 334, 357, 0, 0, 249,
	383, 366, 316, 299, 300, 248, 0, 352, 277, 291,
	274, 332, 0, 382, 410, 273, 401, 0, 393, 251,
	0, 392, 331, 379, 384, 317, 311, 250, 381, 315,
	310, 303, 281, 425, 295, 343, 309, 344, 296, 321,
	320, 322, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 304, 0, 0, 0, 411,
	0, 355, 337, 0, 0, 0, 353, 307, 380, 345,
	386, 370, 394, 349, 346, 242, 371, 276, 318, 253,
	255, 271, 278, 280, 282, 283, 327, 328, 340, 359,
	372, 373, 374, 275, 263, 354, 264, 293, 265, 243,
	268, 267, 269, 361, 270, 245, 341, 378, 0, 288,
	350, 314, 246, 313, 342, 377, 376, 254, 402, 408,
	409, 0, 0, 414, 0, 0, 0, 422, 427, 428,
	429, 431, 432, 433, 434, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 407, 286, 239, 240,
	448, 272, 333, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 329, 406, 0, 0, 0, 435,
	447, 0, 0, 0, 0, 0, 446, 339, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 388, 400, 417, 420, 0, 0, 0,
	0, 244, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 415, 0, 0, 323, 324, 325, 326, 290, 0,
	261, 418, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 413, 285, 292, 430, 294, 260, 338, 287,
	397, 301, 0, 423, 0, 424, 0, 0, 0, 0,
	330, 297, 298, 362, 302, 308, 351, 396, 336, 356,
	258, 387, 363, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 237, 0, 241, 0, 306,
	0, 347, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 335, 238, 233, 234, 235,
	236, 441, 0, 0, 403, 404, 405, 426, 389, 0,
	445, 0, 279, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 449, 440, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 0, 0, 0, 364, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	2755, 0, 0, 0, 256, 188, 438, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 0, 382, 410, 273,
	401, 0, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 425, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 411, 0, 355, 337, 0, 0, 0,
	353, 307, 380, 345, 386, 370, 394, 349, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 272, 333, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 329, 406,
	0, 0, 0, 435, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 415, 0, 0, 323, 324,
	325, 326, 290, 0, 261, 418, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 237,
	0, 241, 0, 306, 0, 347, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 335,
	238, 233, 234, 235, 236, 441, 0, 0, 403, 404,
	405, 426, 389, 0, 445, 0, 279, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 449, 440, 289, 0,
	0, 0, 436, 0, 437, 0, 0, 0, 0, 0,
	364, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	438, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 369, 385, 257, 360, 398,
	262, 367, 252, 334, 357, 0, 0, 249, 383, 366,
	316, 299, 300, 248, 0, 352, 277, 291, 274, 332,
	0, 382, 410, 273, 401, 0, 393, 251, 0, 392,
	331, 379, 384, 317, 311, 250, 381, 315, 310, 303,
	281, 425, 295, 343, 309, 344, 296, 321, 320, 322,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 0, 0, 2987, 0, 0,
	368, 0, 0, 304, 0, 0, 0, 411, 0, 355,
	337, 0, 0, 0, 353, 307, 380, 345, 386, 370,
	394, 349, 346, 242, 371, 276, 318, 253, 255, 271,
	278, 280, 282, 283, 327, 328, 340, 359, 372, 373,
	374, 275, 263, 354, 264, 293, 265, 243, 268, 267,
	269, 361, 270, 245, 341, 378, 0, 288, 350, 314,
	246, 313, 342, 377, 376, 254, 402, 408, 409, 0,
	0, 414, 0, 0, 0, 422, 427, 428, 429, 431,
	432, 433, 434, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 407, 286, 239, 240, 448, 272,
	333, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 329, 406, 0, 0, 0, 435, 447, 0,
	0, 0, 0, 0, 446, 339, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 388, 400, 417, 420, 0, 0, 0, 0, 244,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 415,
	0, 0, 323, 324, 325, 326, 290, 0, 261, 418,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 285, 292, 430, 294, 260, 338, 287, 397, 301,
	0, 423, 0, 424, 0, 0, 0, 0, 330, 297,
	298, 362, 302, 308, 351, 396, 336, 356, 258, 387,
	363, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 237, 0, 241, 0, 306, 0, 347,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 335, 238, 233, 234, 235, 236, 441,
	0, 0, 403, 404, 405, 426, 389, 0, 445, 0,
	279, 0, 0, 305, 0, 0, 0, 0, 0, 0,
	449, 440, 289, 0, 0, 0, 436, 0, 437, 0,
	0, 0, 0, 0, 364, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 438, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 369,
	385, 257, 360, 398, 262, 367, 252, 334, 357, 0,
	0, 249, 383, 366, 316, 299, 300, 248, 0, 352,
	277, 291, 274, 332, 0, 382, 410, 273, 401, 0,
	393, 251, 0, 392, 331, 379, 384, 317, 311, 250,
	381, 315, 310, 303, 281, 425, 295, 343, 309, 344,
	296, 321, 320, 322, 0, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 368, 0, 0, 304, 0, 0,
	0, 411, 0, 355, 337, 0, 0, 0, 353, 307,
	380, 345, 386, 370, 394, 349, 346, 242, 371, 276,
	318, 253, 255, 271, 278, 280, 282, 283, 327, 328,
	340, 359, 372, 373, 374, 275, 263, 354, 264, 293,
	265, 243, 268, 267, 269, 361, 270, 245, 341, 378,
	0, 288, 350, 314, 246, 313, 342, 377, 376, 254,
	402, 408, 409, 0, 0, 414, 0, 0, 0, 422,
	427, 428, 429, 431, 432, 433, 434, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 407, 286,
	239, 240, 448, 272, 333, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 329, 406, 0, 0,
	0, 435, 447, 0, 0, 0, 0, 0, 446, 339,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 388, 400, 417, 420, 0,
	0, 0, 0, 244, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 415, 0, 0, 323, 324, 325, 326,
	290, 0, 261, 418, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 413, 285, 292, 430, 294, 260,
	338, 287, 397, 301, 0, 423, 0, 424, 0, 0,
	0, 0, 330, 297, 298, 362, 302, 308, 351, 396,
	336, 356, 258, 387, 363, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 237, 0, 241,
	0, 306, 0, 347, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 335, 238, 233,
	234, 235, 236, 441, 0, 0, 403, 404, 405, 426,
	389, 0, 445, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 449, 440, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 0, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1659, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 0, 382,
	410, 273, 401, 0, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 425,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 411, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 0, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 335, 238, 233, 234, 235, 236, 441, 0, 0,
	403, 404, 405, 426, 389, 0, 445, 0, 279, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 449, 440,
	289, 0, 0, 0, 436, 0, 437, 0, 0, 0,
	0, 0, 364, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 438, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 369, 385, 257,
	360, 398, 262, 367, 252, 334, 357, 0, 0, 249,
	383, 366, 316, 299, 300, 248, 0, 352, 277, 291,
	274, 332, 0, 382, 410, 273, 401, 0, 393, 251,
	0, 392, 331, 379, 384, 317, 311, 250, 381, 315,
	310, 303, 281, 425, 295, 343, 309, 344, 296, 321,
	320, 322, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 304, 0, 0, 0, 411,
	0, 355, 337, 0, 0, 0, 353, 307, 380, 345,
	386, 370, 394, 349, 346, 242, 371, 276, 318, 253,
	255, 271, 278, 280, 282, 283, 327, 328, 340, 359,
	372, 373, 374, 275, 263, 354, 264, 293, 265, 243,
	268, 267, 269, 361, 270, 245, 341, 378, 0, 288,
	350, 314, 246, 313, 342, 377, 376, 254, 402, 408,
	409, 0, 0, 414, 0, 0, 0, 422, 427, 428,
	429, 431, 432, 433, 434, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 407, 286, 239, 240,
	448, 272, 333, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 329, 406, 0, 0, 0, 435,
	447, 0, 0, 0, 0, 0, 446, 339, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 388, 400, 417, 420, 0, 0, 0,
	0, 244, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 415, 0, 0, 323, 324, 325, 326, 290, 0,
	261, 418, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 413, 285, 292, 430, 294, 260, 338, 287,
	397, 301, 0, 423, 0, 424, 0, 0, 0, 0,
	330, 297, 298, 362, 302, 308, 351, 396, 336, 356,
	258, 387, 363, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 237, 0, 241, 0, 306,
	0, 347, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 335, 238, 233, 234, 235,
	236, 441, 0, 0, 403, 404, 405, 426, 389, 0,
	445, 0, 279, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 449, 440, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 0, 0, 0, 364, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	2586, 0, 0, 0, 256, 188, 438, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 0, 382, 410, 273,
	401, 0, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 425, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 411, 0, 355, 337, 0, 0, 0,
	353, 307, 380, 345, 386, 370, 394, 349, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 272, 333, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 329, 406,
	0, 0, 0, 435, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 415, 0, 0, 323, 324,
	325, 326, 290, 0, 261, 418, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 237,
	0, 241, 0, 306, 0, 347, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 335,
	238, 233, 234, 235, 236, 441, 0, 0, 403, 404,
	405, 426, 389, 0, 445, 0, 279, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 449, 440, 289, 0,
	0, 0, 436, 0, 437, 0, 0, 0, 0, 0,
	364, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	438, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 369, 385, 257, 360, 398,
	262, 367, 252, 334, 357, 0, 0, 249, 383, 366,
	316, 299, 300, 248, 0, 352, 277, 291, 274, 332,
	0, 382, 410, 273, 401, 0, 393, 251, 0, 392,
	331, 379, 384, 317, 311, 250, 381, 315, 310, 303,
	281, 425, 295, 343, 309, 344, 296, 321, 320, 322,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	368, 0, 0, 304, 0, 0, 0, 411, 0, 355,
	337, 0, 0, 0, 353, 307, 380, 345, 386, 370,
	394, 349, 346, 242, 371, 276, 318, 253, 255, 271,
	278, 280, 282, 283, 327, 328, 340, 359, 372, 373,
	374, 275, 263, 354, 264, 293, 265, 243, 268, 267,
	269, 361, 270, 245, 341, 378, 0, 288, 350, 314,
	246, 313, 342, 377, 376, 254, 402, 408, 409, 0,
	0, 414, 0, 0, 0, 422, 427, 428, 429, 431,
	432, 433, 434, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 407, 286, 239, 240, 448, 272,
	333, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 329, 406, 0, 0, 0, 435, 447, 0,
	0, 0, 0, 0, 446, 339, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 388, 400, 417, 420, 0, 0, 0, 0, 244,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 415,
	0, 0, 323, 324, 325, 326, 290, 0, 261, 418,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 285, 292, 430, 294, 260, 338, 287, 397, 301,
	0, 423, 0, 424, 0, 0, 0, 0, 330, 297,
	298, 362, 302, 308, 351, 396, 336, 356, 258, 387,
	363, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 237, 0, 241, 0, 306, 0, 347,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 335, 238, 233, 234, 235, 236, 441,
	0, 0, 403, 404, 405, 426, 389, 0, 445, 0,
	279, 0, 0, 305, 0, 0, 0, 0, 0, 0,
	449, 440, 289, 0, 0, 0, 436, 0, 437, 0,
	0, 0, 0, 0, 364, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 1222, 0,
	0, 0, 256, 188, 438, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 369,
	385, 257, 360, 398, 262, 367, 252, 334, 357, 0,
	0, 249, 383, 366, 316, 299, 300, 248, 0, 352,
	277, 291, 274, 332, 0, 382, 410, 273, 401, 0,
	393, 251, 0, 392, 331, 379, 384, 317, 311, 250,
	381, 315, 310, 303, 281, 425, 295, 343, 309, 344,
	296, 321, 320, 322, 0, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 368, 0, 0, 304, 0, 0,
	0, 411, 0, 355, 337, 0, 0, 0, 353, 307,
	380, 345, 386, 370, 394, 349, 346, 242, 371, 276,
	318, 253, 255, 271, 278, 280, 282, 283, 327, 328,
	340, 359, 372, 373, 374, 275, 263, 354, 264, 293,
	265, 243, 268, 267, 269, 361, 270, 245, 341, 378,
	0, 288, 350, 314, 246, 313, 342, 377, 376, 254,
	402, 408, 409, 0, 0, 414, 0, 0, 0, 422,
	427, 428, 429, 431, 432, 433, 434, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 407, 286,
	239, 240, 448, 272, 333, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 329, 406, 0, 0,
	0, 435, 447, 0, 0, 0, 0, 0, 446, 339,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 388, 400, 417, 420, 0,
	0, 0, 0, 244, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 415, 0, 0, 323, 324, 325, 326,
	290, 0, 261, 418, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 413, 285, 292, 430, 294, 260,
	338, 287, 397, 301, 0, 423, 0, 424, 0, 0,
	0, 0, 330, 297, 298, 362, 302, 308, 351, 396,
	336, 356, 258, 387, 363, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 237, 0, 241,
	0, 306, 0, 347, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 335, 238, 233,
	234, 235, 236, 441, 0, 0, 403, 404, 405, 426,
	389, 0, 445, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 449, 440, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 0, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 2087, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 0, 382,
	410, 273, 401, 0, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 425,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 411, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 0, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 335, 238, 233, 234, 235, 236, 441, 0, 0,
	403, 404, 405, 426, 389, 0, 445, 0, 279, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 449, 440,
	289, 0, 0, 0, 436, 0, 437, 0, 0, 0,
	0, 0, 364, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 438, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 369, 385, 257,
	360, 398, 262, 367, 252, 334, 357, 0, 0, 249,
	383, 366, 316, 299, 300, 248, 0, 352, 277, 291,
	274, 332, 0, 382, 410, 273, 401, 0, 393, 251,
	0, 392, 331, 379, 384, 317, 311, 250, 381, 315,
	310, 303, 281, 425, 295, 343, 309, 344, 296, 321,
	320, 322, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 304, 0, 0, 0, 411,
	0, 355, 337, 0, 0, 0, 353, 307, 380, 345,
	386, 370, 394, 349, 346, 242, 371, 276, 318, 253,
	255, 271, 278, 280, 282, 283, 327, 328, 340, 359,
	372, 373, 374, 275, 263, 354, 264, 293, 265, 243,
	268, 267, 269, 361, 270, 245, 341, 378, 0, 288,
	350, 314, 246, 313, 342, 377, 376, 254, 402, 408,
	409, 0, 0, 414, 0, 0, 0, 422, 427, 428,
	429, 431, 432, 433, 434, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 407, 286, 239, 240,
	448, 272, 333, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 329, 406, 0, 0, 0, 435,
	447, 0, 0, 0, 0, 0, 446, 339, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 388, 400, 417, 420, 0, 0, 0,
	0, 244, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 415, 0, 0, 323, 324, 325, 326, 290, 0,
	261, 418, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 413, 285, 292, 430, 294, 260, 338, 287,
	397, 301, 0, 423, 0, 424, 0, 0, 0, 0,
	330, 297, 298, 362, 302, 308, 351, 396, 336, 356,
	258, 387, 363, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 237, 0, 241, 0, 306,
	0, 347, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 335, 238, 233, 234, 235,
	236, 441, 0, 0, 403, 404, 405, 426, 389, 0,
	445, 0, 279, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 449, 440, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 0, 0, 0, 364, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 438, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 0, 382, 410, 273,
	401, 0, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 425, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 411, 0, 355, 337, 0, 0, 0,
	353, 307, 380, 345, 386, 370, 394, 349, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 272, 333, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 329, 406,
	0, 0, 0, 435, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 415, 0, 0, 323, 324,
	325, 326, 290, 0, 261, 418, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 237,
	0, 241, 0, 306, 0, 347, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 335,
	238, 233, 234, 235, 236, 441, 0, 0, 403, 404,
	405, 426, 389, 0, 445, 0, 279, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 449, 440, 289, 0,
	0, 0, 436, 0, 437, 0, 0, 0, 0, 0,
	364, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 2122, 0, 0, 0, 256, 188,
	438, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 369, 385, 257, 360, 398,
	262, 367, 252, 334, 357, 0, 0, 249, 383, 366,
	316, 299, 300, 248, 0, 352, 277, 291, 274, 332,
	0, 382, 410, 273, 401, 0, 393, 251, 0, 392,
	331, 379, 384, 317, 311, 250, 381, 315, 310, 303,
	281, 425, 295, 343, 309, 344, 296, 321, 320, 322,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	368, 0, 0, 304, 0, 0, 0, 411, 0, 355,
	337, 0, 0, 0, 353, 307, 380, 345, 386, 370,
	394, 349, 346, 242, 371, 276, 318, 253, 255, 271,
	278, 280, 282, 283, 327, 328, 340, 359, 372, 373,
	374, 275, 263, 354, 264, 293, 265, 243, 268, 267,
	269, 361, 270, 245, 341, 378, 0, 288, 350, 314,
	246, 313, 342, 377, 376, 254, 402, 408, 409, 0,
	0, 414, 0, 0, 0, 422, 427, 428, 429, 431,
	432, 433, 434, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 407, 286, 239, 240, 448, 272,
	333, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 329, 406, 0, 0, 0, 435, 447, 0,
	0, 0, 0, 0, 446, 339, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 388, 400, 417, 420, 0, 0, 0, 0, 244,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 415,
	0, 0, 323, 324, 325, 326, 290, 0, 261, 418,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 285, 292, 430, 294, 260, 338, 287, 397, 301,
	0, 423, 0, 424, 0, 0, 0, 0, 330, 297,
	298, 362, 302, 308, 351, 396, 336, 356, 258, 387,
	363, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 237, 0, 241, 0, 306, 0, 347,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 0, 238, 233, 234, 235, 236, 0,
	0, 1958, 403, 404, 405, 426, 389, 335, 445, 0,
	0, 0, 0, 441, 0, 0, 0, 0, 0, 0,
	449, 440, 0, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 0, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 0, 382,
	410, 273, 401, 0, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 425,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 411, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 0, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 335, 238, 233, 234, 235, 236, 441, 0, 1646,
	403, 404, 405, 426, 389, 0, 445, 0, 279, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 449, 440,
	289, 0, 0, 0, 436, 0, 437, 0, 0, 0,
	0, 0, 364, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 438, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 369, 385, 257,
	360, 398, 262, 367, 252, 334, 357, 0, 0, 249,
	383, 366, 316, 299, 300, 248, 0, 352, 277, 291,
	274, 332, 0, 382, 410, 273, 401, 0, 393, 251,
	0, 392, 331, 379, 384, 317, 311, 250, 381, 315,
	310, 303, 281, 425, 295, 343, 309, 344, 296, 321,
	320, 322, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 304, 0, 0, 0, 411,
	0, 355, 337, 0, 0, 0, 353, 307, 380, 345,
	386, 370, 394, 349, 346, 242, 371, 276, 318, 253,
	255, 271, 278, 280, 282, 283, 327, 328, 340, 359,
	372, 373, 374, 275, 263, 354, 264, 293, 265, 243,
	268, 267, 269, 361, 270, 245, 341, 378, 0, 288,
	350, 314, 246, 313, 342, 377, 376, 254, 402, 408,
	409, 0, 0, 414, 0, 0, 0, 422, 427, 428,
	429, 431, 432, 433, 434, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 407, 286, 239, 240,
	448, 272, 333, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 329, 406, 0, 0, 0, 435,
	447, 0, 0, 0, 0, 0, 446, 339, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 388, 400, 417, 420, 0, 0, 0,
	0, 244, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 415, 0, 0, 323, 324, 325, 326, 290, 0,
	261, 418, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 413, 285, 292, 430, 294, 260, 338, 287,
	397, 301, 0, 423, 0, 424, 0, 0, 0, 0,
	330, 297, 298, 362, 302, 308, 351, 396, 336, 356,
	258, 387, 363, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 237, 0, 241, 0, 306,
	0, 347, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 335, 238, 233, 234, 235,
	236, 441, 0, 0, 403, 404, 405, 426, 389, 0,
	445, 0, 279, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 449, 440, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 0, 0, 0, 364, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	1222, 0, 0, 0, 256, 188, 438, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 0, 382, 410, 273,
	401, 0, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 425, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 411, 0, 355, 337, 0, 0, 0,
	353, 307, 380, 345, 386, 370, 394, 1558, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 272, 333, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 329, 406,
	0, 0, 0, 435, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 415, 0, 0, 323, 324,
	325, 326, 290, 0, 261, 418, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 237,
	0, 241, 0, 306, 0, 347, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 335,
	238, 233, 234, 235, 236, 441, 0, 0, 403, 404,
	405, 426, 389, 0, 445, 0, 279, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 449, 440, 289, 0,
	0, 0, 436, 0, 437, 0, 0, 0, 0, 0,
	364, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	438, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 369, 385, 257, 360, 398,
	262, 367, 252, 334, 357, 0, 0, 249, 383, 366,
	316, 299, 300, 248, 0, 352, 277, 291, 274, 332,
	0, 382, 410, 273, 401, 0, 393, 251, 0, 392,
	331, 379, 384, 317, 311, 250, 381, 315, 310, 303,
	281, 425, 295, 343, 309, 344, 296, 321, 320, 322,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 0, 1247, 0, 0, 0,
	368, 0, 0, 304, 0, 0, 0, 411, 0, 355,
	337, 0, 0, 0, 353, 307, 380, 345, 386, 370,
	394, 349, 346, 242, 371, 276, 318, 253, 255, 271,
	278, 280, 282, 283, 327, 328, 340, 359, 372, 373,
	374, 275, 263, 354, 264, 293, 265, 243, 268, 267,
	269, 361, 270, 245, 341, 378, 0, 288, 350, 314,
	246, 313, 342, 377, 376, 254, 402, 408, 409, 0,
	0, 414, 0, 0, 0, 422, 427, 428, 429, 431,
	432, 433, 434, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 407, 286, 239, 240, 448, 272,
	333, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 329, 406, 0, 0, 0, 435, 447, 0,
	0, 0, 0, 0, 446, 339, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 388, 400, 417, 420, 0, 0, 0, 0, 244,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 415,
	0, 0, 323, 324, 325, 326, 290, 0, 261, 418,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 285, 292, 430, 294, 260, 338, 287, 397, 301,
	0, 423, 0, 424, 0, 0, 0, 0, 330, 297,
	298, 362, 302, 308, 351, 396, 336, 356, 258, 387,
	363, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 237, 0, 241, 0, 306, 0, 347,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 335, 238, 233, 234, 235, 236, 441,
	0, 0, 403, 404, 405, 426, 389, 0, 445, 0,
	279, 0, 0, 305, 0, 0, 0, 0, 0, 0,
	449, 440, 289, 0, 0, 0, 436, 0, 437, 0,
	0, 0, 0, 0, 364, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 438, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 369,
	385, 257, 360, 398, 262, 367, 252, 334, 357, 0,
	0, 249, 383, 366, 316, 299, 300, 248, 0, 352,
	277, 291, 274, 332, 0, 382, 410, 273, 401, 0,
	393, 251, 0, 392, 331, 379, 384, 317, 311, 250,
	381, 315, 310, 303, 281, 425, 295, 343, 309, 344,
	296, 321, 320, 322, 0, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 368, 0, 0, 304, 0, 0,
	0, 411, 0, 355, 337, 0, 0, 0, 353, 307,
	380, 345, 386, 370, 394, 349, 346, 242, 371, 276,
	318, 253, 255, 271, 278, 280, 282, 283, 327, 328,
	340, 359, 372, 373, 374, 275, 263, 354, 264, 293,
	265, 243, 268, 267, 269, 361, 270, 245, 341, 378,
	0, 288, 350, 314, 246, 313, 342, 377, 376, 254,
	402, 408, 409, 0, 0, 414, 0, 0, 0, 422,
	427, 428, 429, 431, 432, 433, 434, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 407, 286,
	239, 240, 448, 272, 333, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 329, 406, 0, 0,
	0, 435, 447, 0, 0, 0, 0, 0, 446, 339,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 388, 400, 417, 420, 0,
	0, 0, 0, 244, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 415, 0, 0, 323, 324, 325, 326,
	290, 0, 261, 418, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 413, 285, 292, 430, 294, 260,
	338, 287, 397, 301, 0, 423, 0, 424, 0, 0,
	0, 0, 330, 297, 298, 362, 302, 308, 351, 396,
	336, 356, 258, 387, 363, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 375, 0, 237, 0, 241,
	0, 306, 0, 347, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 335, 238, 233,
	234, 235, 236, 441, 0, 0, 403, 404, 405, 426,
	389, 0, 445, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 449, 440, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 0, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 0, 382,
	410, 273, 401, 0, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 425,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 411, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 487,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 488, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 0, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 335, 238, 233, 234, 235, 236, 441, 0, 0,
	403, 404, 405, 426, 389, 0, 445, 0, 279, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 449, 440,
	289, 0, 0, 0, 436, 0, 437, 0, 0, 0,
	0, 0, 364, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 438, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 369, 385, 257,
	360, 398, 262, 367, 252, 334, 357, 0, 0, 249,
	383, 366, 316, 299, 300, 248, 0, 352, 277, 291,
	274, 332, 0, 382, 410, 273, 401, 0, 393, 251,
	0, 392, 331, 379, 384, 317, 311, 250, 381, 315,
	310, 303, 281, 425, 295, 343, 309, 344, 296, 321,
	320, 322, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 464, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 304, 0, 0, 0, 411,
	0, 355, 337, 0, 0, 0, 353, 307, 380, 345,
	386, 370, 394, 349, 346, 242, 371, 276, 318, 253,
	255, 271, 278, 280, 282, 283, 327, 328, 340, 359,
	372, 373, 374, 275, 263, 354, 264, 293, 265, 243,
	268, 267, 269, 361, 270, 245, 341, 378, 0, 288,
	350, 314, 246, 313, 342, 377, 376, 254, 402, 408,
	409, 0, 0, 414, 0, 0, 0, 422, 427, 428,
	429, 431, 432, 433, 434, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 407, 286, 239, 240,
	448, 272, 333, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 329, 406, 0, 0, 0, 435,
	447, 0, 0, 0, 0, 0, 446, 339, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 388, 400, 417, 420, 0, 0, 0,
	0, 244, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 415, 0, 0, 323, 324, 325, 326, 290, 0,
	261, 418, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 413, 285, 292, 430, 294, 260, 338, 287,
	397, 301, 0, 423, 0, 424, 0, 0, 0, 0,
	330, 297, 298, 362, 302, 308, 351, 396, 336, 356,
	258, 387, 363, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 237, 0, 241, 0, 306,
	0, 347, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 335, 238, 233, 234, 235,
	236, 441, 0, 0, 403, 404, 405, 426, 389, 0,
	445, 454, 279, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 449, 440, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 0, 0, 0, 364, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 438, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 0, 382, 410, 273,
	401, 0, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 425, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 411, 0, 355, 337, 0, 0, 0,
	353, 307, 380, 345, 386, 370, 394, 349, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 272, 333, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 329, 406,
	0, 0, 0, 435, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 415, 0, 0, 323, 324,
	325, 326, 290, 0, 261, 418, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 237,
	0, 241, 0, 306, 0, 347, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 335,
	238, 233, 234, 235, 236, 441, 0, 0, 403, 404,
	405, 426, 389, 0, 445, 0, 279, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 449, 440, 289, 0,
	0, 0, 436, 0, 437, 0, 0, 0, 0, 0,
	364, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	438, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 369, 385, 257, 360, 398,
	262, 367, 252, 334, 357, 0, 0, 249, 383, 366,
	316, 299, 300, 248, 0, 352, 277, 291, 274, 332,
	0, 382, 410, 273, 401, 0, 393, 251, 0, 392,
	331, 379, 384, 317, 311, 250, 381, 315, 310, 303,
	281, 425, 295, 343, 309, 344, 296, 321, 320, 322,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	368, 0, 0, 304, 0, 0, 0, 411, 0, 355,
	337, 0, 0, 0, 353, 307, 380, 345, 386, 370,
	394, 349, 346, 242, 371, 276, 318, 253, 255, 271,
	278, 280, 282, 283, 327, 328, 340, 359, 372, 373,
	374, 275, 263, 354, 264, 293, 265, 243, 268, 267,
	269, 361, 270, 245, 341, 378, 0, 288, 350, 314,
	246, 313, 342, 377, 376, 254, 402, 408, 409, 0,
	0, 414, 0, 0, 0, 422, 427, 428, 429, 431,
	432, 433, 434, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 407, 286, 239, 240, 448, 272,
	333, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 329, 406, 0, 0, 0, 435, 447, 0,
	0, 0, 0, 0, 446, 339, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 388, 400, 417, 420, 0, 0, 0, 0, 244,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 415,
	0, 0, 323, 324, 325, 326, 290, 0, 261, 418,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 285, 292, 430, 294, 260, 338, 287, 397, 301,
	0, 423, 0, 424, 0, 0, 0, 0, 330, 297,
	298, 362, 302, 308, 351, 396, 336, 356, 258, 387,
	363, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 237, 0, 241, 0, 306, 0, 347,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 335, 238, 233, 234, 235, 236, 441,
	0, 0, 403, 404, 405, 426, 389, 0, 445, 0,
	279, 0, 0, 305, 0, 0, 0, 0, 0, 0,
	449, 440, 289, 0, 0, 0, 436, 0, 437, 0,
	0, 0, 0, 0, 364, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 438, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 369,
	1202, 257, 360, 398, 262, 367, 252, 334, 357, 0,
	0, 249, 383, 366, 316, 299, 300, 248, 0, 352,
	277, 291, 274, 332, 0, 382, 410, 273, 401, 0,
	393, 251, 0, 392, 331, 379, 384, 317, 311, 250,
	381, 315, 310, 303, 281, 425, 295, 343, 309, 344,
	296, 321, 320, 322, 0, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 368, 0, 0, 304, 0, 0,
	0, 411, 0, 355, 337, 0, 0, 0, 353, 307,
	380, 345, 386, 370, 394, 349, 346, 242, 371, 276,
	318, 253, 255, 271, 278, 280, 282, 283, 327, 328,
	340, 359, 372, 373, 374, 275, 263, 354, 264, 293,
	265, 243, 268, 267, 269, 361, 270, 245, 341, 378,
	0, 288, 350, 314, 246, 313, 342, 377, 376, 254,
	402, 408, 409, 0, 0, 414, 0, 0, 0, 422,
	427, 428, 429, 431, 432, 433, 434, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 407, 286,
	239, 240, 448, 272, 333, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 329, 406, 0, 0,
	0, 435, 447, 0, 0, 0, 0, 0, 446, 339,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 388, 400, 417, 420, 0,
	0, 0, 0, 244, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 415, 0, 0, 323, 324, 325, 326,
	290, 0, 261, 418, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 413, 285, 292, 430, 294, 260,
	338, 287, 397, 301, 0, 423, 0, 424, 0, 0,
	0, 0, 330, 297, 298, 362, 302, 308, 351, 396,
	336, 356, 258, 387, 363, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 237, 0, 241,
	0, 306, 0, 347, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 335, 238, 233,
	234, 235, 236, 441, 0, 0, 403, 404, 405, 426,
	389, 0, 445, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 449, 440, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 0, 0, 0, 364, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 438, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 369, 1200, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 0, 382,
	410, 273, 401, 0, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 425,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 411, 0, 355, 337, 0,
	0, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 272, 333, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	329, 406, 0, 0, 0, 435, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 415, 0, 0,
	323, 324, 325, 326, 290, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 0, 347, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 335, 238, 233, 234, 235, 236, 441, 0, 0,
	403, 404, 405, 426, 389, 0, 445, 0, 279, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 449, 440,
	289, 0, 0, 0, 436, 0, 437, 0, 0, 0,
	0, 0, 364, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 438, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 369, 385, 257,
	360, 398, 262, 367, 252, 334, 357, 0, 0, 249,
	383, 366, 316, 299, 300, 248, 0, 352, 277, 291,
	274, 332, 0, 382, 410, 273, 401, 0, 393, 251,
	0, 392, 331, 379, 384, 317, 311, 250, 381, 315,
	310, 303, 281, 425, 295, 343, 309, 344, 296, 321,
	320, 322, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 304, 0, 0, 0, 411,
	0, 355, 337, 0, 0, 0, 353, 307, 380, 345,
	386, 370, 394, 349, 346, 242, 371, 276, 318, 253,
	255, 528, 278, 280, 282, 283, 327, 328, 340, 359,
	372, 373, 374, 275, 263, 354, 264, 293, 265, 243,
	268, 267, 269, 361, 270, 245, 341, 378, 0, 288,
	350, 314, 246, 313, 342, 377, 376, 254, 402, 408,
	409, 0, 0, 414, 0, 0, 0, 422, 427, 428,
	429, 431, 432, 433, 434, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 407, 286, 239, 240,
	448, 272, 333, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 329, 406, 0, 0, 0, 435,
	447, 0, 0, 0, 0, 0, 446, 339, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 388, 400, 417, 420, 0, 0, 0,
	0, 244, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 415, 0, 0, 323, 324, 325, 326, 290, 0,
	261, 418, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 413, 285, 292, 430, 294, 260, 338, 287,
	397, 301, 0, 423, 0, 424, 0, 722, 0, 723,
	330, 297, 298, 362, 302, 308, 351, 396, 336, 356,
	258, 387, 363, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	714, 0, 0, 375, 0, 237, 0, 241, 0, 306,
	0, 347, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 403, 404, 405, 426, 389, 0,
	445, 165, 51, 157, 133, 0, 1634, 0, 0, 0,
	0, 1596, 449, 440, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 1605, 0, 0, 0, 0, 0, 0, 0, 114,
	1637, 1638, 0, 0, 719, 0, 712, 0, 0, 0,
	0, 0, 0, 0, 102, 716, 715, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 698, 0, 0, 0, 706, 0, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 0, 0, 0, 0,
	711, 1636, 0, 0, 710, 0, 0, 0, 0, 0,
	697, 0, 0, 0, 704, 0, 119, 120, 0, 121,
	122, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1611, 0, 699, 0, 0, 0, 507, 506,
	513, 503, 0, 0, 0, 0, 0, 0, 720, 0,
	510, 511, 0, 512, 516, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 132, 156, 163, 521, 100, 0,
	0, 0, 0, 0, 703, 0, 1595, 1597, 1594, 0,
	1591, 0, 0, 0, 0, 1615, 155, 149, 148, 0,
	0, 0, 0, 57, 0, 0, 1621, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 0, 0, 527, 0, 0, 1609, 1643, 526, 0,
	1610, 1612, 1614, 0, 1616, 1617, 1618, 1622, 1623, 1624,
	1626, 1629, 1630, 1631, 0, 0, 0, 0, 0, 0,
	0, 1619, 1628, 1620, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 1599, 151, 152, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 1635, 1615, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 1592, 1593, 0, 0,
	110, 0, 0, 1636, 154, 0, 111, 1609, 1643, 0,
	0, 1610, 1612, 1614, 1632, 1616, 1617, 1618, 1622, 1623,
	1624, 1626, 1629, 1630, 1631, 0, 0, 0, 0, 0,
	1634, 1608, 1619, 1628, 1620, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 499, 501, 500, 1611, 0, 0, 0, 0, 0,
	0, 505, 1625, 112, 1636, 0, 1635, 0, 0, 0,
	0, 1613, 0, 509, 0, 50, 0, 0, 0, 0,
	524, 0, 0, 0, 1640, 1639, 0, 502, 0, 0,
	0, 493, 0, 0, 0, 0, 0, 507, 506, 513,
	503, 0, 0, 0, 0, 1632, 0, 0, 0, 510,
	511, 0, 512, 516, 0, 1611, 498, 3042, 0, 0,
	0, 1627, 1608, 0, 52, 0, 521, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 0, 0, 0, 0,
	134, 0, 1613, 0, 0, 0, 0, 0, 0, 525,
	0, 1642, 527, 0, 1641, 0, 0, 526, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 508, 514, 0, 515, 517, 0, 1615, 518,
	519, 520, 0, 0, 522, 523, 0, 0, 0, 1621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 39, 0, 0, 0, 0, 0, 49, 0, 1609,
	1643, 117, 118, 1610, 1612, 1614, 0, 1616, 1617, 1618,
	1622, 1623, 1624, 1626, 1629, 1630, 1631, 0, 0, 0,
	0, 0, 0, 0, 1619, 1628, 1620, 0, 0, 1615,
	507, 506, 513, 503, 0, 0, 0, 0, 0, 0,
	1621, 0, 510, 511, 0, 512, 516, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 521,
	1609, 1643, 0, 0, 1610, 1612, 1614, 0, 1616, 1617,
	1618, 1622, 1623, 1624, 1626, 1629, 1630, 1631, 0, 0,
	499, 501, 500, 0, 0, 1619, 1628, 1620, 0, 0,
	505, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 0, 0, 524,
	0, 0, 0, 0, 1608, 0, 502, 0, 0, 1635,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1625, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 1613, 0, 0, 0, 0,
	504, 508, 514, 0, 515, 517, 0, 0, 518, 519,
	520, 0, 0, 522, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 499, 501, 500, 0, 0, 0, 0,
	0, 0, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 0, 0, 0, 0,
	0, 0, 524, 0, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 508, 514, 0, 515, 517, 0,
	0, 518, 519, 520, 0, 0, 522, 523,
}

var yyPact = [...]int{
	3345, -1000, -1000, -1000, -314, 10240, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34877,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34877,
	-306, 34333, 34333, -1000, -1000, 2223, -1000, 33789, 11381, 34877,
	363, 360, 34877, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	705, -1000, 33245, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	665, 37266, 36509, 7990, -264, -1000, 2928, -74, 2075, 857,
	876, 1066, 1066, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 36912, 745, 32701, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3076, 341, 745, 13571, 11,
	7, 2928, 348, 2903, -1000, 1181, 37079, 160, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7990,
	7990, 10240, -343, 10240, 7990, 34877, 34877, -1000, -1000, -1000,
	-1000, 665, 37266, 7990, 2075, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4140, -1000, 1314, -1000, -1000, -1000, -1000, -1000,
	2566, 1313, 2072, 593, 34877, -1000, 1312, 593, -1000, -1000,
	-1000, 2928, 2928, -1000, 34877, 34877, 72, 1602, -1000, 325,
	321, 347, 1308, -1000, -1000, -1000, -1000, -1000, -1000, 489,
	2914, -1000, 34877, 34877, 2586, 34877, -1000, 1931, 519, 37525,
	2763, 1205, 774, 2599, -1000, -1000, 2565, -1000, 183, 163,
	181, 541, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 220,
	-1000, 2849, -1000, -1000, 166, -1000, -1000, 157, -1000, -1000,
	-1000, 2, -1000, -1000, -1000, -1000, -1000, -1000, -94, -1000,
	-1000, 924, 1923, 7990, -1000, 1634, -1000, 2848, -1000, -1000,
	-1000, -1000, 5183, 9670, 9670, 9670, 9670, -1000, -1000, 2392,
	7990, 2558, 2557, 2556, -1000, -1000, -1000, -1000, -1000, 1307,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1721,
	-1000, -1000, -1000, 9110, -1000, 2545, 2537, 2535, 2528, 2524,
	2523, 2522, 2521, 2517, 2516, 2515, 2513, 2508, 2507, 2260,
	10808, 2505, 2071, 2067, 2500, 2482, 2478, 2062, 2260, 2260,
	2477, 2475, 2474, 2472, 2465, 2463, 2462, 2461, 2460, 2459,
	2458, 2455, 2454, 2453, 2447, 2446, 2445, 2444, 2442, 2441,
	2424, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1162, -1000, 2423, 2745, 2861, 2290,
	2897, 2819, 2812, 2807, 2803, 1886, -1000, -1000, 70, -1000,
	-112, -1000, -1000, 879, -1000, 814, -1000, 34877, 34877, 34877,
	689, 133, 661, 661, 661, 661, 661, 697, 661, 702,
	701, 700, 661, -1000, -117, -1000, -1000, -1000, -1000, -1000,
	-1000, 1588, 1587, 2651, 792, -1000, -1000, -1000, -1000, 1176,
	34877, -1000, 2323, 1420, 1420, 2858, 540, 537, 523, 1420,
	433, -1000, 1551, 1551, 1551, 1551, 1420, 405, 581, 2861,
	2861, 4, 1551, -19, 1420, 1420, -19, 1420, 1420, 1420,
	187, -301, -1000, -1000, -1000, 1551, 1551, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2844, 2843, 665, 665, 34877, 126,
	34877, 665, 665, 665, 673, -43, 35965, 35421, 1931, 514,
	508, 1197, 1540, -1000, 1439, 34877, 34877, 1439, 1439, 17985,
	17441, -1000, 34877, -1000, 2861, 2290, -1000, 2221, 2470, 2219,
	2290, 665, 665, 665, 665, 665, 148, 665, 665, 665,
	665, 34877, 34877, 32157, 665, 665, 6863, 6863, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10240, 1758, 1853,
	158, -65, -309, 209, -1000, -1000, 34877, 2732, 139, -1000,
	-1000, -1000, 2265, -1000, 2321, 2321, 2321, 2321, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2353, 2417, -1000,
	-1000, 2320, 2320, 2320, 2265, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2345, 2345, 2350, 2350, 2345, 34877, 7990, 34877, 2753, 314,
	2411, -1000, 34877, 313, 2861, 2745, 2861, -1000, -1000, 1305,
	1882, 2060, -1000, -1000, 325, 1464, -1000, 881, -1000, -1000,
	-1000, -1000, 34877, -94, 316, -1000, -1000, 2052, 2410, -1000,
	472, 1003, 1252, -1000, 182, 37688, 27791, 1931, 27791, 34877,
	-1000, -1000, -1000, -1000, -1000, -1000, 1, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	243, -1000, 7990, 7990, 7990, 7990, 7990, -1000, 612, 8550,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 9670, 9670, 9670,
	9670, 9670, 9670, 9670, 9670, 9670, 9670, 9670, 9670, 2387,
	1459, 9670, 9670, 9670, 9670, 2470, 2621, 1194, 225, -1000,
	-1000, -1000, -1000, -1000, 1610, 1923, 7990, 7990, 7990, 34877,
	-1000, -1000, 4026, 7990, 7990, 3127, 7990, 2799, 7990, 7990,
	7990, 2218, 3710, 34877, 7990, -1000, 2217, 2208, -1000, -1000,
	1731, 7990, -1000, -1000, 7990, -1000, -1000, 7990, 9670, 7990,
	-1000, -1000, -1000, 2937, 2799, 2799, 1608, 7990, 7990, 2799,
	2799, 2799, 1564, 2799, 2799, 2799, 2799, 2799, 2799, 2799,
	2799, 2206, 2205, 2203, 2861, -264, 6303, -1000, -270, 2745,
	7990, -1000, -1000, 7990, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2058, 2056, -322, -33, 854, 819, 830, -1000,
	2791, -1000, 2404, 2403, 1304, 661, -1000, 661, 661, -151,
	34877, 1630, 27791, 34877, 34877, 1931, 34877, 34877, 661, 661,
	661, 34877, -1000, 2714, 27791, 2669, 673, -1000, 34877, 1176,
	2790, 34877, 2905, 9670, 9670, -1000, 31613, 1551, 1420, 1420,
	-1000, -1000, 34877, -1000, -1000, -1000, 1551, 34877, 1551, 1551,
	2905, 1551, -1000, -1000, -1000, 1420, 1420, -1000, -1000, -1000,
	-1000, 1551, 1551, -1000, -1000, 2905, 34877, -1, 2905, 2905,
	-10, -1000, -1000, -1000, 34877, 34877, 661, 34877, -1000, 34877,
	34877, -1000, -1000, 34877, 34877, 37090, 34877, 31069, 2834, -1000,
	27791, 34877, 34877, 25615, -1000, 1124, -1000, -75, -1000, -36,
	-43, 1439, -43, 1439, -1000, 470, 466, 16339, 409, 27791,
	4623, -1000, -1000, 1439, 1439, 4623, 4623, 1349, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1163, -1000, 199, 2745, -1000,
	-1000, -1000, -1000, -1000, 34877, 34877, 27791, 1931, 34877, 665,
	34877, 34877, 34877, 34877, -1000, 2393, -1000, 2761, 34877, 34877,
	1126, -1000, -1000, 13027, 1303, 1126, -1000, 1636, -1000, 7990,
	10240, -286, 7990, 10240, 10240, 7990, 10240, -1000, 7990, 132,
	-1000, -1000, -1000, -1000, 1881, -1000, 1879, -1000, -1000, -1000,
	2055, 2055, -1000, 1878, -1000, -1000, -1000, -1000, 1876, -1000,
	-1000, 1875, -1000, -1000, -1000, 2202, 924, -1000, 2054, 2598,
	-265, -1000, 15235, 34877, 34877, -1000, -1000, -265, -1000, 14675,
	34877, 2745, -1000, 2745, 34877, -1000, 2856, -1000, 325, 266,
	-1000, -1000, -1000, -1000, -1000, -1000, 1296, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1145, -1000, 34877, -1000,
	-1000, 182, 27791, 28879, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 204, -1000, -1000, 168, -1000, 687, 102, 1453, -1000,
	-1000, 137, 172, 75, 729, 1923, -1000, 1668, 1668, 1660,
	-1000, 569, -1000, -1000, -1000, -1000, 2392, -1000, -1000, -1000,
	1490, 2239, -1000, 1554, 1554, 1306, 1306, 1306, 1306, 1306,
	1595, 1595, -1000, -1000, -1000, 5183, 2387, 9670, 9670, 9670,
	9670, 631, 631, 3418, 3465, -1000, 7990, 1627, -1000, 7990,
	2361, 2301, 1091, 1295, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2197, 2196, 1821, 2911, 2194, 7990,
	-1000, -1000, 1429, 1428, 1415, -1000, 2087, 7430, -1000, -1000,
	-1000, 2186, 1294, 2185, -1000, -1000, -1000, 2182, 1402, 1051,
	2180, 1532, 2174, 1132, 7990, 7990, 7990, 2173, 1401, 1398,
	7990, 7990, 7990, 7990, 2163, 7990, 7990, 7990, 7990, 7990,
	7990, 7990, 7990, 31, 31, 31, -1000, -1000, 1391, -1000,
	1923, -1000, 2046, -1000, 1432, 1131, -1000, 1919, -1000, -1000,
	-1000, 2025, -1000, -1000, 846, 812, 855, 34877, 953, 11925,
	34877, 34877, 34877, 34877, 661, 127, -1000, 2759, 1072, -1000,
	102, -108, 359, 945, 2585, 2910, 34877, 34877, 34877, 2782,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30525, -1000,
	2386, 1382, -1000, -1000, 7990, -1000, -1000, 2583, 34877, 34877,
	2905, 2905, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34877,
	2905, 2905, 1420, 1551, -1000, -1000, 1551, -1000, -1000, 1551,
	-1000, 1284, -1000, 34877, -1000, -1000, -1000, 2779, 2323, 1130,
	-1000, 1234, 643, 643, 852, 617, 2890, 14115, -1000, 1455,
	875, 685, 2706, 174, -1000, 1455, -210, 1455, 1455, 1455,
	1455, 1455, 1455, 1455, 484, 482, 1455, 1455, 1455, 1455,
	1455, 1455, 1455, 1455, 1455, 1455, 1455, 866, 1455, 1455,
	1455, 1455, 1455, -1000, 1455, 2372, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 507, 122, 2824, 221, 210, 1072, 2823,
	242, 2719, 1139, -1000, -1000, -1000, -1000, 20175, 20175, 15795,
	20175, -1000, 1467, -43, -57, -1000, -1000, 1124, 4623, 1124,
	4623, -1000, -1000, 682, -1000, -1000, 945, -1000, 34877, 34877,
	-1000, -1000, 2356, 1586, -1000, -1000, 10808, -1000, 4623, 4623,
	-1000, -1000, 20719, 34877, -1000, -102, -1000, -90, 2855, 1098,
	-1000, -1000, 1120, 945, 2597, 34877, 1098, 1098, -1000, -1000,
	11925, 34877, -1000, -1000, 2905, 6863, -1000, 25615, -1000, -1000,
	29967, -1000, 29423, 2905, 1535, -1000, 10240, 1769, 151, -1000,
	203, -311, 155, 1691, 154, 1923, -1000, -1000, 2157, 2151,
	1380, -1000, 1377, 2150, 1362, 1361, -1000, -35, -1000, 2734,
	951, -1000, 2355, -1000, 1337, 2646, -1000, 1071, -1000, 1582,
	1336, -1000, 951, 1328, 2644, 1071, 2855, -1000, 1264, 71,
	-1000, -1000, 34877, 2052, 1323, 28879, 973, -1000, 680, 1260,
	1250, -1000, 27791, 159, 27791, -1000, 27791, -1000, -1000, 334,
	-1000, 34877, 2743, -1000, -1000, -1000, 2025, 1566, -331, -1000,
	-1000, -1000, -1000, -1000, 1299, -1000, 631, 631, 3418, 2434,
	-1000, 9670, -1000, 9670, 2608, 1493, -1000, 7990, 1748, 429,
	429, 1435, 19073, 34877, -1000, -1000, 7990, 7990, -1000, 2563,
	-1000, -1000, -1000, -1000, 7990, 7990, 1773, -1000, 34877, -1000,
	-1000, -1000, -1000, 19073, -1000, 9670, -1000, 7990, 1123, 2550,
	1282, 31, 31, 31, 2533, 2525, 2519, 1280, 31, 2511,
	2502, 2456, 2421, 2400, 2378, 2346, 2244, -1000, 2354, -1000,
	-1000, 6303, -1000, -35, 7990, 7990, 7990, 2685, -1000, -1000,
	110, -1000, 1544, -1000, -1000, -1000, 797, 150, 2149, 1068,
	-1000, -1000, 34877, -1000, -1000, -1000, 2142, 1050, -1000, -1000,
	-1000, 4252, 2321, 2321, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2353, -1000, -1000, 2320, 2320, 2320, 2265,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2345,
	2345, 2350, 2350, 2345, -1000, 2323, 2323, 272, 34877, 39,
	1455, -1000, 490, 27791, 499, -1000, 34877, 1890, 1543, 2592,
	263, 2721, 34877, 2342, 2340, 2337, 339, 4252, 34877, 1080,
	-1000, 1245, 37079, -1000, 34877, 1923, -1000, 1931, -1000, 1420,
	-1000, -1000, 2905, 1241, -1000, -1000, 2905, 1420, 1420, 1551,
	34877, -1000, 339, 4252, 2777, 37090, -1000, 34877, -1000, -1000,
	-1000, 667, -1000, 823, 661, 34877, 1690, 823, 1684, 2336,
	-1000, -1000, 34877, 34877, 34877, 34877, -1000, -1000, 34877, -1000,
	34877, 34877, 34877, 34877, -1000, 34877, 34877, -1000, 34877, 1683,
	1679, 2774, -1000, 1455, 1455, 765, -1000, -1000, 459, -1000,
	1872, 1871, 1854, 1850, 2045, 2043, 2040, 1455, 1455, 1847,
	2039, 28335, 2038, 932, 1844, 1841, 1840, 1914, 2037, 1143,
	-1000, 2035, 1912, 1902, 1893, 34877, 2324, 1989, -1000, -1000,
	39, 1455, 206, 34877, 1534, 490, 335, 1899, 16897, 34877,
	25615, 25615, 25615, 25615, -1000, 2622, 2620, -1000, 2614, 2613,
	2629, 34877, 25615, 2323, -1000, 28335, -1000, -1000, -1000, 2470,
	1279, 2670, 838, 7990, -1000, -1000, -81, -71, -1000, -1000,
	-1000, 27791, 2032, 409, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2929, 34877, 34877, 626, 2135, -1000, 2901, -1000,
	1035, -1000, -1000, 1244, -1000, 2901, 1616, -315, 10240, 1599,
	1461, -1000, 7990, 10240, 7990, -287, 191, -290, -1000, -1000,
	-1000, 2031, -1000, -1000, -1000, 1828, -1000, 1827, 49, 62,
	1675, -265, 6303, 344, 34877, -265, 34877, 6303, -1000, 34877,
	330, -265, -1000, 34877, 1795, -1000, -1000, -1000, 2904, 27791,
	1931, 1367, 27247, -1000, 165, -1000, 198, 428, 2029, -1000,
	698, 109, 2026, 2025, -1000, -1000, -1000, 9670, -1000, -1000,
	-1000, -1000, 1923, 7990, 2134, -1000, 784, 784, 2133, 2127,
	-1000, 2321, 2321, -1000, 2265, 2320, 2265, 784, 784, 2124,
	-1000, 1891, 2207, -1000, 2184, 2164, 7990, -1000, 2122, 3252,
	1331, -120, 31, 31, -1000, -1000, -1000, -1000, 31, 31,
	31, 31, -1000, 31, 31, 31, 31, 31, 31, 31,
	31, 622, -1000, 49, 1923, 1923, -1000, -1000, 2725, -1000,
	2025, 2023, -1000, 2021, 2020, 953, 4252, 710, 11925, 2724,
	2775, 2772, 12469, 2768, 2318, 2317, 1906, -1000, -1000, -1000,
	26703, 422, -1000, -1000, -1000, 542, 318, 1768, 410, -1000,
	34877, 242, 2675, 1533, 2017, 34877, -1000, -1000, -1000, -1000,
	-1000, 2721, -1000, 766, 268, 12469, 12469, 12469, 285, 1567,
	-1000, 593, 998, 1221, 25615, 34877, -1000, 25071, 2121, -1000,
	945, 2905, -1000, 34877, -1000, 2905, 2905, 1420, -1000, 285,
	-1000, 311, -1000, 2713, 4252, -1000, 34877, -1000, 34877, -1000,
	34877, 34877, 661, 7990, 2713, 34877, 668, -1000, -1000, 914,
	326, 627, 627, 1011, -1000, 2742, -1000, -1000, -1000, 34877,
	-1000, -1000, -1000, -1000, -1000, -1000, 19073, 19073, 2818, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2012, 2006, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 34877, 1253, -1000, 1525, 1906, 26703, 1523, 1439,
	2004, 422, 1890, 1521, -1000, 2003, -1000, 965, 34877, 34877,
	-1000, 1099, -1000, 1520, 2576, 2591, 2576, -1000, -1000, -1000,
	-1000, 2616, -1000, 2612, -1000, -1000, 1099, -1000, -1000, -1000,
	-1000, -1000, 838, -1000, 2853, 823, 823, 823, 2118, -1000,
	-1000, -1000, 973, 2117, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2899, 2889, 26159, 2899, -1000, -315, 1469,
	-1000, 1725, 141, 1658, 34877, -1000, -1000, -1000, 2110, 2109,
	-272, 63, 2888, 2886, 2926, -1000, 2104, 970, -265, -1000,
	-1000, 951, -1000, -1000, -1000, -265, -1000, 951, -1000, -1000,
	1931, -1000, 197, -1000, -1000, -1000, -1000, -1000, -1000, 88,
	-1000, 34877, -1000, 969, 108, -1000, 1923, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 7990, -1000, -1000, -1000, 2139, -1000, -1000,
	7990, 2100, 2002, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2933, -1000, 2884,
	-272, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4252,
	-1000, 1550, 311, 311, 2099, 966, -1000, -1000, -1000, -1000,
	311, 23983, 12469, -1000, 1994, 101, -1000, -1000, -1000, 1993,
	1992, 1766, -1000, -1000, 1887, 1214, 112, -1000, -1000, -1000,
	-1000, -1000, -1000, 1899, 1896, 1519, -339, -1000, 2307, -1000,
	1455, 1455, 1455, 34877, 2093, 2092, 2090, 570, 1468, 1466,
	-1000, 1764, 20175, 25615, 25071, 1093, -1000, 1217, -1000, -1000,
	-1000, 2905, -1000, -1000, 2905, 570, -1000, -1000, -1000, 34877,
	270, 2286, -1000, 2285, 2578, 383, 2284, 2281, 34877, 2102,
	-1000, 2713, 34877, 548, 2716, -1000, -1000, -1000, -1000, -1000,
	430, -1000, 34877, -1000, -1000, 1338, -1000, 19073, -1000, -1000,
	1213, -1000, 1989, 1988, -1000, 101, 1979, 4623, -1000, -1000,
	2675, 1978, -1000, 34877, 965, 965, 2933, 34877, 6303, -1000,
	-1000, 7990, 2280, -1000, 7990, -1000, -1000, -1000, -1000, -1000,
	2278, 2683, -1000, -1000, -1000, -1000, -1000, -1000, 7990, 7990,
	-1000, -1000, 652, 10240, -291, 188, -1000, -1000, -1000, -275,
	1974, -1000, -1000, 2883, 1973, 1933, 34877, -1000, 951, 951,
	945, -1000, -1000, -10, 486, -1000, 2079, -1000, 2069, 31,
	-1000, 138, 7990, -275, -158, -1000, -1000, -164, -164, -171,
	12469, -1000, 1193, -1000, 1455, 1455, 2086, -1000, -1000, 329,
	-1000, -1000, 230, -1000, -1000, 1830, 468, -1000, -1000, -1000,
	1972, 1701, 1950, 23439, 19073, 19617, 1970, -1000, 37464, 243,
	37464, 895, 1418, -1000, 1757, -1000, 1755, -1000, 2905, 1093,
	1217, -1000, -1000, 1366, -1000, -1000, 895, -1000, -1000, 270,
	-1000, -1000, 1704, 9670, -1000, -1000, 1968, 19617, 786, 1482,
	1480, 768, 2275, -1000, 443, 2918, -1000, -1000, -1000, 761,
	2270, -1000, 1667, 1640, -1000, 34877, -1000, 23439, 23439, 358,
	358, 23439, 23439, 2268, 627, -1000, -1000, 9670, -1000, -1000,
	-1000, -1000, 1455, 1319, -1000, -1000, -1000, -1000, -1000, -1000,
	1896, -1000, -1000, 2861, -1000, -1000, 1923, 34877, 1923, 24527,
	-1000, 2882, 2881, 1923, 924, -1000, -315, 34877, 34877, -277,
	1754, -1000, 1967, 56, -1000, -1000, 938, -280, 48, 47,
	1477, -1000, -1000, -1000, 2085, -1000, 864, -1000, -1000, -1000,
	924, -277, 34877, -1000, 320, -1000, -1000, -1000, -1000, 23983,
	1550, 1550, -171, 427, 1965, -1000, -1000, 212, -1000, -1000,
	-1000, -1000, -1000, 103, -1000, 1475, 1188, -1000, 2265, 7990,
	-1000, -1000, -1000, -1000, -1000, 564, 37403, -1000, 875, -1000,
	-10, 564, 471, 249, -1000, 1751, -1000, -1000, 2933, -1000,
	469, -1000, -1000, 3418, -1000, -1000, -1000, -1000, -1000, -1000,
	1964, 1958, -1000, -1000, -1000, -1000, -1000, 1750, 2264, -96,
	2810, 1957, -1000, -1000, 2263, 1184, 1180, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1178, 1173, 23439, -1000, -1000, 3418,
	19073, 1455, -1000, -1000, 1169, 1166, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2262, -1000, -1000, 2872, -1000, 1956, 672,
	51, 47, -1000, 2871, 50, 2870, 2869, 1951, -1000, -1000,
	696, -266, 29, 26, 16, -1000, -1000, -1000, 7990, -1000,
	2766, -1000, 439, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	86, -1000, -1000, -1000, 1950, 1948, -1000, 23439, 2742, 1939,
	385, 2868, 37464, -1000, 1455, -1000, 385, -1000, 332, -1000,
	1417, -1000, 1736, -1000, 2861, -1000, 292, -1000, -1000, -1000,
	2081, 7990, 2260, 1455, 2057, -154, 23439, 2577, 2573, 2571,
	2569, 1136, -1000, 19073, -1000, -1000, 22895, 34877, 1933, -1000,
	2259, 1734, 63, 40, 2867, -1000, 1933, 2866, 1933, 1933,
	-1000, 1642, -1000, 24, 22, 19, -1000, -1000, -1000, -1000,
	1938, 164, -1000, -1000, -1000, 241, -1000, -1000, 2742, -1000,
	2864, 432, -1000, 19073, -1000, -1000, -1000, 1733, -1000, -1000,
	-1000, -1000, 1884, -1000, 34877, -1000, 2588, -1000, 175, 1135,
	241, 358, 241, 358, 241, 358, 241, 358, 161, -1000,
	-1000, -1000, 1115, -1000, -1000, 2806, 18529, 37, -1000, -1000,
	-1000, 1935, -1000, 1933, -1000, -1000, 696, -1000, -1000, -1000,
	-1000, -1000, -1000, 1455, 1920, 260, -1000, -1000, -1000, 22351,
	415, 317, 312, -1000, 477, -1000, -1000, -1000, 627, -1000,
	-1000, 2473, 2242, 2909, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 34877, -1000, 34877, -1000, 1092, -1000,
	-1000, -1000, 1067, -1000, -1000, -1000, -1000, -1000, 1730, -1000,
	34877, -1000, 34877, 404, 1729, 9670, 2249, 9670, 2247, 426,
	2241, -1000, -1000, 2915, -1000, 2916, 785, 785, 241, 241,
	241, 241, -1000, 902, -1000, 1454, -1000, 21807, 34877, -1000,
	-1000, 1084, 2240, 2863, -1000, 3228, 34877, 2913, 34877, 2232,
	1390, 9670, -1000, -1000, -1000, 1771, 456, -1000, 34877, 5743,
	-1000, 933, -1000, -1000, 560, 424, -1000, 1077, -1000, 1073,
	21263, 1724, 2879, -1000, -1000, -1000, -1000, -1000, 1923, 34877,
	1069, -1000, 34877, 390, -1000, -1000, -1000, 1062, -1000, -1000,
	-1000, -1000, 560, 2635, -1000, 1719, -1000, -1000, 37181, 707,
	-1000, -1000, 37181, 403, -1000, 545, 2228, -1000, -1000, 1053,
	-1000, 34877, 793, 7990, -1000, 403, 37464, -1000, 7990, 1025,
	-1000, 37464, 1006, -1000, -1000,
}

var yyPgo = [...]int{
	0, 160, 2951, 231, 157, 3518, 85, 238, 213, 211,
	237, 3516, 3515, 3514, 2747, 2745, 3513, 3512, 3511, 3510,
	3509, 3508, 3507, 3504, 3501, 3500, 3497, 3496, 3495, 3494,
	3493, 3492, 3491, 3490, 3489, 3488, 3486, 3485, 3484, 3478,
	3477, 233, 3476, 3474, 3473, 3472, 3471, 3470, 3468, 3467,
	3466, 3465, 3464, 3463, 3461, 3460, 3459, 3458, 3457, 3456,
	3455, 3454, 3453, 3452, 3451, 3449, 3448, 3437, 3436, 3435,
	3434, 3433, 3432, 206, 3431, 2721, 3430, 3429, 3428, 3425,
	3424, 3423, 3422, 234, 3421, 3419, 3417, 3415, 3414, 3413,
	3412, 3411, 3410, 3409, 3408, 232, 3407, 3406, 3404, 3403,
	3402, 3401, 225, 3385, 154, 183, 3384, 3383, 3380, 3379,
	3378, 3377, 226, 280, 67, 3376, 44, 3362, 212, 3355,
	131, 3353, 129, 3352, 3351, 3348, 3347, 3346, 3345, 3344,
	3343, 3342, 3341, 3340, 3338, 3337, 3335, 3333, 3329, 88,
	3327, 252, 3326, 69, 3325, 3322, 115, 246, 178, 243,
	2424, 249, 240, 185, 152, 91, 3321, 2710, 3317, 170,
	222, 143, 23, 3316, 164, 3315, 133, 73, 31, 247,
	122, 56, 141, 112, 3313, 219, 98, 97, 3311, 3308,
	174, 241, 176, 3307, 111, 3303, 3302, 3299, 3295, 201,
	190, 3294, 3288, 118, 3287, 3286, 95, 3284, 66, 192,
	148, 180, 3282, 87, 109, 116, 106, 165, 3281, 137,
	3277, 3276, 3274, 3272, 163, 3266, 3263, 125, 61, 3261,
	3259, 3258, 64, 3257, 47, 3255, 32, 3251, 57, 3248,
	3246, 3245, 3244, 3241, 3240, 3237, 3236, 3234, 3233, 3232,
	71, 3231, 3229, 15, 16, 18, 3228, 26, 3227, 149,
	3223, 3222, 3221, 81, 79, 3219, 80, 1, 48, 3212,
	216, 245, 93, 128, 3210, 405, 3209, 3208, 3206, 147,
	3205, 322, 3204, 3203, 3202, 3201, 3198, 83, 3197, 210,
	49, 3194, 117, 123, 3193, 36, 43, 191, 195, 3190,
	3189, 3188, 286, 202, 89, 29, 0, 3187, 134, 3186,
	3185, 3184, 239, 3183, 220, 200, 150, 215, 261, 151,
	3182, 3180, 70, 3178, 142, 45, 55, 124, 8, 20,
	316, 3176, 13, 172, 3174, 204, 3173, 171, 42, 130,
	3172, 3169, 27, 254, 3168, 3166, 3164, 114, 3161, 3157,
	188, 72, 3155, 3154, 3153, 3152, 34, 3151, 35, 25,
	3149, 99, 3148, 244, 3145, 208, 121, 168, 161, 138,
	218, 221, 74, 68, 3144, 1566, 132, 92, 17, 3142,
	214, 3141, 255, 110, 3140, 75, 3134, 228, 366, 205,
	3133, 169, 7, 41, 33, 3131, 9, 3130, 209, 196,
	3128, 3127, 22, 51, 3126, 19, 3123, 3122, 3120, 3119,
	5, 3118, 3117, 3116, 2, 4, 3115, 3, 203, 153,
	107, 84, 62, 3109, 3107, 46, 136, 3105, 166, 167,
	173, 3099, 90, 3098, 3097, 3092, 1681, 3091, 248, 3089,
	3088, 3087, 3085, 3084, 3083, 3082, 3081, 3079, 96, 38,
	3076, 3072, 3070, 3069, 76, 127, 3068, 3066, 3065, 3064,
	37, 162, 3063, 21, 3061, 30, 28, 39, 3047, 119,
	3046, 12, 175, 3045, 3043, 14, 3037, 3036, 10, 11,
	3033, 3030, 120, 3029, 86, 24, 146, 102, 3028, 3027,
	82, 217, 126, 3026, 3009, 230, 227, 197, 3008, 268,
	224, 251, 3007, 207, 3006, 3005, 3004, 3003, 3002, 3001,
	1082, 3000, 2999, 229, 65, 100, 105, 2997, 2976, 2974,
	78, 144, 108, 104, 54, 77, 2971, 101, 189, 2970,
	179, 2969, 2968, 94, 2966, 2964, 2963, 2959, 2958, 177,
	2957, 2956, 181, 223, 2955, 2954, 2953, 2945, 242, 283,
	2925,
}

//line mysql_sql.y:10380
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 528, 536, 536, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 110, 110, 109, 526, 526, 526, 527,
	527, 106, 127, 126, 129, 129, 128, 128, 125, 125,
	121, 124, 124, 123, 123, 122, 117, 119, 119, 118,
	120, 120, 107, 95, 108, 471, 471, 470, 470, 469,
	469, 423, 423, 468, 468, 468, 467, 467, 467, 466,
	466, 465, 465, 464, 464, 462, 462, 463, 461, 460,
	460, 460, 458, 458, 458, 454, 454, 456, 455, 455,
	457, 449, 449, 452, 452, 450, 450, 450, 450, 453,
	448, 448, 448, 447, 447, 94, 94, 94, 367, 367,
	93, 93, 381, 381, 381, 381, 381, 379, 379, 379,
	379, 379, 379, 378, 378, 377, 377, 382, 382, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 84,
	84, 84, 84, 84, 89, 89, 89, 533, 533, 532,
	532, 534, 534, 534, 534, 535, 535, 87, 87, 87,
	88, 376, 376, 376, 85, 86, 86, 366, 366, 371,
	371, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 375, 375, 375, 373, 373, 372,
	372, 374, 374, 78, 78, 78, 81, 80, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 79, 79, 79,
	79, 79, 79, 74, 74, 74, 74, 74, 73, 73,
	75, 75, 363, 363, 362, 90, 90, 91, 530, 530,
	529, 531, 531, 531, 531, 92, 98, 98, 98, 98,
	98, 98, 98, 97, 97, 100, 100, 99, 101, 83,
	83, 83, 83, 83, 83, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 496, 496, 496, 498, 498, 300,
	301, 537, 303, 299, 299, 299, 492, 492, 493, 494,
	495, 495, 495, 96, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 72, 77, 248, 248, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 236,
	236, 236, 231, 231, 231, 231, 232, 232, 233, 233,
	234, 234, 234, 234, 235, 235, 293, 293, 253, 253,
	253, 255, 255, 254, 252, 250, 250, 250, 250, 250,
	250, 251, 251, 251, 256, 256, 70, 76, 76, 76,
	509, 509, 71, 520, 520, 426, 426, 314, 314, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 431, 432, 310, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 48, 51, 47,
	47, 47, 352, 352, 46, 538, 538, 288, 288, 59,
	58, 50, 60, 61, 62, 63, 64, 65, 45, 57,
	57, 57, 57, 57, 57, 57, 57, 68, 68, 443,
	443, 540, 540, 540, 66, 67, 425, 425, 425, 56,
	55, 54, 53, 52, 52, 44, 44, 43, 43, 49,
	133, 134, 307, 307, 307, 309, 309, 305, 539, 539,
	395, 395, 308, 308, 42, 42, 42, 42, 69, 306,
	306, 287, 304, 304, 304, 12, 12, 10, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 24, 25, 27, 360, 360, 357, 26, 19, 18,
	18, 21, 17, 17, 20, 22, 23, 23, 9, 9,
	9, 9, 14, 14, 15, 154, 154, 204, 204, 504,
	504, 500, 500, 501, 501, 501, 502, 502, 503, 503,
	102, 437, 437, 437, 437, 437, 437, 8, 176, 176,
	436, 436, 436, 436, 436, 436, 364, 364, 481, 481,
	481, 482, 175, 175, 170, 170, 438, 438, 329, 483,
	483, 446, 446, 445, 445, 444, 444, 173, 173, 174,
	174, 157, 157, 113, 113, 451, 451, 451, 451, 459,
	459, 422, 422, 240, 240, 280, 280, 281, 281, 147,
	147, 148, 148, 148, 148, 148, 148, 489, 489, 491,
	491, 490, 172, 172, 168, 168, 169, 169, 169, 167,
	167, 166, 165, 165, 164, 162, 162, 162, 163, 163,
	163, 180, 180, 150, 150, 150, 149, 149, 149, 149,
	149, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 151, 151, 497, 497, 497, 427, 427,
	427, 434, 434, 262, 262, 263, 263, 261, 261, 152,
	152, 153, 153, 153, 153, 260, 260, 259, 155, 155,
	161, 160, 160, 156, 156, 156, 156, 270, 270, 269,
	269, 269, 269, 105, 111, 111, 112, 179, 179, 268,
	267, 267, 267, 178, 178, 177, 177, 171, 171, 159,
	159, 159, 159, 266, 158, 264, 525, 525, 524, 524,
	523, 521, 521, 521, 522, 522, 522, 522, 473, 473,
	473, 473, 473, 294, 294, 294, 298, 298, 297, 297,
	297, 297, 297, 302, 7, 7, 7, 7, 7, 7,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 37,
	188, 189, 38, 190, 190, 191, 191, 192, 192, 193,
	194, 195, 195, 195, 195, 36, 181, 181, 182, 182,
	183, 183, 184, 185, 185, 185, 187, 186, 35, 35,
	28, 140, 140, 141, 141, 141, 143, 143, 237, 237,
	237, 142, 142, 144, 144, 144, 505, 508, 506, 506,
	510, 510, 510, 511, 511, 511, 511, 512, 512, 29,
	130, 135, 515, 515, 515, 514, 514, 516, 516, 517,
	517, 284, 284, 285, 285, 138, 139, 139, 137, 132,
	146, 146, 146, 146, 146, 131, 136, 507, 513, 513,
	513, 361, 361, 358, 359, 359, 356, 355, 355, 355,
	519, 519, 518, 518, 518, 295, 295, 30, 351, 351,
	353, 354, 354, 354, 345, 345, 345, 345, 34, 349,
	349, 350, 350, 350, 350, 350, 346, 346, 348, 348,
	344, 344, 344, 344, 344, 33, 145, 145, 343, 343,
	340, 340, 338, 338, 339, 339, 337, 337, 337, 341,
	341, 40, 40, 40, 342, 342, 32, 32, 32, 115,
	114, 114, 114, 114, 283, 283, 282, 282, 116, 39,
	216, 216, 414, 414, 409, 409, 409, 409, 409, 429,
	429, 429, 410, 410, 410, 411, 411, 411, 413, 413,
	413, 412, 412, 412, 412, 412, 428, 428, 430, 430,
	430, 383, 383, 384, 384, 384, 387, 387, 401, 401,
	402, 402, 400, 400, 407, 407, 406, 406, 405, 405,
	404, 404, 403, 403, 403, 403, 398, 398, 397, 397,
	385, 385, 385, 385, 385, 386, 386, 386, 396, 396,
	399, 399, 224, 224, 225, 225, 258, 258, 222, 222,
	223, 223, 223, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 479, 479,
	480, 227, 227, 238, 238, 238, 238, 238, 238, 226,
	226, 228, 228, 205, 205, 203, 203, 196, 196, 197,
	197, 198, 198, 198, 202, 202, 201, 201, 201, 201,
	199, 199, 200, 200, 200, 200, 200, 200, 369, 369,
	476, 476, 477, 477, 472, 472, 472, 475, 475, 475,
	475, 475, 478, 478, 478, 474, 474, 206, 278, 278,
	278, 296, 296, 296, 296, 277, 277, 277, 221, 221,
	220, 220, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 368, 368, 311, 311, 312, 312,
	247, 246, 246, 246, 246, 246, 244, 245, 243, 243,
	243, 243, 243, 242, 242, 241, 241, 241, 347, 347,
	239, 239, 230, 230, 230, 229, 229, 229, 408, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 276, 276, 276, 321, 321, 326,
	326, 488, 488, 487, 207, 207, 207, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 217, 217, 217, 392,
	392, 392, 392, 393, 393, 393, 393, 394, 394, 394,
	390, 390, 391, 391, 330, 331, 331, 435, 435, 388,
	388, 389, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 442, 442, 442, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	499, 499, 499, 484, 484, 484, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 486, 486, 486,
	486, 486, 486, 486, 486, 274, 274, 274, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 332, 332, 333, 333, 439, 439, 439,
	439, 439, 439, 440, 440, 441, 441, 441, 441, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 319, 271,
	271, 271, 334, 327, 327, 328, 328, 322, 322, 322,
	322, 322, 322, 322, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 323, 323, 325, 325,
	336, 336, 336, 335, 335, 335, 335, 335, 335, 335,
	219, 219, 219, 219, 316, 316, 316, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 209,
	209, 209, 209, 213, 213, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 214,
	214, 214, 214, 214, 212, 212, 212, 212, 212, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 103, 104, 104, 211, 279,
	279, 415, 415, 418, 418, 416, 416, 417, 419, 419,
	419, 420, 420, 420, 421, 421, 421, 424, 424, 286,
	286, 286, 292, 292, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 2,
	5, 5, 0, 2, 7, 0, 1, 0, 1, 5,
	5, 3, 3, 2, 4, 4, 4, 4, 4, 1,
	1, 1, 3, 3, 1, 1, 1, 6, 8, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 4, 1, 3, 1, 4, 6, 6,
	4, 4, 4, 4, 3, 6, 3, 5, 1, 1,
	2, 2, 11, 8, 9, 1, 3, 2, 4, 0,
	2, 0, 1, 1, 1, 1, 0, 1, 0, 1,
	4, 2, 1, 5, 4, 4, 2, 5, 1, 3,
	2, 1, 5, 4, 4, 2, 0, 5, 0, 1,
	3, 3, 1, 3, 1, 3, 1, 3, 4, 0,
	1, 0, 1, 1, 3, 1, 1, 0, 4, 1,
	3, 2, 1, 0, 8, 0, 4, 7, 4, 0,
	2, 0, 2, 0, 2, 0, 4, 1, 3, 1,
	1, 5, 3, 4, 6, 4, 5, 2, 3, 1,
	3, 6, 0, 3, 0, 1, 2, 4, 4, 0,
	1, 3, 1, 3, 3, 0, 1, 1, 0, 2,
	2, 0, 2, 3, 3, 3, 1, 3, 3, 3,
	3, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 7, 7, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 2, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 4, 4, 3, 2, 2, 2,
	3, 2, 3, 4, 1, 3, 4, 0, 2, 1,
	1, 2, 2, 0, 1, 2, 4, 1, 3, 1,
	3, 2, 3, 1, 4, 3, 0, 1, 1, 2,
	5, 2, 2, 2, 0, 2, 3, 3, 0, 1,
	3, 1, 3, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 1, 7, 1, 3, 0, 1, 1, 3, 1,
	3, 0, 1, 1, 1, 12, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 9, 9,
	7, 1, 2, 3, 3, 3, 0, 4, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 4, 1, 1,
	3, 4, 3, 0, 1, 1, 1, 0, 2, 7,
	8, 8, 0, 3, 3, 0, 2, 0, 3, 0,
	5, 1, 3, 0, 3, 3, 0, 2, 9, 6,
	0, 2, 2, 3, 3, 4, 4, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 9, 10, 8, 0, 2, 11, 9, 11, 2,
	2, 8, 4, 5, 1, 3, 0, 3, 5, 10,
	0, 2, 0, 2, 0, 3, 2, 4, 3, 0,
	2, 1, 0, 2, 3, 0, 2, 3, 0, 2,
	1, 0, 3, 2, 4, 3, 0, 1, 0, 1,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 0, 4, 1, 3, 3, 3, 0, 1,
	1, 3, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 4, 1, 3,
	3, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 1, 1, 1, 7, 9, 7, 9,
	2, 1, 7, 9, 7, 9, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 3, 1, 3,
	5, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
	3, 3, 2, 2, 1, 5, 6, 4, 1, 1,
	1, 5, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 6, 6, 6, 1,
	1, 1, 1, 1, 4, 4, 4, 0, 2, 0,
	1, 1, 2, 4, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 5, 0, 1, 3, 0, 1, 0, 2, 0,
	1, 6, 8, 6, 6, 5, 5, 5, 6, 6,
	6, 6, 5, 6, 6, 6, 6, 6, 6, 6,
	6, 1, 1, 1, 4, 4, 6, 8, 6, 4,
	5, 4, 4, 4, 3, 4, 6, 6, 7, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 2, 2, 4, 6, 2, 2, 4,
	6, 4, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 1, 1, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 1, 3, 4, 4, 5, 4,
	5, 3, 4, 5, 6, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -528, -536, -2, -5, 589, -1, -4, -104, -78,
	-7, -106, -107, -8, -102, -9, -10, -12, -82, -97,
	-99, -101, -100, -41, -11, -96, -73, -74, -84, -90,
	-93, -94, -95, -108, -103, -105, -147, -109, -110, 582,
	-79, -80, -81, -31, -30, -29, -28, -130, -135, 588,
	436, 13, 485, -14, -15, -489, -16, 254, -299, -300,
	-301, -303, -537, -42, -43, -44, -52, -53, -54, -55,
	-56, -66, -67, -68, -45, -46, -47, -50, -48, -59,
	-58, -60, -61, -62, -63, -64, -65, -49, -133, -134,
	-69, -51, -71, -70, -76, -72, -77, -132, -137, -13,
	229, -75, 75, -85, -86, -87, -88, -89, -91, -92,
	361, 367, 424, 581, 60, -148, -150, 592, 593, 157,
	158, 160, 161, -32, -33, -34, -35, -36, -37, -39,
	-38, -40, 225, 15, 521, -17, -20, -18, -21, -19,
	-26, -27, -25, -22, -24, -131, -23, -136, 249, 248,
	37, 315, 316, 317, 365, 247, 226, 14, 30, 41,
	341, -149, 81, 227, -151, 12, 596, -6, -3, -2,
	-117, -121, -125, -128, -129, -126, -127, -4, -104, 115,
	239, 583, -296, 357, 584, 586, 585, 84, 92, -289,
	-291, 361, 367, 581, 593, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 488, 568, 569, 570, 571, 516, 567, 339,
	340, 518, 266, 290, 392, 296, 303, 157, 176, 170,
	198, 190, 165, 270, 308, 271, 91, 160, 471, 105,
	448, 421, 163, 285, 287, 289, 351, 292, 291, 293,
	295, 272, 342, 186, 181, 284, 268, 179, 273, 39,
	274, 203, 275, 276, 523, 444, 338, 450, 300, 51,
	419, 180, 445, 288, 447, 205, 209, 462, 463, 174,
	175, 452, 465, 202, 246, 42, 520, 258, 466, 207,
	201, 197, 474, 304, 302, 200, 173, 196, 269, 64,
	211, 210, 212, 415, 416, 417, 418, 277, 278, 355,
	461, 193, 182, 343, 166, 22, 469, 253, 449, 368,
	279, 297, 305, 206, 208, 260, 265, 522, 423, 264,
	301, 467, 178, 257, 286, 252, 470, 167, 370, 280,
	161, 294, 464, 473, 63, 383, 172, 164, 243, 158,
	262, 267, 281, 282, 283, 514, 307, 306, 298, 194,
	259, 199, 184, 171, 195, 159, 261, 472, 384, 579,
	341, 402, 192, 189, 263, 236, 468, 451, 162, 406,
	385, 187, 309, 575, 576, 577, 356, 337, 310, 311,
	185, 250, 442, 443, 314, 412, 330, 386, 422, 393,
	387, 218, 318, 454, 456, 204, 578, 319, 320, 321,
	446, 322, 323, 324, 325, 360, 55, 57, 93, 95,
	594, 28, -374, -372, -296, 581, 367, 361, 341, 593,
	-190, -296, 595, -157, 38, -203, -296, -157, -75, -15,
	-14, -149, -150, -203, 233, -304, 23, 419, -83, 420,
	229, 81, -296, -9, -95, -8, -102, -73, -147, 424,
	-302, -296, 315, 315, -302, 233, -296, 264, 400, -426,
	239, -378, -351, 265, -377, -353, -380, -354, 31, 225,
	227, 226, 261, 15, 365, 235, 13, 12, 366, 247,
	24, 25, 27, 14, 367, 369, 28, 370, 373, 374,
	375, 41, 378, 379, 254, 84, 92, 87, 272, -189,
	-296, -328, -322, 112, 255, -324, -317, -318, -320, -468,
	-462, -315, 81, 139, 140, 147, 113, -319, -408, 35,
	115, 530, 567, 486, -272, -273, -274, -275, -276, -296,
	-463, -461, 87, 96, 99, 102, 103, 101, 100, 151,
	183, 98, 88, 152, -150, 84, -484, 539, -290, 560,
	568, 569, 570, 571, 559, 60, -433, -441, 232, -439,
	150, 188, 250, 184, 13, 145, 412, 185, 536, 556,
	488, 540, 563, 532, 533, 534, 527, 528, 529, 531,
	541, 543, 555, -442, 551, 561, 562, 549, 564, 565,
	566, 86, 85, 554, 553, 542, 537, 538, 544, 526,
	535, 545, 546, 552, 557, 558, 349, 105, 350, 351,
	478, 342, 352, 239, 419, 69, 353, 354, 355, 356,
	357, 485, 358, 70, 359, 348, 254, 402, 360, 187,
	204, 490, 489, 491, 482, 479, 477, 480, 481, 483,
	484, 547, 548, 550, -111, -112, 573, -166, -167, -265,
	11, 6, 7, 8, 9, -526, 421, 522, 87, 162,
	159, -365, 162, 111, 167, 166, -365, 318, 260, 362,
	-140, -342, 339, 402, 322, 93, 264, -345, -343, -428,
	312, 308, 234, -141, 108, 244, 243, 106, 478, 232,
	376, 303, 55, 57, -500, -501, 222, 223, 224, -491,
	511, -490, -296, 351, 95, 26, 233, 362, 260, 456,
	454, 455, 457, 458, 459, 460, -57, -443, -425, 451,
	450, -308, 443, 449, 441, 453, 444, 340, 324, 323,
	225, 590, 512, -286, 386, 422, 475, 476, 363, 423,
	462, 464, 445, 105, 191, 188, 234, 236, 233, 339,
	478, 402, 93, 322, -500, 159, 462, 464, 264, 400,
	40, -371, 412, -370, -372, 463, 474, 85, 86, 461,
	-286, 105, 442, 442, -167, -265, -166, -148, -150, -105,
	-489, 234, 339, 402, 264, 235, 233, 515, 236, 478,
	232, 315, 362, 260, 322, 93, -427, -497, 31, -434,
	219, 220, 221, 32, 33, -1, 119, 596, -322, -322,
	-6, 599, -6, -322, -296, -296, 154, -209, -213, -210,
	-212, -211, -215, -214, 188, 189, 150, 192, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 30, 204,
	250, 184, 185, 186, 187, 205, 170, 190, 519, 213,
	171, 214, 172, 215, 173, 216, 174, 175, 217, 176,
	179, 180, 181, 182, 178, 153, 81, 153, 87, -173,
	256, -203, 153, -173, -167, -166, -167, -203, -277, -296,
	421, 122, -83, -83, 420, -492, -493, -494, -496, 229,
	420, 419, 153, 272, 16, -302, -302, 79, -203, -353,
	264, -378, -351, 35, 78, 154, 237, 154, 78, 81,
	363, 339, 402, 364, 478, 233, 376, 236, 264, 377,
	339, 402, 233, 236, 478, 264, 339, 233, 236, 402,
	264, 377, 441, 442, 236, 26, 368, 371, 372, 442,
	-447, 474, 154, 111, 108, 109, 110, -322, 129, -335,
	122, 123, 124, 125, 126, 127, 128, 136, 135, 146,
	139, 140, 141, 142, 143, 144, 145, 137, 138, 132,
	112, 130, 134, 131, 114, -150, -322, -328, 60, -320,
	-320, -320, -320, -408, -326, -322, 81, 81, 81, 153,
	100, 87, -322, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, -440, 81, 81, -332, -333,
	81, 81, -315, -277, 81, 87, 87, 81, 81, 81,
	87, -333, -333, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, -167, 154, 81, -113, 38, -169,
	21, -151, -150, 20, 31, 32, 31, 32, 31, 32,
	31, 32, 96, 594, 218, 467, 521, 165, 166, 167,
	-188, -296, -190, -181, -296, 236, -141, 236, 515, 514,
	-340, 239, -340, -340, -340, -340, 235, -340, 233, 233,
	233, -340, 485, 122, 122, 58, -502, 169, 154, -491,
	-172, 81, -307, 130, 134, -307, 23, 262, 262, 262,
	-307, 302, -538, -539, 16, 132, -305, -539, -305, -305,
	-307, -540, 235, 452, 42, 263, 262, -168, -169, -168,
	446, 442, -395, 447, 448, -309, -539, -308, -307, -307,
	-308, -307, -307, -307, 233, 236, 478, 322, 591, -538,
	-538, 30, 30, -426, -426, -203, -426, 512, -287, -296,
	-426, -426, -426, -503, 238, -533, -532, 465, -535, 467,
	159, -372, 159, -372, -353, 264, 264, 154, 122, 23,
	-373, 122, 133, -372, -372, -373, -373, -226, 40, -295,
	150, -296, 87, -226, 40, -530, -529, -203, -168, -151,
	-150, 82, 82, 82, -426, -426, -426, -426, -426, -428,
	-426, -426, -426, -426, -302, -181, -190, 239, -426, -426,
	-152, -153, 141, -322, -296, -152, -3, -119, -118, 116,
	117, 119, 584, 357, 583, 587, 581, -372, 40, -421,
	384, 383, -415, -417, 81, -416, 81, -416, -416, -416,
	81, 81, -418, 81, -418, -418, -415, -419, 81, -419,
	-420, 81, -420, -419, -296, -327, -328, -296, 38, -436,
	60, -147, 81, 30, 81, -296, -437, 60, -147, 81,
	30, -168, -113, -169, 153, 96, 87, -83, 82, 154,
	-495, 102, 103, -498, 202, 194, -296, -98, 87, -7,
	-8, -9, -10, -41, -73, -147, -464, -462, 81, 31,
	411, 78, 16, -379, 233, 478, 362, 260, 236, 339,
	-377, -360, -357, -355, -295, -353, -356, -355, -382, -277,
	442, -114, 426, 425, 314, -322, -322, -322, -322, -322,
	101, 112, 337, 102, 103, -317, -336, 31, 310, 311,
	-318, -318, -318, -318, -318, -318, -318, -318, -318, -318,
	-318, -318, -325, -334, -408, 81, 132, 130, 134, 131,
	114, -320, -320, -318, -318, 82, 154, -488, -487, 116,
	-322, -322, -322, -296, -485, -486, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 353, 348, 354,
	352, 342, 360, 355, 356, 187, 509, 510, 503, 504,
	505, 506, 507, 508, -327, -327, -322, -485, -327, -271,
	32, 31, -328, -328, -328, 82, -322, -499, 335, 334,
	336, -170, -296, -327, 82, 82, 82, 96, -328, -328,
	-327, -318, -327, -486, -271, -271, -271, 141, -328, -328,
	-271, -271, -271, -271, 141, -271, -271, -271, -271, -271,
	-271, -271, -271, 82, 82, 82, -168, -112, -445, -444,
	-322, 40, 574, -113, -322, -165, -164, -322, -527, 87,
	87, 597, 468, 469, 163, 166, 165, 34, 81, 81,
	153, -340, -340, -340, 515, -505, -296, 112, -361, -358,
	-355, -296, -296, -351, -296, -296, -340, -340, -340, -203,
	-237, 52, 53, 54, -355, -142, 55, 56, -503, -490,
	34, -171, -296, -261, 17, -320, -320, -355, 264, -538,
	-307, -307, -288, -287, -309, -304, -309, -309, -261, -539,
	-307, -307, -309, -305, -261, -296, 442, -261, -261, -395,
	-306, -296, -306, -340, -287, -288, -288, -203, -203, -248,
	-249, 230, 346, 347, 228, 226, 11, 227, -257, 303,
	-341, 486, -232, -233, 76, 41, -235, 388, 381, 266,
	270, 91, 271, 421, 272, 235, 274, 275, 276, 291,
	293, 246, 277, 278, 279, 412, 280, 158, 292, 281,
	282, 283, 364, -227, 6, 325, 40, 50, 51, 435,
	434, 524, 521, 267, -505, -505, 30, 30, -361, -296,
	-296, -160, -155, -159, -156, -161, -264, -266, -158, 81,
	-203, -150, -296, 154, 466, 468, 469, -533, -373, -533,
	-373, 31, 411, -376, 411, 31, -351, -370, 462, 464,
	-366, 87, 412, -356, -375, 78, 150, -444, -373, -373,
	-375, -375, 149, 154, -531, 467, 468, 222, -113, -205,
	-203, -505, -360, -351, -296, -426, -205, -205, -296, -296,
	81, 35, -296, -296, -260, 154, -259, 16, -297, -296,
	34, 87, 153, -260, -120, -118, 118, -322, -6, 583,
	-322, -6, -6, -322, -6, -322, -424, 385, 96, 96,
	-279, 87, -279, 96, 96, 96, 82, 87, -364, 78,
	-438, -329, -483, 573, -175, 82, -170, -481, -482, -170,
	-174, -296, -438, -175, 82, -481, -113, -113, -296, 23,
	-83, -493, 153, 154, -171, -379, -359, -356, -381, 141,
	-296, -367, 154, 521, 600, 85, 237, -519, -518, 403,
	82, 154, -448, 238, 485, 87, 597, 419, 218, 101,
	337, 102, 103, -408, -328, -325, -320, -320, -318, -318,
	-323, 251, -323, 111, -322, -321, -487, 118, -322, 34,
	34, 154, 79, 153, 82, 82, 16, 16, 82, -322,
	82, 82, 82, 82, 16, 16, -322, 82, 153, 82,
	82, 82, 82, 79, 82, 154, 82, 154, -328, -322,
	-328, 82, 82, 82, -322, -322, -322, -328, 82, -322,
	-322, -322, -322, -322, -322, -322, -322, -389, 437, -389,
	-389, 154, 82, 87, 154, 22, 154, -162, 36, 37,
	-283, -282, 87, 164, 167, 167, 166, -189, -191, -192,
	-193, -194, -195, 132, 155, 156, -182, -183, -184, -185,
	-209, -277, 189, 192, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 250, 184, 185, 186, 187,
	205, 170, 190, 171, 172, 173, 174, 175, 176, 179,
	180, 181, 182, 178, -296, -203, -203, -203, -340, -508,
	389, 35, -520, 154, 40, -518, 478, -138, 314, -344,
	79, -145, 16, -203, -203, -203, -216, 34, 16, -154,
	-204, -296, 81, 82, 154, -322, -352, 79, -296, -288,
	-261, -261, -203, -296, -261, -261, -307, -309, -309, -305,
	153, -287, -414, 34, -172, 154, -202, -293, -199, -201,
	241, -312, -200, 244, -477, 242, 240, 106, 245, 299,
	107, 235, -293, -293, 241, -236, 237, 34, -293, -251,
	235, 299, 242, 20, -250, 235, 107, -296, 241, 245,
	240, -292, 122, -286, 149, 237, 42, 364, -292, 525,
	-292, -292, -292, -292, -292, -292, -292, 273, 273, -292,
	-292, -292, -292, -292, -292, -292, -292, -292, -292, -292,
	159, -292, -292, -292, -292, -292, -292, 81, 268, 269,
	-509, 389, 30, 345, 345, -520, 30, -146, 339, 30,
	-267, -268, -269, -270, 67, 71, 73, 68, 69, 70,
	74, 30, 154, -294, -298, 34, -296, 87, -294, -150,
	-155, -160, -294, 81, -532, -534, 470, 467, 473, -375,
	-375, 237, 81, 122, -375, -375, 40, -295, -529, 474,
	468, -180, 23, 154, 78, -205, -182, -190, -261, -153,
	-155, -296, 87, -296, 141, -261, 119, -6, 117, -124,
	-123, -122, 120, 581, 587, 119, 119, 119, 82, 82,
	82, 154, 82, 82, 82, 154, 82, 154, -451, 447,
	39, 154, 81, 82, 154, 60, 154, 122, 82, 154,
	82, 60, -180, 153, 421, -296, -462, 82, -381, 154,
	237, 153, 153, -357, 367, -295, -359, 20, 521, -277,
	38, -283, 122, 597, 82, -323, -323, 111, -320, -317,
	82, 119, -322, 117, -207, -209, 383, 384, -207, -208,
	-214, 150, 188, 250, 187, 186, 184, 383, 384, -226,
	-296, -322, -322, 82, -322, -322, 16, -296, -226, -318,
	-322, -167, 82, 82, -388, -389, -388, -388, 82, 82,
	82, 82, -388, 82, 82, 82, 82, 82, 82, 82,
	82, 81, -444, -451, -322, -322, -164, -163, 43, 598,
	154, 122, 167, 375, 82, 154, -277, 82, 154, -209,
	-172, -172, 81, -224, 521, -203, -511, 449, 391, 401,
	-292, -314, -313, 341, 41, -431, 412, 397, 398, -358,
	264, -296, -517, 94, 122, 78, 329, 330, 331, 332,
	-338, -339, -337, -341, -505, 81, 81, 81, -409, 319,
	-209, -203, -154, -296, 16, 154, -504, 153, -1, -296,
	-351, -307, -261, -539, -261, -307, -307, -309, -296, -409,
	-209, 34, -249, -206, -277, -200, -476, -477, -340, -296,
	107, -476, 107, 81, -206, -277, -277, -252, -306, -277,
	-296, -296, -296, -255, -254, -277, -296, -296, -296, 107,
	107, -231, 40, 47, 48, 49, -292, -292, 191, -234,
	40, 411, 413, 414, 96, 96, 96, 96, 87, 87,
	87, -292, -292, 96, 87, -298, 87, -478, 166, 44,
	45, 96, 96, 96, 96, 40, 87, -238, 40, 284,
	288, 285, 286, 287, 87, 96, 40, 96, 40, 96,
	40, -296, 81, -479, -480, 87, -511, -292, 345, -372,
	122, -314, -516, 314, -139, 91, 31, -176, 230, 227,
	-505, -363, -362, -277, -159, -159, -159, -159, 67, 67,
	67, 72, 67, 72, 67, -269, -363, -161, -172, -298,
	82, -525, -524, -523, -521, 75, 238, 76, -327, 467,
	471, 472, -359, -310, 87, -366, 14, -203, -203, -430,
	294, 295, 82, -263, 18, 153, -263, 115, -6, -120,
	-122, -322, -6, -322, 583, 357, 584, 87, 96, 96,
	-459, 432, 427, 429, 107, -329, -446, -445, 60, -147,
	-170, -438, -482, -444, -296, 60, -147, -438, -296, 96,
	16, -356, -351, 141, 141, -296, 368, -367, 87, 390,
	87, 233, 598, 87, -283, -317, -322, 82, -217, 175,
	174, -217, 82, 82, -416, -416, -415, -418, -415, -217,
	-217, 82, 82, 23, 82, 82, 82, -322, 82, 82,
	154, -435, 487, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, -388, -388, -388, -388, -331, -330, 256,
	-459, 44, 45, -282, 87, 87, 87, -193, -209, 231,
	-184, 40, 34, 34, -196, -197, -198, -206, -199, -201,
	34, 81, 81, -512, 91, -506, 87, -296, -513, 91,
	392, 152, 343, 40, 393, 394, 409, 338, 96, 96,
	399, -507, -296, -146, -515, 51, 122, 87, -203, -337,
	-286, 149, 275, 322, -196, -196, -196, -410, 321, 20,
	96, 140, -173, 79, 153, -155, -204, -296, 141, 82,
	-261, -296, -261, -261, -307, -410, -147, -253, 44, 46,
	-209, -474, -296, -472, -474, -296, -472, -472, -340, -322,
	-253, -206, 237, 30, 227, -256, 327, 328, -368, 300,
	112, -368, 154, -162, -296, -226, -226, 30, 87, 87,
	-205, 82, 154, 122, -512, -506, 122, -373, 87, -513,
	-517, 122, 87, 154, -176, -176, -261, 154, 122, -178,
	-177, 78, 79, -179, 78, -177, 67, 67, -261, -523,
	-522, 23, -477, -477, -477, 82, 82, -262, 19, 20,
	141, -262, 119, 117, 119, 119, -296, 82, 82, -422,
	575, -455, -457, 427, 20, 20, 14, 82, -438, -438,
	-351, -367, 412, -203, 154, 598, -322, 82, -322, 82,
	87, -167, 20, -422, -186, -209, -315, -147, -147, 82,
	154, -147, -225, -258, -296, 87, -196, 87, -510, 403,
	87, 87, 96, 40, 96, 152, 395, -432, -139, -514,
	91, 122, 597, 81, -292, -292, -292, -296, 82, 82,
	82, -411, 255, 96, 140, 96, 140, 96, -294, -155,
	-296, -261, -504, 153, -261, -261, -411, -277, -221, -220,
	-218, 101, 112, 40, 381, -219, 91, 149, 289, 292,
	291, 267, 290, -247, -311, 78, 387, 327, 328, -341,
	575, 516, 240, 106, 107, 369, -312, 81, 81, 79,
	309, 81, 81, -474, 82, -253, -277, 40, -256, 40,
	300, -254, 149, -226, 82, -480, 87, -510, 87, -375,
	-515, 87, -505, -167, -362, -444, -322, 81, -322, 81,
	67, 11, 18, -322, -328, 239, -6, 584, 357, -240,
	576, 87, 20, 87, -453, 87, -363, -116, -449, -395,
	272, 82, 82, -388, -391, -390, -394, 433, 301, 440,
	-328, -240, 520, -143, 521, -143, -224, -198, 82, 154,
	-292, -292, 82, 20, 521, 342, 40, 96, 40, 396,
	87, 102, 103, -284, -285, 87, -346, -348, -277, 81,
	-226, -228, -295, 150, 87, -222, -223, -257, -341, -115,
	-114, -222, -412, 158, 96, 140, 96, 96, -261, -261,
	-412, -218, 101, -318, 87, -228, -229, 40, 288, 284,
	122, 122, -230, 40, 268, 269, -239, 81, 299, 14,
	191, 81, 107, 107, -203, -346, -346, -475, 329, 330,
	331, 333, 332, -475, -346, -346, 81, -369, -368, -318,
	-292, 149, -514, -168, -171, -473, -296, 240, 20, 20,
	-296, -296, -280, 577, 96, 87, 429, -423, 578, -458,
	432, -452, -450, 427, 428, 429, 430, 122, 82, -393,
	114, 395, 399, -316, -319, 96, 99, 183, 152, -280,
	-187, -296, -144, 59, 474, -258, -315, -315, -224, 87,
	390, 87, 342, 598, 154, 122, 82, 154, -415, -322,
	-383, 256, 154, -257, -286, -116, -383, -429, 166, 320,
	521, 96, 140, 96, -167, -413, 166, 320, 87, 87,
	96, 81, -439, 30, 87, -347, 81, 82, 82, 82,
	82, -346, -226, -292, 82, 82, 154, 81, 20, 87,
	-460, 238, -456, -457, 431, -450, 20, 429, 20, 20,
	87, -392, -393, 399, -316, -319, 573, 438, 438, 438,
	34, 299, 412, -285, 87, -349, -348, -162, 82, -384,
	308, 20, -257, -292, -384, 320, 96, 140, 96, -168,
	320, 82, -322, -332, -292, 82, -242, -241, 517, -346,
	-349, 79, -349, 79, -349, 79, -349, 79, 82, -226,
	-296, 240, -281, -296, -453, -467, 81, 96, -455, -454,
	-456, 20, -453, 20, -453, -453, 111, 439, 439, 439,
	87, 368, -350, 246, 91, 521, 327, 328, -162, 20,
	-385, 301, 302, -386, -399, 304, -226, 96, 82, -296,
	-246, -244, -245, 78, 445, 297, 298, 82, -475, -475,
	-475, -475, -247, 82, 154, -471, 30, 82, -466, -465,
	-278, -461, -296, 432, 433, 87, -453, -392, -292, 87,
	326, -277, 81, -397, 305, 81, -395, 81, -395, 107,
	330, -368, -245, 78, -244, 78, 15, 14, -349, -349,
	-349, -349, -296, -470, -469, -468, 82, 154, 153, 96,
	-296, -382, -387, 306, 96, -318, 81, -318, 81, -396,
	303, 81, -243, 294, 295, 30, 166, -243, 154, 122,
	-465, -296, 82, -401, 81, 20, 82, -382, 82, -382,
	81, 122, -318, 101, 40, 296, -469, 40, -322, 153,
	-402, -400, 256, -386, 82, 82, 82, -382, 96, 82,
	-296, 82, 154, -296, -398, 307, 82, -400, -403, 60,
	96, -407, -404, 81, -257, 258, 132, -407, -257, -406,
	-405, 306, 259, 81, 82, 154, -296, 255, 81, -328,
	-405, -404, -328, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 824, 825, 826, 827, 828, 829, 0,
	0, 0, 0, 598, 599, 0, 567, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 288, 284, 209, 210, 211, 212, 213, 295, 296,
	435, 0, 0, 0, 0, 679, -2, 56, 0, 277,
	0, 268, 268, 830, 831, 832, 833, 834, 835, 836,
	837, 838, -2, 611, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 343, 344,
	345, 339, 340, 342, 341, -2, 0, 611, 0, 0,
	0, 699, 0, 0, 716, 738, 23, 0, 7, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	0, 19, 0, 19, 0, 0, 0, 1191, 1192, 1193,
	1194, -2, 1685, 1662, 1828, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827,
	1829, 1830, 0, 261, 259, 1662, 1685, 1745, 1778, 1828,
	0, 843, 0, 657, 0, 662, 1145, 657, 289, 600,
	601, 699, 699, 565, 0, 325, 0, 1676, 329, 0,
	0, 0, 562, 319, 320, 321, 322, 323, 324, 0,
	0, 823, 0, 0, 315, 0, 283, 1736, 0, 0,
	0, 0, 0, 0, 153, 948, 155, 950, 159, 166,
	0, 0, 171, 172, 175, 176, 177, 178, 179, 0,
	183, 0, 185, 188, 0, 190, 191, 0, 194, 195,
	196, 0, 206, 207, 208, 951, 952, 953, -2, 84,
	841, 1595, 1485, 0, 1492, 1493, 1504, 1515, 1271, 1272,
	1273, 1274, 0, 0, 0, 0, 0, 1281, 1282, 0,
	1299, 1845, 1884, 0, 1289, 1290, 1291, 1292, 1293, 93,
	105, 106, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 0,
	1545, 1546, 1547, 1458, 1258, 1191, 0, 1854, 0, 1874,
	1879, 1880, 1881, 1882, 1873, 0, 0, 1443, 0, 1433,
	0, 0, -2, -2, 0, 0, 1803, -2, 1851, 1870,
	1878, 1855, 1877, 1847, 1848, 1849, 1842, 1843, 1844, 1846,
	1856, 1858, 1869, 0, 1865, 1875, 1876, 0, 0, 0,
	0, 107, 108, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1449, -2, 1451, -2,
	1454, -2, 1456, 1457, -2, 1460, 1461, 1462, -2, -2,
	1465, 1466, 1467, 1468, 1469, 1470, 1473, -2, -2, -2,
	-2, 1445, 1446, 1447, 1448, 1437, 1438, 1439, 1440, 1441,
	1442, -2, -2, -2, 699, 774, 0, -2, 0, 0,
	0, 721, 724, 727, 730, 0, 57, 58, 0, 278,
	279, 267, 269, 0, 273, 0, 266, 0, 0, 0,
	0, 0, 980, 980, 980, 980, 980, 0, 980, 0,
	0, 0, 980, 871, 0, 955, 956, 957, 978, 979,
	1037, 0, 0, 0, 616, 612, 613, 614, 615, 687,
	0, 689, 692, 542, 542, 489, 0, 0, 0, 542,
	0, 503, 495, 0, 0, 0, 542, 0, 0, 694,
	694, 0, 545, 552, 542, 542, -2, 542, 542, 542,
	0, 0, 509, 510, 511, 495, 495, 514, 515, 516,
	527, 528, 553, 1619, 0, 0, 435, 435, 0, 435,
	0, 435, 435, 435, 618, 1773, 1683, 1750, 1736, 0,
	0, 234, 1803, 239, 0, 1684, 1699, 0, 0, 1717,
	0, -2, 0, 305, 694, 0, 700, 0, 699, 0,
	0, 435, 435, 435, 435, 435, 1036, 435, 435, 435,
	435, 0, 0, 0, 435, 435, 0, 0, 739, 740,
	735, 736, 737, 741, 742, 5, 6, 19, 0, 0,
	0, 0, 0, 0, 63, 62, 0, 1596, 1614, 1550,
	1551, 1552, 1601, 1554, 1605, 1605, 1605, 1605, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 0, 0, 1594,
	1574, 1603, 1603, 1603, 1601, 1598, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1608, 1608, 1611, 1611, 1608, 0, 1483, 0, 0, 0,
	0, 661, 0, 0, 694, -2, 0, 566, 326, 1195,
	0, 0, 330, 331, 0, 0, 346, 0, 349, 334,
	335, 336, 0, 133, 0, 317, 318, 0, 0, 285,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	163, 160, 167, 170, 180, 187, 0, 199, 201, 204,
	161, 168, 173, 174, 181, 202, 162, 164, 165, 169,
	203, 205, 182, 186, 200, 184, 189, 192, 193, 198,
	0, 134, 0, 0, 0, 0, 0, 1491, 0, 0,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 1485, 0, 0, 1277,
	1278, 1279, 1280, 1283, 0, 1300, 0, 0, 0, 0,
	1544, 1548, 0, 1483, 1483, 0, 1483, 1479, 0, 0,
	0, 0, 0, 0, 1483, 1419, 0, 0, 1421, 1434,
	0, 0, 1423, 1424, 0, 1427, 1428, 1483, 0, 1483,
	1432, 1415, 1416, 0, 1479, 1479, 1479, 0, 0, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479,
	1479, 0, 0, 0, 694, 0, 0, 682, 0, 663,
	0, 718, 720, 0, 722, 723, 725, 726, 728, 729,
	731, 732, 59, 0, 0, 0, 0, 271, 0, 276,
	0, 840, 0, 0, 856, 980, 872, 980, 980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 980, 980,
	980, 0, 995, 0, 0, 0, 618, 617, 0, 688,
	0, 0, 747, 0, 0, 488, 0, 495, 542, 542,
	501, 502, 497, 496, 548, 549, 545, 0, 545, 545,
	747, 0, 521, 522, 523, 542, 542, 529, 695, 530,
	531, 545, 0, 550, 551, 747, 0, 0, 747, 747,
	0, 539, 540, 541, 0, 0, 980, 0, 558, 497,
	497, 1620, 1621, 0, 0, 989, 0, 0, 0, 561,
	0, 0, 0, 0, 619, 214, 217, 0, 220, 0,
	1773, 0, 1773, 0, 227, 0, 0, 0, 0, 0,
	0, 257, 258, 0, 0, 0, 0, 248, 251, 1139,
	1140, 945, 946, 252, 253, 297, 298, 0, 663, 717,
	719, 713, 714, 715, 0, 0, 0, 0, 0, 435,
	0, 0, 0, 0, 594, 0, 596, 0, 0, 0,
	755, 749, 751, 818, 93, 755, 8, 80, 77, 0,
	19, 0, 0, 19, 19, 0, 19, 262, 0, 1617,
	1615, 1616, 1553, 1602, 0, 1579, 0, 1580, 1581, 1582,
	0, 0, 1575, 0, 1576, 1577, 1578, 1569, 0, 1570,
	1571, 0, 1572, 1573, 260, 0, 1484, 844, 0, 636,
	649, 631, 0, 638, 0, 1146, 620, 649, 622, 0,
	638, 663, 685, 663, 0, 327, 0, 332, 0, 0,
	348, 350, 351, 352, 337, 338, 563, 313, 314, 306,
	307, 308, 309, 310, 311, 312, 316, 103, 0, 286,
	287, 0, 0, 0, 147, 148, 149, 150, 151, 152,
	154, 138, 584, 586, 937, 949, 0, 940, 0, 157,
	197, 130, 0, 0, 0, 1486, 1487, 1488, 1489, 1490,
	1494, 0, 1496, 1498, 1500, 1502, 0, 1520, -2, -2,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1505, 1518, 1519, 0, 0, 0, 0, 0,
	0, 1516, 1516, 1511, 0, 1275, 0, 1297, 1301, 0,
	0, 0, 0, 94, 1478, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 0, 0, 1485, 0, 0, 0,
	1480, 1481, 0, 0, 0, 1374, 0, 0, 1380, 1381,
	1382, 0, 644, 0, 1444, 1420, 1435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 773, 775, 0, 653,
	655, 656, 0, 683, 696, 701, 702, 705, 55, 60,
	53, 1006, 280, 281, 0, 0, 275, 0, -2, 858,
	0, 0, 0, 0, 980, 0, 886, 0, 433, 931,
	0, 0, 0, 947, 970, 976, 0, 0, 0, 1010,
	873, 878, 879, 880, 874, 875, 881, 882, 0, 690,
	0, 0, 787, 487, 0, 543, 544, 492, 1736, 497,
	747, 747, 504, 498, 505, 547, 506, 507, 508, 0,
	747, 747, 542, 545, 532, 546, 545, 535, 536, 0,
	554, 559, 555, 0, 557, 512, 513, 1012, 692, 364,
	365, 406, 406, 406, 389, 406, 0, 0, 377, 1622,
	0, 0, 0, 0, 386, 1622, 0, 1622, 1622, 1622,
	1622, 1622, 1622, 1622, 0, 0, 1622, 1622, 1622, 1622,
	1622, 1622, 1622, 1622, 1622, 1622, 1622, 0, 1622, 1622,
	1622, 1622, 1622, 1125, 1622, 0, 990, 396, 397, 398,
	399, 404, 405, 0, 430, 0, 0, 0, 433, 0,
	920, 760, 0, 761, 762, 758, 789, 813, 813, 0,
	813, 793, 1145, 0, 0, 225, 226, 215, 0, 216,
	0, 228, 229, 0, 231, 232, 233, 240, 1683, 1750,
	235, 237, 0, 0, 241, 254, 255, 256, 0, 0,
	246, 247, 0, 0, 300, 301, 303, 0, 711, 581,
	1143, 582, 583, 587, 0, 0, 590, 591, 592, 593,
	858, 0, 925, 926, 747, 0, 756, 0, 752, 819,
	0, 821, 0, 747, 0, 78, 19, 0, 71, 68,
	0, 0, 0, 0, 0, 1597, 1549, 1618, 0, 0,
	0, 1599, 0, 0, 0, 0, 61, 665, 627, 0,
	630, 646, 0, 650, 0, 0, 642, 635, 639, 0,
	0, 659, 621, 0, 0, 626, 711, 686, 1196, 0,
	333, 347, 0, 0, 0, 0, 141, 934, 0, 142,
	146, 136, 0, 0, 0, 939, 0, 936, 941, 0,
	156, 0, 0, 131, 132, 1000, 1006, 0, 0, 1495,
	1497, 1499, 1501, 1503, 0, 1506, 1516, 1516, 1512, 0,
	1507, 0, 1509, 0, 1486, 0, 1302, 0, 0, 0,
	0, 0, 0, 0, 1364, 1365, 0, 0, 1369, 0,
	1371, 1372, 1373, 1375, 0, 0, 0, 1379, 0, 1418,
	1436, 1422, 1425, 0, 1429, 0, 1431, 0, 699, 0,
	0, 1339, 1339, 1339, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 1294, 0, 1295,
	1296, 0, 776, 665, 0, 0, 0, 708, 706, 707,
	0, 1004, 0, 282, 270, 272, 0, 0, 0, 846,
	847, 849, 0, 852, 853, 854, 0, 859, 860, 862,
	863, 0, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1667, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 857, 692, 692, 1082, 0, 893,
	1622, 981, 437, 0, 0, 933, 0, 909, 0, 0,
	0, -2, 0, 0, 0, 0, 1014, 0, 0, 0,
	605, 609, 23, 693, 0, 748, 490, 0, 491, 542,
	499, 500, 747, 1145, 524, 525, 747, 542, 542, 545,
	0, 556, 1014, 0, 0, 989, 367, 0, 1154, 1155,
	407, 0, 1161, 1170, 980, 1228, 0, 1170, 0, 0,
	1172, 1173, 0, 0, 0, 0, 390, 391, 0, 376,
	0, 0, 0, 0, 375, 0, 0, 417, 0, 0,
	0, 0, 1623, 1622, 1622, 0, 384, 385, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 1622, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1116, 0, 0, 0, 0, 0, 0, 0, 1131, 1132,
	893, 1622, 0, 0, 0, 437, 907, 916, 0, 0,
	0, 0, 0, 0, 780, 0, 0, 779, 0, 0,
	0, 0, 0, 692, 814, 0, 816, 817, 791, -2,
	0, 760, 796, 1483, 218, 219, 0, 0, 224, 242,
	244, 0, 0, 0, 243, 245, 249, 250, 299, 302,
	304, 681, 0, 0, 0, 1038, 0, 597, 745, 750,
	757, 820, 822, 94, 753, 745, 0, 81, 19, 80,
	72, 73, 0, 19, 0, 0, 0, 0, 1607, 1606,
	1592, 0, 1593, 1604, 1609, 0, 1612, 0, 669, 0,
	0, 649, 651, 0, 0, 649, 0, 0, 658, 0,
	0, 649, 684, 0, 0, 564, 104, 353, 0, 0,
	0, 0, 0, 585, 0, 938, 138, 0, 0, 158,
	0, 0, 0, 1006, 1482, 1508, 1510, 0, 1517, 1513,
	1276, 1284, 1298, 0, 0, 1304, 1316, 1316, 0, 0,
	1307, 1605, 1605, 1310, 1601, 1603, 1601, 1316, 1316, 0,
	95, 0, 0, 1370, 0, 0, 0, 645, 0, 0,
	0, 1337, 1339, 1339, 1345, 1340, 1346, 1347, 1339, 1339,
	1339, 1339, 1352, 1339, 1339, 1339, 1339, 1339, 1339, 1339,
	1339, 1335, 654, 669, 697, 698, 703, 704, 0, 54,
	1006, 0, 274, 0, 0, 851, 0, 0, 0, 864,
	0, 0, 1147, 0, 0, 0, 897, 894, 895, 896,
	0, 928, 438, 439, 440, 441, 0, 0, 0, 932,
	0, 920, 902, 0, 0, 0, 971, 972, 973, 974,
	975, -2, 984, 0, 0, 1147, 1147, 1147, 1022, 0,
	1011, 657, 0, -2, 0, 0, 607, 0, 0, 788,
	493, 747, 517, 0, 533, 747, 747, 542, 560, 1022,
	1013, 0, 366, 408, 0, 1160, 1185, 1171, 1185, 1229,
	1185, 1185, 980, 0, 408, 0, 0, 378, 414, 0,
	0, 0, 0, 374, 411, 705, 415, 416, 418, 0,
	420, 380, 392, 393, 394, 395, 0, 0, 0, 387,
	400, 401, 402, 403, 1093, 1094, 1095, 1098, 1099, 1100,
	1101, 0, 0, 1104, 1105, 1106, 1107, 1108, 1182, 1183,
	1184, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1133, 1134,
	1135, 1136, 1137, 1138, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 0, 0, 1128, 0, 897, 0, 0, 0,
	0, 928, 909, 0, 919, 0, 921, 922, 0, 0,
	628, 747, 292, 0, 783, 777, 0, 766, 781, 782,
	769, 0, 771, 0, 767, 768, 747, 759, 790, 815,
	792, 795, 797, 798, 804, 0, 0, 0, 0, 221,
	222, 223, 230, 0, 457, 236, 712, 1144, 588, 589,
	1039, 1040, 595, 743, 0, 0, 743, 76, 79, 0,
	74, 0, 0, 0, 0, 66, 64, 1600, 0, 0,
	671, 118, 0, 0, 0, 647, 0, 652, 649, 634,
	643, 633, 640, 641, 660, 649, 625, 624, 1197, 328,
	0, 935, 138, 143, 144, 145, 139, 137, 942, 0,
	944, 0, 1002, 0, 0, 1514, 1303, 1285, 1305, 1317,
	1318, 1306, 1286, 1287, 1308, 1309, 1311, 1312, 1313, 1314,
	1315, 1288, 1366, 0, 1368, 1376, 1377, 0, 1426, 1430,
	0, 0, 0, 1343, 1344, 1348, 1349, 1350, 1351, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 699, 1336, 0,
	671, 709, 710, 1005, 1007, 839, 842, 848, 850, 0,
	861, 0, 0, 0, 0, 1148, 1149, 1151, 1152, 1153,
	0, 0, 1147, 870, 0, 0, 888, 889, 899, 0,
	0, 0, 443, 444, 0, 0, 0, 456, 452, 453,
	454, 434, 927, 916, 905, 0, 0, 915, 0, 985,
	1622, 1622, 1622, 0, 0, 0, 0, 1025, 0, 0,
	1016, 0, 813, 0, 0, 747, 606, 609, 610, 691,
	494, 747, 537, 534, 747, 1025, 363, 379, 409, 0,
	-2, 0, 1186, 0, 1174, 1186, 0, 0, 1185, 0,
	368, 408, 0, 0, 0, 421, 424, 425, 422, 1224,
	0, 423, 0, 413, 419, 1096, 1097, 0, 1102, 1103,
	0, 1127, 0, 0, 426, 0, 0, 0, 427, 432,
	902, 0, 917, 0, 923, 924, 699, 0, 0, 763,
	784, 0, 0, 764, 0, 765, 770, 772, 291, 799,
	0, 0, 801, 802, 803, 794, 238, 733, 0, 0,
	754, 734, 0, 19, 0, 0, 69, 1610, 1613, 673,
	0, 670, 119, 0, 0, 0, 0, 648, 632, 623,
	140, 135, 943, 121, 0, 1003, 0, 1378, 0, 1339,
	1338, 1332, 0, 673, 0, 867, 865, 876, 876, 1082,
	0, 993, 0, 1084, 1622, 1622, 0, 898, 887, 0,
	929, 930, 0, 445, 446, 0, 449, 455, 900, 901,
	0, 0, 913, 0, 0, 0, 0, 977, -2, 0,
	-2, 1031, 0, 1023, 0, 1015, 0, 1018, 747, 747,
	-2, 603, 608, 0, 518, 538, 1031, 410, 1187, -2,
	1200, 1202, 0, 990, 1205, 1206, 0, 0, 0, 0,
	0, 0, 1250, 1214, 0, 0, 1218, 1219, 1220, 0,
	0, 1223, 0, 1532, 1533, 0, 1227, 0, 0, 0,
	0, 0, 0, 0, 1168, 369, 370, 0, 372, 373,
	1225, 412, 1622, 382, 1126, 1129, 1130, 431, 428, 429,
	905, 908, 629, 694, 293, 294, 785, 0, 778, 808,
	805, 0, 0, 744, 746, 70, 75, 0, 0, 675,
	0, 672, 0, 666, 668, 129, 637, 91, 112, 0,
	0, 1367, 1417, 1342, 0, 1333, 0, 1327, 1328, 1329,
	1334, 675, 0, 868, 883, 869, 991, 1150, 1083, 0,
	0, 0, 1082, 0, 0, 442, 447, 0, 450, 451,
	906, 903, 904, 0, 911, 0, 0, 966, 1601, 0,
	986, 987, 1141, 1142, 988, 1041, -2, 1090, 0, 997,
	121, 1041, 1019, 0, 1026, 0, 1024, 1017, 699, 604,
	1028, 1201, 1203, 1204, 1207, 1208, 1209, 1255, 1256, 1257,
	0, 0, 1212, 1252, 1253, 1254, 1213, 0, 0, 0,
	0, 0, 1530, 1531, 1248, 0, 0, 1175, 1177, 1178,
	1179, 1180, 1181, 1176, 0, 0, 0, 1167, 1169, 371,
	0, 1622, 918, 290, 0, 0, 809, 811, 806, 807,
	65, 67, 82, 0, 674, 120, 0, 83, 0, 109,
	0, 122, 123, 0, 0, 0, 0, 0, 1341, 1330,
	0, 0, 0, 0, 0, 1534, 1535, 1536, 0, 664,
	0, 866, 0, 884, 885, 1085, 1086, 1087, 992, 890,
	0, 892, 448, 910, 913, 0, 959, 0, 705, 0,
	1043, 0, 989, 1092, 1622, 999, 1043, 1009, 0, 1021,
	0, 1033, 0, 1027, 694, 362, 0, 1030, 1210, 1211,
	0, 0, 1433, 1622, 0, 1243, 0, 959, 959, 959,
	959, 0, 381, 0, 786, 800, 0, 0, 0, 92,
	96, 0, 118, 115, 0, 124, 0, 0, 0, 0,
	1001, 0, 1319, 0, 0, 0, 1323, 1324, 1325, 1326,
	0, 0, 891, 912, 914, 958, 967, 968, 705, 996,
	0, 1080, 1091, 0, 998, 1020, 1032, 0, 1035, 602,
	1029, 1251, 0, 1217, 0, 1222, 1231, 1244, 0, 0,
	1156, 0, 1158, 0, 1162, 0, 1164, 0, 0, 383,
	810, 812, 0, 677, 667, 85, 0, 0, 113, 114,
	116, 0, 125, 0, 127, 128, 0, 1320, 1321, 1322,
	855, 877, 960, 1622, 0, 0, 964, 965, 969, 0,
	1068, 0, 0, 1074, 0, 1081, 1096, 1034, 1215, 1221,
	1230, 1232, 1233, 0, 1245, 1246, 1247, 1249, 959, 959,
	959, 959, 1166, 676, 0, 1008, 0, 97, 0, 99,
	101, 102, 1188, 110, 111, 117, 126, 1331, 0, 962,
	0, 1044, 0, 1046, 0, 0, 0, 0, 0, 1078,
	0, 1216, 1234, 0, 1235, 0, 0, 0, 1157, 1159,
	1163, 1165, 678, 86, 87, 0, 98, 0, 0, 961,
	963, 0, 1048, 0, 1069, 0, 0, 0, 0, 0,
	0, 0, 1236, 1238, 1239, 0, 0, 1237, 0, 0,
	100, 1189, 1045, 1042, 0, 1080, 1070, 0, 1072, 0,
	0, 0, 0, 1240, 1242, 1241, 88, 89, 90, 0,
	0, 1050, 0, 1066, 1071, 1073, 1075, 0, 1079, 1077,
	1190, 1049, 0, 1062, 1047, 0, 1076, 1051, -2, 0,
	1067, 1052, -2, 0, 1060, 0, 0, 1053, 1061, 0,
	1056, 0, 0, 0, 1055, 0, -2, 1063, 0, 0,
	1057, -2, 0, 1065, 1064,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 599, 596,
	123, 122, 124, 3, 600, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 597, 135, 598, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:754
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:761
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:767
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:775
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:785
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:800
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:810
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:815
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:819
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:851
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:859
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:867
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:877
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:897
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:903
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:910
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:918
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:924
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:933
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:943
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:951
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:959
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:967
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:977
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:985
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:995
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1002
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1011
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1021
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1025
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1031
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1035
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1041
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1050
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1060
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1064
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1070
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1083
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1089
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1110
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1123
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1134
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1140
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1144
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1150
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1157
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1165
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1169
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1183
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1187
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1191
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1204
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1210
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1219
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1230
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1234
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1240
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1244
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1250
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1254
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1260
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1284
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1303
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1307
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1311
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1316
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1320
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1327
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1335
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1342
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1347
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1354
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1363
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1387
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1391
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1397
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1403
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1421
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1438
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1461
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1465
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1469
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1474
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1478
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1484
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1497
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1508
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1521
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1525
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1535
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1548
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1561
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1567
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1580
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1588
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1597
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1624
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1628
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1634
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1641
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1650
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1654
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1660
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1856
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1869
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1876
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1893
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1897
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1918
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1926
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1930
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1936
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1940
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1946
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1953
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1960
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1969
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2013
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2030
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2036
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2040
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2046
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2054
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2063
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2072
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2080
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2088
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2111
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2134
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2141
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2148
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2156
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2163
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2170
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2179
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2183
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2187
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2193
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2197
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2203
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2207
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2213
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2217
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2234
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2239
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2243
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2251
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2255
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2263
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2271
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2277
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2289
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2299
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2305
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2312
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2332
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2349
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2360
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2371
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2375
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2381
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2391
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2397
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2401
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2407
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2413
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2417
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2425
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2431
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2449
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2453
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2463
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2469
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2475
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2486
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2528
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2538
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2579
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2583
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2589
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2595
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2600
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2601
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2602
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2607
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2624
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2640
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2651
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2660
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2664
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2670
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2677
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2686
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2696
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2705
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2715
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2725
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2734
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2742
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2746
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2750
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2754
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2758
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2767
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2773
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2789
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2793
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2797
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2801
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2806
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2837
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2841
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2846
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2852
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2858
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2867
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2871
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2877
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2884
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2892
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2899
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2913
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2920
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2935
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2942
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2958
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2962
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2981
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2989
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2997
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3010
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3016
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3027
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3042
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3047
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3051
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3060
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3092
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3120
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3124
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3128
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3132
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3142
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3147
		{
			yyVAL.item = nil
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3193
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3201
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3205
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3209
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3222
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3233
		{
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3237
		{
		}
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3242
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3252
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3262
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3270
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3288
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3319
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3331
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3343
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3356
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3366
		{
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3368
		{
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3377
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3387
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3396
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3400
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3404
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3410
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3416
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3428
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3447
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3459
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3463
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3495
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3501
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3508
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3517
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3521
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3526
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3530
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3536
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3549
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3553
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3559
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3564
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3568
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3572
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3578
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3584
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3588
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3594
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3600
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3604
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3608
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3614
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3618
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3642
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3651
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3660
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3669
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3673
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3679
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3688
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3697
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3707
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3718
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3724
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3728
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3734
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3740
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3749
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3756
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3767
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3772
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3779
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3795
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3808
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3819
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3823
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3829
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3834
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3841
		{
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3843
		{
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3846
		{
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3855
		{
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3859
		{
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3864
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3873
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3880
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3886
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3894
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3901
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3908
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3928
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3938
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3942
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3948
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3955
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3961
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3969
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3976
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3983
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4002
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4006
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4011
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4015
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4019
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4025
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4034
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4038
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4044
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4048
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4054
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4058
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4064
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4069
		{
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4073
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4080
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4084
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4091
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4100
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4106
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4110
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4116
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4120
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4125
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4129
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4149
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4156
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4174
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4193
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4199
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4206
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4210
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4223
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4227
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4232
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4236
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4243
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4248
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4255
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4261
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4265
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4269
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4273
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4277
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4281
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4294
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4303
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4307
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4313
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4325
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4334
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4340
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4344
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4348
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4357
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4363
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4369
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4373
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4379
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4384
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4388
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4392
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4397
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4414
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4422
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4426
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4430
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4444
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4448
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4458
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4468
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4478
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4490
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4498
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4506
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4515
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4523
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4531
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4539
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4547
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4555
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4571
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4579
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4589
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4600
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4614
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4618
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4622
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4627
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4631
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4635
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4644
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4648
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4657
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4666
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4672
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4676
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4682
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4686
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4691
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4695
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4700
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4708
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4714
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4722
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4730
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4740
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4746
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4755
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4764
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4783
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4787
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4797
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4801
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4805
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4809
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4815
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4825
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4829
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4835
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4841
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4845
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4851
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4857
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4861
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4865
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4871
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4875
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4881
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4885
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4891
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4895
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4901
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4905
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4915
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4928
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4934
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4940
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4953
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4971
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4975
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4981
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4991
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4995
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4999
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5008
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5012
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5016
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5021
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5025
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5029
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5033
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5037
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5042
		{
			yyVAL.str = ""
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5046
		{
			yyVAL.str = yyDollar[1].str
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5050
		{
			yyVAL.str = yyDollar[2].str
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5056
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5062
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5066
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5070
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5074
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5078
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5084
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 839:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5119
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5129
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5135
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 842:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5141
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5151
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5156
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5162
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5169
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5173
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5179
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5185
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5190
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5194
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5198
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5202
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5209
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5221
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5226
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5232
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5239
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5243
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5255
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5259
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5263
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5269
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5275
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5281
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5290
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5302
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5314
		{
			yyVAL.str = yyDollar[1].str
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5318
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5324
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5328
		{
			yyVAL.str = "DEFINER = "
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5332
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5337
		{
			yyVAL.str = ""
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5341
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5355
		{
			yyVAL.str = ""
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5363
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5369
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5379
		{
			yyVAL.str = yyDollar[1].str
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5383
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5389
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5396
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5402
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5410
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5416
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5423
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5430
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5438
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5444
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5453
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5465
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5477
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5489
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5495
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5502
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5510
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5516
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5524
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5530
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5538
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5544
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5553
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5557
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5562
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5566
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5573
		{
			yyVAL.str = yyDollar[3].str
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5578
		{
			yyVAL.str = ""
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5582
		{
			yyVAL.str = yyDollar[2].str
		}
	case 918:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5588
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5602
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5616
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5622
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5628
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5634
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5643
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5652
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5661
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5666
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5672
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5680
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5786
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5790
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5796
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5806
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5810
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5816
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5826
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5830
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5834
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5839
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5843
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5849
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5856
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5862
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5871
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5878
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5887
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5891
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5897
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5911
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5915
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5919
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5924
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5928
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5932
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5936
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5942
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5965
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5987
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5991
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5995
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5999
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6003
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6009
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6013
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6019
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6024
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6029
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6033
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6037
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6041
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6045
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6051
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6066
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6076
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6080
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6089
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6095
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6099
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6105
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6109
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6113
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6118
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6122
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6128
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6139
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6150
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6165
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6171
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6183
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6192
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6205
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6212
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6222
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6232
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6240
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6251
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6255
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6260
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6264
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6271
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6282
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6295
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6309
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6317
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6327
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6334
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6341
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6348
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6355
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6359
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6363
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6371
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6378
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6389
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6396
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6407
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6413
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6419
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6423
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6430
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6437
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6444
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6451
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6455
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6460
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6468
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6473
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6477
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6491
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6498
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6505
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6509
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6518
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6522
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6528
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6532
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6538
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6547
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6557
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6561
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6567
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6571
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6577
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6584
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6593
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6597
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6606
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6611
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6615
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6620
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6624
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6634
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6638
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6649
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6657
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6665
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6673
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6684
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6693
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6703
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6713
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6717
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6722
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6726
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6731
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6735
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6741
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6745
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6751
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6755
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6764
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6770
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6774
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6778
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6784
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6788
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6792
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6796
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6800
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6804
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6808
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6813
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6817
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6821
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6825
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6829
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6833
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6837
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6841
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6845
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6849
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6853
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6857
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6861
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6865
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6873
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6877
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6881
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6885
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6889
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6893
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6897
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6901
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6905
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6909
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6913
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6917
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6921
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6927
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6931
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6937
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6943
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6947
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6953
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6957
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6961
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6965
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6969
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6973
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6987
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6991
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7000
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7005
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7011
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7018
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7022
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7028
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7032
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7036
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7042
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7046
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7052
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7061
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7070
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7093
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7118
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7132
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7138
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7147
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7156
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7165
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7174
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7184
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7198
		{
			yyVAL.str = ""
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7202
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7212
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7218
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7224
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7243
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7247
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7253
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7259
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7263
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7267
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7273
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7277
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7281
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7285
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7291
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7295
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7299
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7304
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7308
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7314
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7318
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7324
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7328
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7332
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7336
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7340
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7344
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7349
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7353
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7361
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7365
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7369
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7373
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7377
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7381
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7385
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7398
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7402
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7406
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7414
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7418
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7424
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7428
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7433
		{
			yyVAL.str = ""
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7437
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7443
		{
			yyVAL.str = ""
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7447
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1230:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7453
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7465
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7472
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7479
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7486
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7493
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7502
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7508
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7514
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7518
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7522
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7526
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7530
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7535
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7542
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7546
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7550
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7559
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7564
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7568
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7584
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7590
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7594
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7598
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7602
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7606
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7610
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7614
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7618
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7622
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7626
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7630
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7634
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7638
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7644
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7648
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7652
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7656
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7660
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7664
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7668
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7672
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7676
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7680
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7684
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7688
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7693
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7701
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7705
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7709
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7713
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7722
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7726
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7730
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7734
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7738
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7744
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7752
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7760
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7773
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7782
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7788
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7792
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7798
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7807
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7819
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7836
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7853
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7866
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7879
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7891
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7905
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7920
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7935
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7952
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7967
		{
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7974
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7978
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7982
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7988
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7992
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7996
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8000
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8006
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8010
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8014
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8020
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8028
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8042
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8049
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8058
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8063
		{
			yyVAL.str = ","
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8067
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8072
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8079
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8105
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8116
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8126
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8136
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8146
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8155
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8164
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8174
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8184
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8194
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8204
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8214
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8224
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8234
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8244
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8254
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8264
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8274
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8284
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8303
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8311
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8319
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8327
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8335
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8345
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8353
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8362
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8370
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8378
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8386
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8394
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8405
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8415
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8427
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8438
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8460
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8496
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8508
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8520
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8531
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8539
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8546
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8553
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8565
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8573
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8583
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8593
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8601
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8612
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8621
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8630
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8638
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8648
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8656
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8670
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8680
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8699
		{
		}
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8701
		{
		}
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8742
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8753
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8757
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8761
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8767
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8776
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8782
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8786
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8793
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8797
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8801
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8809
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8813
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8817
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8821
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8827
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8831
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8835
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8839
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8843
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8847
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8851
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8855
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8859
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8863
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8871
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8875
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8879
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8883
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8887
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8891
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8895
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8899
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8903
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8907
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8917
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8923
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8927
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8934
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8938
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8942
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8948
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8952
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8956
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8960
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8964
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8968
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8972
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8978
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8982
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8986
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8990
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8996
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9009
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9014
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9020
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9024
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9037
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9042
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9046
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9050
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9054
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9058
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9065
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9069
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9083
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9087
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9094
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9105
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9110
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9116
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9128
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9140
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9152
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9165
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9178
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9191
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9204
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9217
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9230
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9243
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9256
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9269
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9282
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9297
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9324
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9366
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9402
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9438
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9455
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9467
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9487
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9507
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9527
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9543
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9556
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9569
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9582
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9595
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9607
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9619
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9631
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9643
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9655
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9667
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9679
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9691
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9703
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9716
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9729
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9744
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9752
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9761
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9771
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9794
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9799
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9805
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9812
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9816
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9821
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9825
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9831
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9837
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9844
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9851
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9860
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9867
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9874
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9883
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9887
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9891
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9897
		{
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9899
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9909
		{
			yyVAL.str = ""
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9913
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

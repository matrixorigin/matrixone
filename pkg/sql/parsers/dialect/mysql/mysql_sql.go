// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const INDEX = 57539
const VIEW = 57540
const TO = 57541
const IGNORE = 57542
const IF = 57543
const PRIMARY = 57544
const COLUMN = 57545
const CONSTRAINT = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const FOREIGN = 57549
const KEY_BLOCK_SIZE = 57550
const SHOW = 57551
const DESCRIBE = 57552
const EXPLAIN = 57553
const DATE = 57554
const ESCAPE = 57555
const REPAIR = 57556
const OPTIMIZE = 57557
const TRUNCATE = 57558
const MAXVALUE = 57559
const PARTITION = 57560
const REORGANIZE = 57561
const LESS = 57562
const THAN = 57563
const PROCEDURE = 57564
const TRIGGER = 57565
const STATUS = 57566
const VARIABLES = 57567
const ROLE = 57568
const PROXY = 57569
const AVG_ROW_LENGTH = 57570
const STORAGE = 57571
const DISK = 57572
const MEMORY = 57573
const CHECKSUM = 57574
const COMPRESSION = 57575
const DATA = 57576
const DIRECTORY = 57577
const DELAY_KEY_WRITE = 57578
const ENCRYPTION = 57579
const ENGINE = 57580
const MAX_ROWS = 57581
const MIN_ROWS = 57582
const PACK_KEYS = 57583
const ROW_FORMAT = 57584
const STATS_AUTO_RECALC = 57585
const STATS_PERSISTENT = 57586
const STATS_SAMPLE_PAGES = 57587
const DYNAMIC = 57588
const COMPRESSED = 57589
const REDUNDANT = 57590
const COMPACT = 57591
const FIXED = 57592
const COLUMN_FORMAT = 57593
const AUTO_RANDOM = 57594
const RESTRICT = 57595
const CASCADE = 57596
const ACTION = 57597
const PARTIAL = 57598
const SIMPLE = 57599
const CHECK = 57600
const ENFORCED = 57601
const RANGE = 57602
const LIST = 57603
const ALGORITHM = 57604
const LINEAR = 57605
const PARTITIONS = 57606
const SUBPARTITION = 57607
const SUBPARTITIONS = 57608
const CLUSTER = 57609
const TYPE = 57610
const ANY = 57611
const SOME = 57612
const EXTERNAL = 57613
const LOCALFILE = 57614
const URL = 57615
const PREPARE = 57616
const DEALLOCATE = 57617
const RESET = 57618
const EXTENSION = 57619
const PROPERTIES = 57620
const PARSER = 57621
const VISIBLE = 57622
const INVISIBLE = 57623
const BTREE = 57624
const HASH = 57625
const RTREE = 57626
const BSI = 57627
const ZONEMAP = 57628
const LEADING = 57629
const BOTH = 57630
const TRAILING = 57631
const UNKNOWN = 57632
const EXPIRE = 57633
const ACCOUNT = 57634
const ACCOUNTS = 57635
const UNLOCK = 57636
const DAY = 57637
const NEVER = 57638
const PUMP = 57639
const MYSQL_COMPATBILITY_MODE = 57640
const SECOND = 57641
const ASCII = 57642
const COALESCE = 57643
const COLLATION = 57644
const HOUR = 57645
const MICROSECOND = 57646
const MINUTE = 57647
const MONTH = 57648
const QUARTER = 57649
const REPEAT = 57650
const REVERSE = 57651
const ROW_COUNT = 57652
const WEEK = 57653
const REVOKE = 57654
const FUNCTION = 57655
const PRIVILEGES = 57656
const TABLESPACE = 57657
const EXECUTE = 57658
const SUPER = 57659
const GRANT = 57660
const OPTION = 57661
const REFERENCES = 57662
const REPLICATION = 57663
const SLAVE = 57664
const CLIENT = 57665
const USAGE = 57666
const RELOAD = 57667
const FILE = 57668
const TEMPORARY = 57669
const ROUTINE = 57670
const EVENT = 57671
const SHUTDOWN = 57672
const NULLX = 57673
const AUTO_INCREMENT = 57674
const APPROXNUM = 57675
const SIGNED = 57676
const UNSIGNED = 57677
const ZEROFILL = 57678
const ENGINES = 57679
const LOW_CARDINALITY = 57680
const ADMIN_NAME = 57681
const RANDOM = 57682
const SUSPEND = 57683
const ATTRIBUTE = 57684
const HISTORY = 57685
const REUSE = 57686
const CURRENT = 57687
const OPTIONAL = 57688
const FAILED_LOGIN_ATTEMPTS = 57689
const PASSWORD_LOCK_TIME = 57690
const UNBOUNDED = 57691
const SECONDARY = 57692
const USER = 57693
const IDENTIFIED = 57694
const CIPHER = 57695
const ISSUER = 57696
const X509 = 57697
const SUBJECT = 57698
const SAN = 57699
const REQUIRE = 57700
const SSL = 57701
const NONE = 57702
const PASSWORD = 57703
const MAX_QUERIES_PER_HOUR = 57704
const MAX_UPDATES_PER_HOUR = 57705
const MAX_CONNECTIONS_PER_HOUR = 57706
const MAX_USER_CONNECTIONS = 57707
const FORMAT = 57708
const VERBOSE = 57709
const CONNECTION = 57710
const TRIGGERS = 57711
const PROFILES = 57712
const LOAD = 57713
const INFILE = 57714
const TERMINATED = 57715
const OPTIONALLY = 57716
const ENCLOSED = 57717
const ESCAPED = 57718
const STARTING = 57719
const LINES = 57720
const ROWS = 57721
const IMPORT = 57722
const MODUMP = 57723
const OVER = 57724
const PRECEDING = 57725
const FOLLOWING = 57726
const GROUPS = 57727
const DATABASES = 57728
const TABLES = 57729
const EXTENDED = 57730
const FULL = 57731
const PROCESSLIST = 57732
const FIELDS = 57733
const COLUMNS = 57734
const OPEN = 57735
const ERRORS = 57736
const WARNINGS = 57737
const INDEXES = 57738
const SCHEMAS = 57739
const NODE = 57740
const LOCKS = 57741
const TABLE_NUMBER = 57742
const COLUMN_NUMBER = 57743
const TABLE_VALUES = 57744
const NAMES = 57745
const GLOBAL = 57746
const SESSION = 57747
const ISOLATION = 57748
const LEVEL = 57749
const READ = 57750
const WRITE = 57751
const ONLY = 57752
const REPEATABLE = 57753
const COMMITTED = 57754
const UNCOMMITTED = 57755
const SERIALIZABLE = 57756
const LOCAL = 57757
const EVENTS = 57758
const PLUGINS = 57759
const CURRENT_TIMESTAMP = 57760
const DATABASE = 57761
const CURRENT_TIME = 57762
const LOCALTIME = 57763
const LOCALTIMESTAMP = 57764
const UTC_DATE = 57765
const UTC_TIME = 57766
const UTC_TIMESTAMP = 57767
const REPLACE = 57768
const CONVERT = 57769
const SEPARATOR = 57770
const TIMESTAMPDIFF = 57771
const CURRENT_DATE = 57772
const CURRENT_USER = 57773
const CURRENT_ROLE = 57774
const SECOND_MICROSECOND = 57775
const MINUTE_MICROSECOND = 57776
const MINUTE_SECOND = 57777
const HOUR_MICROSECOND = 57778
const HOUR_SECOND = 57779
const HOUR_MINUTE = 57780
const DAY_MICROSECOND = 57781
const DAY_SECOND = 57782
const DAY_MINUTE = 57783
const DAY_HOUR = 57784
const YEAR_MONTH = 57785
const SQL_TSI_HOUR = 57786
const SQL_TSI_DAY = 57787
const SQL_TSI_WEEK = 57788
const SQL_TSI_MONTH = 57789
const SQL_TSI_QUARTER = 57790
const SQL_TSI_YEAR = 57791
const SQL_TSI_SECOND = 57792
const SQL_TSI_MINUTE = 57793
const RECURSIVE = 57794
const CONFIG = 57795
const DRAINER = 57796
const MATCH = 57797
const AGAINST = 57798
const BOOLEAN = 57799
const LANGUAGE = 57800
const WITH = 57801
const QUERY = 57802
const EXPANSION = 57803
const ADDDATE = 57804
const BIT_AND = 57805
const BIT_OR = 57806
const BIT_XOR = 57807
const CAST = 57808
const COUNT = 57809
const APPROX_COUNT_DISTINCT = 57810
const APPROX_PERCENTILE = 57811
const CURDATE = 57812
const CURTIME = 57813
const DATE_ADD = 57814
const DATE_SUB = 57815
const EXTRACT = 57816
const GROUP_CONCAT = 57817
const MAX = 57818
const MID = 57819
const MIN = 57820
const NOW = 57821
const POSITION = 57822
const SESSION_USER = 57823
const STD = 57824
const STDDEV = 57825
const MEDIAN = 57826
const STDDEV_POP = 57827
const STDDEV_SAMP = 57828
const SUBDATE = 57829
const SUBSTR = 57830
const SUBSTRING = 57831
const SUM = 57832
const SYSDATE = 57833
const SYSTEM_USER = 57834
const TRANSLATE = 57835
const TRIM = 57836
const VARIANCE = 57837
const VAR_POP = 57838
const VAR_SAMP = 57839
const AVG = 57840
const ARROW = 57841
const ROW = 57842
const OUTFILE = 57843
const HEADER = 57844
const MAX_FILE_SIZE = 57845
const FORCE_QUOTE = 57846
const PARALLEL = 57847
const UNUSED = 57848
const BINDINGS = 57849
const DO = 57850
const DECLARE = 57851
const KILL = 57852
const QUERY_RESULT = 57853

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8542

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 94,
	21, 553,
	-2, 534,
	-1, 102,
	214, 744,
	-2, 791,
	-1, 121,
	42, 384,
	214, 384,
	241, 391,
	242, 391,
	413, 384,
	-2, 414,
	-1, 436,
	290, 93,
	389, 93,
	-2, 1354,
	-1, 494,
	67, 1160,
	-2, 1494,
	-1, 495,
	67, 1178,
	-2, 1465,
	-1, 499,
	67, 1179,
	-2, 1493,
	-1, 521,
	67, 1093,
	-2, 1545,
	-1, 522,
	67, 1094,
	-2, 1544,
	-1, 523,
	67, 1095,
	-2, 1534,
	-1, 524,
	67, 1509,
	-2, 1529,
	-1, 525,
	67, 1510,
	-2, 1530,
	-1, 526,
	67, 1511,
	-2, 1536,
	-1, 527,
	67, 1512,
	-2, 1519,
	-1, 528,
	67, 1513,
	-2, 1527,
	-1, 529,
	67, 1514,
	-2, 1537,
	-1, 530,
	67, 1515,
	-2, 1538,
	-1, 531,
	67, 1516,
	-2, 1543,
	-1, 532,
	67, 1517,
	-2, 1548,
	-1, 533,
	67, 1518,
	-2, 1549,
	-1, 535,
	67, 1157,
	-2, 1346,
	-1, 542,
	67, 1166,
	-2, 1372,
	-1, 546,
	67, 1170,
	-2, 1411,
	-1, 547,
	67, 1171,
	-2, 1489,
	-1, 555,
	67, 1181,
	-2, 1474,
	-1, 557,
	67, 1183,
	-2, 1484,
	-1, 558,
	67, 1184,
	-2, 1507,
	-1, 569,
	67, 1075,
	-2, 1539,
	-1, 570,
	67, 1076,
	-2, 1540,
	-1, 571,
	67, 1077,
	-2, 1541,
	-1, 578,
	21, 554,
	-2, 517,
	-1, 633,
	408, 414,
	409, 414,
	-2, 385,
	-1, 678,
	104, 1346,
	115, 1346,
	135, 1346,
	-2, 1321,
	-1, 715,
	21, 554,
	-2, 517,
	-1, 814,
	21, 553,
	-2, 982,
	-1, 1141,
	67, 1228,
	-2, 1491,
	-1, 1142,
	67, 1229,
	-2, 1492,
	-1, 1303,
	1, 770,
	68, 770,
	529, 770,
	-2, 777,
	-1, 1553,
	68, 1307,
	136, 1307,
	-2, 1476,
	-1, 1554,
	68, 1303,
	136, 1303,
	-2, 1475,
	-1, 1555,
	68, 1285,
	136, 1285,
	-2, 1462,
	-1, 1556,
	68, 1286,
	136, 1286,
	-2, 1467,
	-1, 1557,
	68, 1287,
	136, 1287,
	-2, 1399,
	-1, 1558,
	68, 1288,
	136, 1288,
	-2, 1393,
	-1, 1559,
	68, 1289,
	136, 1289,
	-2, 1337,
	-1, 1560,
	68, 1290,
	136, 1290,
	-2, 1464,
	-1, 1561,
	68, 1291,
	136, 1291,
	-2, 1397,
	-1, 1562,
	68, 1292,
	136, 1292,
	-2, 1392,
	-1, 1563,
	68, 1293,
	136, 1293,
	-2, 1385,
	-1, 1565,
	68, 1296,
	136, 1296,
	-2, 1507,
	-1, 1566,
	68, 1276,
	136, 1276,
	-2, 1494,
	-1, 1567,
	68, 1305,
	136, 1305,
	-2, 1465,
	-1, 1568,
	68, 1305,
	136, 1305,
	-2, 1493,
	-1, 1569,
	68, 1305,
	136, 1305,
	-2, 1355,
	-1, 1570,
	68, 1303,
	136, 1303,
	-2, 1484,
	-1, 1571,
	68, 1300,
	136, 1300,
	-2, 1377,
	-1, 1572,
	67, 1258,
	68, 1258,
	136, 1258,
	351, 1258,
	352, 1258,
	353, 1258,
	-2, 1336,
	-1, 1573,
	67, 1259,
	68, 1259,
	136, 1259,
	351, 1259,
	352, 1259,
	353, 1259,
	-2, 1338,
	-1, 1574,
	67, 1262,
	68, 1262,
	136, 1262,
	351, 1262,
	352, 1262,
	353, 1262,
	-2, 1466,
	-1, 1575,
	67, 1264,
	68, 1264,
	136, 1264,
	351, 1264,
	352, 1264,
	353, 1264,
	-2, 1449,
	-1, 1576,
	67, 1266,
	68, 1266,
	136, 1266,
	351, 1266,
	352, 1266,
	353, 1266,
	-2, 1398,
	-1, 1577,
	67, 1268,
	68, 1268,
	136, 1268,
	351, 1268,
	352, 1268,
	353, 1268,
	-2, 1381,
	-1, 1578,
	67, 1269,
	68, 1269,
	136, 1269,
	351, 1269,
	352, 1269,
	353, 1269,
	-2, 1382,
	-1, 1579,
	67, 1271,
	68, 1271,
	136, 1271,
	351, 1271,
	352, 1271,
	353, 1271,
	-2, 1335,
	-1, 1580,
	68, 1310,
	136, 1310,
	351, 1310,
	352, 1310,
	353, 1310,
	-2, 1360,
	-1, 1581,
	68, 1310,
	136, 1310,
	351, 1310,
	352, 1310,
	353, 1310,
	-2, 1373,
	-1, 1582,
	68, 1313,
	136, 1313,
	351, 1313,
	352, 1313,
	353, 1313,
	-2, 1356,
	-1, 1583,
	68, 1310,
	136, 1310,
	351, 1310,
	352, 1310,
	353, 1310,
	-2, 1434,
	-1, 1596,
	1, 771,
	68, 771,
	529, 771,
	-2, 777,
	-1, 1653,
	21, 553,
	-2, 645,
	-1, 1833,
	65, 460,
	136, 460,
	-2, 886,
	-1, 2130,
	88, 777,
	131, 777,
	168, 777,
	171, 777,
	-2, 834,
	-1, 2132,
	275, 950,
	-2, 929,
	-1, 2143,
	88, 777,
	131, 777,
	168, 777,
	171, 777,
	-2, 834,
	-1, 2146,
	65, 460,
	136, 460,
	-2, 887,
	-1, 2195,
	88, 777,
	131, 777,
	168, 777,
	171, 777,
	-2, 835,
	-1, 2223,
	275, 950,
	-2, 930,
	-1, 2634,
	68, 806,
	136, 806,
	-2, 777,
	-1, 2638,
	68, 806,
	136, 806,
	-2, 777,
	-1, 2652,
	68, 810,
	136, 810,
	-2, 777,
	-1, 2657,
	68, 811,
	136, 811,
	-2, 777,
}

const yyPrivate = 57344

const yyLast = 30404

var yyAct = [...]int{
	466, 2196, 2638, 1208, 2646, 2637, 2610, 447, 2583, 1122,
	445, 468, 2475, 2552, 2599, 2235, 2535, 2436, 2536, 2170,
	2416, 2366, 842, 2271, 2078, 2373, 2449, 2190, 1028, 1395,
	1543, 2360, 2192, 2079, 2377, 2424, 980, 492, 2191, 142,
	142, 579, 2269, 2290, 1648, 142, 382, 389, 2245, 677,
	389, 2126, 1118, 1262, 2265, 1310, 1836, 1125, 2194, 2244,
	2013, 2017, 1807, 2224, 1684, 1423, 1064, 1856, 1378, 1855,
	1348, 2114, 1647, 2076, 943, 2136, 2022, 2018, 394, 1551,
	449, 1312, 1725, 1693, 1447, 400, 1692, 1877, 2053, 1992,
	438, 1356, 574, 1989, 439, 1987, 2070, 709, 1549, 1605,
	1260, 1897, 1766, 1938, 1724, 614, 1430, 444, 1279, 1891,
	2011, 1424, 1371, 1431, 683, 1443, 1442, 1351, 1636, 1809,
	3, 387, 31, 1604, 1804, 959, 2199, 1207, 957, 574,
	141, 141, 1687, 1322, 687, 42, 373, 1597, 707, 386,
	19, 142, 1265, 383, 8, 1349, 384, 6, 686, 30,
	1475, 385, 7, 1121, 1287, 1299, 878, 1444, 1116, 1429,
	448, 1055, 1547, 1037, 1375, 1589, 1321, 93, 970, 1454,
	1531, 637, 437, 681, 1171, 446, 1107, 378, 1270, 1320,
	42, 456, 1155, 1418, 1115, 1400, 726, 669, 923, 1655,
	1336, 1298, 375, 613, 1007, 576, 1177, 966, 1178, 16,
	402, 403, 9, 4, 981, 131, 1054, 1932, 134, 578,
	388, 941, 670, 629, 1020, 611, 1932, 1461, 1727, 137,
	1451, 136, 2356, 397, 2266, 1685, 2077, 1283, 2458, 1323,
	1426, 837, 711, 577, 843, 135, 135, 135, 135, 38,
	123, 103, 746, 1712, 587, 1448, 1009, 2182, 371, 2466,
	2493, 2183, 398, 1720, 1961, 1459, 1074, 706, 31, 993,
	392, 994, 135, 1671, 38, 123, 103, 780, 1672, 651,
	1389, 42, 1071, 1688, 2086, 135, 19, 135, 135, 977,
	8, 893, 1108, 6, 1112, 30, 1806, 135, 7, 1359,
	1360, 2524, 1067, 1073, 132, 132, 2522, 1010, 647, 135,
	684, 38, 123, 103, 573, 986, 987, 1332, 1111, 2539,
	2540, 138, 984, 1912, 92, 983, 986, 987, 1060, 132,
	773, 1124, 778, 92, 2276, 1092, 680, 679, 2358, 2459,
	2460, 616, 132, 1767, 132, 132, 588, 1898, 1805, 399,
	2556, 2557, 2451, 2454, 132, 564, 1198, 563, 565, 566,
	2080, 567, 568, 1899, 2451, 1900, 132, 2361, 2362, 2363,
	2364, 2268, 2080, 652, 1127, 754, 761, 756, 762, 1707,
	720, 729, 2372, 2094, 2115, 142, 719, 1372, 1113, 783,
	784, 785, 782, 881, 580, 2001, 1455, 871, 2122, 2003,
	1528, 389, 389, 648, 142, 757, 764, 2465, 1629, 1110,
	1588, 901, 905, 907, 909, 911, 912, 914, 718, 918,
	915, 916, 917, 714, 716, 896, 897, 898, 899, 879,
	880, 902, 654, 882, 1364, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 894, 900, 1998, 1999, 1103,
	2188, 440, 2538, 2275, 904, 906, 908, 910, 913, 2277,
	2242, 975, 2000, 1799, 816, 1254, 1253, 102, 1993, 133,
	1925, 750, 759, 1126, 1812, 713, 717, 775, 2282, 2468,
	2469, 1927, 1717, 650, 776, 777, 649, 749, 121, 2285,
	895, 1460, 995, 741, 752, 737, 729, 715, 1852, 1631,
	653, 1194, 2185, 1387, 1388, 1191, 755, 758, 1697, 1193,
	1190, 1192, 1196, 1197, 1003, 1109, 1997, 1195, 771, 772,
	635, 2517, 1368, 1213, 42, 42, 682, 2341, 617, 2630,
	751, 760, 1133, 1136, 1137, 391, 390, 2378, 2647, 2565,
	766, 2521, 767, 1134, 2477, 1066, 2572, 2526, 692, 691,
	693, 1464, 1466, 1467, 640, 731, 730, 965, 2500, 684,
	2438, 433, 2473, 2474, 435, 2477, 2334, 722, 723, 434,
	769, 2425, 2426, 2427, 2429, 2428, 2621, 2325, 690, 1820,
	1821, 1822, 1823, 2303, 2302, 2329, 2528, 2529, 2483, 2401,
	1818, 1016, 1449, 1449, 1015, 1449, 979, 978, 753, 763,
	940, 942, 739, 997, 964, 963, 2648, 738, 2611, 2654,
	1995, 734, 735, 2098, 2291, 2106, 710, 1476, 944, 398,
	746, 724, 1931, 614, 2448, 634, 695, 920, 684, 2642,
	1879, 1881, 1008, 1713, 615, 1662, 765, 818, 819, 820,
	821, 1452, 986, 987, 688, 618, 643, 986, 987, 822,
	1201, 1202, 1203, 1204, 1205, 1206, 1199, 1200, 2467, 948,
	976, 1983, 872, 985, 1005, 696, 2026, 1930, 952, 638,
	731, 730, 770, 951, 950, 982, 393, 945, 946, 947,
	39, 949, 574, 574, 574, 1462, 2004, 1032, 1032, 1450,
	142, 577, 1373, 2602, 1061, 768, 1463, 954, 2461, 2462,
	745, 639, 644, 689, 1940, 1939, 389, 942, 1058, 1058,
	1883, 104, 104, 104, 104, 1659, 1034, 2184, 631, 1721,
	633, 647, 1658, 1069, 1013, 630, 628, 627, 1039, 632,
	619, 620, 621, 622, 623, 903, 645, 646, 104, 1030,
	1030, 2437, 39, 1090, 1811, 852, 853, 740, 641, 642,
	1994, 104, 2641, 104, 104, 1135, 1032, 2527, 1032, 719,
	973, 1075, 2283, 104, 1362, 1928, 682, 989, 990, 1363,
	992, 694, 1361, 2189, 1465, 104, 2653, 608, 609, 610,
	1365, 1038, 699, 704, 705, 636, 1880, 1661, 1660, 1996,
	2027, 1123, 2330, 2331, 925, 1104, 656, 1815, 1816, 927,
	2327, 657, 972, 2605, 2326, 1011, 1012, 2660, 781, 2603,
	578, 1814, 2402, 2404, 2405, 2406, 2403, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1313,
	1004, 1700, 1834, 1166, 1167, 2050, 2659, 648, 956, 1176,
	1504, 1065, 746, 1503, 1313, 1072, 2131, 996, 1222, 998,
	1403, 1085, 1086, 2650, 988, 1537, 1712, 991, 2031, 1228,
	1704, 967, 971, 971, 1646, 1099, 1541, 1801, 1367, 42,
	1230, 1235, 1236, 1120, 2631, 781, 1014, 581, 42, 967,
	1826, 967, 574, 1098, 1674, 1001, 1002, 1095, 1006, 1645,
	1094, 1686, 1448, 786, 1023, 1024, 1025, 2023, 2026, 1026,
	1027, 1040, 815, 371, 781, 1106, 1138, 1101, 1542, 1117,
	824, 781, 1081, 2626, 1076, 1059, 1052, 650, 1053, 648,
	649, 2651, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1835,
	1276, 1077, 830, 2600, 2601, 783, 784, 785, 782, 578,
	1089, 1255, 1457, 1097, 2625, 1261, 1096, 1093, 1088, 1646,
	701, 702, 703, 1835, 142, 1114, 1297, 1032, 1119, 1302,
	1303, 1221, 2297, 1269, 2050, 2614, 614, 1277, 660, 1311,
	1209, 1401, 1212, 1032, 2613, 1591, 1223, 1005, 2588, 2585,
	1540, 2627, 382, 1508, 2546, 2541, 1229, 2530, 1231, 1674,
	1258, 1439, 1385, 955, 781, 1646, 1164, 1165, 1169, 650,
	1157, 1280, 649, 1827, 1337, 1337, 1017, 1005, 2587, 1005,
	2149, 2032, 142, 1297, 1297, 1893, 659, 1032, 1358, 2501,
	662, 661, 2027, 2498, 2497, 1335, 746, 2020, 574, 1837,
	1032, 2021, 2024, 1457, 2496, 1304, 1305, 1306, 2495, 1296,
	1211, 2485, 1457, 1301, 1715, 1294, 1457, 2586, 1487, 968,
	1267, 1268, 2287, 2287, 2121, 1674, 1297, 1032, 1714, 1394,
	142, 142, 1398, 1232, 2351, 1326, 602, 2350, 1405, 2286,
	2174, 1590, 142, 1902, 783, 784, 785, 782, 1222, 1422,
	1339, 1333, 1334, 2025, 1222, 1222, 1874, 2502, 1790, 1434,
	1397, 2287, 2287, 1788, 1250, 1706, 1343, 1344, 1786, 1784,
	1319, 1411, 2287, 1342, 1625, 1272, 2287, 1275, 1772, 2486,
	1300, 1728, 1369, 1311, 1328, 1329, 1325, 1032, 1446, 1486,
	783, 784, 785, 782, 1284, 1710, 1316, 1278, 1330, 1500,
	1702, 1384, 2352, 1105, 743, 1609, 1698, 2287, 1903, 1391,
	581, 1903, 1488, 1393, 1694, 1374, 1314, 1315, 969, 1057,
	1057, 1396, 1396, 1608, 1646, 1538, 1791, 1438, 1307, 1308,
	1512, 1789, 1511, 1396, 1331, 1959, 1785, 1785, 1440, 712,
	1300, 1318, 1469, 1408, 1324, 1456, 781, 1293, 1082, 781,
	1078, 919, 828, 1473, 1474, 1657, 1340, 732, 1341, 604,
	712, 1420, 591, 1609, 798, 1338, 658, 1420, 1695, 601,
	600, 1382, 1383, 967, 1699, 744, 744, 1347, 1346, 606,
	1117, 2036, 1695, 1922, 1327, 1370, 2606, 2597, 960, 1808,
	594, 1609, 961, 1537, 1019, 971, 968, 42, 781, 1021,
	781, 1215, 1214, 1128, 1129, 1130, 1131, 1132, 1390, 2487,
	1022, 1392, 2051, 1457, 2046, 684, 1083, 1509, 1379, 1380,
	1381, 684, 1933, 712, 1516, 1409, 1853, 921, 1705, 1664,
	721, 599, 1735, 1172, 2514, 598, 1163, 1427, 785, 782,
	1436, 589, 1295, 1172, 1432, 1482, 1433, 1173, 1174, 1175,
	1437, 1160, 1162, 1159, 1210, 1161, 592, 782, 1216, 2337,
	2320, 2636, 1441, 799, 800, 801, 802, 803, 804, 805,
	798, 2617, 438, 719, 1584, 1018, 2336, 590, 801, 802,
	803, 804, 805, 798, 2140, 142, 142, 142, 1606, 2135,
	1901, 605, 2566, 1241, 663, 969, 1477, 1988, 1613, 1005,
	1952, 1468, 2620, 655, 1616, 1552, 684, 2561, 1618, 783,
	784, 785, 782, 2412, 2505, 593, 1471, 1472, 1737, 2418,
	1005, 1157, 1470, 2396, 2395, 1481, 789, 790, 791, 792,
	793, 794, 795, 787, 1650, 1650, 1358, 1650, 1544, 1545,
	783, 784, 785, 782, 1281, 1951, 2619, 1496, 1285, 1233,
	1234, 1288, 2411, 1237, 1238, 1239, 1240, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1032, 142, 2394, 783, 784,
	785, 782, 2391, 2385, 2410, 2408, 1600, 1601, 1602, 2398,
	719, 1615, 1058, 603, 1358, 2382, 2381, 1679, 2118, 1681,
	1619, 1620, 2002, 783, 784, 785, 782, 1222, 1297, 1617,
	1495, 2186, 2119, 1585, 1978, 1977, 1654, 1652, 433, 1656,
	1598, 435, 1552, 2409, 2407, 1533, 434, 1669, 2397, 1708,
	1918, 1226, 1446, 783, 784, 785, 782, 2171, 1895, 1032,
	1536, 1032, 1227, 1032, 1535, 1534, 1621, 1530, 719, 1529,
	2187, 2120, 1281, 1079, 1546, 1622, 1623, 938, 1281, 1281,
	1592, 1627, 2558, 2532, 1678, 2417, 2516, 1038, 2481, 2480,
	2463, 1690, 1676, 2446, 2533, 2399, 1696, 2392, 1032, 1753,
	1722, 1683, 2388, 2387, 2386, 2376, 2322, 2284, 1614, 2267,
	1744, 1760, 2169, 1718, 1624, 1032, 1626, 783, 784, 785,
	782, 1759, 1632, 2167, 2153, 2129, 1752, 1762, 783, 784,
	785, 782, 2117, 684, 2116, 2113, 918, 915, 916, 917,
	2346, 2103, 1749, 1761, 1748, 1747, 1745, 2097, 1726, 2047,
	1030, 1982, 1976, 1929, 1665, 1666, 1667, 1896, 1886, 1670,
	1539, 1764, 1532, 783, 784, 785, 782, 1030, 520, 519,
	2488, 1412, 1675, 1677, 1739, 971, 1410, 1290, 1080, 1719,
	2177, 469, 478, 851, 847, 2365, 1691, 470, 846, 477,
	471, 475, 474, 472, 473, 829, 1733, 783, 784, 785,
	782, 1032, 708, 783, 784, 785, 782, 1746, 2143, 1711,
	1709, 2142, 1117, 2130, 1833, 2108, 1792, 1716, 481, 94,
	1839, 1479, 2107, 2102, 1483, 1768, 2176, 2090, 2069, 2068,
	1773, 2037, 1729, 1730, 1269, 135, 1848, 1957, 123, 103,
	1950, 479, 1802, 1942, 719, 1358, 1358, 1358, 1358, 783,
	784, 785, 782, 1743, 2100, 1937, 719, 1358, 1825, 1890,
	1650, 372, 1732, 1800, 94, 1494, 1787, 1783, 1782, 1498,
	1491, 476, 1517, 1032, 1507, 1505, 1857, 783, 784, 785,
	782, 1502, 1793, 1484, 142, 142, 1510, 1501, 1857, 1513,
	1514, 1515, 132, 2649, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1851, 1526, 1873, 1831, 1222, 1796, 1840, 1842,
	1908, 1499, 1493, 1844, 1490, 1222, 1489, 1917, 1225, 1224,
	135, 1267, 1268, 1032, 1044, 1870, 1924, 1042, 2596, 1750,
	1751, 2590, 2573, 1598, 2570, 2568, 2504, 1832, 1838, 31,
	783, 784, 785, 782, 1824, 844, 783, 784, 785, 782,
	1841, 685, 42, 2434, 1300, 94, 1817, 19, 1845, 1846,
	2422, 8, 1854, 1850, 6, 1610, 30, 2419, 1847, 7,
	1272, 1904, 1275, 1869, 1871, 1888, 1889, 132, 578, 1914,
	1280, 1955, 2414, 2353, 1916, 2344, 1872, 1887, 2343, 1884,
	1858, 1859, 1860, 1861, 2342, 1882, 2339, 2333, 2318, 2060,
	1954, 1257, 2160, 1894, 783, 784, 785, 782, 1943, 1921,
	2158, 1945, 719, 1947, 1926, 2141, 2124, 1963, 1991, 1905,
	1911, 1915, 1909, 783, 784, 785, 782, 1266, 1259, 2006,
	142, 1281, 1281, 1281, 1913, 1907, 958, 1830, 1920, 719,
	719, 719, 1934, 1953, 1552, 1358, 1606, 1829, 2035, 1935,
	2578, 1781, 1828, 1057, 2039, 1941, 1944, 1271, 1843, 1274,
	1263, 1701, 1991, 826, 1948, 1949, 783, 784, 785, 782,
	1663, 2016, 2016, 2016, 783, 784, 785, 782, 1962, 1607,
	1158, 132, 1964, 1965, 1966, 1967, 1417, 1968, 1969, 1970,
	1971, 1972, 1973, 1974, 1975, 1399, 1292, 1264, 2008, 2009,
	2010, 1946, 1102, 1068, 1753, 1979, 922, 870, 869, 868,
	1984, 867, 866, 865, 1297, 2033, 864, 863, 1297, 862,
	861, 2007, 796, 806, 807, 799, 800, 801, 802, 803,
	804, 805, 798, 2038, 1736, 1986, 860, 2040, 2041, 2030,
	859, 142, 858, 1754, 1755, 2034, 857, 2049, 1757, 1758,
	2028, 2029, 1780, 2340, 2048, 2045, 2044, 856, 855, 2058,
	1763, 1779, 2061, 854, 850, 849, 2065, 2066, 2067, 848,
	845, 2075, 841, 840, 2062, 783, 784, 785, 782, 838,
	837, 2043, 2088, 2042, 783, 784, 785, 782, 2091, 1281,
	836, 835, 1794, 1795, 1288, 834, 833, 2085, 94, 94,
	685, 2074, 1612, 1778, 2089, 806, 807, 799, 800, 801,
	802, 803, 804, 805, 798, 2092, 2093, 832, 831, 1032,
	1032, 827, 825, 748, 1594, 2096, 783, 784, 785, 782,
	2134, 736, 2095, 2576, 2084, 2537, 2087, 2054, 2055, 2057,
	1819, 1650, 1358, 2146, 1673, 1414, 747, 2125, 797, 796,
	806, 807, 799, 800, 801, 802, 803, 804, 805, 798,
	1866, 719, 2059, 2109, 1777, 1867, 1863, 1506, 1862, 814,
	1864, 1030, 2127, 2111, 1776, 1865, 2112, 1638, 1641, 1642,
	1643, 1639, 2635, 1640, 1644, 1906, 2165, 783, 784, 785,
	782, 1775, 1703, 1857, 719, 1774, 1798, 783, 784, 785,
	782, 2154, 2148, 1980, 1981, 2133, 2132, 2138, 2137, 2139,
	2137, 76, 2145, 2144, 783, 784, 785, 782, 783, 784,
	785, 782, 2163, 1723, 2162, 2147, 1857, 2152, 2155, 1416,
	2156, 2150, 1985, 1599, 2151, 719, 1868, 1251, 1642, 1643,
	41, 1771, 719, 40, 924, 1415, 2246, 2248, 139, 2246,
	2246, 2166, 1770, 1281, 368, 1689, 2179, 1281, 2161, 1544,
	1545, 1586, 2173, 2172, 783, 784, 785, 782, 1062, 1311,
	2371, 2261, 2175, 742, 2016, 783, 784, 785, 782, 582,
	583, 584, 585, 369, 2181, 1849, 370, 1803, 367, 1936,
	1309, 1291, 581, 2281, 2278, 2247, 1769, 1215, 1214, 928,
	2549, 2258, 2221, 1765, 2243, 936, 937, 2293, 2249, 2250,
	2254, 1956, 2255, 2148, 1630, 2178, 934, 935, 1345, 783,
	784, 785, 782, 1000, 2259, 2251, 783, 784, 785, 782,
	932, 933, 930, 931, 999, 774, 2256, 2257, 2064, 1435,
	1756, 1043, 1032, 962, 926, 2591, 2279, 2511, 2321, 2509,
	2471, 2456, 581, 142, 2455, 2453, 2288, 2379, 2354, 2296,
	2264, 2263, 2248, 783, 784, 785, 782, 2180, 2168, 2082,
	2294, 2295, 2081, 2298, 2299, 2300, 2301, 2072, 929, 2304,
	2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314,
	2315, 2316, 2317, 2323, 2127, 2243, 1734, 2319, 719, 2071,
	1485, 1041, 1892, 1313, 2380, 1919, 372, 2347, 2349, 2348,
	2345, 2580, 2579, 2579, 1168, 1492, 733, 1650, 2580, 783,
	784, 785, 782, 783, 784, 785, 782, 2413, 94, 2375,
	2335, 2083, 94, 974, 49, 1386, 2374, 783, 784, 785,
	782, 1036, 1, 94, 2338, 783, 784, 785, 782, 1289,
	719, 586, 94, 719, 719, 719, 1875, 1876, 2063, 1878,
	1453, 2393, 1628, 2441, 2444, 1587, 2005, 953, 607, 2383,
	2384, 1217, 1087, 698, 728, 2389, 2390, 2423, 1084, 727,
	2431, 2432, 2433, 2420, 2445, 725, 1170, 2430, 483, 1633,
	1425, 2415, 2260, 2439, 1032, 1032, 2440, 2548, 2582, 2457,
	2503, 2452, 2450, 2551, 2099, 1100, 467, 582, 583, 584,
	585, 2101, 1638, 1641, 1642, 1643, 1639, 2470, 1640, 1644,
	581, 1198, 2478, 2479, 2447, 142, 2357, 2507, 2359, 2270,
	1458, 779, 1910, 719, 625, 514, 490, 839, 1070, 2618,
	1063, 1960, 700, 489, 2123, 719, 1030, 1030, 1813, 597,
	697, 626, 1527, 2490, 2484, 2355, 1252, 1273, 1256, 2645,
	2494, 2634, 2609, 2589, 2476, 2629, 2520, 2571, 2274, 2272,
	2273, 2564, 2499, 2472, 404, 1366, 572, 667, 2435, 1413,
	405, 1611, 719, 2510, 2506, 2512, 2513, 2508, 797, 796,
	806, 807, 799, 800, 801, 802, 803, 804, 805, 798,
	2594, 2464, 2421, 1281, 595, 1593, 2157, 2523, 2525, 2159,
	596, 1596, 1595, 2547, 2518, 2555, 1396, 2531, 1139, 788,
	1156, 2104, 2105, 2164, 823, 443, 2554, 1480, 2562, 455,
	719, 2542, 2543, 2544, 2545, 1810, 2236, 1885, 2515, 2563,
	48, 2559, 47, 2567, 46, 2569, 2560, 45, 1404, 797,
	796, 806, 807, 799, 800, 801, 802, 803, 804, 805,
	798, 2574, 1123, 2577, 2575, 146, 1194, 2584, 485, 145,
	1191, 2443, 2581, 2553, 1193, 1190, 1192, 1196, 1197, 719,
	465, 719, 1195, 464, 463, 462, 1637, 1635, 2593, 1634,
	2595, 1353, 1352, 2252, 2598, 1402, 2534, 2555, 2608, 2491,
	2492, 2332, 2400, 2328, 2324, 2604, 2482, 719, 2554, 2195,
	2607, 1123, 2222, 1123, 2612, 2223, 2616, 2229, 877, 873,
	875, 2592, 2628, 2584, 2622, 876, 1357, 874, 1742, 1738,
	2014, 2015, 2012, 939, 893, 2280, 2632, 2110, 1550, 1123,
	1548, 2056, 2052, 1421, 2633, 2289, 2640, 1286, 1797, 1354,
	2644, 1350, 2253, 575, 2643, 32, 27, 5, 2652, 29,
	28, 14, 15, 2655, 2640, 2657, 2656, 13, 2658, 2644,
	797, 796, 806, 807, 799, 800, 801, 802, 803, 804,
	805, 798, 1091, 12, 18, 26, 685, 25, 1958, 24,
	86, 85, 685, 23, 84, 83, 82, 81, 22, 11,
	80, 94, 79, 78, 1179, 1180, 1181, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1201, 1202, 1203, 1204, 1205,
	1206, 1199, 1200, 21, 73, 20, 2370, 74, 71, 72,
	59, 58, 57, 69, 68, 67, 881, 797, 796, 806,
	807, 799, 800, 801, 802, 803, 804, 805, 798, 66,
	65, 64, 624, 56, 901, 905, 907, 909, 911, 912,
	914, 55, 918, 915, 916, 917, 54, 53, 896, 897,
	898, 899, 879, 880, 902, 70, 882, 814, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 894, 900,
	63, 62, 61, 60, 52, 51, 50, 904, 906, 908,
	910, 913, 101, 100, 99, 98, 97, 96, 33, 34,
	35, 36, 111, 809, 110, 813, 112, 113, 108, 2370,
	106, 109, 107, 105, 1731, 43, 10, 17, 2, 0,
	810, 812, 808, 895, 811, 797, 796, 806, 807, 799,
	800, 801, 802, 803, 804, 805, 798, 797, 796, 806,
	807, 799, 800, 801, 802, 803, 804, 805, 798, 0,
	0, 0, 0, 0, 0, 1478, 0, 0, 0, 0,
	0, 2489, 0, 0, 0, 0, 313, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 797, 796,
	806, 807, 799, 800, 801, 802, 803, 804, 805, 798,
	457, 0, 0, 0, 220, 0, 0, 245, 0, 0,
	0, 488, 0, 0, 305, 259, 0, 0, 0, 0,
	543, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 0, 0, 482, 520, 519, 469, 478,
	0, 0, 201, 144, 470, 0, 477, 471, 475, 474,
	472, 473, 0, 535, 0, 1740, 1741, 0, 0, 0,
	441, 454, 2367, 458, 0, 0, 2370, 0, 0, 0,
	0, 0, 0, 0, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 451, 452, 0, 0,
	0, 0, 497, 0, 453, 0, 0, 460, 479, 480,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 1357, 292, 218, 231, 214, 272, 476, 495,
	499, 213, 557, 493, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 558,
	235, 283, 249, 284, 236, 261, 260, 262, 2624, 0,
	0, 0, 0, 362, 797, 796, 806, 807, 799, 800,
	801, 802, 803, 804, 805, 798, 0, 491, 903, 0,
	336, 0, 0, 541, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 494, 0, 295, 277, 554, 442,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 539, 273, 0,
	0, 553, 534, 536, 537, 540, 544, 545, 546, 547,
	548, 550, 552, 556, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 94, 2368, 0, 0,
	0, 2369, 0, 555, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 498, 263, 264, 265, 266, 542, 0,
	206, 359, 288, 1357, 1357, 1357, 1357, 0, 0, 0,
	0, 0, 0, 0, 0, 1357, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	564, 538, 563, 565, 566, 562, 567, 568, 549, 461,
	0, 502, 560, 559, 561, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 527, 507, 508, 509, 459, 510,
	505, 506, 528, 500, 524, 525, 484, 503, 511, 523,
	512, 526, 529, 530, 569, 570, 518, 571, 515, 531,
	522, 521, 513, 501, 532, 533, 487, 486, 516, 517,
	504, 0, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 313, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 0, 0, 1357, 220, 0, 0, 245, 0, 0,
	0, 488, 0, 0, 305, 259, 0, 0, 94, 0,
	543, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 0, 0, 482, 520, 519, 469, 478,
	0, 0, 201, 144, 470, 0, 477, 471, 475, 474,
	472, 473, 0, 535, 0, 0, 0, 0, 0, 0,
	441, 454, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 94, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 451, 452, 0, 0,
	0, 0, 497, 0, 453, 0, 0, 460, 479, 480,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 476, 495,
	499, 213, 557, 493, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 558,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 0, 0,
	336, 0, 0, 541, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 494, 0, 295, 277, 554, 442,
	1357, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 1219,
	1218, 1220, 348, 227, 184, 185, 331, 539, 273, 0,
	0, 553, 534, 536, 537, 540, 544, 545, 546, 547,
	548, 550, 552, 556, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 555, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 498, 263, 264, 265, 266, 542, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	564, 538, 563, 565, 566, 562, 567, 568, 549, 461,
	0, 502, 560, 559, 561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 527, 507, 508, 509, 459, 510,
	505, 506, 528, 500, 524, 525, 484, 503, 511, 523,
	512, 526, 529, 530, 569, 570, 518, 571, 515, 531,
	522, 521, 513, 501, 532, 533, 487, 486, 516, 517,
	504, 313, 496, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 0, 0, 0, 220,
	0, 0, 245, 0, 0, 0, 488, 0, 0, 305,
	259, 0, 0, 0, 0, 543, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 0, 0,
	482, 520, 519, 469, 478, 0, 0, 201, 144, 470,
	0, 477, 471, 475, 474, 472, 473, 0, 535, 0,
	0, 0, 0, 0, 0, 441, 454, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 451, 452, 0, 0, 0, 0, 497, 0, 453,
	0, 0, 460, 479, 480, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 476, 495, 499, 213, 557, 493, 334,
	196, 0, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 558, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 0, 0, 336, 0, 0, 541, 0,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 494,
	0, 295, 277, 554, 442, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 539, 273, 0, 0, 553, 534, 536, 537,
	540, 544, 545, 546, 547, 548, 550, 552, 556, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 2368, 0, 0, 0, 2369, 0, 555, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 498, 263,
	264, 265, 266, 542, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	270, 237, 303, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 252, 0, 0, 564, 538, 563, 565, 566,
	562, 567, 568, 549, 461, 0, 502, 560, 559, 561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 527,
	507, 508, 509, 459, 510, 505, 506, 528, 500, 524,
	525, 484, 503, 511, 523, 512, 526, 529, 530, 569,
	570, 518, 571, 515, 531, 522, 521, 513, 501, 532,
	533, 487, 486, 516, 517, 504, 313, 496, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 0, 0, 0, 220, 1282, 0, 245, 0, 0,
	0, 488, 0, 0, 305, 259, 0, 0, 0, 0,
	543, 551, 0, 0, 0, 0, 0, 0, 0, 1376,
	0, 0, 450, 0, 0, 482, 520, 519, 469, 478,
	0, 0, 201, 144, 470, 0, 477, 471, 475, 474,
	472, 473, 0, 535, 0, 0, 0, 0, 0, 0,
	441, 454, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 451, 452, 0, 0,
	0, 0, 497, 0, 453, 0, 0, 1377, 479, 480,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 476, 495,
	499, 213, 557, 493, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 558,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 0, 0,
	336, 0, 0, 541, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 494, 0, 295, 277, 554, 442,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 539, 273, 0,
	0, 553, 534, 536, 537, 540, 544, 545, 546, 547,
	548, 550, 552, 556, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 555, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 498, 263, 264, 265, 266, 542, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	564, 538, 563, 565, 566, 562, 567, 568, 549, 461,
	0, 502, 560, 559, 561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 527, 507, 508, 509, 459, 510,
	505, 506, 528, 500, 524, 525, 484, 503, 511, 523,
	512, 526, 529, 530, 569, 570, 518, 571, 515, 531,
	522, 521, 513, 501, 532, 533, 487, 486, 516, 517,
	504, 135, 313, 496, 344, 345, 346, 366, 330, 0,
	217, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	220, 0, 0, 245, 0, 0, 0, 817, 0, 0,
	305, 259, 0, 0, 0, 0, 543, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 0,
	0, 482, 520, 519, 469, 478, 0, 0, 201, 144,
	470, 0, 477, 471, 475, 474, 472, 473, 0, 535,
	0, 0, 0, 0, 0, 0, 441, 454, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 451, 452, 0, 0, 0, 0, 497, 0,
	453, 0, 0, 460, 479, 480, 0, 0, 192, 310,
	326, 202, 301, 339, 207, 308, 197, 274, 297, 0,
	0, 194, 324, 307, 256, 239, 240, 193, 0, 292,
	218, 231, 214, 272, 476, 495, 499, 213, 557, 493,
	334, 196, 0, 333, 271, 320, 325, 257, 251, 195,
	322, 255, 250, 243, 222, 558, 235, 283, 249, 284,
	236, 261, 260, 262, 0, 0, 0, 0, 0, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 336, 0, 0, 541,
	0, 0, 0, 309, 0, 0, 244, 0, 0, 0,
	494, 0, 295, 277, 554, 442, 0, 293, 247, 321,
	285, 327, 311, 335, 289, 286, 187, 312, 216, 258,
	198, 200, 212, 219, 221, 223, 224, 267, 268, 280,
	300, 314, 315, 316, 215, 208, 294, 209, 233, 210,
	188, 302, 211, 190, 281, 319, 0, 229, 290, 254,
	191, 253, 282, 318, 317, 199, 343, 349, 350, 354,
	0, 355, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 348, 227,
	184, 185, 331, 539, 273, 0, 0, 553, 534, 536,
	537, 540, 544, 545, 546, 547, 548, 550, 552, 556,
	298, 0, 0, 0, 0, 0, 238, 279, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 329, 341, 358, 361, 0, 0, 0,
	189, 360, 0, 0, 0, 0, 0, 0, 0, 555,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 498,
	263, 264, 265, 266, 542, 0, 206, 359, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 226, 232, 0, 234,
	205, 278, 228, 338, 241, 0, 364, 0, 0, 0,
	0, 270, 237, 303, 242, 248, 291, 337, 276, 296,
	203, 328, 304, 252, 0, 0, 564, 538, 563, 565,
	566, 562, 567, 568, 549, 461, 0, 502, 560, 559,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 246, 104, 287, 225,
	527, 507, 508, 509, 459, 510, 505, 506, 528, 500,
	524, 525, 484, 503, 511, 523, 512, 526, 529, 530,
	569, 570, 518, 571, 515, 531, 522, 521, 513, 501,
	532, 533, 487, 486, 516, 517, 504, 313, 496, 0,
	344, 345, 346, 366, 330, 0, 217, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 0, 0, 0, 220, 2623, 0, 245, 0,
	0, 0, 488, 0, 0, 305, 259, 0, 0, 0,
	0, 543, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 0, 0, 482, 520, 519, 469,
	478, 0, 0, 201, 144, 470, 0, 477, 471, 475,
	474, 472, 473, 0, 535, 0, 0, 0, 0, 0,
	0, 441, 454, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 451, 452, 0,
	0, 0, 0, 497, 0, 453, 0, 0, 460, 479,
	480, 0, 0, 192, 310, 326, 202, 301, 339, 207,
	308, 197, 274, 297, 0, 0, 194, 324, 307, 256,
	239, 240, 193, 0, 292, 218, 231, 214, 272, 476,
	495, 499, 213, 557, 493, 334, 196, 0, 333, 271,
	320, 325, 257, 251, 195, 322, 255, 250, 243, 222,
	558, 235, 283, 249, 284, 236, 261, 260, 262, 0,
	0, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 0,
	0, 336, 0, 0, 541, 0, 0, 0, 309, 0,
	0, 244, 0, 0, 0, 494, 0, 295, 277, 554,
	442, 0, 293, 247, 321, 285, 327, 311, 335, 289,
	286, 187, 312, 216, 258, 198, 200, 212, 219, 221,
	223, 224, 267, 268, 280, 300, 314, 315, 316, 215,
	208, 294, 209, 233, 210, 188, 302, 211, 190, 281,
	319, 0, 229, 290, 254, 191, 253, 282, 318, 317,
	199, 343, 349, 350, 354, 0, 355, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 348, 227, 184, 185, 331, 539, 273,
	0, 0, 553, 534, 536, 537, 540, 544, 545, 546,
	547, 548, 550, 552, 556, 298, 0, 0, 0, 0,
	0, 238, 279, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 329, 341,
	358, 361, 0, 0, 0, 189, 360, 0, 0, 0,
	0, 0, 0, 0, 555, 0, 0, 0, 340, 0,
	0, 0, 0, 0, 498, 263, 264, 265, 266, 542,
	0, 206, 359, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 226, 232, 0, 234, 205, 278, 228, 338, 241,
	0, 364, 0, 0, 0, 0, 270, 237, 303, 242,
	248, 291, 337, 276, 296, 203, 328, 304, 252, 0,
	0, 564, 538, 563, 565, 566, 562, 567, 568, 549,
	461, 0, 502, 560, 559, 561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 246, 0, 287, 225, 527, 507, 508, 509, 459,
	510, 505, 506, 528, 500, 524, 525, 484, 503, 511,
	523, 512, 526, 529, 530, 569, 570, 518, 571, 515,
	531, 522, 521, 513, 501, 532, 533, 487, 486, 516,
	517, 504, 313, 496, 0, 344, 345, 346, 366, 330,
	0, 217, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	220, 1282, 0, 245, 0, 0, 0, 488, 0, 0,
	305, 259, 0, 0, 0, 0, 543, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 0,
	0, 482, 520, 519, 469, 478, 0, 0, 201, 144,
	470, 0, 477, 471, 475, 474, 472, 473, 0, 535,
	0, 0, 0, 0, 0, 0, 441, 454, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 451, 452, 0, 0, 0, 0, 497, 0,
	453, 0, 0, 460, 479, 480, 0, 0, 192, 310,
	326, 202, 301, 339, 207, 308, 197, 274, 297, 0,
	0, 194, 324, 307, 256, 239, 240, 193, 0, 292,
	218, 231, 214, 272, 476, 495, 499, 213, 557, 493,
	334, 196, 0, 333, 271, 320, 325, 257, 251, 195,
	322, 255, 250, 243, 222, 558, 235, 283, 249, 284,
	236, 261, 260, 262, 0, 0, 0, 0, 0, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 336, 0, 0, 541,
	0, 0, 0, 309, 0, 0, 244, 0, 0, 0,
	494, 0, 295, 277, 554, 442, 0, 293, 247, 321,
	285, 327, 311, 335, 289, 286, 187, 312, 216, 258,
	198, 200, 212, 219, 221, 223, 224, 267, 268, 280,
	300, 314, 315, 316, 215, 208, 294, 209, 233, 210,
	188, 302, 211, 190, 281, 319, 0, 229, 290, 254,
	191, 253, 282, 318, 317, 199, 343, 349, 350, 354,
	0, 355, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 348, 227,
	184, 185, 331, 539, 273, 0, 0, 553, 534, 536,
	537, 540, 544, 545, 546, 547, 548, 550, 552, 556,
	298, 0, 0, 0, 0, 0, 238, 279, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 329, 341, 358, 361, 0, 0, 0,
	189, 360, 0, 0, 0, 0, 0, 0, 0, 555,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 498,
	263, 264, 265, 266, 542, 0, 206, 359, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 226, 232, 0, 234,
	205, 278, 228, 338, 241, 0, 364, 0, 0, 0,
	0, 270, 237, 303, 242, 248, 291, 337, 276, 296,
	203, 328, 304, 252, 0, 0, 564, 538, 563, 565,
	566, 562, 567, 568, 549, 461, 0, 502, 560, 559,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 246, 0, 287, 225,
	527, 507, 508, 509, 459, 510, 505, 506, 528, 500,
	524, 525, 484, 503, 511, 523, 512, 526, 529, 530,
	569, 570, 518, 571, 515, 531, 522, 521, 513, 501,
	532, 533, 487, 486, 516, 517, 504, 313, 496, 0,
	344, 345, 346, 366, 330, 0, 217, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 0, 0, 0, 220, 0, 0, 245, 0,
	0, 0, 488, 0, 0, 305, 259, 0, 0, 0,
	0, 543, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 0, 0, 482, 520, 519, 469,
	478, 0, 0, 201, 144, 470, 0, 477, 471, 475,
	474, 472, 473, 0, 535, 0, 0, 0, 0, 0,
	0, 441, 454, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 451, 452, 1056,
	0, 0, 0, 497, 0, 453, 0, 0, 460, 479,
	480, 0, 0, 192, 310, 326, 202, 301, 339, 207,
	308, 197, 274, 297, 0, 0, 194, 324, 307, 256,
	239, 240, 193, 0, 292, 218, 231, 214, 272, 476,
	495, 499, 213, 557, 493, 334, 196, 0, 333, 271,
	320, 325, 257, 251, 195, 322, 255, 250, 243, 222,
	558, 235, 283, 249, 284, 236, 261, 260, 262, 0,
	0, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 0,
	0, 336, 0, 0, 541, 0, 0, 0, 309, 0,
	0, 244, 0, 0, 0, 494, 0, 295, 277, 554,
	442, 0, 293, 247, 321, 285, 327, 311, 335, 289,
	286, 187, 312, 216, 258, 198, 200, 212, 219, 221,
	223, 224, 267, 268, 280, 300, 314, 315, 316, 215,
	208, 294, 209, 233, 210, 188, 302, 211, 190, 281,
	319, 0, 229, 290, 254, 191, 253, 282, 318, 317,
	199, 343, 349, 350, 354, 0, 355, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 348, 227, 184, 185, 331, 539, 273,
	0, 0, 553, 534, 536, 537, 540, 544, 545, 546,
	547, 548, 550, 552, 556, 298, 0, 0, 0, 0,
	0, 238, 279, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 329, 341,
	358, 361, 0, 0, 0, 189, 360, 0, 0, 0,
	0, 0, 0, 0, 555, 0, 0, 0, 340, 0,
	0, 0, 0, 0, 498, 263, 264, 265, 266, 542,
	0, 206, 359, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 226, 232, 0, 234, 205, 278, 228, 338, 241,
	0, 364, 0, 0, 0, 0, 270, 237, 303, 242,
	248, 291, 337, 276, 296, 203, 328, 304, 252, 0,
	0, 564, 538, 563, 565, 566, 562, 567, 568, 549,
	461, 0, 502, 560, 559, 561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 246, 0, 287, 225, 527, 507, 508, 509, 459,
	510, 505, 506, 528, 500, 524, 525, 484, 503, 511,
	523, 512, 526, 529, 530, 569, 570, 518, 571, 515,
	531, 522, 521, 513, 501, 532, 533, 487, 486, 516,
	517, 504, 0, 0, 0, 344, 345, 346, 366, 330,
	0, 217, 313, 496, 0, 0, 1497, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	220, 0, 0, 245, 0, 0, 0, 488, 0, 0,
	305, 259, 0, 0, 0, 0, 543, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 0,
	0, 482, 520, 519, 469, 478, 0, 0, 201, 144,
	470, 0, 477, 471, 475, 474, 472, 473, 0, 535,
	0, 0, 0, 0, 0, 0, 441, 454, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 451, 452, 0, 0, 0, 0, 497, 0,
	453, 0, 0, 460, 479, 480, 0, 0, 192, 310,
	326, 202, 301, 339, 207, 308, 197, 274, 297, 0,
	0, 194, 324, 307, 256, 239, 240, 193, 0, 292,
	218, 231, 214, 272, 476, 495, 499, 213, 557, 493,
	334, 196, 0, 333, 271, 320, 325, 257, 251, 195,
	322, 255, 250, 243, 222, 558, 235, 283, 249, 284,
	236, 261, 260, 262, 0, 0, 0, 0, 0, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 336, 0, 0, 541,
	0, 0, 0, 309, 0, 0, 244, 0, 0, 0,
	494, 0, 295, 277, 554, 442, 0, 293, 247, 321,
	285, 327, 311, 335, 289, 286, 187, 312, 216, 258,
	198, 200, 212, 219, 221, 223, 224, 267, 268, 280,
	300, 314, 315, 316, 215, 208, 294, 209, 233, 210,
	188, 302, 211, 190, 281, 319, 0, 229, 290, 254,
	191, 253, 282, 318, 317, 199, 343, 349, 350, 354,
	0, 355, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 348, 227,
	184, 185, 331, 539, 273, 0, 0, 553, 534, 536,
	537, 540, 544, 545, 546, 547, 548, 550, 552, 556,
	298, 0, 0, 0, 0, 0, 238, 279, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 329, 341, 358, 361, 0, 0, 0,
	189, 360, 0, 0, 0, 0, 0, 0, 0, 555,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 498,
	263, 264, 265, 266, 542, 0, 206, 359, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 226, 232, 0, 234,
	205, 278, 228, 338, 241, 0, 364, 0, 0, 0,
	0, 270, 237, 303, 242, 248, 291, 337, 276, 296,
	203, 328, 304, 252, 0, 0, 564, 538, 563, 565,
	566, 562, 567, 568, 549, 461, 0, 502, 560, 559,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 246, 0, 287, 225,
	527, 507, 508, 509, 459, 510, 505, 506, 528, 500,
	524, 525, 484, 503, 511, 523, 512, 526, 529, 530,
	569, 570, 518, 571, 515, 531, 522, 521, 513, 501,
	532, 533, 487, 486, 516, 517, 504, 313, 496, 0,
	344, 345, 346, 366, 330, 0, 217, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 0, 0, 0, 220, 0, 0, 245, 0,
	0, 0, 488, 0, 0, 305, 259, 0, 0, 0,
	0, 543, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 0, 0, 482, 520, 519, 469,
	478, 0, 0, 201, 144, 470, 0, 477, 471, 475,
	474, 472, 473, 0, 535, 0, 0, 0, 0, 0,
	0, 441, 454, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 451, 452, 0,
	0, 0, 0, 497, 0, 453, 0, 0, 460, 479,
	480, 0, 0, 192, 310, 326, 202, 301, 339, 207,
	308, 197, 274, 297, 0, 0, 194, 324, 307, 256,
	239, 240, 193, 0, 292, 218, 231, 214, 272, 476,
	495, 499, 213, 557, 493, 334, 196, 0, 333, 271,
	320, 325, 257, 251, 195, 322, 255, 250, 243, 222,
	558, 235, 283, 249, 284, 236, 261, 260, 262, 0,
	0, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 0,
	0, 336, 0, 0, 541, 0, 0, 0, 309, 0,
	0, 244, 0, 0, 0, 494, 0, 295, 277, 554,
	442, 0, 293, 247, 321, 285, 327, 311, 335, 289,
	286, 187, 312, 216, 258, 198, 200, 212, 219, 221,
	223, 224, 267, 268, 280, 300, 314, 315, 316, 215,
	208, 294, 209, 233, 210, 188, 302, 211, 190, 281,
	319, 0, 229, 290, 254, 191, 253, 282, 318, 317,
	199, 343, 349, 350, 354, 0, 355, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 348, 227, 184, 185, 331, 539, 273,
	0, 0, 553, 534, 536, 537, 540, 544, 545, 546,
	547, 548, 550, 552, 556, 298, 0, 0, 0, 0,
	0, 238, 279, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 329, 341,
	358, 361, 0, 0, 0, 189, 360, 0, 0, 0,
	0, 0, 0, 0, 555, 0, 0, 0, 340, 0,
	0, 0, 0, 0, 498, 263, 264, 265, 266, 542,
	0, 206, 359, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 226, 232, 0, 234, 205, 278, 228, 338, 241,
	0, 364, 0, 0, 0, 0, 270, 237, 303, 242,
	248, 291, 337, 276, 296, 203, 328, 304, 252, 0,
	0, 564, 538, 563, 565, 566, 562, 567, 568, 549,
	461, 0, 502, 560, 559, 561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 246, 0, 287, 225, 527, 507, 508, 509, 459,
	510, 505, 506, 528, 500, 524, 525, 484, 503, 511,
	523, 512, 526, 529, 530, 569, 570, 518, 571, 515,
	531, 522, 521, 513, 501, 532, 533, 487, 486, 516,
	517, 504, 313, 496, 0, 344, 345, 346, 366, 330,
	0, 217, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 1140, 0, 0, 0, 457, 0, 0, 0,
	220, 0, 0, 245, 0, 0, 0, 488, 0, 0,
	305, 259, 0, 0, 0, 0, 543, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 0,
	0, 482, 520, 519, 469, 478, 0, 0, 201, 144,
	470, 0, 477, 471, 475, 474, 472, 473, 0, 535,
	0, 0, 0, 0, 0, 0, 0, 454, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 451, 452, 0, 0, 0, 0, 497, 0,
	453, 0, 0, 460, 479, 480, 0, 0, 192, 310,
	326, 202, 301, 339, 207, 308, 197, 274, 297, 0,
	0, 194, 324, 307, 256, 239, 240, 193, 0, 292,
	218, 231, 214, 272, 476, 495, 499, 213, 557, 493,
	334, 196, 0, 333, 271, 320, 325, 257, 251, 195,
	322, 255, 250, 243, 222, 558, 235, 283, 249, 284,
	236, 261, 260, 262, 0, 0, 0, 0, 0, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 336, 0, 0, 541,
	0, 0, 0, 309, 0, 0, 244, 0, 0, 0,
	494, 0, 295, 277, 554, 0, 0, 293, 247, 321,
	285, 327, 311, 335, 289, 286, 187, 312, 216, 258,
	198, 200, 212, 219, 221, 223, 224, 267, 268, 280,
	300, 314, 315, 316, 215, 208, 294, 209, 233, 210,
	188, 302, 211, 190, 281, 319, 0, 229, 290, 254,
	191, 253, 282, 318, 317, 199, 343, 1141, 1142, 354,
	0, 355, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 348, 227,
	184, 185, 331, 539, 273, 0, 0, 553, 534, 536,
	537, 540, 544, 545, 546, 547, 548, 550, 552, 556,
	298, 0, 0, 0, 0, 0, 238, 279, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 329, 341, 358, 361, 0, 0, 0,
	189, 360, 0, 0, 0, 0, 0, 0, 0, 555,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 498,
	263, 264, 265, 266, 542, 0, 206, 359, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 226, 232, 0, 234,
	205, 278, 228, 338, 241, 0, 364, 0, 0, 0,
	0, 270, 237, 303, 242, 248, 291, 337, 276, 296,
	203, 328, 304, 252, 0, 0, 564, 538, 563, 565,
	566, 562, 567, 568, 549, 461, 0, 502, 560, 559,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 246, 0, 287, 225,
	527, 507, 508, 509, 459, 510, 505, 506, 528, 500,
	524, 525, 484, 503, 511, 523, 512, 526, 529, 530,
	569, 570, 518, 571, 515, 531, 522, 521, 513, 501,
	532, 533, 487, 486, 516, 517, 504, 313, 496, 0,
	344, 345, 346, 366, 330, 0, 217, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 0, 0, 0, 220, 0, 0, 245, 0,
	0, 0, 488, 0, 0, 305, 259, 0, 0, 0,
	0, 543, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 520, 519, 469,
	478, 0, 0, 201, 144, 470, 0, 477, 471, 475,
	474, 472, 473, 0, 535, 0, 0, 0, 0, 0,
	0, 441, 454, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 451, 452, 0,
	0, 0, 0, 497, 0, 453, 0, 0, 460, 479,
	480, 0, 0, 192, 310, 326, 202, 301, 339, 207,
	308, 197, 274, 297, 0, 0, 194, 324, 307, 256,
	239, 240, 193, 0, 292, 218, 231, 214, 272, 476,
	495, 499, 213, 557, 493, 334, 196, 0, 333, 271,
	320, 325, 257, 251, 195, 322, 255, 250, 243, 222,
	558, 235, 283, 249, 284, 236, 261, 260, 262, 0,
	0, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 0,
	0, 336, 0, 0, 541, 0, 0, 0, 309, 0,
	0, 244, 0, 0, 0, 494, 0, 295, 277, 554,
	442, 0, 293, 247, 321, 285, 327, 311, 335, 289,
	286, 187, 312, 216, 258, 198, 200, 212, 219, 221,
	223, 224, 267, 268, 280, 300, 314, 315, 316, 215,
	208, 294, 209, 233, 210, 188, 302, 211, 190, 281,
	319, 0, 229, 290, 254, 191, 253, 282, 318, 317,
	199, 343, 349, 350, 354, 0, 355, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 348, 227, 184, 185, 331, 539, 273,
	0, 0, 553, 534, 536, 537, 540, 544, 545, 546,
	547, 548, 550, 552, 556, 298, 0, 0, 0, 0,
	0, 238, 279, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 329, 341,
	358, 361, 0, 0, 0, 189, 360, 0, 0, 0,
	0, 0, 0, 0, 555, 0, 0, 0, 340, 0,
	0, 0, 0, 0, 498, 263, 264, 265, 266, 542,
	0, 206, 359, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 226, 232, 0, 234, 205, 278, 228, 338, 241,
	0, 364, 0, 0, 0, 0, 270, 237, 303, 242,
	248, 291, 337, 276, 296, 203, 328, 304, 252, 0,
	0, 564, 538, 563, 565, 566, 562, 567, 568, 549,
	461, 0, 502, 560, 559, 561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 246, 0, 287, 225, 527, 507, 508, 509, 459,
	510, 505, 506, 528, 500, 524, 525, 484, 503, 511,
	523, 512, 526, 529, 530, 569, 570, 518, 571, 515,
	531, 522, 521, 513, 501, 532, 533, 487, 486, 516,
	517, 504, 313, 496, 0, 344, 345, 346, 366, 330,
	0, 217, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	220, 0, 0, 245, 0, 0, 0, 488, 0, 0,
	305, 259, 0, 0, 0, 0, 543, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 0,
	0, 482, 520, 519, 469, 478, 0, 0, 201, 144,
	470, 0, 477, 471, 475, 474, 472, 473, 0, 535,
	0, 0, 0, 0, 0, 0, 0, 454, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 451, 452, 0, 0, 0, 0, 497, 0,
	453, 0, 0, 460, 479, 480, 0, 0, 192, 310,
	326, 202, 301, 339, 207, 308, 197, 274, 297, 0,
	0, 194, 324, 307, 256, 239, 240, 193, 0, 292,
	218, 231, 214, 272, 476, 495, 499, 213, 557, 493,
	334, 196, 0, 333, 271, 320, 325, 257, 251, 195,
	322, 255, 250, 243, 222, 558, 235, 283, 249, 284,
	236, 261, 260, 262, 0, 0, 0, 0, 0, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 336, 0, 0, 541,
	0, 0, 0, 309, 0, 0, 244, 0, 0, 0,
	494, 0, 295, 277, 554, 0, 0, 293, 247, 321,
	285, 327, 311, 335, 289, 286, 187, 312, 216, 258,
	198, 200, 212, 219, 221, 223, 224, 267, 268, 280,
	300, 314, 315, 316, 215, 208, 294, 209, 233, 210,
	188, 302, 211, 190, 281, 319, 0, 229, 290, 254,
	191, 253, 282, 318, 317, 199, 343, 349, 350, 354,
	0, 355, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 348, 227,
	184, 185, 331, 539, 273, 0, 0, 553, 534, 536,
	537, 540, 544, 545, 546, 547, 548, 550, 552, 556,
	298, 0, 0, 0, 0, 0, 238, 279, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 329, 341, 358, 361, 0, 0, 0,
	189, 360, 0, 0, 0, 0, 0, 0, 0, 555,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 498,
	263, 264, 265, 266, 542, 0, 206, 359, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 226, 232, 0, 234,
	205, 278, 228, 338, 241, 0, 364, 0, 0, 0,
	0, 270, 237, 303, 242, 248, 291, 337, 276, 296,
	203, 328, 304, 252, 0, 0, 564, 538, 563, 565,
	566, 562, 567, 568, 549, 461, 0, 502, 560, 559,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 246, 0, 287, 225,
	527, 507, 508, 509, 459, 510, 505, 506, 528, 500,
	524, 525, 484, 503, 511, 523, 512, 526, 529, 530,
	569, 570, 518, 571, 515, 531, 522, 521, 513, 501,
	532, 533, 487, 486, 516, 517, 504, 0, 0, 0,
	344, 345, 346, 366, 330, 0, 217, 135, 313, 38,
	123, 103, 0, 0, 0, 0, 0, 0, 0, 275,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 305, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 201, 144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 310, 326, 202, 301, 339,
	207, 308, 197, 274, 297, 0, 0, 194, 324, 307,
	256, 239, 240, 193, 0, 292, 218, 231, 214, 272,
	0, 323, 351, 213, 342, 0, 334, 196, 0, 333,
	271, 320, 325, 257, 251, 195, 322, 255, 250, 243,
	222, 365, 235, 283, 249, 284, 236, 261, 260, 262,
	0, 0, 0, 0, 0, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 244, 0, 0, 0, 352, 0, 295, 277,
	0, 0, 0, 293, 247, 321, 285, 327, 311, 335,
	289, 286, 187, 312, 216, 258, 198, 200, 212, 219,
	221, 223, 224, 267, 268, 280, 300, 314, 315, 316,
	215, 208, 294, 209, 233, 210, 188, 302, 211, 190,
	281, 319, 0, 229, 290, 254, 191, 253, 282, 318,
	317, 199, 343, 349, 350, 354, 0, 355, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 348, 227, 184, 185, 331, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 347, 0, 0, 0, 0, 298, 0, 0, 0,
	0, 0, 238, 279, 0, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 329,
	341, 358, 361, 0, 0, 0, 189, 360, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 340,
	0, 0, 0, 0, 0, 356, 263, 264, 265, 266,
	377, 379, 206, 359, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 226, 232, 0, 234, 205, 278, 228, 338,
	241, 0, 364, 0, 0, 0, 0, 270, 237, 303,
	242, 248, 291, 337, 276, 296, 203, 328, 304, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	39, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 246, 104, 287, 225, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 0, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 313, 0, 0, 344, 345, 346, 366,
	330, 0, 217, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 893, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 305, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 0, 0, 0, 0, 0, 201,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 192,
	310, 326, 202, 301, 339, 207, 308, 197, 274, 297,
	0, 0, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 0,
	1583, 1580, 1581, 1582, 272, 0, 1567, 1568, 1569, 1570,
	879, 1553, 1573, 0, 1554, 271, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1571, 283, 249,
	284, 236, 261, 260, 262, 904, 906, 908, 910, 913,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 244, 0, 0,
	0, 1566, 0, 295, 277, 0, 0, 0, 293, 247,
	321, 285, 327, 311, 335, 289, 286, 187, 312, 216,
	258, 198, 200, 212, 219, 221, 223, 224, 267, 268,
	280, 300, 314, 315, 316, 215, 208, 294, 209, 233,
	210, 188, 302, 211, 190, 281, 319, 0, 229, 290,
	254, 191, 253, 282, 318, 317, 199, 343, 349, 350,
	354, 0, 355, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 348,
	227, 184, 185, 331, 0, 273, 0, 1198, 0, 0,
	0, 0, 0, 0, 0, 269, 347, 0, 0, 0,
	0, 298, 0, 0, 0, 0, 0, 238, 279, 0,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 329, 341, 358, 361, 0, 0,
	0, 189, 360, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 340, 0, 0, 0, 0, 0,
	356, 263, 264, 265, 266, 230, 0, 206, 359, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 226, 232, 0,
	234, 205, 278, 228, 338, 241, 0, 364, 0, 0,
	0, 0, 270, 237, 303, 242, 248, 291, 337, 276,
	296, 203, 328, 304, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1194, 0, 0, 0, 1191, 0, 0, 0,
	1193, 1190, 1192, 1196, 1197, 186, 903, 246, 1195, 287,
	225, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 0, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 313, 0,
	0, 344, 345, 346, 366, 330, 0, 217, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 305, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 201, 144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 2023, 2026, 0, 0,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1201, 1202, 1203, 1204, 1205, 1206, 1199, 1200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 310, 326, 202, 301, 339,
	207, 308, 197, 274, 297, 0, 0, 194, 324, 307,
	256, 239, 240, 193, 0, 292, 218, 231, 214, 272,
	0, 323, 351, 213, 342, 0, 334, 196, 0, 333,
	271, 320, 325, 257, 251, 195, 322, 255, 250, 243,
	222, 365, 235, 283, 249, 284, 236, 261, 260, 262,
	0, 0, 0, 0, 0, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 336, 0, 0, 0, 2020, 0, 2019, 309,
	2021, 2024, 244, 0, 0, 0, 352, 0, 295, 277,
	0, 0, 0, 293, 247, 321, 285, 327, 311, 335,
	289, 286, 187, 312, 216, 258, 198, 200, 212, 219,
	221, 223, 224, 267, 268, 280, 300, 314, 315, 316,
	215, 208, 294, 209, 233, 210, 188, 302, 211, 190,
	281, 319, 2025, 229, 290, 254, 191, 253, 282, 318,
	317, 199, 343, 349, 350, 354, 0, 355, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 348, 227, 184, 185, 331, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 347, 0, 0, 0, 0, 298, 0, 0, 0,
	0, 0, 238, 279, 0, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 329,
	341, 358, 361, 0, 0, 0, 189, 360, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 340,
	0, 0, 0, 0, 0, 356, 263, 264, 265, 266,
	230, 0, 206, 359, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 226, 232, 0, 234, 205, 278, 228, 338,
	241, 0, 364, 0, 0, 0, 0, 270, 237, 303,
	242, 248, 291, 337, 276, 296, 203, 328, 304, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 246, 0, 287, 225, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 0, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 313, 0, 0, 344, 345, 346, 366,
	330, 0, 217, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 0, 0, 0,
	0, 220, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 305, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 0, 1407, 0, 0, 0, 201,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 783, 784, 785, 782, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	310, 326, 202, 301, 339, 207, 308, 197, 274, 297,
	0, 0, 194, 324, 307, 256, 239, 240, 193, 0,
	292, 218, 231, 214, 272, 0, 323, 351, 213, 342,
	0, 334, 196, 0, 333, 271, 320, 325, 257, 251,
	195, 322, 255, 250, 243, 222, 365, 235, 283, 249,
	284, 236, 261, 260, 262, 0, 0, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 244, 0, 0,
	0, 352, 0, 295, 277, 0, 0, 0, 293, 247,
	321, 285, 327, 311, 335, 289, 286, 187, 312, 216,
	258, 198, 200, 212, 219, 221, 223, 224, 267, 268,
	280, 300, 314, 315, 316, 215, 208, 294, 209, 233,
	210, 188, 302, 211, 190, 281, 319, 0, 229, 290,
	254, 191, 253, 282, 318, 317, 199, 343, 349, 350,
	354, 0, 355, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 348,
	227, 184, 185, 331, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 347, 0, 0, 0,
	0, 298, 0, 0, 0, 0, 0, 238, 279, 0,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 329, 341, 358, 361, 0, 0,
	0, 189, 360, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 340, 0, 0, 0, 0, 0,
	356, 263, 264, 265, 266, 230, 0, 206, 359, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 226, 232, 0,
	234, 205, 278, 228, 338, 241, 0, 364, 0, 0,
	0, 0, 270, 237, 303, 242, 248, 291, 337, 276,
	296, 203, 328, 304, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 246, 0, 287,
	225, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 0, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 313, 0,
	0, 344, 345, 346, 366, 330, 0, 217, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 666, 0, 245,
	0, 0, 0, 0, 0, 0, 305, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 674, 675,
	0, 0, 0, 0, 201, 144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 310, 326, 202, 301, 339,
	207, 308, 197, 274, 297, 0, 0, 194, 324, 307,
	256, 239, 240, 193, 0, 292, 218, 231, 214, 272,
	0, 323, 351, 213, 342, 650, 334, 196, 649, 333,
	271, 320, 325, 257, 251, 195, 322, 255, 250, 243,
	222, 365, 235, 283, 249, 284, 236, 261, 260, 262,
	0, 0, 0, 0, 0, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 244, 0, 0, 0, 352, 0, 295, 277,
	0, 0, 0, 293, 247, 321, 285, 327, 311, 335,
	664, 286, 187, 312, 216, 258, 198, 200, 212, 219,
	221, 223, 224, 267, 268, 280, 300, 314, 315, 316,
	215, 208, 294, 209, 233, 210, 188, 302, 211, 190,
	281, 319, 0, 229, 290, 254, 191, 253, 282, 318,
	317, 199, 343, 349, 350, 354, 0, 355, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 348, 227, 184, 185, 331, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 347, 0, 0, 0, 0, 298, 0, 0, 0,
	0, 0, 238, 279, 0, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 329,
	341, 358, 361, 0, 0, 0, 189, 360, 0, 0,
	0, 0, 0, 0, 665, 332, 0, 0, 0, 340,
	0, 0, 0, 0, 0, 668, 263, 264, 265, 266,
	230, 0, 206, 359, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 226, 232, 0, 234, 205, 278, 228, 338,
	241, 0, 364, 0, 0, 0, 0, 676, 671, 672,
	242, 248, 291, 337, 276, 296, 203, 328, 304, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 246, 0, 287, 225, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 0, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 135, 313, 0, 344, 345, 346, 366,
	330, 0, 217, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 245, 0, 0, 0, 92,
	0, 0, 305, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 1428, 0, 143, 0, 0, 0, 0, 0, 0,
	201, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 310, 326, 202, 301, 339, 207, 308, 197, 274,
	297, 0, 0, 194, 324, 307, 256, 239, 240, 193,
	0, 292, 218, 231, 214, 272, 0, 323, 351, 213,
	342, 0, 334, 196, 0, 333, 271, 320, 325, 257,
	251, 195, 322, 255, 250, 243, 222, 365, 235, 283,
	249, 284, 236, 261, 260, 262, 0, 0, 0, 0,
	0, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 244, 0,
	0, 0, 352, 0, 295, 277, 0, 0, 0, 293,
	247, 321, 285, 327, 311, 335, 289, 286, 187, 312,
	216, 258, 198, 200, 212, 219, 221, 223, 224, 267,
	268, 280, 300, 314, 315, 316, 215, 208, 294, 209,
	233, 210, 188, 302, 211, 190, 281, 319, 0, 229,
	290, 254, 191, 253, 282, 318, 317, 199, 343, 349,
	350, 354, 0, 355, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	348, 227, 184, 185, 331, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 347, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 238, 279,
	0, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 329, 341, 358, 361, 0,
	0, 0, 189, 360, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 340, 0, 0, 0, 0,
	0, 356, 263, 264, 265, 266, 230, 0, 206, 359,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 226, 232,
	0, 234, 205, 278, 228, 338, 241, 0, 364, 0,
	0, 0, 0, 270, 237, 303, 242, 248, 291, 337,
	276, 296, 203, 328, 304, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 246, 104,
	287, 225, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 0, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 135,
	313, 0, 344, 345, 346, 366, 330, 0, 217, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 245, 0, 0, 0, 92, 0, 0, 305, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 1419, 0, 143,
	0, 0, 0, 0, 0, 0, 201, 144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 310, 326, 202,
	301, 339, 207, 308, 197, 274, 297, 0, 0, 194,
	324, 307, 256, 239, 240, 193, 0, 292, 218, 231,
	214, 272, 0, 323, 351, 213, 342, 0, 334, 196,
	0, 333, 271, 320, 325, 257, 251, 195, 322, 255,
	250, 243, 222, 365, 235, 283, 249, 284, 236, 261,
	260, 262, 0, 0, 0, 0, 0, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 244, 0, 0, 0, 352, 0,
	295, 277, 0, 0, 0, 293, 247, 321, 285, 327,
	311, 335, 289, 286, 187, 312, 216, 258, 198, 200,
	212, 219, 221, 223, 224, 267, 268, 280, 300, 314,
	315, 316, 215, 208, 294, 209, 233, 210, 188, 302,
	211, 190, 281, 319, 0, 229, 290, 254, 191, 253,
	282, 318, 317, 199, 343, 349, 350, 354, 0, 355,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 348, 227, 184, 185,
	331, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 347, 0, 0, 0, 0, 298, 0,
	0, 0, 0, 0, 238, 279, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 329, 341, 358, 361, 0, 0, 0, 189, 360,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 340, 0, 0, 0, 0, 0, 356, 263, 264,
	265, 266, 230, 0, 206, 359, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 226, 232, 0, 234, 205, 278,
	228, 338, 241, 0, 364, 0, 0, 0, 0, 270,
	237, 303, 242, 248, 291, 337, 276, 296, 203, 328,
	304, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 246, 104, 287, 225, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	0, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 135, 313, 0, 344, 345,
	346, 366, 330, 0, 217, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 245, 0, 0,
	0, 92, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1355, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 104, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 313, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 305,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 674, 675, 0, 0, 0, 0, 201, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 0, 323, 351, 213, 342, 650, 334,
	196, 649, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 365, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 352,
	0, 295, 277, 0, 0, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 347, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 356, 263,
	264, 265, 266, 230, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	676, 671, 672, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 0, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 313, 0, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 1035, 0, 245, 0, 0,
	0, 0, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 1033, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 313, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	1029, 0, 245, 0, 0, 0, 0, 0, 0, 305,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 1033, 0, 0, 0, 201, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 0, 323, 351, 213, 342, 0, 334,
	196, 0, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 365, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 352,
	0, 295, 277, 0, 0, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 347, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 356, 263,
	264, 265, 266, 230, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	270, 237, 303, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 0, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 313, 0, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2550, 0, 143, 520, 0, 0, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 313, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 305,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 1033, 0, 0, 0, 201, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 0, 323, 351, 213, 342, 0, 334,
	196, 0, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 365, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 352,
	0, 295, 277, 0, 0, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 347, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 356, 263,
	264, 265, 266, 230, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	270, 237, 303, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 0, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 313, 0, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 1033, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2128, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 313, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1649, 0, 0, 0, 0, 220,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 305,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 1651, 0, 0, 0, 201, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 0, 323, 351, 213, 342, 0, 334,
	196, 0, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 365, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 352,
	0, 295, 277, 0, 0, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 347, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 356, 263,
	264, 265, 266, 230, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	270, 237, 303, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 0, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 313, 0, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 1668, 0, 245, 0, 0,
	0, 0, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 1033, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 313, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 305,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2615, 0,
	143, 0, 0, 0, 0, 0, 0, 201, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 0, 323, 351, 213, 342, 0, 334,
	196, 0, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 365, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 352,
	0, 295, 277, 0, 0, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 347, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 356, 263,
	264, 265, 266, 230, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	270, 237, 303, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 0, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 313, 0, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 520, 0, 0, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 313, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 305,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2519, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 201, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 0, 323, 351, 213, 342, 0, 334,
	196, 0, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 365, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 352,
	0, 295, 277, 0, 0, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 347, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 356, 263,
	264, 265, 266, 230, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	270, 237, 303, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 0, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 313, 0, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2193, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 313, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 305,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 201, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 0, 323, 351, 213, 342, 0, 334,
	196, 0, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 365, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 2442,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 352,
	0, 295, 277, 0, 0, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 347, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 356, 263,
	264, 265, 266, 230, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	270, 237, 303, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 0, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 313, 0, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 1651, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 313, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 305,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 201, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 0, 323, 351, 213, 342, 0, 334,
	196, 0, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 365, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 2262,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 352,
	0, 295, 277, 0, 0, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 347, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 356, 263,
	264, 265, 266, 230, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	270, 237, 303, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 0, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 313, 0, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2036, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 313, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 305,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1355, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 201, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 0, 323, 351, 213, 342, 0, 334,
	196, 0, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 365, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 352,
	0, 295, 277, 0, 0, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 347, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 356, 263,
	264, 265, 266, 230, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	270, 237, 303, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 0, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 313, 0, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 313, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 305,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 1990, 0, 0, 0, 201, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 0, 323, 351, 213, 342, 0, 334,
	196, 0, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 365, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 352,
	0, 295, 277, 0, 0, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 347, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 356, 263,
	264, 265, 266, 230, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	270, 237, 303, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 0, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 313, 0, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 313, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 305,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 1033, 0, 0, 0, 201, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 0, 323, 351, 213, 342, 0, 334,
	196, 0, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 365, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 352,
	0, 295, 277, 0, 0, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 347, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 356, 263,
	264, 265, 266, 230, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	270, 237, 303, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 0, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 313, 0, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 313, 0, 0, 344, 345, 346, 366, 330, 0,
	217, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 305,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 201, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 310, 326,
	202, 301, 339, 207, 308, 197, 274, 297, 0, 0,
	194, 324, 307, 256, 239, 240, 193, 0, 292, 218,
	231, 214, 272, 0, 323, 351, 213, 342, 0, 334,
	196, 0, 333, 271, 320, 325, 257, 251, 195, 322,
	255, 250, 243, 222, 365, 235, 283, 249, 284, 236,
	261, 260, 262, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 244, 0, 0, 0, 352,
	0, 295, 277, 0, 0, 0, 293, 247, 321, 285,
	327, 311, 335, 289, 286, 187, 312, 216, 258, 198,
	200, 212, 219, 221, 223, 224, 267, 268, 280, 300,
	314, 315, 316, 215, 208, 294, 209, 233, 210, 188,
	302, 211, 190, 281, 319, 0, 229, 290, 254, 191,
	253, 282, 318, 317, 199, 343, 349, 350, 354, 0,
	355, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 348, 227, 184,
	185, 331, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 347, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 238, 279, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 329, 341, 358, 361, 0, 0, 0, 189,
	360, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 356, 263,
	264, 265, 266, 230, 0, 206, 359, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 226, 232, 0, 234, 205,
	278, 228, 338, 241, 0, 364, 0, 0, 0, 0,
	270, 237, 303, 242, 248, 291, 337, 276, 296, 203,
	328, 304, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 246, 0, 287, 225, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 0, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 313, 0, 0, 344,
	345, 346, 366, 330, 0, 217, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 305, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 1680, 0,
	0, 0, 201, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 310, 326, 202, 301, 339, 207, 308,
	197, 274, 297, 0, 0, 194, 324, 307, 256, 239,
	240, 193, 0, 292, 218, 231, 214, 272, 0, 323,
	351, 213, 342, 0, 334, 196, 0, 333, 271, 320,
	325, 257, 251, 195, 322, 255, 250, 243, 222, 365,
	235, 283, 249, 284, 236, 261, 260, 262, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	244, 0, 0, 0, 352, 0, 295, 277, 0, 0,
	0, 293, 247, 321, 285, 327, 311, 335, 289, 286,
	187, 312, 216, 258, 198, 200, 212, 219, 221, 223,
	224, 267, 268, 280, 300, 314, 315, 316, 215, 208,
	294, 209, 233, 210, 188, 302, 211, 190, 281, 319,
	0, 229, 290, 254, 191, 253, 282, 318, 317, 199,
	343, 349, 350, 354, 0, 355, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 348, 227, 184, 185, 331, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 347,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	238, 279, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 329, 341, 358,
	361, 0, 0, 0, 189, 360, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 356, 263, 264, 265, 266, 230, 0,
	206, 359, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	226, 232, 0, 234, 205, 278, 228, 338, 241, 0,
	364, 0, 0, 0, 0, 270, 237, 303, 242, 248,
	291, 337, 276, 296, 203, 328, 304, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	246, 0, 287, 225, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 0, 0, 0, 344, 345, 346, 366, 330, 313,
	217, 0, 0, 1603, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 305, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 201, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 310, 326, 202, 301,
	339, 207, 308, 197, 274, 297, 0, 0, 194, 324,
	307, 256, 239, 240, 193, 0, 292, 218, 231, 214,
	272, 0, 323, 351, 213, 342, 0, 334, 196, 0,
	333, 271, 320, 325, 257, 251, 195, 322, 255, 250,
	243, 222, 365, 235, 283, 249, 284, 236, 261, 260,
	262, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 244, 0, 0, 0, 352, 0, 295,
	277, 0, 0, 0, 293, 247, 321, 285, 327, 311,
	335, 289, 286, 187, 312, 216, 258, 198, 200, 212,
	219, 221, 223, 224, 267, 268, 280, 300, 314, 315,
	316, 215, 208, 294, 209, 233, 210, 188, 302, 211,
	190, 281, 319, 0, 229, 290, 254, 191, 253, 282,
	318, 317, 199, 343, 349, 350, 354, 0, 355, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 348, 227, 184, 185, 331,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 347, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 0, 238, 279, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	329, 341, 358, 361, 0, 0, 0, 189, 360, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	340, 0, 0, 0, 0, 0, 356, 263, 264, 265,
	266, 230, 0, 206, 359, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 226, 232, 0, 234, 205, 278, 228,
	338, 241, 0, 364, 0, 0, 0, 0, 270, 237,
	303, 242, 248, 291, 337, 276, 296, 203, 328, 304,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 246, 0, 287, 225, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 0,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 313, 0, 0, 344, 345, 346,
	366, 330, 0, 217, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 305, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 1033, 0, 0, 0,
	201, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 310, 326, 202, 301, 339, 207, 308, 197, 274,
	297, 0, 0, 194, 324, 307, 256, 239, 240, 193,
	0, 292, 218, 231, 214, 272, 0, 323, 351, 213,
	342, 0, 334, 196, 0, 333, 271, 320, 325, 257,
	251, 195, 322, 255, 250, 243, 222, 365, 235, 283,
	249, 284, 236, 261, 260, 262, 0, 0, 0, 0,
	0, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 244, 0,
	0, 0, 352, 0, 295, 277, 0, 0, 0, 293,
	247, 321, 285, 327, 311, 335, 1317, 286, 187, 312,
	216, 258, 198, 200, 212, 219, 221, 223, 224, 267,
	268, 280, 300, 314, 315, 316, 215, 208, 294, 209,
	233, 210, 188, 302, 211, 190, 281, 319, 0, 229,
	290, 254, 191, 253, 282, 318, 317, 199, 343, 349,
	350, 354, 0, 355, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	348, 227, 184, 185, 331, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 347, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 238, 279,
	0, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 329, 341, 358, 361, 0,
	0, 0, 189, 360, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 340, 0, 0, 0, 0,
	0, 356, 263, 264, 265, 266, 230, 0, 206, 359,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 226, 232,
	0, 234, 205, 278, 228, 338, 241, 0, 364, 0,
	0, 0, 0, 270, 237, 303, 242, 248, 291, 337,
	276, 296, 203, 328, 304, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 246, 0,
	287, 225, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 0, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 313,
	0, 0, 344, 345, 346, 366, 330, 0, 217, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 305, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 201, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 310, 326, 202, 301,
	339, 207, 308, 197, 274, 297, 0, 0, 194, 324,
	307, 256, 239, 240, 193, 0, 292, 218, 231, 214,
	272, 0, 323, 351, 213, 342, 0, 334, 196, 0,
	333, 271, 320, 325, 257, 251, 195, 322, 255, 250,
	243, 222, 365, 235, 283, 249, 284, 236, 261, 260,
	262, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 244, 0, 0, 0, 352, 0, 295,
	277, 0, 0, 0, 293, 247, 321, 285, 327, 311,
	335, 289, 286, 187, 312, 216, 258, 198, 200, 212,
	219, 221, 223, 224, 267, 268, 280, 300, 314, 315,
	316, 215, 208, 294, 209, 233, 210, 188, 302, 211,
	190, 281, 319, 0, 229, 290, 254, 191, 253, 282,
	318, 317, 199, 343, 349, 350, 354, 0, 355, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 348, 227, 184, 185, 331,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 347, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 0, 238, 279, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	329, 341, 358, 361, 0, 0, 0, 189, 360, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	340, 0, 0, 0, 0, 0, 356, 263, 264, 265,
	266, 230, 0, 206, 359, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 226, 232, 0, 234, 205, 278, 228,
	338, 241, 0, 364, 0, 0, 0, 0, 270, 237,
	303, 242, 248, 291, 337, 276, 296, 203, 328, 304,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 0, 0,
	0, 186, 0, 246, 0, 287, 225, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 0,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 313, 0, 0, 344, 345, 346,
	366, 330, 0, 217, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 305, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	201, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 310, 326, 202, 301, 339, 207, 308, 197, 274,
	297, 0, 0, 194, 324, 307, 256, 239, 240, 193,
	0, 292, 218, 231, 214, 272, 0, 323, 351, 213,
	342, 0, 334, 196, 0, 333, 271, 320, 325, 257,
	251, 195, 322, 255, 250, 243, 222, 365, 235, 283,
	249, 284, 236, 261, 260, 262, 0, 0, 0, 0,
	0, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 244, 0,
	0, 0, 352, 0, 295, 277, 0, 0, 0, 293,
	247, 321, 285, 327, 311, 335, 395, 286, 187, 312,
	216, 258, 198, 200, 212, 219, 221, 223, 224, 267,
	268, 280, 300, 314, 315, 316, 215, 208, 294, 209,
	233, 210, 188, 302, 211, 190, 281, 319, 0, 229,
	290, 254, 191, 253, 282, 318, 317, 199, 343, 349,
	350, 354, 0, 355, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	348, 227, 184, 185, 331, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 347, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 238, 279,
	0, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 329, 341, 358, 361, 0,
	0, 0, 189, 360, 0, 0, 0, 0, 0, 0,
	396, 332, 0, 0, 0, 340, 0, 0, 0, 0,
	0, 356, 263, 264, 265, 266, 230, 0, 206, 359,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 226, 232,
	0, 234, 205, 278, 228, 338, 241, 0, 364, 0,
	0, 0, 0, 270, 237, 303, 242, 248, 291, 337,
	276, 296, 203, 328, 304, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 246, 0,
	287, 225, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 0, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 313,
	0, 0, 344, 345, 346, 366, 330, 0, 217, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 305, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 201, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 310, 326, 202, 301,
	339, 207, 308, 197, 274, 297, 0, 0, 194, 324,
	307, 256, 239, 240, 193, 0, 292, 218, 231, 214,
	272, 0, 323, 351, 213, 342, 0, 334, 196, 0,
	333, 271, 320, 325, 257, 251, 195, 322, 255, 250,
	243, 222, 365, 235, 283, 249, 284, 236, 261, 260,
	262, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 336, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 244, 0, 0, 0, 352, 0, 295,
	277, 0, 0, 0, 293, 247, 321, 285, 327, 311,
	335, 289, 286, 187, 312, 216, 258, 198, 200, 212,
	219, 221, 223, 224, 267, 268, 280, 300, 314, 315,
	316, 215, 208, 294, 209, 233, 210, 188, 302, 211,
	190, 281, 319, 0, 229, 290, 254, 191, 253, 282,
	318, 317, 199, 343, 349, 350, 354, 0, 355, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 348, 227, 184, 185, 331,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 347, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 0, 238, 279, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	329, 341, 358, 361, 0, 0, 0, 189, 360, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	340, 0, 0, 0, 0, 0, 356, 263, 264, 265,
	266, 230, 0, 206, 359, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 226, 232, 0, 234, 205, 278, 228,
	338, 241, 0, 364, 0, 0, 0, 0, 270, 237,
	303, 242, 248, 291, 337, 276, 296, 203, 328, 304,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 246, 0, 287, 225, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 0,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 313, 0, 0, 344, 345, 346,
	366, 330, 0, 217, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 220, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 305, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	201, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 310, 326, 202, 301, 339, 207, 308, 197, 274,
	297, 0, 0, 194, 324, 307, 256, 239, 240, 193,
	0, 292, 218, 231, 214, 272, 0, 323, 351, 213,
	342, 0, 334, 196, 0, 333, 271, 320, 325, 257,
	251, 195, 322, 255, 250, 243, 222, 365, 235, 283,
	249, 284, 236, 261, 260, 262, 0, 0, 0, 0,
	0, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 244, 0,
	0, 0, 352, 0, 295, 277, 0, 0, 0, 293,
	247, 321, 285, 327, 311, 335, 289, 286, 187, 312,
	216, 258, 198, 200, 212, 219, 221, 223, 224, 267,
	268, 280, 300, 314, 315, 316, 215, 208, 294, 209,
	233, 210, 188, 302, 211, 190, 281, 319, 0, 229,
	290, 254, 191, 253, 282, 318, 317, 199, 343, 349,
	350, 354, 0, 355, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	348, 227, 184, 185, 331, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 347, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 238, 279,
	0, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 329, 341, 358, 361, 0,
	0, 0, 189, 360, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 340, 0, 0, 0, 0,
	0, 356, 263, 264, 265, 266, 230, 0, 206, 359,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 226, 232,
	0, 234, 205, 278, 228, 338, 241, 0, 364, 0,
	0, 0, 0, 270, 237, 303, 242, 248, 291, 337,
	276, 296, 203, 328, 304, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 246, 0,
	287, 225, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 0, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 313,
	0, 0, 344, 345, 346, 366, 330, 0, 217, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 305, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 201, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 310, 326, 202, 301,
	339, 207, 308, 197, 274, 297, 0, 0, 194, 324,
	307, 256, 239, 240, 193, 0, 292, 218, 231, 214,
	272, 0, 323, 351, 213, 342, 0, 334, 196, 0,
	333, 271, 320, 325, 257, 251, 195, 322, 255, 250,
	243, 222, 365, 235, 283, 249, 284, 236, 261, 260,
	262, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 244, 0, 0, 0, 352, 0, 295,
	277, 0, 0, 0, 293, 247, 321, 285, 327, 311,
	335, 289, 286, 187, 312, 216, 258, 198, 200, 212,
	219, 221, 223, 224, 267, 268, 280, 300, 314, 315,
	316, 215, 208, 294, 209, 233, 210, 188, 302, 211,
	190, 281, 319, 0, 229, 290, 254, 191, 253, 282,
	318, 317, 199, 343, 349, 350, 354, 0, 355, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 348, 227, 184, 185, 331,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 347, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 0, 238, 279, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	329, 341, 358, 361, 0, 0, 0, 189, 360, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	340, 0, 0, 0, 0, 0, 356, 263, 264, 265,
	266, 230, 0, 206, 359, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 226, 232, 0, 234, 205, 278, 228,
	338, 241, 0, 364, 0, 0, 0, 0, 270, 237,
	303, 242, 248, 291, 337, 276, 296, 203, 328, 304,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 246, 0, 287, 225, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 0,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 313, 0, 0, 344, 345, 346,
	366, 330, 0, 217, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 305, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	201, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 310, 326, 202, 301, 339, 207, 308, 197, 274,
	297, 0, 0, 194, 324, 307, 256, 239, 240, 193,
	0, 292, 218, 231, 214, 272, 0, 323, 351, 213,
	342, 0, 334, 196, 0, 333, 271, 320, 325, 257,
	251, 195, 322, 255, 250, 243, 222, 365, 235, 283,
	249, 284, 236, 261, 260, 262, 0, 0, 0, 0,
	0, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 244, 0,
	0, 0, 352, 0, 295, 277, 0, 0, 0, 293,
	247, 321, 285, 327, 311, 335, 289, 286, 187, 312,
	216, 258, 198, 200, 436, 219, 221, 223, 224, 267,
	268, 280, 300, 314, 315, 316, 215, 208, 294, 209,
	233, 210, 188, 302, 211, 190, 281, 319, 0, 229,
	290, 254, 191, 253, 282, 318, 317, 199, 343, 349,
	350, 354, 0, 355, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	348, 227, 184, 185, 331, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 347, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 238, 279,
	0, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 329, 341, 358, 361, 0,
	0, 0, 189, 360, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 340, 0, 0, 0, 0,
	0, 356, 263, 264, 265, 266, 230, 0, 206, 359,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2219, 0, 0, 0, 0, 353, 226, 232,
	0, 234, 205, 278, 228, 338, 241, 135, 364, 38,
	123, 103, 0, 270, 237, 303, 242, 248, 291, 337,
	276, 296, 203, 328, 304, 252, 1599, 128, 893, 0,
	0, 0, 0, 0, 116, 0, 0, 0, 129, 183,
	0, 0, 0, 92, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2639, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 2201, 132, 0, 186, 0, 246, 0,
	287, 225, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 0, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 0,
	0, 0, 344, 345, 346, 366, 330, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	881, 0, 0, 0, 124, 125, 0, 126, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 901, 905,
	907, 909, 911, 912, 914, 2219, 918, 915, 916, 917,
	0, 0, 896, 897, 898, 899, 879, 880, 902, 0,
	882, 0, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 894, 900, 0, 0, 0, 0, 0, 1599,
	0, 904, 906, 908, 910, 913, 0, 0, 0, 0,
	2205, 0, 102, 122, 133, 0, 75, 0, 0, 0,
	0, 2209, 0, 0, 0, 2219, 0, 0, 0, 0,
	0, 0, 0, 121, 115, 114, 2201, 895, 0, 0,
	44, 2198, 0, 0, 0, 2200, 2202, 2204, 0, 2206,
	2207, 2208, 2210, 2211, 2212, 2214, 2215, 2216, 2217, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	415, 2220, 414, 421, 411, 2292, 2201, 0, 117, 118,
	119, 0, 0, 0, 418, 419, 0, 420, 424, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 130, 0,
	0, 429, 0, 0, 0, 0, 0, 0, 2218, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	120, 0, 88, 0, 0, 2197, 0, 0, 0, 0,
	433, 0, 0, 435, 0, 0, 0, 0, 434, 0,
	0, 0, 415, 0, 414, 421, 411, 0, 0, 0,
	0, 0, 0, 2205, 2213, 0, 418, 419, 0, 420,
	424, 2203, 0, 406, 2209, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 89, 0, 0, 0, 0,
	0, 0, 0, 0, 2198, 37, 0, 0, 2200, 2202,
	2204, 0, 2206, 2207, 2208, 2210, 2211, 2212, 2214, 2215,
	2216, 2217, 433, 0, 0, 435, 0, 0, 0, 0,
	434, 0, 0, 2205, 415, 0, 414, 421, 411, 0,
	0, 0, 0, 0, 2209, 0, 0, 0, 418, 419,
	39, 420, 424, 0, 2220, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 2198, 429, 0, 0, 2200, 2202,
	2204, 0, 2206, 2207, 2208, 2210, 2211, 2212, 2214, 2215,
	2216, 2217, 903, 104, 0, 407, 409, 408, 0, 0,
	0, 2218, 0, 0, 413, 0, 0, 0, 2227, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 2197, 0,
	0, 0, 0, 432, 2220, 0, 0, 0, 0, 0,
	410, 0, 2237, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 90, 91, 95, 2230, 0, 2213, 0, 0,
	0, 0, 2225, 0, 2203, 0, 0, 2240, 2241, 0,
	0, 2218, 0, 2226, 0, 0, 0, 407, 409, 408,
	0, 0, 0, 0, 0, 0, 413, 0, 2197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 432, 0, 0, 0, 2231,
	0, 0, 410, 0, 0, 0, 0, 2213, 0, 0,
	0, 0, 0, 0, 2203, 0, 0, 0, 0, 0,
	0, 0, 0, 412, 416, 422, 0, 423, 425, 0,
	0, 426, 427, 428, 0, 0, 430, 431, 0, 407,
	409, 408, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2239, 0, 2019,
	0, 0, 0, 0, 0, 412, 416, 422, 0, 423,
	425, 0, 0, 426, 427, 428, 0, 0, 430, 431,
	0, 0, 0, 0, 2233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2232, 2234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 416, 422,
	0, 423, 425, 0, 0, 426, 427, 428, 0, 0,
	430, 431, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2228, 0, 0,
	0, 0, 0, 2238,
}

var yyPact = [...]int{
	29597, -1000, -308, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -217, 28183, 28183,
	-1000, -1000, 1615, -1000, 27678, 9487, 28688, 235, 234, 28688,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 453, -1000, 27173, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 391, 29870, 29193,
	7456, 28688, -284, -1000, 2391, -141, -1000, -1000, -1000, -1000,
	-1000, -1000, 967, 565, 26668, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 305, 54, 565, 644, 652, 864, 864, 11507, -77,
	-78, 2391, 268, 325, -1000, 741, 29597, 28688, 1519, 371,
	28688, -1000, 1045, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 371, -1000, -1000,
	-1000, 2391, 2391, -1000, 28688, 28688, -15, 1146, -1000, 289,
	227, 277, 1042, -1000, -1000, -1000, -1000, -1000, 2291, -1000,
	28688, 28688, 1956, 28688, -1000, 1358, 349, 29942, 2128, 1060,
	474, 1972, -1000, -1000, 1946, -1000, 146, 152, 153, 317,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 105, -1000, 2199,
	-1000, -1000, 131, -1000, -1000, 135, -1000, -1000, -1000, -82,
	-1000, -1000, -1000, -1000, -1000, -1000, -165, -1000, -1000, 662,
	1269, 7456, -1000, 1242, -1000, 2708, -1000, -1000, -1000, -1000,
	4921, 8971, 8971, 8971, 8971, -1000, -1000, 1804, 7456, 1945,
	1786, 1944, -1000, -1000, -1000, -1000, 1037, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1512,
	8466, -1000, 1941, 1940, 1919, 1918, 1914, 1913, 1903, 1902,
	1896, 1895, 1668, 1893, 1505, 1501, 1892, 1888, 1887, 1500,
	1668, 1668, 1886, 1881, 1880, 1869, 1865, 1863, 1859, 1843,
	1842, 1840, 1839, 1836, 1835, 1834, 1832, 1831, 1830, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 251, -1000, 1036, 1111, -1000, 1829, 2096, 2213,
	1700, 2248, 2191, 2189, 2175, 2164, 1388, -1000, -1000, 28688,
	28688, 390, 390, 390, 390, 435, 390, 451, 450, 445,
	-1000, -1000, -1000, -1000, -1000, -1000, 538, -1000, -1000, -1000,
	-1000, 847, 28688, -1000, 1759, 1096, 2210, 354, 353, 269,
	-1000, 1201, 1201, 1201, 1096, 237, 345, 2213, 2213, -92,
	-108, 1096, 1096, -108, 1096, 46, -1000, -1000, -1000, 1201,
	352, 1201, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2194,
	2183, 391, 34, 28688, 391, 405, -1000, -179, -1000, -1000,
	650, -1000, 567, -1000, 1358, 341, 338, 860, 1191, -1000,
	1115, 28688, 28688, 28688, 1115, 1115, 14540, 14035, -1000, 28688,
	-1000, 2213, 1700, -1000, 1649, 2163, 1646, 1700, 391, 391,
	391, 391, 391, 391, 391, 28688, 28688, 6436, 6436, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 280, 2120, 225,
	1826, -1000, 28688, 226, 2213, 2096, 2213, -1000, -1000, 1035,
	1384, 1495, -1000, -1000, 289, 1100, -1000, 756, -1000, -1000,
	-1000, -1000, 28688, 252, -1000, -1000, 1487, 1825, -1000, 408,
	1059, 880, -1000, 69, 30014, 23630, 1358, 23630, 28688, -1000,
	-1000, -1000, -1000, -1000, -1000, -83, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 74,
	-1000, 7456, 7456, 7456, 7456, 7456, -1000, 438, 7961, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8971, 8971, 8971, 8971,
	8971, 8971, 8971, 8971, 8971, 8971, 8971, 8971, 1803, 1159,
	8971, 8971, 8971, 8971, 2163, 2236, 852, 164, -1000, -1000,
	-1000, -1000, -1000, 1154, 1269, 7456, 7456, 7456, 28688, -1000,
	2244, 7456, 7456, 10140, 7456, 2156, 3405, 28688, 7456, -1000,
	1641, 1640, -1000, -1000, 1373, 7456, -1000, -1000, 7456, 8971,
	7456, -1000, -1000, -1000, 179, 2156, 2156, 7456, 7456, 2156,
	2156, 2156, 1190, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
	2156, 28688, 2087, 104, -1000, -1000, -1000, 1724, -1000, 1751,
	1751, 1724, 1724, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1783, 1820, -1000, -1000, 1750, 1750, 1750, 1724,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1780, 1780, 1782, 1780, 28688,
	2213, -284, 5931, -1000, -291, 2096, 7456, -1000, -1000, 7456,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1494, 2147,
	-1000, 1819, 1032, 28688, 1167, 28688, 23630, 1358, 28688, 28688,
	390, 390, 390, 405, -1000, 28688, 847, 2146, 28688, 2277,
	8971, 8971, 26163, 1201, 1096, -1000, 28688, -1000, -1000, -1000,
	1201, 28688, 1201, 2277, 1201, -1000, -1000, -1000, 1096, 1096,
	-1000, -1000, -1000, -1000, 1201, 1201, -1000, -1000, -97, 2277,
	2277, -103, -1000, 28688, 28688, 390, 28688, -1000, 28688, -1000,
	-1000, 28688, 28688, 28688, 2178, -1000, 23630, 21610, -1000, -137,
	619, 608, 614, -1000, -1000, 393, 481, 13530, 304, 23630,
	4415, -1000, -1000, 1115, 1115, 1115, 4415, 4415, 990, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 846, -1000, 68, 2096,
	-1000, -1000, -1000, -1000, -1000, 28688, 23630, 1358, 28688, 28688,
	28688, 28688, -1000, 1818, 825, -1000, -1000, 11002, 1028, 825,
	1493, 28688, 1488, 1971, 2089, -1000, 1809, 12519, 28688, -1000,
	-1000, -287, -1000, 12013, 28688, 2096, -1000, 2096, 28688, -1000,
	2206, -1000, 289, 162, -1000, -1000, -1000, -1000, -1000, -1000,
	1012, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	845, -1000, 28688, -1000, -1000, 69, 23630, 24135, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 109, -1000, -1000, 149, -1000,
	415, 17, 1097, -1000, -1000, 38, 144, 488, 1269, -1000,
	1165, 1165, 1183, -1000, 457, -1000, -1000, -1000, -1000, 1804,
	-1000, -1000, -1000, 1876, 1794, -1000, 1175, 1175, 1056, 1056,
	1056, 1056, 1056, 1162, 1162, -1000, -1000, -1000, 4921, 1803,
	8971, 8971, 8971, 8971, 377, 377, 2937, 2761, -1000, 7456,
	1164, -1000, 7456, 1639, 2222, 973, 997, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1638, 662, 1636,
	1645, 2290, 1634, 7456, -1000, -1000, 1352, 6951, -1000, -1000,
	-1000, 1633, 984, 1609, -1000, -1000, -1000, 1603, 765, 1597,
	1921, 1596, 837, 7456, 7456, 1084, 1082, 7456, 7456, 7456,
	7456, 1594, 7456, 7456, 7456, 7456, 7456, 7456, 7456, 7456,
	-1000, 7456, 37, -1000, -1000, -1000, -1000, 1380, -1000, 1378,
	-1000, -1000, -1000, 1479, 1479, -1000, 1376, -1000, -1000, -1000,
	-1000, 1375, -1000, -1000, 1371, -1000, -1000, -1000, -1000, 1077,
	-1000, 1269, -1000, 1477, -1000, 834, 762, -1000, 1322, -1000,
	-1000, 28688, 9992, 28688, 1759, 2116, 44, -1000, 925, -1000,
	17, 696, 1949, 2083, 28688, 28688, 28688, 25658, -1000, 1802,
	1075, -1000, -1000, 7456, -1000, -1000, 1927, 28688, 28688, 2277,
	-1000, -1000, -1000, 28688, -1000, -1000, -1000, 28688, 2277, 2277,
	1096, 1201, 1201, -1000, -1000, 1201, -1000, 959, -1000, 28688,
	-1000, -1000, 1759, 42, 2174, 174, 925, 2349, 849, -1000,
	-1000, -1000, -1000, 16560, 16560, 13025, 16560, -1000, 1108, -1000,
	-1000, 568, 558, 631, -1000, -1000, 409, -1000, -1000, 696,
	-1000, -1000, -1000, 1793, 1145, -1000, -1000, 1786, -1000, 4415,
	4415, 4415, -1000, -1000, 17065, 28688, -1000, -169, -1000, -158,
	-1000, -1000, 746, 696, 1970, 738, -1000, 738, -1000, 9992,
	2277, 6436, -1000, 21610, -1000, -1000, 25145, -1000, 24640, 2277,
	-295, 843, -135, -1000, 2106, -287, 28688, 28688, 1066, 188,
	-1000, 1058, -1000, 685, -1000, 1784, -1000, 1052, 2036, 714,
	-1000, 1144, -1000, -1000, 950, -16, -1000, -1000, 28688, 1487,
	1047, 24135, 710, -1000, 407, 913, 899, -1000, 23630, 137,
	23630, -1000, 23630, -1000, -1000, 233, -1000, 28688, 2075, -1000,
	-1000, -1000, 1465, -313, -1000, -1000, -1000, -1000, -1000, 1033,
	-1000, 377, 377, 2937, 2720, -1000, 8971, -1000, 8971, 2218,
	1150, -1000, 7456, 1238, 2594, -1000, 1368, 15550, 28688, -1000,
	-1000, 7456, 7456, -1000, 2162, -1000, 7456, 7456, 1496, -1000,
	28688, -1000, -1000, -1000, 15550, -1000, 8971, -1000, 7456, 848,
	2125, -66, -66, 2118, 2074, 2063, 1030, -66, 2017, 2013,
	1996, 1986, 1925, 1883, 1874, 1773, 1269, -1000, -1000, 1590,
	1589, 1021, -1000, 1020, 1588, 1015, 1010, 5931, -1000, -135,
	7456, 7456, 7456, 2043, -1000, -1000, 110, 1585, 721, -1000,
	-1000, -1000, 29598, 1751, 1724, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1783, -1000, -1000, 1750, 1750, 1750,
	1724, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1780, 1780, 1782, 1780, -1000, 2143, -1000, -72, 1105, 423,
	23630, 337, -1000, 1966, 270, -1000, 2083, -1000, 739, -1000,
	1775, 1770, 1760, 28688, 807, -1000, 884, 29597, -1000, 28688,
	1269, -1000, 1358, -1000, 1096, -1000, -1000, 2277, 1024, -1000,
	-1000, 2277, 1096, 1096, 1201, 28688, -1000, 2141, -72, 1105,
	173, 1142, 423, 28688, 21610, 21610, 21610, 21610, -1000, 2005,
	2003, -1000, 2007, 1997, 2073, 28688, 21610, 1759, -1000, 20095,
	-1000, -1000, -1000, 2163, 1008, 2014, 559, 7456, -1000, -1000,
	-1000, 553, 23630, 1475, 304, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 28688, 28688, 1581, 2275, -1000, 718, -1000,
	-1000, 870, -1000, 2275, -1000, 1369, 1474, -58, -37, 1220,
	685, 714, 995, -1000, 188, 28688, 2029, 1758, -1000, 28688,
	-287, 5931, 267, -287, 28688, 5931, 28688, 1361, -1000, -1000,
	-1000, 2280, 23630, 1358, 1080, 23125, -1000, 124, -1000, 107,
	398, 1470, -1000, 444, 80, -1000, 1138, 1465, -1000, -1000,
	-1000, 8971, -1000, -1000, -1000, -1000, 1269, 7456, 1577, -1000,
	540, 540, 1565, -1000, 1724, 1751, -1000, 1724, 1750, 1724,
	540, 540, 1562, -1000, 1297, 1765, -1000, 1722, 1703, 7456,
	-1000, 1559, 2610, 1019, -191, -66, -1000, 1740, -1000, -66,
	-66, -66, -66, -1000, -66, -66, -66, -66, -66, -66,
	-66, -66, -1000, -1000, -1000, 1469, -1000, -1000, -1000, 1346,
	-1000, 1345, -1000, -58, 1269, 1269, -1000, -1000, 2049, 1468,
	440, 9992, 2082, 265, 1240, -1000, -1000, 22620, -1000, 381,
	-1000, -1000, -1000, 466, 77, 1333, 310, -1000, 28688, 28688,
	-1000, -1000, -1000, -1000, -1000, 1105, 1105, 1105, 10497, 10497,
	10497, 371, 783, 866, 21610, 28688, -1000, 21105, 1553, -1000,
	696, 2277, -1000, 28688, -1000, 2277, 2277, 1096, -1000, 265,
	1240, 22620, 1130, 1466, 381, 818, -1000, 1128, 1963, 1965,
	1963, -1000, -1000, -1000, -1000, 1999, -1000, 1736, -1000, -1000,
	818, -1000, -1000, -1000, -1000, -1000, 559, -1000, 2205, 566,
	566, 566, 1551, -1000, 710, 1550, -1000, -1000, -1000, -1000,
	-1000, 2271, 2247, 22115, 2271, -1000, -295, -293, -28, 2242,
	2239, 2308, 265, 28688, 228, -1000, -287, 28688, -1000, -1000,
	1549, 709, -287, -1000, 685, -1000, -1000, -1000, -1000, 1358,
	-1000, 106, -1000, -1000, -1000, -1000, -1000, -1000, -5, -1000,
	28688, -1000, 1465, 1464, 71, -1000, 1269, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7456, -1000, -1000, -1000, 1576, -1000, -1000, 7456,
	1545, 1458, -1000, 370, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1544, 1537, -293,
	-1000, -1000, -1000, 29598, -1000, 1498, -1000, -1000, 1452, 5,
	-1000, -1000, -1000, 1451, 1449, 1329, -1000, -1000, 1382, 910,
	26, -1000, -1000, -1000, -1000, -1000, -1000, 1739, 15550, 16055,
	1442, 1535, 700, -1000, -1000, -1000, 29598, 798, -1000, 28688,
	1219, 566, 390, 566, 1214, 1738, -1000, -1000, 1533, 1530,
	16560, 21610, 21105, 803, -1000, 865, -1000, -1000, -1000, 2277,
	-1000, -1000, 2277, -1000, -1000, 5, 1441, -1000, -1000, 2223,
	28688, 5931, -1000, -1000, 7456, 1733, -1000, 7456, -1000, -1000,
	-1000, -1000, -1000, 1725, 2095, -1000, -1000, -1000, -1000, -1000,
	-1000, 7456, 7456, -1000, -1000, -1000, -295, 1440, -1000, -1000,
	2238, 1429, 1374, 28688, -1000, -1000, -287, -1000, 685, 992,
	-1000, 685, 696, -1000, -1000, 188, -1000, -1000, -1000, 1548,
	-1000, 1502, -66, -1000, 2223, -1000, 2237, -1000, -1000, -295,
	-228, -1000, -1000, -1000, -1000, 231, -1000, -1000, 180, -1000,
	-1000, 1381, 400, -1000, 19085, -1000, -1000, -1000, -1000, -1000,
	29809, 10497, 30048, -1000, -1000, 28688, 28688, -1000, 28688, 28688,
	390, 7456, 74, 29809, 2277, 803, 865, -1000, -1000, 1078,
	-1000, -1000, -1000, -1000, 2213, -1000, -1000, 1269, 28688, 1269,
	20600, -1000, 2231, 2230, 1269, 662, -297, -1000, 1426, -31,
	-1000, -1000, 689, 685, -1000, -103, -1000, -1000, -1000, 47,
	7456, -297, 28688, 395, 1424, -1000, -1000, 167, -1000, -1000,
	991, -1000, 1724, 7456, 369, 29749, -1000, 1105, 1105, 821,
	1105, 1105, 1105, 1105, 322, 321, 1105, 1105, 1105, 1105,
	1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105,
	1721, -1000, -1000, 30048, -1000, -1000, 1196, 8971, -1000, -1000,
	1423, 16055, 527, 535, 1720, -1000, 281, 2307, -1000, 1206,
	1189, -1000, 28688, -1000, 1719, 1878, 232, 1717, -1000, 1711,
	1708, 28688, 1462, -1000, -103, 369, 2223, -1000, -1000, 989,
	986, -1000, -1000, -1000, -1000, -1000, 1706, -1000, 2228, -300,
	-67, -33, 1507, -1000, 2855, -1000, -1000, -1000, 662, -1000,
	2126, -1000, -1000, -6, -1000, -1000, -1000, 19085, 2113, 1427,
	243, 2227, 29809, -1000, 1327, 1326, 1105, 1105, 1314, 1421,
	1420, 1419, 1105, 1105, 1313, 1414, 20095, 1308, 1265, 1264,
	1359, 1412, 539, 1355, 1354, 1293, 28688, 1705, 1402, -1000,
	-1000, 2937, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1260, 1690, -90, -1000, -1000, 1683, 19085,
	262, 262, 19085, 19085, 19085, 1676, 455, -1000, 243, 2213,
	-1000, -1000, 19590, 28688, 1374, -1000, 1410, 397, -40, -33,
	-1000, 2225, -49, 2224, 2221, -1000, -1000, 3910, -289, -71,
	288, 1407, -1000, 172, -1000, -1000, 2113, -1000, 2220, 275,
	-1000, -1000, -1000, 15550, 15550, -1000, -1000, -1000, -1000, 1406,
	1405, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 332, 28688, 963, -1000, 1125, 1492, 7456,
	1668, -222, 19085, 960, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 956, 946, 945, 19085, -1000, -1000, -1000, 272, -1000,
	-1000, -1000, -1000, 941, -1000, -1000, -1000, 1659, 1255, -28,
	-52, 2219, -1000, 1374, 2217, 1374, 1374, 1160, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1105, 1403, 215, -1000, -1000,
	-1000, 18580, 250, 229, 224, -1000, 447, -1000, -1000, -1000,
	-1000, -1000, -1000, 329, 909, -1000, 1402, 1400, -1000, 1416,
	-1000, 1961, -1000, 36, 907, -1000, -1000, -1000, -1000, 906,
	-1000, -1000, 28688, 2160, 15045, -55, -1000, -1000, -1000, 1399,
	-1000, 1374, -1000, -1000, 3910, 1248, -1000, 28688, -1000, 28688,
	247, 1233, 8971, 1658, 8971, 1657, 257, 1655, -1000, -1000,
	-1000, -1000, -1000, 455, -1000, 1959, 1776, 2288, -1000, -1000,
	-1000, -1000, 172, 172, 172, 172, 113, -1000, -1000, 28688,
	-1000, 901, -1000, -1000, -1000, 863, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 900, 1654, 2215, -1000, 2543, 28688, 2422,
	28688, 1651, 1103, 8971, -1000, -1000, 2295, -1000, 2289, 653,
	653, -1000, 657, -1000, 1102, -1000, 18075, 28688, -1000, -1000,
	363, 254, -1000, 896, -1000, 887, 17570, 1212, 2361, -1000,
	-1000, -1000, 1282, 294, -1000, 28688, 5426, -1000, 799, 835,
	-1000, 28688, 236, -1000, -1000, -1000, 796, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1269, 28688, -1000, 363, 2026, -1000,
	1202, -1000, -1000, -1000, 29586, 505, -1000, -1000, 29586, 246,
	-1000, 358, 1616, -1000, -1000, 775, -1000, 28688, 532, 7456,
	-1000, 246, 29809, -1000, 7456, 758, -1000, 29809, 729, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 120, 2818, 203, 146, 143, 202, 2817, 2816, 2133,
	2130, 2815, 2813, 2812, 2811, 2810, 2808, 2807, 2806, 2804,
	2802, 2801, 2800, 2799, 2798, 2797, 2796, 2795, 2794, 2793,
	2792, 199, 2786, 2785, 2784, 2783, 2782, 2781, 2780, 2765,
	2757, 2756, 2751, 2743, 2742, 2741, 2740, 2739, 2725, 2724,
	2723, 2722, 2721, 2720, 2719, 2718, 2717, 139, 2715, 2101,
	2714, 2713, 2693, 2692, 2690, 2689, 177, 2688, 2687, 2686,
	2685, 2684, 2683, 2681, 2680, 2679, 2677, 2675, 2674, 2673,
	2672, 2657, 2652, 2651, 151, 2650, 2649, 148, 2647, 2646,
	2645, 2643, 195, 188, 57, 2642, 42, 121, 167, 205,
	1608, 208, 206, 161, 123, 70, 2641, 2138, 2639, 145,
	189, 117, 30, 2638, 154, 2637, 114, 41, 36, 204,
	113, 55, 128, 97, 2633, 183, 66, 86, 88, 2632,
	2631, 211, 162, 2630, 98, 2628, 2627, 2625, 2623, 172,
	110, 2622, 60, 2621, 77, 91, 99, 29, 2620, 2619,
	2618, 79, 2617, 2615, 2610, 2609, 156, 2608, 103, 63,
	2607, 2605, 2602, 58, 2599, 28, 2596, 51, 2594, 2593,
	2592, 2591, 64, 2590, 2589, 14, 16, 18, 2586, 15,
	1, 2585, 185, 81, 96, 109, 2582, 384, 2581, 2579,
	2577, 118, 2576, 513, 2575, 2574, 2573, 2570, 32, 2563,
	170, 54, 2561, 82, 104, 49, 166, 179, 2559, 2558,
	2555, 62, 72, 52, 0, 2538, 44, 2537, 2534, 2532,
	210, 2530, 192, 168, 190, 125, 213, 133, 2527, 2526,
	61, 2525, 119, 80, 107, 10, 2519, 175, 2517, 441,
	150, 2515, 182, 2514, 127, 3, 111, 2512, 2511, 22,
	234, 2510, 2509, 2508, 137, 2502, 2501, 74, 126, 2500,
	2495, 2494, 27, 2492, 38, 25, 2491, 85, 2471, 201,
	2470, 153, 115, 158, 155, 116, 184, 191, 67, 69,
	2469, 1186, 112, 84, 17, 2468, 187, 2467, 212, 214,
	2466, 164, 2465, 200, 339, 176, 2464, 157, 9, 43,
	34, 2463, 12, 2461, 102, 2460, 2459, 21, 2458, 23,
	2457, 2456, 2455, 2454, 6, 2453, 2452, 2451, 2, 4,
	2449, 5, 181, 53, 100, 2448, 142, 178, 2447, 2446,
	73, 2445, 2442, 2441, 223, 2440, 2439, 2438, 2434, 2433,
	2432, 2431, 2430, 2428, 65, 37, 2427, 2426, 2425, 2424,
	68, 108, 2422, 2421, 2420, 2419, 31, 132, 2418, 19,
	2417, 24, 26, 33, 2416, 101, 2414, 11, 160, 2396,
	2395, 13, 2393, 2390, 7, 8, 2388, 2387, 59, 2382,
	48, 35, 75, 76, 2381, 20, 159, 106, 2380, 2378,
	196, 198, 174, 2376, 134, 193, 215, 2375, 186, 2369,
	2368, 2364, 2363, 2362, 2361, 1199, 2358, 2357, 194, 56,
	83, 93, 2356, 2355, 2352, 71, 124, 95, 89, 169,
	2350, 165, 2349, 2348, 87, 2347, 2346, 2341, 2339, 2332,
	163, 2331, 2325, 2324, 197, 229, 2323,
}

//line mysql_sql.y:8542
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 429, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 90, 427, 427, 427, 428, 428,
	88, 88, 88, 77, 89, 377, 377, 376, 376, 375,
	375, 331, 331, 374, 374, 374, 373, 373, 373, 372,
	372, 371, 371, 370, 370, 368, 368, 369, 367, 366,
	366, 366, 364, 364, 364, 360, 360, 362, 361, 361,
	363, 355, 355, 358, 358, 356, 356, 356, 356, 359,
	354, 354, 354, 353, 353, 76, 76, 76, 283, 283,
	75, 75, 297, 297, 297, 297, 297, 295, 295, 295,
	295, 295, 295, 294, 294, 293, 293, 298, 298, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 67,
	67, 67, 67, 70, 70, 70, 71, 292, 292, 292,
	68, 69, 69, 282, 282, 287, 287, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 291,
	291, 291, 289, 289, 288, 288, 290, 290, 61, 61,
	61, 64, 63, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 62, 62, 62, 62, 62, 62, 58, 58,
	58, 58, 58, 57, 57, 59, 59, 279, 279, 278,
	72, 72, 73, 431, 431, 430, 432, 432, 432, 432,
	74, 80, 80, 80, 80, 80, 80, 80, 79, 79,
	82, 82, 81, 83, 66, 66, 66, 66, 66, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 401, 401,
	401, 403, 403, 218, 219, 433, 221, 217, 217, 217,
	397, 397, 398, 399, 400, 400, 400, 78, 7, 7,
	7, 7, 56, 54, 60, 60, 414, 414, 55, 421,
	421, 334, 334, 232, 232, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 337, 338, 228, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 38, 37, 37, 37, 268,
	268, 36, 434, 434, 207, 207, 45, 46, 47, 48,
	49, 50, 35, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 53, 53, 349, 349, 436, 436, 436, 51,
	52, 333, 333, 333, 43, 42, 41, 40, 40, 34,
	34, 33, 33, 39, 225, 225, 225, 227, 227, 223,
	435, 435, 309, 309, 226, 226, 32, 32, 32, 224,
	224, 206, 222, 222, 222, 8, 8, 6, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 18, 20, 276,
	276, 273, 19, 14, 13, 16, 12, 15, 17, 5,
	5, 5, 5, 9, 9, 10, 104, 104, 146, 146,
	409, 409, 405, 405, 406, 406, 406, 407, 407, 408,
	408, 84, 343, 343, 343, 343, 343, 343, 4, 126,
	126, 127, 127, 342, 342, 342, 342, 342, 342, 342,
	280, 280, 386, 386, 386, 387, 125, 125, 120, 120,
	344, 344, 246, 388, 388, 352, 352, 351, 351, 350,
	350, 123, 123, 124, 124, 107, 107, 93, 93, 357,
	357, 357, 357, 365, 365, 330, 330, 172, 172, 201,
	201, 202, 202, 97, 97, 98, 98, 98, 98, 98,
	98, 394, 394, 396, 396, 395, 122, 122, 118, 118,
	119, 119, 119, 117, 117, 116, 115, 115, 114, 112,
	112, 112, 113, 113, 113, 100, 100, 100, 99, 99,
	99, 99, 99, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 101, 101, 402, 402, 402,
	335, 335, 335, 340, 340, 184, 184, 185, 185, 183,
	183, 102, 102, 103, 103, 103, 103, 182, 182, 181,
	105, 105, 111, 110, 110, 106, 106, 106, 106, 192,
	192, 191, 191, 191, 191, 87, 91, 91, 92, 130,
	130, 190, 189, 189, 189, 129, 129, 128, 128, 121,
	121, 109, 109, 109, 109, 188, 108, 186, 426, 426,
	425, 425, 424, 422, 422, 422, 423, 423, 423, 423,
	379, 379, 379, 379, 379, 212, 212, 212, 216, 216,
	215, 215, 215, 215, 215, 220, 3, 3, 3, 3,
	24, 24, 24, 24, 24, 24, 30, 138, 139, 29,
	131, 131, 132, 132, 133, 133, 134, 135, 135, 135,
	137, 136, 28, 21, 410, 413, 411, 411, 415, 415,
	415, 416, 416, 416, 417, 417, 22, 412, 418, 418,
	418, 277, 277, 274, 275, 275, 272, 271, 271, 271,
	420, 420, 419, 419, 419, 213, 213, 23, 267, 267,
	269, 270, 270, 270, 261, 261, 261, 261, 27, 265,
	265, 266, 266, 266, 266, 266, 262, 262, 264, 264,
	260, 260, 260, 260, 260, 26, 259, 259, 257, 257,
	255, 255, 256, 256, 254, 254, 254, 258, 258, 25,
	25, 25, 95, 94, 94, 94, 204, 204, 203, 203,
	96, 336, 336, 299, 299, 300, 300, 300, 303, 303,
	315, 315, 316, 316, 314, 314, 321, 321, 320, 320,
	319, 319, 318, 318, 317, 317, 317, 317, 312, 312,
	311, 311, 301, 301, 301, 301, 301, 302, 302, 302,
	310, 310, 313, 313, 163, 163, 164, 164, 164, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 384, 384,
	385, 166, 166, 166, 170, 170, 170, 170, 170, 170,
	165, 165, 167, 167, 147, 147, 145, 145, 140, 140,
	141, 141, 142, 142, 143, 143, 144, 144, 144, 144,
	144, 144, 285, 285, 382, 382, 383, 383, 378, 378,
	378, 381, 381, 381, 381, 381, 380, 380, 148, 199,
	199, 199, 214, 214, 214, 214, 198, 198, 198, 162,
	162, 161, 161, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 284, 284,
	229, 229, 230, 230, 179, 178, 178, 178, 178, 178,
	176, 177, 175, 175, 175, 175, 175, 174, 174, 173,
	173, 173, 263, 263, 171, 171, 169, 169, 169, 168,
	168, 168, 322, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 238, 238, 243,
	243, 393, 393, 392, 149, 149, 149, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 158, 158, 158, 307,
	307, 307, 307, 307, 308, 308, 308, 305, 305, 306,
	306, 247, 248, 248, 341, 341, 304, 304, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 348, 348, 348, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	404, 404, 404, 389, 389, 389, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 196, 196, 196, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	249, 249, 250, 250, 345, 345, 345, 345, 345, 345,
	346, 346, 347, 347, 347, 347, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 236, 193, 193, 193, 251,
	244, 244, 245, 245, 239, 239, 239, 239, 239, 239,
	239, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 240, 240, 242, 242, 253, 253, 253,
	252, 252, 252, 252, 252, 252, 252, 160, 160, 160,
	160, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 151, 151, 151, 151, 155, 155, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 156, 156, 156, 156, 154, 154, 154, 154,
	154, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 85, 86, 86,
	153, 200, 200, 323, 323, 326, 326, 324, 324, 325,
	327, 327, 327, 328, 328, 328, 329, 329, 329, 332,
	332, 205, 205, 205, 211, 211, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 11, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 7, 7, 7, 8, 0, 4, 7, 0,
	3, 0, 2, 0, 1, 1, 1, 1, 4, 2,
	2, 3, 3, 4, 5, 3, 4, 4, 2, 2,
	2, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 2, 5, 5, 0,
	2, 7, 0, 1, 0, 1, 5, 3, 2, 4,
	4, 4, 4, 1, 1, 1, 3, 2, 3, 1,
	1, 1, 6, 8, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 6, 7, 4,
	4, 7, 8, 3, 0, 2, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 4, 5, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	3, 1, 4, 6, 4, 4, 4, 3, 6, 1,
	1, 2, 2, 11, 8, 9, 1, 3, 2, 4,
	0, 2, 0, 1, 1, 1, 1, 0, 1, 0,
	1, 4, 2, 1, 5, 4, 4, 2, 5, 0,
	4, 1, 3, 3, 1, 5, 6, 5, 5, 3,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 12,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 4,
	1, 1, 7, 7, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 0, 2, 7, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 5, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 11,
	9, 11, 2, 2, 4, 5, 1, 3, 0, 3,
	5, 0, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 0, 1, 1, 3, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 4, 1, 3,
	3, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 1, 7, 7, 7, 7,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 5, 6, 4, 1, 1, 2,
	0, 1, 1, 2, 5, 0, 1, 1, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	2, 2, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 3,
	5, 2, 2, 2, 2, 1, 1, 2, 5, 6,
	4, 6, 6, 1, 1, 1, 1, 0, 2, 0,
	1, 1, 2, 4, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	2, 2, 2, 2, 1, 1, 1, 2, 5, 0,
	1, 3, 0, 1, 0, 2, 0, 6, 8, 6,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 4, 6, 6, 7, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 2, 3, 5,
	1, 1, 3, 0, 1, 0, 3, 0, 3, 3,
	0, 3, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -429, -2, -1, -3, -88, -4, -84, -5, -6,
	-8, -65, -79, -81, -83, -82, -31, -7, -78, -57,
	-58, -61, -67, -72, -75, -76, -77, -89, -85, -86,
	-87, -97, -90, -24, -23, -22, -21, 398, 12, 443,
	-9, -10, -394, -11, 233, -217, -218, -219, -221, -433,
	-32, -33, -34, -40, -41, -42, -43, -51, -52, -53,
	-35, -36, -37, -38, -45, -46, -47, -48, -49, -50,
	-39, -55, -54, -60, -56, 209, -59, 61, -62, -63,
	-64, -68, -69, -70, -71, -73, -74, 329, 335, 388,
	525, 526, 46, -98, -100, 527, -25, -26, -27, -28,
	-29, -30, 205, 14, 476, -12, -15, -13, -16, -14,
	-19, -20, -18, -17, 228, 227, 37, 291, 292, 293,
	333, 226, 206, 13, 137, 138, 140, 141, 30, 41,
	311, -99, 67, 207, -101, 10, 529, 436, 528, -107,
	38, -145, -214, 70, 78, -208, -210, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 446, 309, 310, 473, 245, 269, 359,
	272, 279, 137, 156, 150, 178, 170, 145, 249, 284,
	250, 77, 140, 429, 88, 409, 385, 143, 264, 266,
	268, 271, 251, 166, 161, 263, 247, 525, 159, 252,
	39, 253, 183, 254, 255, 478, 405, 308, 411, 276,
	383, 160, 406, 267, 408, 185, 189, 421, 335, 154,
	155, 413, 423, 182, 225, 42, 475, 237, 424, 187,
	181, 177, 432, 280, 278, 180, 153, 176, 248, 50,
	191, 190, 192, 379, 380, 381, 382, 256, 257, 323,
	420, 173, 162, 313, 146, 22, 427, 232, 410, 336,
	258, 273, 281, 186, 188, 239, 244, 477, 387, 243,
	277, 425, 158, 236, 265, 231, 428, 147, 329, 338,
	259, 141, 270, 422, 431, 49, 351, 152, 144, 222,
	138, 241, 246, 11, 260, 261, 262, 283, 282, 274,
	174, 238, 179, 164, 151, 175, 139, 240, 430, 352,
	523, 311, 368, 172, 169, 242, 215, 426, 412, 142,
	372, 353, 167, 285, 519, 520, 521, 324, 307, 286,
	287, 165, 229, 404, 288, 290, 378, 300, 354, 386,
	360, 355, 198, 294, 415, 184, 522, -107, -59, -10,
	-9, -99, -100, -145, 213, -222, 23, 383, -66, 384,
	209, 67, -214, -5, -4, -84, -57, -97, -220, -214,
	291, 291, -220, 213, -214, 243, 367, -334, 218, -294,
	-267, 244, -293, -269, -296, -270, 31, 205, 207, 206,
	240, 14, 333, 214, 12, 10, 334, 226, 24, 25,
	27, 13, 335, 337, 28, 338, 341, 342, 343, 41,
	346, 347, 233, 70, 78, 73, 251, -139, -214, -245,
	-239, 95, 234, -241, -234, -235, -237, -374, -368, -233,
	67, 121, 122, 129, 96, -236, -322, 35, 98, 483,
	132, 444, -194, -195, -196, -197, -214, -369, -367, 73,
	79, 82, 85, 86, 84, 83, 163, 81, 74, 133,
	134, -100, 70, -389, 491, -209, 512, 511, 46, -339,
	-347, 212, -345, 168, 229, 164, 12, 127, 378, 165,
	488, 508, 446, 492, 515, 485, 486, 480, 481, 482,
	484, 493, 495, 507, -348, 503, 513, 514, 501, 72,
	71, 506, 505, 494, 489, 490, 496, 479, 487, 497,
	498, 504, 509, 510, 317, 88, 318, 319, 436, 312,
	320, 218, 383, 55, 321, 322, 323, 324, 325, 443,
	326, 56, 327, 316, 233, 368, 328, 167, 184, 448,
	447, 449, 440, 437, 435, 438, 439, 441, 442, 499,
	500, 502, -290, -288, -214, -91, -92, 517, -116, -117,
	-187, 19, 6, 7, 8, 9, -427, 385, 477, 294,
	330, 215, 309, 368, 243, -261, -259, -336, 288, 284,
	223, 222, 89, 436, 212, 344, -405, -406, 202, 203,
	204, -396, 469, -395, -214, 319, 26, 213, 330, 415,
	416, 417, 418, 419, -44, -349, -333, 412, 411, -226,
	410, 403, 414, 405, 310, 205, 470, -205, 354, 386,
	239, 433, 434, 331, 387, 421, 422, 406, 88, 171,
	168, 215, 309, 436, 368, -405, 142, 139, -281, 142,
	94, 147, 146, -281, 243, 367, 40, -287, 378, -286,
	-288, 421, 422, 432, 71, 72, 420, -205, 88, 404,
	404, -117, -187, -116, -98, -100, -87, -394, 309, 368,
	243, 214, 213, 215, 436, 291, 330, -335, -402, 31,
	-340, 199, 200, 201, 32, 33, -1, -214, 73, -123,
	235, -145, 135, -123, -117, -116, -117, -145, -198, -214,
	385, 104, -66, -66, 384, -397, -398, -399, -401, 209,
	384, 383, 135, 15, -220, -220, 65, -145, -269, 243,
	-294, -267, 35, 64, 136, 216, 136, 64, 67, 331,
	309, 368, 332, 436, 213, 344, 215, 243, 345, 309,
	368, 213, 215, 436, 243, 309, 213, 215, 368, 243,
	345, 403, 404, 215, 26, 336, 339, 340, 404, -353,
	432, 136, 94, 91, 92, 93, -239, 111, -252, 104,
	105, 106, 107, 108, 109, 110, 118, 117, 128, 121,
	122, 123, 124, 125, 126, 127, 119, 120, 114, 95,
	112, 116, 113, 97, -100, -239, -245, 46, -237, -237,
	-237, -237, -322, -243, -239, 67, 67, 67, 135, 73,
	-239, 67, 67, 67, 67, 67, 67, 67, 67, -346,
	67, 67, -249, -250, 67, 67, 73, 73, 67, 67,
	67, 73, -250, -250, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 136, -151, -155, -152, -154, -153, -157, -156, 168,
	169, 132, 172, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 30, 184, 229, 164, 165, 166, 167,
	185, 150, 170, 474, 193, 151, 194, 152, 195, 153,
	196, 154, 155, 197, 156, 159, 160, 161, 158, 135,
	-117, 136, 67, -93, 38, -119, 21, -101, -100, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 79, -138,
	-214, -131, -214, -257, 218, -257, -257, -257, 214, -257,
	213, 213, 213, -407, 149, 136, -396, -122, 67, -225,
	112, 116, 23, 241, 241, 278, -434, -435, 15, 114,
	-223, -435, -223, -225, -436, 214, 413, 42, 242, 241,
	-118, -119, -118, 407, 404, -309, 408, 409, -226, -225,
	-225, -226, -225, 213, 215, 436, -434, 241, -434, 30,
	30, -334, -334, 470, -206, -214, -334, -408, 217, 425,
	476, 145, 146, 147, -269, 243, 243, 136, 104, 23,
	-289, 104, 115, -288, -288, -288, -289, -289, -165, 40,
	-213, 132, -214, 73, -165, 40, -431, -430, -145, -118,
	-101, -100, 68, 68, 68, -334, -334, -334, -334, -334,
	-334, -334, -220, -131, -102, -103, 123, -239, -214, -102,
	38, 404, 38, -342, -126, -97, 310, 67, 67, -214,
	-343, 46, -97, 67, 30, -118, -93, -119, 135, 79,
	73, -66, 68, 136, -400, 85, 86, -403, 182, 174,
	-214, -80, 73, -3, -4, -5, -6, -31, -57, -97,
	-370, -368, 67, 31, 377, 64, 15, -295, 213, 436,
	330, 239, 215, 309, -293, -276, -273, -271, -213, -269,
	-272, -271, -298, -198, 404, -94, 389, 290, -239, -239,
	-239, -239, -239, 84, 95, 307, 85, 86, -234, -253,
	31, 286, 287, -235, -235, -235, -235, -235, -235, -235,
	-235, -235, -235, -235, -235, -242, -251, -322, 67, 114,
	112, 116, 113, 97, -237, -237, -235, -235, 68, 136,
	-393, -392, 99, -239, -239, -239, -214, -390, -391, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	321, 316, 322, 320, 312, 328, 323, 324, 167, 467,
	468, 461, 462, 463, 464, 465, 466, -244, -245, -244,
	-239, -390, -244, -193, 32, 31, -239, -404, 305, 304,
	306, -120, -214, -244, 68, 68, 68, 79, -245, -244,
	-235, -244, -391, -193, -193, -245, -245, -193, -193, -193,
	-193, 123, -193, -193, -193, -193, -193, -193, -193, -193,
	-288, 40, -329, 352, 351, -323, -325, 67, -324, 67,
	-324, -323, -323, 67, 67, -326, 67, -326, -326, -323,
	-327, 67, -327, -328, 67, -327, -214, -118, -92, -351,
	-350, -239, 40, 518, -93, -239, -115, -114, -239, -428,
	73, 34, 67, 135, -145, 95, -410, -214, -277, -274,
	-271, -267, -214, -214, -257, -257, -257, -408, -395, 34,
	-121, -214, -183, 16, -237, -237, -271, 243, -434, -225,
	-207, -206, -227, -435, -222, -227, -183, -435, -225, -225,
	-227, -223, 404, -183, -183, -309, -224, -214, -224, -257,
	-207, -207, -145, -410, -410, 30, -277, -110, -105, -109,
	-106, -111, -186, -188, -108, 67, -145, -100, -214, 426,
	427, 143, 146, 145, 31, 377, -292, 377, 31, -267,
	-286, -282, 73, 378, -272, -291, 64, 132, -350, -289,
	-289, -289, -291, -291, 131, 136, -432, 425, 426, 202,
	-93, -410, -276, -267, -214, -147, -145, -147, -214, 67,
	-182, 136, -181, 15, -215, -214, 34, 73, 135, -182,
	73, -147, 73, -280, 64, 46, 30, 67, -125, 68,
	-120, -124, -214, -344, -246, -388, 517, -125, 68, -386,
	-387, -120, -93, -93, -214, 23, -66, -398, 135, 136,
	-121, -295, -275, -272, -297, 123, -214, -283, 136, 476,
	530, 71, 216, -420, -419, 369, 68, 136, -354, 217,
	443, 73, 531, 198, 84, 307, 85, 86, -322, -245,
	-242, -237, -237, -235, -235, -240, 230, -240, 94, -239,
	-238, -392, 101, -239, 34, 68, 136, 65, 135, 68,
	68, 15, 15, 68, -239, 68, 15, 15, -239, 68,
	135, 68, 68, 68, 65, 68, 136, 68, 136, -245,
	-239, 68, 68, -239, -239, -239, -245, 68, -239, -239,
	-239, -239, -239, -239, -239, -239, -239, -332, 353, 79,
	79, -200, 73, -200, 79, 79, 79, 136, 68, 73,
	136, 22, 136, -112, 36, 37, -139, -132, -133, -134,
	-135, -151, -198, 169, 172, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 229, 164, 165, 166,
	167, 185, 150, 170, 151, 152, 153, 154, 155, 156,
	159, 160, 161, 158, -214, -122, 35, -413, 356, -421,
	136, 40, -419, -260, 65, -255, -256, -254, -258, 40,
	-145, -145, -145, 15, -104, -146, -214, 67, 68, 136,
	-239, -268, 65, -214, -207, -183, -214, -145, -214, -183,
	-183, -225, -227, -227, -223, 135, -206, -122, -414, 356,
	30, 315, -421, 30, -189, -190, -191, -192, 53, 57,
	59, 54, 55, 56, 60, 30, 136, -212, -216, 34,
	-214, 73, -212, -100, -105, -110, -212, 67, 144, 147,
	147, 146, 216, 67, 104, -291, -291, -291, 40, -213,
	-430, 432, 426, 64, 136, -132, -183, -103, -105, -214,
	73, -214, 123, -183, -172, 520, 38, -357, 408, 39,
	-344, -386, -127, -410, 68, 136, -126, 310, 68, 136,
	136, 67, 68, 46, 136, 104, 135, 385, -214, -368,
	68, -297, 136, 216, 135, 135, -273, 335, -213, -275,
	20, 476, -198, 38, -204, -203, 73, 531, 68, -240,
	-240, 94, -237, -234, 68, 102, -239, 100, -149, -151,
	351, 352, -150, -156, 132, 168, 229, 167, 166, 164,
	351, 352, -165, -214, -239, -239, 68, -239, -239, 15,
	-214, -165, -235, -239, -117, 68, -304, 399, -304, 68,
	68, 68, 68, -304, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 136, 68, 68, 68, 136,
	68, 136, -350, -357, -239, -239, -114, -113, 43, 343,
	68, 136, -151, 34, -416, 410, 358, -211, 104, -232,
	-231, 311, 41, -337, 378, 364, 365, -274, 243, 64,
	299, 300, 301, 302, -254, -205, 131, 254, 67, 67,
	67, -145, -104, -214, 15, 136, -409, 135, -1, -214,
	-267, -225, -183, -435, -183, -225, -225, -227, -214, 34,
	-416, -211, 315, 104, -232, -279, -278, -198, -109, -109,
	-109, -109, 53, 53, 53, 58, 53, 58, 53, -191,
	-279, -111, -122, -216, 68, -426, -425, -424, -422, 61,
	217, 62, -244, 147, -275, -228, 73, -282, -145, -145,
	68, -185, 17, 135, -185, 79, 73, -365, 395, 390,
	392, 90, 68, 136, -126, -120, 46, 67, -214, -246,
	-352, -351, 46, -97, -344, -387, -350, -214, 79, 15,
	-272, -267, 123, 123, -214, 336, -283, 73, 357, 73,
	213, 532, 136, 104, -204, -234, -239, 68, -158, 155,
	154, -158, 68, -323, -324, -323, -326, -323, -158, -158,
	68, 68, 23, 68, 68, 68, -239, 68, 68, 136,
	-341, 445, -304, 67, -304, -304, -304, -304, -304, -304,
	-304, -304, -304, -304, -304, -304, 73, 79, 79, -365,
	44, 45, 73, 211, -134, 40, -97, -417, 77, -411,
	73, -214, -418, 77, 359, 134, 313, 40, 360, 361,
	375, 308, 79, 79, 366, -412, -214, -145, -211, -211,
	-211, -140, -141, -142, -148, -143, -198, -230, -144, 221,
	219, 223, -383, 89, 224, 275, 90, 214, -140, -140,
	-123, 65, 135, -105, -146, -214, 123, 68, -183, -214,
	-183, -183, -225, -97, -417, -411, 104, 73, -418, -183,
	136, 104, -129, -128, 64, 65, -130, 64, -128, 53,
	53, -183, -424, -423, 23, -383, -383, -383, 68, 68,
	-184, 18, 20, 123, -184, -172, -330, 519, -361, -363,
	390, 20, 20, 13, -97, -410, 46, -97, -344, -127,
	68, -344, -267, -283, 378, -145, -203, 73, 532, -239,
	68, -239, 68, 73, -248, -247, 235, 68, 68, -330,
	-136, -151, -233, 73, -415, 369, 73, 73, 79, 40,
	79, 134, 362, -338, 67, -165, -167, -213, 132, 73,
	68, 136, -151, -144, -214, 90, -382, -383, -257, -382,
	90, 67, 68, 68, -212, -105, -214, -183, -409, 135,
	-183, -183, -415, 73, -117, -278, -350, -239, 67, -239,
	67, 53, 19, 17, -239, -245, -172, 73, 20, 73,
	-359, 73, -279, -344, 68, -126, 68, 68, -304, -117,
	20, -172, 475, 20, 476, 312, 40, 79, 40, 363,
	-262, -264, -198, 67, -163, -164, -180, 349, 245, -258,
	249, 77, 250, 385, 251, 214, 253, 254, 255, 225,
	256, 257, 258, 378, 259, 260, 261, 262, 332, 6,
	295, -142, -162, -161, -159, 84, 95, 40, 349, -160,
	77, 131, 268, 246, 269, -179, -229, 64, 355, 219,
	89, 90, 337, -230, -378, -380, -214, -380, -214, -378,
	-378, -257, -239, -95, -94, -163, -183, -183, -118, -121,
	-379, -214, 219, 20, 20, -201, 521, 73, 392, -96,
	-355, -309, -306, -305, -308, 396, 277, 402, -245, -201,
	-137, -214, 73, 357, 73, 312, 68, 136, -323, -239,
	-299, 235, 136, -180, -211, -211, -205, 131, -211, -211,
	-211, -211, 252, 252, -211, -211, -211, -211, -211, -211,
	-211, -211, -211, -211, -211, -211, -211, -211, 67, -159,
	84, -235, 73, -167, -168, 40, 267, 263, -169, 40,
	247, 248, -171, 67, 275, 13, 90, 90, -145, 67,
	65, 285, 67, 67, 67, -380, 68, -96, -299, -117,
	68, 68, 136, 67, 20, -331, 522, -364, 395, -358,
	-356, 390, 391, 392, 393, 68, -307, 97, 362, 366,
	-239, 34, 378, -265, -264, -112, 68, -300, 284, 20,
	-180, 79, 79, -211, -211, 79, 73, 73, 73, -211,
	-211, 79, 73, -216, 79, 79, 79, 79, 40, 73,
	-170, 40, 263, 267, 264, 265, 266, 79, 40, 79,
	40, 79, 40, -214, 67, -384, -385, 73, 79, 67,
	-345, -263, 67, -262, -381, 299, 300, 301, 303, 302,
	-381, -262, -262, -262, 67, -285, -284, 276, 95, -300,
	-118, -214, 219, -202, -214, -359, 73, -366, 217, -362,
	-363, 394, -356, 20, 392, 20, 20, -307, 517, 400,
	401, 400, 401, 73, -266, 225, 77, 476, 297, 298,
	-112, 20, -301, 277, 278, -302, -313, 280, -165, -165,
	73, 73, -166, 246, -147, 68, 136, 104, 68, -239,
	-249, -174, -173, 472, -262, 68, 68, 68, 68, -262,
	276, 68, 136, -373, 67, 79, -361, -360, -362, 20,
	-359, 20, -359, -359, 94, -211, 73, 296, -198, 67,
	-311, 281, 67, -309, 67, -309, 90, 300, 247, 248,
	68, -385, 73, 68, -178, -176, -177, 64, 406, 273,
	274, 68, -265, -265, -265, -265, 68, -214, -377, 30,
	68, -372, -371, -199, -367, -214, 395, 396, 73, -359,
	-307, 79, -214, -298, -303, 282, 79, -235, 67, -235,
	67, -310, 279, 67, -284, -177, 64, -176, 64, 14,
	13, -179, -376, -375, -374, 68, 136, 135, 68, -315,
	67, 20, 68, -298, 68, -298, 67, 104, -235, -175,
	270, 271, 30, 146, -175, 136, 104, -371, -214, -316,
	-314, 235, -302, 68, 68, 68, -298, 79, 68, 84,
	40, 272, -375, 40, -239, 135, 68, 136, -214, -312,
	283, 68, -214, -314, -317, 46, 79, -321, -318, 67,
	-180, 237, 114, -321, -180, -320, -319, 282, 238, 67,
	68, 136, -214, 234, 67, -245, -319, -318, -245, 68,
	68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 676, 677, 678, 679, 0, 0, 0,
	449, 450, 0, 427, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 337, 338, 339, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 349, 350, 351, 352, 353,
	354, 298, 299, 300, 301, 0, 233, 229, 208, 209,
	210, 169, 170, 171, 172, 240, 241, 311, 0, 0,
	0, 0, 0, 533, -2, 35, 680, 681, 682, 683,
	684, 685, -2, 462, 0, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 287, 288, 289, 283, 284, 286,
	285, -2, 0, 462, 222, 0, 213, 213, 0, 0,
	0, 553, 0, 0, 568, 590, 33, 0, 0, 511,
	0, 516, 886, 922, 923, 924, 925, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 511, 234, 451,
	452, 553, 553, 425, 0, 269, 0, 1372, 273, 0,
	0, 0, 422, 264, 265, 266, 267, 268, 0, 675,
	0, 0, 260, 0, 228, 1431, 0, 0, 0, 0,
	0, 0, 113, 738, 115, 740, 119, 126, 0, 0,
	131, 132, 135, 136, 137, 138, 139, 0, 143, 0,
	145, 148, 0, 150, 151, 0, 154, 155, 156, 0,
	166, 167, 168, 741, 742, 743, -2, 44, 688, 1297,
	1192, 0, 1199, 1200, 1211, 1222, 995, 996, 997, 998,
	0, 0, 0, 0, 0, 1005, 1006, 0, 1019, 1523,
	0, 0, 1013, 1014, 1015, 1016, 53, 65, 66, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 0,
	1165, 982, 922, 0, 1531, 0, 1551, 1550, 0, 0,
	1150, 0, 1140, 0, -2, -2, 0, 0, 1498, -2,
	1528, 1547, 1555, 1532, 1554, 1525, 1526, 1520, 1521, 1522,
	1524, 1533, 1535, 1546, 0, 1542, 1552, 1553, 0, 67,
	68, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1156, -2, 1158, 1159, 1161, 1162,
	1163, 1164, -2, 1167, 1168, 1169, -2, -2, 1172, 1173,
	1174, 1175, 1176, 1177, 1180, -2, 1182, -2, -2, 1152,
	1153, 1154, 1155, 1144, 1145, 1146, 1147, 1148, 1149, -2,
	-2, -2, 0, 206, 204, 553, 626, 0, -2, 0,
	0, 0, 573, 576, 579, 582, 0, 36, 37, 0,
	0, 768, 768, 768, 768, 0, 768, 0, 0, 0,
	745, 746, 747, 766, 767, 792, 467, 463, 464, 465,
	466, 541, 0, 543, 546, 404, 356, 0, 0, 0,
	368, 362, 0, 0, 404, 0, 0, 548, 548, 0,
	414, 404, 404, -2, 404, 0, 373, 374, 375, 362,
	0, 362, 379, 380, 381, 392, 393, 415, 1321, 0,
	0, 311, 311, 0, 311, 469, 223, 224, 212, 214,
	0, 218, 0, 211, 1431, 0, 0, 180, 1498, 185,
	0, 1379, 1445, 1394, 0, 0, 1412, 0, -2, 0,
	250, 548, 0, 554, 0, 553, 0, 0, 311, 311,
	311, 311, 311, 311, 311, 0, 0, 0, 0, 591,
	592, 587, 588, 589, 593, 594, 3, 0, 0, 479,
	0, 515, 0, 0, 548, -2, 0, 426, 270, 926,
	0, 0, 274, 275, 0, 0, 290, 0, 293, 278,
	279, 280, 0, 0, 262, 263, 0, 0, 230, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 123,
	120, 127, 130, 140, 147, 0, 159, 161, 164, 121,
	128, 133, 134, 141, 162, 122, 124, 125, 129, 163,
	165, 142, 146, 160, 144, 149, 152, 153, 158, 0,
	94, 0, 0, 0, 0, 0, 1198, 0, 0, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 1192, 0, 0, 1001, 1002,
	1003, 1004, 1007, 0, 1020, 0, 0, 0, 0, 1251,
	0, 1190, 1190, 0, 1190, 1186, 0, 0, 1190, 1129,
	0, 0, 1131, 1141, 0, 0, 1134, 1135, 1190, 0,
	1190, 1139, 1125, 1126, 0, 1186, 1186, 0, 0, 1186,
	1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186,
	1186, 0, 1298, 1316, 1253, 1254, 1255, 1303, 1257, 1307,
	1307, 1303, 1303, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 0, 0, 1296, 1276, 1305, 1305, 1305, 1303,
	1300, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1310, 1310, 1313, 1310, 0,
	548, 0, 0, 536, 0, 517, 0, 570, 572, 0,
	574, 575, 577, 578, 580, 581, 583, 584, 38, 0,
	687, 0, 690, 0, 0, 0, 0, 0, 0, 0,
	768, 768, 768, 469, 468, 0, 542, 0, 0, 599,
	0, 0, 0, 362, 404, 367, 364, 363, 410, 411,
	407, 0, 407, 599, 0, 386, 387, 388, 404, 404,
	394, 549, 395, 396, 407, 0, 412, 413, 0, 599,
	599, 0, 403, 0, 0, 768, 364, 377, 364, 1322,
	1323, 0, 0, 0, 0, 421, 0, 0, 470, 0,
	0, 216, 0, 221, 173, 0, 0, 0, 0, 0,
	0, 202, 203, 0, 0, 0, 0, 0, 193, 196,
	880, 881, 735, 736, 197, 198, 242, 243, 0, 517,
	569, 571, 565, 566, 567, 0, 0, 0, 0, 0,
	0, 0, 447, 0, 607, 601, 603, 670, 53, 607,
	0, 0, 0, 490, 0, 484, 0, 0, 0, 887,
	471, 503, 473, 0, 492, 517, 539, 517, 0, 271,
	0, 276, 0, 0, 292, 294, 295, 296, 281, 282,
	423, 258, 259, 251, 252, 253, 254, 255, 256, 257,
	261, 63, 0, 231, 232, 0, 0, 0, 107, 108,
	109, 110, 111, 112, 114, 98, 439, 441, 727, 739,
	0, 730, 0, 117, 157, 90, 0, 0, 1193, 1194,
	1195, 1196, 1197, 1201, 0, 1203, 1205, 1207, 1209, 0,
	1227, -2, -2, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 1212, 1225, 1226, 0, 0,
	0, 0, 0, 0, 1223, 1223, 1218, 0, 999, 0,
	1017, 1021, 0, 0, 0, 0, 54, 1185, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 0, 1191, 0,
	1192, 0, 0, 0, 1187, 1188, 0, 0, 1090, 1091,
	1092, 0, 498, 0, 1151, 1130, 1142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 1319, 1317, 1318, 1256, 1304, 0, 1281, 0,
	1282, 1283, 1284, 0, 0, 1277, 0, 1278, 1279, 1280,
	1272, 0, 1273, 1274, 0, 1275, 205, 625, 627, 0,
	507, 509, 510, 0, 537, 550, 555, 556, 559, 34,
	39, 0, 692, 0, 546, 0, 0, 704, 309, 721,
	0, 737, 760, -2, 0, 0, 0, 0, 544, 0,
	0, 639, 355, 0, 405, 406, 359, 1431, 364, 599,
	369, 365, 370, 0, 409, 371, 372, 0, 599, 599,
	404, 407, 407, 399, 400, 0, 416, 419, 417, 0,
	376, 378, 546, 306, 0, 0, 309, 612, 0, 613,
	614, 610, 641, 665, 665, 0, 665, 645, 886, 225,
	226, 0, 0, 220, 174, 175, 0, 177, 178, 179,
	186, 181, 183, 0, 0, 187, 199, 200, 201, 0,
	0, 0, 191, 192, 0, 0, 245, 246, 248, 0,
	535, 437, 438, 442, 0, 444, 884, 445, 446, 692,
	599, 0, 608, 0, 604, 671, 0, 673, 0, 599,
	527, 0, 519, 478, 0, 503, 492, 0, 0, 479,
	496, 0, 513, 472, 500, 0, 504, 0, 0, 477,
	493, 0, 538, 540, 927, 0, 277, 291, 0, 0,
	0, 0, 101, 724, 0, 102, 106, 96, 0, 0,
	0, 729, 0, 726, 731, 0, 116, 0, 0, 91,
	92, 783, 788, 0, 1202, 1204, 1206, 1208, 1210, 0,
	1213, 1223, 1223, 1219, 0, 1214, 0, 1216, 0, 1193,
	0, 1022, 0, 0, 0, 1010, 0, 0, 0, 1078,
	1079, 0, 0, 1083, 0, 1085, 0, 0, 0, 1089,
	0, 1128, 1143, 1132, 0, 1136, 0, 1138, 0, 553,
	0, 1056, 1056, 0, 0, 0, 0, 1056, 0, 0,
	0, 0, 0, 0, 0, 0, 1299, 1252, 1320, 0,
	0, 0, 1301, 0, 0, 0, 0, 0, 628, 519,
	0, 0, 0, 562, 560, 561, 0, 0, 693, 694,
	696, 697, 0, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1364, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 691, 0, 769, 711, 1324, 313,
	0, 0, 723, 0, 0, 765, -2, 772, 0, 778,
	0, 0, 0, 0, 0, 456, 460, 33, 547, 0,
	600, 357, 0, 358, 404, 366, 408, 599, 886, 389,
	390, 599, 404, 404, 407, 0, 418, 0, 711, 1324,
	0, 0, 313, 0, 0, 0, 0, 0, 632, 0,
	0, 631, 0, 0, 0, 0, 0, 546, 666, 0,
	668, 669, 643, -2, 0, 612, 648, 1190, 227, 215,
	217, 0, 0, 0, 0, 188, 189, 190, 194, 195,
	244, 247, 249, 0, 0, 0, 597, 602, 609, 672,
	674, 54, 605, 597, 40, 0, 0, 523, 0, 0,
	483, 489, 0, 481, 479, 0, 0, 0, 512, 0,
	503, 505, 0, 503, 0, 0, 0, 0, 424, 64,
	297, 0, 0, 0, 0, 0, 440, 0, 728, 98,
	0, 0, 118, 0, 0, 786, 0, 788, 1189, 1215,
	1217, 0, 1224, 1220, 1000, 1008, 1018, 0, 0, 1024,
	1036, 1036, 0, 1027, 1303, 1307, 1030, 1303, 1305, 1303,
	1036, 1036, 0, 55, 0, 0, 1084, 0, 0, 0,
	499, 0, 0, 0, 1054, 1056, 1060, 0, 1061, 1056,
	1056, 1056, 1056, 1066, 1056, 1056, 1056, 1056, 1056, 1056,
	1056, 1056, 1309, 1308, 1294, 0, 1295, 1306, 1311, 0,
	1314, 0, 508, 523, 551, 552, 557, 558, 0, 0,
	0, 0, 698, 0, 714, 712, 713, 0, 1325, 718,
	314, 315, 316, 317, 0, 0, 0, 722, 0, 0,
	761, 762, 763, 764, 773, 1324, 1324, 1324, 888, 888,
	888, 511, 0, -2, 0, 0, 458, 0, 0, 640,
	360, 599, 382, 0, 397, 599, 599, 404, 420, 0,
	714, 0, 0, 0, 718, 599, 237, 0, 635, 629,
	0, 618, 633, 634, 621, 0, 623, 0, 619, 620,
	599, 611, 642, 667, 644, 647, 649, 650, 656, 0,
	0, 0, 0, 219, 176, 0, 333, 182, 443, 885,
	448, 595, 0, 0, 595, 528, 527, 525, 78, 0,
	0, 0, 480, 0, 0, 497, 503, 0, 514, 501,
	0, 506, 503, 476, 475, 494, 495, 928, 272, 0,
	725, 98, 103, 104, 105, 99, 97, 732, 0, 734,
	0, 784, 788, 0, 0, 1221, 1023, 1009, 1025, 1037,
	1038, 1026, 1011, 1028, 1029, 1031, 1032, 1033, 1034, 1035,
	1012, 1080, 0, 1082, 1086, 1087, 0, 1133, 1137, 0,
	0, 0, 1059, 1052, 1062, 1063, 1064, 1065, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1302, 0, 0, 525,
	563, 564, 686, 0, 695, 0, 702, 703, 0, 0,
	706, 707, 716, 0, 0, 0, 319, 320, 0, 0,
	0, 332, 328, 329, 330, 310, 717, 0, 0, 0,
	0, 0, 889, 890, 892, 893, 0, 0, 895, 952,
	0, 904, 768, 904, 0, 0, 906, 907, 0, 0,
	665, 0, 0, 599, 457, 460, 461, 545, 361, 599,
	401, 398, 599, 302, 303, 0, 0, 304, 308, 553,
	0, 0, 615, 636, 0, 0, 616, 0, 617, 622,
	624, 236, 651, 0, 0, 653, 654, 655, 646, 184,
	585, 0, 0, 606, 586, 41, 527, 0, 524, 79,
	0, 0, 0, 0, 485, 482, 503, 488, 487, 0,
	502, 474, 100, 95, 733, 479, 787, 789, 785, 0,
	1088, 0, 1056, 1055, 553, 1053, 0, 1312, 1315, 527,
	0, 701, 699, 715, 705, 0, 719, 720, 0, 321,
	322, 0, 325, 331, 0, 774, 775, 882, 883, 776,
	-2, 0, -2, 894, 953, 916, 916, 905, 916, 916,
	768, 0, 0, -2, 599, 599, -2, 454, 459, 0,
	383, 402, 307, 305, 548, 238, 239, 637, 0, 630,
	660, 657, 0, 0, 596, 598, 529, 526, 0, 520,
	522, 89, 491, 486, 480, 81, 1081, 1127, 1058, 1049,
	0, 529, 0, 0, 0, 318, 323, 0, 326, 327,
	0, 756, 1303, 0, 793, -2, 836, 1324, 1324, 0,
	1324, 1324, 1324, 1324, 0, 0, 1324, 1324, 1324, 1324,
	1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
	0, 891, 918, -2, 931, 933, 0, 0, 936, 937,
	0, 0, 0, 0, 974, 943, 0, 0, 947, 0,
	1239, 1240, 0, 951, 0, 908, 917, 0, 917, 0,
	0, 916, 0, 780, 81, 793, 553, 455, 235, 0,
	0, 661, 663, 658, 659, 42, 0, 80, 0, 51,
	72, 0, 0, 1050, 0, 1044, 1045, 1046, 1051, 518,
	0, 700, 708, 0, 710, 324, 749, 0, 559, 0,
	795, 0, 777, 838, 0, 0, 1324, 1324, 0, 0,
	0, 0, 1324, 1324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 932,
	934, 935, 938, 939, 940, 979, 980, 981, 941, 976,
	977, 978, 942, 0, 0, 0, 1237, 1238, 972, 0,
	0, 0, 0, 0, 0, 0, 902, 782, 795, 548,
	638, 652, 0, 0, 0, 43, 0, 69, 0, 82,
	83, 0, 0, 0, 0, 1057, 1047, 0, 0, 0,
	0, 0, 709, 748, 757, 758, 559, 779, 0, 832,
	837, 839, 840, 0, 0, 843, 844, 845, 846, 0,
	0, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 874, 875, 876, 877, 878, 879, 859, 860, 861,
	862, 863, 864, 871, 0, 0, 868, 0, 0, 0,
	1140, 967, 0, 0, 909, 911, 912, 913, 914, 915,
	910, 0, 0, 0, 0, 901, 903, 948, 0, 781,
	453, 662, 664, 0, 531, 521, 52, 56, 0, 78,
	75, 0, 84, 0, 0, 0, 0, 0, 1039, 1040,
	1042, 1041, 1043, 689, 750, 1324, 0, 0, 754, 755,
	759, 0, 820, 0, 0, 826, 0, 833, 841, 842,
	847, 848, 865, 0, 0, 867, 0, 0, 975, 0,
	946, 955, 968, 0, 0, 749, 749, 749, 749, 0,
	949, 530, 0, 45, 0, 0, 73, 74, 76, 0,
	85, 0, 87, 88, 0, 0, 752, 0, 796, 0,
	798, 0, 0, 0, 0, 0, 830, 0, 872, 873,
	866, 869, 870, 944, 954, 956, 957, 0, 969, 970,
	971, 973, 896, 897, 898, 899, 0, 532, 790, 0,
	57, 0, 59, 61, 62, 919, 70, 71, 77, 86,
	1048, 751, 753, 0, 800, 0, 821, 0, 0, 0,
	0, 0, 0, 0, 945, 958, 0, 959, 0, 0,
	0, 900, 46, 47, 0, 58, 0, 0, 797, 794,
	0, 832, 822, 0, 824, 0, 0, 0, 0, 960,
	962, 963, 0, 0, 961, 0, 0, 60, 920, 0,
	802, 0, 818, 823, 825, 827, 0, 831, 829, 964,
	966, 965, 48, 49, 50, 0, 801, 0, 814, 799,
	0, 828, 921, 803, -2, 0, 819, 804, -2, 0,
	812, 0, 0, 805, 813, 0, 808, 0, 0, 0,
	807, 0, -2, 815, 0, 0, 809, -2, 0, 817,
	816,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 529,
	105, 104, 106, 3, 530, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 531, 117, 532, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:630
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:636
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:671
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:676
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:682
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:702
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:708
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:715
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:723
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:729
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:738
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:747
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:757
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:779
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:793
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:804
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:810
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:814
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:820
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:827
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:835
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:839
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:853
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:857
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:861
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[5].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:874
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:880
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:889
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:900
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:904
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:910
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:914
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:920
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:924
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:930
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:954
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:973
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:977
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:981
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:986
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:997
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1005
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1012
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1017
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1024
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1033
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1057
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1061
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1067
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1073
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1091
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1108
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1131
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1135
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1139
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1144
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1148
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1167
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1178
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1191
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1195
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1205
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1218
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1231
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1237
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1243
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().ToLowerForConfig(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1250
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().ToLowerForConfig(),
				TabName: yyDollar[3].cstrUnion().ToLowerForConfig(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1258
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().ToLowerForConfig(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1267
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1271
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1275
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1279
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1283
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1294
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1298
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1304
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1311
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1320
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1324
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1330
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1334
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1338
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1342
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1346
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1350
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1354
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1358
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1402
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1406
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1410
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1414
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1418
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1422
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1426
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1430
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1434
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1438
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1454
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1458
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1462
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1466
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1470
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1474
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1478
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1514
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1518
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1522
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1526
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1552
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1561
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1591
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1595
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1599
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1605
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1611
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1615
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1622
		{
			yyVAL.str = yyDollar[3].str
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1628
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1632
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1638
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1646
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1655
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1663
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1671
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1694
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1717
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1724
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1731
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1739
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1746
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1753
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1762
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1766
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1770
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1776
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1780
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1786
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1790
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig() + "." + yyDollar[3].cstrUnion().ToLowerForConfig()
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1796
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1800
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1811
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1817
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1822
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1826
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1830
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1834
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1838
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1842
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1846
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1854
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1860
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1864
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1868
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1872
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1877
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion().ToLowerForConfig(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1895
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1901
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1908
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1925
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1943
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1954
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1958
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1964
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1980
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1984
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:1990
		{
			yyLOCAL = tree.TableLock{yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:1996
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2000
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2004
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2008
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2014
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2026
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2032
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2036
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2042
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2046
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2052
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2058
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2068
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2078
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2082
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2086
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2090
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2094
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2102
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2110
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2120
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2161
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2165
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2171
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2177
		{
			yyVAL.str = yyDollar[1].str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2182
		{
			yyVAL.str = "true"
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2183
		{
			yyVAL.str = "false"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2184
		{
			yyVAL.str = yyDollar[1].str
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2189
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2202
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2213
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2225
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2233
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2242
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2248
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2259
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2270
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2279
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2283
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2288
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2292
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2308
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2312
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2320
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2324
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2328
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2332
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2340
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2348
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2352
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2356
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2360
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2364
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2368
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2374
		{
			yyVAL.item = nil
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2379
		{
			yyVAL.item = nil
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2411
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2416
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2420
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2424
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().ToLowerForConfig())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2437
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2448
		{
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2452
		{
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2457
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2478
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2505
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2513
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2529
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2543
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2550
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().ToLowerForConfig()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().ToLowerForConfig()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2560
		{
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2562
		{
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2571
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2581
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2590
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2594
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2598
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2604
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2610
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2616
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2622
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2632
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2644
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2648
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2654
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2666
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2680
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2689
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2693
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2698
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2702
		{
			yyVAL.str = yyDollar[2].cstrUnion().ToLowerForConfig()
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2708
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2721
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2725
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2731
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2736
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2740
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2746
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().ToLowerForConfig()})
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2750
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[1].cstrUnion().ToLowerForConfig()})
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2756
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2762
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().ToLowerForConfig()})
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2766
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[1].cstrUnion().ToLowerForConfig()})
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2770
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[1].cstrUnion().ToLowerForConfig()})
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2776
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2800
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2809
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2818
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2822
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2828
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2837
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2846
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().ToLowerForConfig()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2856
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2862
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2868
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().ToLowerForConfig()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2874
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2880
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2891
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2896
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2903
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2919
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2932
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2943
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2947
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2953
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2958
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2965
		{
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2967
		{
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2970
		{
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2979
		{
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2983
		{
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2988
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2997
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3004
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3010
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3018
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3025
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3032
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3052
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3065
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3071
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3075
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3081
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3089
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3102
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3111
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3127
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3147
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3151
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3160
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3164
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3170
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3179
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3183
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3189
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3193
		{
			yyVAL.str = yyDollar[3].cstrUnion().ToLowerForConfig()
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3199
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3203
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3209
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3214
		{
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3225
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3229
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3236
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3245
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3251
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig())}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3255
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()))
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3261
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3265
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3270
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3274
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3301
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3319
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3338
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3351
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3355
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3368
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3372
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3377
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3381
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3388
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3393
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3406
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3410
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3414
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3426
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3432
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3448
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3452
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3458
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3470
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3479
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3485
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3489
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3493
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3498
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3502
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3508
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3514
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3518
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3524
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3529
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3533
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3537
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3542
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3546
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3550
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3556
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3560
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3564
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3578
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3582
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3592
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3602
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3612
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3624
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3632
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3640
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3649
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3657
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3665
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3673
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3681
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3689
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3697
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3705
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3713
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3723
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3734
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3748
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3752
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3756
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3761
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3765
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3769
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3782
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3791
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3800
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3806
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3810
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3816
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3820
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3825
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().ToLowerForConfig())}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3829
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[1].cstrUnion().ToLowerForConfig())}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3834
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3842
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3848
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3856
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3864
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3874
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3880
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3889
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3898
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3907
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3917
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3921
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3931
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3935
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3939
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3943
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3949
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3959
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3963
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3969
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3979
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3985
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3991
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3995
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3999
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4009
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4015
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4019
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4025
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig())}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4029
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()))
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4035
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4039
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4049
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4062
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4068
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4074
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().ToLowerForConfig()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4087
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4098
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4105
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4109
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4115
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4125
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4129
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4133
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4138
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4142
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4146
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4150
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4159
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().ToLowerForConfig()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4163
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4167
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4171
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4176
		{
			yyVAL.str = ""
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4180
		{
			yyVAL.str = yyDollar[1].str
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4184
		{
			yyVAL.str = yyDollar[2].str
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4190
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4196
		{
			yyLOCAL = tree.NewCStr("", false)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4200
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4204
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4208
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, true)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4212
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, true)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4218
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 686:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4248
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4258
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4264
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 689:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4271
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4283
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4288
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4294
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4301
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4305
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4311
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4317
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4321
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4325
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4331
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4337
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4343
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4354
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4366
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4372
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4382
		{
			yyVAL.str = yyDollar[1].str
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4386
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4392
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4399
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4413
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4419
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4426
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4434
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4440
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4449
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4461
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4466
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4472
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4480
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4586
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4590
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4596
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4606
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4610
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4616
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4626
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4630
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4634
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4643
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4649
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4656
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4662
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4671
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4678
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4687
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4691
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4697
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().ToLowerForConfig()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4711
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4715
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, true)
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4719
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4724
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4728
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4732
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4736
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4742
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().ToLowerForConfig()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4761
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4765
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4787
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4791
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4795
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().ToLowerForConfig()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4799
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4803
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4809
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4813
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4819
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4824
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4829
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4833
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4837
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4841
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4845
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4851
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].cstrUnion().ToLowerForConfig()),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4865
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4869
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4878
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4884
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4888
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4894
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4902
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4907
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4911
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4917
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4929
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4951
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4958
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4968
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4976
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4987
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4991
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4996
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5000
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5007
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5018
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5022
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5031
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5045
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5052
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5063
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5072
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5076
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5082
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5086
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5092
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().ToLowerForConfig()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5101
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().ToLowerForConfig()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5115
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5121
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5125
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5131
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().ToLowerForConfig()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5138
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().ToLowerForConfig()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5147
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5151
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5160
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5165
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5169
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5174
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5178
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5188
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5192
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5203
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5211
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5219
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5227
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5238
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5247
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5257
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5267
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5271
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5276
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5280
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5289
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5295
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5299
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5303
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5309
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5313
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5317
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5321
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5325
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5329
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5334
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5338
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5342
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5346
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5350
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5354
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5362
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5366
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5370
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5374
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5378
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5382
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5386
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5390
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5394
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5398
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5402
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5406
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5410
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5414
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5418
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5422
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5429
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5433
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5439
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5444
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5448
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5452
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5458
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5462
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5466
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5470
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5474
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5478
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5492
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5496
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5505
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5510
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5516
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5523
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5527
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5537
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5543
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5555
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5561
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5570
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5579
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5602
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5611
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5621
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5629
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5635
		{
			yyVAL.str = ""
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5639
		{
			yyVAL.str = yyDollar[1].str
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5649
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5655
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5661
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().ToLowerForConfig()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5675
		{
			yyVAL.str = ""
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5679
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5685
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5691
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5695
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5699
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[5].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5705
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5709
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, true)
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5713
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5717
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5723
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5727
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5731
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[5].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5740
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5746
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5750
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5756
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5760
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5764
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5768
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5772
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5776
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5781
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5785
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5789
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5793
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5797
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5801
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5805
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5809
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5822
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5828
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5832
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5837
		{
			yyVAL.str = ""
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5841
		{
			yyVAL.str = yyDollar[1].str
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5847
		{
			yyVAL.str = ""
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5851
		{
			yyVAL.str = yyDollar[2].cstrUnion().ToLowerForConfig()
		}
	case 954:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5857
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5869
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5876
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5883
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5890
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5897
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5906
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5912
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5918
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5922
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5926
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5930
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5934
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5939
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5946
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5950
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5954
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5963
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5968
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5972
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5988
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5994
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5998
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6002
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6006
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6010
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6014
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6018
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6022
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6026
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6030
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6034
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6038
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6042
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6048
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6052
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6056
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6060
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6064
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6068
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6072
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6076
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6080
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6084
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6088
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6092
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6097
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6105
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6109
		{
			locale := ""
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: "BINARY",
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			})
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6121
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6125
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6134
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6138
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6142
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6146
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6155
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6164
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6170
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6174
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6180
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6190
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6207
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6224
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6237
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6250
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6262
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6276
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6291
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6306
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6323
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6338
		{
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6344
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6348
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6352
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6358
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6362
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6370
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6374
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6378
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6384
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6391
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6404
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6411
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6420
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6425
		{
			yyVAL.str = ","
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6429
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6438
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6448
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6459
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6469
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6478
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6487
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6497
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6507
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6517
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6527
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6537
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6547
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6557
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6567
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6577
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6587
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6597
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6607
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6624
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6632
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6640
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6648
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6656
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6666
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6674
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6683
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6694
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6704
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6716
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6727
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6749
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6785
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6797
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6809
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6820
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6828
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6835
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6842
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6854
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6862
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6873
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6882
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6891
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6899
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6909
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6917
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6931
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6941
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6960
		{
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6962
		{
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7003
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7014
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7018
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7022
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7028
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7037
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7043
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7047
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7054
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7058
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7062
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7070
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7074
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7078
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7082
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7088
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7092
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7096
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7100
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7104
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7108
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7112
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7116
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7120
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7124
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7132
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7136
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7140
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7144
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7148
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7152
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7156
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7160
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7164
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7168
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7174
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7178
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7184
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7188
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7195
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7199
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7203
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7209
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7213
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7217
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7221
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7225
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7229
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7233
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7239
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7243
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7247
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7251
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7257
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7261
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7274
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7279
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7283
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7287
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7291
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7295
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7299
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7313
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7317
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7324
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7335
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7340
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7346
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7358
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7370
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7382
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7395
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7408
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7421
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7434
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7447
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7460
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7473
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7486
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7499
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7512
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7527
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7550
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7584
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7632
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7649
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7661
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7681
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7701
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7721
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7737
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7750
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7763
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7776
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7789
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7801
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7813
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7825
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7837
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7849
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7861
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7873
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7885
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7897
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7910
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7923
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7938
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7946
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7955
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7965
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7988
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7993
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7999
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8006
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8010
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8015
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8019
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8025
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8031
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8038
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8045
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8054
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8061
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8068
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8077
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8081
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8085
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8091
		{
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8093
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8103
		{
			yyVAL.str = ""
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8107
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

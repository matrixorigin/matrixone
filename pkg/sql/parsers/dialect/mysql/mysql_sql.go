// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const DOUBLECOLON = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_BINARY = 57459
const INTERVAL = 57460
const BEGIN = 57461
const START = 57462
const TRANSACTION = 57463
const COMMIT = 57464
const ROLLBACK = 57465
const WORK = 57466
const CONSISTENT = 57467
const SNAPSHOT = 57468
const CHAIN = 57469
const NO = 57470
const RELEASE = 57471
const PRIORITY = 57472
const QUICK = 57473
const BIT = 57474
const TINYINT = 57475
const SMALLINT = 57476
const MEDIUMINT = 57477
const INT = 57478
const INTEGER = 57479
const BIGINT = 57480
const INTNUM = 57481
const REAL = 57482
const DOUBLE = 57483
const FLOAT_TYPE = 57484
const DECIMAL = 57485
const NUMERIC = 57486
const DECIMAL_VALUE = 57487
const TIME = 57488
const TIMESTAMP = 57489
const DATETIME = 57490
const YEAR = 57491
const CHAR = 57492
const VARCHAR = 57493
const BOOL = 57494
const CHARACTER = 57495
const VARBINARY = 57496
const NCHAR = 57497
const TEXT = 57498
const TINYTEXT = 57499
const MEDIUMTEXT = 57500
const LONGTEXT = 57501
const BLOB = 57502
const TINYBLOB = 57503
const MEDIUMBLOB = 57504
const LONGBLOB = 57505
const JSON = 57506
const ENUM = 57507
const UUID = 57508
const GEOMETRY = 57509
const POINT = 57510
const LINESTRING = 57511
const POLYGON = 57512
const GEOMETRYCOLLECTION = 57513
const MULTIPOINT = 57514
const MULTILINESTRING = 57515
const MULTIPOLYGON = 57516
const INT1 = 57517
const INT2 = 57518
const INT3 = 57519
const INT4 = 57520
const INT8 = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const SCHEMA = 57534
const TABLE = 57535
const INDEX = 57536
const VIEW = 57537
const TO = 57538
const IGNORE = 57539
const IF = 57540
const PRIMARY = 57541
const COLUMN = 57542
const CONSTRAINT = 57543
const SPATIAL = 57544
const FULLTEXT = 57545
const FOREIGN = 57546
const KEY_BLOCK_SIZE = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const MAXVALUE = 57556
const PARTITION = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const STATUS = 57563
const VARIABLES = 57564
const ROLE = 57565
const PROXY = 57566
const AVG_ROW_LENGTH = 57567
const STORAGE = 57568
const DISK = 57569
const MEMORY = 57570
const CHECKSUM = 57571
const COMPRESSION = 57572
const DATA = 57573
const DIRECTORY = 57574
const DELAY_KEY_WRITE = 57575
const ENCRYPTION = 57576
const ENGINE = 57577
const MAX_ROWS = 57578
const MIN_ROWS = 57579
const PACK_KEYS = 57580
const ROW_FORMAT = 57581
const STATS_AUTO_RECALC = 57582
const STATS_PERSISTENT = 57583
const STATS_SAMPLE_PAGES = 57584
const DYNAMIC = 57585
const COMPRESSED = 57586
const REDUNDANT = 57587
const COMPACT = 57588
const FIXED = 57589
const COLUMN_FORMAT = 57590
const AUTO_RANDOM = 57591
const RESTRICT = 57592
const CASCADE = 57593
const ACTION = 57594
const PARTIAL = 57595
const SIMPLE = 57596
const CHECK = 57597
const ENFORCED = 57598
const RANGE = 57599
const LIST = 57600
const ALGORITHM = 57601
const LINEAR = 57602
const PARTITIONS = 57603
const SUBPARTITION = 57604
const SUBPARTITIONS = 57605
const TYPE = 57606
const ANY = 57607
const SOME = 57608
const EXTERNAL = 57609
const LOCALFILE = 57610
const URL = 57611
const PREPARE = 57612
const DEALLOCATE = 57613
const PROPERTIES = 57614
const PARSER = 57615
const VISIBLE = 57616
const INVISIBLE = 57617
const BTREE = 57618
const HASH = 57619
const RTREE = 57620
const BSI = 57621
const ZONEMAP = 57622
const LEADING = 57623
const BOTH = 57624
const TRAILING = 57625
const UNKNOWN = 57626
const EXPIRE = 57627
const ACCOUNT = 57628
const UNLOCK = 57629
const DAY = 57630
const NEVER = 57631
const PUMP = 57632
const SECOND = 57633
const ASCII = 57634
const COALESCE = 57635
const COLLATION = 57636
const HOUR = 57637
const MICROSECOND = 57638
const MINUTE = 57639
const MONTH = 57640
const QUARTER = 57641
const REPEAT = 57642
const REVERSE = 57643
const ROW_COUNT = 57644
const WEEK = 57645
const REVOKE = 57646
const FUNCTION = 57647
const PRIVILEGES = 57648
const TABLESPACE = 57649
const EXECUTE = 57650
const SUPER = 57651
const GRANT = 57652
const OPTION = 57653
const REFERENCES = 57654
const REPLICATION = 57655
const SLAVE = 57656
const CLIENT = 57657
const USAGE = 57658
const RELOAD = 57659
const FILE = 57660
const TEMPORARY = 57661
const ROUTINE = 57662
const EVENT = 57663
const SHUTDOWN = 57664
const NULLX = 57665
const AUTO_INCREMENT = 57666
const APPROXNUM = 57667
const SIGNED = 57668
const UNSIGNED = 57669
const ZEROFILL = 57670
const ENGINES = 57671
const ADMIN_NAME = 57672
const RANDOM = 57673
const SUSPEND = 57674
const ATTRIBUTE = 57675
const HISTORY = 57676
const REUSE = 57677
const CURRENT = 57678
const OPTIONAL = 57679
const FAILED_LOGIN_ATTEMPTS = 57680
const PASSWORD_LOCK_TIME = 57681
const UNBOUNDED = 57682
const SECONDARY = 57683
const USER = 57684
const IDENTIFIED = 57685
const CIPHER = 57686
const ISSUER = 57687
const X509 = 57688
const SUBJECT = 57689
const SAN = 57690
const REQUIRE = 57691
const SSL = 57692
const NONE = 57693
const PASSWORD = 57694
const MAX_QUERIES_PER_HOUR = 57695
const MAX_UPDATES_PER_HOUR = 57696
const MAX_CONNECTIONS_PER_HOUR = 57697
const MAX_USER_CONNECTIONS = 57698
const FORMAT = 57699
const VERBOSE = 57700
const CONNECTION = 57701
const TRIGGERS = 57702
const PROFILES = 57703
const LOAD = 57704
const INFILE = 57705
const TERMINATED = 57706
const OPTIONALLY = 57707
const ENCLOSED = 57708
const ESCAPED = 57709
const STARTING = 57710
const LINES = 57711
const ROWS = 57712
const IMPORT = 57713
const FROM_JSONLINE = 57714
const DATABASES = 57715
const TABLES = 57716
const EXTENDED = 57717
const FULL = 57718
const PROCESSLIST = 57719
const FIELDS = 57720
const COLUMNS = 57721
const OPEN = 57722
const ERRORS = 57723
const WARNINGS = 57724
const INDEXES = 57725
const SCHEMAS = 57726
const NAMES = 57727
const GLOBAL = 57728
const SESSION = 57729
const ISOLATION = 57730
const LEVEL = 57731
const READ = 57732
const WRITE = 57733
const ONLY = 57734
const REPEATABLE = 57735
const COMMITTED = 57736
const UNCOMMITTED = 57737
const SERIALIZABLE = 57738
const LOCAL = 57739
const EVENTS = 57740
const PLUGINS = 57741
const CURRENT_TIMESTAMP = 57742
const DATABASE = 57743
const CURRENT_TIME = 57744
const LOCALTIME = 57745
const LOCALTIMESTAMP = 57746
const UTC_DATE = 57747
const UTC_TIME = 57748
const UTC_TIMESTAMP = 57749
const REPLACE = 57750
const CONVERT = 57751
const SEPARATOR = 57752
const TIMESTAMPDIFF = 57753
const CURRENT_DATE = 57754
const CURRENT_USER = 57755
const CURRENT_ROLE = 57756
const SECOND_MICROSECOND = 57757
const MINUTE_MICROSECOND = 57758
const MINUTE_SECOND = 57759
const HOUR_MICROSECOND = 57760
const HOUR_SECOND = 57761
const HOUR_MINUTE = 57762
const DAY_MICROSECOND = 57763
const DAY_SECOND = 57764
const DAY_MINUTE = 57765
const DAY_HOUR = 57766
const YEAR_MONTH = 57767
const SQL_TSI_HOUR = 57768
const SQL_TSI_DAY = 57769
const SQL_TSI_WEEK = 57770
const SQL_TSI_MONTH = 57771
const SQL_TSI_QUARTER = 57772
const SQL_TSI_YEAR = 57773
const SQL_TSI_SECOND = 57774
const SQL_TSI_MINUTE = 57775
const RECURSIVE = 57776
const CONFIG = 57777
const DRAINER = 57778
const MATCH = 57779
const AGAINST = 57780
const BOOLEAN = 57781
const LANGUAGE = 57782
const WITH = 57783
const QUERY = 57784
const EXPANSION = 57785
const ADDDATE = 57786
const BIT_AND = 57787
const BIT_OR = 57788
const BIT_XOR = 57789
const CAST = 57790
const COUNT = 57791
const APPROX_COUNT_DISTINCT = 57792
const APPROX_PERCENTILE = 57793
const CURDATE = 57794
const CURTIME = 57795
const DATE_ADD = 57796
const DATE_SUB = 57797
const EXTRACT = 57798
const GROUP_CONCAT = 57799
const MAX = 57800
const MID = 57801
const MIN = 57802
const NOW = 57803
const POSITION = 57804
const SESSION_USER = 57805
const STD = 57806
const STDDEV = 57807
const STDDEV_POP = 57808
const STDDEV_SAMP = 57809
const SUBDATE = 57810
const SUBSTR = 57811
const SUBSTRING = 57812
const SUM = 57813
const SYSDATE = 57814
const SYSTEM_USER = 57815
const TRANSLATE = 57816
const TRIM = 57817
const VARIANCE = 57818
const VAR_POP = 57819
const VAR_SAMP = 57820
const AVG = 57821
const JSON_EXTRACT = 57822
const UNNEST = 57823
const GENERATE_SERIES = 57824
const ROW = 57825
const OUTFILE = 57826
const HEADER = 57827
const MAX_FILE_SIZE = 57828
const FORCE_QUOTE = 57829
const UNUSED = 57830
const BINDINGS = 57831
const DO = 57832
const DECLARE = 57833

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"DOUBLECOLON",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"FROM_JSONLINE",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"GENERATE_SERIES",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7914

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 76,
	21, 482,
	-2, 463,
	-1, 81,
	211, 672,
	-2, 716,
	-1, 98,
	42, 329,
	211, 329,
	238, 336,
	239, 336,
	400, 329,
	-2, 357,
	-1, 452,
	67, 1061,
	-2, 1560,
	-1, 453,
	67, 1079,
	-2, 1531,
	-1, 458,
	67, 1080,
	-2, 1559,
	-1, 479,
	67, 994,
	-2, 1606,
	-1, 480,
	67, 995,
	-2, 1605,
	-1, 481,
	67, 1568,
	-2, 1590,
	-1, 482,
	67, 1569,
	-2, 1591,
	-1, 483,
	67, 1570,
	-2, 1597,
	-1, 484,
	67, 1571,
	-2, 1580,
	-1, 485,
	67, 1572,
	-2, 1588,
	-1, 486,
	67, 1573,
	-2, 1598,
	-1, 487,
	67, 1574,
	-2, 1599,
	-1, 488,
	67, 1575,
	-2, 1604,
	-1, 489,
	67, 1576,
	-2, 1609,
	-1, 490,
	67, 1577,
	-2, 1610,
	-1, 494,
	67, 1058,
	-2, 1412,
	-1, 501,
	67, 1067,
	-2, 1438,
	-1, 505,
	67, 1071,
	-2, 1477,
	-1, 506,
	67, 1072,
	-2, 1555,
	-1, 514,
	67, 1082,
	-2, 1540,
	-1, 516,
	67, 1084,
	-2, 1550,
	-1, 528,
	67, 974,
	-2, 1600,
	-1, 529,
	67, 975,
	-2, 1601,
	-1, 530,
	67, 976,
	-2, 1602,
	-1, 537,
	21, 483,
	-2, 446,
	-1, 579,
	395, 357,
	396, 357,
	-2, 330,
	-1, 621,
	103, 1412,
	114, 1412,
	134, 1412,
	-2, 1219,
	-1, 651,
	21, 483,
	-2, 446,
	-1, 750,
	21, 482,
	-2, 901,
	-1, 753,
	90, 914,
	91, 914,
	92, 914,
	93, 914,
	94, 914,
	96, 914,
	103, 914,
	104, 914,
	105, 914,
	106, 914,
	107, 914,
	108, 914,
	109, 914,
	110, 914,
	111, 914,
	112, 914,
	113, 914,
	115, 914,
	116, 914,
	117, 914,
	118, 914,
	119, 914,
	120, 914,
	121, 914,
	122, 914,
	123, 914,
	124, 914,
	125, 914,
	126, 914,
	127, 914,
	-2, 920,
	-1, 755,
	90, 914,
	91, 914,
	92, 914,
	93, 914,
	94, 914,
	96, 914,
	103, 914,
	104, 914,
	105, 914,
	106, 914,
	107, 914,
	108, 914,
	109, 914,
	110, 914,
	111, 914,
	112, 914,
	113, 914,
	115, 914,
	116, 914,
	117, 914,
	118, 914,
	119, 914,
	120, 914,
	121, 914,
	122, 914,
	123, 914,
	124, 914,
	125, 914,
	126, 914,
	127, 914,
	-2, 921,
	-1, 756,
	90, 914,
	91, 914,
	92, 914,
	93, 914,
	94, 914,
	96, 914,
	103, 914,
	104, 914,
	105, 914,
	106, 914,
	107, 914,
	108, 914,
	109, 914,
	110, 914,
	111, 914,
	112, 914,
	113, 914,
	115, 914,
	116, 914,
	117, 914,
	118, 914,
	119, 914,
	120, 914,
	121, 914,
	122, 914,
	123, 914,
	124, 914,
	125, 914,
	126, 914,
	127, 914,
	-2, 922,
	-1, 757,
	90, 914,
	91, 914,
	92, 914,
	93, 914,
	94, 914,
	96, 914,
	103, 914,
	104, 914,
	105, 914,
	106, 914,
	107, 914,
	108, 914,
	109, 914,
	110, 914,
	111, 914,
	112, 914,
	113, 914,
	115, 914,
	116, 914,
	117, 914,
	118, 914,
	119, 914,
	120, 914,
	121, 914,
	122, 914,
	123, 914,
	124, 914,
	125, 914,
	126, 914,
	127, 914,
	-2, 923,
	-1, 786,
	90, 914,
	91, 914,
	92, 914,
	93, 914,
	94, 914,
	96, 914,
	103, 914,
	104, 914,
	105, 914,
	106, 914,
	107, 914,
	108, 914,
	109, 914,
	110, 914,
	111, 914,
	112, 914,
	113, 914,
	115, 914,
	116, 914,
	117, 914,
	118, 914,
	119, 914,
	120, 914,
	121, 914,
	122, 914,
	123, 914,
	124, 914,
	125, 914,
	126, 914,
	127, 914,
	-2, 1039,
	-1, 1050,
	67, 1127,
	-2, 1557,
	-1, 1051,
	67, 1128,
	-2, 1558,
	-1, 1072,
	90, 914,
	91, 914,
	92, 914,
	93, 914,
	94, 914,
	96, 914,
	103, 914,
	104, 914,
	105, 914,
	106, 914,
	107, 914,
	108, 914,
	109, 914,
	110, 914,
	111, 914,
	112, 914,
	113, 914,
	115, 914,
	116, 914,
	117, 914,
	118, 914,
	119, 914,
	120, 914,
	121, 914,
	122, 914,
	123, 914,
	124, 914,
	125, 914,
	126, 914,
	127, 914,
	-2, 1122,
	-1, 1208,
	1, 698,
	68, 698,
	509, 698,
	-2, 705,
	-1, 1217,
	1, 349,
	16, 349,
	68, 349,
	509, 349,
	-2, 914,
	-1, 1320,
	134, 1229,
	-2, 1227,
	-1, 1322,
	134, 616,
	-2, 1224,
	-1, 1323,
	134, 617,
	-2, 1225,
	-1, 1528,
	90, 914,
	91, 914,
	92, 914,
	93, 914,
	94, 914,
	96, 914,
	103, 914,
	104, 914,
	105, 914,
	106, 914,
	107, 914,
	108, 914,
	109, 914,
	110, 914,
	111, 914,
	112, 914,
	113, 914,
	115, 914,
	116, 914,
	117, 914,
	118, 914,
	119, 914,
	120, 914,
	121, 914,
	122, 914,
	123, 914,
	124, 914,
	125, 914,
	126, 914,
	127, 914,
	-2, 1122,
	-1, 1613,
	1, 699,
	68, 699,
	509, 699,
	-2, 705,
	-1, 1728,
	90, 914,
	91, 914,
	92, 914,
	93, 914,
	94, 914,
	96, 914,
	103, 914,
	104, 914,
	105, 914,
	106, 914,
	107, 914,
	108, 914,
	109, 914,
	110, 914,
	111, 914,
	112, 914,
	113, 914,
	115, 914,
	116, 914,
	117, 914,
	118, 914,
	119, 914,
	120, 914,
	121, 914,
	122, 914,
	123, 914,
	124, 914,
	125, 914,
	126, 914,
	127, 914,
	-2, 1123,
	-1, 1729,
	90, 1112,
	91, 1112,
	92, 1112,
	93, 1112,
	103, 1112,
	104, 1112,
	105, 1112,
	106, 1112,
	107, 1112,
	108, 1112,
	109, 1112,
	110, 1112,
	115, 1112,
	-2, 1119,
	-1, 1819,
	65, 401,
	135, 401,
	-2, 807,
	-1, 1909,
	90, 1112,
	91, 1112,
	92, 1112,
	93, 1112,
	103, 1112,
	104, 1112,
	105, 1112,
	106, 1112,
	107, 1112,
	108, 1112,
	109, 1112,
	110, 1112,
	115, 1112,
	-2, 1120,
	-1, 2011,
	6, 494,
	7, 494,
	8, 494,
	9, 494,
	19, 494,
	21, 494,
	68, 494,
	-2, 573,
	-1, 2051,
	87, 705,
	130, 705,
	167, 705,
	170, 705,
	-2, 755,
	-1, 2053,
	272, 869,
	-2, 849,
	-1, 2083,
	65, 401,
	135, 401,
	-2, 808,
	-1, 2120,
	87, 705,
	130, 705,
	167, 705,
	170, 705,
	-2, 756,
	-1, 2148,
	272, 869,
	-2, 850,
	-1, 2249,
	90, 1121,
	91, 1121,
	92, 1121,
	93, 1121,
	103, 1121,
	104, 1121,
	105, 1121,
	106, 1121,
	107, 1121,
	108, 1121,
	109, 1121,
	110, 1121,
	115, 1121,
	-2, 855,
	-1, 2549,
	68, 728,
	135, 728,
	-2, 705,
	-1, 2554,
	68, 728,
	135, 728,
	-2, 705,
	-1, 2570,
	68, 732,
	135, 732,
	-2, 705,
	-1, 2575,
	68, 733,
	135, 733,
	-2, 705,
}

const yyPrivate = 57344

const yyLast = 25129

var yyAct = [...]int{
	424, 2554, 1114, 2563, 2556, 2553, 2527, 1027, 2393, 405,
	2473, 2186, 2515, 426, 2430, 2160, 2457, 2362, 2458, 2366,
	2342, 1663, 2105, 2116, 1597, 2184, 777, 1285, 900, 2350,
	1251, 2045, 118, 115, 946, 2185, 754, 450, 115, 344,
	350, 2206, 350, 1023, 2103, 1659, 348, 27, 538, 2076,
	1161, 1795, 2169, 1948, 2149, 1213, 1822, 620, 1030, 2168,
	1944, 354, 1310, 114, 887, 1665, 438, 76, 335, 1273,
	1658, 1837, 2057, 1035, 533, 397, 1949, 1303, 2024, 2001,
	1860, 1500, 360, 1963, 566, 1959, 1620, 646, 1517, 889,
	1164, 1317, 402, 1942, 1496, 1171, 1320, 1311, 403, 1304,
	1185, 1312, 334, 1266, 1495, 76, 533, 75, 624, 398,
	1875, 1836, 1953, 1246, 115, 1244, 1215, 1645, 1224, 347,
	16, 1797, 1619, 1792, 627, 35, 2124, 345, 6, 3,
	346, 5, 1193, 1531, 1614, 1201, 813, 406, 1021, 1034,
	1497, 968, 1606, 404, 648, 1270, 1603, 1225, 1226, 1237,
	876, 1288, 1236, 337, 1507, 622, 582, 1585, 27, 1078,
	1064, 1012, 1511, 35, 340, 414, 662, 858, 1291, 1661,
	1197, 1020, 1026, 612, 626, 1668, 915, 1200, 76, 1232,
	565, 535, 1084, 925, 1113, 537, 1083, 1176, 13, 362,
	7, 4, 901, 938, 575, 349, 363, 109, 106, 613,
	563, 2567, 2540, 111, 1514, 2439, 967, 2107, 1504, 2213,
	2112, 2044, 1189, 1306, 536, 625, 1104, 110, 110, 32,
	100, 82, 110, 110, 32, 100, 82, 778, 681, 110,
	927, 16, 2421, 2411, 333, 1711, 35, 352, 977, 6,
	2177, 645, 5, 110, 1719, 32, 100, 82, 110, 1501,
	874, 1512, 1104, 523, 974, 522, 524, 525, 715, 526,
	527, 1794, 912, 110, 913, 32, 100, 82, 1254, 1255,
	897, 906, 907, 532, 107, 976, 632, 631, 633, 107,
	107, 928, 2446, 105, 1883, 997, 107, 1783, 714, 592,
	94, 2461, 2462, 1013, 2444, 1017, 1228, 1029, 904, 74,
	107, 903, 906, 907, 713, 107, 630, 708, 2204, 1793,
	357, 2434, 2435, 1935, 60, 2207, 2208, 2209, 2210, 1016,
	107, 2295, 1936, 2298, 1937, 2216, 2046, 1031, 1706, 656,
	696, 1800, 697, 1267, 2365, 665, 2034, 115, 655, 1263,
	2065, 1508, 359, 1259, 2072, 1974, 1964, 596, 1604, 654,
	2275, 1903, 350, 635, 115, 1100, 1582, 1901, 1097, 2166,
	699, 2182, 1099, 1096, 1098, 1102, 1103, 653, 1008, 628,
	1101, 1160, 1159, 710, 539, 1716, 684, 2420, 393, 2278,
	1972, 394, 650, 652, 672, 2179, 1018, 711, 712, 101,
	102, 1100, 103, 104, 1097, 1968, 2471, 351, 1099, 1096,
	1098, 1102, 1103, 597, 2448, 1015, 1101, 2269, 76, 76,
	626, 752, 2545, 2564, 2460, 81, 2443, 108, 2481, 701,
	665, 702, 2395, 694, 2488, 629, 1042, 1045, 1046, 1969,
	1970, 1521, 1523, 1524, 2418, 98, 723, 1043, 555, 895,
	676, 2262, 2537, 651, 1971, 751, 2423, 2424, 2364, 704,
	689, 625, 691, 760, 2231, 2230, 81, 99, 108, 396,
	58, 2401, 1513, 1806, 1119, 395, 35, 35, 2391, 2392,
	914, 2395, 934, 919, 764, 750, 98, 93, 92, 695,
	692, 623, 2253, 37, 634, 706, 707, 933, 1966, 2450,
	2451, 875, 2518, 1107, 1108, 1109, 1110, 1111, 1112, 1105,
	1106, 1014, 667, 666, 899, 898, 658, 659, 674, 892,
	2565, 2528, 700, 2219, 2558, 647, 625, 877, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1107,
	1108, 1109, 1110, 1111, 1112, 1105, 1106, 2257, 698, 2572,
	95, 96, 358, 685, 1532, 2293, 705, 670, 926, 1712,
	593, 1502, 673, 753, 755, 756, 757, 1677, 1502, 557,
	1505, 681, 1862, 1864, 687, 566, 1908, 1957, 703, 554,
	553, 1195, 1502, 880, 68, 1906, 690, 693, 97, 2539,
	69, 758, 2438, 855, 2106, 882, 353, 667, 666, 884,
	548, 1519, 1518, 1814, 1799, 560, 561, 562, 905, 686,
	1868, 786, 1674, 902, 603, 807, 863, 2519, 660, 2449,
	906, 907, 931, 2422, 1257, 533, 533, 533, 1258, 1965,
	950, 950, 906, 907, 1975, 2276, 1904, 2363, 896, 1268,
	595, 1673, 70, 594, 551, 2557, 350, 971, 971, 680,
	1256, 71, 1515, 599, 1044, 1803, 1804, 1503, 600, 1522,
	979, 954, 602, 546, 540, 952, 605, 604, 688, 1802,
	893, 1967, 1216, 948, 948, 83, 83, 909, 910, 995,
	83, 83, 1216, 970, 970, 2183, 1262, 83, 2178, 980,
	1260, 950, 1720, 950, 655, 716, 552, 788, 789, 1958,
	956, 83, 1984, 975, 334, 1028, 83, 1608, 878, 879,
	675, 881, 2255, 2571, 593, 1009, 2254, 1820, 623, 547,
	2500, 83, 1701, 76, 1815, 1863, 1004, 2351, 2352, 2353,
	2355, 2354, 1808, 1809, 1810, 1811, 2327, 76, 2524, 2516,
	2517, 860, 916, 717, 916, 537, 76, 862, 1676, 1675,
	681, 2258, 2259, 929, 930, 1654, 2578, 2225, 1954, 1957,
	1696, 638, 643, 644, 1033, 1294, 1038, 1039, 1040, 1041,
	72, 73, 1821, 920, 1082, 886, 2052, 1011, 556, 1591,
	856, 908, 1711, 1129, 911, 1032, 1559, 1025, 1655, 1558,
	1010, 1655, 2577, 1135, 595, 35, 1686, 594, 1501, 1003,
	2568, 1998, 1607, 1596, 35, 1141, 1142, 1000, 1080, 1081,
	999, 678, 398, 1116, 932, 398, 2546, 533, 1123, 1006,
	398, 944, 945, 717, 941, 942, 943, 398, 1047, 981,
	398, 955, 398, 990, 991, 986, 333, 1821, 2541, 398,
	398, 966, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 972, 982, 717, 1073, 1074, 717,
	1655, 679, 1579, 1022, 1563, 1182, 2531, 2569, 1002, 537,
	1001, 998, 1492, 2530, 2475, 885, 2468, 1167, 1168, 1019,
	2463, 1958, 679, 1510, 1128, 1292, 1951, 1076, 1024, 950,
	1952, 1955, 1208, 1137, 1183, 1175, 566, 681, 2452, 1214,
	2440, 1072, 950, 2416, 1187, 2542, 935, 2477, 1191, 2415,
	2414, 1194, 1204, 2086, 1985, 2413, 1166, 923, 924, 2403,
	1877, 1066, 994, 1233, 1233, 1823, 1238, 640, 641, 642,
	993, 1238, 2071, 1510, 1714, 950, 115, 1186, 1173, 1174,
	1510, 2476, 1956, 2280, 1231, 2286, 533, 2280, 950, 959,
	960, 961, 962, 963, 964, 965, 2328, 2330, 2331, 2332,
	2329, 1115, 2285, 1118, 1117, 1686, 2279, 2441, 1130, 1279,
	2280, 950, 1203, 1284, 115, 115, 2280, 2280, 1136, 2201,
	1138, 1296, 2280, 1139, 1713, 1187, 2404, 1129, 1129, 1314,
	1705, 1187, 1187, 1638, 1555, 2199, 1542, 1289, 1222, 1223,
	1595, 1243, 1287, 1491, 1286, 1286, 1299, 983, 1290, 854,
	763, 2022, 2287, 668, 2020, 1322, 1156, 649, 1214, 735,
	1220, 1989, 950, 2018, 1855, 1779, 1323, 1264, 1777, 1624,
	1775, 1773, 1541, 2280, 1898, 1196, 1229, 1230, 1190, 1762,
	718, 1725, 1269, 1209, 1217, 939, 2202, 1900, 1184, 1178,
	916, 1181, 1221, 626, 1283, 890, 940, 720, 721, 722,
	719, 1202, 2200, 1227, 76, 601, 1709, 1703, 720, 721,
	722, 719, 1698, 1493, 1218, 1235, 1211, 1210, 717, 1219,
	1526, 2021, 718, 1239, 720, 721, 722, 719, 1309, 1623,
	2019, 1655, 1780, 718, 625, 1778, 1499, 1774, 1774, 1899,
	1277, 1278, 1540, 1234, 1240, 1592, 717, 1202, 717, 718,
	1566, 1242, 1241, 1594, 398, 2552, 1565, 1509, 2513, 1265,
	2504, 987, 35, 1534, 917, 2501, 1538, 722, 719, 1929,
	1796, 719, 1280, 1624, 1704, 2405, 1520, 1121, 1120, 1699,
	1281, 1731, 1282, 1022, 750, 1274, 1275, 1276, 1498, 937,
	718, 1300, 2265, 718, 2301, 1999, 1624, 1907, 1315, 1570,
	1316, 1702, 1489, 1321, 1679, 1490, 1548, 657, 1079, 1549,
	606, 1553, 1591, 1079, 1790, 1537, 1199, 717, 2264, 1529,
	1530, 2061, 1494, 717, 1510, 625, 2056, 1564, 988, 1879,
	1567, 1568, 1569, 398, 2248, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 2551, 558, 1580, 1516, 115, 115, 733, 743,
	744, 736, 737, 738, 739, 740, 741, 742, 735, 1960,
	115, 1621, 918, 1528, 1525, 2290, 2291, 2559, 1147, 936,
	1238, 2533, 115, 2288, 2289, 2498, 1600, 1602, 344, 1527,
	720, 721, 722, 719, 1066, 1122, 1238, 1536, 1922, 1733,
	1617, 738, 739, 740, 741, 742, 735, 1289, 2482, 2379,
	2344, 115, 1629, 1625, 2322, 718, 1140, 2321, 1290, 1143,
	1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1154,
	743, 744, 736, 737, 738, 739, 740, 741, 742, 735,
	950, 2320, 1664, 1921, 1664, 736, 737, 738, 739, 740,
	741, 742, 735, 971, 598, 115, 1598, 1599, 1690, 2338,
	1692, 720, 721, 722, 719, 720, 721, 722, 719, 2455,
	2336, 1187, 1187, 1187, 1632, 1133, 2536, 1667, 828, 2369,
	2317, 2311, 1670, 1684, 2308, 1134, 718, 2307, 1587, 970,
	718, 720, 721, 722, 719, 1615, 1551, 2337, 2334, 1630,
	1631, 720, 721, 722, 719, 1634, 1071, 1636, 2335, 2214,
	720, 721, 722, 719, 2547, 2068, 718, 1609, 1666, 2535,
	1689, 1069, 1070, 1068, 1973, 1737, 718, 1933, 1932, 1894,
	1590, 2324, 1628, 1589, 1588, 718, 2333, 1633, 1584, 1227,
	1637, 1635, 2274, 1583, 1641, 1639, 984, 1640, 2525, 1550,
	2180, 853, 850, 851, 852, 2069, 2478, 1742, 2470, 1741,
	1740, 1738, 2110, 2454, 720, 721, 722, 719, 1687, 2323,
	1753, 720, 721, 722, 719, 2343, 786, 1694, 1539, 816,
	1680, 1681, 1682, 806, 720, 721, 722, 719, 2181, 718,
	1205, 1206, 1207, 2070, 1688, 2117, 718, 836, 840, 842,
	844, 846, 847, 849, 2436, 853, 850, 851, 852, 718,
	2399, 831, 832, 833, 834, 814, 815, 837, 2398, 817,
	1739, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 829, 835, 2109, 720, 721, 722, 719, 2570, 2386,
	839, 841, 843, 845, 848, 720, 721, 722, 719, 2325,
	393, 2318, 1707, 394, 2039, 720, 721, 722, 719, 718,
	2314, 2313, 950, 2312, 950, 2277, 950, 746, 2250, 749,
	718, 655, 2215, 2211, 830, 2115, 720, 721, 722, 719,
	718, 2113, 1721, 2099, 747, 748, 745, 2098, 1925, 734,
	733, 743, 744, 736, 737, 738, 739, 740, 741, 742,
	735, 718, 950, 1746, 1924, 2079, 2067, 1717, 1561, 2543,
	720, 721, 722, 719, 2066, 2063, 1754, 2036, 1962, 1931,
	950, 1905, 1871, 1770, 1723, 1593, 720, 721, 722, 719,
	478, 477, 1977, 1923, 1732, 718, 1745, 1743, 1744, 1586,
	1155, 985, 1747, 1748, 787, 948, 782, 781, 1751, 1752,
	1769, 718, 2406, 1198, 1755, 720, 721, 722, 719, 2376,
	1757, 110, 2375, 948, 100, 82, 2374, 2373, 950, 2080,
	1718, 2051, 720, 721, 722, 719, 2042, 2041, 2030, 1819,
	718, 1545, 2023, 2011, 1990, 1825, 1729, 1930, 1187, 1927,
	1708, 1784, 1785, 1194, 1920, 1710, 1912, 718, 1911, 1833,
	1715, 1856, 1776, 655, 115, 115, 115, 115, 1772, 1817,
	1771, 1571, 1562, 1560, 1838, 655, 115, 1853, 107, 2566,
	1756, 1781, 1726, 1557, 1556, 1789, 1838, 1554, 1547, 27,
	115, 1544, 655, 1813, 1022, 1867, 1728, 1736, 950, 1734,
	1543, 1132, 1131, 1866, 957, 2512, 115, 115, 2506, 76,
	2489, 2486, 2484, 1664, 110, 779, 720, 721, 722, 719,
	1129, 2378, 1129, 2360, 2348, 1889, 1854, 2268, 1768, 398,
	1826, 2345, 950, 2340, 2302, 1163, 1873, 1874, 1827, 2272,
	2271, 718, 2270, 2267, 1830, 2261, 1831, 1892, 2246, 1786,
	720, 721, 722, 719, 1187, 888, 626, 2094, 1893, 1187,
	1615, 1818, 16, 1805, 838, 1884, 1828, 35, 1812, 1829,
	6, 107, 1824, 5, 2092, 718, 1832, 2074, 2062, 1839,
	1840, 1841, 1842, 1835, 1834, 76, 1851, 1186, 1172, 1852,
	1910, 1850, 1888, 1165, 1816, 1791, 537, 1857, 1886, 1697,
	1202, 1678, 1869, 1872, 1672, 1671, 1627, 1767, 1913, 1622,
	1926, 1915, 655, 1917, 1067, 1897, 1880, 1890, 1882, 1887,
	1902, 1885, 1891, 1947, 107, 1878, 1896, 1177, 115, 720,
	721, 722, 719, 541, 542, 543, 544, 655, 1180, 1170,
	1909, 115, 1621, 746, 1988, 749, 540, 1169, 1947, 1914,
	1007, 978, 1918, 1919, 718, 1766, 857, 1916, 1978, 805,
	747, 748, 745, 1611, 2534, 734, 733, 743, 744, 736,
	737, 738, 739, 740, 741, 742, 735, 720, 721, 722,
	719, 804, 803, 802, 801, 1979, 1980, 1981, 800, 799,
	746, 798, 749, 797, 2008, 958, 796, 795, 1746, 794,
	793, 792, 718, 791, 790, 785, 1986, 747, 748, 745,
	671, 1765, 734, 733, 743, 744, 736, 737, 738, 739,
	740, 741, 742, 735, 784, 1983, 783, 115, 1987, 115,
	1982, 1764, 780, 720, 721, 722, 719, 776, 2010, 1996,
	1995, 2006, 1994, 726, 727, 728, 729, 730, 731, 732,
	724, 775, 773, 720, 721, 722, 719, 2035, 718, 2037,
	2012, 772, 115, 771, 1991, 770, 769, 1992, 1993, 768,
	767, 2055, 766, 1997, 765, 762, 761, 2028, 718, 2038,
	683, 2031, 2002, 2003, 2494, 2492, 2040, 2459, 2009, 2005,
	1763, 1807, 2050, 1685, 1302, 2015, 2016, 2017, 2032, 2033,
	950, 950, 682, 1847, 1845, 115, 2083, 2049, 1848, 1846,
	2007, 1844, 720, 721, 722, 719, 1843, 2550, 1849, 655,
	1651, 1652, 1938, 1939, 1788, 1700, 1616, 76, 1642, 1157,
	1838, 2097, 1695, 2096, 2075, 1724, 1664, 718, 1598, 1599,
	1941, 2053, 1722, 948, 2077, 2054, 859, 2060, 1605, 2101,
	1129, 1647, 1650, 1651, 1652, 1648, 1187, 1649, 1653, 2091,
	59, 677, 2093, 2217, 1940, 2085, 2088, 2095, 1657, 1761,
	2082, 1212, 34, 655, 2081, 1760, 2121, 2170, 2172, 2427,
	2170, 2170, 2100, 398, 1947, 2058, 922, 2058, 921, 2090,
	2089, 720, 721, 722, 719, 655, 330, 720, 721, 722,
	719, 709, 2108, 1647, 1650, 1651, 1652, 1648, 331, 1649,
	1653, 2014, 2102, 1214, 1488, 2195, 718, 1121, 1120, 2176,
	33, 891, 718, 2084, 2059, 1759, 861, 2167, 2507, 1758,
	2171, 2087, 2383, 2146, 2381, 2118, 2305, 2192, 2303, 2173,
	2174, 1750, 871, 872, 2300, 2221, 540, 720, 721, 722,
	719, 720, 721, 722, 719, 2299, 332, 869, 870, 2189,
	2085, 867, 868, 720, 721, 722, 719, 2297, 2193, 865,
	866, 2198, 718, 2197, 2114, 2048, 718, 950, 541, 542,
	543, 544, 2047, 2026, 864, 2025, 1876, 115, 718, 1216,
	1895, 540, 2496, 2495, 2222, 2223, 2172, 2226, 2227, 2228,
	2229, 1546, 2224, 2232, 2233, 2234, 2235, 2236, 2237, 2238,
	2239, 2240, 2241, 2242, 2243, 2244, 2245, 2266, 2190, 2191,
	2077, 669, 2167, 2247, 2495, 2496, 2251, 1749, 2263, 2029,
	1656, 894, 2175, 41, 1, 1858, 2144, 1859, 1730, 2013,
	1861, 1506, 2064, 1976, 2282, 2306, 1961, 883, 2273, 720,
	721, 722, 719, 559, 2283, 1124, 873, 2281, 1075, 2284,
	720, 721, 722, 719, 992, 2339, 637, 2296, 664, 989,
	1616, 2249, 663, 661, 718, 1077, 440, 1305, 2341, 2194,
	720, 721, 722, 719, 2304, 718, 2426, 1664, 655, 2472,
	2377, 655, 655, 655, 2429, 1005, 2309, 2310, 425, 2292,
	2319, 655, 2315, 2316, 76, 718, 1934, 2126, 2371, 2203,
	2294, 2205, 1782, 2349, 2104, 1881, 2357, 2358, 2359, 2356,
	571, 2346, 472, 2388, 448, 774, 2368, 1301, 973, 639,
	950, 950, 447, 2370, 2073, 1801, 2367, 545, 636, 572,
	1581, 2382, 2043, 2384, 2385, 1158, 2380, 2389, 1179, 1162,
	2562, 2549, 2526, 2505, 2394, 2544, 2442, 2487, 2480, 2390,
	2218, 115, 364, 1261, 2396, 2397, 531, 610, 2361, 655,
	365, 1626, 2419, 948, 948, 2347, 549, 1610, 550, 1613,
	1612, 655, 1048, 725, 1065, 759, 401, 1535, 2402, 413,
	407, 1286, 1798, 2408, 2412, 2161, 1870, 40, 39, 2433,
	38, 1295, 2407, 1318, 442, 117, 2417, 1319, 2387, 2212,
	2431, 423, 2432, 422, 2425, 421, 420, 419, 1646, 1644,
	1643, 1248, 1247, 1293, 2456, 2409, 2410, 2437, 2111, 2260,
	2326, 2256, 2252, 2400, 2445, 2447, 2120, 2119, 2147, 2148,
	2154, 2130, 812, 808, 810, 2453, 811, 809, 1735, 1945,
	1946, 1943, 2134, 2464, 2465, 2466, 2467, 2474, 2004, 2000,
	1307, 1313, 2479, 1192, 1787, 1249, 112, 1245, 2188, 534,
	26, 25, 2123, 24, 12, 11, 2125, 2127, 2129, 996,
	2131, 2132, 2133, 2135, 2136, 2137, 2139, 2140, 2141, 2142,
	10, 15, 2469, 2490, 23, 2493, 2491, 2433, 2503, 22,
	21, 20, 67, 66, 2497, 655, 65, 655, 64, 19,
	2432, 2502, 2509, 2499, 2511, 9, 1028, 63, 1028, 2145,
	62, 61, 18, 17, 56, 57, 51, 50, 49, 2520,
	2474, 2521, 570, 655, 48, 47, 2529, 46, 45, 55,
	2532, 54, 53, 52, 1028, 2538, 44, 43, 42, 80,
	79, 78, 77, 28, 2143, 29, 30, 31, 2523, 90,
	89, 91, 87, 2483, 85, 2485, 88, 86, 84, 2548,
	36, 2122, 8, 14, 2, 0, 0, 0, 0, 2561,
	2560, 0, 0, 0, 0, 0, 0, 0, 0, 2573,
	0, 0, 2575, 2574, 0, 2576, 0, 0, 0, 2138,
	2561, 0, 0, 0, 0, 0, 2128, 0, 2514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 1434, 1476, 0, 398,
	1423, 283, 1381, 1436, 1354, 1370, 1444, 1371, 1372, 1409,
	1333, 1391, 245, 1368, 0, 0, 0, 0, 0, 0,
	1426, 1325, 1357, 1358, 1327, 1364, 1328, 1355, 1383, 190,
	1353, 1394, 215, 1406, 1367, 1388, 1442, 0, 0, 275,
	229, 0, 0, 1386, 1428, 1389, 1414, 1380, 1410, 1341,
	1402, 1437, 1369, 0, 1407, 1438, 0, 0, 0, 0,
	1205, 1206, 1207, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 1405, 1432, 1366, 0, 174, 1435, 1387,
	1408, 0, 0, 1326, 1403, 0, 1331, 1334, 1443, 1430,
	1361, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	1384, 1390, 1411, 1377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 0, 1399, 0, 0, 0,
	1336, 1332, 0, 1382, 0, 0, 163, 280, 296, 172,
	271, 309, 177, 278, 168, 244, 267, 0, 1475, 165,
	294, 277, 226, 209, 210, 164, 0, 262, 188, 201,
	184, 242, 0, 293, 321, 183, 312, 1335, 304, 167,
	1470, 303, 241, 290, 295, 227, 221, 166, 292, 225,
	220, 213, 192, 0, 205, 253, 219, 254, 206, 231,
	230, 232, 1454, 1455, 1456, 1457, 1458, 1466, 1467, 0,
	1471, 1472, 1473, 1340, 0, 1360, 1412, 0, 1324, 1421,
	1429, 1379, 306, 1431, 1376, 1375, 1461, 0, 1460, 279,
	1462, 1463, 214, 1427, 1356, 1365, 322, 1363, 265, 247,
	1433, 1398, 1474, 263, 217, 291, 255, 297, 281, 305,
	259, 256, 158, 282, 186, 228, 169, 170, 182, 189,
	191, 193, 194, 237, 238, 250, 270, 284, 285, 286,
	185, 178, 264, 179, 203, 180, 159, 272, 181, 161,
	251, 289, 1459, 199, 260, 224, 162, 223, 252, 288,
	287, 313, 319, 320, 324, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 1468, 0,
	1469, 318, 197, 156, 301, 0, 243, 0, 1424, 1329,
	1339, 1337, 1373, 1400, 1401, 239, 317, 1416, 1420, 1417,
	1445, 268, 0, 0, 0, 0, 0, 208, 249, 1418,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1330, 0, 276, 299, 311, 328, 1477, 1478, 1479,
	160, 0, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 302,
	1374, 1347, 1385, 310, 1350, 1348, 1415, 1349, 1404, 326,
	233, 234, 235, 236, 200, 0, 176, 329, 258, 1395,
	1378, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1396, 0,
	1352, 323, 196, 202, 0, 204, 175, 248, 198, 308,
	211, 1422, 240, 207, 273, 212, 218, 261, 307, 246,
	266, 173, 298, 274, 222, 0, 0, 1346, 1351, 1345,
	1392, 1393, 1439, 1440, 1441, 1413, 1338, 1425, 0, 1342,
	1344, 1343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1727, 746, 0, 749, 0, 0, 0,
	0, 1419, 0, 0, 1397, 157, 0, 216, 1446, 257,
	195, 747, 748, 745, 0, 0, 734, 733, 743, 744,
	736, 737, 738, 739, 740, 741, 742, 735, 0, 0,
	0, 0, 283, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	1464, 1465, 314, 315, 316, 300, 415, 187, 1487, 0,
	190, 0, 0, 215, 0, 0, 0, 446, 0, 0,
	275, 229, 0, 0, 0, 0, 502, 510, 0, 0,
	0, 2510, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 439, 478, 477, 427, 436, 0, 0, 171, 428,
	0, 435, 429, 433, 432, 430, 431, 746, 494, 749,
	0, 0, 0, 0, 0, 399, 412, 0, 416, 0,
	0, 0, 0, 0, 747, 748, 745, 0, 0, 734,
	733, 743, 744, 736, 737, 738, 739, 740, 741, 742,
	735, 409, 410, 0, 0, 0, 0, 455, 0, 411,
	0, 0, 457, 0, 437, 0, 0, 163, 280, 296,
	172, 271, 309, 177, 278, 168, 244, 267, 0, 0,
	165, 294, 277, 226, 209, 210, 164, 0, 262, 188,
	201, 184, 242, 434, 453, 458, 183, 516, 451, 304,
	167, 0, 303, 241, 290, 295, 227, 221, 166, 292,
	225, 220, 213, 192, 517, 205, 253, 219, 254, 206,
	231, 230, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 0, 0, 306, 0, 0, 500, 0, 0, 0,
	279, 0, 0, 214, 0, 0, 0, 452, 0, 265,
	247, 513, 400, 0, 263, 217, 291, 255, 297, 281,
	305, 259, 256, 158, 282, 186, 228, 169, 170, 182,
	189, 191, 193, 194, 237, 238, 250, 270, 284, 285,
	286, 185, 178, 264, 179, 203, 180, 159, 272, 181,
	161, 251, 289, 0, 199, 260, 224, 162, 223, 252,
	288, 287, 313, 319, 320, 324, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 1126,
	1125, 1127, 318, 197, 156, 301, 498, 243, 0, 512,
	493, 495, 496, 499, 503, 504, 505, 506, 507, 509,
	511, 515, 268, 0, 0, 0, 0, 0, 208, 249,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 299, 311, 328, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	456, 233, 234, 235, 236, 501, 0, 176, 329, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 196, 202, 0, 204, 175, 248, 198,
	308, 211, 0, 240, 207, 273, 212, 218, 261, 307,
	246, 266, 173, 298, 274, 222, 0, 0, 523, 497,
	522, 524, 525, 521, 526, 527, 508, 418, 0, 461,
	519, 518, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 216, 0,
	257, 195, 484, 465, 466, 467, 417, 468, 463, 464,
	485, 459, 481, 482, 441, 444, 469, 134, 470, 483,
	486, 487, 528, 529, 530, 473, 488, 480, 479, 471,
	460, 489, 490, 445, 443, 474, 475, 462, 476, 491,
	492, 283, 454, 314, 315, 316, 300, 0, 187, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 190,
	1188, 0, 215, 0, 0, 0, 446, 0, 0, 275,
	229, 0, 0, 0, 0, 502, 510, 0, 0, 0,
	2508, 0, 0, 0, 1271, 0, 0, 408, 0, 0,
	439, 478, 477, 427, 436, 0, 0, 171, 428, 0,
	435, 429, 433, 432, 430, 431, 746, 494, 749, 0,
	0, 0, 0, 0, 399, 412, 0, 416, 0, 0,
	0, 0, 0, 747, 748, 745, 0, 0, 734, 733,
	743, 744, 736, 737, 738, 739, 740, 741, 742, 735,
	409, 410, 0, 0, 0, 0, 455, 0, 411, 0,
	0, 1272, 0, 437, 0, 0, 163, 280, 296, 172,
	271, 309, 177, 278, 168, 244, 267, 0, 0, 165,
	294, 277, 226, 209, 210, 164, 0, 262, 188, 201,
	184, 242, 434, 453, 458, 183, 516, 451, 304, 167,
	0, 303, 241, 290, 295, 227, 221, 166, 292, 225,
	220, 213, 192, 517, 205, 253, 219, 254, 206, 231,
	230, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	0, 0, 306, 0, 0, 500, 0, 0, 0, 279,
	0, 0, 214, 0, 0, 0, 452, 0, 265, 247,
	513, 400, 0, 263, 217, 291, 255, 297, 281, 305,
	259, 256, 158, 282, 186, 228, 169, 170, 182, 189,
	191, 193, 194, 237, 238, 250, 270, 284, 285, 286,
	185, 178, 264, 179, 203, 180, 159, 272, 181, 161,
	251, 289, 0, 199, 260, 224, 162, 223, 252, 288,
	287, 313, 319, 320, 324, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 318, 197, 156, 301, 498, 243, 0, 512, 493,
	495, 496, 499, 503, 504, 505, 506, 507, 509, 511,
	515, 268, 0, 0, 0, 0, 0, 208, 249, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 299, 311, 328, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 456,
	233, 234, 235, 236, 501, 0, 176, 329, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 196, 202, 0, 204, 175, 248, 198, 308,
	211, 0, 240, 207, 273, 212, 218, 261, 307, 246,
	266, 173, 298, 274, 222, 0, 0, 523, 497, 522,
	524, 525, 521, 526, 527, 508, 418, 0, 461, 519,
	518, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 216, 0, 257,
	195, 484, 465, 466, 467, 417, 468, 463, 464, 485,
	459, 481, 482, 441, 444, 469, 134, 470, 483, 486,
	487, 528, 529, 530, 473, 488, 480, 479, 471, 460,
	489, 490, 445, 443, 474, 475, 462, 476, 491, 492,
	0, 0, 314, 315, 316, 300, 0, 187, 110, 283,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 190, 0, 0,
	215, 0, 0, 0, 446, 0, 0, 275, 229, 0,
	0, 0, 0, 502, 510, 0, 0, 0, 1928, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 439, 478,
	477, 427, 436, 0, 0, 171, 428, 0, 435, 429,
	433, 432, 430, 431, 746, 494, 749, 0, 0, 0,
	0, 0, 399, 412, 0, 416, 0, 0, 0, 0,
	0, 747, 748, 745, 0, 0, 734, 733, 743, 744,
	736, 737, 738, 739, 740, 741, 742, 735, 409, 410,
	0, 0, 0, 0, 455, 0, 411, 0, 0, 457,
	0, 437, 0, 0, 163, 280, 296, 172, 271, 309,
	177, 278, 168, 244, 267, 0, 0, 165, 294, 277,
	226, 209, 210, 164, 0, 262, 188, 201, 184, 242,
	434, 453, 458, 183, 516, 451, 304, 167, 0, 303,
	241, 290, 295, 227, 221, 166, 292, 225, 220, 213,
	192, 517, 205, 253, 219, 254, 206, 231, 230, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 0, 0,
	306, 0, 0, 500, 0, 0, 0, 279, 0, 0,
	214, 0, 0, 0, 452, 0, 265, 247, 513, 400,
	0, 263, 217, 291, 255, 297, 281, 305, 259, 256,
	158, 282, 186, 228, 169, 170, 182, 189, 191, 193,
	194, 237, 238, 250, 270, 284, 285, 286, 185, 178,
	264, 179, 203, 180, 159, 272, 181, 161, 251, 289,
	0, 199, 260, 224, 162, 223, 252, 288, 287, 313,
	319, 320, 324, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 318,
	197, 156, 301, 498, 243, 0, 512, 493, 495, 496,
	499, 503, 504, 505, 506, 507, 509, 511, 515, 268,
	0, 0, 0, 0, 0, 208, 249, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 299, 311, 328, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 456, 233, 234,
	235, 236, 501, 0, 176, 329, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	196, 202, 0, 204, 175, 248, 198, 308, 211, 0,
	240, 207, 273, 212, 218, 261, 307, 246, 266, 173,
	298, 274, 222, 0, 0, 523, 497, 522, 524, 525,
	521, 526, 527, 508, 418, 0, 461, 519, 518, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 216, 83, 257, 195, 484,
	465, 466, 467, 417, 468, 463, 464, 485, 459, 481,
	482, 441, 444, 469, 134, 470, 483, 486, 487, 528,
	529, 530, 473, 488, 480, 479, 471, 460, 489, 490,
	445, 443, 474, 475, 462, 476, 491, 492, 283, 454,
	314, 315, 316, 300, 0, 187, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 190, 2522, 0, 215,
	0, 0, 0, 446, 0, 0, 275, 229, 0, 0,
	0, 0, 502, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 439, 478, 477,
	427, 436, 0, 0, 171, 428, 0, 435, 429, 433,
	432, 430, 431, 0, 494, 0, 0, 0, 0, 0,
	0, 399, 412, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 0,
	0, 0, 0, 455, 0, 411, 0, 0, 457, 0,
	437, 0, 0, 163, 280, 296, 172, 271, 309, 177,
	278, 168, 244, 267, 0, 0, 165, 294, 277, 226,
	209, 210, 164, 0, 262, 188, 201, 184, 242, 434,
	453, 458, 183, 516, 451, 304, 167, 0, 303, 241,
	290, 295, 227, 221, 166, 292, 225, 220, 213, 192,
	517, 205, 253, 219, 254, 206, 231, 230, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 0, 0, 306,
	0, 0, 500, 0, 0, 0, 279, 0, 0, 214,
	0, 0, 0, 452, 0, 265, 247, 513, 400, 0,
	263, 217, 291, 255, 297, 281, 305, 259, 256, 158,
	282, 186, 228, 169, 170, 182, 189, 191, 193, 194,
	237, 238, 250, 270, 284, 285, 286, 185, 178, 264,
	179, 203, 180, 159, 272, 181, 161, 251, 289, 0,
	199, 260, 224, 162, 223, 252, 288, 287, 313, 319,
	320, 324, 0, 325, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 0, 0, 318, 197,
	156, 301, 498, 243, 0, 512, 493, 495, 496, 499,
	503, 504, 505, 506, 507, 509, 511, 515, 268, 0,
	0, 0, 0, 0, 208, 249, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 299, 311, 328, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 456, 233, 234, 235,
	236, 501, 0, 176, 329, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 196,
	202, 0, 204, 175, 248, 198, 308, 211, 0, 240,
	207, 273, 212, 218, 261, 307, 246, 266, 173, 298,
	274, 222, 0, 0, 523, 497, 522, 524, 525, 521,
	526, 527, 508, 418, 0, 461, 519, 518, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 216, 0, 257, 195, 484, 465,
	466, 467, 417, 468, 463, 464, 485, 459, 481, 482,
	441, 444, 469, 134, 470, 483, 486, 487, 528, 529,
	530, 473, 488, 480, 479, 471, 460, 489, 490, 445,
	443, 474, 475, 462, 476, 491, 492, 283, 454, 314,
	315, 316, 300, 0, 187, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 190, 1188, 0, 215, 0,
	0, 0, 446, 0, 0, 275, 229, 0, 0, 0,
	0, 502, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 439, 478, 477, 427,
	436, 0, 0, 171, 428, 0, 435, 429, 433, 432,
	430, 431, 0, 494, 0, 0, 0, 0, 0, 0,
	399, 412, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 0, 0,
	0, 0, 455, 0, 411, 0, 0, 457, 0, 437,
	0, 0, 163, 280, 296, 172, 271, 309, 177, 278,
	168, 244, 267, 0, 0, 165, 294, 277, 226, 209,
	210, 164, 0, 262, 188, 201, 184, 242, 434, 453,
	458, 183, 516, 451, 304, 167, 0, 303, 241, 290,
	295, 227, 221, 166, 292, 225, 220, 213, 192, 517,
	205, 253, 219, 254, 206, 231, 230, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 0, 0, 306, 0,
	0, 500, 0, 0, 0, 279, 0, 0, 214, 0,
	0, 0, 452, 0, 265, 247, 513, 400, 0, 263,
	217, 291, 255, 297, 281, 305, 259, 256, 158, 282,
	186, 228, 169, 170, 182, 189, 191, 193, 194, 237,
	238, 250, 270, 284, 285, 286, 185, 178, 264, 179,
	203, 180, 159, 272, 181, 161, 251, 289, 0, 199,
	260, 224, 162, 223, 252, 288, 287, 313, 319, 320,
	324, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 318, 197, 156,
	301, 498, 243, 0, 512, 493, 495, 496, 499, 503,
	504, 505, 506, 507, 509, 511, 515, 268, 0, 0,
	0, 0, 0, 208, 249, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	299, 311, 328, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 456, 233, 234, 235, 236,
	501, 0, 176, 329, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 196, 202,
	0, 204, 175, 248, 198, 308, 211, 0, 240, 207,
	273, 212, 218, 261, 307, 246, 266, 173, 298, 274,
	222, 0, 0, 523, 497, 522, 524, 525, 521, 526,
	527, 508, 418, 0, 461, 519, 518, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 216, 0, 257, 195, 484, 465, 466,
	467, 417, 468, 463, 464, 485, 459, 481, 482, 441,
	444, 469, 134, 470, 483, 486, 487, 528, 529, 530,
	473, 488, 480, 479, 471, 460, 489, 490, 445, 443,
	474, 475, 462, 476, 491, 492, 283, 454, 314, 315,
	316, 300, 0, 187, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 190, 0, 0, 215, 0, 0,
	0, 446, 0, 0, 275, 229, 0, 0, 0, 0,
	502, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 439, 478, 477, 427, 436,
	0, 0, 171, 428, 0, 435, 429, 433, 432, 430,
	431, 0, 494, 0, 0, 0, 0, 0, 0, 399,
	412, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 969, 0, 0,
	0, 455, 0, 411, 0, 0, 457, 0, 437, 0,
	0, 163, 280, 296, 172, 271, 309, 177, 278, 168,
	244, 267, 0, 0, 165, 294, 277, 226, 209, 210,
	164, 0, 262, 188, 201, 184, 242, 434, 453, 458,
	183, 516, 451, 304, 167, 0, 303, 241, 290, 295,
	227, 221, 166, 292, 225, 220, 213, 192, 517, 205,
	253, 219, 254, 206, 231, 230, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 0, 0, 306, 0, 0,
	500, 0, 0, 0, 279, 0, 0, 214, 0, 0,
	0, 452, 0, 265, 247, 513, 400, 0, 263, 217,
	291, 255, 297, 281, 305, 259, 256, 158, 282, 186,
	228, 169, 170, 182, 189, 191, 193, 194, 237, 238,
	250, 270, 284, 285, 286, 185, 178, 264, 179, 203,
	180, 159, 272, 181, 161, 251, 289, 0, 199, 260,
	224, 162, 223, 252, 288, 287, 313, 319, 320, 324,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 0, 0, 0, 318, 197, 156, 301,
	498, 243, 0, 512, 493, 495, 496, 499, 503, 504,
	505, 506, 507, 509, 511, 515, 268, 0, 0, 0,
	0, 0, 208, 249, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 299,
	311, 328, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 456, 233, 234, 235, 236, 501,
	0, 176, 329, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 196, 202, 0,
	204, 175, 248, 198, 308, 211, 0, 240, 207, 273,
	212, 218, 261, 307, 246, 266, 173, 298, 274, 222,
	0, 0, 523, 497, 522, 524, 525, 521, 526, 527,
	508, 418, 0, 461, 519, 518, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 216, 0, 257, 195, 484, 465, 466, 467,
	417, 468, 463, 464, 485, 459, 481, 482, 441, 444,
	469, 134, 470, 483, 486, 487, 528, 529, 530, 473,
	488, 480, 479, 471, 460, 489, 490, 445, 443, 474,
	475, 462, 476, 491, 492, 0, 0, 314, 315, 316,
	300, 0, 187, 283, 454, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 190, 0, 0, 215, 0, 0, 0, 446, 0,
	0, 275, 229, 0, 0, 0, 0, 502, 510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 439, 478, 477, 427, 436, 0, 0, 171,
	428, 0, 435, 429, 433, 432, 430, 431, 0, 494,
	0, 0, 0, 0, 0, 0, 399, 412, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 0, 0, 0, 0, 455, 0,
	411, 0, 0, 457, 0, 437, 0, 0, 163, 280,
	296, 172, 271, 309, 177, 278, 168, 244, 267, 0,
	0, 165, 294, 277, 226, 209, 210, 164, 0, 262,
	188, 201, 184, 242, 434, 453, 458, 183, 516, 451,
	304, 167, 0, 303, 241, 290, 295, 227, 221, 166,
	292, 225, 220, 213, 192, 517, 205, 253, 219, 254,
	206, 231, 230, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 0, 0, 306, 0, 0, 500, 0, 0,
	0, 279, 0, 0, 214, 0, 0, 0, 452, 0,
	265, 247, 513, 400, 0, 263, 217, 291, 255, 297,
	281, 305, 259, 256, 158, 282, 186, 228, 169, 170,
	182, 189, 191, 193, 194, 237, 238, 250, 270, 284,
	285, 286, 185, 178, 264, 179, 203, 180, 159, 272,
	181, 161, 251, 289, 0, 199, 260, 224, 162, 223,
	252, 288, 287, 313, 319, 320, 324, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 318, 197, 156, 301, 498, 243, 0,
	512, 493, 495, 496, 499, 503, 504, 505, 506, 507,
	509, 511, 515, 268, 0, 0, 0, 0, 0, 208,
	249, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 299, 311, 328, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 456, 233, 234, 235, 236, 501, 0, 176, 329,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 196, 202, 0, 204, 175, 248,
	198, 308, 211, 0, 240, 207, 273, 212, 218, 261,
	307, 246, 266, 173, 298, 274, 222, 0, 0, 523,
	497, 522, 524, 525, 521, 526, 527, 508, 418, 0,
	461, 519, 518, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 216,
	0, 257, 195, 484, 465, 466, 467, 417, 468, 463,
	464, 485, 459, 481, 482, 441, 444, 469, 134, 470,
	483, 486, 487, 528, 529, 530, 473, 488, 480, 479,
	471, 460, 489, 490, 445, 443, 474, 475, 462, 476,
	491, 492, 283, 454, 314, 315, 316, 300, 0, 187,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 1049, 0, 0, 0, 415, 0, 0, 0,
	190, 0, 0, 215, 0, 0, 0, 446, 0, 0,
	275, 229, 0, 0, 0, 0, 502, 510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 439, 478, 477, 427, 436, 0, 0, 171, 428,
	0, 435, 429, 433, 432, 430, 431, 0, 494, 0,
	0, 0, 0, 0, 0, 399, 412, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 0, 0, 0, 0, 455, 0, 411,
	0, 0, 457, 0, 437, 0, 0, 163, 280, 296,
	172, 271, 309, 177, 278, 168, 244, 267, 0, 0,
	165, 294, 277, 226, 209, 210, 164, 0, 262, 188,
	201, 184, 242, 434, 453, 458, 183, 516, 451, 304,
	167, 0, 303, 241, 290, 295, 227, 221, 166, 292,
	225, 220, 213, 192, 517, 205, 253, 219, 254, 206,
	231, 230, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 0, 0, 306, 0, 0, 500, 0, 0, 0,
	279, 0, 0, 214, 0, 0, 0, 452, 0, 265,
	247, 513, 400, 0, 263, 217, 291, 255, 297, 281,
	305, 259, 256, 158, 282, 186, 228, 169, 170, 182,
	189, 191, 193, 194, 237, 238, 250, 270, 284, 285,
	286, 185, 178, 264, 179, 203, 180, 159, 272, 181,
	161, 251, 289, 0, 199, 260, 224, 162, 223, 252,
	288, 287, 313, 1050, 1051, 324, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 0,
	0, 0, 318, 197, 156, 301, 498, 243, 0, 512,
	493, 495, 496, 499, 503, 504, 505, 506, 507, 509,
	511, 515, 268, 0, 0, 0, 0, 0, 208, 249,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 299, 311, 328, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	456, 233, 234, 235, 236, 501, 0, 176, 329, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 196, 202, 0, 204, 175, 248, 198,
	308, 211, 0, 240, 207, 273, 212, 218, 261, 307,
	246, 266, 173, 298, 274, 222, 0, 0, 523, 497,
	522, 524, 525, 521, 526, 527, 508, 418, 0, 461,
	519, 518, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 216, 0,
	257, 195, 484, 465, 466, 467, 417, 468, 463, 464,
	485, 459, 481, 482, 441, 444, 469, 134, 470, 483,
	486, 487, 528, 529, 530, 473, 488, 480, 479, 471,
	460, 489, 490, 445, 443, 474, 475, 462, 476, 491,
	492, 283, 454, 314, 315, 316, 300, 0, 187, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 190,
	0, 0, 215, 0, 0, 0, 446, 0, 0, 275,
	229, 0, 0, 0, 0, 502, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	439, 478, 477, 427, 436, 0, 0, 171, 428, 0,
	435, 429, 433, 432, 430, 431, 0, 494, 0, 0,
	0, 0, 0, 0, 399, 412, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 0, 0, 0, 0, 455, 0, 411, 0,
	0, 457, 0, 437, 0, 0, 163, 280, 296, 172,
	271, 309, 177, 278, 168, 244, 267, 0, 0, 165,
	294, 277, 226, 209, 210, 164, 0, 262, 188, 201,
	184, 242, 434, 453, 458, 183, 516, 451, 304, 167,
	0, 303, 241, 290, 295, 227, 221, 166, 292, 225,
	220, 213, 192, 517, 205, 253, 219, 254, 206, 231,
	230, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	0, 0, 306, 0, 0, 500, 0, 0, 0, 279,
	0, 0, 214, 0, 0, 0, 452, 0, 265, 247,
	513, 400, 0, 263, 217, 291, 255, 297, 281, 305,
	259, 256, 158, 282, 186, 228, 169, 170, 182, 189,
	191, 193, 194, 237, 238, 250, 270, 284, 285, 286,
	185, 178, 264, 179, 203, 180, 159, 272, 181, 161,
	251, 289, 0, 199, 260, 224, 162, 223, 252, 288,
	287, 313, 319, 320, 324, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 318, 197, 156, 301, 498, 243, 0, 512, 493,
	495, 496, 499, 503, 504, 505, 506, 507, 509, 511,
	515, 268, 0, 0, 0, 0, 0, 208, 249, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 299, 311, 328, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 456,
	233, 234, 235, 236, 501, 0, 176, 329, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 196, 202, 0, 204, 175, 248, 198, 308,
	211, 0, 240, 207, 273, 212, 218, 261, 307, 246,
	266, 173, 298, 274, 222, 0, 0, 523, 497, 522,
	524, 525, 521, 526, 527, 508, 418, 0, 461, 519,
	518, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 216, 0, 257,
	195, 484, 465, 466, 467, 417, 468, 463, 464, 485,
	459, 481, 482, 441, 444, 469, 134, 470, 483, 486,
	487, 528, 529, 530, 473, 488, 480, 479, 471, 460,
	489, 490, 445, 443, 474, 475, 462, 476, 491, 492,
	283, 454, 314, 315, 316, 300, 0, 187, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 190, 0,
	0, 215, 0, 0, 0, 446, 0, 0, 275, 229,
	0, 0, 0, 0, 502, 510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 439,
	478, 477, 427, 436, 0, 0, 171, 428, 0, 435,
	429, 433, 432, 430, 431, 0, 494, 0, 0, 0,
	0, 0, 0, 399, 412, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 0, 0, 0, 0, 455, 0, 411, 0, 0,
	457, 0, 437, 0, 0, 163, 280, 296, 172, 271,
	309, 177, 278, 168, 244, 267, 0, 0, 165, 294,
	277, 226, 209, 210, 164, 0, 262, 188, 201, 184,
	242, 434, 453, 458, 183, 516, 451, 304, 167, 0,
	303, 241, 290, 295, 227, 221, 166, 292, 225, 220,
	213, 192, 517, 205, 253, 219, 254, 206, 231, 230,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 0,
	0, 306, 0, 0, 500, 0, 0, 0, 279, 0,
	0, 214, 0, 0, 0, 452, 0, 265, 247, 513,
	400, 0, 263, 217, 291, 255, 297, 281, 305, 259,
	256, 158, 282, 186, 228, 169, 170, 182, 189, 191,
	193, 194, 237, 238, 250, 270, 284, 285, 286, 185,
	178, 264, 179, 203, 180, 159, 272, 181, 161, 251,
	289, 0, 199, 260, 224, 162, 223, 252, 288, 287,
	313, 319, 320, 324, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 0, 0,
	318, 197, 156, 301, 498, 243, 0, 512, 493, 495,
	496, 499, 503, 504, 505, 506, 507, 509, 511, 515,
	268, 0, 0, 0, 0, 0, 208, 249, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 299, 311, 328, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 456, 233,
	234, 235, 236, 501, 0, 176, 329, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 196, 202, 0, 204, 175, 248, 198, 308, 211,
	0, 240, 207, 273, 212, 218, 261, 307, 246, 266,
	173, 298, 274, 222, 0, 0, 523, 497, 522, 524,
	525, 521, 526, 527, 508, 418, 0, 461, 519, 518,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 216, 0, 257, 195,
	484, 465, 466, 467, 417, 468, 463, 464, 485, 459,
	481, 482, 441, 444, 469, 134, 470, 483, 486, 487,
	528, 529, 530, 473, 488, 480, 479, 471, 460, 489,
	490, 445, 443, 474, 475, 462, 476, 491, 492, 0,
	0, 314, 315, 316, 300, 0, 187, 110, 283, 32,
	100, 82, 0, 0, 0, 0, 0, 0, 0, 245,
	338, 0, 0, 0, 0, 1533, 746, 0, 749, 0,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 215,
	0, 0, 0, 747, 748, 745, 275, 229, 734, 733,
	743, 744, 736, 737, 738, 739, 740, 741, 742, 735,
	0, 0, 0, 0, 343, 0, 0, 116, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 280, 296, 172, 271, 309, 177,
	278, 168, 244, 267, 0, 0, 165, 294, 277, 226,
	209, 210, 164, 0, 262, 188, 201, 184, 242, 0,
	293, 321, 183, 312, 0, 304, 167, 0, 303, 241,
	290, 295, 227, 221, 166, 292, 225, 220, 213, 192,
	0, 205, 253, 219, 254, 206, 231, 230, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 279, 0, 0, 214,
	0, 0, 0, 322, 0, 265, 247, 0, 0, 0,
	263, 217, 291, 255, 297, 281, 305, 259, 256, 158,
	282, 186, 228, 169, 170, 182, 189, 191, 193, 194,
	237, 238, 250, 270, 284, 285, 286, 185, 178, 264,
	179, 203, 180, 159, 272, 181, 161, 251, 289, 0,
	199, 260, 224, 162, 223, 252, 288, 287, 313, 319,
	320, 324, 0, 325, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 0, 0, 318, 197,
	156, 301, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 317, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 208, 249, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 299, 311, 328, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 326, 233, 234, 235,
	236, 339, 341, 176, 329, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 196,
	202, 0, 204, 175, 248, 198, 308, 211, 0, 240,
	207, 273, 212, 218, 261, 307, 246, 266, 173, 298,
	274, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 216, 83, 257, 195, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 283, 0, 0, 0, 0, 314,
	315, 316, 300, 0, 187, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 275, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 1954, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	280, 296, 172, 271, 309, 177, 278, 168, 244, 267,
	0, 0, 165, 294, 277, 226, 209, 210, 164, 0,
	262, 188, 201, 184, 242, 0, 293, 321, 183, 312,
	0, 304, 167, 0, 303, 241, 290, 295, 227, 221,
	166, 292, 225, 220, 213, 192, 0, 205, 253, 219,
	254, 206, 231, 230, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 306, 0, 0, 0, 1951,
	0, 1950, 279, 1952, 1955, 214, 0, 0, 0, 322,
	0, 265, 247, 0, 0, 0, 263, 217, 291, 255,
	297, 281, 305, 259, 256, 158, 282, 186, 228, 169,
	170, 182, 189, 191, 193, 194, 237, 238, 250, 270,
	284, 285, 286, 185, 178, 264, 179, 203, 180, 159,
	272, 181, 161, 251, 289, 1956, 199, 260, 224, 162,
	223, 252, 288, 287, 313, 319, 320, 324, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 0, 0, 0, 318, 197, 156, 301, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 317,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	208, 249, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 299, 311, 328,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 326, 233, 234, 235, 236, 200, 0, 176,
	329, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 196, 202, 0, 204, 175,
	248, 198, 308, 211, 0, 240, 207, 273, 212, 218,
	261, 307, 246, 266, 173, 298, 274, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	216, 0, 257, 195, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	283, 0, 0, 0, 0, 314, 315, 316, 300, 0,
	187, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1297, 0, 0, 0, 0, 190, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 275, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 116,
	0, 0, 1298, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 720,
	721, 722, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 280, 296, 172, 271,
	309, 177, 278, 168, 244, 267, 0, 0, 165, 294,
	277, 226, 209, 210, 164, 0, 262, 188, 201, 184,
	242, 0, 293, 321, 183, 312, 0, 304, 167, 0,
	303, 241, 290, 295, 227, 221, 166, 292, 225, 220,
	213, 192, 0, 205, 253, 219, 254, 206, 231, 230,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 279, 0,
	0, 214, 0, 0, 0, 322, 0, 265, 247, 0,
	0, 0, 263, 217, 291, 255, 297, 281, 305, 259,
	256, 158, 282, 186, 228, 169, 170, 182, 189, 191,
	193, 194, 237, 238, 250, 270, 284, 285, 286, 185,
	178, 264, 179, 203, 180, 159, 272, 181, 161, 251,
	289, 0, 199, 260, 224, 162, 223, 252, 288, 287,
	313, 319, 320, 324, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 0, 0,
	318, 197, 156, 301, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 317, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 208, 249, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 299, 311, 328, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 326, 233,
	234, 235, 236, 200, 0, 176, 329, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 196, 202, 0, 204, 175, 248, 198, 308, 211,
	0, 240, 207, 273, 212, 218, 261, 307, 246, 266,
	173, 298, 274, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 216, 0, 257, 195,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 283, 0, 0, 0,
	0, 314, 315, 316, 300, 0, 187, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 609, 0, 215, 0, 0,
	0, 0, 0, 0, 275, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 617, 618, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 280, 296, 172, 271, 309, 177, 278, 168,
	244, 267, 0, 0, 165, 294, 277, 226, 209, 210,
	164, 0, 262, 188, 201, 184, 242, 0, 293, 321,
	183, 312, 595, 304, 167, 594, 303, 241, 290, 295,
	227, 221, 166, 292, 225, 220, 213, 192, 0, 205,
	253, 219, 254, 206, 231, 230, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 279, 0, 0, 214, 0, 0,
	0, 322, 0, 265, 247, 0, 0, 0, 263, 217,
	291, 255, 297, 281, 305, 607, 256, 158, 282, 186,
	228, 169, 170, 182, 189, 191, 193, 194, 237, 238,
	250, 270, 284, 285, 286, 185, 178, 264, 179, 203,
	180, 159, 272, 181, 161, 251, 289, 0, 199, 260,
	224, 162, 223, 252, 288, 287, 313, 319, 320, 324,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 0, 0, 0, 318, 197, 156, 301,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 317, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 208, 249, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 299,
	311, 328, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 608, 302, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 611, 233, 234, 235, 236, 200,
	0, 176, 329, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 196, 202, 0,
	204, 175, 248, 198, 308, 211, 0, 619, 614, 615,
	212, 218, 261, 307, 246, 266, 173, 298, 274, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 216, 0, 257, 195, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 110, 283, 0, 0, 0, 314, 315, 316,
	300, 0, 187, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 275, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 280,
	296, 172, 271, 309, 177, 278, 168, 244, 267, 0,
	0, 165, 294, 277, 226, 209, 210, 164, 0, 262,
	188, 201, 184, 242, 0, 293, 321, 183, 312, 0,
	304, 167, 0, 303, 241, 290, 295, 227, 221, 166,
	292, 225, 220, 213, 192, 0, 205, 253, 219, 254,
	206, 231, 230, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 214, 0, 0, 0, 322, 0,
	265, 247, 0, 0, 0, 263, 217, 291, 255, 297,
	281, 305, 259, 256, 158, 282, 186, 228, 169, 170,
	182, 189, 191, 193, 194, 237, 238, 250, 270, 284,
	285, 286, 185, 178, 264, 179, 203, 180, 159, 272,
	181, 161, 251, 289, 0, 199, 260, 224, 162, 223,
	252, 288, 287, 313, 319, 320, 324, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 318, 197, 156, 301, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 317, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 208,
	249, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 299, 311, 328, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 326, 233, 234, 235, 236, 200, 0, 176, 329,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 196, 202, 0, 204, 175, 248,
	198, 308, 211, 0, 240, 207, 273, 212, 218, 261,
	307, 246, 266, 173, 298, 274, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 216,
	83, 257, 195, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 0,
	1252, 1253, 110, 283, 314, 315, 316, 300, 0, 187,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 275, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	1308, 0, 116, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 280,
	296, 172, 271, 309, 177, 278, 168, 244, 267, 0,
	0, 165, 294, 277, 226, 209, 210, 164, 0, 262,
	188, 201, 184, 242, 0, 293, 321, 183, 312, 0,
	304, 167, 0, 303, 241, 290, 295, 227, 221, 166,
	292, 225, 220, 213, 192, 0, 205, 253, 219, 254,
	206, 231, 230, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 214, 0, 0, 0, 322, 0,
	265, 247, 0, 0, 0, 263, 217, 291, 255, 297,
	281, 305, 259, 256, 158, 282, 186, 228, 169, 170,
	182, 189, 191, 193, 194, 237, 238, 250, 270, 284,
	285, 286, 185, 178, 264, 179, 203, 180, 159, 272,
	181, 161, 251, 289, 0, 199, 260, 224, 162, 223,
	252, 288, 287, 313, 319, 320, 324, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 318, 197, 156, 301, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 317, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 208,
	249, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 299, 311, 328, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 326, 233, 234, 235, 236, 200, 0, 176, 329,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 196, 202, 0, 204, 175, 248,
	198, 308, 211, 0, 240, 207, 273, 212, 218, 261,
	307, 246, 266, 173, 298, 274, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 216,
	83, 257, 195, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 283,
	0, 0, 0, 0, 314, 315, 316, 300, 0, 187,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 275, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 617,
	618, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 280, 296, 172, 271, 309,
	177, 278, 168, 244, 267, 0, 0, 165, 294, 277,
	226, 209, 210, 164, 0, 262, 188, 201, 184, 242,
	0, 293, 321, 183, 312, 595, 304, 167, 594, 303,
	241, 290, 295, 227, 221, 166, 292, 225, 220, 213,
	192, 0, 205, 253, 219, 254, 206, 231, 230, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	214, 0, 0, 0, 322, 0, 265, 247, 0, 0,
	0, 263, 217, 291, 255, 297, 281, 305, 259, 256,
	158, 282, 186, 228, 169, 170, 182, 189, 191, 193,
	194, 237, 238, 250, 270, 284, 285, 286, 185, 178,
	264, 179, 203, 180, 159, 272, 181, 161, 251, 289,
	0, 199, 260, 224, 162, 223, 252, 288, 287, 313,
	319, 320, 324, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 318,
	197, 156, 301, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 317, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 208, 249, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 299, 311, 328, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 326, 233, 234,
	235, 236, 200, 0, 176, 329, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	196, 202, 0, 204, 175, 248, 198, 308, 211, 0,
	619, 614, 615, 212, 218, 261, 307, 246, 266, 173,
	298, 274, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 216, 0, 257, 195, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 283, 0, 0, 0, 0,
	314, 315, 316, 300, 0, 187, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 275, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1250, 0, 0, 116, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 280, 296, 172, 271, 309, 177, 278, 168, 244,
	267, 0, 0, 165, 294, 277, 226, 209, 210, 164,
	0, 262, 188, 201, 184, 242, 0, 293, 321, 183,
	312, 0, 304, 167, 0, 303, 241, 290, 295, 227,
	221, 166, 292, 225, 220, 213, 192, 0, 205, 253,
	219, 254, 206, 231, 230, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 279, 0, 0, 214, 0, 0, 0,
	322, 0, 265, 247, 0, 0, 0, 263, 217, 291,
	255, 297, 281, 305, 259, 256, 158, 282, 186, 228,
	169, 170, 182, 189, 191, 193, 194, 237, 238, 250,
	270, 284, 285, 286, 185, 178, 264, 179, 203, 180,
	159, 272, 181, 161, 251, 289, 0, 199, 260, 224,
	162, 223, 252, 288, 287, 313, 319, 320, 324, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 318, 197, 156, 301, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	317, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 208, 249, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 299, 311,
	328, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 326, 233, 234, 235, 236, 200, 0,
	176, 329, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 196, 202, 0, 204,
	175, 248, 198, 308, 211, 0, 240, 207, 273, 212,
	218, 261, 307, 246, 266, 173, 298, 274, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 216, 0, 257, 195, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 283, 1252, 1253, 0, 0, 314, 315, 316, 300,
	0, 187, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	953, 0, 215, 0, 0, 0, 0, 0, 0, 275,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 0, 951, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 0, 163, 280, 296, 172,
	271, 309, 177, 278, 168, 244, 267, 0, 0, 165,
	294, 277, 226, 209, 210, 164, 0, 262, 188, 201,
	184, 242, 0, 293, 321, 183, 312, 0, 304, 167,
	0, 303, 241, 290, 295, 227, 221, 166, 292, 225,
	220, 213, 192, 0, 205, 253, 219, 254, 206, 231,
	230, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 214, 0, 0, 0, 322, 0, 265, 247,
	0, 0, 0, 263, 217, 291, 255, 297, 281, 305,
	259, 256, 158, 282, 186, 228, 169, 170, 182, 189,
	191, 193, 194, 237, 238, 250, 270, 284, 285, 286,
	185, 178, 264, 179, 203, 180, 159, 272, 181, 161,
	251, 289, 0, 199, 260, 224, 162, 223, 252, 288,
	287, 313, 319, 320, 324, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 318, 197, 156, 301, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 317, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 208, 249, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 299, 311, 328, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 326,
	233, 234, 235, 236, 200, 0, 176, 329, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 196, 202, 0, 204, 175, 248, 198, 308,
	211, 0, 240, 207, 273, 212, 218, 261, 307, 246,
	266, 173, 298, 274, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 216, 0, 257,
	195, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 283, 0, 0,
	0, 0, 314, 315, 316, 300, 0, 187, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 947, 0, 215, 0,
	0, 0, 0, 0, 0, 275, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 951,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 0, 163, 280, 296, 172, 271, 309, 177, 278,
	168, 244, 267, 0, 0, 165, 294, 277, 226, 209,
	210, 164, 0, 262, 188, 201, 184, 242, 0, 293,
	321, 183, 312, 0, 304, 167, 0, 303, 241, 290,
	295, 227, 221, 166, 292, 225, 220, 213, 192, 0,
	205, 253, 219, 254, 206, 231, 230, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 214, 0,
	0, 0, 322, 0, 265, 247, 0, 0, 0, 263,
	217, 291, 255, 297, 281, 305, 259, 256, 158, 282,
	186, 228, 169, 170, 182, 189, 191, 193, 194, 237,
	238, 250, 270, 284, 285, 286, 185, 178, 264, 179,
	203, 180, 159, 272, 181, 161, 251, 289, 0, 199,
	260, 224, 162, 223, 252, 288, 287, 313, 319, 320,
	324, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 318, 197, 156,
	301, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 317, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 208, 249, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	299, 311, 328, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 326, 233, 234, 235, 236,
	200, 0, 176, 329, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 196, 202,
	0, 204, 175, 248, 198, 308, 211, 0, 240, 207,
	273, 212, 218, 261, 307, 246, 266, 173, 298, 274,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 216, 0, 257, 195, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 283, 0, 0, 0, 0, 314, 315,
	316, 300, 0, 187, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 275, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2428, 0, 116, 478, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 280,
	296, 172, 271, 309, 177, 278, 168, 244, 267, 0,
	0, 165, 294, 277, 226, 209, 210, 164, 0, 262,
	188, 201, 184, 242, 0, 293, 321, 183, 312, 0,
	304, 167, 0, 303, 241, 290, 295, 227, 221, 166,
	292, 225, 220, 213, 192, 0, 205, 253, 219, 254,
	206, 231, 230, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 214, 0, 0, 0, 322, 0,
	265, 247, 0, 0, 0, 263, 217, 291, 255, 297,
	281, 305, 259, 256, 158, 282, 186, 228, 169, 170,
	182, 189, 191, 193, 194, 237, 238, 250, 270, 284,
	285, 286, 185, 178, 264, 179, 203, 180, 159, 272,
	181, 161, 251, 289, 0, 199, 260, 224, 162, 223,
	252, 288, 287, 313, 319, 320, 324, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 318, 197, 156, 301, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 317, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 208,
	249, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 299, 311, 328, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 326, 233, 234, 235, 236, 200, 0, 176, 329,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 196, 202, 0, 204, 175, 248,
	198, 308, 211, 0, 240, 207, 273, 212, 218, 261,
	307, 246, 266, 173, 298, 274, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 216,
	0, 257, 195, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 283,
	0, 0, 0, 0, 314, 315, 316, 300, 0, 187,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 275, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 951, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 163, 280, 296, 172, 271, 309,
	177, 278, 168, 244, 267, 0, 0, 165, 294, 277,
	226, 209, 210, 164, 0, 262, 188, 201, 184, 242,
	0, 293, 321, 183, 312, 0, 304, 167, 0, 303,
	241, 290, 295, 227, 221, 166, 292, 225, 220, 213,
	192, 0, 205, 253, 219, 254, 206, 231, 230, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	214, 0, 0, 0, 322, 0, 265, 247, 0, 0,
	0, 263, 217, 291, 255, 297, 281, 305, 259, 256,
	158, 282, 186, 228, 169, 170, 182, 189, 191, 193,
	194, 237, 238, 250, 270, 284, 285, 286, 185, 178,
	264, 179, 203, 180, 159, 272, 181, 161, 251, 289,
	0, 199, 260, 224, 162, 223, 252, 288, 287, 313,
	319, 320, 324, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 318,
	197, 156, 301, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 317, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 208, 249, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 299, 311, 328, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 326, 233, 234,
	235, 236, 200, 0, 176, 329, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	196, 202, 0, 204, 175, 248, 198, 308, 211, 0,
	240, 207, 273, 212, 218, 261, 307, 246, 266, 173,
	298, 274, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 216, 0, 257, 195, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 283, 0, 0, 0, 0,
	314, 315, 316, 300, 0, 187, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 275, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 951, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2078, 0, 0, 0, 0,
	163, 280, 296, 172, 271, 309, 177, 278, 168, 244,
	267, 0, 0, 165, 294, 277, 226, 209, 210, 164,
	0, 262, 188, 201, 184, 242, 0, 293, 321, 183,
	312, 0, 304, 167, 0, 303, 241, 290, 295, 227,
	221, 166, 292, 225, 220, 213, 192, 0, 205, 253,
	219, 254, 206, 231, 230, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 279, 0, 0, 214, 0, 0, 0,
	322, 0, 265, 247, 0, 0, 0, 263, 217, 291,
	255, 297, 281, 305, 259, 256, 158, 282, 186, 228,
	169, 170, 182, 189, 191, 193, 194, 237, 238, 250,
	270, 284, 285, 286, 185, 178, 264, 179, 203, 180,
	159, 272, 181, 161, 251, 289, 0, 199, 260, 224,
	162, 223, 252, 288, 287, 313, 319, 320, 324, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 318, 197, 156, 301, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	317, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 208, 249, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 299, 311,
	328, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 326, 233, 234, 235, 236, 200, 0,
	176, 329, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 196, 202, 0, 204,
	175, 248, 198, 308, 211, 0, 240, 207, 273, 212,
	218, 261, 307, 246, 266, 173, 298, 274, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 216, 0, 257, 195, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 283, 0, 0, 0, 0, 314, 315, 316, 300,
	0, 187, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	1683, 0, 215, 0, 0, 0, 0, 0, 0, 275,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 0, 951, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 280, 296, 172,
	271, 309, 177, 278, 168, 244, 267, 0, 0, 165,
	294, 277, 226, 209, 210, 164, 0, 262, 188, 201,
	184, 242, 0, 293, 321, 183, 312, 0, 304, 167,
	0, 303, 241, 290, 295, 227, 221, 166, 292, 225,
	220, 213, 192, 0, 205, 253, 219, 254, 206, 231,
	230, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 214, 0, 0, 0, 322, 0, 265, 247,
	0, 0, 0, 263, 217, 291, 255, 297, 281, 305,
	259, 256, 158, 282, 186, 228, 169, 170, 182, 189,
	191, 193, 194, 237, 238, 250, 270, 284, 285, 286,
	185, 178, 264, 179, 203, 180, 159, 272, 181, 161,
	251, 289, 0, 199, 260, 224, 162, 223, 252, 288,
	287, 313, 319, 320, 324, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 318, 197, 156, 301, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 317, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 208, 249, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 299, 311, 328, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 326,
	233, 234, 235, 236, 200, 0, 176, 329, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 196, 202, 0, 204, 175, 248, 198, 308,
	211, 0, 240, 207, 273, 212, 218, 261, 307, 246,
	266, 173, 298, 274, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 216, 0, 257,
	195, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 283, 0, 0,
	0, 0, 314, 315, 316, 300, 0, 187, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 275, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 478, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 280, 296, 172, 271, 309, 177, 278,
	168, 244, 267, 0, 0, 165, 294, 277, 226, 209,
	210, 164, 0, 262, 188, 201, 184, 242, 0, 293,
	321, 183, 312, 0, 304, 167, 0, 303, 241, 290,
	295, 227, 221, 166, 292, 225, 220, 213, 192, 0,
	205, 253, 219, 254, 206, 231, 230, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 214, 0,
	0, 0, 322, 0, 265, 247, 0, 0, 0, 263,
	217, 291, 255, 297, 281, 305, 259, 256, 158, 282,
	186, 228, 169, 170, 182, 189, 191, 193, 194, 237,
	238, 250, 270, 284, 285, 286, 185, 178, 264, 179,
	203, 180, 159, 272, 181, 161, 251, 289, 0, 199,
	260, 224, 162, 223, 252, 288, 287, 313, 319, 320,
	324, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 318, 197, 156,
	301, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 317, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 208, 249, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	299, 311, 328, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 326, 233, 234, 235, 236,
	200, 0, 176, 329, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 196, 202,
	0, 204, 175, 248, 198, 308, 211, 0, 240, 207,
	273, 212, 218, 261, 307, 246, 266, 173, 298, 274,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 216, 0, 257, 195, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 283, 0, 0, 0, 0, 314, 315,
	316, 300, 0, 187, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 275, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2187,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 280,
	296, 172, 271, 309, 177, 278, 168, 244, 267, 0,
	0, 165, 294, 277, 226, 209, 210, 164, 0, 262,
	188, 201, 184, 242, 0, 293, 321, 183, 312, 0,
	304, 167, 0, 303, 241, 290, 295, 227, 221, 166,
	292, 225, 220, 213, 192, 0, 205, 253, 219, 254,
	206, 231, 230, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 214, 0, 0, 0, 322, 0,
	265, 247, 0, 0, 0, 263, 217, 291, 255, 297,
	281, 305, 259, 256, 158, 282, 186, 228, 169, 170,
	182, 189, 191, 193, 194, 237, 238, 250, 270, 284,
	285, 286, 185, 178, 264, 179, 203, 180, 159, 272,
	181, 161, 251, 289, 0, 199, 260, 224, 162, 223,
	252, 288, 287, 313, 319, 320, 324, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 318, 197, 156, 301, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 317, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 208,
	249, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 299, 311, 328, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 326, 233, 234, 235, 236, 200, 0, 176, 329,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 196, 202, 0, 204, 175, 248,
	198, 308, 211, 0, 240, 207, 273, 212, 218, 261,
	307, 246, 266, 173, 298, 274, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 216,
	0, 257, 195, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 283,
	0, 0, 0, 0, 314, 315, 316, 300, 0, 187,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 275, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 280, 296, 172, 271, 309,
	177, 278, 168, 244, 267, 0, 0, 165, 294, 277,
	226, 209, 210, 164, 0, 262, 188, 201, 184, 242,
	0, 293, 321, 183, 312, 0, 304, 167, 0, 303,
	241, 290, 295, 227, 221, 166, 292, 225, 220, 213,
	192, 0, 205, 253, 219, 254, 206, 231, 230, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 0, 0, 2372, 0, 0, 279, 0, 0,
	214, 0, 0, 0, 322, 0, 265, 247, 0, 0,
	0, 263, 217, 291, 255, 297, 281, 305, 259, 256,
	158, 282, 186, 228, 169, 170, 182, 189, 191, 193,
	194, 237, 238, 250, 270, 284, 285, 286, 185, 178,
	264, 179, 203, 180, 159, 272, 181, 161, 251, 289,
	0, 199, 260, 224, 162, 223, 252, 288, 287, 313,
	319, 320, 324, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 318,
	197, 156, 301, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 317, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 208, 249, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 299, 311, 328, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 326, 233, 234,
	235, 236, 200, 0, 176, 329, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	196, 202, 0, 204, 175, 248, 198, 308, 211, 0,
	240, 207, 273, 212, 218, 261, 307, 246, 266, 173,
	298, 274, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 216, 0, 257, 195, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 283, 0, 0, 0, 0,
	314, 315, 316, 300, 0, 187, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 275, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 280, 296, 172, 271, 309, 177, 278, 168, 244,
	267, 0, 0, 165, 294, 277, 226, 209, 210, 164,
	0, 262, 188, 201, 184, 242, 0, 293, 321, 183,
	312, 0, 304, 167, 0, 303, 241, 290, 295, 227,
	221, 166, 292, 225, 220, 213, 192, 0, 205, 253,
	219, 254, 206, 231, 230, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 0, 0,
	2196, 0, 0, 279, 0, 0, 214, 0, 0, 0,
	322, 0, 265, 247, 0, 0, 0, 263, 217, 291,
	255, 297, 281, 305, 259, 256, 158, 282, 186, 228,
	169, 170, 182, 189, 191, 193, 194, 237, 238, 250,
	270, 284, 285, 286, 185, 178, 264, 179, 203, 180,
	159, 272, 181, 161, 251, 289, 0, 199, 260, 224,
	162, 223, 252, 288, 287, 313, 319, 320, 324, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 318, 197, 156, 301, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	317, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 208, 249, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 299, 311,
	328, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 326, 233, 234, 235, 236, 200, 0,
	176, 329, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 196, 202, 0, 204,
	175, 248, 198, 308, 211, 0, 240, 207, 273, 212,
	218, 261, 307, 246, 266, 173, 298, 274, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 216, 0, 257, 195, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 283, 0, 0, 0, 0, 314, 315, 316, 300,
	0, 187, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 275,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 280, 296, 172,
	271, 309, 177, 278, 168, 244, 267, 0, 0, 165,
	294, 277, 226, 209, 210, 164, 0, 262, 188, 201,
	184, 242, 0, 293, 321, 183, 312, 0, 304, 167,
	0, 303, 241, 290, 295, 227, 221, 166, 292, 225,
	220, 213, 192, 0, 205, 253, 219, 254, 206, 231,
	230, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 214, 0, 0, 0, 322, 0, 265, 247,
	0, 0, 0, 263, 217, 291, 255, 297, 281, 305,
	259, 256, 158, 282, 186, 228, 169, 170, 182, 189,
	191, 193, 194, 237, 238, 250, 270, 284, 285, 286,
	185, 178, 264, 179, 203, 180, 159, 272, 181, 161,
	251, 289, 0, 199, 260, 224, 162, 223, 252, 288,
	287, 313, 319, 320, 324, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 318, 197, 156, 301, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 317, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 208, 249, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 299, 311, 328, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 326,
	233, 234, 235, 236, 200, 0, 176, 329, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 196, 202, 0, 204, 175, 248, 198, 308,
	211, 0, 240, 207, 273, 212, 218, 261, 307, 246,
	266, 173, 298, 274, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 216, 0, 257,
	195, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 283, 0, 0,
	0, 0, 314, 315, 316, 300, 0, 187, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 275, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 280, 296, 172, 271, 309, 177, 278,
	168, 244, 267, 0, 0, 165, 294, 277, 226, 209,
	210, 164, 0, 262, 188, 201, 184, 242, 0, 293,
	321, 183, 312, 0, 304, 167, 0, 303, 241, 290,
	295, 227, 221, 166, 292, 225, 220, 213, 192, 0,
	205, 253, 219, 254, 206, 231, 230, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 214, 0,
	0, 0, 322, 0, 265, 247, 0, 0, 0, 263,
	217, 291, 255, 297, 281, 305, 259, 256, 158, 282,
	186, 228, 169, 170, 182, 189, 191, 193, 194, 237,
	238, 250, 270, 284, 285, 286, 185, 178, 264, 179,
	203, 180, 159, 272, 181, 161, 251, 289, 0, 199,
	260, 224, 162, 223, 252, 288, 287, 313, 319, 320,
	324, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 318, 197, 156,
	301, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 317, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 208, 249, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	299, 311, 328, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 326, 233, 234, 235, 236,
	200, 0, 176, 329, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 196, 202,
	0, 204, 175, 248, 198, 308, 211, 0, 240, 207,
	273, 212, 218, 261, 307, 246, 266, 173, 298, 274,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 216, 0, 257, 195, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 283, 0, 0, 0, 0, 314, 315,
	316, 300, 0, 187, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 275, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 0, 0, 951, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 280,
	296, 172, 271, 309, 177, 278, 168, 244, 267, 0,
	0, 165, 294, 277, 226, 209, 210, 164, 0, 262,
	188, 201, 184, 242, 0, 293, 321, 183, 312, 0,
	304, 167, 0, 303, 241, 290, 295, 227, 221, 166,
	292, 225, 220, 213, 192, 0, 205, 253, 219, 254,
	206, 231, 230, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 214, 0, 0, 0, 322, 0,
	265, 247, 0, 0, 0, 263, 217, 291, 255, 297,
	281, 305, 259, 256, 158, 282, 186, 228, 169, 170,
	182, 189, 191, 193, 194, 237, 238, 250, 270, 284,
	285, 286, 185, 178, 264, 179, 203, 180, 159, 272,
	181, 161, 251, 289, 0, 199, 260, 224, 162, 223,
	252, 288, 287, 313, 319, 320, 324, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 318, 197, 156, 301, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 317, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 208,
	249, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 299, 311, 328, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 326, 233, 234, 235, 236, 200, 0, 176, 329,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 196, 202, 0, 204, 175, 248,
	198, 308, 211, 0, 240, 207, 273, 212, 218, 261,
	307, 246, 266, 173, 298, 274, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 216,
	0, 257, 195, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 283,
	0, 0, 0, 0, 314, 315, 316, 300, 0, 187,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 275, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 1865, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 280, 296, 172, 271, 309,
	177, 278, 168, 244, 267, 0, 0, 165, 294, 277,
	226, 209, 210, 164, 0, 262, 188, 201, 184, 242,
	0, 293, 321, 183, 312, 0, 304, 167, 0, 303,
	241, 290, 295, 227, 221, 166, 292, 225, 220, 213,
	192, 0, 205, 253, 219, 254, 206, 231, 230, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	214, 0, 0, 0, 322, 0, 265, 247, 0, 0,
	0, 263, 217, 291, 255, 297, 281, 305, 259, 256,
	158, 282, 186, 228, 169, 170, 182, 189, 191, 193,
	194, 237, 238, 250, 270, 284, 285, 286, 185, 178,
	264, 179, 203, 180, 159, 272, 181, 161, 251, 289,
	0, 199, 260, 224, 162, 223, 252, 288, 287, 313,
	319, 320, 324, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 318,
	197, 156, 301, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 317, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 208, 249, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 299, 311, 328, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 326, 233, 234,
	235, 236, 200, 0, 176, 329, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	196, 202, 0, 204, 175, 248, 198, 308, 211, 0,
	240, 207, 273, 212, 218, 261, 307, 246, 266, 173,
	298, 274, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 216, 0, 257, 195, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 283, 0, 0, 0, 0,
	314, 315, 316, 300, 0, 187, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 275, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 280, 296, 172, 271, 309, 177, 278, 168, 244,
	267, 0, 0, 165, 294, 277, 226, 209, 210, 164,
	0, 262, 188, 201, 184, 242, 0, 293, 321, 183,
	312, 0, 304, 167, 0, 303, 241, 290, 295, 227,
	221, 166, 292, 225, 220, 213, 192, 0, 205, 253,
	219, 254, 206, 231, 230, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 279, 0, 0, 214, 0, 0, 0,
	322, 0, 265, 247, 0, 0, 0, 263, 217, 291,
	255, 297, 281, 305, 259, 256, 158, 282, 186, 228,
	169, 170, 182, 189, 191, 193, 194, 237, 238, 250,
	270, 284, 285, 286, 185, 178, 264, 179, 203, 180,
	159, 272, 181, 161, 251, 289, 0, 199, 260, 224,
	162, 223, 252, 288, 287, 313, 319, 320, 324, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 318, 197, 156, 301, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	317, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 208, 249, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 299, 311,
	328, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 326, 233, 234, 235, 236, 200, 0,
	176, 329, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 196, 202, 0, 204,
	175, 248, 198, 308, 211, 0, 240, 207, 273, 212,
	218, 261, 307, 246, 266, 173, 298, 274, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 216, 0, 257, 195, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 283, 0, 0, 0, 0, 314, 315, 316, 300,
	0, 187, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 275,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 0, 1691, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 280, 296, 172,
	271, 309, 177, 278, 168, 244, 267, 0, 0, 165,
	294, 277, 226, 209, 210, 164, 0, 262, 188, 201,
	184, 242, 0, 293, 321, 183, 312, 0, 304, 167,
	0, 303, 241, 290, 295, 227, 221, 166, 292, 225,
	220, 213, 192, 0, 205, 253, 219, 254, 206, 231,
	230, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 214, 0, 0, 0, 322, 0, 265, 247,
	0, 0, 0, 263, 217, 291, 255, 297, 281, 305,
	259, 256, 158, 282, 186, 228, 169, 170, 182, 189,
	191, 193, 194, 237, 238, 250, 270, 284, 285, 286,
	185, 178, 264, 179, 203, 180, 159, 272, 181, 161,
	251, 289, 0, 199, 260, 224, 162, 223, 252, 288,
	287, 313, 319, 320, 324, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 318, 197, 156, 301, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 317, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 208, 249, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 299, 311, 328, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 326,
	233, 234, 235, 236, 200, 0, 176, 329, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 196, 202, 0, 204, 175, 248, 198, 308,
	211, 0, 240, 207, 273, 212, 218, 261, 307, 246,
	266, 173, 298, 274, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 216, 0, 257,
	195, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 283, 0, 0,
	0, 1618, 314, 315, 316, 300, 0, 187, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 275, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 280, 296, 172, 271, 309, 177, 278,
	168, 244, 267, 0, 0, 165, 294, 277, 226, 209,
	210, 164, 0, 262, 188, 201, 184, 242, 0, 293,
	321, 183, 312, 0, 304, 167, 0, 303, 241, 290,
	295, 227, 221, 166, 292, 225, 220, 213, 192, 0,
	205, 253, 219, 254, 206, 231, 230, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 214, 0,
	0, 0, 322, 0, 265, 247, 0, 0, 0, 263,
	217, 291, 255, 297, 281, 305, 259, 256, 158, 282,
	186, 228, 169, 170, 182, 189, 191, 193, 194, 237,
	238, 250, 270, 284, 285, 286, 185, 178, 264, 179,
	203, 180, 159, 272, 181, 161, 251, 289, 0, 199,
	260, 224, 162, 223, 252, 288, 287, 313, 319, 320,
	324, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 318, 197, 156,
	301, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 317, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 208, 249, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	299, 311, 328, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 326, 233, 234, 235, 236,
	200, 0, 176, 329, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 196, 202,
	0, 204, 175, 248, 198, 308, 211, 0, 240, 207,
	273, 212, 218, 261, 307, 246, 266, 173, 298, 274,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 216, 0, 257, 195, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 283, 0, 0, 0, 0, 314, 315,
	316, 300, 0, 187, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 275, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 280,
	296, 172, 271, 309, 177, 278, 168, 244, 267, 0,
	0, 165, 294, 277, 226, 209, 210, 164, 0, 262,
	188, 201, 184, 242, 0, 293, 321, 183, 312, 0,
	304, 167, 0, 303, 241, 290, 295, 227, 221, 166,
	292, 225, 220, 213, 192, 0, 205, 253, 219, 254,
	206, 231, 230, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 0, 1601, 0, 0,
	0, 279, 0, 0, 214, 0, 0, 0, 322, 0,
	265, 247, 0, 0, 0, 263, 217, 291, 255, 297,
	281, 305, 259, 256, 158, 282, 186, 228, 169, 170,
	182, 189, 191, 193, 194, 237, 238, 250, 270, 284,
	285, 286, 185, 178, 264, 179, 203, 180, 159, 272,
	181, 161, 251, 289, 0, 199, 260, 224, 162, 223,
	252, 288, 287, 313, 319, 320, 324, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 318, 197, 156, 301, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 317, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 208,
	249, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 299, 311, 328, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 326, 233, 234, 235, 236, 200, 0, 176, 329,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 196, 202, 0, 204, 175, 248,
	198, 308, 211, 0, 240, 207, 273, 212, 218, 261,
	307, 246, 266, 173, 298, 274, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 216,
	0, 257, 195, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 283,
	0, 0, 0, 0, 314, 315, 316, 300, 0, 187,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 275, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 280, 296, 172, 271, 309,
	177, 278, 168, 244, 267, 0, 0, 165, 294, 277,
	226, 209, 210, 164, 0, 262, 188, 201, 184, 242,
	0, 293, 321, 183, 312, 0, 304, 167, 0, 303,
	241, 290, 295, 227, 221, 166, 292, 225, 220, 213,
	192, 0, 205, 253, 219, 254, 206, 231, 230, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	214, 0, 0, 0, 322, 0, 265, 247, 0, 0,
	0, 263, 217, 291, 255, 297, 281, 305, 259, 256,
	158, 282, 186, 228, 169, 170, 182, 189, 191, 193,
	194, 237, 238, 250, 270, 284, 285, 286, 185, 178,
	264, 179, 203, 180, 159, 272, 181, 161, 251, 289,
	0, 199, 260, 224, 162, 223, 252, 288, 287, 313,
	319, 320, 324, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 318,
	197, 156, 301, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 317, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 208, 249, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 299, 311, 328, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 326, 233, 234,
	235, 236, 200, 0, 176, 329, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	196, 202, 0, 204, 175, 248, 198, 308, 211, 0,
	240, 207, 273, 212, 218, 261, 307, 246, 266, 173,
	298, 274, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 0, 0, 157, 0, 216, 0, 257, 195, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 283, 0, 0, 0, 0,
	314, 315, 316, 300, 0, 187, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 275, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 280, 296, 172, 271, 309, 177, 278, 168, 244,
	267, 0, 0, 165, 294, 277, 226, 209, 210, 164,
	0, 262, 188, 201, 184, 242, 0, 293, 321, 183,
	312, 0, 304, 167, 0, 303, 241, 290, 295, 227,
	221, 166, 292, 225, 220, 213, 192, 0, 205, 253,
	219, 254, 206, 231, 230, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 279, 0, 0, 214, 0, 0, 0,
	322, 0, 265, 247, 0, 0, 0, 263, 217, 291,
	255, 297, 281, 305, 355, 256, 158, 282, 186, 228,
	169, 170, 182, 189, 191, 193, 194, 237, 238, 250,
	270, 284, 285, 286, 185, 178, 264, 179, 203, 180,
	159, 272, 181, 161, 251, 289, 0, 199, 260, 224,
	162, 223, 252, 288, 287, 313, 319, 320, 324, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 318, 197, 156, 301, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	317, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 208, 249, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 299, 311,
	328, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 356, 302, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 326, 233, 234, 235, 236, 200, 0,
	176, 329, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 196, 202, 0, 204,
	175, 248, 198, 308, 211, 0, 240, 207, 273, 212,
	218, 261, 307, 246, 266, 173, 298, 274, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 216, 0, 257, 195, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 283, 0, 0, 0, 0, 314, 315, 316, 300,
	0, 187, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 275,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 280, 296, 172,
	271, 309, 177, 278, 168, 244, 267, 0, 0, 165,
	294, 277, 226, 209, 210, 164, 0, 262, 188, 201,
	184, 242, 0, 293, 321, 183, 312, 0, 304, 167,
	0, 303, 241, 290, 295, 227, 221, 166, 292, 225,
	220, 213, 192, 0, 205, 253, 219, 254, 206, 231,
	230, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 306, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 214, 0, 0, 0, 322, 0, 265, 247,
	0, 0, 0, 263, 217, 291, 255, 297, 281, 305,
	259, 256, 158, 282, 186, 228, 169, 170, 182, 189,
	191, 193, 194, 237, 238, 250, 270, 284, 285, 286,
	185, 178, 264, 179, 203, 180, 159, 272, 181, 161,
	251, 289, 0, 199, 260, 224, 162, 223, 252, 288,
	287, 313, 319, 320, 324, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 318, 197, 156, 301, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 317, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 208, 249, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 299, 311, 328, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 326,
	233, 234, 235, 236, 200, 0, 176, 329, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 196, 202, 0, 204, 175, 248, 198, 308,
	211, 0, 240, 207, 273, 212, 218, 261, 307, 246,
	266, 173, 298, 274, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 216, 0, 257,
	195, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 283, 0, 0,
	0, 0, 314, 315, 316, 300, 0, 187, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 190, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 275, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 280, 296, 172, 271, 309, 177, 278,
	168, 244, 267, 0, 0, 165, 294, 277, 226, 209,
	210, 164, 0, 262, 188, 201, 184, 242, 0, 293,
	321, 183, 312, 0, 304, 167, 0, 303, 241, 290,
	295, 227, 221, 166, 292, 225, 220, 213, 192, 0,
	205, 253, 219, 254, 206, 231, 230, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 214, 0,
	0, 0, 322, 0, 265, 247, 0, 0, 0, 263,
	217, 291, 255, 297, 281, 305, 259, 256, 158, 282,
	186, 228, 169, 170, 182, 189, 191, 193, 194, 237,
	238, 250, 270, 284, 285, 286, 185, 178, 264, 179,
	203, 180, 159, 272, 181, 161, 251, 289, 0, 199,
	260, 224, 162, 223, 252, 288, 287, 313, 319, 320,
	324, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 318, 197, 156,
	301, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 317, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 208, 249, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	299, 311, 328, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 326, 233, 234, 235, 236,
	200, 0, 176, 329, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 196, 202,
	0, 204, 175, 248, 198, 308, 211, 0, 240, 207,
	273, 212, 218, 261, 307, 246, 266, 173, 298, 274,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 216, 0, 257, 195, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 283, 0, 0, 0, 0, 314, 315,
	316, 300, 0, 187, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 275, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 280,
	296, 172, 271, 309, 177, 278, 168, 244, 267, 0,
	0, 165, 294, 277, 226, 209, 210, 164, 0, 262,
	188, 201, 184, 242, 0, 293, 321, 183, 312, 0,
	304, 167, 0, 303, 241, 290, 295, 227, 221, 166,
	292, 225, 220, 213, 192, 0, 205, 253, 219, 254,
	206, 231, 230, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 214, 0, 0, 0, 322, 0,
	265, 247, 0, 0, 0, 263, 217, 291, 255, 297,
	281, 305, 259, 256, 158, 282, 186, 228, 169, 170,
	182, 189, 191, 193, 194, 237, 238, 250, 270, 284,
	285, 286, 185, 178, 264, 179, 203, 180, 159, 272,
	181, 161, 251, 289, 0, 199, 260, 224, 162, 223,
	252, 288, 287, 313, 319, 320, 324, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 318, 197, 156, 301, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 317, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 208,
	249, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 299, 311, 328, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 326, 233, 234, 235, 236, 200, 0, 176, 329,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 196, 202, 0, 204, 175, 248,
	198, 308, 211, 0, 240, 207, 273, 212, 218, 261,
	307, 246, 266, 173, 298, 274, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 216,
	0, 257, 195, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 283,
	0, 0, 0, 0, 314, 315, 316, 300, 0, 187,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 0, 190, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 275, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1205, 1206,
	1207, 1662, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 280, 296, 172, 271, 309,
	177, 278, 168, 244, 267, 0, 0, 165, 294, 277,
	226, 209, 210, 164, 0, 262, 188, 201, 184, 242,
	0, 293, 321, 183, 312, 0, 304, 167, 0, 303,
	241, 290, 295, 227, 221, 166, 292, 225, 220, 213,
	192, 0, 205, 253, 219, 254, 206, 231, 230, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	214, 0, 0, 0, 322, 0, 265, 247, 0, 0,
	0, 263, 217, 291, 255, 297, 281, 305, 259, 256,
	158, 282, 186, 228, 169, 170, 182, 189, 191, 193,
	194, 237, 238, 250, 270, 284, 285, 286, 185, 178,
	264, 179, 203, 180, 159, 272, 181, 161, 251, 289,
	0, 199, 260, 224, 162, 223, 252, 288, 287, 313,
	319, 320, 324, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 318,
	197, 156, 301, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 317, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 208, 249, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 299, 311, 328, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 326, 233, 234,
	235, 236, 200, 0, 176, 329, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 323,
	196, 202, 0, 204, 175, 248, 198, 308, 211, 245,
	240, 207, 273, 212, 218, 261, 307, 246, 266, 173,
	298, 274, 222, 0, 0, 0, 190, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 275, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1205, 1206, 1207,
	1662, 0, 0, 157, 171, 216, 0, 257, 195, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 315, 316, 300, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 163, 280, 296, 172, 271, 309, 177,
	278, 168, 244, 267, 0, 0, 165, 294, 277, 226,
	209, 210, 164, 0, 262, 188, 201, 184, 242, 0,
	293, 321, 183, 312, 0, 304, 167, 0, 303, 241,
	290, 295, 227, 221, 166, 292, 225, 220, 213, 192,
	0, 205, 253, 219, 254, 206, 231, 230, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 279, 0, 0, 214,
	0, 0, 0, 322, 0, 265, 247, 0, 0, 0,
	263, 217, 291, 255, 297, 281, 305, 259, 256, 158,
	282, 186, 228, 169, 170, 182, 189, 191, 193, 194,
	237, 238, 250, 270, 284, 285, 286, 185, 178, 264,
	179, 203, 180, 159, 272, 181, 161, 251, 289, 0,
	199, 260, 224, 162, 223, 252, 288, 287, 313, 319,
	320, 324, 0, 325, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 0, 0, 318, 197,
	156, 301, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 317, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 208, 249, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 299, 311, 328, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 326, 233, 234, 235,
	236, 200, 0, 176, 329, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 323, 196,
	202, 0, 204, 175, 248, 198, 308, 211, 245, 240,
	207, 273, 212, 218, 261, 307, 246, 266, 173, 298,
	274, 222, 0, 0, 0, 190, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 275, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1205, 1206, 1207, 0,
	0, 0, 157, 171, 216, 0, 257, 195, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	315, 316, 300, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 163, 280, 296, 172, 271, 309, 177, 278,
	168, 244, 267, 0, 0, 165, 294, 277, 226, 209,
	210, 164, 0, 262, 188, 201, 184, 242, 0, 293,
	321, 183, 312, 0, 304, 167, 0, 303, 241, 290,
	295, 227, 221, 166, 292, 225, 220, 213, 192, 0,
	205, 253, 219, 254, 206, 231, 230, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 214, 0,
	0, 0, 322, 0, 265, 247, 0, 0, 0, 263,
	217, 291, 255, 297, 281, 305, 259, 256, 158, 282,
	186, 228, 169, 170, 182, 189, 191, 193, 194, 237,
	238, 250, 270, 284, 285, 286, 185, 178, 264, 179,
	203, 180, 159, 272, 181, 161, 251, 289, 0, 199,
	260, 224, 162, 223, 252, 288, 287, 313, 319, 320,
	324, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 828, 318, 197, 156,
	301, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 317, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 208, 249, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	299, 311, 328, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 326, 233, 234, 235, 236,
	200, 0, 176, 329, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 828, 0, 323, 196, 202,
	0, 204, 175, 248, 198, 308, 211, 816, 240, 207,
	273, 212, 218, 261, 307, 246, 266, 173, 298, 274,
	222, 720, 721, 722, 719, 836, 840, 842, 844, 846,
	847, 849, 0, 853, 850, 851, 852, 0, 568, 831,
	832, 833, 834, 814, 815, 837, 718, 817, 0, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 829,
	835, 157, 0, 216, 0, 257, 195, 0, 839, 841,
	843, 845, 848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 816, 1104, 0, 593,
	0, 0, 830, 0, 0, 0, 0, 0, 314, 315,
	316, 300, 0, 187, 836, 840, 842, 844, 846, 847,
	849, 0, 853, 850, 851, 852, 0, 0, 831, 832,
	833, 834, 814, 815, 837, 0, 817, 0, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 829, 835,
	0, 0, 0, 0, 0, 0, 0, 839, 841, 843,
	845, 848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	0, 0, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 830, 0, 0, 0, 0, 2144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 1036,
	1037, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	1616, 0, 0, 0, 0, 0, 1100, 0, 0, 1097,
	0, 0, 0, 1099, 1096, 1098, 1102, 1103, 585, 0,
	0, 1101, 0, 2144, 0, 0, 0, 2555, 375, 0,
	374, 381, 371, 0, 0, 0, 0, 2126, 0, 0,
	0, 0, 378, 379, 0, 380, 384, 0, 0, 366,
	0, 0, 0, 0, 0, 0, 0, 1616, 0, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 394, 0, 567, 2126, 375, 0, 374, 381, 371,
	0, 0, 838, 0, 0, 588, 0, 0, 0, 378,
	379, 0, 380, 384, 0, 0, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 583, 0,
	0, 0, 0, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1107, 1108, 1109, 1110, 1111, 1112,
	1105, 1106, 2220, 0, 0, 393, 0, 0, 394, 584,
	589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2130, 577, 0, 579, 592, 0, 0, 0, 576,
	574, 573, 2134, 578, 0, 590, 591, 0, 0, 0,
	0, 838, 0, 0, 0, 0, 0, 586, 587, 0,
	0, 0, 2123, 2152, 0, 0, 2125, 2127, 2129, 0,
	2131, 2132, 2133, 2135, 2136, 2137, 2139, 2140, 2141, 2142,
	0, 367, 369, 368, 0, 0, 0, 2162, 2130, 373,
	0, 0, 0, 0, 581, 0, 0, 0, 0, 2134,
	2155, 377, 0, 0, 0, 0, 2150, 0, 392, 2145,
	0, 2164, 2165, 0, 0, 370, 0, 2151, 0, 2123,
	0, 0, 0, 2125, 2127, 2129, 0, 2131, 2132, 2133,
	2135, 2136, 2137, 2139, 2140, 2141, 2142, 0, 0, 0,
	0, 0, 0, 0, 2143, 0, 0, 0, 367, 369,
	368, 0, 0, 2156, 0, 0, 373, 0, 0, 0,
	0, 2122, 0, 0, 0, 0, 2145, 0, 377, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 361, 0, 0, 2138,
	0, 0, 0, 0, 0, 0, 2128, 0, 0, 0,
	0, 2143, 0, 372, 376, 382, 0, 383, 385, 0,
	0, 386, 387, 388, 0, 0, 390, 391, 2122, 375,
	0, 374, 381, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 379, 0, 380, 384, 0, 2163,
	366, 1950, 0, 0, 0, 0, 2138, 0, 0, 0,
	389, 0, 0, 2128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2158, 0, 0, 0,
	372, 376, 382, 0, 383, 385, 0, 0, 386, 387,
	388, 0, 0, 390, 391, 0, 0, 0, 2157, 2159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 369, 368, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 376, 382, 0, 383, 385,
	0, 0, 386, 387, 388, 0, 0, 390, 391,
}

var yyPact = [...]int{
	253, -1000, -306, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22086, -1000, -1000, 1591, -1000, 21600, 7987, 22572,
	110, 22572, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 376, -1000,
	21114, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 327, 24525,
	217, 211, 7000, 22572, -286, -1000, 2152, -1000, -1000, -1000,
	-1000, 350, 395, 20628, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 24222, 44,
	395, 502, 510, 511, 511, 9445, 2152, 219, 66, -1000,
	720, 253, 283, 22572, -1000, 873, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2152, 2152, -1000, 22572, 22572, -47, 1054,
	-1000, 207, 233, 213, 869, -1000, -1000, -1000, -1000, 2186,
	-1000, 22572, 1825, 22572, -1000, 1420, 268, 24458, 2006, 737,
	426, 1918, -1000, -1000, 1893, -1000, 53, 240, 120, 209,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 95, -1000, 2055,
	-1000, -1000, 45, -1000, -1000, 56, -1000, -1000, -1000, -87,
	-1000, -1000, -1000, -1000, -1000, -156, -156, 598, 1211, 7000,
	-1000, 1820, -1000, 1729, -1000, -1000, -1000, -1000, 4058, 7000,
	7000, 7000, 7000, -1000, -1000, 1737, 7000, 1889, 1888, -1000,
	-1000, -1000, -1000, -1000, 866, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7489, -1000, 1887,
	1885, 1883, 1882, 1879, 1878, 1876, 1874, 1865, 1864, 1850,
	1628, 1845, 1514, 1513, 1839, 1837, 1818, 7000, 1511, 1628,
	1628, 1817, 1816, 1814, 1813, 1812, 1810, 1809, 1806, 1804,
	1802, 1801, 1797, 1796, 1795, 1794, 1772, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1288, -1000, 865, 635, -1000, 1769, 1988, 2085, 1684,
	2144, 2118, 2110, 2106, 2091, 40, 302, 302, 302, 362,
	302, 375, -1000, -1000, -1000, -1000, -1000, -1000, 441, -1000,
	-1000, -1000, -1000, 730, 22572, -1000, 1668, 934, 2078, 271,
	934, 228, 266, 2085, 2085, -93, -104, 934, 934, -104,
	52, -1000, -1000, -1000, 1099, 235, 1099, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2038, 2036, 327, 327, 334, -1000,
	-177, -1000, -1000, 599, -1000, 466, -1000, 1420, 247, 232,
	761, 1116, -1000, 932, 22572, 22572, 22572, 932, 932, 12366,
	11880, -1000, 2085, 1684, -1000, 1616, 1807, 1684, 327, 327,
	327, 327, 327, 327, 327, 22572, 5525, 5525, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 208, 1764, -1000, 22572,
	2085, 1988, 2085, -1000, -1000, 863, 1308, 1508, -1000, -1000,
	207, 1043, -1000, 739, -1000, -1000, -1000, -1000, 22572, 212,
	-1000, 1499, 1763, -1000, 337, 716, 752, -1000, 83, 24789,
	17712, 1420, 17712, 22572, -1000, -1000, -1000, -1000, -1000, -1000,
	-94, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -53, -1000, -53, 7000, 24086, 7000,
	7000, 7000, 7000, 915, 343, 6511, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 7000, 7000, 7000, 7000, 7000, 7000, 7000,
	7000, 7000, 7000, 7000, 7000, 1727, 1250, 7000, 7000, 7000,
	1807, 2170, 742, -1000, 1211, -1000, -1000, -1000, -1000, 1060,
	1211, 7000, 7000, 22572, 24141, 7000, 7000, 86, 7000, 2066,
	2066, 3071, 22572, 7000, -1000, 1614, 1613, -1000, -1000, 1247,
	7000, -1000, -1000, 7000, 7000, 7000, -1000, -1000, -1000, -1000,
	50, 2066, 7000, 7000, 2066, 2066, 2066, 1096, 2066, 2066,
	2066, 2066, 2066, 2066, 2066, 1507, 22572, 1969, 28, -1000,
	-1000, -1000, 1648, -1000, 1706, 1706, 1648, 1648, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1760, 1752, -1000,
	-1000, 1701, 1701, 1701, 1648, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1740, 1740, 1751, 1740, 22572, 2085, -286, 5036, -1000, -289,
	1988, 7000, -1000, -1000, 7000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 359, 302, -1000, 1523, 1072, 17712, 1420,
	1360, 22572, 302, 334, -1000, 22572, 730, 2017, 22572, 2153,
	7000, 17712, 1099, 2153, 1099, -1000, -1000, -1000, 934, 934,
	-1000, -1000, -1000, -1000, 1099, 1099, -1000, -1000, -95, 2153,
	2153, -124, 22572, 22572, 302, 22572, -1000, -1000, -1000, -1000,
	22572, -1000, -1000, 1523, 17712, 11394, -1000, -140, 498, 469,
	474, -1000, -1000, 312, 308, 10908, 260, 17712, 3560, -1000,
	-1000, 932, 932, 932, 3560, 3560, 829, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1988, -1000, -1000, -1000, -1000, 1523,
	17712, 1420, 22572, 22572, 22572, 23816, -1000, 740, -1000, -1000,
	8959, 862, 740, 1910, -287, -1000, 10422, 22572, 22572, -1000,
	1988, -1000, 1988, 2600, -1000, 2071, -1000, 207, 128, -1000,
	-1000, -1000, -1000, -1000, -1000, 859, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 727, -1000, 22572, -1000, -1000,
	83, 17712, 1016, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	114, -1000, -1000, 137, -1000, 347, -19, 1039, -1000, -1000,
	37, 131, 37, 1211, -1000, -1000, 438, 438, 915, 1025,
	1025, 1028, -1000, 348, -1000, -1000, -1000, -1000, 1737, -1000,
	-1000, -1000, 1152, 1081, -1000, 1119, 1119, 882, 882, 882,
	882, 882, 1165, 1165, -1000, -1000, -1000, 4058, 1727, 7000,
	7000, 7000, 317, 1729, 7922, -1000, 7000, 1065, -1000, 7000,
	1384, 957, 852, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1612, 598, 1603, 1606, 2166, 1600, 7000,
	-1000, -1000, 7000, 1321, 6022, -1000, -1000, -1000, 1599, 850,
	1596, -1000, -1000, -1000, 1595, 711, 1585, 1413, 1584, 719,
	7000, 1038, 1032, 7000, 7000, 7000, 7000, 1583, 7000, 7000,
	7000, 7000, 7000, 7000, 7000, 717, -1000, 7000, 11, -1000,
	-1000, -1000, -1000, 1305, -1000, 1300, -1000, -1000, -1000, 1506,
	1506, -1000, 1296, -1000, -1000, -1000, -1000, 1295, -1000, -1000,
	1292, -1000, -1000, -1000, -1000, 1027, -1000, 1211, -1000, 1492,
	-1000, 968, 658, -1000, 1260, 20142, 22572, 1, -1000, 1993,
	657, -1000, -19, 605, 1778, -1000, -1000, -1000, 1966, 22572,
	19656, -1000, 1722, 1011, -1000, -1000, 7000, -1000, 1721, 22572,
	-1000, 22572, 2153, 2153, 934, 23816, 1099, 22572, 1099, -1000,
	-1000, 1099, -1000, 849, -1000, 22572, -1000, -1000, -1000, -1000,
	1, 657, 1978, 715, -1000, -1000, -1000, -1000, 2014, 23058,
	9932, 23058, 1718, 1717, -1000, -1000, 488, 456, 593, -1000,
	-1000, 344, -1000, -1000, 605, -1000, -1000, -1000, 1714, 1051,
	-1000, -1000, 7000, -1000, 3560, 3560, 3560, -1000, -1000, 14310,
	-1000, -1000, 653, 605, 1909, 651, -1000, 651, -1000, -1000,
	-1000, 2153, 5525, -1000, 11394, -1000, -1000, 19170, -1000, 18684,
	2153, -1000, 1973, 615, -1000, 1712, -1000, 994, 1959, -1000,
	577, -1000, 1048, 989, -1000, -1000, -1000, -1000, 846, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -48, -1000,
	-1000, 22572, 1499, 988, 1016, 637, -1000, 336, 840, 790,
	-1000, 17712, 48, 17712, -1000, 17712, -1000, -1000, 224, -1000,
	22572, 1984, -1000, -1000, -1000, 1491, 1977, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 963, -1000, 317, 1729,
	2950, -1000, 7000, 7000, 2150, 1030, -1000, 7000, 1140, 24086,
	1234, 13338, 22572, -1000, -1000, 7000, 7000, -1000, 2139, 2053,
	-1000, 7000, 7000, 1395, -1000, 22572, -1000, -1000, -1000, 13338,
	-1000, 7000, -1000, 7000, 2041, -1000, -1000, 2037, 1987, 1981,
	961, -1000, 1902, 1843, 1823, 1767, 1719, 1640, 1522, 1490,
	1211, -1000, -1000, 1582, 1580, 953, -1000, 952, 1574, 950,
	947, 5036, -1000, -108, 7000, 7000, 7000, 1961, -1000, -1000,
	1668, 1070, 1708, -88, 1017, -1000, 290, 17712, 223, -1000,
	1907, 429, -1000, 1966, -1000, 463, -1000, 1707, 22572, 692,
	-1000, 781, 253, -1000, 22572, 1211, -1000, 1420, 934, 2153,
	-1000, -1000, 2153, -1000, 934, -1000, 934, 1099, 22572, -1000,
	-88, 290, 22572, 11394, 11394, 11394, 11394, -1000, 1943, 1938,
	-1000, 1931, 1930, 1945, 22572, 11394, 22572, -1000, -1000, -1000,
	23437, -1000, -1000, -1000, -1000, 946, 1573, 2152, 2030, 9932,
	501, 18198, 7000, -1000, -1000, -1000, 454, 17712, 1489, 260,
	-1000, -1000, -1000, -1000, -1000, 22572, 22572, 2149, -1000, 643,
	-1000, -1000, 776, -1000, 2149, 1090, -287, 5036, 238, 22572,
	-287, 22572, 5036, -1000, 22572, 2600, 1291, -1000, -1000, -1000,
	2155, 17712, 1420, 902, 967, -1000, 29, -1000, 100, 278,
	1488, -1000, 365, 1044, 356, -1000, -1000, 7000, -1000, -1000,
	-1000, -1000, 1211, 7000, 1570, 1568, -1000, 1648, 1706, -1000,
	1648, 1701, 1648, 438, 438, 1566, -1000, 1215, 1505, -1000,
	-1000, 1476, 1460, 7000, -1000, 1561, 4050, 984, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1559, -1000, -1000, -1000, 1486, -1000, -1000, -1000, 1290, -1000,
	1289, -1000, -73, -59, 1211, 1211, -1000, -1000, 1958, 2010,
	1985, 8473, 1132, -1000, -1000, 1485, -1000, 269, -1000, -1000,
	-1000, 355, 78, 1286, 267, -1000, 1502, 22572, -1000, -1000,
	-1000, -1000, -1000, 1017, 1017, 1017, 8473, 283, 627, 770,
	11394, 22572, -1000, 16740, 1556, -1000, 605, 2153, -1000, -1000,
	2153, 2153, 934, -1000, 1132, 269, 656, -1000, 1042, 1898,
	1905, 1898, -1000, -1000, -1000, -1000, 1937, -1000, 1821, -1000,
	-1000, 656, -1000, 1668, -1000, -1000, -1000, 1555, -1000, 501,
	-1000, 2068, 478, 478, 478, 945, 936, 933, -1000, 637,
	1554, -1000, -1000, -1000, -1000, 2147, 2143, 17226, 2147, 2196,
	-1000, 1550, 634, -287, -1000, -1000, 615, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1420, -1000, 93, -1000, -1000,
	-1000, -1000, -1000, -1000, -33, -1000, 22572, 1484, 22572, -1000,
	1211, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7000, -1000, -1000, -1000, 1426, -1000, -1000, 7000,
	-1000, -1000, 1549, 1548, -291, -55, 2142, 2135, -1000, -1000,
	219, 22572, 1543, 631, -1000, -1000, -1000, 24175, 660, -1000,
	22572, 1087, 478, 302, 478, 1082, 1691, -1000, -1000, -1000,
	1482, -20, -1000, -1000, 1481, 1473, 1277, -1000, -1000, 1355,
	789, -9, -1000, -1000, -1000, -1000, -1000, -1000, 1690, 13338,
	13824, 1472, 1541, 23058, 11394, 16740, 646, -1000, 769, -1000,
	-1000, -1000, -1000, -1000, 2153, -1000, -1000, 2107, 22572, 5036,
	-1000, -1000, 7000, 1687, -1000, 7000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1670, 1994, -1000, -1000, -1000, -1000, 1454,
	-1000, 1450, -1000, -1000, -1000, 7000, 7000, -1000, -1000, 22572,
	-1000, 615, 605, -1000, -1000, -124, 72, -124, 1405, -1000,
	1334, -1000, -1000, -293, 1448, -1000, 2134, 1442, 1362, -1000,
	1668, 2210, 8473, 24603, -1000, -1000, 22572, 22572, -1000, 22572,
	22572, 302, 7000, -1000, -1000, 220, -1000, -1000, 80, -1000,
	-1000, 1350, 321, -1000, 15282, -1000, -1000, -1000, -1000, -1000,
	-53, 2153, 646, 769, -1000, -1000, 889, -1000, 2085, -1000,
	-1000, 1211, 22572, 1211, 16254, -1000, 2133, 2131, 917, 901,
	1211, 598, 577, -1000, -78, -66, -1000, 1440, -1000, -1000,
	-1000, -295, 1271, -1000, 1439, -58, -1000, -1000, 2009, 281,
	24457, -1000, 1017, 1017, 617, 1017, 1017, 1017, 1017, 206,
	205, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017,
	1017, 1017, 1017, 1017, 1017, 1661, -1000, -1000, 24603, -1000,
	-1000, 1101, 7000, -1000, -1000, 1435, 13824, 442, 497, 1658,
	-1000, 169, 2195, 1079, 1053, -1000, 22572, -1000, 1656, 1642,
	126, 1655, -1000, 1653, 1652, 22572, 1314, 277, 1432, -1000,
	-1000, 74, -1000, -1000, 888, -1000, 1648, 7000, -1000, -124,
	2107, -1000, -1000, 884, 867, -1000, -1000, -1000, -1000, -1000,
	1139, -1000, 1131, 331, -64, -66, -1000, 2127, -60, 2115,
	2104, 1041, -1000, 1647, -1000, -1000, 2098, 219, -1000, 2096,
	2210, -1000, 1249, 1246, 1017, 1017, 1243, 1430, 1428, 1427,
	1017, 1017, 1242, 1418, 23437, 1203, 1179, 1176, 1331, 1416,
	686, 1298, 1270, 1259, 22572, 1646, 1342, -1000, -1000, 1729,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1172, 1644, -164, -1000, -1000, 1637, 15282, 424, 424,
	15282, 15282, 15282, 1636, 354, -1000, -35, -1000, -1000, -1000,
	15282, 1982, 1251, -1000, 2085, -1000, -1000, 15768, 1539, 1538,
	1534, 1531, 1634, 1171, -55, 2094, -1000, 1362, 2092, 1362,
	1362, 1406, 22572, 1362, -1000, 194, -1000, -1000, -1000, 13338,
	13338, -1000, -1000, -1000, -1000, 1385, 1377, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 218,
	22572, 841, -1000, 1022, 1524, 7000, 1628, -221, 15282, 837,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 832, 831, 825,
	15282, -1000, -1000, -1000, 161, -1000, 155, -1000, -1000, 1982,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2029, 12852, -75,
	-1000, 1371, -1000, 1362, -1000, -1000, 70, 822, -1000, -1000,
	138, 227, 215, -1000, 315, -1000, -1000, -1000, -1000, -1000,
	-1000, 245, 820, -1000, 1342, 1330, -1000, 1241, -1000, 1903,
	-1000, 21, 802, -1000, -1000, -1000, -1000, 798, -1000, -1000,
	1017, 1325, 106, -1000, -1000, -1000, -1000, 22572, -1000, 796,
	-1000, -1000, -1000, 763, -1000, -1000, -1000, -1000, -1000, 1323,
	-1000, 22572, 139, 1170, 7000, 1625, 7000, 1624, 148, 1623,
	-1000, -1000, -1000, -1000, -1000, 354, -1000, 1901, 1900, 2159,
	-1000, -1000, -1000, -1000, 155, 155, 155, 155, 30, 1147,
	-1000, 1360, 575, -1000, 1012, -1000, 14796, 22572, 1007, -1000,
	1621, 2088, -1000, 3552, 22572, 3063, 22572, 1618, 1005, 7000,
	-1000, -1000, 2192, -1000, 2190, 462, 462, -1000, -1000, -1000,
	22572, 4547, -1000, 594, 1315, -1000, 279, 145, -1000, 795,
	-1000, 788, 22572, 1143, 1776, -1000, -1000, -1000, 1276, 173,
	-1000, -1000, -1000, 1211, 22572, 67, 760, -1000, 1479, 132,
	-1000, -1000, 738, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1281, -1000, 279, 1951, -1000, 1114, -1000, 1002, -1000, 24400,
	401, -1000, 1144, -1000, 24400, 134, -1000, 275, 1592, -311,
	-1000, -1000, 722, -1000, 1408, 472, 7000, -1000, -1000, 134,
	2210, -1000, 7000, 714, -1000, 2210, 678, -1000, -1000,
}

var yyPgo = [...]int{
	0, 129, 2554, 191, 130, 127, 190, 2553, 2552, 2100,
	2052, 2550, 2548, 2547, 2546, 2544, 2542, 2541, 2540, 2539,
	2537, 2536, 2535, 2533, 2532, 2531, 2530, 2529, 188, 2528,
	2527, 2526, 2523, 2522, 2521, 2519, 2518, 2517, 2515, 2514,
	2512, 2508, 2507, 2506, 2505, 2504, 119, 2503, 2040, 2502,
	2501, 2500, 2497, 2495, 164, 2489, 2488, 2486, 2483, 2482,
	2481, 2480, 2479, 2474, 2471, 2470, 2459, 2455, 2454, 2453,
	2451, 2450, 2449, 181, 167, 58, 2448, 44, 46, 107,
	198, 66, 197, 206, 141, 122, 65, 2447, 2446, 2445,
	115, 175, 113, 24, 2444, 132, 2443, 108, 48, 28,
	192, 101, 55, 64, 87, 2441, 2440, 79, 2439, 2438,
	93, 2431, 60, 2430, 76, 30, 86, 27, 2429, 139,
	2428, 73, 2427, 2426, 2424, 2423, 136, 2422, 88, 54,
	2420, 2419, 2418, 2417, 2416, 34, 2413, 49, 2412, 2411,
	2410, 2409, 2408, 2406, 2405, 12, 16, 18, 2404, 15,
	4, 2403, 168, 116, 78, 110, 2402, 374, 2401, 2400,
	2399, 117, 2398, 464, 2397, 2396, 2395, 2393, 2391, 11,
	2390, 157, 2389, 2388, 2387, 57, 149, 152, 2385, 2384,
	96, 32, 51, 91, 2383, 2381, 70, 169, 21, 43,
	0, 151, 45, 2380, 2378, 2377, 195, 153, 148, 179,
	89, 194, 118, 2376, 2375, 53, 2372, 121, 2370, 92,
	98, 2369, 143, 2367, 36, 133, 2366, 160, 2365, 184,
	2, 99, 26, 227, 2364, 2363, 2362, 134, 2360, 2359,
	150, 126, 2358, 2357, 2356, 25, 2355, 35, 19, 2352,
	82, 2351, 196, 2350, 172, 94, 138, 135, 104, 171,
	177, 71, 111, 1055, 103, 81, 17, 2348, 173, 2347,
	199, 193, 2346, 145, 2343, 189, 342, 161, 2342, 140,
	7, 2340, 2339, 8, 2338, 22, 2337, 2336, 2335, 2334,
	6, 2333, 2332, 2331, 1, 3, 2330, 5, 165, 50,
	90, 2329, 95, 187, 2328, 2325, 2322, 2320, 2319, 310,
	2318, 2317, 2315, 2314, 2312, 2309, 2308, 2307, 77, 37,
	2305, 2304, 2302, 2300, 69, 100, 2295, 288, 162, 2294,
	41, 2292, 2291, 23, 2290, 31, 2289, 2286, 2279, 13,
	137, 2278, 2275, 14, 2274, 2270, 9, 10, 2269, 2266,
	59, 2259, 52, 29, 72, 112, 2258, 20, 62, 97,
	2257, 2256, 186, 182, 159, 2255, 124, 180, 200, 2253,
	166, 2252, 2249, 2248, 2246, 2244, 2236, 2235, 1193, 2233,
	2227, 183, 56, 170, 2226, 2223, 146, 2222, 123, 85,
	83, 154, 2221, 142, 2220, 2219, 80, 2217, 2215, 2214,
	2213, 176, 147, 2211, 2210,
}

//line mysql_sql.y:7914
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 389, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 63,
	62, 339, 339, 338, 338, 337, 337, 336, 336, 336,
	335, 335, 335, 334, 334, 333, 333, 332, 332, 330,
	330, 331, 329, 328, 328, 328, 326, 326, 324, 324,
	325, 325, 319, 319, 322, 322, 320, 320, 320, 320,
	323, 318, 318, 318, 317, 317, 61, 61, 61, 255,
	255, 60, 60, 269, 269, 269, 269, 269, 267, 267,
	267, 267, 267, 267, 266, 266, 265, 265, 270, 270,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	55, 55, 55, 55, 58, 58, 58, 59, 264, 264,
	264, 56, 57, 57, 254, 254, 259, 259, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	263, 263, 263, 261, 261, 260, 260, 262, 262, 49,
	49, 49, 52, 51, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 50, 50, 50, 50, 50, 50, 47,
	47, 47, 47, 47, 46, 46, 48, 48, 252, 252,
	251, 66, 66, 66, 66, 66, 66, 66, 65, 65,
	68, 68, 67, 54, 54, 54, 54, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 363, 363, 363, 365,
	365, 194, 195, 390, 193, 193, 193, 359, 359, 360,
	361, 362, 362, 362, 64, 7, 7, 44, 45, 383,
	383, 299, 299, 207, 207, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 302, 303, 203, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 35, 34,
	34, 241, 241, 33, 391, 391, 177, 177, 32, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 43, 313,
	313, 393, 393, 393, 41, 42, 298, 298, 298, 39,
	38, 37, 36, 36, 31, 31, 30, 30, 200, 200,
	202, 202, 198, 392, 392, 275, 275, 201, 201, 29,
	29, 29, 199, 199, 176, 197, 197, 197, 8, 8,
	6, 11, 11, 11, 11, 11, 11, 11, 11, 17,
	19, 249, 249, 246, 18, 14, 13, 16, 12, 15,
	5, 5, 5, 5, 9, 9, 10, 85, 85, 116,
	116, 372, 372, 368, 368, 369, 369, 369, 370, 370,
	371, 371, 4, 306, 306, 306, 306, 306, 306, 307,
	307, 348, 348, 348, 349, 106, 106, 101, 101, 308,
	308, 221, 350, 350, 316, 316, 315, 315, 314, 314,
	104, 104, 105, 105, 88, 88, 74, 74, 321, 321,
	321, 321, 327, 327, 296, 296, 142, 142, 172, 172,
	173, 173, 78, 78, 79, 79, 79, 79, 79, 79,
	356, 356, 358, 358, 357, 103, 103, 99, 99, 100,
	100, 100, 98, 98, 97, 96, 96, 95, 93, 93,
	93, 94, 94, 94, 81, 81, 80, 80, 80, 80,
	80, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 82, 82, 364, 364, 364, 300, 300,
	300, 305, 305, 154, 154, 155, 155, 153, 153, 83,
	83, 84, 84, 84, 84, 152, 152, 151, 86, 86,
	92, 91, 91, 87, 87, 87, 87, 162, 162, 161,
	161, 161, 161, 71, 72, 72, 73, 109, 109, 160,
	159, 159, 159, 108, 108, 107, 107, 102, 102, 90,
	90, 90, 90, 158, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 394, 394, 156, 388, 388, 387, 387,
	386, 384, 384, 384, 385, 385, 385, 385, 341, 341,
	341, 341, 341, 186, 186, 186, 192, 192, 185, 185,
	185, 185, 185, 196, 191, 191, 187, 187, 188, 188,
	188, 3, 3, 3, 3, 23, 23, 23, 23, 27,
	27, 366, 366, 20, 373, 376, 374, 377, 377, 377,
	378, 378, 378, 379, 379, 21, 375, 380, 380, 380,
	250, 250, 247, 248, 248, 245, 244, 244, 244, 382,
	382, 381, 381, 381, 189, 189, 22, 240, 240, 242,
	243, 243, 234, 234, 234, 234, 26, 238, 238, 239,
	239, 239, 239, 239, 235, 235, 237, 237, 233, 233,
	233, 233, 233, 25, 232, 232, 230, 230, 228, 228,
	229, 229, 227, 227, 227, 231, 231, 24, 24, 76,
	75, 75, 75, 75, 75, 77, 301, 301, 271, 271,
	274, 274, 281, 281, 282, 282, 280, 280, 287, 287,
	286, 286, 285, 285, 284, 284, 283, 283, 283, 283,
	278, 278, 277, 277, 272, 272, 272, 272, 272, 273,
	273, 276, 276, 279, 279, 133, 133, 134, 134, 134,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 346,
	346, 347, 136, 136, 136, 140, 140, 140, 140, 140,
	140, 135, 135, 137, 137, 117, 117, 115, 115, 110,
	110, 111, 111, 112, 112, 113, 113, 114, 114, 114,
	114, 114, 114, 257, 257, 344, 344, 345, 345, 340,
	340, 340, 343, 343, 343, 343, 343, 342, 342, 118,
	170, 170, 170, 190, 190, 190, 169, 169, 169, 132,
	132, 131, 131, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 256, 256, 204,
	204, 205, 205, 149, 148, 148, 148, 148, 148, 146,
	147, 145, 145, 145, 145, 145, 144, 144, 143, 143,
	143, 236, 236, 141, 141, 139, 139, 139, 138, 138,
	138, 288, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 213, 213, 218,
	218, 355, 355, 354, 119, 119, 119, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 128, 128, 128, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 312, 312, 312, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	168, 367, 367, 367, 351, 351, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 166, 166, 166, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 222, 222, 223, 223, 309, 309, 309, 309, 309,
	309, 310, 310, 311, 311, 311, 311, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 211, 163, 163, 163,
	224, 219, 219, 220, 220, 214, 214, 214, 214, 214,
	214, 214, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 215, 215, 217, 217, 226, 226, 226, 225,
	225, 225, 225, 225, 225, 225, 130, 130, 130, 130,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	121, 121, 121, 121, 125, 125, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	126, 126, 126, 126, 124, 124, 124, 124, 124, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 69, 70, 70, 123, 171,
	171, 289, 289, 292, 292, 290, 290, 291, 293, 293,
	293, 294, 294, 294, 295, 295, 295, 297, 297, 175,
	175, 175, 182, 182, 174, 174, 183, 183, 184, 184,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 9,
	9, 0, 2, 1, 3, 3, 3, 1, 3, 5,
	0, 2, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 0, 3, 3, 0, 3, 0, 3,
	0, 3, 0, 2, 1, 2, 3, 4, 3, 3,
	1, 0, 1, 1, 0, 1, 8, 5, 7, 0,
	3, 8, 5, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 4, 1, 3,
	1, 2, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 2, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 3, 3, 2, 4, 4, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 2, 2, 0, 1, 4, 2, 4, 1,
	5, 3, 2, 1, 2, 2, 4, 4, 5, 2,
	1, 3, 4, 4, 1, 2, 9, 7, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 2,
	1, 1, 1, 1, 6, 1, 1, 7, 7, 0,
	3, 0, 2, 0, 1, 1, 1, 1, 4, 2,
	2, 3, 3, 4, 5, 3, 4, 4, 2, 2,
	2, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 0, 2, 7, 0, 1, 0, 1, 4, 1,
	1, 1, 3, 2, 3, 1, 1, 1, 6, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 6, 7, 4, 4, 7, 8, 0, 2,
	0, 2, 2, 1, 1, 1, 1, 0, 1, 4,
	4, 5, 1, 3, 1, 1, 3, 5, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 3, 1, 4, 6, 4, 4, 4, 3,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 5, 2, 1, 5, 4, 4, 2, 0,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 4, 3, 4, 5, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 3, 0, 1,
	1, 0, 2, 2, 3, 3, 1, 3, 3, 3,
	3, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 7, 7, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 2, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 4, 4, 3, 2, 2, 2,
	3, 2, 3, 4, 1, 3, 4, 0, 2, 1,
	1, 2, 2, 0, 1, 2, 4, 1, 3, 1,
	4, 2, 3, 3, 4, 6, 8, 8, 4, 6,
	8, 8, 4, 0, 1, 3, 0, 1, 1, 2,
	5, 2, 2, 2, 0, 2, 3, 3, 0, 1,
	3, 1, 3, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	11, 0, 1, 7, 1, 4, 1, 3, 4, 3,
	0, 1, 1, 0, 2, 7, 1, 0, 2, 2,
	1, 3, 2, 1, 3, 2, 1, 3, 2, 0,
	1, 3, 4, 3, 1, 1, 4, 1, 3, 1,
	1, 1, 0, 1, 1, 1, 11, 0, 2, 3,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 5, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 10, 9, 2,
	2, 6, 10, 14, 18, 5, 0, 1, 0, 6,
	0, 4, 0, 3, 1, 3, 4, 5, 0, 3,
	1, 3, 2, 3, 1, 2, 0, 4, 6, 5,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 6,
	5, 0, 3, 0, 1, 0, 1, 1, 3, 2,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 4, 1,
	3, 3, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 1, 7, 7, 7,
	7, 8, 5, 0, 1, 0, 1, 1, 1, 1,
	3, 3, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 5, 6, 4, 1, 2, 0,
	1, 1, 2, 5, 0, 1, 1, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 2,
	2, 0, 3, 0, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 3, 5,
	2, 2, 2, 2, 1, 1, 2, 5, 6, 3,
	6, 6, 1, 1, 1, 1, 1, 0, 2, 0,
	1, 1, 2, 4, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 5,
	4, 4, 5, 5, 5, 5, 4, 5, 5, 5,
	5, 5, 5, 5, 1, 1, 1, 4, 4, 6,
	8, 6, 4, 5, 5, 4, 6, 6, 7, 4,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	1, 1, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 4, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -389, -2, -1, -3, -4, -5, -6, -8, -53,
	-65, -67, -68, -28, -7, -64, -46, -47, -49, -55,
	-60, -61, -62, -63, -69, -70, -71, -78, -23, -22,
	-21, -20, 12, -9, -10, -356, -11, 230, -193, -194,
	-195, -390, -29, -30, -31, -36, -37, -38, -39, -41,
	-42, -43, -32, -33, -34, -35, -45, -44, 207, -48,
	61, -50, -51, -52, -56, -57, -58, -59, 321, 327,
	379, 388, 507, 508, 46, -79, -81, -24, -25, -26,
	-27, 203, 14, 458, -12, -15, -13, -16, -14, -18,
	-19, -17, 225, 224, 37, 287, 288, 325, 223, 204,
	13, 136, 137, 139, 140, 30, -80, 67, 205, -82,
	10, 509, -88, 38, -115, -190, 70, -178, -181, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 428, 303, 455, 242, 266,
	350, 269, 276, 136, 155, 149, 177, 169, 144, 246,
	247, 77, 139, 411, 87, 396, 376, 142, 261, 263,
	265, 268, 248, 165, 160, 260, 244, 507, 158, 249,
	39, 250, 182, 251, 252, 460, 392, 302, 398, 273,
	374, 159, 393, 264, 395, 184, 188, 403, 327, 153,
	154, 400, 405, 181, 222, 42, 457, 234, 406, 186,
	180, 176, 414, 277, 275, 179, 152, 175, 245, 50,
	190, 189, 191, 370, 371, 372, 373, 253, 254, 315,
	402, 172, 161, 306, 145, 22, 409, 229, 397, 328,
	255, 270, 278, 185, 187, 236, 241, 459, 378, 240,
	274, 407, 157, 233, 262, 228, 410, 146, 321, 330,
	256, 140, 267, 404, 413, 49, 343, 151, 143, 219,
	137, 238, 243, 11, 257, 258, 259, 280, 279, 271,
	173, 235, 178, 163, 150, 174, 138, 237, 412, 344,
	505, 304, 359, 171, 168, 239, 212, 408, 399, 141,
	363, 345, 166, 281, 502, 503, 504, 316, 301, 282,
	283, 164, 226, 391, 284, 286, 369, 294, 346, 377,
	-48, -10, -9, -80, -81, -115, 210, -197, 23, 374,
	-54, 375, 207, 67, -190, -5, -4, -46, -78, -196,
	-190, 287, -196, 210, -190, 240, 358, -299, 215, -266,
	-240, 241, -265, -242, -268, -243, 31, 203, 205, 204,
	237, 14, 325, 211, 12, 10, 326, 223, 24, 25,
	27, 13, 327, 329, 28, 330, 333, 334, 335, 41,
	338, 339, 230, 70, 73, 248, 248, -220, -214, 94,
	231, -216, -209, -210, -212, -336, -330, -208, 67, 120,
	121, 128, 95, -211, -288, 35, 97, 465, 426, -164,
	-165, -166, -167, -168, -190, -331, -329, 73, 78, 81,
	84, 85, 83, 82, 162, 80, 74, 133, -81, 70,
	-351, 473, -179, 493, 474, 492, 46, -304, -311, 209,
	-309, 167, 226, 163, 12, 126, 369, 131, 164, 470,
	489, 428, 496, 467, 468, 462, 463, 464, 466, 475,
	477, 488, -312, 484, 494, 495, 497, 72, 71, 487,
	486, 471, 472, 478, 461, 469, 479, 480, 485, 490,
	491, 498, 499, 309, 87, 310, 311, 418, 305, 312,
	215, 374, 55, 313, 314, 315, 316, 317, 425, 318,
	56, 319, 308, 230, 359, 320, 166, 183, 430, 429,
	431, 422, 419, 417, 420, 421, 423, 424, 481, 482,
	483, -262, -260, -190, -72, -73, 500, -97, -98, -157,
	19, 6, 7, 8, 9, -301, 303, 359, 240, -234,
	-232, 284, 336, 220, 219, 88, 418, 209, -368, -369,
	200, 201, 202, -358, 451, -357, -190, 311, 26, 210,
	-40, -313, -298, 399, 398, -201, 397, 390, 401, 392,
	203, 452, -175, 346, 377, 236, 415, 416, 323, 378,
	403, 404, 393, 87, 170, 167, 303, 359, -368, 141,
	138, -253, 141, 93, 146, 145, -253, 240, 358, 40,
	-259, 369, -258, -260, 403, 404, 414, 71, 72, 402,
	-175, 87, -98, -157, -97, -79, -81, -356, 303, 359,
	240, 211, 210, 212, 418, 287, -300, -364, 31, -305,
	197, 198, 199, 32, 33, -1, -104, 232, -115, 134,
	-98, -97, -98, -115, -169, -190, 376, 103, -54, -54,
	375, -359, -360, -361, -363, 207, 375, 374, 134, 15,
	-196, 65, -115, -242, 240, -266, -240, 35, 64, 135,
	213, 135, 64, 67, 323, 303, 359, 324, 418, 210,
	336, 212, 240, 337, 303, 359, 210, 212, 418, 240,
	303, 210, 212, 359, 240, 337, 390, 391, 212, 26,
	328, 331, 332, 391, -317, 414, -317, 135, 115, 93,
	90, 91, 92, -214, 110, -225, 103, 104, 105, 106,
	107, 108, 109, 117, 116, 127, 120, 121, 122, 123,
	124, 125, 126, 118, 119, 113, 94, 111, 112, 96,
	-81, -214, -220, -212, -214, -212, -212, -212, -288, -218,
	-214, 67, 67, 134, -214, 67, 67, 67, 67, 67,
	67, 67, 67, 67, -310, 67, 67, -222, -223, 67,
	67, 73, 73, 67, 67, 67, -212, 73, -223, -223,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 135, -121, -125, -122,
	-124, -123, -127, -126, 167, 168, 131, 171, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 30, 183,
	226, 163, 164, 165, 166, 184, 149, 169, 456, 192,
	150, 193, 151, 194, 152, 195, 153, 154, 196, 155,
	158, 159, 160, 157, 134, -98, 135, 67, -74, 38,
	-100, 21, -82, -81, 20, 31, 32, 31, 32, 31,
	32, 31, 32, -366, 210, 451, -230, 215, -230, -230,
	211, -230, 210, -370, 148, 135, -358, -103, 67, -200,
	111, 23, 238, -200, -393, 211, 400, 42, 239, 238,
	-99, -100, -99, 394, 391, -275, 395, 396, -201, -200,
	-200, -201, 210, 212, 418, -391, -392, 15, 113, 238,
	-391, 30, 30, -299, -299, -371, 214, 407, 458, 144,
	145, 146, -242, 240, 240, 135, 103, 23, -261, 103,
	114, -260, -260, -260, -261, -261, -135, 40, -189, 131,
	-190, 73, -135, 40, -99, -82, -81, 68, 68, -299,
	-299, -299, -299, -299, -299, -299, -196, -83, -84, 122,
	-214, -190, -83, -306, 46, -78, 67, 30, 67, -190,
	-99, -74, -100, 134, 78, 73, -54, 68, 135, -362,
	84, 85, -365, 181, 173, -190, -66, 73, -3, -4,
	-5, -6, -28, -46, -78, -332, -330, 67, 31, 368,
	64, 15, -267, 210, 418, 322, 236, 212, 303, -265,
	-249, -246, -244, -189, -242, -245, -244, -270, -169, 391,
	-75, 380, -75, -214, -119, -121, 343, 344, -214, -214,
	-214, -214, 83, 94, 301, 84, 85, -209, -226, 31,
	282, 283, -210, -210, -210, -210, -210, -210, -210, -210,
	-210, -210, -210, -210, -217, -224, -288, 67, 113, 111,
	112, 96, -212, -210, -210, 68, 135, -355, -354, 98,
	-214, -214, -190, -352, -353, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 313, 308, 314, 312,
	305, 320, 315, 316, 166, 449, 450, 443, 444, 445,
	446, 447, 448, -219, -220, -219, -214, -352, -219, -163,
	32, 31, -163, -214, -367, 299, 298, 300, -101, -190,
	-219, 68, 68, 68, 78, -220, -219, -210, -219, -353,
	-163, -220, -220, -163, -163, -163, -163, 122, -163, -163,
	-163, -163, -163, -163, -163, 73, -260, 40, -295, 344,
	343, -289, -291, 67, -290, 67, -290, -289, -289, 67,
	67, -292, 67, -292, -292, -289, -293, 67, -293, -294,
	67, -293, -190, -99, -73, -315, -314, -214, 40, 501,
	-74, -214, -96, -95, -214, 212, -230, -373, 70, 94,
	-250, -247, -244, -240, -188, 70, 71, 72, -190, -230,
	-371, -357, 34, -102, -190, -153, 16, -212, -244, -391,
	-153, -392, -200, -200, -202, -392, -198, -392, 391, -153,
	-153, -275, -199, -190, -199, -230, -177, -176, -190, -177,
	-373, -250, -91, -86, -90, -87, -92, -156, -158, -89,
	67, -115, 498, 499, 408, 409, 142, 145, 144, 31,
	368, -264, 368, 31, -240, -258, -254, 73, 369, -245,
	-263, 64, 131, -314, -261, -261, -261, -263, -263, 130,
	-74, -373, -249, -240, -190, -117, -115, -117, -191, -188,
	-181, -152, 135, -151, 15, -185, -190, 34, 73, 134,
	-152, -307, 64, -308, -221, -350, 500, -106, 68, -101,
	-348, -349, -101, -105, -190, -74, -74, -183, -184, -174,
	-180, -187, -188, -181, 208, 31, 93, 34, 36, 309,
	341, 96, 131, 20, 97, 167, 130, 311, 426, 310,
	203, 59, 429, 431, 430, 419, 417, 361, 365, 367,
	364, 418, 390, 40, 14, 37, 224, 32, 33, 124,
	205, 100, 101, 227, 35, 225, 85, 44, 23, 62,
	15, 17, 18, 312, 360, 215, 214, 113, 380, 211,
	57, 12, 133, 38, 110, 362, 53, 89, 45, 55,
	111, 21, 420, 421, 41, 379, 388, 454, 231, 126,
	313, 314, 60, 94, 368, 83, 43, 64, 90, 19,
	58, 112, 206, 425, 56, 366, 317, 319, 329, 451,
	318, 209, 401, 10, 308, 427, 30, 223, 54, 210,
	99, 213, 84, 230, 6, 88, 13, 61, 65, 422,
	423, 424, 46, 98, 16, 320, 458, 381, 382, 383,
	384, 385, 386, 387, 192, 193, 194, 195, 196, 272,
	218, 216, 220, 221, 500, 501, 197, 198, 298, 300,
	170, 200, 201, 202, 232, 148, 7, 347, 348, 349,
	352, 353, 354, 355, 356, 357, 358, 508, 23, -54,
	-360, 134, 135, -102, -267, -248, -245, -269, 122, 70,
	-255, 135, 458, 510, 71, 213, -382, -381, 360, 68,
	135, -318, 214, 425, 73, 511, -318, -128, 154, 153,
	-128, 83, 301, 84, 85, -288, -220, -217, -212, -210,
	-210, -215, 227, 93, -214, -213, -354, 100, -214, 34,
	135, 65, 134, 68, 68, 15, 15, 68, -214, -214,
	68, 15, 15, -214, 68, 134, 68, 68, 68, 65,
	68, 135, 68, 135, -214, 68, 68, -214, -214, -214,
	-220, 68, -214, -214, -214, -214, -214, -214, -214, 135,
	-214, -297, 345, 78, 78, -171, 73, -171, 78, 78,
	78, 135, 68, 73, 135, 22, 135, -93, 36, 37,
	-115, 215, -115, -376, 347, 35, -383, 135, 40, -381,
	-233, 65, -228, -229, -227, -231, 40, -115, 15, -85,
	-116, -190, 67, 68, 135, -214, -241, 65, -177, -115,
	-153, -153, -200, -191, -202, -197, -202, -198, 134, -176,
	-376, -383, 30, -159, -160, -161, -162, 53, 57, 59,
	54, 55, 56, 60, 30, 135, -394, 34, -186, -192,
	34, -187, 73, -188, -181, -86, -79, -81, -91, 67,
	-186, 67, 67, 143, 146, 146, 145, 213, 67, 103,
	-263, -263, -263, 40, -189, 64, 135, -153, -84, -86,
	-190, 73, -190, 122, -153, 39, 135, 67, 68, 135,
	46, 135, 103, 68, 135, 134, 376, -190, -330, 68,
	-269, 135, 213, 134, 134, -246, 327, -189, -248, 20,
	458, -169, 38, 73, 38, 68, -215, 93, -212, -209,
	68, 101, -214, 99, -119, -120, -126, 131, 167, 226,
	166, 165, 163, 343, 344, -135, -190, -214, -214, 68,
	68, -214, -214, 15, -190, -135, -210, -214, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	73, 68, 68, 68, 135, 68, 68, 68, 135, 68,
	135, -314, -321, 395, -214, -214, -95, -94, 43, -103,
	94, 67, -378, 397, 349, -182, 103, -207, -206, 304,
	41, -302, 369, 355, 356, -247, 240, 64, 293, 294,
	295, 296, -227, -175, 130, 251, 67, -115, -85, -190,
	15, 135, -372, 134, -1, -190, -240, -200, -153, -153,
	-200, -200, -202, -190, -378, -207, -252, -251, -169, -90,
	-90, -90, -90, 53, 53, 53, 58, 53, 58, 53,
	-161, -252, -92, -190, -192, 68, 68, -79, -388, -387,
	-386, -384, 61, 214, 62, 73, -169, -220, 146, -248,
	-203, 73, -254, -115, -115, -155, 17, 134, -155, 89,
	-221, -316, -315, 46, -78, -101, -308, -349, -314, -190,
	-183, -180, -188, -181, 78, 15, -245, -240, 122, 122,
	70, 328, -255, 73, 348, 73, 210, 103, 210, -209,
	-214, 68, 68, -289, -290, -289, -292, -289, -128, -128,
	68, 68, 23, 68, 68, 68, -214, 68, 68, 135,
	68, 73, 78, 78, -327, 386, 381, 383, 44, 45,
	34, 35, -110, -111, -112, -118, -113, -169, -205, -114,
	218, 216, 220, -345, 88, 221, 272, 89, 211, -379,
	77, -374, 73, -380, 77, 350, 133, 306, 40, 351,
	352, 366, 302, 78, 78, 357, -375, 70, -115, -182,
	-182, -182, -110, -104, 65, 134, -86, -116, -190, 122,
	68, -153, -153, -153, -200, -379, -380, -153, 135, 103,
	-108, -107, 64, 65, -109, 64, -107, 53, 53, -153,
	-103, 68, -386, -385, 23, -345, -345, -345, 68, 135,
	68, 135, 68, 68, -154, 18, 20, 122, -154, 13,
	68, -308, -240, -255, 369, -115, 73, -115, -214, 68,
	-214, 68, 68, -296, 502, -325, 381, 20, 20, -78,
	-115, 68, 135, -121, -114, -190, 89, -344, -345, -230,
	-344, 89, 67, 73, -377, 360, 73, 73, 78, 40,
	78, 133, 353, -303, 67, -135, -137, -189, 131, 73,
	68, -186, -86, -190, -153, -372, 134, -153, -98, -251,
	-314, -214, 67, -214, 67, 53, 19, 17, 73, 73,
	-214, -220, -348, -77, -319, -275, 512, 135, -77, 68,
	68, -142, 503, 73, 20, 73, -323, 73, -103, -133,
	-134, -150, 341, 242, -231, 246, 77, 247, 376, 248,
	211, 250, 251, 252, 222, 253, 254, 255, 369, 256,
	257, 258, 259, 324, 6, 289, -112, -132, -131, -129,
	83, 94, 40, 341, -130, 77, 130, 265, 243, 266,
	-149, -204, 64, 216, 88, 89, 329, -205, -340, -342,
	-190, -342, -190, -340, -340, -230, -214, 20, 458, 305,
	40, 78, 40, 354, -235, -237, -169, 67, -76, -75,
	-153, -153, -99, -102, -341, -190, 216, 20, 20, 68,
	135, 68, 135, -326, 386, -322, -320, 381, 382, 383,
	384, 73, -172, 504, 78, 73, 383, 34, -271, 232,
	135, -150, -182, -182, -175, 130, -182, -182, -182, -182,
	249, 249, -182, -182, -182, -182, -182, -182, -182, -182,
	-182, -182, -182, -182, -182, -182, 67, -129, 83, -210,
	73, -137, -138, 40, 264, 260, -139, 40, 244, 245,
	-141, 67, 272, 13, 89, 89, -115, 67, 65, 281,
	67, 67, 67, -342, 68, 73, 348, 73, 305, 68,
	135, -289, -214, -77, -98, 68, 68, 135, 84, 85,
	84, 85, -328, 214, -324, 385, -320, 20, 383, 20,
	20, 103, 67, 20, -78, 20, -150, 78, 78, -182,
	-182, 78, 73, 73, 73, -182, -182, 78, 73, -192,
	78, 78, 78, 78, 40, 73, -140, 40, 260, 264,
	261, 262, 263, 78, 40, 78, 40, 78, 40, -190,
	67, -346, -347, 73, 78, 67, -309, -236, 67, -235,
	-343, 293, 294, 295, 297, 296, -343, -235, -235, -235,
	67, -257, -256, 273, 94, 369, -238, -237, -93, 68,
	-99, -190, 216, 68, 68, 68, 68, -335, 67, 78,
	-325, 20, -323, 20, -323, -323, 73, -173, -190, -323,
	-272, 274, 275, -273, -279, 277, -135, -135, 73, 73,
	-136, 243, -117, 68, 135, 103, 68, -214, -222, -144,
	-143, 454, -235, 68, 68, 68, 68, -235, 273, -239,
	222, 77, 458, 291, 292, -93, -339, 30, 68, -334,
	-333, -170, -329, -190, 386, 387, 73, -323, 512, 135,
	68, 135, -277, 278, 67, -275, 67, -275, 89, 294,
	244, 245, 68, -347, 73, 68, -148, -146, -147, 64,
	393, 270, 271, 68, -238, -238, -238, -238, 68, -182,
	73, 290, -338, -337, -336, 68, 135, 134, 73, -190,
	-274, 279, 78, -210, 67, -210, 67, -276, 276, 67,
	-256, -147, 64, -146, 64, 14, 13, -149, 78, -188,
	135, 103, -333, -190, 103, -281, 67, 20, 68, -270,
	68, -270, 67, 103, -210, -145, 267, 268, 30, 145,
	-145, -337, 40, -214, 134, 73, -282, -280, 232, -273,
	68, 68, -270, 78, 68, 83, 40, 269, -190, 512,
	135, 68, 135, 70, -278, 280, 68, 73, -280, -283,
	46, 78, 103, -287, -284, 67, -150, 234, 113, 73,
	-287, -150, -286, -285, 279, 235, 67, 512, 68, 135,
	70, 231, 67, -220, -285, -284, -220, 68, 68,
}

var yyDef = [...]int{
	28, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 621, 622,
	623, 624, 0, 390, 391, 0, 370, 0, 0, 0,
	0, 0, 294, 295, 296, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 307, 265, 266, 0, 214,
	210, 189, 190, 191, 150, 151, 152, 153, 271, 0,
	0, 0, 0, 0, 0, 462, -2, 625, 626, 627,
	628, -2, 403, 0, 371, 372, 373, 374, 375, 376,
	377, 378, 254, 255, 256, 251, 252, 253, -2, 0,
	403, 203, 0, 194, 194, 0, 482, 0, 0, 496,
	518, 28, 440, 0, 445, 807, 843, 844, 845, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	215, 392, 393, 482, 482, 368, 0, 237, 0, 1438,
	241, 0, 0, 0, 365, 233, 234, 235, 236, 0,
	613, 0, 230, 0, 209, 1497, 0, 0, 0, 0,
	0, 0, 94, 667, 96, 669, 100, 107, 0, 0,
	112, 113, 116, 117, 118, 119, 120, 0, 124, 0,
	126, 129, 0, 131, 132, 0, 135, 136, 137, 0,
	147, 148, 149, 670, 671, 74, 74, 1195, 1093, 0,
	1100, 1101, 1112, 1121, 914, 915, 916, 917, 0, 0,
	0, 0, 0, 924, 925, 0, 939, 1584, 0, 932,
	933, 934, 935, 936, 37, 49, 50, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1066, 901, 843,
	0, 1592, 0, 1612, 1593, 1611, 0, 0, 1051, 0,
	1041, 0, -2, -2, 0, 0, 1564, 0, -2, 1589,
	1608, 1616, 1615, 1586, 1587, 1581, 1582, 1583, 1585, 1594,
	1596, 1607, 0, 1603, 1613, 1614, 0, 51, 52, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1578, 1579, 1057, -2, 1059, 1060, 1062, 1063, 1064,
	1065, -2, 1068, 1069, 1070, -2, -2, 1073, 1074, 1075,
	1076, 1077, 1078, 1081, -2, 1083, -2, 1085, 1053, 1054,
	1055, 1056, 1045, 1046, 1047, 1048, 1049, 1050, -2, -2,
	-2, 0, 187, 185, 482, 554, 0, -2, 0, 0,
	0, 501, 504, 507, 510, 631, 696, 696, 696, 0,
	696, 0, 717, 673, 674, 675, 694, 695, 408, 404,
	405, 406, 407, 470, 0, 472, 475, 348, 309, 0,
	348, 0, 0, 477, 477, 0, 357, 348, 348, -2,
	0, 319, 320, 321, 314, 0, 314, 325, 326, 327,
	337, 338, 358, 1219, 0, 0, 271, 271, 410, 204,
	205, 193, 195, 0, 199, 0, 192, 1497, 0, 0,
	161, 1564, 166, 0, 1445, 1511, 1460, 0, 0, 1478,
	0, -2, 477, 0, 483, 0, 482, 0, 271, 271,
	271, 271, 271, 271, 271, 0, 0, 0, 519, 520,
	515, 516, 517, 521, 522, 3, 0, 0, 444, 0,
	477, -2, 0, 369, 238, 846, 0, 0, 242, 243,
	0, 0, 257, 0, 260, 246, 247, 248, 0, 0,
	232, 0, 0, 211, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 104, 101, 108, 111, 121, 128,
	0, 140, 142, 145, 102, 109, 114, 115, 122, 143,
	103, 105, 106, 110, 144, 146, 123, 127, 141, 125,
	130, 133, 134, 139, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 1099, 0, 0, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1093, 0, -2, 0, -2, -2, -2, 926, 0,
	940, 0, 0, 0, 0, 1091, 1091, 0, 1091, 1087,
	1087, 0, 0, 1091, 1029, 0, 0, 1031, 1042, 0,
	0, 1034, 1035, 1091, 0, 1091, -2, 1040, 1025, 1026,
	0, 1087, 0, 0, 1087, 1087, 1087, 1087, 1087, 1087,
	1087, 1087, 1087, 1087, 1087, 0, 0, 1196, 1214, 1151,
	1152, 1153, 1201, 1155, 1205, 1205, 1201, 1201, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 0, 0, 1194,
	1174, 1203, 1203, 1203, 1201, 1198, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1208, 1208, 1211, 1208, 0, 477, 0, 0, 465, 0,
	446, 0, 498, 500, 0, 502, 503, 505, 506, 508,
	509, 511, 512, 0, 696, 632, 0, 0, 0, 0,
	0, 0, 696, 410, 409, 0, 471, 0, 0, 527,
	0, 0, 314, 527, 0, 331, 332, 333, 348, 348,
	339, 478, 340, 341, 350, 0, 355, 356, 0, 527,
	527, 0, 0, 0, 696, 316, 315, 353, 354, 323,
	316, 1220, 1221, 0, 0, 0, 411, 0, 0, 197,
	0, 202, 154, 0, 0, 0, 0, 0, 0, 183,
	184, 0, 0, 0, 0, 0, 174, 177, 801, 802,
	664, 665, 178, 179, 446, 497, 499, 494, 495, 0,
	0, 0, 0, 0, 0, 0, 389, 535, 529, 531,
	608, 37, 535, 419, 432, 414, 0, 421, 0, 808,
	446, 468, 446, 0, 239, 0, 244, 0, 0, 259,
	261, 262, 263, 249, 250, 366, 228, 229, 221, 222,
	223, 224, 225, 226, 227, 231, 47, 0, 212, 213,
	0, 0, 0, 88, 89, 90, 91, 92, 93, 95,
	79, 381, 383, 656, 668, 0, 659, 0, 98, 138,
	71, 0, 71, 1094, 929, 944, 956, 956, 1095, 1096,
	1097, 1098, 1102, 0, 1104, 1106, 1108, 1110, 0, 1126,
	-2, -2, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 1113, 1124, 1125, 0, 0, 0,
	0, 0, -2, 1117, 1121, 918, 0, 937, 941, 0,
	0, 0, 38, 1086, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 0, 1092, 0, 1093, 0, 0, 0,
	1088, 1089, 0, 0, 0, 991, 992, 993, 0, 427,
	0, 1052, 1030, 1043, 0, 0, 0, 1121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 1217, 1215,
	1216, 1154, 1202, 0, 1179, 0, 1180, 1181, 1182, 0,
	0, 1175, 0, 1176, 1177, 1178, 1170, 0, 1171, 1172,
	0, 1173, 186, 553, 555, 0, 436, 438, 439, 0,
	466, 479, 484, 485, 488, 0, 0, 0, 634, 0,
	269, 650, 0, 666, 688, 618, 619, 620, -2, 0,
	0, 473, 0, 0, 567, 308, 0, -2, 311, 316,
	318, 0, 527, 527, 348, 0, 350, 0, 350, 344,
	345, 0, 359, 362, 360, 0, 322, 317, 364, 324,
	0, 269, 540, 0, 541, 542, 538, 569, 583, 603,
	0, 603, 0, 0, 206, 207, 0, 0, 201, 155,
	156, 0, 158, 159, 160, 167, 162, 164, 0, 0,
	168, 180, 181, 182, 0, 0, 0, 172, 173, 0,
	464, 379, 380, 384, 0, 386, 805, 387, 388, 614,
	615, 527, 0, 536, 0, 532, 609, 0, 611, 0,
	527, 412, 0, 413, 429, 0, 433, 0, 0, 425,
	418, 422, 0, 0, 442, 467, 469, 847, 0, 1226,
	-2, 1228, -2, -2, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 0, 245,
	258, 0, 0, 0, 0, 82, 653, 0, 83, 87,
	77, 0, 0, 0, 658, 0, 655, 660, 0, 97,
	0, 0, 72, 73, 710, 0, 0, 945, 957, 958,
	946, 1103, 1105, 1107, 1109, 1111, 0, 1114, -2, 1118,
	1121, 1115, 0, 0, 1094, 0, 942, 0, 0, 0,
	0, 0, 0, 977, 978, 0, 0, 982, 0, 0,
	985, 0, 0, 0, 989, 0, 1028, 1044, 1032, 0,
	1036, 0, 1038, 0, 0, 960, 961, 0, 0, 0,
	0, 966, 0, 0, 0, 0, 0, 0, 0, 0,
	1197, 1150, 1218, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 556, 448, 0, 0, 0, 491, 489, 490,
	475, 0, 0, 640, 1222, 697, 273, 0, 0, 652,
	0, 0, 693, -2, 700, 0, 706, 0, 0, 0,
	397, 401, 28, 476, 0, 528, 310, 0, 348, 527,
	334, 335, 527, 351, 348, 352, 348, 350, 0, 361,
	640, 273, 0, 0, 0, 0, 0, 560, 0, 0,
	559, 0, 0, 0, 0, 0, 0, 584, 571, 604,
	0, 606, 607, 616, 617, 0, 0, 482, 540, 0,
	586, 0, 0, 208, 196, 198, 0, 0, 0, 0,
	169, 170, 171, 175, 176, 0, 0, 525, 530, 537,
	610, 612, 38, 533, 525, 0, 432, 434, 0, 0,
	432, 0, 0, 441, 0, 0, 0, 367, 48, 264,
	0, 0, 0, 0, 0, 382, 0, 657, 79, 0,
	0, 99, 0, 0, 0, 1090, 1116, 0, -2, -2,
	919, 927, 938, 0, 0, 0, 947, 1201, 1205, 950,
	1201, 1203, 1201, 956, 956, 0, 39, 0, 0, 983,
	984, 0, 0, 0, 428, 0, 1121, 0, 959, 962,
	963, 964, 965, 967, 968, 969, 970, 971, 972, 973,
	0, 1207, 1206, 1192, 0, 1193, 1204, 1209, 0, 1212,
	0, 437, 452, 0, 480, 481, 486, 487, 0, 0,
	0, 809, 643, 641, 642, 0, 1223, 647, 274, 275,
	276, 277, 0, 0, 0, 651, 0, 0, 689, 690,
	691, 692, 701, 1222, 1222, 1222, 809, 440, 0, -2,
	0, 0, 399, 0, 0, 568, 312, 527, 328, 342,
	527, 527, 348, 363, 643, 647, 527, 218, 0, 563,
	557, 0, 546, 561, 562, 549, 0, 551, 0, 547,
	548, 527, 539, 475, 605, 572, 573, 0, 585, 587,
	588, 594, 0, 0, 0, 0, 0, 0, 200, 157,
	0, 293, 163, 385, 806, 523, 0, 0, 523, 0,
	430, 0, 435, 432, 417, 426, 416, 423, 424, 443,
	848, 1227, 1224, 1225, 240, 0, 654, 79, 84, 85,
	86, 80, 78, 661, 0, 663, 0, 0, 0, -2,
	943, 928, 930, 948, 949, 951, 952, 953, 954, 955,
	931, 979, 0, 981, 986, 987, 0, 1033, 1037, 0,
	990, 1200, 0, 0, 454, 60, 0, 0, 492, 493,
	0, 0, 0, 810, 811, 813, 814, 0, 0, 816,
	871, 0, 825, 696, 825, 0, 0, 827, 828, 633,
	0, 0, 636, 645, 0, 0, 0, 279, 280, 0,
	0, 0, 292, 288, 289, 290, 270, 646, 0, 0,
	0, 0, 0, 603, 0, 0, 527, 398, 401, 402,
	474, 313, 346, 343, 527, 267, 268, 482, 0, 0,
	543, 564, 0, 0, 544, 0, 545, 550, 552, 217,
	570, -2, 589, 0, 0, 591, 592, 593, 574, 0,
	578, 0, 582, 165, 513, 0, 0, 534, 514, 421,
	431, 415, 81, 76, 662, 62, 0, 62, 0, 988,
	0, 1210, 1213, 456, 0, 453, 0, 0, 0, 629,
	475, -2, 0, -2, 815, 872, 837, 837, 826, 837,
	837, 696, 0, 644, 635, 0, 648, 649, 0, 281,
	282, 0, 285, 291, 0, 702, 703, 803, 804, 704,
	0, 527, 527, -2, 395, 400, 0, 347, 477, 219,
	220, 565, 0, 558, 598, 595, 0, 0, 0, 0,
	524, 526, 420, 30, 56, 0, 711, 0, 29, 980,
	1027, 458, 0, 455, 0, 449, 451, 70, 0, 718,
	-2, 757, 1222, 1222, 0, 1222, 1222, 1222, 1222, 0,
	0, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 0, 812, 839, -2, 851,
	853, 0, 0, 856, 857, 0, 0, 0, 0, 893,
	863, 0, 0, 0, 1138, 1139, 0, 870, 0, 829,
	838, 0, 838, 0, 0, 837, 0, 0, 0, 278,
	283, 0, 286, 287, 0, 684, 1201, 0, 708, 62,
	482, 396, 216, 0, 0, 599, 601, 596, 597, 575,
	0, 579, 0, 53, 58, 63, 64, 0, 0, 0,
	0, 0, 447, 0, 457, 61, 0, 0, 707, 0,
	705, 759, 0, 0, 1222, 1222, 0, 0, 0, 0,
	1222, 1222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 852, 854, -2,
	858, 859, 860, 898, 899, 900, 861, 895, 896, 897,
	862, 0, 0, 0, 1136, 1137, 891, 0, 0, 0,
	0, 0, 0, 0, 823, 637, 0, 639, 284, 677,
	0, 488, 0, 709, 477, 566, 590, 0, 0, 0,
	0, 0, 40, 0, 60, 0, 65, 0, 0, 0,
	0, 0, 0, 0, 630, 753, 758, 760, 761, 0,
	0, 764, 765, 766, 767, 0, 0, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 795, 796, 797,
	798, 799, 800, 780, 781, 782, 783, 784, 785, 792,
	0, 0, 789, 0, 0, 0, 1041, 886, 0, 0,
	830, 832, 833, 834, 835, 836, 831, 0, 0, 0,
	0, 822, 824, 867, 0, 638, 676, 685, 686, 488,
	394, 600, 602, 576, 577, 580, 581, 31, 0, 0,
	57, 0, 66, 0, 68, 69, 0, 0, 460, 450,
	742, 0, 0, 748, 0, 754, 762, 763, 768, 769,
	786, 0, 0, 788, 0, 0, 894, 0, 866, 874,
	887, 0, 0, 677, 677, 677, 677, 0, 868, 678,
	1222, 0, 0, 682, 683, 687, 715, 0, 41, 0,
	43, 45, 46, 840, 54, 55, 59, 67, 712, 0,
	459, 0, 720, 0, 0, 0, 0, 0, 751, 0,
	793, 794, 787, 790, 791, 864, 873, 875, 876, 0,
	888, 889, 890, 892, 817, 818, 819, 820, 0, 0,
	680, 0, 32, 33, 0, 42, 0, 0, 0, 461,
	722, 0, 743, 1121, 0, 1121, 0, 0, 0, 0,
	865, 877, 0, 878, 0, 0, 0, 821, 679, 681,
	0, 0, 44, 841, 0, 719, 0, 753, 744, 0,
	746, 0, 0, 0, 1121, 879, 881, 882, 0, 0,
	880, 34, 35, 36, 0, 0, 0, 724, 0, 740,
	745, 747, 0, 752, 750, 883, 885, 884, 842, 713,
	0, 723, 0, 736, 721, 0, 749, 0, 725, -2,
	0, 741, 0, 726, -2, 0, 734, 0, 0, 0,
	727, 735, 0, 730, 0, 0, 0, 714, 729, 0,
	-2, 737, 0, 0, 731, -2, 0, 739, 738,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 125, 117, 3,
	67, 68, 122, 120, 135, 121, 134, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 509,
	104, 103, 105, 3, 510, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 511, 116, 512, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 118, 119,
	124, 126, 129, 130, 131, 132, 133, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:580
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:586
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:617
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:621
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:627
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:639
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:650
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:654
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:660
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:664
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:670
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:677
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:686
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:690
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:694
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:699
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:707
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:713
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:722
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:733
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:737
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:743
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:747
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:753
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:757
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:763
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:787
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:806
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:810
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:814
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:819
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:823
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:831
		{
			yyVAL.str = ""
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:835
		{
			yyVAL.str = yyDollar[3].str
		}
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:840
		{
			yyVAL.str = "\n"
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:844
		{
			yyVAL.str = yyDollar[3].str
		}
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:853
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:877
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:881
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:887
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:893
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:911
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:928
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:951
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:959
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:964
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:968
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:987
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:998
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1015
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1025
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1038
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1051
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1057
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1063
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1070
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1078
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1087
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1091
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1095
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1099
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1103
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1107
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1114
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1118
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1124
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1131
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1140
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1144
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1150
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1154
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1158
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1162
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1166
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1170
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1174
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1178
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1182
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1186
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1190
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1194
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1198
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1202
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1206
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1210
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1214
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1218
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1222
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1226
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1230
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1234
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1238
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1242
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1246
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1250
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1254
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1258
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1262
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1266
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1270
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1274
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1302
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1306
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1310
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1314
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1318
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1322
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1326
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1330
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1334
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1338
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1342
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1346
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1358
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1365
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1372
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1381
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1411
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1415
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1419
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1425
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1431
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1435
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1442
		{
			yyVAL.str = yyDollar[3].str
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1448
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1452
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1458
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1475
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1483
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1491
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1514
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1537
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1551
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1559
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1582
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1586
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1590
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1596
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1600
		{
			yyVAL.str = yyDollar[1].str
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1607
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1613
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1617
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1628
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1634
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1677
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1681
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1685
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1689
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1694
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1699
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1705
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1712
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1718
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1725
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1732
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1742
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1749
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1760
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1775
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1781
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1793
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1819
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1834
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1838
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1842
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1846
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1854
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1862
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1870
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1918
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1922
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1928
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1934
		{
			yyVAL.str = yyDollar[1].str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1939
		{
			yyVAL.str = "true"
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1940
		{
			yyVAL.str = "false"
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1941
		{
			yyVAL.str = yyDollar[1].str
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1946
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1969
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1984
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1989
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1993
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2002
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2018
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2022
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2026
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2030
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2034
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2038
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2046
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2054
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2058
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2062
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2066
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2070
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2078
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2084
		{
			yyVAL.item = nil
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2089
		{
			yyVAL.item = nil
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2114
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2119
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2123
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2132
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2143
		{
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2147
		{
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2152
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2161
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2165
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2169
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2173
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2177
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2181
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2189
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2199
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2207
		{
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2209
		{
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2218
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2237
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2241
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2245
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2251
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2263
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2279
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2313
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2330
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2335
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2339
		{
			yyVAL.str = yyDollar[2].str
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2345
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2358
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2362
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2368
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2373
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2377
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2383
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2387
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2396
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2400
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2410
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2433
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2442
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2451
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2455
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2461
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2470
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2495
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2501
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2507
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2515
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2527
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2543
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2556
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2567
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2571
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2577
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2582
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2589
		{
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2591
		{
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2594
		{
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2603
		{
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2607
		{
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2612
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2622
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2635
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2643
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2650
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2657
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2680
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2699
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2703
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2707
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2713
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2722
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2726
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2732
		{
			yyVAL.str = yyDollar[1].str
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2736
		{
			yyVAL.str = yyDollar[3].str
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2742
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2746
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2752
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2757
		{
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2761
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2768
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2772
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2779
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2784
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2788
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2794
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2798
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2804
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2808
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2817
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2830
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2837
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2844
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2862
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2881
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2894
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2898
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2911
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2915
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2920
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2924
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2931
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2936
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2953
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2957
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2961
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2965
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2975
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2982
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2991
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2995
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3001
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3013
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3022
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3028
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3032
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3036
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3045
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3051
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3057
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3061
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3067
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3072
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3076
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3080
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3085
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3089
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3093
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3103
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3109
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3113
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3133
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3143
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3155
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3188
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3196
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3204
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3212
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3236
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3244
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3254
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3265
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3283
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3287
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3291
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3304
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3313
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3322
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3328
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3332
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3338
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3342
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3346
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3350
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3355
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3363
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3369
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3377
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3385
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3395
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3401
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3410
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3419
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3428
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3438
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3442
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3452
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3456
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3460
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3464
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3470
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3480
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3484
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3490
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3500
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3506
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3512
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3516
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3520
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3526
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3530
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3536
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3540
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3546
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3550
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3556
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3560
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3570
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3583
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3589
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3595
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3613
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3634
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3655
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3676
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3694
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3715
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3736
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3757
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3770
		{
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3771
		{
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3775
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3793
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3797
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3803
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3813
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3817
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3821
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3826
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3830
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3834
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3838
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3847
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3851
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3855
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3859
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3864
		{
			yyVAL.str = ""
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3868
		{
			yyVAL.str = yyDollar[1].str
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3872
		{
			yyVAL.str = yyDollar[2].str
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3881
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3885
		{
			yyVAL.str = yyDollar[1].str
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3889
		{
			yyVAL.str = yyDollar[2].str
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3893
		{
			yyVAL.str = yyDollar[1].str
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3897
		{
			yyVAL.str = yyDollar[2].str
		}
	case 629:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3931
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3941
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3952
		{
		}
	case 633:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3957
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3969
		{
			yyVAL.str = yyDollar[1].str
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3975
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3985
		{
			yyVAL.str = yyDollar[1].str
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3991
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3998
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4004
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4012
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4018
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4025
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4033
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4039
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4048
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4060
		{
			yyVAL.str = yyDollar[1].str
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4065
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4071
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4079
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4185
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4189
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4195
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4205
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4209
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4215
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4225
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4229
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4233
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4242
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4248
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4255
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4261
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4274
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4283
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4287
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4310
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4314
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4318
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4322
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4328
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4351
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4373
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4377
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4381
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4385
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4389
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4395
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4399
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4405
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4410
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4415
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4419
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4423
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4427
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4431
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4437
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4451
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4455
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4460
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4464
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4470
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4474
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4480
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4484
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4488
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4493
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4497
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4503
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4514
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4525
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4532
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4540
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4552
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4564
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "format" || strings.ToLower(yyDollar[11].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       strings.ToLower(yyDollar[9].str),
				JsonData:     strings.ToLower(yyDollar[13].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-18 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4577
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" || strings.ToLower(yyDollar[11].str) != "format" || strings.ToLower(yyDollar[15].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str, yyDollar[15].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       strings.ToLower(yyDollar[13].str),
				JsonData:     strings.ToLower(yyDollar[17].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4592
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4603
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4607
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4616
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4626
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4630
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4643
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4649
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4653
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4659
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4668
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4682
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4688
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4692
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4698
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4705
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4714
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4718
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4727
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4732
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4736
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4741
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4745
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4755
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4759
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4770
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4778
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4786
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4794
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4805
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4815
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4825
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4829
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4834
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4838
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4847
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4853
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4857
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4861
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4867
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4871
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4875
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4879
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4883
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4887
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4891
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4895
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4899
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4903
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4907
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4911
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4915
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4919
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4923
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4927
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4931
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4935
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4939
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4943
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4947
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4951
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4955
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4959
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4963
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4967
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4971
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4975
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4979
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4986
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4990
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4996
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5001
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5005
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5009
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5015
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5035
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5049
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5053
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5062
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5067
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5073
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5080
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5084
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5090
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5094
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5100
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5110
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5116
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5125
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5134
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5157
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5166
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5176
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5184
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5190
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5194
		{
			yyVAL.str = yyDollar[1].str
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5204
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5210
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5216
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5230
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5237
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5243
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5247
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5251
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5262
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5266
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5270
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5279
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5285
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5289
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5295
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5299
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5303
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5307
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5311
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5315
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5319
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5323
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5327
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5331
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5335
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5339
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5343
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5347
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5362
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5366
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5371
		{
			yyVAL.str = ""
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5375
		{
			yyVAL.str = yyDollar[1].str
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5381
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5385
		{
			yyVAL.str = yyDollar[2].str
		}
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5391
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5403
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5410
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5417
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5424
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5431
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5440
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5446
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5452
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5456
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5460
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5464
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5468
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5473
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5480
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5488
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5497
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5502
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5506
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5522
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5528
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5532
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5536
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5540
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5544
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5548
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5552
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5556
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5560
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5564
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5568
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5572
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5576
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5582
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5586
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5590
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5594
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5598
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5602
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5606
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5610
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5614
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5618
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5622
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5626
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5631
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5639
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5643
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[1].exprUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5647
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5651
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5660
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5664
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5668
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5672
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5676
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5685
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5694
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5700
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5704
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5710
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5720
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5737
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5754
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5767
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5780
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5792
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5806
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5821
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5836
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5853
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5868
		{
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5874
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5883
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5891
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5899
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5908
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5917
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5926
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5935
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5944
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5953
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5962
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5971
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5980
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5989
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5998
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6014
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6022
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6030
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6038
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6046
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6055
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6063
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6072
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6081
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6089
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6097
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6106
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6115
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6126
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6147
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6183
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6195
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6207
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6217
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6225
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6232
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6239
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6251
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6259
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6270
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6279
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6288
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6296
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6306
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6314
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6322
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6332
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6336
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6342
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6346
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6365
		{
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6367
		{
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6408
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6418
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6422
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6426
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6432
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6437
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6441
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6447
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6451
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6458
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6462
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6466
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6474
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6478
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6482
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6486
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6492
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6496
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6500
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6504
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6508
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6512
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6516
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6520
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6524
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6528
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6536
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6540
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6544
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6548
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6552
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6556
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6560
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6564
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6570
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6574
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6580
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6584
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6591
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6595
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6599
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6605
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6609
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6613
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6617
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6621
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6625
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6629
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6635
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6639
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6643
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6647
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6653
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6657
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6670
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6675
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6679
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6683
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6687
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6691
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6695
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6709
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6715
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6726
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6731
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6737
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6749
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6761
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6773
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6786
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6799
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6812
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6825
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6838
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6851
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6864
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6877
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6890
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6903
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6918
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6941
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6975
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7023
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7040
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7052
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7072
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7092
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7112
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7128
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7141
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7154
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7167
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7180
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7192
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7204
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7216
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7228
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7240
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7252
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7264
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7276
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7288
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7301
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7314
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7329
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7337
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7346
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7356
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7379
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7384
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7390
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7397
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7401
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7406
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7410
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7416
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7422
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7429
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7436
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7445
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7452
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7459
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7468
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7472
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7476
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7482
		{
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7484
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7494
		{
			yyVAL.str = ""
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7498
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

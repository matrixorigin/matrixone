// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const OUT = 57462
const INOUT = 57463
const BEGIN = 57464
const START = 57465
const TRANSACTION = 57466
const COMMIT = 57467
const ROLLBACK = 57468
const WORK = 57469
const CONSISTENT = 57470
const SNAPSHOT = 57471
const CHAIN = 57472
const NO = 57473
const RELEASE = 57474
const PRIORITY = 57475
const QUICK = 57476
const BIT = 57477
const TINYINT = 57478
const SMALLINT = 57479
const MEDIUMINT = 57480
const INT = 57481
const INTEGER = 57482
const BIGINT = 57483
const INTNUM = 57484
const REAL = 57485
const DOUBLE = 57486
const FLOAT_TYPE = 57487
const DECIMAL = 57488
const NUMERIC = 57489
const DECIMAL_VALUE = 57490
const TIME = 57491
const TIMESTAMP = 57492
const DATETIME = 57493
const YEAR = 57494
const CHAR = 57495
const VARCHAR = 57496
const BOOL = 57497
const CHARACTER = 57498
const VARBINARY = 57499
const NCHAR = 57500
const TEXT = 57501
const TINYTEXT = 57502
const MEDIUMTEXT = 57503
const LONGTEXT = 57504
const BLOB = 57505
const TINYBLOB = 57506
const MEDIUMBLOB = 57507
const LONGBLOB = 57508
const JSON = 57509
const ENUM = 57510
const UUID = 57511
const GEOMETRY = 57512
const POINT = 57513
const LINESTRING = 57514
const POLYGON = 57515
const GEOMETRYCOLLECTION = 57516
const MULTIPOINT = 57517
const MULTILINESTRING = 57518
const MULTIPOLYGON = 57519
const INT1 = 57520
const INT2 = 57521
const INT3 = 57522
const INT4 = 57523
const INT8 = 57524
const S3OPTION = 57525
const SQL_SMALL_RESULT = 57526
const SQL_BIG_RESULT = 57527
const SQL_BUFFER_RESULT = 57528
const LOW_PRIORITY = 57529
const HIGH_PRIORITY = 57530
const DELAYED = 57531
const CREATE = 57532
const ALTER = 57533
const DROP = 57534
const RENAME = 57535
const ANALYZE = 57536
const ADD = 57537
const RETURNS = 57538
const SCHEMA = 57539
const TABLE = 57540
const SEQUENCE = 57541
const INDEX = 57542
const VIEW = 57543
const TO = 57544
const IGNORE = 57545
const IF = 57546
const PRIMARY = 57547
const COLUMN = 57548
const CONSTRAINT = 57549
const SPATIAL = 57550
const FULLTEXT = 57551
const FOREIGN = 57552
const KEY_BLOCK_SIZE = 57553
const SHOW = 57554
const DESCRIBE = 57555
const EXPLAIN = 57556
const DATE = 57557
const ESCAPE = 57558
const REPAIR = 57559
const OPTIMIZE = 57560
const TRUNCATE = 57561
const MAXVALUE = 57562
const PARTITION = 57563
const REORGANIZE = 57564
const LESS = 57565
const THAN = 57566
const PROCEDURE = 57567
const TRIGGER = 57568
const STATUS = 57569
const VARIABLES = 57570
const ROLE = 57571
const PROXY = 57572
const AVG_ROW_LENGTH = 57573
const STORAGE = 57574
const DISK = 57575
const MEMORY = 57576
const CHECKSUM = 57577
const COMPRESSION = 57578
const DATA = 57579
const DIRECTORY = 57580
const DELAY_KEY_WRITE = 57581
const ENCRYPTION = 57582
const ENGINE = 57583
const MAX_ROWS = 57584
const MIN_ROWS = 57585
const PACK_KEYS = 57586
const ROW_FORMAT = 57587
const STATS_AUTO_RECALC = 57588
const STATS_PERSISTENT = 57589
const STATS_SAMPLE_PAGES = 57590
const DYNAMIC = 57591
const COMPRESSED = 57592
const REDUNDANT = 57593
const COMPACT = 57594
const FIXED = 57595
const COLUMN_FORMAT = 57596
const AUTO_RANDOM = 57597
const RESTRICT = 57598
const CASCADE = 57599
const ACTION = 57600
const PARTIAL = 57601
const SIMPLE = 57602
const CHECK = 57603
const ENFORCED = 57604
const RANGE = 57605
const LIST = 57606
const ALGORITHM = 57607
const LINEAR = 57608
const PARTITIONS = 57609
const SUBPARTITION = 57610
const SUBPARTITIONS = 57611
const CLUSTER = 57612
const TYPE = 57613
const ANY = 57614
const SOME = 57615
const EXTERNAL = 57616
const LOCALFILE = 57617
const URL = 57618
const PREPARE = 57619
const DEALLOCATE = 57620
const RESET = 57621
const EXTENSION = 57622
const INCREMENT = 57623
const CYCLE = 57624
const MINVALUE = 57625
const PUBLICATION = 57626
const SUBSCRIPTIONS = 57627
const PUBLICATIONS = 57628
const PROPERTIES = 57629
const PARSER = 57630
const VISIBLE = 57631
const INVISIBLE = 57632
const BTREE = 57633
const HASH = 57634
const RTREE = 57635
const BSI = 57636
const ZONEMAP = 57637
const LEADING = 57638
const BOTH = 57639
const TRAILING = 57640
const UNKNOWN = 57641
const EXPIRE = 57642
const ACCOUNT = 57643
const ACCOUNTS = 57644
const UNLOCK = 57645
const DAY = 57646
const NEVER = 57647
const PUMP = 57648
const MYSQL_COMPATBILITY_MODE = 57649
const SECOND = 57650
const ASCII = 57651
const COALESCE = 57652
const COLLATION = 57653
const HOUR = 57654
const MICROSECOND = 57655
const MINUTE = 57656
const MONTH = 57657
const QUARTER = 57658
const REPEAT = 57659
const REVERSE = 57660
const ROW_COUNT = 57661
const WEEK = 57662
const REVOKE = 57663
const FUNCTION = 57664
const PRIVILEGES = 57665
const TABLESPACE = 57666
const EXECUTE = 57667
const SUPER = 57668
const GRANT = 57669
const OPTION = 57670
const REFERENCES = 57671
const REPLICATION = 57672
const SLAVE = 57673
const CLIENT = 57674
const USAGE = 57675
const RELOAD = 57676
const FILE = 57677
const TEMPORARY = 57678
const ROUTINE = 57679
const EVENT = 57680
const SHUTDOWN = 57681
const NULLX = 57682
const AUTO_INCREMENT = 57683
const APPROXNUM = 57684
const SIGNED = 57685
const UNSIGNED = 57686
const ZEROFILL = 57687
const ENGINES = 57688
const LOW_CARDINALITY = 57689
const ADMIN_NAME = 57690
const RANDOM = 57691
const SUSPEND = 57692
const ATTRIBUTE = 57693
const HISTORY = 57694
const REUSE = 57695
const CURRENT = 57696
const OPTIONAL = 57697
const FAILED_LOGIN_ATTEMPTS = 57698
const PASSWORD_LOCK_TIME = 57699
const UNBOUNDED = 57700
const SECONDARY = 57701
const USER = 57702
const IDENTIFIED = 57703
const CIPHER = 57704
const ISSUER = 57705
const X509 = 57706
const SUBJECT = 57707
const SAN = 57708
const REQUIRE = 57709
const SSL = 57710
const NONE = 57711
const PASSWORD = 57712
const MAX_QUERIES_PER_HOUR = 57713
const MAX_UPDATES_PER_HOUR = 57714
const MAX_CONNECTIONS_PER_HOUR = 57715
const MAX_USER_CONNECTIONS = 57716
const FORMAT = 57717
const VERBOSE = 57718
const CONNECTION = 57719
const TRIGGERS = 57720
const PROFILES = 57721
const LOAD = 57722
const INFILE = 57723
const TERMINATED = 57724
const OPTIONALLY = 57725
const ENCLOSED = 57726
const ESCAPED = 57727
const STARTING = 57728
const LINES = 57729
const ROWS = 57730
const IMPORT = 57731
const MODUMP = 57732
const OVER = 57733
const PRECEDING = 57734
const FOLLOWING = 57735
const GROUPS = 57736
const DATABASES = 57737
const TABLES = 57738
const SEQUENCES = 57739
const EXTENDED = 57740
const FULL = 57741
const PROCESSLIST = 57742
const FIELDS = 57743
const COLUMNS = 57744
const OPEN = 57745
const ERRORS = 57746
const WARNINGS = 57747
const INDEXES = 57748
const SCHEMAS = 57749
const NODE = 57750
const LOCKS = 57751
const TABLE_NUMBER = 57752
const COLUMN_NUMBER = 57753
const TABLE_VALUES = 57754
const TABLE_SIZE = 57755
const NAMES = 57756
const GLOBAL = 57757
const SESSION = 57758
const ISOLATION = 57759
const LEVEL = 57760
const READ = 57761
const WRITE = 57762
const ONLY = 57763
const REPEATABLE = 57764
const COMMITTED = 57765
const UNCOMMITTED = 57766
const SERIALIZABLE = 57767
const LOCAL = 57768
const EVENTS = 57769
const PLUGINS = 57770
const CURRENT_TIMESTAMP = 57771
const DATABASE = 57772
const CURRENT_TIME = 57773
const LOCALTIME = 57774
const LOCALTIMESTAMP = 57775
const UTC_DATE = 57776
const UTC_TIME = 57777
const UTC_TIMESTAMP = 57778
const REPLACE = 57779
const CONVERT = 57780
const SEPARATOR = 57781
const TIMESTAMPDIFF = 57782
const CURRENT_DATE = 57783
const CURRENT_USER = 57784
const CURRENT_ROLE = 57785
const SECOND_MICROSECOND = 57786
const MINUTE_MICROSECOND = 57787
const MINUTE_SECOND = 57788
const HOUR_MICROSECOND = 57789
const HOUR_SECOND = 57790
const HOUR_MINUTE = 57791
const DAY_MICROSECOND = 57792
const DAY_SECOND = 57793
const DAY_MINUTE = 57794
const DAY_HOUR = 57795
const YEAR_MONTH = 57796
const SQL_TSI_HOUR = 57797
const SQL_TSI_DAY = 57798
const SQL_TSI_WEEK = 57799
const SQL_TSI_MONTH = 57800
const SQL_TSI_QUARTER = 57801
const SQL_TSI_YEAR = 57802
const SQL_TSI_SECOND = 57803
const SQL_TSI_MINUTE = 57804
const RECURSIVE = 57805
const CONFIG = 57806
const DRAINER = 57807
const MATCH = 57808
const AGAINST = 57809
const BOOLEAN = 57810
const LANGUAGE = 57811
const WITH = 57812
const QUERY = 57813
const EXPANSION = 57814
const ADDDATE = 57815
const BIT_AND = 57816
const BIT_OR = 57817
const BIT_XOR = 57818
const CAST = 57819
const COUNT = 57820
const APPROX_COUNT_DISTINCT = 57821
const APPROX_PERCENTILE = 57822
const CURDATE = 57823
const CURTIME = 57824
const DATE_ADD = 57825
const DATE_SUB = 57826
const EXTRACT = 57827
const GROUP_CONCAT = 57828
const MAX = 57829
const MID = 57830
const MIN = 57831
const NOW = 57832
const POSITION = 57833
const SESSION_USER = 57834
const STD = 57835
const STDDEV = 57836
const MEDIAN = 57837
const STDDEV_POP = 57838
const STDDEV_SAMP = 57839
const SUBDATE = 57840
const SUBSTR = 57841
const SUBSTRING = 57842
const SUM = 57843
const SYSDATE = 57844
const SYSTEM_USER = 57845
const TRANSLATE = 57846
const TRIM = 57847
const VARIANCE = 57848
const VAR_POP = 57849
const VAR_SAMP = 57850
const AVG = 57851
const RANK = 57852
const NEXTVAL = 57853
const SETVAL = 57854
const CURRVAL = 57855
const LASTVAL = 57856
const ARROW = 57857
const ROW = 57858
const OUTFILE = 57859
const HEADER = 57860
const MAX_FILE_SIZE = 57861
const FORCE_QUOTE = 57862
const PARALLEL = 57863
const UNUSED = 57864
const BINDINGS = 57865
const DO = 57866
const DECLARE = 57867
const CALL = 57868
const KILL = 57869
const QUERY_RESULT = 57870

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"CALL",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9065

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 103,
	21, 578,
	-2, 559,
	-1, 113,
	217, 795,
	-2, 866,
	-1, 135,
	42, 400,
	217, 400,
	244, 407,
	245, 407,
	423, 400,
	-2, 433,
	-1, 463,
	293, 93,
	398, 93,
	-2, 1436,
	-1, 526,
	67, 1242,
	-2, 1576,
	-1, 527,
	67, 1260,
	-2, 1547,
	-1, 531,
	67, 1261,
	-2, 1575,
	-1, 554,
	67, 1174,
	-2, 1635,
	-1, 555,
	67, 1175,
	-2, 1634,
	-1, 556,
	67, 1176,
	-2, 1624,
	-1, 557,
	67, 1599,
	-2, 1619,
	-1, 558,
	67, 1600,
	-2, 1620,
	-1, 559,
	67, 1601,
	-2, 1626,
	-1, 560,
	67, 1602,
	-2, 1609,
	-1, 561,
	67, 1603,
	-2, 1617,
	-1, 562,
	67, 1604,
	-2, 1627,
	-1, 563,
	67, 1605,
	-2, 1628,
	-1, 564,
	67, 1606,
	-2, 1633,
	-1, 565,
	67, 1607,
	-2, 1638,
	-1, 566,
	67, 1608,
	-2, 1639,
	-1, 568,
	67, 1239,
	-2, 1428,
	-1, 575,
	67, 1248,
	-2, 1454,
	-1, 579,
	67, 1252,
	-2, 1493,
	-1, 580,
	67, 1253,
	-2, 1571,
	-1, 588,
	67, 1263,
	-2, 1556,
	-1, 590,
	67, 1265,
	-2, 1566,
	-1, 591,
	67, 1266,
	-2, 1590,
	-1, 602,
	67, 1152,
	-2, 1629,
	-1, 603,
	67, 1153,
	-2, 1630,
	-1, 604,
	67, 1154,
	-2, 1631,
	-1, 611,
	21, 579,
	-2, 542,
	-1, 671,
	418, 433,
	419, 433,
	-2, 401,
	-1, 720,
	104, 1428,
	115, 1428,
	135, 1428,
	-2, 1403,
	-1, 761,
	21, 579,
	-2, 542,
	-1, 860,
	21, 578,
	-2, 1057,
	-1, 1208,
	67, 1310,
	-2, 1573,
	-1, 1209,
	67, 1311,
	-2, 1574,
	-1, 1363,
	68, 720,
	-2, 726,
	-1, 1423,
	1, 308,
	68, 308,
	546, 308,
	-2, 830,
	-1, 1675,
	68, 1389,
	136, 1389,
	-2, 1558,
	-1, 1676,
	68, 1389,
	136, 1389,
	-2, 1557,
	-1, 1677,
	68, 1367,
	136, 1367,
	-2, 1544,
	-1, 1678,
	68, 1368,
	136, 1368,
	-2, 1549,
	-1, 1679,
	68, 1369,
	136, 1369,
	-2, 1481,
	-1, 1680,
	68, 1370,
	136, 1370,
	-2, 1475,
	-1, 1681,
	68, 1371,
	136, 1371,
	-2, 1419,
	-1, 1682,
	68, 1372,
	136, 1372,
	-2, 1546,
	-1, 1683,
	68, 1373,
	136, 1373,
	-2, 1479,
	-1, 1684,
	68, 1374,
	136, 1374,
	-2, 1474,
	-1, 1685,
	68, 1375,
	136, 1375,
	-2, 1467,
	-1, 1687,
	68, 1378,
	136, 1378,
	-2, 1590,
	-1, 1688,
	68, 1358,
	136, 1358,
	-2, 1576,
	-1, 1689,
	68, 1387,
	136, 1387,
	-2, 1547,
	-1, 1690,
	68, 1387,
	136, 1387,
	-2, 1575,
	-1, 1691,
	68, 1387,
	136, 1387,
	-2, 1437,
	-1, 1692,
	68, 1385,
	136, 1385,
	-2, 1566,
	-1, 1693,
	68, 1382,
	136, 1382,
	-2, 1459,
	-1, 1694,
	67, 1340,
	68, 1340,
	136, 1340,
	360, 1340,
	361, 1340,
	362, 1340,
	-2, 1418,
	-1, 1695,
	67, 1341,
	68, 1341,
	136, 1341,
	360, 1341,
	361, 1341,
	362, 1341,
	-2, 1420,
	-1, 1696,
	67, 1344,
	68, 1344,
	136, 1344,
	360, 1344,
	361, 1344,
	362, 1344,
	-2, 1548,
	-1, 1697,
	67, 1346,
	68, 1346,
	136, 1346,
	360, 1346,
	361, 1346,
	362, 1346,
	-2, 1531,
	-1, 1698,
	67, 1348,
	68, 1348,
	136, 1348,
	360, 1348,
	361, 1348,
	362, 1348,
	-2, 1480,
	-1, 1699,
	67, 1350,
	68, 1350,
	136, 1350,
	360, 1350,
	361, 1350,
	362, 1350,
	-2, 1463,
	-1, 1700,
	67, 1351,
	68, 1351,
	136, 1351,
	360, 1351,
	361, 1351,
	362, 1351,
	-2, 1464,
	-1, 1701,
	67, 1353,
	68, 1353,
	136, 1353,
	360, 1353,
	361, 1353,
	362, 1353,
	-2, 1417,
	-1, 1702,
	68, 1392,
	136, 1392,
	360, 1392,
	361, 1392,
	362, 1392,
	-2, 1442,
	-1, 1703,
	68, 1392,
	136, 1392,
	360, 1392,
	361, 1392,
	362, 1392,
	-2, 1455,
	-1, 1704,
	68, 1395,
	136, 1395,
	360, 1395,
	361, 1395,
	362, 1395,
	-2, 1438,
	-1, 1705,
	68, 1392,
	136, 1392,
	360, 1392,
	361, 1392,
	362, 1392,
	-2, 1516,
	-1, 1718,
	1, 823,
	68, 823,
	546, 823,
	-2, 830,
	-1, 1825,
	21, 578,
	-2, 670,
	-1, 1994,
	1, 824,
	68, 824,
	546, 824,
	-2, 830,
	-1, 2006,
	65, 486,
	136, 486,
	-2, 961,
	-1, 2023,
	278, 1025,
	-2, 1004,
	-1, 2274,
	278, 1025,
	-2, 1005,
	-1, 2399,
	88, 830,
	131, 830,
	170, 830,
	173, 830,
	-2, 909,
	-1, 2402,
	88, 830,
	131, 830,
	170, 830,
	173, 830,
	-2, 909,
	-1, 2412,
	65, 486,
	136, 486,
	-2, 962,
	-1, 2506,
	88, 830,
	131, 830,
	170, 830,
	173, 830,
	-2, 910,
	-1, 2790,
	68, 881,
	136, 881,
	-2, 830,
	-1, 2794,
	68, 881,
	136, 881,
	-2, 830,
	-1, 2808,
	68, 885,
	136, 885,
	-2, 830,
	-1, 2813,
	68, 886,
	136, 886,
	-2, 830,
}

const yyPrivate = 57344

const yyLast = 32758

var yyAct = [...]int{
	493, 1424, 1127, 2794, 2773, 2793, 2802, 472, 1189, 2684,
	474, 2732, 495, 2702, 2724, 2473, 2563, 2478, 2286, 2643,
	1657, 2644, 2500, 2612, 2537, 2352, 2628, 2632, 2499, 2557,
	2498, 2353, 1035, 891, 612, 152, 2579, 1340, 2476, 2547,
	1384, 523, 393, 393, 2525, 2009, 1185, 2505, 393, 409,
	416, 2251, 1192, 416, 2422, 2468, 2088, 1090, 2089, 2382,
	2074, 1753, 1486, 2087, 2296, 2275, 1456, 2081, 476, 2084,
	1819, 2350, 1890, 1556, 2345, 2110, 1525, 2226, 427, 1673,
	2328, 1758, 1386, 2223, 1499, 2221, 2295, 421, 1995, 1727,
	755, 1671, 1663, 1336, 719, 1427, 995, 2128, 471, 465,
	1534, 607, 466, 2249, 1889, 1350, 1533, 1479, 2167, 1931,
	1552, 1808, 1526, 2124, 1013, 1977, 650, 725, 1973, 1551,
	414, 32, 1754, 1820, 2027, 1371, 3, 1459, 1857, 1011,
	1358, 1126, 729, 45, 1726, 413, 20, 1043, 410, 9,
	411, 7, 929, 607, 1183, 728, 31, 412, 8, 1044,
	1553, 1121, 1669, 1099, 1331, 475, 1483, 1711, 151, 1024,
	1394, 1584, 464, 1563, 1645, 1174, 1932, 1188, 1395, 1238,
	1222, 473, 405, 772, 1532, 1511, 1529, 102, 483, 1182,
	723, 45, 1341, 974, 1082, 711, 1464, 1827, 1370, 2506,
	1412, 1020, 1772, 649, 402, 609, 1069, 1243, 430, 1244,
	17, 429, 10, 5, 1120, 1036, 993, 145, 415, 148,
	1892, 1570, 1560, 647, 712, 2161, 2161, 150, 389, 666,
	2553, 611, 2548, 2469, 2351, 1354, 886, 892, 392, 392,
	677, 2621, 1528, 610, 400, 149, 149, 41, 137, 114,
	149, 620, 41, 137, 114, 2490, 2675, 2596, 792, 1877,
	149, 2587, 1264, 398, 149, 425, 1141, 1557, 1071, 1457,
	149, 419, 41, 137, 114, 149, 2491, 1885, 149, 149,
	149, 32, 1138, 2190, 1568, 1175, 1715, 751, 1179, 1843,
	826, 807, 1844, 45, 808, 1134, 20, 2720, 1264, 9,
	101, 7, 146, 1140, 2588, 1497, 31, 146, 8, 1467,
	1468, 1131, 1178, 1159, 2143, 2136, 101, 146, 1032, 1072,
	1052, 146, 810, 1053, 1039, 606, 2718, 146, 1038, 1041,
	1042, 1858, 1133, 426, 726, 146, 146, 146, 1975, 687,
	597, 1408, 596, 598, 599, 621, 600, 601, 735, 730,
	734, 736, 692, 800, 1191, 691, 802, 1041, 1042, 2647,
	2648, 824, 829, 830, 831, 828, 722, 721, 2622, 2623,
	1639, 2486, 2706, 2707, 2354, 740, 2555, 2129, 2614, 733,
	819, 2614, 2617, 2130, 803, 2131, 2551, 2354, 1180, 613,
	1480, 1974, 1194, 1872, 805, 2558, 2559, 2560, 2561, 766,
	775, 2627, 393, 2363, 2383, 1472, 1055, 2674, 1170, 1177,
	1564, 2390, 393, 765, 1260, 2235, 2237, 1799, 1257, 2227,
	2571, 1710, 1259, 1256, 1258, 1262, 1263, 738, 416, 416,
	1261, 393, 2293, 2496, 741, 764, 1476, 1642, 696, 1278,
	1325, 1324, 2154, 760, 762, 821, 2156, 113, 1965, 147,
	1260, 731, 1882, 806, 1257, 693, 796, 795, 1259, 1256,
	1258, 1262, 1263, 822, 823, 775, 1261, 2232, 2233, 135,
	2078, 1801, 739, 2574, 2493, 460, 2242, 1804, 462, 798,
	1980, 2722, 2234, 461, 2248, 2677, 2678, 1573, 1575, 1576,
	862, 801, 804, 1030, 2584, 759, 2485, 1193, 2231, 2646,
	2255, 2713, 2487, 2526, 2527, 2528, 2530, 2529, 2636, 418,
	732, 2002, 417, 787, 695, 797, 2442, 1176, 1569, 1989,
	1990, 1991, 1992, 809, 2633, 1064, 2803, 761, 2787, 1200,
	1203, 1204, 2741, 2682, 2683, 724, 2686, 1495, 1496, 2717,
	1201, 2686, 2435, 2748, 1019, 2603, 1782, 2539, 2752, 45,
	45, 2426, 1054, 1781, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1267, 1268, 1269, 1270, 1271,
	1272, 1265, 1266, 2430, 817, 818, 2448, 2449, 1759, 1762,
	737, 777, 776, 2310, 694, 799, 1986, 1078, 757, 768,
	769, 1077, 2229, 1034, 1033, 2059, 726, 785, 763, 1057,
	1018, 1267, 1268, 1269, 1270, 1271, 1272, 1265, 1266, 1558,
	1558, 1017, 2804, 2774, 2798, 2810, 2580, 783, 1558, 756,
	2206, 2404, 1585, 2112, 2114, 996, 2611, 467, 770, 425,
	1070, 784, 1878, 991, 152, 994, 780, 781, 2367, 2160,
	1834, 1561, 1001, 2159, 2727, 2585, 777, 776, 1041, 1042,
	1005, 1762, 1004, 971, 1572, 1003, 420, 2217, 1008, 650,
	864, 865, 866, 867, 2116, 726, 2676, 1833, 1832, 2586,
	644, 645, 646, 868, 2169, 2168, 812, 1041, 1042, 813,
	2624, 2625, 1830, 1831, 1075, 1073, 1074, 424, 1470, 42,
	792, 1471, 1469, 698, 1040, 923, 1571, 699, 1559, 1031,
	2723, 2260, 610, 393, 1481, 1066, 1763, 815, 1037, 700,
	2228, 1756, 2238, 2572, 42, 1757, 1760, 1152, 1153, 1574,
	2512, 642, 115, 115, 607, 607, 607, 115, 2753, 1094,
	1094, 2538, 393, 997, 998, 999, 1000, 115, 1002, 2157,
	2797, 115, 1006, 2492, 1886, 827, 702, 115, 1817, 416,
	994, 152, 115, 1124, 1124, 115, 115, 115, 786, 1979,
	1473, 1202, 2728, 1171, 1128, 2497, 1101, 1761, 688, 1136,
	902, 903, 2008, 791, 2325, 1092, 1092, 2428, 1763, 811,
	2230, 2427, 2113, 2431, 2432, 2809, 1028, 1096, 724, 1157,
	2816, 1475, 992, 2321, 1046, 1047, 701, 1049, 1050, 1051,
	704, 703, 1094, 1142, 1094, 765, 1909, 2815, 1156, 1766,
	2771, 2246, 1983, 1984, 2806, 816, 1155, 1021, 1025, 1025,
	1025, 2060, 2062, 2063, 2064, 2061, 1982, 1190, 976, 1026,
	1027, 2788, 2783, 978, 969, 966, 967, 968, 814, 1021,
	1914, 1021, 1913, 1912, 1910, 1616, 1387, 1387, 1615, 688,
	690, 705, 792, 689, 1818, 611, 2777, 1172, 827, 697,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1010, 1065, 2007, 827, 1233, 1234, 744, 749,
	750, 1056, 2807, 1058, 1242, 1860, 1132, 2725, 2726, 1062,
	1139, 2776, 1776, 2757, 1281, 1282, 1283, 1291, 1045, 1566,
	2784, 1048, 1713, 1666, 2400, 1651, 1911, 1297, 1298, 1117,
	1166, 1088, 1089, 45, 1187, 1076, 827, 1300, 1100, 789,
	1305, 1306, 45, 1595, 1566, 1165, 1667, 1668, 1162, 790,
	1161, 690, 2734, 607, 689, 2696, 1765, 2247, 1085, 1086,
	1087, 1769, 1767, 1205, 1102, 1022, 1768, 398, 1168, 829,
	830, 831, 828, 1148, 1877, 1143, 1116, 1115, 1125, 1566,
	614, 1566, 496, 505, 2654, 2649, 1818, 2325, 497, 1184,
	504, 498, 502, 501, 499, 500, 1326, 2605, 1144, 2604,
	1818, 1347, 614, 829, 830, 831, 828, 1655, 611, 1970,
	1164, 790, 1163, 1160, 1594, 2008, 1514, 1290, 1712, 1967,
	2735, 1186, 1181, 2697, 1865, 2601, 393, 1845, 1369, 1094,
	1373, 1173, 1375, 1376, 1348, 2600, 2599, 393, 1273, 1274,
	650, 1277, 506, 1385, 1557, 2598, 2575, 1094, 2188, 1292,
	1656, 1066, 2576, 2576, 1915, 1916, 409, 1620, 1231, 1232,
	1299, 2450, 1301, 1224, 1023, 2606, 1351, 1731, 746, 747,
	748, 1548, 1338, 1339, 503, 1407, 829, 830, 831, 828,
	2312, 2107, 1493, 1413, 1413, 758, 1066, 1066, 1009, 1066,
	1236, 1368, 393, 2576, 1369, 1369, 1411, 827, 1094, 1454,
	1466, 1956, 1954, 2576, 2576, 1952, 1276, 1950, 1079, 1374,
	607, 2736, 1094, 2576, 2576, 1329, 832, 1332, 1333, 972,
	1937, 1654, 2415, 1893, 2261, 861, 2126, 2010, 2389, 1845,
	1377, 1378, 1379, 870, 1302, 1875, 1492, 1512, 393, 1369,
	1094, 1400, 1504, 393, 393, 1507, 1880, 1869, 2313, 1818,
	1510, 844, 792, 1867, 1516, 875, 1406, 1450, 1451, 1409,
	1410, 1862, 1879, 1393, 1291, 1291, 1536, 1321, 1730, 1957,
	1955, 1291, 1291, 1951, 1652, 1951, 1543, 1871, 1402, 1403,
	1343, 1415, 1346, 1624, 1623, 1614, 1746, 1477, 827, 1605,
	1355, 827, 1396, 1604, 1398, 1399, 1372, 1021, 1349, 1611,
	1385, 1603, 1501, 1731, 1094, 1555, 1596, 1404, 1547, 1401,
	1519, 1565, 1366, 1149, 1390, 1863, 1388, 1389, 1365, 1503,
	1025, 1868, 1482, 1380, 1829, 1145, 970, 1505, 1506, 1863,
	1405, 873, 778, 1382, 1381, 2256, 1731, 758, 753, 1392,
	1549, 2637, 1651, 1280, 1279, 1537, 2265, 1417, 2513, 1418,
	1397, 827, 827, 827, 1416, 2407, 2405, 827, 1578, 2151,
	2766, 827, 1014, 1081, 1531, 1372, 1015, 1582, 1583, 827,
	2754, 1531, 1083, 1900, 1414, 1490, 1491, 1773, 1419, 1566,
	1367, 1150, 1423, 1084, 2638, 2326, 1453, 1455, 2317, 1230,
	1022, 2514, 758, 2314, 2257, 1478, 1239, 2162, 2408, 2406,
	1487, 1488, 1489, 2079, 1227, 1229, 1226, 1184, 1228, 1866,
	1836, 767, 45, 831, 828, 1498, 1239, 2671, 1591, 1502,
	829, 830, 831, 828, 1500, 829, 830, 831, 828, 1500,
	1500, 1520, 828, 2438, 1902, 1311, 1621, 2258, 2437, 2132,
	2037, 726, 1924, 1628, 1080, 2036, 1540, 1538, 726, 2031,
	2751, 2026, 1545, 2419, 1546, 2792, 1541, 2780, 1542, 847,
	848, 849, 850, 851, 844, 1303, 1304, 2742, 1550, 1307,
	1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 845, 846, 847, 848, 849, 850, 851, 844, 1023,
	1123, 1123, 2494, 465, 2750, 765, 1706, 2387, 2737, 1061,
	2687, 1063, 1295, 1067, 1068, 2662, 2082, 2639, 393, 393,
	393, 2070, 1728, 1296, 2068, 1577, 2589, 1674, 829, 830,
	831, 828, 1735, 1066, 1586, 2549, 2519, 1579, 2181, 1580,
	1581, 2495, 1739, 726, 2641, 1224, 2388, 1590, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1066, 2516, 460, 1119,
	2069, 462, 765, 2067, 2515, 1771, 461, 829, 830, 831,
	828, 843, 842, 852, 853, 845, 846, 847, 848, 849,
	850, 851, 844, 2180, 1752, 1195, 1196, 1197, 1198, 1199,
	1618, 842, 852, 853, 845, 846, 847, 848, 849, 850,
	851, 844, 1822, 1822, 1466, 1822, 829, 830, 831, 828,
	2409, 1658, 1659, 1749, 2386, 2236, 1737, 835, 836, 837,
	838, 839, 840, 841, 833, 1740, 1741, 1638, 2209, 1240,
	1241, 2208, 2147, 1094, 393, 1275, 1707, 1607, 2066, 2056,
	1647, 2054, 2053, 1285, 2052, 2049, 2043, 2040, 2039, 765,
	152, 1650, 1649, 1124, 2712, 1466, 1648, 1644, 1852, 1742,
	1854, 1643, 1775, 1599, 1146, 1660, 829, 830, 831, 828,
	1826, 1674, 989, 1824, 2222, 1828, 1714, 2065, 2055, 1841,
	2474, 2708, 2672, 1743, 2609, 2573, 1744, 2550, 1873, 1748,
	1606, 1555, 2504, 1736, 2631, 2591, 2472, 2470, 1094, 2562,
	1094, 1025, 1094, 2454, 1720, 1721, 1722, 765, 2452, 2075,
	2421, 1745, 2385, 829, 830, 831, 828, 829, 830, 831,
	828, 1851, 2384, 2381, 1747, 2372, 2366, 1891, 1738, 1887,
	2480, 1352, 2320, 2318, 1849, 1356, 1094, 1918, 1359, 829,
	830, 831, 828, 1856, 2308, 2307, 1883, 2214, 2213, 2207,
	2158, 1802, 1925, 829, 830, 831, 828, 1094, 2119, 1774,
	2057, 1777, 1778, 1779, 1780, 2479, 1927, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 726, 1092, 2402, 1837, 1838, 1839, 1842, 829, 830,
	831, 828, 2447, 1917, 2050, 2046, 1929, 2805, 2045, 2369,
	2044, 1847, 1653, 1092, 1850, 1646, 765, 1522, 1848, 553,
	552, 2401, 1361, 1904, 1926, 829, 830, 831, 828, 1147,
	1100, 1884, 829, 830, 831, 828, 1898, 901, 1968, 852,
	853, 845, 846, 847, 848, 849, 850, 851, 844, 897,
	1352, 1876, 1881, 896, 1874, 2184, 1352, 1352, 615, 616,
	617, 618, 874, 1094, 1958, 754, 1987, 2399, 2376, 149,
	1369, 614, 137, 114, 2375, 1184, 2006, 2183, 829, 830,
	831, 828, 2012, 2371, 1933, 2182, 2358, 1908, 2344, 1938,
	2343, 2266, 1894, 1895, 2186, 2179, 2171, 2021, 2166, 2123,
	829, 830, 831, 828, 1971, 1946, 2025, 1897, 829, 830,
	831, 828, 1969, 1966, 1953, 1945, 2033, 2034, 2035, 1944,
	1105, 1949, 2038, 1948, 1943, 1629, 146, 2765, 829, 830,
	831, 828, 1959, 1997, 1338, 1339, 1822, 1962, 829, 830,
	831, 828, 829, 830, 831, 828, 2071, 829, 830, 831,
	828, 1619, 1617, 1613, 2003, 1369, 765, 1466, 1466, 1466,
	1466, 1612, 1610, 2013, 1996, 1601, 1598, 1597, 765, 1466,
	1521, 2015, 1822, 1320, 1294, 2017, 1293, 1284, 2090, 1106,
	149, 1333, 2023, 508, 103, 1094, 1104, 2759, 1985, 2028,
	2090, 2028, 1593, 2749, 2746, 2744, 393, 393, 2661, 2607,
	32, 2014, 893, 1328, 1588, 2029, 2011, 1592, 2018, 2019,
	2005, 2535, 45, 2523, 1291, 20, 1291, 1942, 9, 2142,
	7, 2520, 2146, 2462, 2103, 31, 2024, 8, 1094, 399,
	1372, 2153, 103, 2020, 2030, 2460, 1343, 146, 1346, 2016,
	829, 830, 831, 828, 2445, 2444, 1602, 2443, 2440, 829,
	830, 831, 828, 1976, 1609, 2434, 2394, 1337, 1330, 2051,
	1012, 2072, 2004, 2032, 2000, 1999, 1998, 2076, 2080, 1342,
	1345, 1334, 1622, 1947, 1351, 1625, 1626, 1627, 2102, 2141,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1861, 894,
	1640, 2139, 1835, 611, 2120, 2106, 2104, 2145, 1797, 2105,
	2174, 1729, 2176, 1225, 2117, 146, 1508, 2150, 2155, 1364,
	1363, 2115, 1335, 1169, 2138, 1135, 973, 2135, 2041, 2042,
	2127, 765, 2140, 2133, 2047, 2048, 921, 2225, 920, 919,
	727, 918, 917, 2137, 103, 916, 915, 2240, 2149, 393,
	2144, 914, 2077, 1674, 913, 2164, 912, 2163, 911, 765,
	765, 765, 910, 909, 908, 1732, 907, 2175, 1466, 1728,
	906, 2264, 905, 904, 900, 2170, 899, 2268, 898, 895,
	890, 1752, 1752, 1752, 2177, 2178, 889, 2297, 2299, 887,
	2297, 2297, 2121, 2122, 886, 885, 884, 2304, 883, 882,
	2191, 881, 1094, 1094, 2192, 2193, 2194, 2195, 2216, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2210, 880, 879,
	2215, 878, 2218, 877, 2172, 2173, 2091, 2092, 2093, 2094,
	876, 872, 871, 393, 2262, 794, 752, 2441, 2225, 2329,
	2330, 1734, 1717, 2244, 782, 2294, 1369, 1369, 1092, 1092,
	1996, 2245, 2298, 2220, 2692, 2259, 1941, 2267, 2263, 2305,
	2306, 2269, 2270, 2252, 2253, 1352, 1352, 1352, 1940, 2335,
	2690, 2645, 2332, 1939, 1988, 1846, 2300, 2301, 1524, 829,
	830, 831, 828, 1936, 793, 2791, 2334, 1918, 2302, 1870,
	1123, 829, 830, 831, 828, 2271, 829, 830, 831, 828,
	1935, 2096, 2095, 2272, 1934, 2099, 829, 830, 831, 828,
	2100, 2211, 2212, 1930, 2097, 2322, 2323, 2311, 2319, 2098,
	393, 2316, 2315, 829, 830, 831, 828, 829, 830, 831,
	828, 2324, 1864, 85, 2333, 2243, 829, 830, 831, 828,
	1921, 2101, 1449, 1814, 1815, 2337, 2336, 2465, 1964, 2464,
	44, 43, 390, 1859, 2340, 2341, 2342, 2219, 1322, 1658,
	1659, 1708, 2349, 829, 830, 831, 828, 1899, 2699, 1901,
	1888, 975, 1129, 2359, 1509, 788, 2626, 1919, 1920, 395,
	2360, 1235, 2022, 2463, 2362, 1922, 1923, 2361, 1805, 1972,
	829, 830, 831, 828, 2365, 394, 396, 397, 1928, 2373,
	103, 103, 727, 1369, 829, 830, 831, 828, 1724, 2398,
	1383, 1810, 1813, 1814, 1815, 1811, 1362, 1812, 1816, 1500,
	1822, 1466, 2412, 1800, 1810, 1813, 1814, 1815, 1811, 1352,
	1812, 1816, 1960, 1961, 1359, 1280, 1279, 987, 988, 985,
	986, 1452, 2377, 1094, 983, 984, 2420, 1060, 2380, 981,
	982, 1059, 820, 2339, 393, 1544, 1016, 2379, 977, 2760,
	2680, 2668, 2666, 2299, 615, 616, 617, 618, 2634, 2392,
	2414, 860, 2393, 2619, 2618, 2616, 2608, 614, 1387, 2546,
	2545, 2471, 1369, 2374, 2356, 2355, 765, 2411, 2347, 2423,
	2410, 980, 614, 2346, 2125, 2148, 2294, 2694, 2693, 2693,
	2418, 1719, 1600, 779, 2694, 2413, 2364, 2436, 2090, 2357,
	2467, 2416, 1029, 2781, 2417, 52, 1494, 1098, 765, 2456,
	1, 1360, 619, 2108, 2109, 2338, 2111, 2446, 1562, 1798,
	1709, 2239, 1007, 643, 2451, 1286, 2453, 2488, 1154, 743,
	2090, 774, 1151, 773, 2457, 2455, 771, 1237, 510, 2458,
	1527, 2073, 2542, 2698, 2731, 765, 1094, 1094, 2660, 2701,
	1167, 765, 843, 842, 852, 853, 845, 846, 847, 848,
	849, 850, 851, 844, 2475, 494, 2610, 2554, 2664, 2556,
	2477, 1567, 825, 1752, 2134, 662, 546, 521, 888, 1137,
	1130, 2189, 745, 2489, 520, 2391, 1981, 2583, 2395, 2396,
	2397, 765, 1092, 2423, 765, 765, 765, 979, 632, 742,
	2510, 2503, 2507, 2502, 2509, 663, 1641, 2552, 2414, 1323,
	1344, 1385, 1327, 2543, 2511, 2403, 2254, 2001, 2801, 2790,
	2772, 2524, 2758, 2278, 2532, 2533, 2534, 2685, 2521, 1352,
	2439, 2481, 2786, 2716, 1352, 2747, 2484, 2531, 2482, 2540,
	2483, 2570, 2740, 2517, 2518, 2681, 431, 2288, 1474, 605,
	709, 2541, 2536, 1523, 432, 1733, 2673, 2522, 1771, 630,
	2281, 1716, 631, 1994, 1993, 1206, 834, 2276, 1223, 2204,
	2165, 2205, 2291, 2292, 765, 869, 470, 1589, 2277, 2568,
	482, 1978, 2287, 2118, 51, 50, 765, 49, 2577, 48,
	1515, 156, 2185, 512, 155, 2657, 2703, 2582, 2581, 492,
	491, 490, 2590, 489, 2597, 2593, 488, 1809, 1103, 1807,
	1806, 1461, 1460, 399, 2282, 1513, 2602, 1764, 1420, 2642,
	2594, 2595, 2433, 2058, 2429, 2425, 2309, 765, 2273, 2274,
	2280, 2620, 1723, 928, 924, 926, 2615, 2613, 927, 103,
	925, 1907, 1903, 103, 1750, 1751, 2250, 1665, 2630, 1664,
	1662, 1661, 990, 2569, 103, 2629, 2378, 2655, 2658, 1672,
	2635, 1670, 2331, 103, 2327, 2241, 1535, 1357, 1963, 1462,
	1458, 1803, 1718, 2640, 2659, 2650, 2651, 2652, 2653, 77,
	76, 83, 2667, 126, 2669, 2670, 39, 2665, 2663, 2508,
	608, 33, 28, 6, 4, 30, 29, 15, 16, 14,
	2303, 1158, 2679, 13, 19, 2290, 27, 1755, 26, 25,
	95, 94, 2705, 24, 2691, 2689, 2688, 93, 92, 91,
	90, 23, 12, 2695, 2704, 89, 88, 87, 22, 82,
	80, 765, 2284, 21, 2709, 81, 78, 79, 2710, 63,
	62, 61, 74, 829, 830, 831, 828, 73, 2730, 72,
	2719, 2721, 71, 2714, 2283, 2285, 70, 69, 68, 2729,
	2733, 661, 60, 59, 2738, 58, 765, 57, 56, 75,
	67, 66, 944, 65, 2739, 64, 2743, 55, 2745, 54,
	53, 111, 112, 110, 109, 108, 2705, 2756, 1190, 107,
	106, 105, 35, 36, 37, 765, 38, 765, 2704, 2755,
	122, 121, 123, 2762, 125, 2764, 127, 2767, 124, 119,
	117, 120, 118, 116, 2733, 2768, 765, 1190, 46, 1190,
	2775, 1264, 2782, 11, 2779, 2785, 18, 2, 0, 2293,
	0, 0, 0, 0, 0, 0, 0, 0, 1190, 2789,
	0, 2279, 2796, 0, 0, 0, 2800, 2289, 0, 2368,
	2799, 0, 0, 0, 2808, 0, 2370, 0, 2811, 855,
	2796, 859, 2813, 2814, 2812, 2800, 0, 0, 0, 0,
	0, 0, 0, 0, 932, 0, 856, 858, 854, 0,
	857, 843, 842, 852, 853, 845, 846, 847, 848, 849,
	850, 851, 844, 0, 952, 956, 958, 960, 962, 963,
	965, 0, 969, 966, 967, 968, 2763, 0, 947, 948,
	949, 950, 930, 931, 953, 0, 933, 2711, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943, 945, 951,
	0, 0, 0, 0, 0, 0, 0, 955, 957, 959,
	961, 964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2761, 1465, 0, 843, 842, 852, 853, 845,
	846, 847, 848, 849, 850, 851, 844, 0, 0, 0,
	0, 0, 0, 1260, 946, 0, 0, 1257, 0, 0,
	0, 1259, 1256, 1258, 1262, 1263, 0, 0, 0, 1261,
	0, 0, 0, 2187, 1352, 0, 0, 2459, 0, 0,
	2461, 843, 842, 852, 853, 845, 846, 847, 848, 849,
	850, 851, 844, 0, 2466, 0, 0, 727, 0, 0,
	0, 0, 0, 0, 727, 0, 0, 0, 149, 327,
	41, 137, 114, 103, 0, 0, 0, 0, 0, 0,
	289, 403, 843, 842, 852, 853, 845, 846, 847, 848,
	849, 850, 851, 844, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 319, 273, 843,
	842, 852, 853, 845, 846, 847, 848, 849, 850, 851,
	844, 0, 0, 0, 0, 408, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 1905, 1906, 0, 0, 218, 0, 0, 860,
	1896, 0, 0, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1267, 1268, 1269, 1270, 1271, 1272,
	1265, 1266, 0, 843, 842, 852, 853, 845, 846, 847,
	848, 849, 850, 851, 844, 0, 0, 0, 0, 0,
	0, 0, 2567, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 2578,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 2592, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 954, 0, 407,
	0, 0, 2567, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 2567,
	287, 0, 0, 1587, 0, 0, 0, 1825, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 843, 842, 852, 853,
	845, 846, 847, 848, 849, 850, 851, 844, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 1465, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	404, 406, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 2770, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 944, 0,
	0, 0, 42, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 115, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	0, 0, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	932, 0, 0, 0, 922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	952, 956, 958, 960, 962, 963, 965, 0, 969, 966,
	967, 968, 0, 0, 947, 948, 949, 950, 930, 931,
	953, 0, 933, 103, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 943, 945, 951, 0, 0, 0, 0,
	0, 0, 0, 955, 957, 959, 961, 964, 944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1465, 1465, 1465, 1465, 0, 0, 0, 0, 0, 0,
	0, 0, 1465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	932, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	952, 956, 958, 960, 962, 963, 965, 0, 969, 966,
	967, 968, 0, 0, 947, 948, 949, 950, 930, 931,
	953, 0, 933, 0, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 943, 945, 951, 0, 0, 327, 528,
	0, 0, 0, 955, 957, 959, 961, 964, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 519, 0, 0, 319, 273, 0, 0,
	946, 0, 576, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 103, 509, 553, 552,
	496, 505, 0, 0, 215, 154, 497, 0, 504, 498,
	502, 501, 499, 500, 0, 568, 0, 0, 0, 0,
	0, 0, 468, 481, 2564, 485, 0, 0, 0, 0,
	0, 1465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 478, 479,
	0, 0, 0, 0, 529, 0, 480, 0, 0, 524,
	506, 507, 0, 954, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 503, 527, 531, 227, 590, 525, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 591, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 0, 350, 0, 0, 574, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 526,
	0, 309, 291, 587, 469, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 954, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 572, 287,
	0, 0, 586, 567, 569, 570, 573, 577, 578, 579,
	580, 581, 583, 585, 589, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1465, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 2565, 0,
	0, 0, 2566, 0, 588, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 530, 277, 278, 279, 280, 575,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 597, 571, 596, 598, 599, 595, 600,
	601, 582, 487, 0, 534, 593, 592, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 560, 539, 540,
	541, 486, 542, 537, 538, 561, 532, 557, 558, 511,
	535, 543, 556, 544, 559, 562, 563, 602, 603, 550,
	604, 547, 564, 555, 554, 545, 533, 565, 566, 518,
	513, 548, 549, 536, 551, 514, 515, 516, 517, 327,
	528, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 519, 0, 0, 319, 273, 0,
	0, 0, 0, 576, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 509, 553,
	552, 496, 505, 0, 0, 215, 154, 497, 0, 504,
	498, 502, 501, 499, 500, 0, 568, 0, 0, 0,
	0, 0, 0, 468, 481, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	479, 0, 0, 0, 0, 529, 0, 480, 0, 0,
	524, 506, 507, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 503, 527, 531, 227, 590, 525, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 591, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 0, 0, 0, 350, 0, 0, 574,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	526, 0, 309, 291, 587, 469, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 1288, 1287, 1289, 362, 241, 198, 199, 345, 572,
	287, 0, 0, 586, 567, 569, 570, 573, 577, 578,
	579, 580, 581, 583, 585, 589, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 530, 277, 278, 279, 280,
	575, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 597, 571, 596, 598, 599, 595,
	600, 601, 582, 487, 0, 534, 593, 592, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 560, 539,
	540, 541, 486, 542, 537, 538, 561, 532, 557, 558,
	511, 535, 543, 556, 544, 559, 562, 563, 602, 603,
	550, 604, 547, 564, 555, 554, 545, 533, 565, 566,
	518, 513, 548, 549, 536, 551, 514, 515, 516, 517,
	327, 528, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 519, 0, 0, 319, 273,
	0, 0, 0, 0, 576, 584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 509,
	553, 552, 496, 505, 0, 0, 215, 154, 497, 0,
	504, 498, 502, 501, 499, 500, 0, 568, 0, 0,
	0, 0, 0, 0, 468, 481, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 479, 0, 0, 0, 0, 529, 0, 480, 0,
	0, 524, 506, 507, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 503, 527, 531, 227, 590, 525,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 591, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 0, 0, 350, 0, 0,
	574, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 526, 0, 309, 291, 587, 469, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	572, 287, 0, 0, 586, 567, 569, 570, 573, 577,
	578, 579, 580, 581, 583, 585, 589, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	2565, 0, 0, 0, 2566, 0, 588, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 530, 277, 278, 279,
	280, 575, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 597, 571, 596, 598, 599,
	595, 600, 601, 582, 487, 0, 534, 593, 592, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 560,
	539, 540, 541, 486, 542, 537, 538, 561, 532, 557,
	558, 511, 535, 543, 556, 544, 559, 562, 563, 602,
	603, 550, 604, 547, 564, 555, 554, 545, 533, 565,
	566, 518, 513, 548, 549, 536, 551, 514, 515, 516,
	517, 327, 528, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 234,
	1353, 0, 259, 0, 0, 0, 519, 0, 0, 319,
	273, 0, 0, 0, 0, 576, 584, 0, 0, 0,
	0, 0, 0, 0, 1484, 0, 0, 477, 0, 0,
	509, 553, 552, 496, 505, 0, 0, 215, 154, 497,
	0, 504, 498, 502, 501, 499, 500, 0, 568, 0,
	0, 0, 0, 0, 0, 468, 481, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 479, 0, 0, 0, 0, 529, 0, 480,
	0, 0, 1485, 506, 507, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 503, 527, 531, 227, 590,
	525, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 591, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 0, 0, 350, 0,
	0, 574, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 526, 0, 309, 291, 587, 469, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 572, 287, 0, 0, 586, 567, 569, 570, 573,
	577, 578, 579, 580, 581, 583, 585, 589, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 530, 277, 278,
	279, 280, 575, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 597, 571, 596, 598,
	599, 595, 600, 601, 582, 487, 0, 534, 593, 592,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	560, 539, 540, 541, 486, 542, 537, 538, 561, 532,
	557, 558, 511, 535, 543, 556, 544, 559, 562, 563,
	602, 603, 550, 604, 547, 564, 555, 554, 545, 533,
	565, 566, 518, 513, 548, 549, 536, 551, 514, 515,
	516, 517, 149, 327, 528, 358, 359, 360, 381, 344,
	0, 231, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 863, 0,
	0, 319, 273, 0, 0, 0, 0, 576, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 509, 553, 552, 496, 505, 0, 0, 215,
	154, 497, 0, 504, 498, 502, 501, 499, 500, 0,
	568, 0, 0, 0, 0, 0, 0, 468, 481, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 479, 0, 0, 0, 0, 529,
	0, 480, 0, 0, 524, 506, 507, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 503, 527, 531,
	227, 590, 525, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 591, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 0, 0, 0,
	350, 0, 0, 574, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 526, 0, 309, 291, 587, 469,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 572, 287, 0, 0, 586, 567, 569,
	570, 573, 577, 578, 579, 580, 581, 583, 585, 589,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 530,
	277, 278, 279, 280, 575, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 597, 571,
	596, 598, 599, 595, 600, 601, 582, 487, 0, 534,
	593, 592, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 115,
	301, 239, 560, 539, 540, 541, 486, 542, 537, 538,
	561, 532, 557, 558, 511, 535, 543, 556, 544, 559,
	562, 563, 602, 603, 550, 604, 547, 564, 555, 554,
	545, 533, 565, 566, 518, 513, 548, 549, 536, 551,
	514, 515, 516, 517, 327, 528, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 0,
	0, 0, 234, 2769, 0, 259, 0, 0, 0, 519,
	0, 0, 319, 273, 0, 0, 0, 0, 576, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 509, 553, 552, 496, 505, 0, 0,
	215, 154, 497, 0, 504, 498, 502, 501, 499, 500,
	0, 568, 0, 0, 0, 0, 0, 0, 468, 481,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 479, 0, 0, 0, 0,
	529, 0, 480, 0, 0, 524, 506, 507, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 503, 527,
	531, 227, 590, 525, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 591,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 522, 0, 0,
	0, 350, 0, 0, 574, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 526, 0, 309, 291, 587,
	469, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 572, 287, 0, 0, 586, 567,
	569, 570, 573, 577, 578, 579, 580, 581, 583, 585,
	589, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	530, 277, 278, 279, 280, 575, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 597,
	571, 596, 598, 599, 595, 600, 601, 582, 487, 0,
	534, 593, 592, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 560, 539, 540, 541, 486, 542, 537,
	538, 561, 532, 557, 558, 511, 535, 543, 556, 544,
	559, 562, 563, 602, 603, 550, 604, 547, 564, 555,
	554, 545, 533, 565, 566, 518, 513, 548, 549, 536,
	551, 514, 515, 516, 517, 327, 528, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 234, 1353, 0, 259, 0, 0, 0,
	519, 0, 0, 319, 273, 0, 0, 0, 0, 576,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 509, 553, 552, 496, 505, 0,
	0, 215, 154, 497, 0, 504, 498, 502, 501, 499,
	500, 0, 568, 0, 0, 0, 0, 0, 0, 468,
	481, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 479, 0, 0, 0,
	0, 529, 0, 480, 0, 0, 524, 506, 507, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 503,
	527, 531, 227, 590, 525, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	591, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 0,
	0, 0, 350, 0, 0, 574, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 526, 0, 309, 291,
	587, 469, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 572, 287, 0, 0, 586,
	567, 569, 570, 573, 577, 578, 579, 580, 581, 583,
	585, 589, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 588, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 530, 277, 278, 279, 280, 575, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	597, 571, 596, 598, 599, 595, 600, 601, 582, 487,
	0, 534, 593, 592, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 560, 539, 540, 541, 486, 542,
	537, 538, 561, 532, 557, 558, 511, 535, 543, 556,
	544, 559, 562, 563, 602, 603, 550, 604, 547, 564,
	555, 554, 545, 533, 565, 566, 518, 513, 548, 549,
	536, 551, 514, 515, 516, 517, 327, 528, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	484, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 519, 0, 0, 319, 273, 0, 0, 0, 0,
	576, 584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 509, 553, 552, 496, 505,
	0, 0, 215, 154, 497, 0, 504, 498, 502, 501,
	499, 500, 0, 568, 0, 0, 0, 0, 0, 0,
	468, 481, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 479, 1122, 0,
	0, 0, 529, 0, 480, 0, 0, 524, 506, 507,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	503, 527, 531, 227, 590, 525, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 591, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	0, 0, 0, 350, 0, 0, 574, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 526, 0, 309,
	291, 587, 469, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 572, 287, 0, 0,
	586, 567, 569, 570, 573, 577, 578, 579, 580, 581,
	583, 585, 589, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 530, 277, 278, 279, 280, 575, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 597, 571, 596, 598, 599, 595, 600, 601, 582,
	487, 0, 534, 593, 592, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 560, 539, 540, 541, 486,
	542, 537, 538, 561, 532, 557, 558, 511, 535, 543,
	556, 544, 559, 562, 563, 602, 603, 550, 604, 547,
	564, 555, 554, 545, 533, 565, 566, 518, 513, 548,
	549, 536, 551, 514, 515, 516, 517, 0, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 327, 528, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 234, 0, 0, 259, 0,
	0, 0, 519, 0, 0, 319, 273, 0, 0, 0,
	0, 576, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 509, 553, 552, 496,
	505, 0, 0, 215, 154, 497, 0, 504, 498, 502,
	501, 499, 500, 0, 568, 0, 0, 0, 0, 0,
	0, 468, 481, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 479, 0,
	0, 0, 0, 529, 0, 480, 0, 0, 524, 506,
	507, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 503, 527, 531, 227, 590, 525, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 591, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 0, 0, 0, 350, 0, 0, 574, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 526, 0,
	309, 291, 587, 469, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 572, 287, 0,
	0, 586, 567, 569, 570, 573, 577, 578, 579, 580,
	581, 583, 585, 589, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 530, 277, 278, 279, 280, 575, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 597, 571, 596, 598, 599, 595, 600, 601,
	582, 487, 0, 534, 593, 592, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 560, 539, 540, 541,
	486, 542, 537, 538, 561, 532, 557, 558, 511, 535,
	543, 556, 544, 559, 562, 563, 602, 603, 550, 604,
	547, 564, 555, 554, 545, 533, 565, 566, 518, 513,
	548, 549, 536, 551, 514, 515, 516, 517, 327, 528,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 519, 0, 0, 319, 273, 0, 0,
	0, 0, 576, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 509, 553, 552,
	496, 505, 0, 0, 215, 154, 497, 0, 504, 498,
	502, 501, 499, 500, 0, 568, 0, 0, 0, 0,
	0, 0, 468, 481, 0, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 479,
	0, 0, 0, 0, 529, 0, 480, 0, 0, 524,
	506, 507, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 503, 527, 531, 227, 590, 525, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 591, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 0, 350, 0, 0, 574, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 526,
	0, 309, 291, 587, 469, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 572, 287,
	0, 0, 586, 567, 569, 570, 573, 577, 578, 579,
	580, 581, 583, 585, 589, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 530, 277, 278, 279, 280, 575,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 597, 571, 596, 598, 599, 595, 600,
	601, 582, 487, 0, 534, 593, 592, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 560, 539, 540,
	541, 486, 542, 537, 538, 561, 532, 557, 558, 511,
	535, 543, 556, 544, 559, 562, 563, 602, 603, 550,
	604, 547, 564, 555, 554, 545, 533, 565, 566, 518,
	513, 548, 549, 536, 551, 514, 515, 516, 517, 327,
	528, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 1207,
	0, 0, 0, 484, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 519, 0, 0, 319, 273, 0,
	0, 0, 0, 576, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 509, 553,
	552, 496, 505, 0, 0, 215, 154, 497, 0, 504,
	498, 502, 501, 499, 500, 0, 568, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	479, 0, 0, 0, 0, 529, 0, 480, 0, 0,
	524, 506, 507, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 503, 527, 531, 227, 590, 525, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 591, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 0, 0, 0, 350, 0, 0, 574,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	526, 0, 309, 291, 587, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 1208, 1209, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 572,
	287, 0, 0, 586, 567, 569, 570, 573, 577, 578,
	579, 580, 581, 583, 585, 589, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 530, 277, 278, 279, 280,
	575, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 597, 571, 596, 598, 599, 595,
	600, 601, 582, 487, 0, 534, 593, 592, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 560, 539,
	540, 541, 486, 542, 537, 538, 561, 532, 557, 558,
	511, 535, 543, 556, 544, 559, 562, 563, 602, 603,
	550, 604, 547, 564, 555, 554, 545, 533, 565, 566,
	518, 513, 548, 549, 536, 551, 514, 515, 516, 517,
	327, 528, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 519, 0, 0, 319, 273,
	0, 0, 0, 0, 576, 584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	553, 552, 496, 505, 0, 0, 215, 154, 497, 0,
	504, 498, 502, 501, 499, 500, 0, 568, 0, 0,
	0, 0, 0, 0, 468, 481, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 479, 0, 0, 0, 0, 529, 0, 480, 0,
	0, 524, 506, 507, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 503, 527, 531, 227, 590, 525,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 591, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 0, 0, 350, 0, 0,
	574, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 526, 0, 309, 291, 587, 469, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	572, 287, 0, 0, 586, 567, 569, 570, 573, 577,
	578, 579, 580, 581, 583, 585, 589, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 530, 277, 278, 279,
	280, 575, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 597, 571, 596, 598, 599,
	595, 600, 601, 582, 487, 0, 534, 593, 592, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 560,
	539, 540, 541, 486, 542, 537, 538, 561, 532, 557,
	558, 511, 535, 543, 556, 544, 559, 562, 563, 602,
	603, 550, 604, 547, 564, 555, 554, 545, 533, 565,
	566, 518, 513, 548, 549, 536, 551, 514, 515, 516,
	517, 327, 528, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 519, 0, 0, 319,
	273, 0, 0, 0, 0, 576, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	509, 553, 552, 496, 505, 0, 0, 215, 154, 497,
	0, 504, 498, 502, 501, 499, 500, 0, 568, 0,
	0, 0, 0, 0, 0, 0, 481, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 479, 0, 0, 0, 0, 529, 0, 480,
	0, 0, 524, 506, 507, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 503, 527, 531, 227, 590,
	525, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 591, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 0, 0, 350, 0,
	0, 574, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 526, 0, 309, 291, 587, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 572, 287, 0, 0, 586, 567, 569, 570, 573,
	577, 578, 579, 580, 581, 583, 585, 589, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 530, 277, 278,
	279, 280, 575, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 597, 571, 596, 598,
	599, 595, 600, 601, 582, 487, 0, 534, 593, 592,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	560, 539, 540, 541, 486, 542, 537, 538, 561, 532,
	557, 558, 511, 535, 543, 556, 544, 559, 562, 563,
	602, 603, 550, 604, 547, 564, 555, 554, 545, 533,
	565, 566, 518, 513, 548, 549, 536, 551, 514, 515,
	516, 517, 327, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 932, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 1694, 1696, 1697, 1698, 1699, 1700, 1701,
	0, 1705, 1702, 1703, 1704, 286, 0, 1689, 1690, 1691,
	1692, 930, 1675, 1695, 0, 1676, 285, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1693, 297,
	263, 298, 250, 275, 274, 276, 955, 957, 959, 961,
	964, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 1688, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 371, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 954, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 327, 0, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 1759, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 638, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	350, 0, 0, 0, 1756, 0, 1755, 323, 1757, 1760,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	1761, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 640, 0, 635, 0,
	625, 0, 0, 0, 283, 361, 0, 637, 636, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 623, 0, 0, 0, 629, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 634,
	0, 0, 0, 633, 0, 0, 0, 0, 0, 622,
	0, 0, 0, 628, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	626, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 627,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 327, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1517, 0, 639,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 1518, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 829, 830, 831, 828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 0, 337,
	365, 227, 356, 0, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 380,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 366, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 327, 0, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 708, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 716, 717, 0, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 690, 348, 210, 689, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	706, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	707, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 710, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 718, 713, 714, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 0, 194, 195, 196, 197, 149, 327, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 259, 0,
	0, 0, 101, 0, 0, 319, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 1539, 0, 153, 0, 0, 0,
	0, 0, 0, 215, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 0, 337, 365, 227, 356, 0, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 380, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 366, 0,
	309, 291, 0, 0, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 361,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 371, 277, 278, 279, 280, 244, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 115, 301, 239, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 0, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 0, 194, 195, 196, 197, 149, 327,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 101, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 1530, 0, 153, 0,
	0, 0, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 0, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 115, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	149, 327, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 101, 0, 0, 319,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1463, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 215, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 0, 337, 365, 227, 356,
	0, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 380, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 366, 0, 309, 291, 0, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 361, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 371, 277, 278,
	279, 280, 244, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 115, 301, 239,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 0, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 0, 194, 195,
	196, 197, 327, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 716, 717, 0, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 0, 337, 365, 227,
	356, 690, 348, 210, 689, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 380, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 366, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 371, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 718, 713, 714, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 327, 0, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 2086, 0, 0, 2085, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 0,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 327, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 1097, 0, 259, 0, 0, 0, 0,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 1095, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1093, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 0, 337,
	365, 227, 356, 0, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 380,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 366, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 327, 0, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 1091, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 1095, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 0, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 371, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 0, 194, 195, 196, 197, 327, 0, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2700, 0, 153, 553, 0, 0, 0,
	0, 0, 215, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	0, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 327, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 319, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 1095,
	0, 0, 0, 215, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2424, 0,
	0, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 0, 337, 365, 227, 356, 0, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 380, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 366, 0,
	309, 291, 0, 0, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 361,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 371, 277, 278, 279, 280, 244, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 0, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 0, 194, 195, 196, 197, 327, 0,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 319, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	1095, 0, 0, 0, 215, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1093,
	0, 0, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 0, 337, 365, 227, 356, 0, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 380, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 366,
	0, 309, 291, 0, 0, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	361, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 371, 277, 278, 279, 280, 244,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 0,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 0, 194, 195, 196, 197, 327,
	0, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 1823, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 0, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	327, 0, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 1840,
	0, 259, 0, 0, 0, 0, 0, 0, 319, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 1095, 0, 0, 0, 215, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 0, 337, 365, 227, 356, 0,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 380, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 366, 0, 309, 291, 0, 0, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 361, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 371, 277, 278, 279,
	280, 244, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 0, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 0, 194, 195, 196,
	197, 327, 0, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 319,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2778, 0,
	153, 0, 0, 0, 0, 0, 0, 215, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 0, 337, 365, 227, 356,
	0, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 380, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 366, 0, 309, 291, 0, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 361, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 371, 277, 278,
	279, 280, 244, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 0, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 0, 194, 195,
	196, 197, 327, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 553, 0, 0, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 0, 337, 365, 227,
	356, 0, 348, 210, 0, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 380, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 366, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 371, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 327, 0, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2715,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 0,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 327, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 0, 337,
	365, 227, 356, 0, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 380,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 2656, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 366, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 327, 0, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2501, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 0, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 371, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 0, 194, 195, 196, 197, 327, 0, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 215, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	0, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 2544, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 327, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 319, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 215, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 0, 337, 365, 227, 356, 0, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 380, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 366, 0,
	309, 291, 0, 0, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 361,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 371, 277, 278, 279, 280, 244, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 0, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 0, 194, 195, 196, 197, 327, 0,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 319, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1463, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 215, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 0, 337, 365, 227, 356, 0, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 380, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 366,
	0, 309, 291, 0, 0, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	361, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 371, 277, 278, 279, 280, 244,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 0,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 0, 194, 195, 196, 197, 327,
	0, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 0, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	327, 0, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 319, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 2224, 0, 0, 0, 215, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 0, 337, 365, 227, 356, 0,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 380, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 366, 0, 309, 291, 0, 0, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 361, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 371, 277, 278, 279,
	280, 244, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 0, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 0, 194, 195, 196,
	197, 327, 0, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 319,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 215, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 0, 337, 365, 227, 356,
	0, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 380, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 366, 0, 309, 291, 0, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 361, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 371, 277, 278,
	279, 280, 244, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 0, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 0, 194, 195,
	196, 197, 327, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 1095, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 0, 337, 365, 227,
	356, 0, 348, 210, 0, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 380, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 366, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 371, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 327, 0, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 1823, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 0,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 327, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 0, 337,
	365, 227, 356, 0, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 380,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 366, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 327, 0, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 0, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 371, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 0, 194, 195, 196, 197, 327, 0, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 1853, 0,
	0, 0, 215, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	0, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 0, 0, 0,
	358, 359, 360, 381, 344, 327, 231, 0, 0, 1725,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 0, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 371, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 0, 194, 195, 196, 197, 327, 0, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 1095, 0,
	0, 0, 215, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	0, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 1391, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 327, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 319, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 215, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 0, 337, 365, 227, 356, 0, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 380, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 1118, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 366, 0,
	309, 291, 0, 0, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 361,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 371, 277, 278, 279, 280, 244, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 0, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 0, 194, 195, 196, 197, 327, 0,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 319, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 215, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 0, 337, 365, 227, 356, 0, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 380, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 366,
	0, 309, 291, 0, 0, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	361, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 371, 277, 278, 279, 280, 244,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 0,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 0, 194, 195, 196, 197, 327,
	0, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 0, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 422, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 423, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	327, 0, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 319, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 215, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 0, 337, 365, 227, 356, 0,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 380, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 366, 0, 309, 291, 0, 0, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 361, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 371, 277, 278, 279,
	280, 244, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 0, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 0, 194, 195, 196,
	197, 327, 0, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 234,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 319,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 215, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 0, 337, 365, 227, 356,
	0, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 380, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 366, 0, 309, 291, 0, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 361, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 371, 277, 278,
	279, 280, 244, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 0, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 0, 194, 195,
	196, 197, 327, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 0, 337, 365, 227,
	356, 0, 348, 210, 0, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 380, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 366, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 371, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 327, 0, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 463, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 1447, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 1449, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 0,
	0, 652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1429, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 149, 379, 41, 137,
	114, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 142, 0, 0, 0,
	0, 0, 0, 130, 0, 0, 0, 143, 0, 193,
	0, 0, 101, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 0, 0,
	0, 0, 0, 146, 0, 0, 200, 0, 260, 0,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 0, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 1422, 690, 0, 1421, 689, 0,
	0, 0, 1433, 0, 0, 138, 139, 0, 140, 141,
	0, 0, 0, 1437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 675, 1426, 0, 0, 0, 1428, 1430, 1432,
	653, 1434, 1435, 1436, 1438, 1439, 1440, 1442, 1443, 1444,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 680, 0, 0,
	0, 1447, 0, 113, 136, 147, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1448,
	0, 0, 0, 0, 0, 135, 129, 128, 0, 0,
	0, 0, 47, 0, 0, 1449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1446, 674, 673, 1447,
	0, 0, 2795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1429, 1425, 672, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 0, 0, 0, 0, 0, 0,
	131, 132, 133, 1449, 654, 683, 0, 0, 0, 0,
	0, 0, 1441, 0, 0, 0, 0, 0, 0, 1431,
	0, 0, 0, 0, 0, 0, 144, 0, 678, 1447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1429, 0, 0, 0, 96, 0, 0, 0, 134, 0,
	97, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 684, 0, 1449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 669, 0, 667,
	671, 687, 0, 0, 0, 668, 665, 664, 0, 670,
	655, 656, 657, 658, 659, 660, 0, 685, 686, 1770,
	1429, 0, 0, 98, 0, 0, 0, 0, 0, 681,
	682, 0, 0, 40, 0, 0, 0, 0, 0, 0,
	0, 442, 1433, 441, 448, 438, 0, 0, 0, 0,
	0, 0, 0, 1437, 0, 445, 446, 0, 447, 451,
	0, 0, 433, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 456, 1426, 0, 0, 0, 1428, 1430, 1432,
	42, 1434, 1435, 1436, 1438, 1439, 1440, 1442, 1443, 1444,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1433, 460, 0, 0, 462, 0, 0, 0, 0, 461,
	0, 1437, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1448,
	0, 1426, 0, 0, 0, 1428, 1430, 1432, 0, 1434,
	1435, 1436, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1433, 0, 0, 0, 0, 0, 1446, 99, 100, 34,
	104, 1437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1425, 0, 0, 0, 1448, 0, 0,
	0, 1426, 0, 0, 0, 1428, 1430, 1432, 0, 1434,
	1435, 1436, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 0,
	0, 0, 1441, 442, 0, 441, 448, 438, 0, 1431,
	0, 0, 0, 0, 1446, 0, 0, 445, 446, 0,
	447, 451, 0, 0, 433, 0, 0, 0, 434, 436,
	435, 1425, 0, 0, 456, 0, 0, 1448, 440, 0,
	0, 442, 0, 441, 448, 438, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 445, 446, 459, 447, 451,
	1441, 0, 433, 460, 437, 0, 462, 1431, 428, 0,
	0, 461, 456, 0, 1446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1441, 0, 0, 0, 0, 0, 0, 1431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 439, 443, 449, 0, 450, 452, 0,
	0, 453, 454, 455, 0, 0, 457, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 436, 435, 0, 0, 0, 0, 0, 0, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 437, 0, 434, 436,
	435, 0, 0, 0, 0, 0, 0, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 439, 443, 449, 0, 450,
	452, 0, 0, 453, 454, 455, 0, 0, 457, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 439, 443, 449, 0, 450, 452, 0,
	0, 453, 454, 455, 0, 0, 457, 458,
}

var yyPact = [...]int{
	31786, -1000, -329, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 30851, -1000, -1000, -1000, -1000, -1000,
	-327, 30330, 30330, -1000, -1000, 1709, -1000, 29809, 2968, 30851,
	208, 205, 30851, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 431, -1000, 29288, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 398, 32191, 31372, 8437,
	30851, -300, -1000, 2298, -153, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 11152, 456, 28767, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 31745, 127, 456, 539, 546,
	642, 642, 12084, -56, -57, 2298, 260, 123, -1000, 837,
	31786, 2009, 1073, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1642,
	371, 30851, -1000, 1072, 371, -1000, -1000, -1000, 2298, 2298,
	-1000, 30851, 30851, -5, 1177, -1000, 250, 225, 244, 1067,
	-1000, -1000, -1000, -1000, -1000, 2328, -1000, 30851, 30851, 2019,
	30851, -1000, 1348, 341, 32363, 2180, 845, 544, 2060, -1000,
	-1000, 2008, -1000, 107, 128, 66, 451, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 152, -1000, 2266, -1000, -1000, 90,
	-1000, -1000, 105, -1000, -1000, -1000, -62, -1000, -1000, -1000,
	-1000, -1000, -1000, -163, -1000, -1000, 599, 1199, 8437, -1000,
	1373, -1000, 2714, -1000, -1000, -1000, -1000, 5822, 10000, 10000,
	10000, 10000, -1000, -1000, 1888, 8437, 2005, 2004, -1000, -1000,
	-1000, -1000, -1000, 1066, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1639, 9479, -1000, 2003,
	1996, 1994, 1992, 1991, 1974, 1972, 1971, 1969, 1968, 1967,
	1962, 1959, 1953, 1785, 1872, 1952, 1630, 1626, 1951, 1949,
	1947, 1614, 1785, 1785, 1946, 1945, 1943, 1939, 1937, 1936,
	1935, 1931, 1929, 1927, 1924, 1919, 1918, 1915, 1914, 1912,
	1911, 1909, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3388, -1000, 1061, 953, -1000,
	1899, 2173, 2277, 1820, 2311, 2258, 2253, 2248, 2246, 1453,
	-1000, -1000, 30851, 30851, 30851, 394, 394, 394, 394, 394,
	415, 394, 430, 427, 425, 394, -1000, -1000, -1000, -1000,
	-1000, -1000, 497, -1000, -1000, -1000, -1000, 922, 30851, -1000,
	1843, 1120, 2273, 357, 346, 253, -1000, 1245, 1245, 1245,
	1245, 1120, 266, 339, 2277, 2277, -99, 1245, -87, 1120,
	1120, -87, 1120, 1120, 1120, 95, -1000, -1000, -1000, 1245,
	345, 1245, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2261,
	2257, 398, 30851, 34, 30851, 398, 398, 400, -1000, -178,
	-1000, -1000, 528, -1000, 525, -1000, 1348, 335, 331, 942,
	1210, -1000, 1138, 30851, 30851, 30851, 1138, 1138, 15734, 15213,
	-1000, 30851, -1000, 2277, 1820, -1000, 1768, 1702, 1761, 1820,
	398, 398, 398, 398, 398, 398, 398, 398, 30851, 30851,
	28246, 398, 7385, 7385, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8437, 30851, 2174, 255, 1898, -1000, 30851, 226,
	2277, 2173, 2277, -1000, -1000, 1060, 1445, 1606, -1000, -1000,
	250, 1115, -1000, 622, -1000, -1000, -1000, -1000, 30851, 230,
	-1000, -1000, 1598, 1896, -1000, 367, 783, 986, -1000, 60,
	32401, 24591, 1348, 24591, 30851, -1000, -1000, -1000, -1000, -1000,
	-1000, -69, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 89, -1000, 8437, 8437, 8437,
	8437, 8437, -1000, 435, 8958, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000,
	10000, 10000, 10000, 10000, 1886, 1162, 10000, 10000, 10000, 10000,
	1702, 2153, 924, 159, -1000, -1000, -1000, -1000, -1000, 1167,
	1199, 8437, 8437, 30851, -1000, 2602, 8437, 8437, 83, 8437,
	2244, 8437, 8437, 8437, 1759, 4258, 30851, 8437, -1000, 1758,
	1756, -1000, -1000, 1304, 8437, 8437, -1000, -1000, 8437, 10000,
	8437, -1000, -1000, -1000, 119, 2244, 2244, 8437, 8437, 2244,
	2244, 2244, 1182, 2244, 2244, 2244, 2244, 2244, 2244, 2244,
	2244, 1755, 30851, 2158, 70, -1000, -1000, -1000, 1786, -1000,
	1841, 1841, 1841, 1841, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1854, 1895, -1000, -1000, 1840, 1840, 1840,
	1786, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1852, 1852, 1853, 1852,
	30851, 2277, -300, 6864, -1000, -309, 2173, 8437, -1000, -1000,
	8437, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1599,
	2222, -1000, 1893, 1892, 1053, 30851, 1155, 30851, 24591, 30851,
	1348, 30851, 30851, 394, 394, 394, 30851, 400, -1000, 30851,
	922, 2216, 30851, 2302, 10000, 10000, 27725, 1245, 1120, -1000,
	30851, -1000, -1000, -1000, 1245, 30851, 1245, 1245, 2302, 1245,
	-1000, -1000, -1000, 1120, 1120, -1000, -1000, -1000, -1000, 1245,
	1245, -1000, -1000, 2302, 30851, -82, 2302, 2302, -71, -1000,
	-1000, -1000, 30851, 30851, 394, 30851, 30851, -1000, 30851, -1000,
	-1000, 30851, 31705, 30851, 30851, 2251, -1000, 24591, 30851, 22507,
	-1000, -138, 537, 530, 534, -1000, -1000, 364, 395, 14171,
	307, 24591, 5300, -1000, -1000, 1138, 1138, 1138, 5300, 5300,
	975, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 916, -1000,
	91, 2173, -1000, -1000, -1000, -1000, -1000, 30851, 30851, 24591,
	1348, 30851, 30851, 30851, 30851, -1000, 1889, -1000, 2179, 30851,
	971, -1000, -1000, 11563, 1045, 971, 1752, 599, -1000, 1594,
	2054, -301, -1000, 13128, 30851, 30851, -1000, -1000, -301, -1000,
	12606, 30851, 2173, -1000, 2173, 30851, -1000, 2272, -1000, 250,
	179, -1000, -1000, -1000, -1000, -1000, -1000, 1043, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 905, -1000, 30851,
	-1000, -1000, 60, 24591, 25633, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 121, -1000, -1000, 141, -1000, 412, 22, 1113,
	-1000, -1000, 54, 138, 444, 1199, -1000, 1190, 1190, 1208,
	-1000, 393, -1000, -1000, -1000, -1000, 1888, -1000, -1000, -1000,
	1570, 1333, -1000, 1206, 1206, 993, 993, 993, 993, 993,
	1230, 1230, -1000, -1000, -1000, 5822, 1886, 10000, 10000, 10000,
	10000, 379, 379, 2902, 3199, -1000, 8437, 1187, -1000, 8437,
	1808, 848, 1041, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1749, 1748, 1508, 2327, 1747, 8437, -1000,
	-1000, 1103, 1095, 1091, -1000, 1482, 7916, -1000, -1000, -1000,
	1744, 1034, 1743, -1000, -1000, -1000, 1735, 1087, 770, 1734,
	1314, 1733, 891, 8437, 8437, 1086, 1085, 8437, 8437, 8437,
	8437, 1707, 8437, 8437, 8437, 8437, 8437, 8437, 8437, 8437,
	-48, -1000, 8437, 65, -1000, -1000, -1000, -1000, 1442, -1000,
	1438, -1000, -1000, -1000, 1592, 1592, -1000, 1437, -1000, -1000,
	-1000, -1000, 1433, -1000, -1000, 1432, -1000, -1000, -1000, -1000,
	1076, -1000, 1199, -1000, 1589, -1000, 955, 884, -1000, 1435,
	-1000, -1000, 30851, 779, 10521, 30851, 1843, 2166, 46, -1000,
	852, -1000, 22, -171, 706, 2017, 2326, 30851, 30851, 30851,
	2214, 27204, -1000, 1884, 1070, -1000, -1000, 8437, -1000, -1000,
	2016, 30851, 30851, 2302, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 30851, 2302, 2302, 1120, 1245, -1000, -1000, 1245, -1000,
	-1000, 1245, -1000, 1021, -1000, 30851, -1000, -1000, -1000, 1843,
	-1000, 11042, 709, 32043, -1000, 1143, 1143, 751, 1143, 1143,
	1143, 1143, 288, 281, 1143, 1143, 1143, 1143, 1143, 1143,
	1143, 1143, 1143, 1143, 1143, 1143, 1143, 1143, 1881, -1000,
	42, 2233, 137, 852, 149, 2198, 708, -1000, -1000, -1000,
	-1000, 17818, 17818, 13650, 17818, -1000, 1127, -1000, -1000, 526,
	524, 509, -1000, -1000, 411, -1000, -1000, 706, -1000, -1000,
	-1000, 1875, 1176, -1000, -1000, 1872, -1000, 5300, 5300, 5300,
	-1000, -1000, 18339, 30851, -1000, -164, -1000, -155, -1000, 861,
	-1000, -1000, 878, 706, 2051, 861, 861, -1000, 10521, 30851,
	-1000, 2302, 7385, -1000, 22507, -1000, -1000, 26675, -1000, 26154,
	2302, -1000, -97, -1000, 2154, 739, -1000, 1871, -1000, 1063,
	2126, -1000, 858, -1000, 1175, 1055, -1000, 739, 1049, 2083,
	858, -1000, -1000, 1012, -11, -1000, -1000, 30851, 1598, 1037,
	25633, 808, -1000, 403, 997, 981, -1000, 24591, 98, 24591,
	-1000, 24591, -1000, -1000, 247, -1000, 30851, 2172, -1000, -1000,
	-1000, 1514, -338, -1000, -1000, -1000, -1000, -1000, 1025, -1000,
	379, 379, 2902, 2966, -1000, 10000, -1000, 10000, 2139, 1141,
	-1000, 8437, 1204, 2692, 664, 17297, 30851, -1000, -1000, 8437,
	8437, -1000, 2112, -1000, -1000, -1000, -1000, 8437, 8437, 1297,
	-1000, 30851, -1000, -1000, -1000, -1000, 17297, -1000, 10000, -1000,
	8437, 931, 2085, -48, -48, 2076, 2072, 2055, 1022, -48,
	2045, 2040, 2028, 1799, 1706, 1701, 1697, 1687, -1000, 1856,
	1199, -1000, -1000, 1705, 1703, 1009, -1000, 1007, 1696, 1004,
	1003, 6864, -1000, -97, 8437, 8437, 8437, 2145, -1000, -1000,
	86, 1695, 853, -1000, -1000, 30851, -1000, -1000, -1000, 1694,
	843, -1000, -1000, -1000, 3558, 1841, 1841, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1854, -1000, -1000, 1840,
	1840, 1840, 1786, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1852, 1852, 1853, 1852, -1000, 2195, -1000, -39,
	1143, 429, 24591, 330, -1000, 30851, 2050, 201, 2142, 30851,
	1849, 1848, 1847, 203, 3558, 30851, 849, -1000, 962, 31786,
	-1000, 30851, 1199, -1000, 1348, -1000, 1120, -1000, 2302, 920,
	-1000, -1000, 2302, 1120, 1120, 1245, 30851, -1000, 2188, -1000,
	-1000, -1000, 3558, 479, -1000, 30851, 1231, 551, 394, 551,
	1229, 1846, -1000, -1000, -1000, 30851, 30851, 30851, 1225, 1220,
	32103, -1000, 1429, -1000, 1428, 1143, 1143, 1427, 1587, 1585,
	1582, 1143, 1143, 1426, 1581, 25112, 1425, 1423, 1422, 1459,
	1547, 545, 1458, 1344, 1341, 30851, 1844, 1496, -39, 1143,
	136, 1169, 429, 1299, 14692, 30851, 22507, 22507, 22507, 22507,
	-1000, 2089, 2088, -1000, 2101, 2092, 2128, 30851, 22507, 1843,
	-1000, 25112, -1000, -1000, -1000, 1702, 983, 2211, 552, 8437,
	-1000, -1000, -1000, 505, 24591, 1545, 307, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 30851, 30851, 1681, -1000, 2317,
	-1000, 834, -1000, -1000, 961, -1000, 2317, -37, -26, 1219,
	-301, 6864, 259, 30851, -301, 30851, 6864, -1000, 30851, 258,
	-301, 30851, 1413, -1000, -1000, -1000, 2320, 24591, 1348, 1106,
	24070, -1000, 87, -1000, 113, 363, 1537, -1000, 418, 80,
	-1000, 1163, 1514, -1000, -1000, -1000, 10000, -1000, -1000, -1000,
	-1000, 1199, 8437, 1680, -1000, 508, 508, 1678, -1000, 1841,
	1841, -1000, 1786, 1840, 1786, 508, 508, 1677, -1000, 1375,
	1667, -1000, 1659, 1637, 8437, -1000, 1676, 2875, 882, -183,
	-48, -1000, -1000, -1000, -48, -48, -48, -48, -1000, -48,
	-48, -48, -48, -48, -48, -48, -48, 372, -1000, -1000,
	-1000, 1536, -1000, -1000, -1000, 1412, -1000, 1409, -1000, -37,
	1199, 1199, -1000, -1000, 2107, 1535, 1534, 779, 3558, 434,
	10521, 2157, 240, 1457, -1000, -1000, 23549, 332, -1000, -1000,
	-1000, 448, 88, 1396, 327, -1000, 30851, 148, 30851, -1000,
	-1000, -1000, -1000, -1000, 2142, -1000, 670, 173, 11042, 11042,
	11042, 190, 1185, -1000, 371, 626, 959, 22507, 30851, -1000,
	21986, 1673, -1000, 706, 2302, -1000, 30851, -1000, 2302, 2302,
	1120, -1000, 240, 2433, -1000, -1000, 30851, 30851, -1000, 30851,
	30851, 394, 8437, -1000, -1000, -1000, 30851, -1000, -1000, -1000,
	-1000, 17297, 17297, -1000, -1000, -1000, -1000, 1532, 1531, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 324, 30851, 982, -1000, 1159, 1457, 23549, 1154, 1520,
	332, -1000, 1519, -1000, 647, 30851, 30851, -1000, 821, -1000,
	1151, 2015, 2048, 2015, -1000, -1000, -1000, -1000, 2073, -1000,
	2056, -1000, -1000, 821, -1000, -1000, -1000, -1000, -1000, 552,
	-1000, 2270, 551, 551, 551, 1672, -1000, 808, 1670, -1000,
	-1000, -1000, -1000, -1000, 2315, 2308, 23028, 2315, -311, -22,
	2305, 2304, 2336, -1000, 1668, 759, -301, -1000, -1000, 739,
	-1000, -1000, -1000, -301, -1000, 739, -1000, -1000, 1348, -1000,
	112, -1000, -1000, -1000, -1000, -1000, -1000, 6, -1000, 30851,
	-1000, 1514, 1513, 79, -1000, 1199, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8437, -1000, -1000, -1000, 1591, -1000, -1000, 8437, 1665,
	1512, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2313, -1000, 2303, -1000, 1656, 1650,
	-311, -1000, -1000, -1000, -1000, -1000, -1000, 3558, -1000, 879,
	-1000, -1000, 1510, 16, -1000, -1000, -1000, 1509, 1499, 1395,
	-1000, -1000, 1327, 964, 30, -1000, -1000, -1000, -1000, -1000,
	-1000, 1299, 30851, 1839, -1000, 1143, 1143, 1143, 30851, 1649,
	758, -1000, 1603, 1575, 374, 1147, 1146, -1000, 1391, 17818,
	22507, 21986, 820, -1000, 957, -1000, -1000, -1000, 2302, -1000,
	-1000, 2302, -1000, -1000, 2433, -1000, -1000, 1239, 10000, -1000,
	-1000, 1497, 16776, 501, 523, 1838, -1000, 254, 2334, -1000,
	1218, 1213, -1000, 30851, -1000, 1831, 2012, 218, 1830, -1000,
	1828, 1827, 30851, 1584, -1000, -1000, -1000, -1000, -1000, -1000,
	316, 963, -1000, 1496, 1495, -1000, 16, 1490, -1000, -1000,
	-1000, 30851, 647, 647, 2313, 30851, 6864, -1000, -1000, 8437,
	1818, -1000, 8437, -1000, -1000, -1000, -1000, -1000, 1806, 2170,
	-1000, -1000, -1000, -1000, -1000, -1000, 8437, 8437, -1000, -1000,
	-313, 1484, -1000, -1000, 2301, 1483, 1467, 30851, -1000, 739,
	739, 706, -1000, -1000, -71, -1000, -1000, -1000, 1557, -1000,
	1522, -48, -1000, 81, 8437, -1000, -1000, -313, -241, -1000,
	-1000, -1000, -1000, 246, -1000, -1000, 143, -1000, -1000, 1322,
	383, -1000, -1000, 647, 20944, 17297, 16776, 1479, -1000, 32103,
	11042, 89, 32103, 570, 1139, -1000, 1345, -1000, 1338, -1000,
	2302, 820, 957, -1000, -1000, 1093, -1000, -1000, -1000, -1000,
	2902, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1317, 1804, -116, -1000, -1000, 1796,
	20944, 185, 185, 20944, 20944, 20944, 1794, 442, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2277, -1000, -1000, 1199,
	30851, 1199, 21465, -1000, 2300, 2299, 1199, 599, -315, 1316,
	-1000, 1474, -25, -1000, -1000, 628, -318, -38, -14, -1000,
	-1000, -1000, 1491, -1000, 3737, -1000, -1000, -1000, 599, -315,
	30851, 337, 1472, -1000, -1000, 142, -1000, -1000, 948, -1000,
	1786, 8437, -1000, -1000, -1000, 368, 32043, -1000, -1000, -71,
	368, 336, 172, -1000, 1307, -1000, -1000, 2313, -1000, 1487,
	8437, 1785, -236, 20944, 947, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 938, 937, 927, 20944, -1000, -1000, -1000, 256,
	-1000, 901, 899, -1000, -1000, -1000, -1000, -1000, 1782, -1000,
	-1000, 2296, -1000, 1471, 396, -35, -14, -1000, 2295, -29,
	2294, 2293, -1000, -1000, 4779, -302, -51, 261, -1000, 2182,
	-1000, -1000, 4, -1000, -1000, -1000, 20944, 2163, 1486, 227,
	2288, -1000, 227, -1000, 199, -1000, 1132, -1000, 1298, -1000,
	2277, -1000, 1336, -1000, 2047, -1000, 73, 887, -1000, -1000,
	-1000, -1000, 886, -1000, -1000, -1000, 20423, 30851, 1467, -1000,
	1781, 1296, -22, -32, 2282, -1000, 1467, 2281, 1467, 1467,
	1193, -1000, -1000, -1000, -1000, -1000, 1469, -1000, 169, -1000,
	-1000, 2163, -1000, 2280, 243, -1000, -1000, -1000, 1291, -1000,
	-1000, 442, -1000, 2046, 2030, 2324, -1000, -1000, -1000, -1000,
	169, 169, 169, 169, 76, -1000, -1000, 857, -1000, -1000,
	2178, 16255, -42, -1000, -1000, -1000, 1468, -1000, 1467, -1000,
	-1000, 4779, -1000, -1000, 1143, 1441, 186, -1000, -1000, -1000,
	19902, 245, 249, 220, -1000, 381, -1000, -1000, -1000, -1000,
	2331, -1000, 2325, 604, 604, -1000, -1000, 30851, -1000, 30851,
	-1000, 854, -1000, -1000, -1000, 946, -1000, -1000, -1000, -1000,
	-1000, 1289, -1000, 30851, -1000, 30851, 237, 1258, 10000, 1778,
	10000, 1777, 251, 1776, -1000, -1000, -1000, 1280, 263, -1000,
	-1000, 582, -1000, 1136, -1000, 19381, 30851, -1000, -1000, 815,
	1770, 2279, -1000, 2834, 30851, 2788, 30851, 1710, 1126, 10000,
	-1000, -1000, -1000, 30851, 6343, -1000, 665, -1000, -1000, 365,
	248, -1000, 813, -1000, 778, 18860, 1248, 2285, -1000, -1000,
	1199, 30851, 754, -1000, 30851, 232, -1000, -1000, -1000, 753,
	-1000, -1000, -1000, -1000, 365, 2079, -1000, 1246, -1000, -1000,
	31985, 490, -1000, -1000, 31985, 231, -1000, 361, 1590, -1000,
	-1000, 736, -1000, 30851, 538, 8437, -1000, 231, 32103, -1000,
	8437, 729, -1000, 32103, 712, -1000, -1000,
}

var yyPgo = [...]int{
	0, 126, 2777, 203, 140, 138, 202, 2776, 2773, 2191,
	2190, 2768, 2763, 2762, 2761, 2760, 2759, 2758, 2756, 2754,
	2752, 2751, 2750, 2746, 2744, 2743, 2742, 2741, 2740, 2739,
	2735, 2734, 2733, 2732, 2731, 200, 2730, 2729, 2727, 2725,
	2723, 2721, 2720, 2719, 2718, 2717, 2715, 2713, 2712, 2711,
	2708, 2707, 2706, 2702, 2699, 2697, 2692, 2691, 2690, 2689,
	2687, 2686, 2685, 135, 2683, 2173, 2680, 2679, 2678, 2677,
	2676, 2675, 2672, 172, 2671, 2670, 2669, 2668, 2667, 2663,
	2661, 2660, 2659, 2658, 2656, 2654, 2653, 2651, 2649, 2648,
	2647, 147, 2646, 2645, 145, 2644, 2643, 2642, 2641, 2640,
	195, 183, 52, 2639, 38, 2636, 2633, 2631, 2630, 2629,
	67, 2622, 2621, 120, 177, 207, 1833, 209, 204, 151,
	134, 66, 2620, 2192, 2619, 259, 187, 127, 20, 2618,
	130, 2617, 117, 34, 32, 205, 100, 40, 129, 90,
	2616, 176, 69, 2615, 80, 2614, 2612, 206, 152, 2611,
	91, 2609, 2606, 2603, 2602, 162, 158, 2601, 2600, 92,
	2599, 2597, 103, 2596, 51, 2595, 122, 186, 89, 84,
	2594, 2592, 2591, 79, 2590, 2588, 2585, 2584, 142, 2583,
	2582, 108, 65, 2580, 2579, 2578, 47, 189, 57, 2576,
	54, 2575, 2574, 2573, 2572, 55, 2571, 2570, 14, 19,
	21, 2569, 18, 2568, 2567, 1, 2565, 175, 82, 74,
	113, 2562, 379, 2561, 2560, 2559, 111, 2557, 429, 2556,
	2553, 2551, 2550, 2549, 22, 2546, 164, 39, 2545, 72,
	104, 94, 168, 160, 2544, 2543, 2541, 192, 70, 46,
	0, 2540, 123, 2539, 2537, 2535, 208, 2534, 194, 159,
	190, 114, 219, 137, 2533, 2532, 61, 2531, 115, 68,
	98, 7, 2530, 171, 2527, 617, 161, 2526, 170, 2525,
	131, 2, 112, 2521, 2519, 33, 227, 2518, 2516, 2515,
	88, 2514, 2513, 96, 95, 2512, 2511, 2509, 30, 2507,
	28, 26, 2506, 78, 2505, 198, 2504, 167, 110, 144,
	125, 119, 179, 188, 58, 56, 2503, 699, 107, 73,
	24, 2502, 185, 2500, 214, 184, 2499, 156, 2498, 201,
	323, 165, 2496, 150, 8, 36, 27, 2495, 9, 2492,
	109, 166, 2490, 2488, 16, 2486, 17, 2485, 2483, 2482,
	2477, 4, 2472, 2470, 2469, 3, 6, 2468, 5, 178,
	2467, 2466, 2465, 2464, 37, 154, 2462, 93, 182, 2460,
	2459, 71, 2457, 2456, 2455, 677, 2449, 2448, 2437, 2436,
	2435, 2434, 2432, 2431, 2430, 2429, 76, 41, 2428, 2427,
	2426, 2425, 62, 105, 2424, 2422, 2421, 2420, 29, 128,
	2419, 15, 2418, 25, 23, 31, 2417, 97, 2416, 12,
	155, 2415, 2400, 13, 2399, 2398, 10, 11, 2394, 2393,
	86, 2392, 64, 44, 124, 81, 2391, 60, 174, 106,
	2390, 2388, 197, 199, 169, 2387, 132, 193, 213, 2386,
	173, 2383, 2382, 2381, 2379, 2378, 2375, 711, 2373, 2372,
	196, 45, 63, 83, 2371, 2370, 2369, 59, 118, 85,
	77, 163, 2368, 157, 2366, 2365, 75, 2364, 2363, 2362,
	2361, 2360, 153, 2357, 2356, 2355, 191, 149, 2352,
}

//line mysql_sql.y:9065
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 461, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 98, 459, 459, 459, 460,
	460, 95, 96, 84, 97, 409, 409, 408, 408, 407,
	407, 362, 362, 406, 406, 406, 405, 405, 405, 404,
	404, 403, 403, 402, 402, 400, 400, 401, 399, 398,
	398, 398, 396, 396, 396, 392, 392, 394, 393, 393,
	395, 387, 387, 390, 390, 388, 388, 388, 388, 391,
	386, 386, 386, 385, 385, 83, 83, 83, 309, 309,
	82, 82, 323, 323, 323, 323, 323, 321, 321, 321,
	321, 321, 321, 320, 320, 319, 319, 324, 324, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 74,
	74, 74, 74, 77, 77, 77, 78, 318, 318, 318,
	75, 76, 76, 308, 308, 313, 313, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 317,
	317, 317, 315, 315, 314, 314, 316, 316, 68, 68,
	68, 71, 70, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 69, 69, 69, 69, 69, 69, 64, 64,
	64, 64, 64, 63, 63, 65, 65, 305, 305, 304,
	79, 79, 80, 463, 463, 462, 464, 464, 464, 464,
	81, 87, 87, 87, 87, 87, 87, 87, 86, 86,
	89, 89, 88, 90, 73, 73, 73, 73, 73, 72,
	72, 72, 72, 72, 72, 72, 72, 72, 433, 433,
	433, 435, 435, 244, 245, 465, 247, 243, 243, 243,
	429, 429, 430, 431, 432, 432, 432, 85, 7, 7,
	7, 7, 7, 7, 62, 67, 203, 203, 203, 204,
	204, 204, 204, 204, 60, 66, 66, 446, 446, 61,
	453, 453, 365, 365, 258, 258, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 369, 370, 254, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	42, 41, 41, 41, 294, 294, 40, 466, 466, 233,
	233, 50, 51, 52, 53, 54, 55, 56, 39, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 59, 59,
	381, 381, 468, 468, 468, 57, 58, 364, 364, 364,
	48, 47, 46, 45, 44, 44, 38, 38, 37, 37,
	43, 108, 109, 251, 251, 251, 253, 253, 249, 467,
	467, 336, 336, 252, 252, 36, 36, 36, 36, 250,
	250, 232, 248, 248, 248, 8, 8, 6, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	19, 20, 22, 302, 302, 299, 21, 14, 13, 16,
	12, 15, 17, 18, 18, 5, 5, 5, 5, 9,
	9, 10, 120, 120, 168, 168, 441, 441, 437, 437,
	438, 438, 438, 439, 439, 440, 440, 91, 375, 375,
	375, 375, 375, 375, 4, 143, 143, 142, 142, 374,
	374, 374, 374, 374, 374, 306, 306, 418, 418, 418,
	419, 141, 141, 136, 136, 376, 376, 272, 420, 420,
	384, 384, 383, 383, 382, 382, 139, 139, 140, 140,
	123, 123, 101, 101, 389, 389, 389, 389, 397, 397,
	361, 361, 195, 195, 227, 227, 228, 228, 113, 113,
	114, 114, 114, 114, 114, 114, 426, 426, 428, 428,
	427, 138, 138, 134, 134, 135, 135, 135, 133, 133,
	132, 131, 131, 130, 128, 128, 128, 129, 129, 129,
	116, 116, 116, 115, 115, 115, 115, 115, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	117, 117, 434, 434, 434, 366, 366, 366, 372, 372,
	209, 209, 210, 210, 208, 208, 118, 118, 119, 119,
	119, 119, 207, 207, 206, 121, 121, 127, 126, 126,
	122, 122, 122, 122, 217, 217, 216, 216, 216, 216,
	94, 99, 99, 100, 146, 146, 215, 214, 214, 214,
	145, 145, 144, 144, 137, 137, 125, 125, 125, 125,
	213, 124, 211, 458, 458, 457, 457, 456, 454, 454,
	454, 455, 455, 455, 455, 411, 411, 411, 411, 411,
	238, 238, 238, 242, 242, 241, 241, 241, 241, 241,
	246, 3, 3, 3, 3, 3, 26, 26, 26, 26,
	26, 26, 26, 26, 32, 154, 155, 33, 156, 156,
	157, 157, 158, 158, 159, 160, 161, 161, 161, 161,
	31, 147, 147, 148, 148, 149, 149, 150, 151, 151,
	151, 153, 152, 30, 23, 442, 445, 443, 443, 447,
	447, 447, 448, 448, 448, 449, 449, 24, 105, 110,
	110, 107, 112, 112, 112, 112, 112, 106, 444, 450,
	450, 450, 303, 303, 300, 301, 301, 298, 297, 297,
	297, 452, 452, 451, 451, 451, 239, 239, 25, 293,
	293, 295, 296, 296, 296, 287, 287, 287, 287, 29,
	291, 291, 292, 292, 292, 292, 292, 288, 288, 290,
	290, 286, 286, 286, 286, 286, 28, 111, 111, 285,
	285, 283, 283, 281, 281, 282, 282, 280, 280, 280,
	284, 284, 27, 27, 27, 103, 102, 102, 102, 230,
	230, 229, 229, 104, 34, 180, 180, 350, 350, 350,
	350, 350, 368, 368, 368, 351, 351, 351, 352, 352,
	352, 353, 353, 353, 353, 353, 367, 367, 325, 325,
	326, 326, 326, 329, 329, 342, 342, 343, 343, 341,
	341, 348, 348, 347, 347, 346, 346, 345, 345, 344,
	344, 344, 344, 339, 339, 338, 338, 327, 327, 327,
	327, 327, 328, 328, 328, 337, 337, 340, 340, 186,
	186, 187, 187, 187, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 416, 416, 417, 189, 189, 189, 193,
	193, 193, 193, 193, 193, 188, 188, 190, 190, 169,
	169, 167, 167, 162, 162, 163, 163, 164, 164, 165,
	165, 166, 166, 166, 166, 166, 166, 311, 311, 414,
	414, 415, 415, 410, 410, 410, 413, 413, 413, 413,
	413, 412, 412, 170, 225, 225, 225, 240, 240, 240,
	240, 224, 224, 224, 185, 185, 184, 184, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 310, 310, 255, 255, 256, 256, 202,
	201, 201, 201, 201, 201, 199, 200, 198, 198, 198,
	198, 198, 197, 197, 196, 196, 196, 289, 289, 194,
	194, 192, 192, 192, 191, 191, 191, 349, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 223, 264, 264, 269, 269, 425, 425, 424,
	171, 171, 171, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 181, 181, 181, 334, 334, 334, 334, 334,
	335, 335, 335, 332, 332, 333, 333, 273, 274, 274,
	373, 373, 330, 330, 331, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 380, 380, 380, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 436, 436, 436, 421, 421, 421, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 221, 221, 221, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 275, 275, 276, 276, 377, 377, 377, 377,
	377, 377, 378, 378, 379, 379, 379, 379, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 262, 218, 218,
	218, 277, 270, 270, 271, 271, 265, 265, 265, 265,
	265, 265, 265, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 266, 266, 268, 268, 279,
	279, 279, 278, 278, 278, 278, 278, 278, 278, 183,
	183, 183, 183, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 173, 173, 173, 173, 177, 177,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 178, 178, 178, 178, 176, 176,
	176, 176, 176, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 92,
	93, 93, 175, 226, 226, 354, 354, 357, 357, 355,
	355, 356, 358, 358, 358, 359, 359, 359, 360, 360,
	360, 363, 363, 231, 231, 231, 237, 237, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 4, 0, 1, 1, 0,
	1, 5, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 7, 4, 2, 2, 1, 2,
	2, 2, 3, 2, 7, 7, 8, 0, 4, 7,
	0, 3, 0, 2, 0, 1, 1, 1, 1, 4,
	2, 2, 3, 3, 4, 5, 3, 4, 4, 2,
	2, 2, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 5, 0, 2, 7, 0, 1, 0,
	1, 5, 3, 2, 4, 4, 4, 4, 4, 1,
	1, 1, 3, 2, 3, 1, 1, 1, 6, 8,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 4, 1, 3, 1, 4, 6, 4, 4,
	4, 3, 6, 3, 5, 1, 1, 2, 2, 11,
	8, 9, 1, 3, 2, 4, 0, 2, 0, 1,
	1, 1, 1, 0, 1, 0, 1, 4, 2, 1,
	5, 4, 4, 2, 5, 0, 2, 1, 3, 2,
	1, 5, 4, 4, 2, 0, 5, 0, 1, 3,
	3, 1, 3, 1, 3, 1, 3, 4, 0, 1,
	0, 1, 1, 3, 1, 1, 0, 4, 1, 3,
	2, 1, 0, 8, 0, 4, 7, 4, 0, 2,
	0, 2, 0, 2, 0, 4, 1, 3, 1, 1,
	4, 3, 4, 5, 4, 5, 2, 3, 1, 3,
	6, 0, 3, 0, 1, 2, 4, 4, 0, 1,
	3, 1, 3, 3, 0, 1, 1, 0, 2, 2,
	3, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	4, 1, 3, 4, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 3, 2, 3,
	1, 4, 3, 0, 1, 1, 2, 5, 2, 2,
	2, 0, 2, 3, 3, 0, 1, 3, 1, 3,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 7, 1, 1, 7, 1, 3,
	0, 1, 1, 3, 1, 3, 0, 1, 1, 1,
	12, 1, 3, 0, 1, 1, 3, 1, 1, 2,
	4, 1, 1, 7, 7, 1, 4, 1, 1, 3,
	4, 3, 0, 1, 1, 0, 2, 7, 8, 0,
	2, 6, 0, 2, 2, 3, 3, 4, 1, 0,
	2, 2, 1, 3, 2, 1, 3, 2, 1, 3,
	2, 0, 1, 3, 4, 3, 1, 1, 4, 1,
	3, 1, 1, 1, 1, 0, 1, 1, 1, 11,
	0, 2, 3, 2, 3, 1, 1, 1, 3, 3,
	4, 0, 2, 2, 2, 2, 6, 0, 4, 1,
	1, 0, 3, 0, 1, 1, 2, 4, 4, 4,
	0, 1, 11, 9, 11, 2, 2, 4, 5, 1,
	3, 0, 3, 5, 10, 0, 2, 0, 3, 2,
	4, 3, 0, 2, 1, 0, 2, 3, 0, 2,
	3, 0, 3, 2, 4, 3, 0, 1, 0, 6,
	0, 3, 5, 0, 4, 0, 3, 1, 3, 4,
	5, 0, 3, 1, 3, 2, 3, 1, 2, 0,
	4, 6, 5, 0, 2, 0, 2, 4, 5, 4,
	5, 1, 5, 6, 5, 0, 3, 0, 1, 0,
	1, 1, 3, 2, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 4, 1, 3, 3, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 1, 2,
	1, 7, 7, 7, 7, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 4, 1, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 6, 6, 1, 1, 1,
	1, 1, 4, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 2, 5, 0, 1, 3, 0, 1,
	0, 2, 0, 1, 6, 8, 6, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 6, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 4, 4, 4, 3, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 4, 6, 2, 2, 4, 6,
	4, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -461, -2, -1, -95, -3, -96, -4, -91, -5,
	-6, -8, -72, -86, -88, -90, -89, -35, -7, -85,
	-63, -64, -68, -74, -79, -82, -83, -84, -97, -92,
	-93, -94, -113, -98, 543, -26, -25, -24, -23, -105,
	407, 12, 454, -9, -10, -426, -11, 236, -243, -244,
	-245, -247, -465, -36, -37, -38, -44, -45, -46, -47,
	-48, -57, -58, -59, -39, -40, -41, -42, -50, -51,
	-52, -53, -54, -55, -56, -43, -108, -109, -61, -60,
	-66, -62, -67, -107, 211, -65, 61, -69, -70, -71,
	-75, -76, -77, -78, -80, -81, 338, 344, 397, 541,
	542, 46, -114, -116, 544, -27, -28, -29, -30, -31,
	-32, -34, -33, 207, 14, 487, -12, -15, -13, -16,
	-14, -21, -22, -20, -17, -19, -106, -18, 231, 230,
	37, 294, 295, 296, 342, 229, 208, 13, 139, 140,
	142, 143, 30, 41, 320, -115, 67, 209, -117, 10,
	546, -156, -240, 70, 78, -234, -236, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 457, 528, 529, 530, 531, 318, 319,
	484, 248, 272, 368, 275, 282, 139, 158, 152, 180,
	172, 147, 252, 287, 253, 77, 142, 440, 88, 419,
	394, 145, 267, 269, 271, 274, 254, 168, 163, 266,
	250, 541, 161, 255, 39, 256, 185, 257, 258, 489,
	415, 317, 421, 279, 392, 162, 416, 270, 418, 187,
	191, 432, 344, 156, 157, 423, 434, 184, 228, 42,
	486, 240, 435, 189, 183, 179, 443, 283, 281, 182,
	155, 178, 251, 50, 193, 192, 194, 388, 389, 390,
	391, 259, 260, 332, 431, 175, 164, 322, 148, 22,
	438, 235, 420, 345, 261, 276, 284, 188, 190, 242,
	247, 488, 396, 246, 280, 436, 160, 239, 268, 234,
	439, 149, 338, 347, 262, 143, 273, 433, 442, 49,
	360, 154, 146, 225, 140, 244, 249, 11, 263, 264,
	265, 286, 285, 277, 176, 241, 181, 166, 153, 177,
	141, 243, 441, 361, 539, 320, 377, 174, 171, 245,
	218, 437, 422, 144, 381, 362, 169, 288, 535, 536,
	537, 333, 316, 289, 290, 167, 232, 413, 414, 291,
	293, 387, 309, 363, 395, 369, 364, 200, 297, 425,
	186, 538, 298, 299, 300, 417, 301, 302, 303, 545,
	-123, 38, -167, -240, -123, -65, -10, -9, -115, -116,
	-167, 215, -248, 23, 392, -73, 393, 211, 67, -240,
	-5, -4, -91, -63, -113, -246, -240, 294, 294, -246,
	215, -240, 246, 376, -365, 221, -320, -293, 247, -319,
	-295, -322, -296, 31, 207, 209, 208, 243, 14, 342,
	217, 12, 10, 343, 229, 24, 25, 27, 13, 344,
	346, 28, 347, 350, 351, 352, 41, 355, 356, 236,
	70, 78, 73, 254, -155, -240, -271, -265, 95, 237,
	-267, -260, -261, -263, -406, -400, -259, 67, 121, 122,
	129, 96, -262, -349, 35, 98, 494, 455, -219, -220,
	-221, -222, -223, -240, -401, -399, 73, 79, 82, 85,
	86, 84, 83, 165, 81, 74, 133, 134, -116, 70,
	-421, 502, -235, 523, 528, 529, 530, 531, 522, 46,
	-371, -379, 214, -377, 132, 170, 232, 166, 12, 127,
	387, 167, 499, 519, 457, 503, 526, 496, 497, 491,
	492, 493, 495, 504, 506, 518, -380, 514, 524, 525,
	512, 527, 72, 71, 517, 516, 505, 500, 501, 507,
	490, 498, 508, 509, 515, 520, 521, 326, 88, 327,
	328, 447, 321, 329, 221, 392, 55, 330, 331, 332,
	333, 334, 454, 335, 56, 336, 325, 236, 377, 337,
	169, 186, 459, 458, 460, 451, 448, 446, 449, 450,
	452, 453, 510, 511, 513, -316, -314, -240, -99, -100,
	533, -132, -133, -212, 19, 6, 7, 8, 9, -459,
	394, 488, 297, 242, 339, 218, 318, 377, 301, 246,
	-287, -285, -367, 291, 287, 216, 226, 225, 89, 447,
	214, 353, -437, -438, 204, 205, 206, -428, 480, -427,
	-240, 328, 26, 215, 339, 425, 426, 427, 428, 429,
	430, -49, -381, -364, 422, 421, -252, 414, 420, 412,
	424, 415, 319, 303, 302, 207, 481, -231, 363, 395,
	242, 444, 445, 340, 396, 432, 433, 416, 88, 173,
	170, 218, 215, 318, 447, 377, 301, -437, 144, 141,
	-307, 144, 94, 149, 148, -307, 246, 376, 40, -313,
	387, -312, -314, 432, 433, 443, 71, 72, 431, -231,
	88, 413, 413, -133, -212, -132, -114, -116, -94, -426,
	216, 318, 377, 246, 217, 215, 218, 447, 294, 339,
	242, 301, -366, -434, 31, -372, 201, 202, 203, 32,
	33, -1, 67, 135, 73, -139, 238, -167, 135, -139,
	-133, -132, -133, -167, -224, -240, 394, 104, -73, -73,
	393, -429, -430, -431, -433, 211, 393, 392, 135, 15,
	-246, -246, 65, -167, -295, 246, -320, -293, 35, 64,
	136, 219, 136, 64, 67, 340, 318, 377, 341, 447,
	215, 353, 218, 246, 354, 318, 377, 215, 218, 447,
	246, 318, 215, 218, 377, 246, 354, 412, 413, 218,
	26, 345, 348, 349, 413, -385, 443, 136, 94, 91,
	92, 93, -265, 111, -278, 104, 105, 106, 107, 108,
	109, 110, 118, 117, 128, 121, 122, 123, 124, 125,
	126, 127, 119, 120, 114, 95, 112, 116, 113, 97,
	-116, -265, -271, 46, -263, -263, -263, -263, -349, -269,
	-265, 67, 67, 135, 73, -265, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, -378, 67,
	67, -275, -276, 67, 67, 67, 73, 73, 67, 67,
	67, 73, -276, -276, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 136, -173, -177, -174, -176, -175, -179, -178,
	170, 171, 132, 174, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 30, 186, 232, 166, 167, 168,
	169, 187, 152, 172, 485, 195, 153, 196, 154, 197,
	155, 198, 156, 157, 199, 158, 161, 162, 163, 160,
	135, -133, 136, 67, -101, 38, -135, 21, -117, -116,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 79,
	-154, -240, -156, -147, -240, -283, 221, -283, -283, -283,
	-283, 217, -283, 215, 215, 215, -283, -439, 151, 136,
	-428, -138, 67, -251, 112, 116, 23, 244, 244, 281,
	-466, -467, 15, 114, -249, -467, -249, -249, -251, -468,
	217, 423, 42, 245, 244, -134, -135, -134, 417, 413,
	-336, 418, 419, -253, -467, -252, -251, -251, -252, -251,
	-251, -251, 215, 218, 447, 301, -466, 244, -466, 30,
	30, -365, -167, -365, 481, -232, -240, -365, -365, -440,
	220, 436, 487, 147, 148, 149, -295, 246, 246, 136,
	104, 23, -315, 104, 115, -314, -314, -314, -315, -315,
	-188, 40, -239, 132, -240, 73, -188, 40, -463, -462,
	-167, -134, -117, -116, 68, 68, 68, -365, -365, -365,
	-365, -365, -365, -365, -365, -246, -147, -156, 221, -365,
	-118, -119, 123, -265, -240, -118, -270, -271, -240, 38,
	-374, 46, -113, 67, 30, 67, -240, -375, 46, -113,
	67, 30, -134, -101, -135, 135, 79, 73, -73, 68,
	136, -432, 85, 86, -435, 184, 176, -240, -87, 73,
	-3, -4, -5, -6, -35, -63, -113, -402, -400, 67,
	31, 386, 64, 15, -321, 215, 447, 339, 242, 218,
	318, -319, -302, -299, -297, -239, -295, -298, -297, -324,
	-224, 413, -102, 398, 293, -265, -265, -265, -265, -265,
	84, 95, 316, 85, 86, -260, -279, 31, 289, 290,
	-261, -261, -261, -261, -261, -261, -261, -261, -261, -261,
	-261, -261, -268, -277, -349, 67, 114, 112, 116, 113,
	97, -263, -263, -261, -261, 68, 136, -425, -424, 99,
	-265, -265, -240, -422, -423, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 330, 325, 331, 329,
	321, 337, 332, 333, 169, 478, 479, 472, 473, 474,
	475, 476, 477, -270, -270, -265, -422, -270, -218, 32,
	31, -271, -271, -271, 68, -265, -436, 314, 313, 315,
	-136, -240, -270, 68, 68, 68, 79, -271, -271, -270,
	-261, -270, -423, -218, -218, -271, -271, -218, -218, -218,
	-218, 123, -218, -218, -218, -218, -218, -218, -218, -218,
	68, -314, 40, -360, 361, 360, -354, -356, 67, -355,
	67, -355, -355, -355, 67, 67, -357, 67, -357, -357,
	-354, -358, 67, -358, -359, 67, -358, -240, -134, -100,
	-383, -382, -265, 40, 534, -101, -265, -131, -130, -265,
	-460, 73, 34, 67, 67, 135, -167, 95, -442, -240,
	-303, -300, -297, -240, -293, -240, -240, -283, -283, -283,
	-167, -440, -427, 34, -137, -240, -208, 16, -263, -263,
	-297, 246, -466, -251, -233, -232, -253, -248, -253, -253,
	-208, -467, -251, -251, -253, -249, -208, -240, 413, -208,
	-208, -336, -250, -240, -250, -283, -232, -233, -233, -167,
	-203, 212, 209, -187, -205, 358, 248, -284, 252, 77,
	253, 394, 254, 217, 256, 257, 258, 228, 259, 260,
	261, 387, 262, 263, 264, 265, 341, 6, 304, 40,
	-442, -442, 30, -303, -240, -126, -121, -125, -122, -127,
	-211, -213, -124, 67, -167, -116, -240, 437, 438, 145,
	148, 147, 31, 386, -318, 386, 31, -293, -312, -308,
	73, 387, -298, -317, 64, 132, -382, -315, -315, -315,
	-317, -317, 131, 136, -464, 436, 437, 204, -101, -169,
	-167, -442, -302, -293, -240, -169, -169, -240, 67, 35,
	-240, -207, 136, -206, 15, -241, -240, 34, 73, 135,
	-207, 68, 73, -306, 64, -376, -272, -420, 533, -141,
	68, -136, -418, -419, -136, -140, -240, -376, -141, 68,
	-418, -101, -101, -240, 23, -73, -430, 135, 136, -137,
	-321, -301, -298, -323, 123, -240, -309, 136, 487, 547,
	71, 219, -452, -451, 378, 68, 136, -386, 220, 454,
	73, 548, 200, 84, 316, 85, 86, -349, -271, -268,
	-263, -263, -261, -261, -266, 233, -266, 94, -265, -264,
	-424, 101, -265, 34, 136, 65, 135, 68, 68, 15,
	15, 68, -265, 68, 68, 68, 68, 15, 15, -265,
	68, 135, 68, 68, 68, 68, 65, 68, 136, 68,
	136, -271, -265, 68, 68, -265, -265, -265, -271, 68,
	-265, -265, -265, -265, -265, -265, -265, -265, -331, 408,
	-265, -363, 362, 79, 79, -226, 73, -226, 79, 79,
	79, 136, 68, 73, 136, 22, 136, -128, 36, 37,
	-155, -157, -158, -159, -160, -161, 114, 137, 138, -148,
	-149, -150, -151, -173, -224, 171, 174, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 232, 166,
	167, 168, 169, 187, 152, 172, 153, 154, 155, 156,
	157, 158, 161, 162, 163, 160, -240, -138, 35, -445,
	365, -453, 136, 40, -451, 447, -286, 65, -111, 15,
	-167, -167, -167, -180, 34, 15, -120, -168, -240, 67,
	68, 136, -265, -294, 65, -240, -233, -208, -167, -240,
	-208, -208, -251, -253, -253, -249, 135, -232, -138, -164,
	-170, -165, -224, -256, -166, 224, 222, 226, -415, 89,
	227, 278, 90, 217, -204, 217, 90, 223, 227, 222,
	136, -205, -237, 104, -237, -231, 131, -237, -237, -237,
	-237, 255, 255, -237, -237, -237, -237, -237, -237, -237,
	-237, -237, -237, -237, -237, -237, -237, 67, -446, 365,
	30, 324, -453, -112, 318, 30, -214, -215, -216, -217,
	53, 57, 59, 54, 55, 56, 60, 30, 136, -238,
	-242, 34, -240, 73, -238, -116, -121, -126, -238, 67,
	146, 149, 149, 148, 219, 67, 104, -317, -317, -317,
	40, -239, -462, 443, 437, 136, 64, -148, -156, -208,
	-119, -121, -240, 73, -240, 123, -208, -389, 418, 39,
	136, 67, 68, 136, 46, 136, 104, 68, 136, 68,
	46, 135, 394, -240, -400, 68, -323, 136, 219, 135,
	135, -299, 344, -239, -301, 20, 487, -224, 38, -230,
	-229, 73, 548, 68, -266, -266, 94, -263, -260, 68,
	102, -265, 100, -171, -173, 360, 361, -172, -178, 132,
	170, 232, 169, 168, 166, 360, 361, -188, -240, -265,
	-265, 68, -265, -265, 15, -240, -188, -261, -265, -133,
	68, -330, -331, -330, 68, 68, 68, 68, -330, 68,
	68, 68, 68, 68, 68, 68, 68, 67, 68, 68,
	68, 136, 68, 68, 68, 136, 68, 136, -382, -389,
	-265, -265, -130, -129, 43, 352, 68, 136, -224, 68,
	136, -173, 34, -448, 420, 367, -237, -258, -257, 320,
	41, -369, 387, 373, 374, -300, 246, -240, 64, 308,
	309, 310, 311, -281, -282, -280, -284, -442, 67, 67,
	67, -350, 298, -173, -167, -120, -240, 15, 136, -441,
	135, -1, -240, -293, -251, -208, -467, -208, -251, -251,
	-253, -240, 34, -173, -166, -240, 90, -414, -415, -283,
	-414, 90, 67, -240, -240, -240, 90, 90, -205, 79,
	79, -237, -237, 79, 73, 73, 73, -237, -237, 79,
	73, -242, 79, 79, 79, 79, 40, 73, -193, 40,
	266, 270, 267, 268, 269, 79, 40, 79, 40, 79,
	40, -240, 67, -416, -417, 73, -448, -237, 324, 104,
	-258, -110, 77, 31, -142, 212, 209, -442, -305, -304,
	-224, -125, -125, -125, -125, 53, 53, 53, 58, 53,
	58, 53, -216, -305, -127, -138, -242, 68, -458, -457,
	-456, -454, 61, 220, 62, -270, 149, -301, -254, 73,
	-308, -167, -167, 68, -210, 17, 135, -210, -397, 404,
	399, 401, 90, -272, -384, -383, 46, -113, -136, -376,
	-419, -382, -240, 46, -113, -376, -240, 79, 15, -298,
	-293, 123, 123, -240, 345, -309, 73, 366, 73, 215,
	549, 136, 104, -230, -260, -265, 68, -181, 157, 156,
	-181, 68, -355, -355, -354, -357, -354, -181, -181, 68,
	68, 23, 68, 68, 68, -265, 68, 68, 136, -373,
	456, -330, -330, -330, -330, -330, -330, -330, -330, -330,
	-330, -330, -330, -330, -274, -273, 238, 73, 79, 79,
	-397, 44, 45, 73, 73, -159, -173, 213, -150, 40,
	-113, -449, 77, -443, 73, -240, -450, 77, 368, 134,
	322, 40, 369, 370, 384, 317, 79, 79, 375, -444,
	-240, -143, 318, -167, -280, -231, 131, 257, 301, -162,
	-163, -164, -162, -162, -351, 300, 20, 79, 122, -139,
	65, 135, -121, -168, -240, 123, 68, -208, -240, -208,
	-208, -251, -113, -185, -184, -182, 84, 95, 40, 358,
	-183, 77, 131, 271, 249, 272, -202, -255, 64, 364,
	222, 89, 90, 346, -256, -410, -412, -240, -412, -240,
	-410, -410, -283, -265, -240, -188, -188, 73, 73, -189,
	249, -169, 68, 136, 104, -449, -443, 104, 73, -450,
	73, 136, -142, -142, -208, 136, 104, -145, -144, 64,
	65, -146, 64, -144, 53, 53, -208, -456, -455, 23,
	-415, -415, -415, 68, 68, -209, 18, 20, 123, -209,
	-361, 535, -393, -395, 399, 20, 20, 13, 68, -376,
	-376, -293, -309, 387, -167, -229, 73, 549, -265, 68,
	-265, 68, 73, -133, 20, 68, 68, -361, -152, -173,
	-259, 73, -447, 378, 73, 73, 79, 40, 79, 134,
	371, -370, -110, -142, 67, -237, -237, -237, -240, 68,
	136, 68, 68, -352, 237, 79, 122, 79, 122, 79,
	-238, -121, -240, -208, -441, 135, -208, -208, -182, 84,
	-261, 73, -190, -239, 132, -191, 40, 270, 266, -192,
	40, 250, 251, -194, 67, 278, 13, 90, 90, -167,
	67, 65, 288, 67, 67, 67, -412, 68, 250, 251,
	68, -417, 73, -447, 73, -442, -133, -304, -382, -265,
	67, -265, 67, 53, 19, 17, -265, -271, -195, 536,
	73, 20, 73, -391, 73, -305, -104, -387, -336, 68,
	68, -330, -333, -332, -335, 405, 280, 411, -271, -195,
	486, 20, 487, 321, 40, 79, 40, 372, -288, -290,
	-224, 67, -188, -190, 73, -186, -187, -164, -103, -102,
	-186, -353, 140, 79, 122, 79, 79, -208, -208, 79,
	67, -377, -289, 67, -288, -413, 308, 309, 310, 312,
	311, -413, -288, -288, -288, 67, -311, -310, 279, 95,
	-134, -137, -411, -240, 222, 20, 20, -227, 537, 79,
	73, 401, -362, 538, -396, 404, -390, -388, 399, 400,
	401, 402, 68, -334, 97, 371, 375, -265, -227, -153,
	-240, 73, 366, 73, 321, 68, 136, -354, -265, -325,
	238, -104, -325, -368, 148, 299, 487, 79, 122, 79,
	-133, 68, -265, -275, -197, -196, 483, -288, 68, 68,
	68, 68, -288, 279, 68, 68, 136, 67, 20, 73,
	-398, 220, -394, -395, 403, -388, 20, 401, 20, 20,
	-334, 533, 409, 410, 409, 410, 34, 387, -291, -290,
	-128, 68, -326, 287, 20, -326, 299, 79, 122, 79,
	-134, 68, -201, -199, -200, 64, 416, 276, 277, 68,
	-291, -291, -291, -291, 68, -240, 222, -228, -240, -391,
	-405, 67, 79, -393, -392, -394, 20, -391, 20, -391,
	-391, 94, 73, -292, 228, 77, 487, 306, 307, -128,
	20, -327, 280, 281, -328, -340, 283, 79, -310, -200,
	64, -199, 64, 14, 13, -202, 68, 136, -409, 30,
	68, -404, -403, -225, -399, -240, 404, 405, 73, -391,
	-334, -237, 73, 305, -224, 67, -338, 284, 67, -336,
	67, -336, 90, 309, -198, 273, 274, 30, 148, -198,
	-240, -408, -407, -406, 68, 136, 135, 79, -240, -324,
	-329, 285, 79, -261, 67, -261, 67, -337, 282, 67,
	84, 40, 275, 136, 104, -403, -240, 68, -342, 67,
	20, 68, -324, 68, -324, 67, 104, -261, -407, 40,
	-265, 135, -343, -341, 238, -328, 68, 68, 68, -324,
	79, 68, -240, 68, 136, -240, -339, 286, 68, -341,
	-344, 46, 79, -348, -345, 67, -205, 240, 114, -348,
	-205, -347, -346, 285, 241, 67, 68, 136, -240, 237,
	67, -271, -346, -345, -271, 68, 68,
}

var yyDef = [...]int{
	34, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 0, 701, 702, 703, 704, 705,
	0, 0, 0, 475, 476, 0, 447, 0, 0, 0,
	0, 0, 0, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 368, 369, 298, 299,
	300, 301, 302, 303, 0, 233, 229, 208, 209, 210,
	169, 170, 171, 172, 240, 241, 322, 0, 0, 0,
	0, 0, 558, -2, 36, 706, 707, 708, 709, 710,
	711, 712, 713, -2, 488, 0, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 287, 288,
	289, 283, 284, 286, 285, -2, 0, 488, 222, 0,
	213, 213, 0, 0, 0, 578, 0, 0, 593, 615,
	34, 0, 718, 997, 998, 999, 1000, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 0,
	536, 0, 541, 961, 536, 234, 477, 478, 578, 578,
	445, 0, 269, 0, 1454, 273, 0, 0, 0, 442,
	264, 265, 266, 267, 268, 0, 700, 0, 0, 260,
	0, 228, 1513, 0, 0, 0, 0, 0, 0, 113,
	789, 115, 791, 119, 126, 0, 0, 131, 132, 135,
	136, 137, 138, 139, 0, 143, 0, 145, 148, 0,
	150, 151, 0, 154, 155, 156, 0, 166, 167, 168,
	792, 793, 794, -2, 44, 716, 1379, 1274, 0, 1281,
	1282, 1293, 1304, 1070, 1071, 1072, 1073, 0, 0, 0,
	0, 0, 1080, 1081, 0, 1095, 1613, 0, 1087, 1088,
	1089, 1090, 1091, 53, 65, 66, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 0, 1247, 1057, 997,
	0, 1621, 0, 1641, 1646, 1647, 1648, 1649, 1640, 0,
	0, 1232, 0, 1222, 0, 0, -2, -2, 0, 0,
	1581, -2, 1618, 1637, 1645, 1622, 1644, 1615, 1616, 1610,
	1611, 1612, 1614, 1623, 1625, 1636, 0, 1632, 1642, 1643,
	0, 0, 67, 68, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1238, -2, 1240,
	1241, 1243, 1244, 1245, 1246, -2, 1249, 1250, 1251, -2,
	-2, 1254, 1255, 1256, 1257, 1258, 1259, 1262, -2, 1264,
	-2, -2, 1234, 1235, 1236, 1237, 1226, 1227, 1228, 1229,
	1230, 1231, -2, -2, -2, 0, 206, 204, 578, 651,
	0, -2, 0, 0, 0, 598, 601, 604, 607, 0,
	37, 38, 0, 0, 0, 821, 821, 821, 821, 821,
	0, 821, 0, 0, 0, 821, 796, 797, 798, 819,
	820, 867, 493, 489, 490, 491, 492, 566, 0, 568,
	571, 423, 371, 0, 0, 0, 383, 377, 0, 0,
	0, 423, 0, 0, 573, 573, 0, 426, 433, 423,
	423, -2, 423, 423, 423, 0, 389, 390, 391, 377,
	0, 377, 395, 396, 397, 408, 409, 434, 1403, 0,
	0, 322, 0, 322, 0, 322, 322, 495, 223, 224,
	212, 214, 0, 218, 0, 211, 1513, 0, 0, 180,
	1581, 185, 0, 1461, 1527, 1476, 0, 0, 1494, 0,
	-2, 0, 250, 573, 0, 579, 0, 578, 0, 0,
	322, 322, 322, 322, 322, 322, 322, 322, 0, 0,
	0, 322, 0, 0, 616, 617, 612, 613, 614, 618,
	619, 3, 1272, 0, 0, 0, 0, 540, 0, 0,
	573, -2, 0, 446, 270, 1001, 0, 0, 274, 275,
	0, 0, 290, 0, 293, 278, 279, 280, 0, 0,
	262, 263, 0, 0, 230, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 123, 120, 127, 130, 140,
	147, 0, 159, 161, 164, 121, 128, 133, 134, 141,
	162, 122, 124, 125, 129, 163, 165, 142, 146, 160,
	144, 149, 152, 153, 158, 0, 94, 0, 0, 0,
	0, 0, 1280, 0, 0, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1274, 0, 0, 1076, 1077, 1078, 1079, 1082, 0,
	1096, 0, 0, 0, 1333, 0, 1272, 1272, 0, 1272,
	1268, 0, 0, 0, 0, 0, 0, 1272, 1210, 0,
	0, 1212, 1223, 0, 0, 0, 1216, 1217, 1272, 0,
	1272, 1221, 1206, 1207, 0, 1268, 1268, 0, 0, 1268,
	1268, 1268, 1268, 1268, 1268, 1268, 1268, 1268, 1268, 1268,
	1268, 0, 0, 1380, 1398, 1335, 1336, 1337, 1385, 1339,
	1389, 1389, 1389, 1389, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 0, 0, 1378, 1358, 1387, 1387, 1387,
	1385, 1382, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1392, 1392, 1395, 1392,
	0, 573, 0, 0, 561, 0, 542, 0, 595, 597,
	0, 599, 600, 602, 603, 605, 606, 608, 609, 39,
	0, 715, 0, 0, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 821, 821, 821, 0, 495, 494, 0,
	567, 0, 0, 624, 0, 0, 0, 377, 423, 382,
	379, 378, 429, 430, 426, 0, 426, 426, 624, 0,
	402, 403, 404, 423, 423, 410, 574, 411, 412, 426,
	0, 431, 432, 624, 0, 0, 624, 624, 0, 420,
	421, 422, 0, 0, 821, 0, 379, 393, 379, 1404,
	1405, 0, 830, 0, 0, 0, 441, 0, 0, 0,
	496, 0, 0, 216, 0, 221, 173, 0, 0, 0,
	0, 0, 0, 202, 203, 0, 0, 0, 0, 0,
	193, 196, 955, 956, 786, 787, 197, 198, 242, 243,
	0, 542, 594, 596, 590, 591, 592, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 473, 0, 0,
	632, 626, 628, 695, 53, 632, 0, 1273, 719, 0,
	515, 528, 510, 0, 517, 0, 962, 497, 528, 499,
	0, 517, 542, 564, 542, 0, 271, 0, 276, 0,
	0, 292, 294, 295, 296, 281, 282, 443, 258, 259,
	251, 252, 253, 254, 255, 256, 257, 261, 63, 0,
	231, 232, 0, 0, 0, 107, 108, 109, 110, 111,
	112, 114, 98, 463, 465, 778, 790, 0, 781, 0,
	117, 157, 90, 0, 0, 1275, 1276, 1277, 1278, 1279,
	1283, 0, 1285, 1287, 1289, 1291, 0, 1309, -2, -2,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1294, 1307, 1308, 0, 0, 0, 0, 0,
	0, 1305, 1305, 1300, 0, 1074, 0, 1093, 1097, 0,
	0, 0, 54, 1267, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 0, 0, 1274, 0, 0, 0, 1269,
	1270, 0, 0, 0, 1165, 0, 0, 1171, 1172, 1173,
	0, 523, 0, 1233, 1211, 1224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 1401, 1399, 1400, 1338, 1386, 0, 1363,
	0, 1364, 1365, 1366, 0, 0, 1359, 0, 1360, 1361,
	1362, 1354, 0, 1355, 1356, 0, 1357, 205, 650, 652,
	0, 532, 534, 535, 0, 562, 575, 580, 581, 584,
	35, 40, 0, -2, 733, 0, 571, 0, 0, 745,
	320, 772, 0, 0, 788, 811, 817, 0, 0, 0,
	845, 0, 569, 0, 0, 664, 370, 0, 424, 425,
	374, 1513, 379, 624, 384, 380, 385, 428, 386, 387,
	388, 0, 624, 624, 423, 426, 413, 427, 426, 416,
	417, 0, 435, 439, 436, 0, 438, 392, 394, 571,
	305, 0, 0, -2, 911, 1406, 1406, 0, 1406, 1406,
	1406, 1406, 0, 0, 1406, 1406, 1406, 1406, 1406, 1406,
	1406, 1406, 1406, 1406, 1406, 1406, 1406, 1406, 0, 831,
	317, 0, 0, 320, 762, 637, 0, 638, 639, 635,
	666, 690, 690, 0, 690, 670, 961, 225, 226, 0,
	0, 220, 174, 175, 0, 177, 178, 179, 186, 181,
	183, 0, 0, 187, 199, 200, 201, 0, 0, 0,
	191, 192, 0, 0, 245, 246, 248, 0, 560, 460,
	959, 461, 462, 466, 0, 468, 469, 470, 733, 0,
	767, 624, 0, 633, 0, 629, 696, 0, 698, 0,
	624, 41, 544, 504, 0, 509, 525, 0, 529, 0,
	0, 521, 514, 518, 0, 0, 538, 498, 0, 0,
	503, 563, 565, 1002, 0, 277, 291, 0, 0, 0,
	0, 101, 775, 0, 102, 106, 96, 0, 0, 0,
	780, 0, 777, 782, 0, 116, 0, 0, 91, 92,
	836, 841, 0, 1284, 1286, 1288, 1290, 1292, 0, 1295,
	1305, 1305, 1301, 0, 1296, 0, 1298, 0, 1275, 0,
	1098, 0, 0, 0, 0, 0, 0, 1155, 1156, 0,
	0, 1160, 0, 1162, 1163, 1164, 1166, 0, 0, 0,
	1170, 0, 1209, 1225, 1213, 1214, 0, 1218, 0, 1220,
	0, 578, 0, 1132, 1132, 0, 0, 0, 0, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 1092, 0,
	1381, 1334, 1402, 0, 0, 0, 1383, 0, 0, 0,
	0, 0, 653, 544, 0, 0, 0, 587, 585, 586,
	0, 0, 721, 722, 724, 0, 727, 728, 729, 0,
	734, 735, 737, 738, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1446, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 732, 0, 822, 752,
	1406, 324, 0, 0, 774, 0, 0, 0, -2, 0,
	0, 0, 0, 847, 0, 0, 0, 482, 486, 34,
	572, 0, 625, 372, 0, 373, 423, 381, 624, 961,
	405, 406, 624, 423, 423, 426, 0, 437, 0, 306,
	967, 968, 0, 0, 970, 1027, 0, 979, 821, 979,
	0, 0, 981, 982, 307, 0, 0, 0, 0, 0,
	830, 913, 0, 1407, 0, 1406, 1406, 0, 0, 0,
	0, 1406, 1406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 752, 1406,
	0, 0, 324, 759, 0, 0, 0, 0, 0, 0,
	657, 0, 0, 656, 0, 0, 0, 0, 0, 571,
	691, 0, 693, 694, 668, -2, 0, 637, 673, 1272,
	227, 215, 217, 0, 0, 0, 0, 188, 189, 190,
	194, 195, 244, 247, 249, 0, 0, 0, 474, 622,
	627, 634, 697, 699, 54, 630, 622, 548, 0, 0,
	528, 530, 0, 0, 528, 0, 0, 537, 0, 0,
	528, 0, 0, 444, 64, 297, 0, 0, 0, 0,
	0, 464, 0, 779, 98, 0, 0, 118, 0, 0,
	839, 0, 841, 1271, 1297, 1299, 0, 1306, 1302, 1075,
	1083, 1094, 0, 0, 1100, 1112, 1112, 0, 1103, 1389,
	1389, 1106, 1385, 1387, 1385, 1112, 1112, 0, 55, 0,
	0, 1161, 0, 0, 0, 524, 0, 0, 0, 1130,
	1132, 1137, 1133, 1138, 1132, 1132, 1132, 1132, 1143, 1132,
	1132, 1132, 1132, 1132, 1132, 1132, 1132, 1128, 1391, 1390,
	1376, 0, 1377, 1388, 1393, 0, 1396, 0, 533, 548,
	576, 577, 582, 583, 0, 0, 0, 726, 0, 0,
	0, 739, 0, 755, 753, 754, 0, 769, 325, 326,
	327, 328, 0, 0, 0, 773, 0, 505, 0, 812,
	813, 814, 815, 816, -2, 825, 0, 0, 963, 963,
	963, 855, 0, 846, 536, 0, -2, 0, 0, 484,
	0, 0, 665, 375, 624, 398, 0, 414, 624, 624,
	423, 440, 0, -2, 969, 1028, 991, 991, 980, 991,
	991, 821, 0, 309, 310, 311, 0, 313, 912, 914,
	915, 0, 0, 918, 919, 920, 921, 0, 0, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 949,
	950, 951, 952, 953, 954, 934, 935, 936, 937, 938,
	939, 946, 0, 0, 943, 0, 755, 0, 0, 0,
	769, 761, 0, 763, 764, 0, 0, 507, 624, 237,
	0, 660, 654, 0, 643, 658, 659, 646, 0, 648,
	0, 644, 645, 624, 636, 667, 692, 669, 672, 674,
	675, 681, 0, 0, 0, 0, 219, 176, 0, 344,
	182, 960, 467, 472, 620, 0, 0, 620, 550, 78,
	0, 0, 0, 526, 0, 531, 528, 513, 522, 512,
	519, 520, 539, 528, 502, 501, 1003, 272, 0, 776,
	98, 103, 104, 105, 99, 97, 783, 0, 785, 0,
	837, 841, 0, 0, 1303, 1099, 1084, 1101, 1113, 1114,
	1102, 1085, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1086,
	1157, 0, 1159, 1167, 1168, 0, 1215, 1219, 0, 0,
	0, 1136, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 578, 1129, 0, 1384, 0, 0,
	550, 588, 589, 714, 717, 723, 725, 0, 736, 0,
	743, 744, 0, 0, 747, 748, 757, 0, 0, 0,
	330, 331, 0, 0, 0, 343, 339, 340, 341, 321,
	768, 759, 0, 0, 826, 1406, 1406, 1406, 0, 0,
	964, 965, 0, 0, 858, 0, 0, 849, 0, 690,
	0, 0, 624, 483, 486, 487, 570, 376, 624, 418,
	415, 624, 304, 993, -2, 1006, 1008, 0, 0, 1011,
	1012, 0, 0, 0, 0, 1049, 1018, 0, 0, 1022,
	0, 1321, 1322, 0, 1026, 0, 983, 992, 0, 992,
	0, 0, 991, 0, 312, 916, 917, 922, 923, 940,
	0, 0, 942, 0, 0, 314, 0, 0, 315, 319,
	760, 0, 765, 766, 578, 0, 0, 640, 661, 0,
	0, 641, 0, 642, 647, 649, 236, 676, 0, 0,
	678, 679, 680, 671, 184, 610, 0, 0, 631, 611,
	552, 0, 549, 79, 0, 0, 0, 0, 527, 511,
	500, 100, 95, 784, 81, 840, 842, 838, 0, 1169,
	0, 1132, 1131, 1125, 0, 1394, 1397, 552, 0, 742,
	740, 756, 746, 0, 770, 771, 0, 332, 333, 0,
	336, 342, 758, 506, 0, 0, 0, 0, 818, -2,
	0, 0, -2, 861, 0, 856, 0, 848, 0, 851,
	624, 624, -2, 480, 485, 0, 399, 419, 1007, 1009,
	1010, 1013, 1014, 957, 958, 1015, 1054, 1055, 1056, 1016,
	1051, 1052, 1053, 1017, 0, 0, 0, 1319, 1320, 1047,
	0, 0, 0, 0, 0, 0, 0, 977, 947, 948,
	941, 944, 945, 318, 316, 508, 573, 238, 239, 662,
	0, 655, 685, 682, 0, 0, 621, 623, 554, 0,
	551, 0, 545, 547, 89, 516, 51, 72, 0, 1158,
	1208, 1135, 0, 1126, 0, 1120, 1121, 1122, 1127, 554,
	0, 0, 0, 329, 334, 0, 337, 338, 0, 807,
	1385, 0, 827, 828, 829, 868, -2, 966, 833, 81,
	868, 852, 0, 859, 0, 857, 850, 578, 481, 0,
	0, 1222, 1042, 0, 0, 984, 986, 987, 988, 989,
	990, 985, 0, 0, 0, 0, 976, 978, 1023, 0,
	235, 0, 0, 686, 688, 683, 684, 42, 0, 553,
	80, 0, 43, 0, 69, 0, 82, 83, 0, 0,
	0, 0, 1134, 1123, 0, 0, 0, 0, 543, 0,
	741, 749, 0, 751, 335, 800, 0, 584, 0, 870,
	0, 835, 870, 844, 0, 854, 0, 863, 0, 860,
	573, 1050, 0, 1021, 1030, 1043, 0, 0, 800, 800,
	800, 800, 0, 1024, 663, 677, 0, 0, 0, 52,
	56, 0, 78, 75, 0, 84, 0, 0, 0, 0,
	0, 1115, 1116, 1118, 1117, 1119, 0, 750, 799, 808,
	809, 584, 832, 0, 907, 834, 853, 862, 0, 865,
	479, 1019, 1029, 1031, 1032, 0, 1044, 1045, 1046, 1048,
	971, 972, 973, 974, 0, 687, 689, 0, 556, 546,
	45, 0, 0, 73, 74, 76, 0, 85, 0, 87,
	88, 0, 730, 801, 1406, 0, 0, 805, 806, 810,
	0, 895, 0, 0, 901, 0, 908, 864, 1020, 1033,
	0, 1034, 0, 0, 0, 975, 555, 0, 843, 0,
	57, 0, 59, 61, 62, 994, 70, 71, 77, 86,
	1124, 0, 803, 0, 871, 0, 873, 0, 0, 0,
	0, 0, 905, 0, 1035, 1037, 1038, 0, 0, 1036,
	557, 46, 47, 0, 58, 0, 0, 802, 804, 0,
	875, 0, 896, 0, 0, 0, 0, 0, 0, 0,
	1039, 1041, 1040, 0, 0, 60, 995, 872, 869, 0,
	907, 897, 0, 899, 0, 0, 0, 0, 48, 49,
	50, 0, 0, 877, 0, 893, 898, 900, 902, 0,
	906, 904, 996, 876, 0, 889, 874, 0, 903, 878,
	-2, 0, 894, 879, -2, 0, 887, 0, 0, 880,
	888, 0, 883, 0, 0, 0, 882, 0, -2, 890,
	0, 0, 884, -2, 0, 892, 891,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 546,
	105, 104, 106, 3, 547, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 548, 117, 549, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:678
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:684
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:720
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:725
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:731
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:751
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:757
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:764
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:772
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:778
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:787
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:796
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:817
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:830
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:841
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:847
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:851
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:857
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:872
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:876
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:890
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:894
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:898
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:911
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:917
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:926
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:937
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:941
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:947
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:951
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:957
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:961
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:967
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:991
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1010
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1014
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1018
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1027
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1034
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1042
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1049
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1054
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1061
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1066
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1070
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1094
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1098
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1104
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1110
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1128
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1145
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1168
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1172
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1176
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1181
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1185
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1191
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1204
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1215
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1228
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1242
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1255
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1268
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1274
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1280
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1287
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1295
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1304
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1308
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1312
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1316
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1320
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1324
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1331
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1335
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1341
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1348
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1357
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1361
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1367
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1371
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1375
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1379
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1383
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1387
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1391
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1395
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1399
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1403
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1407
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1411
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1415
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1419
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1423
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1427
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1431
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1435
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1443
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1447
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1451
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1455
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1459
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1463
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1467
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1471
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1475
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1479
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1483
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1487
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1491
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1495
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1499
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1503
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1507
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1511
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1515
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1519
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1523
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1527
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1531
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1535
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1539
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1543
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1547
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1551
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1555
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1559
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1563
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1575
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1582
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1598
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1628
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1632
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1636
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1642
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1648
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1652
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1659
		{
			yyVAL.str = yyDollar[3].str
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1665
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1669
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1675
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1683
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1692
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1700
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1708
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1731
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1754
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1761
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1768
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1776
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1783
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1790
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1807
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1813
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1817
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1823
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1827
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1833
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1837
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1848
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1854
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1859
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1863
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1867
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1871
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1875
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1879
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1883
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1887
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1901
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1905
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1909
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1914
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1919
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1925
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1938
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1945
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1952
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1962
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1969
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1980
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1991
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1995
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2017
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2021
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2027
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2033
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2037
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2041
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2045
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2063
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2069
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2073
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2079
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2083
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2095
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2105
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2111
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2115
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2119
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2123
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2127
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2131
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2139
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2147
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2157
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2198
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2202
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2208
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2214
		{
			yyVAL.str = yyDollar[1].str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2219
		{
			yyVAL.str = "true"
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2220
		{
			yyVAL.str = "false"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2221
		{
			yyVAL.str = yyDollar[1].str
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2226
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2241
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2261
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2268
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2272
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2296
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2303
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2319
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2331
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2339
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2348
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2354
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2365
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2380
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2385
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2389
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2398
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2414
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2418
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2422
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2426
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2430
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2434
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2438
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2442
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2446
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2450
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2454
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2458
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2462
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2466
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2470
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2474
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2480
		{
			yyVAL.item = nil
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2485
		{
			yyVAL.item = nil
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2526
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2530
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2534
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2543
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2547
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2553
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2558
		{
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2562
		{
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2567
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2576
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2582
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2588
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2594
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2600
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2606
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2612
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2621
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2625
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2633
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2637
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2641
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2645
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2649
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2653
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2659
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2666
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2676
		{
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2678
		{
		}
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2687
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2697
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2706
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2710
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2714
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2720
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2732
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2738
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2747
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2757
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2769
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2773
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2779
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2791
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2805
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2811
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2818
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2823
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2827
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2831
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2836
		{
			yyVAL.str = ""
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2840
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2846
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2859
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2863
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2869
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2878
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2882
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2888
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2892
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2898
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2904
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2908
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2912
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2918
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2922
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2945
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2963
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2972
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2976
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2982
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2991
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3000
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3010
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3016
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3022
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3028
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3043
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3050
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3061
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3066
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3073
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3089
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3102
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3113
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3117
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3123
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3128
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3135
		{
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3137
		{
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3140
		{
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3149
		{
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3153
		{
		}
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3158
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3167
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3180
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3188
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3195
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3202
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3222
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3231
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3235
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3241
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3245
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3251
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3264
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3272
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3279
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3286
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3305
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3309
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3314
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3318
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3322
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3328
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3337
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3341
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3347
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3351
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3357
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3361
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3367
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3372
		{
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3383
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3387
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3394
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3399
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3403
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3409
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3413
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3419
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3423
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3432
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3445
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3452
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3459
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3477
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3496
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3502
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3509
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3513
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3526
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3530
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3535
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3539
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3546
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3551
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3558
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3564
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3568
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3572
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3576
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3580
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3584
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3590
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3597
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3606
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3610
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3616
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3628
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3633
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3637
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3643
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3647
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3651
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3660
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3666
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3672
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3676
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3682
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3687
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3691
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3695
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3700
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3704
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3708
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3714
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3718
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3722
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3736
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3740
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3750
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3760
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3770
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3782
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3790
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3798
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3807
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3815
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3823
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3831
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3839
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3847
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3855
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3863
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3871
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3881
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3892
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3906
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3910
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3914
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3919
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3923
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3927
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3949
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3958
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3964
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3968
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3974
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3978
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3983
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3987
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3992
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4000
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4006
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4014
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4022
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4032
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4038
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4047
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4056
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4065
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4075
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4079
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4089
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4093
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4097
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4101
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4107
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4117
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4121
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4127
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4137
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4143
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4149
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4153
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4157
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4167
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4173
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4177
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4183
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4187
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4193
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4197
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4207
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4220
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4226
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4232
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4245
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4263
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4267
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4273
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4283
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4287
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4291
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4296
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4300
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4304
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4308
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4317
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4321
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4325
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4329
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4334
		{
			yyVAL.str = ""
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4338
		{
			yyVAL.str = yyDollar[1].str
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4342
		{
			yyVAL.str = yyDollar[2].str
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4348
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4354
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4358
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4362
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4366
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4370
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4376
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 714:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4409
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4419
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4425
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4431
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4441
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4446
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4452
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4459
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4463
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4469
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4475
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4480
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4484
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4488
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4492
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4499
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4511
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4516
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4522
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4529
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4533
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4539
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4545
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4549
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4553
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4559
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4565
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4571
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4582
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4594
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4600
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4610
		{
			yyVAL.str = yyDollar[1].str
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4614
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4620
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4627
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4633
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4641
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4647
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4654
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4662
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4668
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4677
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4689
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4700
		{
			yyVAL.str = ""
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4704
		{
			yyVAL.str = yyDollar[2].str
		}
	case 761:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4710
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4724
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4730
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4736
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4742
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4751
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4760
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4765
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4771
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4779
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4885
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4889
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4895
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4905
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4909
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4915
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4925
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4929
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4933
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4938
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4942
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4948
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4955
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4961
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4970
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4977
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4986
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4990
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4996
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5010
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5014
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5035
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5041
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5064
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5086
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5090
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5094
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5098
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5102
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5108
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5112
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5118
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5123
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5128
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5132
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5136
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5140
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5144
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5150
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5165
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5175
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5179
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5184
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5188
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5194
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5198
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5204
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5208
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5212
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5217
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5221
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5227
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5239
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5248
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5261
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5268
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5278
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5286
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5297
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5301
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5306
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5310
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5317
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5328
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5341
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5355
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5363
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5370
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5377
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5384
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5391
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5395
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5399
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5407
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5414
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5421
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5425
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5432
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5439
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5443
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5450
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5457
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5464
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5471
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5475
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5480
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5484
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5494
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5498
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5505
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5516
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5525
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5529
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5535
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5539
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5545
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5554
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5568
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5574
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5578
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5591
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5600
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5604
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5613
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5618
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5622
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5627
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5631
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5641
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5645
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5656
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5664
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5672
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5680
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5691
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5700
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5710
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5720
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5724
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5729
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5733
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5742
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5748
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5752
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5756
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5762
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5766
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5770
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5774
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5778
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5782
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5787
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5791
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5795
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5799
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5803
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5807
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5811
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5815
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5819
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5823
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5827
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5831
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5835
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5839
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5843
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5847
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5851
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5855
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5859
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5863
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5867
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5871
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5875
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5882
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5886
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5892
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5897
		{
			yyVAL.str = ""
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5901
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5905
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5911
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5915
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5919
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5923
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5927
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5931
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5945
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5949
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5958
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5963
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5969
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5976
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5980
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5986
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5990
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5996
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6008
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6014
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6023
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6032
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6055
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6064
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6074
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6082
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6088
		{
			yyVAL.str = ""
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6092
		{
			yyVAL.str = yyDollar[1].str
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6102
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6108
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6114
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6128
		{
			yyVAL.str = ""
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6132
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6138
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6144
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6148
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6152
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6158
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6162
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6166
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6170
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6176
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6180
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6184
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6193
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6199
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6203
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6209
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6213
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6217
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6221
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6225
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6229
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6234
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6238
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6242
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6246
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6250
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6254
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6258
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6262
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6275
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6281
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6285
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6290
		{
			yyVAL.str = ""
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6294
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6300
		{
			yyVAL.str = ""
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6304
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6310
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6322
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6329
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6336
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6343
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6350
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6359
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6365
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6371
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6375
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6379
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6383
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6387
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6392
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6399
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6403
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6407
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6416
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6421
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6425
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6441
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6447
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6451
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6455
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6459
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6463
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6467
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6471
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6475
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6479
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6483
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6487
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6491
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6495
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6501
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6505
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6509
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6513
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6517
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6521
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6525
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6529
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6533
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6537
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6541
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6545
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6550
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6558
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6563
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6567
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6576
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6580
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6584
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6588
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6592
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6598
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6607
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6611
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6616
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6620
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6626
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6630
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6636
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6646
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6663
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6680
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6693
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6706
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6718
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6732
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6747
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6762
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6779
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6794
		{
		}
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6800
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6804
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6808
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6814
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6818
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6826
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6830
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6834
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6840
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6847
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6860
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6867
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6872
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6876
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6881
		{
			yyVAL.str = ","
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6885
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6897
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6907
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6918
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6928
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6937
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6946
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6956
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6966
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6976
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6986
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6996
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7006
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7016
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7026
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7036
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7046
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7056
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7066
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7083
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7091
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7099
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7107
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7115
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7125
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7133
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7142
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7150
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7158
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7166
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7174
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7185
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7195
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7207
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7218
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7240
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7276
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7288
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7300
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7311
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7319
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7326
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7333
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7345
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7353
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7361
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7372
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7381
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7390
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7398
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7408
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7416
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7430
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7440
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7459
		{
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7461
		{
		}
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7502
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7513
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7517
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7521
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7527
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7536
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7542
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7546
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7553
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7557
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7561
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7569
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7573
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7577
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7581
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7587
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7591
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7595
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7599
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7603
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7607
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7611
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7615
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7619
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7623
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7631
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7635
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7639
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7643
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7647
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7651
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7655
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7659
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7663
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7667
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7673
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7677
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7683
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7687
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7694
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7698
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7702
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7708
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7712
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7716
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7720
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7724
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7728
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7732
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7738
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7742
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7746
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7750
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7756
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7760
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7773
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7778
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7782
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7786
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7790
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7794
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7798
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7812
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7816
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7823
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7834
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7839
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7845
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7857
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7869
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7881
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7894
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7907
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7920
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7933
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7946
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7959
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7972
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7985
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7998
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8011
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8026
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8053
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8095
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8143
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8160
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8172
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8192
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8212
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8232
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8248
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8261
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8274
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8287
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8300
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8312
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8324
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8336
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8348
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8360
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8372
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8384
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8396
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8408
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8421
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8434
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8449
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8457
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8466
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8476
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8499
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8504
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8510
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8517
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8521
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8526
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8530
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8536
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8542
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8549
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8556
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8565
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8572
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8579
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8588
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8592
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8596
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8602
		{
		}
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8604
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8614
		{
			yyVAL.str = ""
		}
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8618
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const RETURNS = 57534
const SCHEMA = 57535
const TABLE = 57536
const INDEX = 57537
const VIEW = 57538
const TO = 57539
const IGNORE = 57540
const IF = 57541
const PRIMARY = 57542
const COLUMN = 57543
const CONSTRAINT = 57544
const SPATIAL = 57545
const FULLTEXT = 57546
const FOREIGN = 57547
const KEY_BLOCK_SIZE = 57548
const SHOW = 57549
const DESCRIBE = 57550
const EXPLAIN = 57551
const DATE = 57552
const ESCAPE = 57553
const REPAIR = 57554
const OPTIMIZE = 57555
const TRUNCATE = 57556
const MAXVALUE = 57557
const PARTITION = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const STATUS = 57564
const VARIABLES = 57565
const ROLE = 57566
const PROXY = 57567
const AVG_ROW_LENGTH = 57568
const STORAGE = 57569
const DISK = 57570
const MEMORY = 57571
const CHECKSUM = 57572
const COMPRESSION = 57573
const DATA = 57574
const DIRECTORY = 57575
const DELAY_KEY_WRITE = 57576
const ENCRYPTION = 57577
const ENGINE = 57578
const MAX_ROWS = 57579
const MIN_ROWS = 57580
const PACK_KEYS = 57581
const ROW_FORMAT = 57582
const STATS_AUTO_RECALC = 57583
const STATS_PERSISTENT = 57584
const STATS_SAMPLE_PAGES = 57585
const DYNAMIC = 57586
const COMPRESSED = 57587
const REDUNDANT = 57588
const COMPACT = 57589
const FIXED = 57590
const COLUMN_FORMAT = 57591
const AUTO_RANDOM = 57592
const RESTRICT = 57593
const CASCADE = 57594
const ACTION = 57595
const PARTIAL = 57596
const SIMPLE = 57597
const CHECK = 57598
const ENFORCED = 57599
const RANGE = 57600
const LIST = 57601
const ALGORITHM = 57602
const LINEAR = 57603
const PARTITIONS = 57604
const SUBPARTITION = 57605
const SUBPARTITIONS = 57606
const CLUSTER = 57607
const TYPE = 57608
const ANY = 57609
const SOME = 57610
const EXTERNAL = 57611
const LOCALFILE = 57612
const URL = 57613
const PREPARE = 57614
const DEALLOCATE = 57615
const RESET = 57616
const EXTENSION = 57617
const PROPERTIES = 57618
const PARSER = 57619
const VISIBLE = 57620
const INVISIBLE = 57621
const BTREE = 57622
const HASH = 57623
const RTREE = 57624
const BSI = 57625
const ZONEMAP = 57626
const LEADING = 57627
const BOTH = 57628
const TRAILING = 57629
const UNKNOWN = 57630
const EXPIRE = 57631
const ACCOUNT = 57632
const ACCOUNTS = 57633
const UNLOCK = 57634
const DAY = 57635
const NEVER = 57636
const PUMP = 57637
const SECOND = 57638
const ASCII = 57639
const COALESCE = 57640
const COLLATION = 57641
const HOUR = 57642
const MICROSECOND = 57643
const MINUTE = 57644
const MONTH = 57645
const QUARTER = 57646
const REPEAT = 57647
const REVERSE = 57648
const ROW_COUNT = 57649
const WEEK = 57650
const REVOKE = 57651
const FUNCTION = 57652
const PRIVILEGES = 57653
const TABLESPACE = 57654
const EXECUTE = 57655
const SUPER = 57656
const GRANT = 57657
const OPTION = 57658
const REFERENCES = 57659
const REPLICATION = 57660
const SLAVE = 57661
const CLIENT = 57662
const USAGE = 57663
const RELOAD = 57664
const FILE = 57665
const TEMPORARY = 57666
const ROUTINE = 57667
const EVENT = 57668
const SHUTDOWN = 57669
const NULLX = 57670
const AUTO_INCREMENT = 57671
const APPROXNUM = 57672
const SIGNED = 57673
const UNSIGNED = 57674
const ZEROFILL = 57675
const ENGINES = 57676
const LOW_CARDINALITY = 57677
const ADMIN_NAME = 57678
const RANDOM = 57679
const SUSPEND = 57680
const ATTRIBUTE = 57681
const HISTORY = 57682
const REUSE = 57683
const CURRENT = 57684
const OPTIONAL = 57685
const FAILED_LOGIN_ATTEMPTS = 57686
const PASSWORD_LOCK_TIME = 57687
const UNBOUNDED = 57688
const SECONDARY = 57689
const USER = 57690
const IDENTIFIED = 57691
const CIPHER = 57692
const ISSUER = 57693
const X509 = 57694
const SUBJECT = 57695
const SAN = 57696
const REQUIRE = 57697
const SSL = 57698
const NONE = 57699
const PASSWORD = 57700
const MAX_QUERIES_PER_HOUR = 57701
const MAX_UPDATES_PER_HOUR = 57702
const MAX_CONNECTIONS_PER_HOUR = 57703
const MAX_USER_CONNECTIONS = 57704
const FORMAT = 57705
const VERBOSE = 57706
const CONNECTION = 57707
const TRIGGERS = 57708
const PROFILES = 57709
const LOAD = 57710
const INFILE = 57711
const TERMINATED = 57712
const OPTIONALLY = 57713
const ENCLOSED = 57714
const ESCAPED = 57715
const STARTING = 57716
const LINES = 57717
const ROWS = 57718
const IMPORT = 57719
const MODUMP = 57720
const OVER = 57721
const PRECEDING = 57722
const FOLLOWING = 57723
const GROUPS = 57724
const DATABASES = 57725
const TABLES = 57726
const EXTENDED = 57727
const FULL = 57728
const PROCESSLIST = 57729
const FIELDS = 57730
const COLUMNS = 57731
const OPEN = 57732
const ERRORS = 57733
const WARNINGS = 57734
const INDEXES = 57735
const SCHEMAS = 57736
const NODE = 57737
const LOCKS = 57738
const NAMES = 57739
const GLOBAL = 57740
const SESSION = 57741
const ISOLATION = 57742
const LEVEL = 57743
const READ = 57744
const WRITE = 57745
const ONLY = 57746
const REPEATABLE = 57747
const COMMITTED = 57748
const UNCOMMITTED = 57749
const SERIALIZABLE = 57750
const LOCAL = 57751
const EVENTS = 57752
const PLUGINS = 57753
const CURRENT_TIMESTAMP = 57754
const DATABASE = 57755
const CURRENT_TIME = 57756
const LOCALTIME = 57757
const LOCALTIMESTAMP = 57758
const UTC_DATE = 57759
const UTC_TIME = 57760
const UTC_TIMESTAMP = 57761
const REPLACE = 57762
const CONVERT = 57763
const SEPARATOR = 57764
const TIMESTAMPDIFF = 57765
const CURRENT_DATE = 57766
const CURRENT_USER = 57767
const CURRENT_ROLE = 57768
const SECOND_MICROSECOND = 57769
const MINUTE_MICROSECOND = 57770
const MINUTE_SECOND = 57771
const HOUR_MICROSECOND = 57772
const HOUR_SECOND = 57773
const HOUR_MINUTE = 57774
const DAY_MICROSECOND = 57775
const DAY_SECOND = 57776
const DAY_MINUTE = 57777
const DAY_HOUR = 57778
const YEAR_MONTH = 57779
const SQL_TSI_HOUR = 57780
const SQL_TSI_DAY = 57781
const SQL_TSI_WEEK = 57782
const SQL_TSI_MONTH = 57783
const SQL_TSI_QUARTER = 57784
const SQL_TSI_YEAR = 57785
const SQL_TSI_SECOND = 57786
const SQL_TSI_MINUTE = 57787
const RECURSIVE = 57788
const CONFIG = 57789
const DRAINER = 57790
const MATCH = 57791
const AGAINST = 57792
const BOOLEAN = 57793
const LANGUAGE = 57794
const WITH = 57795
const QUERY = 57796
const EXPANSION = 57797
const ADDDATE = 57798
const BIT_AND = 57799
const BIT_OR = 57800
const BIT_XOR = 57801
const CAST = 57802
const COUNT = 57803
const APPROX_COUNT_DISTINCT = 57804
const APPROX_PERCENTILE = 57805
const CURDATE = 57806
const CURTIME = 57807
const DATE_ADD = 57808
const DATE_SUB = 57809
const EXTRACT = 57810
const GROUP_CONCAT = 57811
const MAX = 57812
const MID = 57813
const MIN = 57814
const NOW = 57815
const POSITION = 57816
const SESSION_USER = 57817
const STD = 57818
const STDDEV = 57819
const MEDIAN = 57820
const STDDEV_POP = 57821
const STDDEV_SAMP = 57822
const SUBDATE = 57823
const SUBSTR = 57824
const SUBSTRING = 57825
const SUM = 57826
const SYSDATE = 57827
const SYSTEM_USER = 57828
const TRANSLATE = 57829
const TRIM = 57830
const VARIANCE = 57831
const VAR_POP = 57832
const VAR_SAMP = 57833
const AVG = 57834
const ARROW = 57835
const ROW = 57836
const OUTFILE = 57837
const HEADER = 57838
const MAX_FILE_SIZE = 57839
const FORCE_QUOTE = 57840
const UNUSED = 57841
const BINDINGS = 57842
const DO = 57843
const DECLARE = 57844
const KILL = 57845

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8283

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 88,
	21, 524,
	-2, 505,
	-1, 96,
	212, 721,
	-2, 768,
	-1, 115,
	42, 357,
	212, 357,
	239, 364,
	240, 364,
	410, 357,
	-2, 385,
	-1, 422,
	288, 88,
	386, 88,
	-2, 1504,
	-1, 481,
	67, 1134,
	-2, 1644,
	-1, 482,
	67, 1152,
	-2, 1615,
	-1, 487,
	67, 1153,
	-2, 1643,
	-1, 508,
	67, 1066,
	-2, 1692,
	-1, 509,
	67, 1067,
	-2, 1691,
	-1, 510,
	67, 1068,
	-2, 1681,
	-1, 511,
	67, 1656,
	-2, 1676,
	-1, 512,
	67, 1657,
	-2, 1677,
	-1, 513,
	67, 1658,
	-2, 1683,
	-1, 514,
	67, 1659,
	-2, 1666,
	-1, 515,
	67, 1660,
	-2, 1674,
	-1, 516,
	67, 1661,
	-2, 1684,
	-1, 517,
	67, 1662,
	-2, 1685,
	-1, 518,
	67, 1663,
	-2, 1690,
	-1, 519,
	67, 1664,
	-2, 1695,
	-1, 520,
	67, 1665,
	-2, 1696,
	-1, 522,
	67, 1131,
	-2, 1496,
	-1, 529,
	67, 1140,
	-2, 1522,
	-1, 533,
	67, 1144,
	-2, 1561,
	-1, 534,
	67, 1145,
	-2, 1639,
	-1, 542,
	67, 1155,
	-2, 1624,
	-1, 544,
	67, 1157,
	-2, 1634,
	-1, 556,
	67, 1047,
	-2, 1686,
	-1, 557,
	67, 1048,
	-2, 1687,
	-1, 558,
	67, 1049,
	-2, 1688,
	-1, 565,
	21, 525,
	-2, 488,
	-1, 616,
	405, 385,
	406, 385,
	-2, 358,
	-1, 659,
	103, 1496,
	114, 1496,
	133, 1496,
	-2, 1293,
	-1, 697,
	21, 525,
	-2, 488,
	-1, 796,
	21, 524,
	-2, 958,
	-1, 1110,
	67, 1200,
	-2, 1641,
	-1, 1111,
	67, 1201,
	-2, 1642,
	-1, 1269,
	1, 747,
	68, 747,
	521, 747,
	-2, 754,
	-1, 1390,
	133, 1303,
	-2, 1301,
	-1, 1392,
	133, 648,
	-2, 1298,
	-1, 1393,
	133, 649,
	-2, 1299,
	-1, 1682,
	68, 1279,
	134, 1279,
	-2, 1626,
	-1, 1683,
	68, 1275,
	134, 1275,
	-2, 1625,
	-1, 1684,
	68, 1257,
	134, 1257,
	-2, 1612,
	-1, 1685,
	68, 1258,
	134, 1258,
	-2, 1617,
	-1, 1686,
	68, 1259,
	134, 1259,
	-2, 1549,
	-1, 1687,
	68, 1260,
	134, 1260,
	-2, 1543,
	-1, 1688,
	68, 1261,
	134, 1261,
	-2, 1487,
	-1, 1689,
	68, 1262,
	134, 1262,
	-2, 1614,
	-1, 1690,
	68, 1263,
	134, 1263,
	-2, 1547,
	-1, 1691,
	68, 1264,
	134, 1264,
	-2, 1542,
	-1, 1692,
	68, 1265,
	134, 1265,
	-2, 1535,
	-1, 1694,
	68, 1248,
	134, 1248,
	-2, 1644,
	-1, 1695,
	68, 1277,
	134, 1277,
	-2, 1615,
	-1, 1696,
	68, 1277,
	134, 1277,
	-2, 1643,
	-1, 1697,
	68, 1277,
	134, 1277,
	-2, 1505,
	-1, 1698,
	68, 1275,
	134, 1275,
	-2, 1634,
	-1, 1699,
	68, 1272,
	134, 1272,
	-2, 1527,
	-1, 1700,
	67, 1230,
	68, 1230,
	134, 1230,
	348, 1230,
	349, 1230,
	350, 1230,
	-2, 1486,
	-1, 1701,
	67, 1231,
	68, 1231,
	134, 1231,
	348, 1231,
	349, 1231,
	350, 1231,
	-2, 1488,
	-1, 1702,
	67, 1234,
	68, 1234,
	134, 1234,
	348, 1234,
	349, 1234,
	350, 1234,
	-2, 1616,
	-1, 1703,
	67, 1236,
	68, 1236,
	134, 1236,
	348, 1236,
	349, 1236,
	350, 1236,
	-2, 1599,
	-1, 1704,
	67, 1238,
	68, 1238,
	134, 1238,
	348, 1238,
	349, 1238,
	350, 1238,
	-2, 1548,
	-1, 1705,
	67, 1240,
	68, 1240,
	134, 1240,
	348, 1240,
	349, 1240,
	350, 1240,
	-2, 1531,
	-1, 1706,
	67, 1241,
	68, 1241,
	134, 1241,
	348, 1241,
	349, 1241,
	350, 1241,
	-2, 1532,
	-1, 1707,
	67, 1243,
	68, 1243,
	134, 1243,
	348, 1243,
	349, 1243,
	350, 1243,
	-2, 1485,
	-1, 1708,
	68, 1282,
	134, 1282,
	348, 1282,
	349, 1282,
	350, 1282,
	-2, 1510,
	-1, 1709,
	68, 1282,
	134, 1282,
	348, 1282,
	349, 1282,
	350, 1282,
	-2, 1523,
	-1, 1710,
	68, 1285,
	134, 1285,
	348, 1285,
	349, 1285,
	350, 1285,
	-2, 1506,
	-1, 1711,
	68, 1282,
	134, 1282,
	348, 1282,
	349, 1282,
	350, 1282,
	-2, 1584,
	-1, 1724,
	1, 748,
	68, 748,
	521, 748,
	-2, 754,
	-1, 1780,
	21, 524,
	-2, 615,
	-1, 1956,
	65, 431,
	134, 431,
	-2, 863,
	-1, 2231,
	87, 754,
	129, 754,
	166, 754,
	169, 754,
	-2, 811,
	-1, 2233,
	273, 926,
	-2, 905,
	-1, 2261,
	87, 754,
	129, 754,
	166, 754,
	169, 754,
	-2, 811,
	-1, 2264,
	65, 431,
	134, 431,
	-2, 864,
	-1, 2304,
	87, 754,
	129, 754,
	166, 754,
	169, 754,
	-2, 812,
	-1, 2332,
	273, 926,
	-2, 906,
	-1, 2746,
	68, 783,
	134, 783,
	-2, 754,
	-1, 2750,
	68, 783,
	134, 783,
	-2, 754,
	-1, 2764,
	68, 787,
	134, 787,
	-2, 754,
	-1, 2769,
	68, 788,
	134, 788,
	-2, 754,
}

const yyPrivate = 57344

const yyLast = 29492

var yyAct = [...]int{
	452, 2305, 1174, 2750, 2749, 2726, 2758, 1090, 2591, 434,
	2371, 2672, 432, 454, 2715, 2628, 2344, 1777, 2657, 2556,
	2656, 2536, 2489, 2290, 823, 1672, 2369, 2299, 1349, 1001,
	2560, 2497, 2370, 2544, 2223, 1773, 479, 566, 2390, 133,
	133, 1086, 2408, 1228, 2288, 133, 369, 376, 954, 2354,
	376, 2256, 1931, 136, 2333, 2115, 1275, 1959, 2303, 374,
	31, 2111, 1093, 2353, 1808, 1277, 1032, 1376, 1382, 1307,
	2237, 1977, 1337, 381, 658, 1315, 436, 2244, 1578, 1772,
	2116, 1847, 2120, 424, 1814, 1680, 561, 426, 2190, 1998,
	2173, 2131, 2126, 2128, 1815, 1732, 939, 691, 2059, 600,
	1226, 1678, 431, 387, 1387, 2109, 1231, 1846, 1574, 1383,
	1245, 1390, 1330, 427, 132, 132, 2012, 1573, 1976, 1377,
	360, 1761, 662, 561, 1928, 1310, 1287, 1384, 1933, 3,
	665, 42, 133, 373, 19, 370, 8, 1288, 2308, 1265,
	1731, 1725, 927, 1253, 1606, 1084, 433, 686, 1089, 1236,
	371, 6, 372, 7, 859, 1024, 1575, 1334, 1676, 87,
	1717, 660, 1300, 1299, 1289, 435, 362, 685, 1585, 1660,
	941, 1138, 423, 1124, 443, 1173, 42, 1589, 1075, 365,
	708, 1775, 1371, 687, 1354, 650, 1308, 384, 31, 904,
	619, 1083, 1782, 1295, 1264, 599, 969, 1143, 980, 563,
	389, 16, 1144, 375, 955, 993, 390, 693, 1023, 9,
	651, 565, 597, 4, 922, 2052, 924, 123, 612, 2052,
	1592, 1849, 1582, 128, 2403, 1809, 2222, 1249, 2578, 1379,
	564, 2619, 127, 127, 574, 2362, 126, 127, 127, 1164,
	38, 117, 97, 824, 127, 127, 127, 728, 38, 117,
	97, 127, 1042, 379, 1834, 1579, 982, 1842, 684, 42,
	358, 2301, 19, 2609, 8, 925, 926, 127, 1039, 38,
	117, 97, 1590, 2199, 1076, 129, 1080, 762, 1930, 6,
	2029, 7, 761, 874, 663, 1916, 966, 2645, 967, 1041,
	124, 1318, 1319, 951, 124, 124, 560, 960, 961, 629,
	1079, 124, 124, 124, 1179, 2643, 1029, 983, 1035, 1060,
	551, 1291, 550, 552, 553, 1092, 554, 555, 743, 760,
	744, 589, 958, 575, 124, 957, 960, 961, 2579, 2580,
	1929, 1889, 2660, 2661, 766, 767, 768, 765, 2388, 755,
	2099, 2399, 2632, 2633, 2391, 2392, 2393, 2394, 746, 2482,
	2100, 2485, 2101, 2405, 2224, 386, 1829, 1095, 702, 2559,
	1331, 2207, 133, 701, 2245, 711, 1586, 1323, 2252, 1936,
	1081, 1071, 2142, 700, 1756, 567, 1715, 2618, 376, 376,
	1657, 133, 2367, 862, 1160, 2132, 2465, 1157, 1220, 1219,
	1078, 1159, 1156, 1158, 1162, 1163, 696, 698, 2047, 1161,
	1922, 882, 886, 888, 890, 892, 893, 895, 1839, 899,
	896, 897, 898, 2351, 741, 877, 878, 879, 880, 860,
	861, 883, 2045, 863, 2140, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 875, 881, 699, 757, 96,
	798, 125, 711, 591, 885, 887, 889, 891, 894, 2621,
	2622, 634, 695, 588, 587, 1094, 719, 731, 2136, 2398,
	115, 1819, 1327, 949, 2659, 2400, 758, 759, 2670, 2468,
	2364, 2647, 742, 378, 581, 2137, 2138, 736, 377, 738,
	876, 2459, 697, 2498, 2743, 586, 2759, 2681, 723, 2642,
	2139, 2558, 2593, 1077, 1591, 2688, 2737, 42, 42, 661,
	946, 420, 2452, 1888, 421, 968, 2616, 739, 2718, 635,
	2545, 2546, 2547, 2549, 2548, 585, 425, 926, 748, 584,
	749, 1596, 1598, 1599, 2421, 576, 753, 754, 663, 1167,
	1168, 1169, 1170, 1171, 1172, 1165, 1166, 745, 713, 712,
	579, 2420, 769, 1102, 1105, 1106, 704, 705, 751, 1034,
	2134, 797, 2443, 2599, 1103, 1944, 1945, 1946, 1947, 805,
	577, 2589, 2590, 2447, 2593, 2649, 2650, 1942, 989, 973,
	988, 953, 952, 732, 586, 721, 945, 921, 923, 2760,
	810, 716, 717, 1580, 944, 799, 800, 801, 802, 720,
	1580, 1580, 2766, 2727, 2754, 734, 2409, 663, 580, 600,
	901, 1862, 1863, 2218, 692, 2211, 1607, 737, 740, 2051,
	2000, 2002, 928, 2480, 747, 713, 712, 385, 981, 803,
	1835, 728, 2719, 1789, 2620, 960, 961, 1583, 1303, 2121,
	2124, 733, 1259, 832, 931, 2055, 959, 1935, 706, 2050,
	934, 2581, 2582, 960, 961, 853, 2521, 2124, 933, 752,
	380, 2105, 1594, 561, 561, 561, 936, 2143, 1005, 1005,
	956, 950, 1332, 590, 2133, 39, 2004, 2466, 1321, 1030,
	1593, 2557, 750, 1581, 376, 923, 1027, 1027, 1786, 2048,
	2648, 986, 594, 595, 596, 2363, 1053, 1054, 1007, 1939,
	1940, 1322, 98, 98, 39, 1037, 735, 98, 98, 1003,
	1003, 727, 2368, 1938, 98, 98, 98, 1843, 763, 1009,
	1324, 98, 2061, 2060, 1072, 1058, 2753, 1788, 1787, 984,
	985, 884, 1785, 929, 930, 1320, 932, 98, 1005, 2135,
	1005, 701, 834, 835, 661, 637, 638, 2153, 2700, 630,
	722, 1091, 1719, 1597, 2772, 1043, 2716, 2717, 677, 682,
	683, 1033, 1810, 2125, 764, 1040, 1957, 2765, 2118, 970,
	1822, 970, 2119, 2122, 2001, 1104, 1826, 2771, 2448, 2449,
	2125, 906, 728, 2445, 1057, 1067, 1634, 2444, 947, 1633,
	1357, 1950, 1056, 2232, 1666, 963, 964, 565, 1834, 1026,
	1026, 1074, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 908, 1326, 1958, 1133, 1134, 1142,
	764, 938, 1771, 1924, 2123, 1798, 1278, 1579, 632, 1189,
	974, 631, 978, 979, 2762, 1671, 1096, 2744, 2739, 1195,
	630, 2730, 962, 764, 2729, 965, 1718, 42, 1088, 2704,
	1638, 1201, 1202, 1197, 641, 764, 42, 2674, 1798, 1066,
	977, 1063, 987, 561, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 999, 1000, 996, 997, 998, 1062, 2522, 2524, 2525,
	2526, 2523, 2415, 2667, 1107, 1958, 1085, 1021, 1097, 1098,
	1099, 1100, 1101, 358, 1069, 1028, 1049, 1044, 1670, 1022,
	2763, 640, 1278, 1588, 2740, 643, 642, 1588, 1010, 1355,
	1588, 1242, 1221, 1045, 1951, 1588, 1227, 2662, 2651, 632,
	728, 2637, 631, 2675, 679, 680, 681, 1065, 2614, 565,
	1140, 1141, 1570, 937, 1235, 1064, 1176, 1082, 1262, 1061,
	1005, 1183, 2613, 1269, 1771, 1087, 2612, 1616, 600, 2470,
	1132, 1276, 2611, 2601, 1005, 1136, 1188, 971, 2477, 1268,
	1243, 1770, 766, 767, 768, 765, 766, 767, 768, 765,
	2476, 1224, 766, 767, 768, 765, 1126, 1296, 1296, 2469,
	1301, 1073, 568, 2470, 1798, 1301, 1246, 2638, 2286, 1262,
	1005, 1317, 990, 2251, 2470, 1233, 1234, 2019, 1175, 1294,
	1178, 561, 1995, 1005, 1912, 1190, 2080, 781, 2470, 1343,
	1669, 1910, 2470, 1908, 1906, 1196, 1615, 1198, 2470, 2602,
	2170, 1177, 2724, 1283, 2478, 1262, 1005, 1247, 1348, 133,
	133, 1251, 1261, 2676, 1254, 1894, 1736, 1359, 2267, 1292,
	1293, 133, 1851, 1832, 1267, 2470, 1189, 1375, 686, 1199,
	725, 726, 1189, 1189, 2020, 972, 1824, 1238, 1351, 1241,
	2154, 1820, 1816, 2020, 592, 1771, 1735, 639, 1771, 1365,
	1913, 2014, 1960, 1216, 1392, 694, 1667, 1911, 1260, 1907,
	1907, 1276, 1837, 1304, 687, 1005, 1270, 1271, 1266, 1836,
	1828, 1752, 970, 1630, 1617, 1569, 1284, 902, 1362, 1279,
	2158, 764, 1280, 1328, 1350, 1350, 1250, 1290, 764, 1736,
	1393, 1333, 1244, 1046, 1641, 1640, 1350, 1247, 900, 1345,
	726, 1298, 1817, 1247, 1247, 808, 1282, 1821, 1817, 714,
	1347, 1182, 1736, 1285, 1286, 1587, 1050, 1571, 1266, 694,
	1601, 1784, 1666, 1273, 1272, 1181, 1180, 2042, 1302, 2044,
	578, 1281, 1200, 1604, 1605, 1203, 1204, 1205, 1206, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1341, 1342, 1577,
	942, 1297, 971, 1373, 1085, 2713, 994, 1857, 992, 1373,
	764, 764, 636, 1306, 1305, 2701, 1329, 995, 1932, 644,
	2603, 42, 2171, 467, 88, 670, 669, 671, 1352, 2053,
	2043, 1588, 1051, 1827, 1791, 663, 703, 694, 1139, 1344,
	1612, 663, 1338, 1339, 1340, 1139, 1263, 1346, 2636, 1645,
	1576, 768, 765, 1363, 2455, 668, 782, 783, 784, 785,
	786, 787, 788, 781, 1380, 1207, 359, 765, 1391, 88,
	1567, 2454, 1568, 1385, 2438, 1386, 780, 779, 789, 790,
	782, 783, 784, 785, 786, 787, 788, 781, 991, 1131,
	1609, 2241, 1572, 1613, 2236, 1636, 2018, 633, 424, 701,
	972, 133, 2736, 673, 1129, 1130, 1128, 2748, 2733, 1681,
	2698, 133, 133, 1733, 1595, 2532, 1603, 766, 767, 768,
	765, 666, 1301, 1600, 1193, 1743, 1859, 663, 2682, 2570,
	2538, 369, 2530, 1623, 1194, 2516, 1624, 2515, 1628, 1301,
	2528, 674, 1602, 1126, 2514, 2735, 686, 2518, 664, 1611,
	2654, 2365, 88, 2531, 1639, 1317, 2511, 1642, 1643, 1644,
	2073, 2249, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	2529, 1655, 766, 767, 768, 765, 1713, 1882, 2527, 667,
	2505, 2502, 687, 2501, 1005, 2517, 1728, 1729, 1741, 2366,
	2248, 1744, 1745, 2141, 701, 2097, 1027, 2096, 1317, 2250,
	1742, 1803, 2038, 1805, 1681, 2072, 1778, 1778, 2016, 1778,
	1189, 1262, 784, 785, 786, 787, 788, 781, 1665, 1664,
	1663, 874, 1659, 1658, 1781, 1796, 1047, 766, 767, 768,
	765, 919, 1737, 1779, 2127, 1783, 688, 689, 690, 2563,
	1662, 2669, 1712, 420, 672, 2653, 421, 2537, 1726, 2300,
	2634, 2597, 766, 767, 768, 765, 1748, 1620, 1750, 2596,
	1800, 766, 767, 768, 765, 2464, 2586, 1802, 2519, 1807,
	1675, 2512, 1290, 1673, 1674, 1720, 1812, 2508, 1813, 1818,
	2292, 2507, 2506, 2467, 1866, 1740, 2440, 766, 767, 768,
	765, 2404, 1247, 1247, 1247, 2298, 1747, 1749, 1746, 1751,
	2296, 1753, 766, 767, 768, 765, 1757, 2259, 2247, 1026,
	899, 896, 897, 898, 663, 2764, 1871, 2246, 1870, 1869,
	1867, 862, 2243, 832, 2210, 852, 1848, 766, 767, 768,
	765, 1754, 766, 767, 768, 765, 1792, 1793, 1794, 882,
	886, 888, 890, 892, 893, 895, 2104, 899, 896, 897,
	898, 1801, 1799, 877, 878, 879, 880, 860, 861, 883,
	1626, 863, 2095, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 875, 881, 766, 767, 768, 765, 2049,
	2017, 1868, 885, 887, 889, 891, 894, 2007, 455, 464,
	88, 88, 664, 456, 1668, 463, 457, 461, 460, 458,
	459, 772, 773, 774, 775, 776, 777, 778, 770, 2291,
	1830, 507, 506, 1625, 2604, 1661, 1364, 1256, 876, 2214,
	1005, 1614, 1005, 1048, 1005, 833, 828, 827, 809, 701,
	2741, 766, 767, 768, 765, 766, 767, 768, 765, 1844,
	2145, 766, 767, 768, 765, 2076, 465, 789, 790, 782,
	783, 784, 785, 786, 787, 788, 781, 1005, 1875, 2075,
	2488, 796, 2261, 1840, 2260, 2231, 2220, 766, 767, 768,
	765, 1883, 2074, 2219, 2203, 1005, 462, 766, 767, 768,
	765, 766, 767, 768, 765, 2189, 1874, 1903, 2188, 1885,
	2159, 2078, 2071, 2063, 766, 767, 768, 765, 1003, 2058,
	2011, 1923, 1872, 1873, 1884, 792, 1909, 795, 1905, 766,
	767, 768, 765, 1904, 1646, 127, 1003, 1637, 117, 97,
	1902, 1635, 793, 794, 791, 1901, 780, 779, 789, 790,
	782, 783, 784, 785, 786, 787, 788, 781, 1900, 1632,
	1861, 1841, 766, 767, 768, 765, 1631, 766, 767, 768,
	765, 1855, 1629, 133, 569, 570, 571, 572, 1622, 1005,
	766, 767, 768, 765, 1619, 1838, 1858, 568, 1085, 1833,
	1618, 1956, 124, 2761, 1876, 1877, 1831, 1962, 1192, 1914,
	1880, 1881, 1235, 1191, 1012, 127, 2712, 2706, 1852, 2689,
	2686, 909, 1886, 1971, 1854, 133, 2684, 825, 2569, 701,
	1317, 1317, 1317, 1317, 2554, 2542, 2539, 1925, 2534, 1978,
	1865, 701, 1317, 2494, 1223, 1921, 1013, 2462, 2461, 2460,
	1247, 1978, 2457, 1917, 1918, 1254, 2451, 2436, 1926, 2278,
	1005, 2276, 2254, 2242, 31, 940, 2082, 1232, 133, 133,
	1225, 1949, 124, 1233, 1234, 2024, 1954, 1953, 1965, 1974,
	1994, 1952, 1967, 2458, 1899, 1919, 1927, 1237, 1189, 884,
	1240, 1229, 2025, 1823, 1790, 1734, 1127, 1189, 1778, 1898,
	1972, 124, 1370, 1353, 1258, 1005, 766, 767, 768, 765,
	1230, 1070, 1036, 1963, 903, 1011, 2036, 851, 850, 359,
	849, 766, 767, 768, 765, 848, 847, 846, 1941, 1238,
	845, 1241, 844, 1726, 1961, 42, 1948, 1266, 19, 1993,
	8, 1955, 843, 2009, 2010, 88, 842, 841, 1970, 88,
	1973, 1966, 2037, 2021, 2030, 6, 1975, 7, 840, 1991,
	88, 1990, 839, 2031, 838, 837, 1246, 1992, 836, 88,
	2033, 831, 830, 565, 2008, 829, 826, 2005, 822, 821,
	2064, 1964, 819, 2066, 818, 2068, 817, 816, 815, 1968,
	2046, 1969, 814, 813, 2015, 701, 812, 811, 701, 807,
	1739, 2734, 2130, 2034, 2028, 1681, 2032, 1247, 2114, 2041,
	2035, 1247, 2026, 2040, 133, 2022, 1979, 1980, 1981, 1982,
	806, 730, 1722, 701, 701, 718, 2056, 2054, 1317, 1733,
	2003, 2157, 2062, 2114, 2114, 2180, 2694, 2161, 2065, 1897,
	2692, 2069, 2070, 2057, 2658, 2130, 1896, 2067, 780, 779,
	789, 790, 782, 783, 784, 785, 786, 787, 788, 781,
	2177, 766, 767, 768, 765, 1943, 2077, 1797, 766, 767,
	768, 765, 2147, 2148, 2149, 2174, 2175, 1367, 729, 2179,
	1984, 1987, 1985, 1983, 1893, 1875, 1988, 1986, 1811, 2146,
	2747, 1262, 1892, 2108, 2023, 1262, 2106, 2155, 1825, 1989,
	2160, 1767, 1768, 1369, 2162, 2163, 766, 767, 768, 765,
	1891, 2107, 2169, 71, 766, 767, 768, 765, 1727, 1368,
	1217, 133, 2152, 1887, 2156, 41, 133, 2181, 2150, 2151,
	2102, 2103, 766, 767, 768, 765, 2166, 2168, 2167, 2165,
	1879, 2281, 2178, 2280, 40, 766, 767, 768, 765, 2197,
	1850, 2200, 2195, 2185, 2186, 2187, 355, 2182, 1878, 1673,
	1674, 2201, 766, 767, 768, 765, 130, 2204, 356, 1856,
	1845, 905, 1716, 724, 2194, 1135, 2496, 2279, 2270, 2202,
	766, 767, 768, 765, 2230, 2198, 1274, 357, 2235, 1257,
	2206, 766, 767, 768, 765, 2625, 2208, 766, 767, 768,
	765, 2212, 976, 1758, 2209, 975, 354, 1181, 1180, 917,
	918, 2164, 756, 2205, 2184, 1890, 915, 916, 1005, 1005,
	1895, 913, 914, 1566, 1317, 2264, 1763, 1766, 1767, 1768,
	1764, 943, 1765, 1769, 1316, 907, 1763, 1766, 1767, 1768,
	1764, 701, 1765, 1769, 911, 912, 2707, 2255, 2587, 2574,
	2572, 1978, 2499, 2495, 2229, 2487, 2486, 2213, 2484, 1003,
	2257, 2228, 2240, 2385, 2215, 2283, 2234, 1189, 2384, 2297,
	2233, 2294, 2238, 2226, 2238, 2225, 1778, 2272, 2192, 569,
	570, 571, 572, 910, 568, 2266, 2191, 2013, 1278, 664,
	2039, 2265, 568, 2263, 1621, 664, 715, 2268, 2696, 2695,
	2269, 2695, 2262, 701, 88, 2696, 2453, 2355, 2357, 2196,
	2355, 2355, 2273, 2114, 2274, 2271, 948, 49, 1, 1255,
	573, 1366, 1996, 1997, 2293, 701, 2183, 1999, 1584, 1755,
	1714, 2144, 935, 2239, 593, 2284, 1184, 2285, 1055, 676,
	710, 1052, 709, 707, 1137, 2287, 469, 1276, 1378, 2382,
	2535, 2381, 2624, 2671, 2568, 1247, 2295, 2356, 2275, 2352,
	2302, 2277, 2627, 1068, 2330, 453, 2479, 2401, 2098, 2387,
	2481, 2389, 2407, 2358, 2359, 2282, 2411, 1915, 2289, 2027,
	608, 796, 501, 477, 820, 1038, 1031, 678, 476, 2253,
	2375, 2379, 2266, 2374, 1937, 675, 609, 1656, 2376, 2377,
	2378, 2221, 2386, 2380, 1218, 1239, 1222, 2757, 2746, 2725,
	2705, 1005, 2592, 2742, 2641, 2687, 2397, 2395, 2396, 2439,
	2680, 2588, 133, 391, 1325, 559, 2361, 648, 2555, 2412,
	2413, 2357, 2416, 2417, 2418, 2419, 392, 1738, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2257, 2414, 2360, 2617, 2541, 2437, 2352, 2710,
	582, 2081, 2441, 1721, 583, 2083, 2084, 2085, 2086, 1724,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 1723, 1108,
	2463, 771, 2500, 1125, 2475, 2471, 2216, 2217, 2474, 2473,
	804, 430, 1610, 442, 1934, 2345, 2006, 2456, 2483, 48,
	47, 46, 45, 1358, 1388, 2533, 780, 779, 789, 790,
	782, 783, 784, 785, 786, 787, 788, 781, 471, 135,
	1389, 2583, 2402, 2629, 451, 450, 449, 448, 701, 1762,
	2513, 701, 701, 701, 1760, 1759, 1312, 2503, 2504, 1311,
	1356, 701, 2655, 2509, 2510, 2607, 2608, 2450, 1778, 2566,
	2520, 2446, 2442, 2598, 2543, 2304, 2472, 2551, 2552, 2553,
	2540, 2331, 2332, 2550, 2338, 2584, 858, 2562, 1780, 854,
	856, 857, 855, 2561, 1005, 1005, 2564, 1864, 1860, 2112,
	2113, 2493, 2573, 2577, 2575, 2576, 2571, 2110, 920, 2406,
	2227, 1679, 1677, 2585, 2565, 2176, 2172, 1374, 1252, 1920,
	1313, 1309, 2373, 2594, 2595, 133, 562, 32, 27, 5,
	30, 1316, 29, 701, 28, 1003, 1003, 14, 15, 13,
	1059, 12, 18, 26, 25, 701, 24, 23, 79, 78,
	77, 76, 22, 2600, 11, 2606, 75, 74, 73, 2610,
	2631, 21, 20, 69, 67, 68, 59, 58, 57, 66,
	65, 2615, 64, 2630, 2336, 607, 56, 55, 701, 2623,
	54, 53, 63, 62, 61, 60, 52, 51, 2639, 50,
	95, 94, 2635, 93, 2493, 92, 91, 90, 2346, 33,
	1350, 34, 35, 2644, 2646, 36, 105, 104, 106, 107,
	102, 2339, 100, 103, 2652, 101, 99, 2334, 43, 10,
	17, 2, 2349, 2350, 0, 2673, 0, 0, 2335, 2678,
	0, 701, 2663, 2664, 2665, 2666, 0, 0, 2679, 0,
	0, 1091, 0, 2605, 0, 0, 2683, 0, 2685, 2677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2668, 0, 2340, 2690, 2691, 2631, 2703, 2693, 127,
	0, 38, 117, 97, 2697, 701, 0, 701, 2699, 2630,
	0, 2702, 2709, 0, 2711, 1091, 0, 1091, 0, 122,
	874, 0, 2714, 0, 0, 0, 110, 0, 0, 0,
	2673, 2720, 2721, 701, 0, 86, 2728, 0, 0, 0,
	2732, 0, 0, 1091, 0, 2738, 0, 0, 0, 0,
	72, 0, 1164, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2745, 0, 2752, 0,
	2493, 0, 2756, 0, 0, 2755, 766, 767, 768, 765,
	0, 2348, 0, 2117, 2767, 0, 2752, 0, 2769, 2770,
	2768, 2756, 0, 0, 0, 402, 0, 401, 408, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 2342, 405,
	406, 0, 407, 411, 0, 0, 393, 0, 0, 0,
	862, 0, 0, 0, 118, 119, 416, 120, 121, 0,
	2341, 2343, 0, 0, 0, 2723, 0, 0, 882, 886,
	888, 890, 892, 893, 895, 0, 899, 896, 897, 898,
	0, 1164, 877, 878, 879, 880, 860, 861, 883, 0,
	863, 0, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 875, 881, 602, 2708, 0, 0, 0, 0,
	0, 885, 887, 889, 891, 894, 0, 0, 0, 0,
	0, 0, 96, 116, 125, 2079, 70, 1160, 2351, 0,
	1157, 0, 0, 0, 1159, 1156, 1158, 1162, 1163, 0,
	2337, 0, 1161, 115, 109, 108, 2347, 876, 0, 0,
	44, 0, 780, 779, 789, 790, 782, 783, 784, 785,
	786, 787, 788, 781, 0, 630, 0, 0, 88, 0,
	0, 0, 780, 779, 789, 790, 782, 783, 784, 785,
	786, 787, 788, 781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 1316, 1316, 1316, 0, 0, 0,
	0, 0, 0, 0, 0, 1316, 0, 0, 111, 112,
	113, 0, 0, 0, 0, 0, 0, 0, 394, 396,
	395, 0, 0, 0, 0, 0, 1160, 400, 0, 1157,
	0, 0, 0, 1159, 1156, 1158, 1162, 1163, 0, 404,
	0, 1161, 0, 0, 632, 80, 419, 631, 0, 114,
	0, 81, 0, 397, 0, 0, 0, 0, 88, 0,
	0, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 1167, 1168, 1169, 1170, 1171, 1172, 1165, 1166,
	0, 617, 0, 0, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 0, 1608, 0, 0, 0,
	0, 0, 0, 83, 37, 622, 780, 779, 789, 790,
	782, 783, 784, 785, 786, 787, 788, 781, 780, 779,
	789, 790, 782, 783, 784, 785, 786, 787, 788, 781,
	0, 0, 0, 0, 0, 399, 403, 409, 0, 410,
	412, 0, 0, 413, 414, 415, 39, 0, 417, 418,
	1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154,
	1155, 1167, 1168, 1169, 1170, 1171, 1172, 1165, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 884, 98,
	0, 1316, 0, 0, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 604, 625, 780, 779, 789,
	790, 782, 783, 784, 785, 786, 787, 788, 781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 84, 85, 89,
	779, 789, 790, 782, 783, 784, 785, 786, 787, 788,
	781, 0, 0, 88, 0, 88, 0, 0, 0, 0,
	0, 621, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 614, 0,
	616, 629, 0, 0, 0, 613, 611, 610, 0, 615,
	605, 606, 0, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 1546, 0, 0, 1493, 303,
	1451, 1506, 1424, 1440, 1514, 1441, 1442, 1479, 1403, 1461,
	265, 1438, 0, 0, 0, 0, 0, 1316, 1496, 1395,
	1427, 1428, 1397, 1434, 1398, 1425, 1453, 210, 1423, 1464,
	235, 1476, 1437, 1458, 1512, 0, 0, 295, 249, 0,
	0, 1456, 1498, 1459, 1484, 1450, 1480, 1411, 1472, 1507,
	1439, 0, 1477, 1508, 0, 0, 0, 0, 688, 689,
	690, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 1475, 1502, 1436, 0, 194, 1505, 1457, 1478, 0,
	0, 1396, 1473, 0, 1401, 1404, 1513, 1500, 1431, 1432,
	0, 0, 0, 0, 88, 0, 0, 0, 1454, 1460,
	1481, 1447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1429, 0, 1469, 0, 0, 0, 1406, 1402, 0,
	1452, 0, 0, 182, 300, 316, 192, 291, 329, 197,
	298, 187, 264, 287, 88, 1545, 184, 314, 297, 246,
	229, 230, 183, 0, 282, 208, 221, 204, 262, 0,
	313, 341, 203, 332, 1405, 324, 186, 1540, 323, 261,
	310, 315, 247, 241, 185, 312, 245, 240, 233, 212,
	0, 225, 273, 239, 274, 226, 251, 250, 252, 1524,
	1525, 1526, 1527, 1528, 352, 1536, 1537, 0, 1541, 1542,
	1543, 1410, 0, 1430, 1482, 0, 1394, 1565, 1491, 1499,
	1449, 326, 1501, 1446, 1445, 1531, 0, 1530, 299, 1532,
	1533, 234, 1497, 1426, 1435, 342, 1433, 285, 267, 1503,
	1468, 1544, 283, 237, 311, 275, 317, 301, 325, 279,
	276, 177, 302, 206, 248, 188, 190, 202, 209, 211,
	213, 214, 257, 258, 270, 290, 304, 305, 306, 205,
	198, 284, 199, 223, 200, 178, 292, 201, 180, 271,
	309, 1529, 219, 280, 244, 181, 243, 272, 308, 307,
	189, 333, 339, 340, 344, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	1538, 0, 1539, 338, 217, 174, 175, 321, 0, 263,
	0, 1494, 1399, 1409, 1407, 1443, 1470, 1471, 259, 337,
	1486, 1490, 1487, 1515, 288, 0, 0, 0, 0, 0,
	228, 269, 1488, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1400, 0, 296, 319, 331, 348,
	351, 1547, 1548, 1549, 179, 350, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 322, 1444, 1417, 1455, 330, 1420, 1418,
	1485, 1419, 1474, 346, 253, 254, 255, 256, 220, 0,
	196, 349, 278, 1465, 1448, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1466, 1558, 1559, 1560, 1561, 1562, 1422, 343,
	216, 222, 0, 224, 195, 268, 218, 328, 231, 1492,
	1563, 1564, 260, 227, 293, 232, 238, 281, 327, 266,
	286, 193, 318, 294, 242, 0, 0, 1416, 1421, 1415,
	1462, 1463, 1509, 1510, 1511, 1483, 1408, 1495, 0, 1412,
	1414, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1489, 303, 483, 1467, 176, 0, 236, 1516, 277,
	215, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 444, 0, 0, 0,
	210, 0, 0, 235, 0, 0, 0, 475, 0, 0,
	295, 249, 0, 0, 0, 0, 530, 538, 0, 1534,
	1535, 334, 335, 336, 320, 0, 207, 1557, 437, 0,
	0, 468, 507, 506, 455, 464, 0, 0, 191, 456,
	0, 463, 457, 461, 460, 458, 459, 0, 522, 0,
	0, 0, 0, 0, 0, 428, 441, 2490, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	438, 439, 0, 0, 0, 0, 484, 0, 440, 0,
	0, 486, 465, 466, 0, 0, 182, 300, 316, 192,
	291, 329, 197, 298, 187, 264, 287, 0, 0, 184,
	314, 297, 246, 229, 230, 183, 0, 282, 208, 221,
	204, 262, 462, 482, 487, 203, 544, 480, 324, 186,
	0, 323, 261, 310, 315, 247, 241, 185, 312, 245,
	240, 233, 212, 545, 225, 273, 239, 274, 226, 251,
	250, 252, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 326, 0, 0, 528, 0, 0,
	0, 299, 0, 0, 234, 0, 0, 0, 481, 0,
	285, 267, 541, 429, 0, 283, 237, 311, 275, 317,
	301, 325, 279, 276, 177, 302, 206, 248, 188, 190,
	202, 209, 211, 213, 214, 257, 258, 270, 290, 304,
	305, 306, 205, 198, 284, 199, 223, 200, 178, 292,
	201, 180, 271, 309, 0, 219, 280, 244, 181, 243,
	272, 308, 307, 189, 333, 339, 340, 344, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 338, 217, 174, 175,
	321, 526, 263, 0, 540, 521, 523, 524, 527, 531,
	532, 533, 534, 535, 537, 539, 543, 288, 0, 0,
	0, 0, 0, 228, 269, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	319, 331, 348, 351, 0, 0, 0, 179, 350, 0,
	2491, 0, 0, 0, 2492, 0, 542, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 485, 253, 254, 255,
	256, 529, 0, 196, 349, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 216, 222, 0, 224, 195, 268, 218,
	328, 231, 0, 0, 0, 260, 227, 293, 232, 238,
	281, 327, 266, 286, 193, 318, 294, 242, 0, 0,
	551, 525, 550, 552, 553, 549, 554, 555, 536, 447,
	0, 490, 547, 546, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	236, 0, 277, 215, 514, 494, 495, 496, 446, 497,
	492, 493, 515, 488, 511, 512, 470, 473, 498, 510,
	499, 513, 516, 517, 556, 557, 505, 558, 502, 518,
	509, 508, 500, 489, 519, 520, 474, 472, 503, 504,
	491, 303, 483, 0, 334, 335, 336, 320, 0, 207,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 444, 0, 0, 0, 210,
	0, 0, 235, 0, 0, 0, 475, 0, 0, 295,
	249, 0, 0, 0, 0, 530, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 0, 0,
	468, 507, 506, 455, 464, 0, 0, 191, 456, 0,
	463, 457, 461, 460, 458, 459, 0, 522, 0, 0,
	0, 0, 0, 0, 428, 441, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	439, 0, 0, 0, 0, 484, 0, 440, 0, 0,
	486, 465, 466, 0, 0, 182, 300, 316, 192, 291,
	329, 197, 298, 187, 264, 287, 0, 0, 184, 314,
	297, 246, 229, 230, 183, 0, 282, 208, 221, 204,
	262, 462, 482, 487, 203, 544, 480, 324, 186, 0,
	323, 261, 310, 315, 247, 241, 185, 312, 245, 240,
	233, 212, 545, 225, 273, 239, 274, 226, 251, 250,
	252, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 326, 0, 0, 528, 0, 0, 0,
	299, 0, 0, 234, 0, 0, 0, 481, 0, 285,
	267, 541, 429, 0, 283, 237, 311, 275, 317, 301,
	325, 279, 276, 177, 302, 206, 248, 188, 190, 202,
	209, 211, 213, 214, 257, 258, 270, 290, 304, 305,
	306, 205, 198, 284, 199, 223, 200, 178, 292, 201,
	180, 271, 309, 0, 219, 280, 244, 181, 243, 272,
	308, 307, 189, 333, 339, 340, 344, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 1186, 1185, 1187, 338, 217, 174, 175, 321,
	526, 263, 0, 540, 521, 523, 524, 527, 531, 532,
	533, 534, 535, 537, 539, 543, 288, 0, 0, 0,
	0, 0, 228, 269, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 319,
	331, 348, 351, 0, 0, 0, 179, 350, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 485, 253, 254, 255, 256,
	529, 0, 196, 349, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 216, 222, 0, 224, 195, 268, 218, 328,
	231, 0, 0, 0, 260, 227, 293, 232, 238, 281,
	327, 266, 286, 193, 318, 294, 242, 0, 0, 551,
	525, 550, 552, 553, 549, 554, 555, 536, 447, 0,
	490, 547, 546, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 236,
	0, 277, 215, 514, 494, 495, 496, 446, 497, 492,
	493, 515, 488, 511, 512, 470, 473, 498, 510, 499,
	513, 516, 517, 556, 557, 505, 558, 502, 518, 509,
	508, 500, 489, 519, 520, 474, 472, 503, 504, 491,
	303, 483, 0, 334, 335, 336, 320, 0, 207, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 444, 0, 0, 0, 210, 0,
	0, 235, 0, 0, 0, 475, 0, 0, 295, 249,
	0, 0, 0, 0, 530, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 468,
	507, 506, 455, 464, 0, 0, 191, 456, 0, 463,
	457, 461, 460, 458, 459, 0, 522, 0, 0, 0,
	0, 0, 0, 428, 441, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 484, 0, 440, 0, 0, 486,
	465, 466, 0, 0, 182, 300, 316, 192, 291, 329,
	197, 298, 187, 264, 287, 0, 0, 184, 314, 297,
	246, 229, 230, 183, 0, 282, 208, 221, 204, 262,
	462, 482, 487, 203, 544, 480, 324, 186, 0, 323,
	261, 310, 315, 247, 241, 185, 312, 245, 240, 233,
	212, 545, 225, 273, 239, 274, 226, 251, 250, 252,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 326, 0, 0, 528, 0, 0, 0, 299,
	0, 0, 234, 0, 0, 0, 481, 0, 285, 267,
	541, 429, 0, 283, 237, 311, 275, 317, 301, 325,
	279, 276, 177, 302, 206, 248, 188, 190, 202, 209,
	211, 213, 214, 257, 258, 270, 290, 304, 305, 306,
	205, 198, 284, 199, 223, 200, 178, 292, 201, 180,
	271, 309, 0, 219, 280, 244, 181, 243, 272, 308,
	307, 189, 333, 339, 340, 344, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 338, 217, 174, 175, 321, 526,
	263, 0, 540, 521, 523, 524, 527, 531, 532, 533,
	534, 535, 537, 539, 543, 288, 0, 0, 0, 0,
	0, 228, 269, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 319, 331,
	348, 351, 0, 0, 0, 179, 350, 0, 2491, 0,
	0, 0, 2492, 0, 542, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 485, 253, 254, 255, 256, 529,
	0, 196, 349, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 216, 222, 0, 224, 195, 268, 218, 328, 231,
	0, 0, 0, 260, 227, 293, 232, 238, 281, 327,
	266, 286, 193, 318, 294, 242, 0, 0, 551, 525,
	550, 552, 553, 549, 554, 555, 536, 447, 0, 490,
	547, 546, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 236, 0,
	277, 215, 514, 494, 495, 496, 446, 497, 492, 493,
	515, 488, 511, 512, 470, 473, 498, 510, 499, 513,
	516, 517, 556, 557, 505, 558, 502, 518, 509, 508,
	500, 489, 519, 520, 474, 472, 503, 504, 491, 303,
	483, 0, 334, 335, 336, 320, 0, 207, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 444, 0, 0, 0, 210, 1248, 0,
	235, 0, 0, 0, 475, 0, 0, 295, 249, 0,
	0, 0, 0, 530, 538, 0, 0, 0, 0, 0,
	0, 0, 1335, 0, 0, 437, 0, 0, 468, 507,
	506, 455, 464, 0, 0, 191, 456, 0, 463, 457,
	461, 460, 458, 459, 0, 522, 0, 0, 0, 0,
	0, 0, 428, 441, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 439, 0,
	0, 0, 0, 484, 0, 440, 0, 0, 1336, 465,
	466, 0, 0, 182, 300, 316, 192, 291, 329, 197,
	298, 187, 264, 287, 0, 0, 184, 314, 297, 246,
	229, 230, 183, 0, 282, 208, 221, 204, 262, 462,
	482, 487, 203, 544, 480, 324, 186, 0, 323, 261,
	310, 315, 247, 241, 185, 312, 245, 240, 233, 212,
	545, 225, 273, 239, 274, 226, 251, 250, 252, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 326, 0, 0, 528, 0, 0, 0, 299, 0,
	0, 234, 0, 0, 0, 481, 0, 285, 267, 541,
	429, 0, 283, 237, 311, 275, 317, 301, 325, 279,
	276, 177, 302, 206, 248, 188, 190, 202, 209, 211,
	213, 214, 257, 258, 270, 290, 304, 305, 306, 205,
	198, 284, 199, 223, 200, 178, 292, 201, 180, 271,
	309, 0, 219, 280, 244, 181, 243, 272, 308, 307,
	189, 333, 339, 340, 344, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 338, 217, 174, 175, 321, 526, 263,
	0, 540, 521, 523, 524, 527, 531, 532, 533, 534,
	535, 537, 539, 543, 288, 0, 0, 0, 0, 0,
	228, 269, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 319, 331, 348,
	351, 0, 0, 0, 179, 350, 0, 0, 0, 0,
	0, 0, 0, 542, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 485, 253, 254, 255, 256, 529, 0,
	196, 349, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	216, 222, 0, 224, 195, 268, 218, 328, 231, 0,
	0, 0, 260, 227, 293, 232, 238, 281, 327, 266,
	286, 193, 318, 294, 242, 0, 0, 551, 525, 550,
	552, 553, 549, 554, 555, 536, 447, 0, 490, 547,
	546, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 236, 0, 277,
	215, 514, 494, 495, 496, 446, 497, 492, 493, 515,
	488, 511, 512, 470, 473, 498, 510, 499, 513, 516,
	517, 556, 557, 505, 558, 502, 518, 509, 508, 500,
	489, 519, 520, 474, 472, 503, 504, 491, 127, 303,
	483, 334, 335, 336, 320, 0, 207, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 444, 0, 0, 0, 210, 0, 0,
	235, 0, 0, 0, 475, 0, 0, 295, 249, 0,
	0, 0, 0, 530, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 0, 468, 507,
	506, 455, 464, 0, 0, 191, 456, 0, 463, 457,
	461, 460, 458, 459, 0, 522, 0, 0, 0, 0,
	0, 0, 428, 441, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 439, 0,
	0, 0, 0, 484, 0, 440, 0, 0, 486, 465,
	466, 0, 0, 182, 300, 316, 192, 291, 329, 197,
	298, 187, 264, 287, 0, 0, 184, 314, 297, 246,
	229, 230, 183, 0, 282, 208, 221, 204, 262, 462,
	482, 487, 203, 544, 480, 324, 186, 0, 323, 261,
	310, 315, 247, 241, 185, 312, 245, 240, 233, 212,
	545, 225, 273, 239, 274, 226, 251, 250, 252, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 326, 0, 0, 528, 0, 0, 0, 299, 0,
	0, 234, 0, 0, 0, 481, 0, 285, 267, 541,
	429, 0, 283, 237, 311, 275, 317, 301, 325, 279,
	276, 177, 302, 206, 248, 188, 190, 202, 209, 211,
	213, 214, 257, 258, 270, 290, 304, 305, 306, 205,
	198, 284, 199, 223, 200, 178, 292, 201, 180, 271,
	309, 0, 219, 280, 244, 181, 243, 272, 308, 307,
	189, 333, 339, 340, 344, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 338, 217, 174, 175, 321, 526, 263,
	0, 540, 521, 523, 524, 527, 531, 532, 533, 534,
	535, 537, 539, 543, 288, 0, 0, 0, 0, 0,
	228, 269, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 319, 331, 348,
	351, 0, 0, 0, 179, 350, 0, 0, 0, 0,
	0, 0, 0, 542, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 485, 253, 254, 255, 256, 529, 0,
	196, 349, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	216, 222, 0, 224, 195, 268, 218, 328, 231, 0,
	0, 0, 260, 227, 293, 232, 238, 281, 327, 266,
	286, 193, 318, 294, 242, 0, 0, 551, 525, 550,
	552, 553, 549, 554, 555, 536, 447, 0, 490, 547,
	546, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 236, 98, 277,
	215, 514, 494, 495, 496, 446, 497, 492, 493, 515,
	488, 511, 512, 470, 473, 498, 510, 499, 513, 516,
	517, 556, 557, 505, 558, 502, 518, 509, 508, 500,
	489, 519, 520, 474, 472, 503, 504, 491, 303, 483,
	0, 334, 335, 336, 320, 0, 207, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 444, 0, 0, 0, 210, 2722, 0, 235,
	0, 0, 0, 475, 0, 0, 295, 249, 0, 0,
	0, 0, 530, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 468, 507, 506,
	455, 464, 0, 0, 191, 456, 0, 463, 457, 461,
	460, 458, 459, 0, 522, 0, 0, 0, 0, 0,
	0, 428, 441, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 439, 0, 0,
	0, 0, 484, 0, 440, 0, 0, 486, 465, 466,
	0, 0, 182, 300, 316, 192, 291, 329, 197, 298,
	187, 264, 287, 0, 0, 184, 314, 297, 246, 229,
	230, 183, 0, 282, 208, 221, 204, 262, 462, 482,
	487, 203, 544, 480, 324, 186, 0, 323, 261, 310,
	315, 247, 241, 185, 312, 245, 240, 233, 212, 545,
	225, 273, 239, 274, 226, 251, 250, 252, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	326, 0, 0, 528, 0, 0, 0, 299, 0, 0,
	234, 0, 0, 0, 481, 0, 285, 267, 541, 429,
	0, 283, 237, 311, 275, 317, 301, 325, 279, 276,
	177, 302, 206, 248, 188, 190, 202, 209, 211, 213,
	214, 257, 258, 270, 290, 304, 305, 306, 205, 198,
	284, 199, 223, 200, 178, 292, 201, 180, 271, 309,
	0, 219, 280, 244, 181, 243, 272, 308, 307, 189,
	333, 339, 340, 344, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 338, 217, 174, 175, 321, 526, 263, 0,
	540, 521, 523, 524, 527, 531, 532, 533, 534, 535,
	537, 539, 543, 288, 0, 0, 0, 0, 0, 228,
	269, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 319, 331, 348, 351,
	0, 0, 0, 179, 350, 0, 0, 0, 0, 0,
	0, 0, 542, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 485, 253, 254, 255, 256, 529, 0, 196,
	349, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 216,
	222, 0, 224, 195, 268, 218, 328, 231, 0, 0,
	0, 260, 227, 293, 232, 238, 281, 327, 266, 286,
	193, 318, 294, 242, 0, 0, 551, 525, 550, 552,
	553, 549, 554, 555, 536, 447, 0, 490, 547, 546,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 236, 0, 277, 215,
	514, 494, 495, 496, 446, 497, 492, 493, 515, 488,
	511, 512, 470, 473, 498, 510, 499, 513, 516, 517,
	556, 557, 505, 558, 502, 518, 509, 508, 500, 489,
	519, 520, 474, 472, 503, 504, 491, 303, 483, 0,
	334, 335, 336, 320, 0, 207, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 444, 0, 0, 0, 210, 1248, 0, 235, 0,
	0, 0, 475, 0, 0, 295, 249, 0, 0, 0,
	0, 530, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 0, 0, 468, 507, 506, 455,
	464, 0, 0, 191, 456, 0, 463, 457, 461, 460,
	458, 459, 0, 522, 0, 0, 0, 0, 0, 0,
	428, 441, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 439, 0, 0, 0,
	0, 484, 0, 440, 0, 0, 486, 465, 466, 0,
	0, 182, 300, 316, 192, 291, 329, 197, 298, 187,
	264, 287, 0, 0, 184, 314, 297, 246, 229, 230,
	183, 0, 282, 208, 221, 204, 262, 462, 482, 487,
	203, 544, 480, 324, 186, 0, 323, 261, 310, 315,
	247, 241, 185, 312, 245, 240, 233, 212, 545, 225,
	273, 239, 274, 226, 251, 250, 252, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 326,
	0, 0, 528, 0, 0, 0, 299, 0, 0, 234,
	0, 0, 0, 481, 0, 285, 267, 541, 429, 0,
	283, 237, 311, 275, 317, 301, 325, 279, 276, 177,
	302, 206, 248, 188, 190, 202, 209, 211, 213, 214,
	257, 258, 270, 290, 304, 305, 306, 205, 198, 284,
	199, 223, 200, 178, 292, 201, 180, 271, 309, 0,
	219, 280, 244, 181, 243, 272, 308, 307, 189, 333,
	339, 340, 344, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 338, 217, 174, 175, 321, 526, 263, 0, 540,
	521, 523, 524, 527, 531, 532, 533, 534, 535, 537,
	539, 543, 288, 0, 0, 0, 0, 0, 228, 269,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 319, 331, 348, 351, 0,
	0, 0, 179, 350, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 485, 253, 254, 255, 256, 529, 0, 196, 349,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 216, 222,
	0, 224, 195, 268, 218, 328, 231, 0, 0, 0,
	260, 227, 293, 232, 238, 281, 327, 266, 286, 193,
	318, 294, 242, 0, 0, 551, 525, 550, 552, 553,
	549, 554, 555, 536, 447, 0, 490, 547, 546, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 236, 0, 277, 215, 514,
	494, 495, 496, 446, 497, 492, 493, 515, 488, 511,
	512, 470, 473, 498, 510, 499, 513, 516, 517, 556,
	557, 505, 558, 502, 518, 509, 508, 500, 489, 519,
	520, 474, 472, 503, 504, 491, 303, 483, 0, 334,
	335, 336, 320, 0, 207, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 0, 0, 0, 210, 0, 0, 235, 0, 0,
	0, 475, 0, 0, 295, 249, 0, 0, 0, 0,
	530, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 468, 507, 506, 455, 464,
	0, 0, 191, 456, 0, 463, 457, 461, 460, 458,
	459, 0, 522, 0, 0, 0, 0, 0, 0, 428,
	441, 0, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 439, 1025, 0, 0, 0,
	484, 0, 440, 0, 0, 486, 465, 466, 0, 0,
	182, 300, 316, 192, 291, 329, 197, 298, 187, 264,
	287, 0, 0, 184, 314, 297, 246, 229, 230, 183,
	0, 282, 208, 221, 204, 262, 462, 482, 487, 203,
	544, 480, 324, 186, 0, 323, 261, 310, 315, 247,
	241, 185, 312, 245, 240, 233, 212, 545, 225, 273,
	239, 274, 226, 251, 250, 252, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 326, 0,
	0, 528, 0, 0, 0, 299, 0, 0, 234, 0,
	0, 0, 481, 0, 285, 267, 541, 429, 0, 283,
	237, 311, 275, 317, 301, 325, 279, 276, 177, 302,
	206, 248, 188, 190, 202, 209, 211, 213, 214, 257,
	258, 270, 290, 304, 305, 306, 205, 198, 284, 199,
	223, 200, 178, 292, 201, 180, 271, 309, 0, 219,
	280, 244, 181, 243, 272, 308, 307, 189, 333, 339,
	340, 344, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	338, 217, 174, 175, 321, 526, 263, 0, 540, 521,
	523, 524, 527, 531, 532, 533, 534, 535, 537, 539,
	543, 288, 0, 0, 0, 0, 0, 228, 269, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 319, 331, 348, 351, 0, 0,
	0, 179, 350, 0, 0, 0, 0, 0, 0, 0,
	542, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	485, 253, 254, 255, 256, 529, 0, 196, 349, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 216, 222, 0,
	224, 195, 268, 218, 328, 231, 0, 0, 0, 260,
	227, 293, 232, 238, 281, 327, 266, 286, 193, 318,
	294, 242, 0, 0, 551, 525, 550, 552, 553, 549,
	554, 555, 536, 447, 0, 490, 547, 546, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 236, 0, 277, 215, 514, 494,
	495, 496, 446, 497, 492, 493, 515, 488, 511, 512,
	470, 473, 498, 510, 499, 513, 516, 517, 556, 557,
	505, 558, 502, 518, 509, 508, 500, 489, 519, 520,
	474, 472, 503, 504, 491, 0, 0, 0, 334, 335,
	336, 320, 0, 207, 303, 483, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 444, 0,
	0, 0, 210, 0, 0, 235, 0, 0, 0, 475,
	0, 0, 295, 249, 0, 0, 0, 0, 530, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 468, 507, 506, 455, 464, 0, 0,
	191, 456, 0, 463, 457, 461, 460, 458, 459, 0,
	522, 0, 0, 0, 0, 0, 0, 428, 441, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 439, 0, 0, 0, 0, 484, 0,
	440, 0, 0, 486, 465, 466, 0, 0, 182, 300,
	316, 192, 291, 329, 197, 298, 187, 264, 287, 0,
	0, 184, 314, 297, 246, 229, 230, 183, 0, 282,
	208, 221, 204, 262, 462, 482, 487, 203, 544, 480,
	324, 186, 0, 323, 261, 310, 315, 247, 241, 185,
	312, 245, 240, 233, 212, 545, 225, 273, 239, 274,
	226, 251, 250, 252, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 326, 0, 0, 528,
	0, 0, 0, 299, 0, 0, 234, 0, 0, 0,
	481, 0, 285, 267, 541, 429, 0, 283, 237, 311,
	275, 317, 301, 325, 279, 276, 177, 302, 206, 248,
	188, 190, 202, 209, 211, 213, 214, 257, 258, 270,
	290, 304, 305, 306, 205, 198, 284, 199, 223, 200,
	178, 292, 201, 180, 271, 309, 0, 219, 280, 244,
	181, 243, 272, 308, 307, 189, 333, 339, 340, 344,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 338, 217,
	174, 175, 321, 526, 263, 0, 540, 521, 523, 524,
	527, 531, 532, 533, 534, 535, 537, 539, 543, 288,
	0, 0, 0, 0, 0, 228, 269, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 319, 331, 348, 351, 0, 0, 0, 179,
	350, 0, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 485, 253,
	254, 255, 256, 529, 0, 196, 349, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 216, 222, 0, 224, 195,
	268, 218, 328, 231, 0, 0, 0, 260, 227, 293,
	232, 238, 281, 327, 266, 286, 193, 318, 294, 242,
	0, 0, 551, 525, 550, 552, 553, 549, 554, 555,
	536, 447, 0, 490, 547, 546, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 236, 0, 277, 215, 514, 494, 495, 496,
	446, 497, 492, 493, 515, 488, 511, 512, 470, 473,
	498, 510, 499, 513, 516, 517, 556, 557, 505, 558,
	502, 518, 509, 508, 500, 489, 519, 520, 474, 472,
	503, 504, 491, 303, 483, 0, 334, 335, 336, 320,
	0, 207, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 444, 0, 0,
	0, 210, 0, 0, 235, 0, 0, 0, 475, 0,
	0, 295, 249, 0, 0, 0, 0, 530, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 0, 468, 507, 506, 455, 464, 0, 0, 191,
	456, 0, 463, 457, 461, 460, 458, 459, 0, 522,
	0, 0, 0, 0, 0, 0, 428, 441, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 439, 0, 0, 0, 0, 484, 0, 440,
	0, 0, 486, 465, 466, 0, 0, 182, 300, 316,
	192, 291, 329, 197, 298, 187, 264, 287, 0, 0,
	184, 314, 297, 246, 229, 230, 183, 0, 282, 208,
	221, 204, 262, 462, 482, 487, 203, 544, 480, 324,
	186, 0, 323, 261, 310, 315, 247, 241, 185, 312,
	245, 240, 233, 212, 545, 225, 273, 239, 274, 226,
	251, 250, 252, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 326, 0, 0, 528, 0,
	0, 0, 299, 0, 0, 234, 0, 0, 0, 481,
	0, 285, 267, 541, 429, 0, 283, 237, 311, 275,
	317, 301, 325, 279, 276, 177, 302, 206, 248, 188,
	190, 202, 209, 211, 213, 214, 257, 258, 270, 290,
	304, 305, 306, 205, 198, 284, 199, 223, 200, 178,
	292, 201, 180, 271, 309, 0, 219, 280, 244, 181,
	243, 272, 308, 307, 189, 333, 339, 340, 344, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 338, 217, 174,
	175, 321, 526, 263, 0, 540, 521, 523, 524, 527,
	531, 532, 533, 534, 535, 537, 539, 543, 288, 0,
	0, 0, 0, 0, 228, 269, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 319, 331, 348, 351, 0, 0, 0, 179, 350,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 485, 253, 254,
	255, 256, 529, 0, 196, 349, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 216, 222, 0, 224, 195, 268,
	218, 328, 231, 0, 0, 0, 260, 227, 293, 232,
	238, 281, 327, 266, 286, 193, 318, 294, 242, 0,
	0, 551, 525, 550, 552, 553, 549, 554, 555, 536,
	447, 0, 490, 547, 546, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 236, 0, 277, 215, 514, 494, 495, 496, 446,
	497, 492, 493, 515, 488, 511, 512, 470, 473, 498,
	510, 499, 513, 516, 517, 556, 557, 505, 558, 502,
	518, 509, 508, 500, 489, 519, 520, 474, 472, 503,
	504, 491, 303, 483, 0, 334, 335, 336, 320, 0,
	207, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 1109, 0, 0, 0, 444, 0, 0, 0,
	210, 0, 0, 235, 0, 0, 0, 475, 0, 0,
	295, 249, 0, 0, 0, 0, 530, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 468, 507, 506, 455, 464, 0, 0, 191, 456,
	0, 463, 457, 461, 460, 458, 459, 0, 522, 0,
	0, 0, 0, 0, 0, 0, 441, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	438, 439, 0, 0, 0, 0, 484, 0, 440, 0,
	0, 486, 465, 466, 0, 0, 182, 300, 316, 192,
	291, 329, 197, 298, 187, 264, 287, 0, 0, 184,
	314, 297, 246, 229, 230, 183, 0, 282, 208, 221,
	204, 262, 462, 482, 487, 203, 544, 480, 324, 186,
	0, 323, 261, 310, 315, 247, 241, 185, 312, 245,
	240, 233, 212, 545, 225, 273, 239, 274, 226, 251,
	250, 252, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 326, 0, 0, 528, 0, 0,
	0, 299, 0, 0, 234, 0, 0, 0, 481, 0,
	285, 267, 541, 0, 0, 283, 237, 311, 275, 317,
	301, 325, 279, 276, 177, 302, 206, 248, 188, 190,
	202, 209, 211, 213, 214, 257, 258, 270, 290, 304,
	305, 306, 205, 198, 284, 199, 223, 200, 178, 292,
	201, 180, 271, 309, 0, 219, 280, 244, 181, 243,
	272, 308, 307, 189, 333, 1110, 1111, 344, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 338, 217, 174, 175,
	321, 526, 263, 0, 540, 521, 523, 524, 527, 531,
	532, 533, 534, 535, 537, 539, 543, 288, 0, 0,
	0, 0, 0, 228, 269, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	319, 331, 348, 351, 0, 0, 0, 179, 350, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 485, 253, 254, 255,
	256, 529, 0, 196, 349, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 216, 222, 0, 224, 195, 268, 218,
	328, 231, 0, 0, 0, 260, 227, 293, 232, 238,
	281, 327, 266, 286, 193, 318, 294, 242, 0, 0,
	551, 525, 550, 552, 553, 549, 554, 555, 536, 447,
	0, 490, 547, 546, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	236, 0, 277, 215, 514, 494, 495, 496, 446, 497,
	492, 493, 515, 488, 511, 512, 470, 473, 498, 510,
	499, 513, 516, 517, 556, 557, 505, 558, 502, 518,
	509, 508, 500, 489, 519, 520, 474, 472, 503, 504,
	491, 303, 483, 0, 334, 335, 336, 320, 0, 207,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 444, 0, 0, 0, 210,
	0, 0, 235, 0, 0, 0, 475, 0, 0, 295,
	249, 0, 0, 0, 0, 530, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 507, 506, 455, 464, 0, 0, 191, 456, 0,
	463, 457, 461, 460, 458, 459, 0, 522, 0, 0,
	0, 0, 0, 0, 428, 441, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	439, 0, 0, 0, 0, 484, 0, 440, 0, 0,
	486, 465, 466, 0, 0, 182, 300, 316, 192, 291,
	329, 197, 298, 187, 264, 287, 0, 0, 184, 314,
	297, 246, 229, 230, 183, 0, 282, 208, 221, 204,
	262, 462, 482, 487, 203, 544, 480, 324, 186, 0,
	323, 261, 310, 315, 247, 241, 185, 312, 245, 240,
	233, 212, 545, 225, 273, 239, 274, 226, 251, 250,
	252, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 326, 0, 0, 528, 0, 0, 0,
	299, 0, 0, 234, 0, 0, 0, 481, 0, 285,
	267, 541, 429, 0, 283, 237, 311, 275, 317, 301,
	325, 279, 276, 177, 302, 206, 248, 188, 190, 202,
	209, 211, 213, 214, 257, 258, 270, 290, 304, 305,
	306, 205, 198, 284, 199, 223, 200, 178, 292, 201,
	180, 271, 309, 0, 219, 280, 244, 181, 243, 272,
	308, 307, 189, 333, 339, 340, 344, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 338, 217, 174, 175, 321,
	526, 263, 0, 540, 521, 523, 524, 527, 531, 532,
	533, 534, 535, 537, 539, 543, 288, 0, 0, 0,
	0, 0, 228, 269, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 319,
	331, 348, 351, 0, 0, 0, 179, 350, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 485, 253, 254, 255, 256,
	529, 0, 196, 349, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 216, 222, 0, 224, 195, 268, 218, 328,
	231, 0, 0, 0, 260, 227, 293, 232, 238, 281,
	327, 266, 286, 193, 318, 294, 242, 0, 0, 551,
	525, 550, 552, 553, 549, 554, 555, 536, 447, 0,
	490, 547, 546, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 236,
	0, 277, 215, 514, 494, 495, 496, 446, 497, 492,
	493, 515, 488, 511, 512, 470, 473, 498, 510, 499,
	513, 516, 517, 556, 557, 505, 558, 502, 518, 509,
	508, 500, 489, 519, 520, 474, 472, 503, 504, 491,
	303, 483, 0, 334, 335, 336, 320, 0, 207, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 444, 0, 0, 0, 210, 0,
	0, 235, 0, 0, 0, 475, 0, 0, 295, 249,
	0, 0, 0, 0, 530, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 468,
	507, 506, 455, 464, 0, 0, 191, 456, 0, 463,
	457, 461, 460, 458, 459, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 441, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 439,
	0, 0, 0, 0, 484, 0, 440, 0, 0, 486,
	465, 466, 0, 0, 182, 300, 316, 192, 291, 329,
	197, 298, 187, 264, 287, 0, 0, 184, 314, 297,
	246, 229, 230, 183, 0, 282, 208, 221, 204, 262,
	462, 482, 487, 203, 544, 480, 324, 186, 0, 323,
	261, 310, 315, 247, 241, 185, 312, 245, 240, 233,
	212, 545, 225, 273, 239, 274, 226, 251, 250, 252,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 326, 0, 0, 528, 0, 0, 0, 299,
	0, 0, 234, 0, 0, 0, 481, 0, 285, 267,
	541, 0, 0, 283, 237, 311, 275, 317, 301, 325,
	279, 276, 177, 302, 206, 248, 188, 190, 202, 209,
	211, 213, 214, 257, 258, 270, 290, 304, 305, 306,
	205, 198, 284, 199, 223, 200, 178, 292, 201, 180,
	271, 309, 0, 219, 280, 244, 181, 243, 272, 308,
	307, 189, 333, 339, 340, 344, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 338, 217, 174, 175, 321, 526,
	263, 0, 540, 521, 523, 524, 527, 531, 532, 533,
	534, 535, 537, 539, 543, 288, 0, 0, 0, 0,
	0, 228, 269, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 319, 331,
	348, 351, 0, 0, 0, 179, 350, 0, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 485, 253, 254, 255, 256, 529,
	0, 196, 349, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 216, 222, 0, 224, 195, 268, 218, 328, 231,
	0, 0, 0, 260, 227, 293, 232, 238, 281, 327,
	266, 286, 193, 318, 294, 242, 0, 0, 551, 525,
	550, 552, 553, 549, 554, 555, 536, 447, 0, 490,
	547, 546, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 236, 0,
	277, 215, 514, 494, 495, 496, 446, 497, 492, 493,
	515, 488, 511, 512, 470, 473, 498, 510, 499, 513,
	516, 517, 556, 557, 505, 558, 502, 518, 509, 508,
	500, 489, 519, 520, 474, 472, 503, 504, 491, 303,
	0, 0, 334, 335, 336, 320, 0, 207, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 295, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 862, 0,
	0, 0, 0, 182, 300, 316, 192, 291, 329, 197,
	298, 187, 264, 287, 0, 0, 1700, 1702, 1703, 1704,
	1705, 1706, 1707, 0, 1711, 1708, 1709, 1710, 262, 0,
	1695, 1696, 1697, 1698, 860, 1682, 1701, 0, 1683, 261,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	875, 1699, 273, 239, 274, 226, 251, 250, 252, 885,
	887, 889, 891, 894, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 299, 0,
	0, 234, 0, 0, 0, 1694, 0, 285, 267, 0,
	0, 0, 283, 237, 311, 275, 317, 301, 325, 279,
	276, 177, 302, 206, 248, 188, 190, 202, 209, 211,
	213, 214, 257, 258, 270, 290, 304, 305, 306, 205,
	198, 284, 199, 223, 200, 178, 292, 201, 180, 271,
	309, 0, 219, 280, 244, 181, 243, 272, 308, 307,
	189, 333, 339, 340, 344, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 338, 217, 174, 175, 321, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 337,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	228, 269, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 319, 331, 348,
	351, 0, 0, 0, 179, 350, 0, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 346, 253, 254, 255, 256, 220, 0,
	196, 349, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	216, 222, 0, 224, 195, 268, 218, 328, 231, 0,
	0, 0, 260, 227, 293, 232, 238, 281, 327, 266,
	286, 193, 318, 294, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 884, 236, 0, 277,
	215, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 0, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 0, 0,
	0, 334, 335, 336, 320, 0, 207, 127, 303, 38,
	117, 97, 0, 0, 0, 0, 0, 0, 0, 265,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 295, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 300, 316, 192, 291, 329, 197, 298,
	187, 264, 287, 0, 0, 184, 314, 297, 246, 229,
	230, 183, 0, 282, 208, 221, 204, 262, 0, 313,
	341, 203, 332, 0, 324, 186, 0, 323, 261, 310,
	315, 247, 241, 185, 312, 245, 240, 233, 212, 0,
	225, 273, 239, 274, 226, 251, 250, 252, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 299, 0, 0,
	234, 0, 0, 0, 342, 0, 285, 267, 0, 0,
	0, 283, 237, 311, 275, 317, 301, 325, 279, 276,
	177, 302, 206, 248, 188, 190, 202, 209, 211, 213,
	214, 257, 258, 270, 290, 304, 305, 306, 205, 198,
	284, 199, 223, 200, 178, 292, 201, 180, 271, 309,
	0, 219, 280, 244, 181, 243, 272, 308, 307, 189,
	333, 339, 340, 344, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 338, 217, 174, 175, 321, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 337, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 228,
	269, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 319, 331, 348, 351,
	0, 0, 0, 179, 350, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 346, 253, 254, 255, 256, 364, 366, 196,
	349, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 216,
	222, 0, 224, 195, 268, 218, 328, 231, 0, 0,
	0, 260, 227, 293, 232, 238, 281, 327, 266, 286,
	193, 318, 294, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 39, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 236, 98, 277, 215,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 0, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 303, 0, 0,
	334, 335, 336, 320, 0, 207, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 295, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 2121, 2124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 300, 316, 192, 291, 329, 197, 298, 187,
	264, 287, 0, 0, 184, 314, 297, 246, 229, 230,
	183, 0, 282, 208, 221, 204, 262, 0, 313, 341,
	203, 332, 0, 324, 186, 0, 323, 261, 310, 315,
	247, 241, 185, 312, 245, 240, 233, 212, 0, 225,
	273, 239, 274, 226, 251, 250, 252, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2125, 326,
	0, 0, 0, 2118, 0, 2117, 299, 2119, 2122, 234,
	0, 0, 0, 342, 0, 285, 267, 0, 0, 0,
	283, 237, 311, 275, 317, 301, 325, 279, 276, 177,
	302, 206, 248, 188, 190, 202, 209, 211, 213, 214,
	257, 258, 270, 290, 304, 305, 306, 205, 198, 284,
	199, 223, 200, 178, 292, 201, 180, 271, 309, 2123,
	219, 280, 244, 181, 243, 272, 308, 307, 189, 333,
	339, 340, 344, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 338, 217, 174, 175, 321, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 337, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 228, 269,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 319, 331, 348, 351, 0,
	0, 0, 179, 350, 0, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 346, 253, 254, 255, 256, 220, 0, 196, 349,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 216, 222,
	0, 224, 195, 268, 218, 328, 231, 0, 0, 0,
	260, 227, 293, 232, 238, 281, 327, 266, 286, 193,
	318, 294, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 236, 0, 277, 215, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 0, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 303, 0, 0, 334,
	335, 336, 320, 0, 207, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1360,
	0, 0, 0, 0, 210, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 295, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 0, 0, 1361, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 0, 0, 766, 767, 768, 765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 300, 316, 192, 291, 329, 197, 298, 187, 264,
	287, 0, 0, 184, 314, 297, 246, 229, 230, 183,
	0, 282, 208, 221, 204, 262, 0, 313, 341, 203,
	332, 0, 324, 186, 0, 323, 261, 310, 315, 247,
	241, 185, 312, 245, 240, 233, 212, 0, 225, 273,
	239, 274, 226, 251, 250, 252, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 299, 0, 0, 234, 0,
	0, 0, 342, 0, 285, 267, 0, 0, 0, 283,
	237, 311, 275, 317, 301, 325, 279, 276, 177, 302,
	206, 248, 188, 190, 202, 209, 211, 213, 214, 257,
	258, 270, 290, 304, 305, 306, 205, 198, 284, 199,
	223, 200, 178, 292, 201, 180, 271, 309, 0, 219,
	280, 244, 181, 243, 272, 308, 307, 189, 333, 339,
	340, 344, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	338, 217, 174, 175, 321, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 337, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 228, 269, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 319, 331, 348, 351, 0, 0,
	0, 179, 350, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	346, 253, 254, 255, 256, 220, 0, 196, 349, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 216, 222, 0,
	224, 195, 268, 218, 328, 231, 0, 0, 0, 260,
	227, 293, 232, 238, 281, 327, 266, 286, 193, 318,
	294, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 236, 0, 277, 215, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	0, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 303, 0, 0, 334, 335,
	336, 320, 0, 207, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 647, 0, 235, 0, 0, 0,
	0, 0, 0, 295, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 655, 656, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	300, 316, 192, 291, 329, 197, 298, 187, 264, 287,
	0, 0, 184, 314, 297, 246, 229, 230, 183, 0,
	282, 208, 221, 204, 262, 0, 313, 341, 203, 332,
	632, 324, 186, 631, 323, 261, 310, 315, 247, 241,
	185, 312, 245, 240, 233, 212, 0, 225, 273, 239,
	274, 226, 251, 250, 252, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 299, 0, 0, 234, 0, 0,
	0, 342, 0, 285, 267, 0, 0, 0, 283, 237,
	311, 275, 317, 301, 325, 645, 276, 177, 302, 206,
	248, 188, 190, 202, 209, 211, 213, 214, 257, 258,
	270, 290, 304, 305, 306, 205, 198, 284, 199, 223,
	200, 178, 292, 201, 180, 271, 309, 0, 219, 280,
	244, 181, 243, 272, 308, 307, 189, 333, 339, 340,
	344, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 338,
	217, 174, 175, 321, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 337, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 228, 269, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 319, 331, 348, 351, 0, 0, 0,
	179, 350, 0, 0, 0, 0, 0, 0, 646, 322,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 649,
	253, 254, 255, 256, 220, 0, 196, 349, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 216, 222, 0, 224,
	195, 268, 218, 328, 231, 0, 0, 0, 657, 652,
	653, 232, 238, 281, 327, 266, 286, 193, 318, 294,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 236, 0, 277, 215, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 0,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 127, 303, 0, 334, 335, 336,
	320, 0, 207, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 295, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 1381, 0, 134, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	300, 316, 192, 291, 329, 197, 298, 187, 264, 287,
	0, 0, 184, 314, 297, 246, 229, 230, 183, 0,
	282, 208, 221, 204, 262, 0, 313, 341, 203, 332,
	0, 324, 186, 0, 323, 261, 310, 315, 247, 241,
	185, 312, 245, 240, 233, 212, 0, 225, 273, 239,
	274, 226, 251, 250, 252, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 299, 0, 0, 234, 0, 0,
	0, 342, 0, 285, 267, 0, 0, 0, 283, 237,
	311, 275, 317, 301, 325, 279, 276, 177, 302, 206,
	248, 188, 190, 202, 209, 211, 213, 214, 257, 258,
	270, 290, 304, 305, 306, 205, 198, 284, 199, 223,
	200, 178, 292, 201, 180, 271, 309, 0, 219, 280,
	244, 181, 243, 272, 308, 307, 189, 333, 339, 340,
	344, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 338,
	217, 174, 175, 321, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 337, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 228, 269, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 319, 331, 348, 351, 0, 0, 0,
	179, 350, 0, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 346,
	253, 254, 255, 256, 220, 0, 196, 349, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 216, 222, 0, 224,
	195, 268, 218, 328, 231, 0, 0, 0, 260, 227,
	293, 232, 238, 281, 327, 266, 286, 193, 318, 294,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 236, 98, 277, 215, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 0,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 127, 303, 0, 334, 335, 336,
	320, 0, 207, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 295, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 1372, 0, 134, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	300, 316, 192, 291, 329, 197, 298, 187, 264, 287,
	0, 0, 184, 314, 297, 246, 229, 230, 183, 0,
	282, 208, 221, 204, 262, 0, 313, 341, 203, 332,
	0, 324, 186, 0, 323, 261, 310, 315, 247, 241,
	185, 312, 245, 240, 233, 212, 0, 225, 273, 239,
	274, 226, 251, 250, 252, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 299, 0, 0, 234, 0, 0,
	0, 342, 0, 285, 267, 0, 0, 0, 283, 237,
	311, 275, 317, 301, 325, 279, 276, 177, 302, 206,
	248, 188, 190, 202, 209, 211, 213, 214, 257, 258,
	270, 290, 304, 305, 306, 205, 198, 284, 199, 223,
	200, 178, 292, 201, 180, 271, 309, 0, 219, 280,
	244, 181, 243, 272, 308, 307, 189, 333, 339, 340,
	344, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 338,
	217, 174, 175, 321, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 337, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 228, 269, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 319, 331, 348, 351, 0, 0, 0,
	179, 350, 0, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 346,
	253, 254, 255, 256, 220, 0, 196, 349, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 216, 222, 0, 224,
	195, 268, 218, 328, 231, 0, 0, 0, 260, 227,
	293, 232, 238, 281, 327, 266, 286, 193, 318, 294,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 236, 98, 277, 215, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 0,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 303, 0, 0, 334, 335, 336,
	320, 0, 207, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 295, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 655, 656, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 300,
	316, 192, 291, 329, 197, 298, 187, 264, 287, 0,
	0, 184, 314, 297, 246, 229, 230, 183, 0, 282,
	208, 221, 204, 262, 0, 313, 341, 203, 332, 632,
	324, 186, 631, 323, 261, 310, 315, 247, 241, 185,
	312, 245, 240, 233, 212, 0, 225, 273, 239, 274,
	226, 251, 250, 252, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 299, 0, 0, 234, 0, 0, 0,
	342, 0, 285, 267, 0, 0, 0, 283, 237, 311,
	275, 317, 301, 325, 279, 276, 177, 302, 206, 248,
	188, 190, 202, 209, 211, 213, 214, 257, 258, 270,
	290, 304, 305, 306, 205, 198, 284, 199, 223, 200,
	178, 292, 201, 180, 271, 309, 0, 219, 280, 244,
	181, 243, 272, 308, 307, 189, 333, 339, 340, 344,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 338, 217,
	174, 175, 321, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 337, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 228, 269, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 319, 331, 348, 351, 0, 0, 0, 179,
	350, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 346, 253,
	254, 255, 256, 220, 0, 196, 349, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 216, 222, 0, 224, 195,
	268, 218, 328, 231, 0, 0, 0, 657, 652, 653,
	232, 238, 281, 327, 266, 286, 193, 318, 294, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 236, 0, 277, 215, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 0, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 127, 303, 0, 334, 335, 336, 320,
	0, 207, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 295, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1314, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 300,
	316, 192, 291, 329, 197, 298, 187, 264, 287, 0,
	0, 184, 314, 297, 246, 229, 230, 183, 0, 282,
	208, 221, 204, 262, 0, 313, 341, 203, 332, 0,
	324, 186, 0, 323, 261, 310, 315, 247, 241, 185,
	312, 245, 240, 233, 212, 0, 225, 273, 239, 274,
	226, 251, 250, 252, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 299, 0, 0, 234, 0, 0, 0,
	342, 0, 285, 267, 0, 0, 0, 283, 237, 311,
	275, 317, 301, 325, 279, 276, 177, 302, 206, 248,
	188, 190, 202, 209, 211, 213, 214, 257, 258, 270,
	290, 304, 305, 306, 205, 198, 284, 199, 223, 200,
	178, 292, 201, 180, 271, 309, 0, 219, 280, 244,
	181, 243, 272, 308, 307, 189, 333, 339, 340, 344,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 338, 217,
	174, 175, 321, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 337, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 228, 269, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 319, 331, 348, 351, 0, 0, 0, 179,
	350, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 346, 253,
	254, 255, 256, 220, 0, 196, 349, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 216, 222, 0, 224, 195,
	268, 218, 328, 231, 0, 0, 0, 260, 227, 293,
	232, 238, 281, 327, 266, 286, 193, 318, 294, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 236, 98, 277, 215, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 0, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 303, 0, 0, 334, 335, 336, 320,
	0, 207, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 1008, 0, 235, 0, 0, 0, 0, 0,
	0, 295, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 1006, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1004, 0, 0, 0, 0, 182, 300, 316,
	192, 291, 329, 197, 298, 187, 264, 287, 0, 0,
	184, 314, 297, 246, 229, 230, 183, 0, 282, 208,
	221, 204, 262, 0, 313, 341, 203, 332, 0, 324,
	186, 0, 323, 261, 310, 315, 247, 241, 185, 312,
	245, 240, 233, 212, 0, 225, 273, 239, 274, 226,
	251, 250, 252, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 0, 299, 0, 0, 234, 0, 0, 0, 342,
	0, 285, 267, 0, 0, 0, 283, 237, 311, 275,
	317, 301, 325, 279, 276, 177, 302, 206, 248, 188,
	190, 202, 209, 211, 213, 214, 257, 258, 270, 290,
	304, 305, 306, 205, 198, 284, 199, 223, 200, 178,
	292, 201, 180, 271, 309, 0, 219, 280, 244, 181,
	243, 272, 308, 307, 189, 333, 339, 340, 344, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 338, 217, 174,
	175, 321, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 337, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 228, 269, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 319, 331, 348, 351, 0, 0, 0, 179, 350,
	0, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 346, 253, 254,
	255, 256, 220, 0, 196, 349, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 216, 222, 0, 224, 195, 268,
	218, 328, 231, 0, 0, 0, 260, 227, 293, 232,
	238, 281, 327, 266, 286, 193, 318, 294, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 236, 0, 277, 215, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 0, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 303, 0, 0, 334, 335, 336, 320, 0,
	207, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 1002, 0, 235, 0, 0, 0, 0, 0, 0,
	295, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 1006, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1004, 0, 0, 0, 0, 182, 300, 316, 192,
	291, 329, 197, 298, 187, 264, 287, 0, 0, 184,
	314, 297, 246, 229, 230, 183, 0, 282, 208, 221,
	204, 262, 0, 313, 341, 203, 332, 0, 324, 186,
	0, 323, 261, 310, 315, 247, 241, 185, 312, 245,
	240, 233, 212, 0, 225, 273, 239, 274, 226, 251,
	250, 252, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 299, 0, 0, 234, 0, 0, 0, 342, 0,
	285, 267, 0, 0, 0, 283, 237, 311, 275, 317,
	301, 325, 279, 276, 177, 302, 206, 248, 188, 190,
	202, 209, 211, 213, 214, 257, 258, 270, 290, 304,
	305, 306, 205, 198, 284, 199, 223, 200, 178, 292,
	201, 180, 271, 309, 0, 219, 280, 244, 181, 243,
	272, 308, 307, 189, 333, 339, 340, 344, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 338, 217, 174, 175,
	321, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 337, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 228, 269, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	319, 331, 348, 351, 0, 0, 0, 179, 350, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 346, 253, 254, 255,
	256, 220, 0, 196, 349, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 216, 222, 0, 224, 195, 268, 218,
	328, 231, 0, 0, 0, 260, 227, 293, 232, 238,
	281, 327, 266, 286, 193, 318, 294, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	236, 0, 277, 215, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 0, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 303, 0, 0, 334, 335, 336, 320, 0, 207,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 295,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2626, 0,
	134, 507, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 300, 316, 192, 291,
	329, 197, 298, 187, 264, 287, 0, 0, 184, 314,
	297, 246, 229, 230, 183, 0, 282, 208, 221, 204,
	262, 0, 313, 341, 203, 332, 0, 324, 186, 0,
	323, 261, 310, 315, 247, 241, 185, 312, 245, 240,
	233, 212, 0, 225, 273, 239, 274, 226, 251, 250,
	252, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	299, 0, 0, 234, 0, 0, 0, 342, 0, 285,
	267, 0, 0, 0, 283, 237, 311, 275, 317, 301,
	325, 279, 276, 177, 302, 206, 248, 188, 190, 202,
	209, 211, 213, 214, 257, 258, 270, 290, 304, 305,
	306, 205, 198, 284, 199, 223, 200, 178, 292, 201,
	180, 271, 309, 0, 219, 280, 244, 181, 243, 272,
	308, 307, 189, 333, 339, 340, 344, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 338, 217, 174, 175, 321,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 337, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 228, 269, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 319,
	331, 348, 351, 0, 0, 0, 179, 350, 0, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 346, 253, 254, 255, 256,
	220, 0, 196, 349, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 216, 222, 0, 224, 195, 268, 218, 328,
	231, 0, 0, 0, 260, 227, 293, 232, 238, 281,
	327, 266, 286, 193, 318, 294, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 236,
	0, 277, 215, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 0, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	303, 0, 0, 334, 335, 336, 320, 0, 207, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 295, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 1006, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1004,
	0, 0, 0, 0, 182, 300, 316, 192, 291, 329,
	197, 298, 187, 264, 287, 0, 0, 184, 314, 297,
	246, 229, 230, 183, 0, 282, 208, 221, 204, 262,
	0, 313, 341, 203, 332, 0, 324, 186, 0, 323,
	261, 310, 315, 247, 241, 185, 312, 245, 240, 233,
	212, 0, 225, 273, 239, 274, 226, 251, 250, 252,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 299,
	0, 0, 234, 0, 0, 0, 342, 0, 285, 267,
	0, 0, 0, 283, 237, 311, 275, 317, 301, 325,
	279, 276, 177, 302, 206, 248, 188, 190, 202, 209,
	211, 213, 214, 257, 258, 270, 290, 304, 305, 306,
	205, 198, 284, 199, 223, 200, 178, 292, 201, 180,
	271, 309, 0, 219, 280, 244, 181, 243, 272, 308,
	307, 189, 333, 339, 340, 344, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 338, 217, 174, 175, 321, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	337, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 228, 269, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 319, 331,
	348, 351, 0, 0, 0, 179, 350, 0, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 346, 253, 254, 255, 256, 220,
	0, 196, 349, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 216, 222, 0, 224, 195, 268, 218, 328, 231,
	0, 0, 0, 260, 227, 293, 232, 238, 281, 327,
	266, 286, 193, 318, 294, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 236, 0,
	277, 215, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 0, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 303,
	0, 0, 334, 335, 336, 320, 0, 207, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 295, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 1006, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2258, 0,
	0, 0, 0, 182, 300, 316, 192, 291, 329, 197,
	298, 187, 264, 287, 0, 0, 184, 314, 297, 246,
	229, 230, 183, 0, 282, 208, 221, 204, 262, 0,
	313, 341, 203, 332, 0, 324, 186, 0, 323, 261,
	310, 315, 247, 241, 185, 312, 245, 240, 233, 212,
	0, 225, 273, 239, 274, 226, 251, 250, 252, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 299, 0,
	0, 234, 0, 0, 0, 342, 0, 285, 267, 0,
	0, 0, 283, 237, 311, 275, 317, 301, 325, 279,
	276, 177, 302, 206, 248, 188, 190, 202, 209, 211,
	213, 214, 257, 258, 270, 290, 304, 305, 306, 205,
	198, 284, 199, 223, 200, 178, 292, 201, 180, 271,
	309, 0, 219, 280, 244, 181, 243, 272, 308, 307,
	189, 333, 339, 340, 344, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 338, 217, 174, 175, 321, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 337,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	228, 269, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 319, 331, 348,
	351, 0, 0, 0, 179, 350, 0, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 346, 253, 254, 255, 256, 220, 0,
	196, 349, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	216, 222, 0, 224, 195, 268, 218, 328, 231, 0,
	0, 0, 260, 227, 293, 232, 238, 281, 327, 266,
	286, 193, 318, 294, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 236, 0, 277,
	215, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 0, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 303, 0,
	0, 334, 335, 336, 320, 0, 207, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 1795, 0, 235,
	0, 0, 0, 0, 0, 0, 295, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	1006, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 300, 316, 192, 291, 329, 197, 298,
	187, 264, 287, 0, 0, 184, 314, 297, 246, 229,
	230, 183, 0, 282, 208, 221, 204, 262, 0, 313,
	341, 203, 332, 0, 324, 186, 0, 323, 261, 310,
	315, 247, 241, 185, 312, 245, 240, 233, 212, 0,
	225, 273, 239, 274, 226, 251, 250, 252, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 299, 0, 0,
	234, 0, 0, 0, 342, 0, 285, 267, 0, 0,
	0, 283, 237, 311, 275, 317, 301, 325, 279, 276,
	177, 302, 206, 248, 188, 190, 202, 209, 211, 213,
	214, 257, 258, 270, 290, 304, 305, 306, 205, 198,
	284, 199, 223, 200, 178, 292, 201, 180, 271, 309,
	0, 219, 280, 244, 181, 243, 272, 308, 307, 189,
	333, 339, 340, 344, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 338, 217, 174, 175, 321, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 337, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 228,
	269, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 319, 331, 348, 351,
	0, 0, 0, 179, 350, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 346, 253, 254, 255, 256, 220, 0, 196,
	349, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 216,
	222, 0, 224, 195, 268, 218, 328, 231, 0, 0,
	0, 260, 227, 293, 232, 238, 281, 327, 266, 286,
	193, 318, 294, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 236, 0, 277, 215,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 0, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 303, 0, 0,
	334, 335, 336, 320, 0, 207, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 295, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2731, 0, 134, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 300, 316, 192, 291, 329, 197, 298, 187,
	264, 287, 0, 0, 184, 314, 297, 246, 229, 230,
	183, 0, 282, 208, 221, 204, 262, 0, 313, 341,
	203, 332, 0, 324, 186, 0, 323, 261, 310, 315,
	247, 241, 185, 312, 245, 240, 233, 212, 0, 225,
	273, 239, 274, 226, 251, 250, 252, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 299, 0, 0, 234,
	0, 0, 0, 342, 0, 285, 267, 0, 0, 0,
	283, 237, 311, 275, 317, 301, 325, 279, 276, 177,
	302, 206, 248, 188, 190, 202, 209, 211, 213, 214,
	257, 258, 270, 290, 304, 305, 306, 205, 198, 284,
	199, 223, 200, 178, 292, 201, 180, 271, 309, 0,
	219, 280, 244, 181, 243, 272, 308, 307, 189, 333,
	339, 340, 344, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 338, 217, 174, 175, 321, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 337, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 228, 269,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 319, 331, 348, 351, 0,
	0, 0, 179, 350, 0, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 346, 253, 254, 255, 256, 220, 0, 196, 349,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 216, 222,
	0, 224, 195, 268, 218, 328, 231, 0, 0, 0,
	260, 227, 293, 232, 238, 281, 327, 266, 286, 193,
	318, 294, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 236, 0, 277, 215, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 0, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 303, 0, 0, 334,
	335, 336, 320, 0, 207, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 295, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 507, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 300, 316, 192, 291, 329, 197, 298, 187, 264,
	287, 0, 0, 184, 314, 297, 246, 229, 230, 183,
	0, 282, 208, 221, 204, 262, 0, 313, 341, 203,
	332, 0, 324, 186, 0, 323, 261, 310, 315, 247,
	241, 185, 312, 245, 240, 233, 212, 0, 225, 273,
	239, 274, 226, 251, 250, 252, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 299, 0, 0, 234, 0,
	0, 0, 342, 0, 285, 267, 0, 0, 0, 283,
	237, 311, 275, 317, 301, 325, 279, 276, 177, 302,
	206, 248, 188, 190, 202, 209, 211, 213, 214, 257,
	258, 270, 290, 304, 305, 306, 205, 198, 284, 199,
	223, 200, 178, 292, 201, 180, 271, 309, 0, 219,
	280, 244, 181, 243, 272, 308, 307, 189, 333, 339,
	340, 344, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	338, 217, 174, 175, 321, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 337, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 228, 269, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 319, 331, 348, 351, 0, 0,
	0, 179, 350, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	346, 253, 254, 255, 256, 220, 0, 196, 349, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 216, 222, 0,
	224, 195, 268, 218, 328, 231, 0, 0, 0, 260,
	227, 293, 232, 238, 281, 327, 266, 286, 193, 318,
	294, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 236, 0, 277, 215, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	0, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 303, 0, 0, 334, 335,
	336, 320, 0, 207, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 295, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2640, 0, 0, 134, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	300, 316, 192, 291, 329, 197, 298, 187, 264, 287,
	0, 0, 184, 314, 297, 246, 229, 230, 183, 0,
	282, 208, 221, 204, 262, 0, 313, 341, 203, 332,
	0, 324, 186, 0, 323, 261, 310, 315, 247, 241,
	185, 312, 245, 240, 233, 212, 0, 225, 273, 239,
	274, 226, 251, 250, 252, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 299, 0, 0, 234, 0, 0,
	0, 342, 0, 285, 267, 0, 0, 0, 283, 237,
	311, 275, 317, 301, 325, 279, 276, 177, 302, 206,
	248, 188, 190, 202, 209, 211, 213, 214, 257, 258,
	270, 290, 304, 305, 306, 205, 198, 284, 199, 223,
	200, 178, 292, 201, 180, 271, 309, 0, 219, 280,
	244, 181, 243, 272, 308, 307, 189, 333, 339, 340,
	344, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 338,
	217, 174, 175, 321, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 337, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 228, 269, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 319, 331, 348, 351, 0, 0, 0,
	179, 350, 0, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 346,
	253, 254, 255, 256, 220, 0, 196, 349, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 216, 222, 0, 224,
	195, 268, 218, 328, 231, 0, 0, 0, 260, 227,
	293, 232, 238, 281, 327, 266, 286, 193, 318, 294,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 236, 0, 277, 215, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 0,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 303, 0, 0, 334, 335, 336,
	320, 0, 207, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 295, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2372, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 300,
	316, 192, 291, 329, 197, 298, 187, 264, 287, 0,
	0, 184, 314, 297, 246, 229, 230, 183, 0, 282,
	208, 221, 204, 262, 0, 313, 341, 203, 332, 0,
	324, 186, 0, 323, 261, 310, 315, 247, 241, 185,
	312, 245, 240, 233, 212, 0, 225, 273, 239, 274,
	226, 251, 250, 252, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 299, 0, 0, 234, 0, 0, 0,
	342, 0, 285, 267, 0, 0, 0, 283, 237, 311,
	275, 317, 301, 325, 279, 276, 177, 302, 206, 248,
	188, 190, 202, 209, 211, 213, 214, 257, 258, 270,
	290, 304, 305, 306, 205, 198, 284, 199, 223, 200,
	178, 292, 201, 180, 271, 309, 0, 219, 280, 244,
	181, 243, 272, 308, 307, 189, 333, 339, 340, 344,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 338, 217,
	174, 175, 321, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 337, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 228, 269, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 319, 331, 348, 351, 0, 0, 0, 179,
	350, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 346, 253,
	254, 255, 256, 220, 0, 196, 349, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 216, 222, 0, 224, 195,
	268, 218, 328, 231, 0, 0, 0, 260, 227, 293,
	232, 238, 281, 327, 266, 286, 193, 318, 294, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 236, 0, 277, 215, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 0, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 303, 0, 0, 334, 335, 336, 320,
	0, 207, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 295, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 300, 316,
	192, 291, 329, 197, 298, 187, 264, 287, 0, 0,
	184, 314, 297, 246, 229, 230, 183, 0, 282, 208,
	221, 204, 262, 0, 313, 341, 203, 332, 0, 324,
	186, 0, 323, 261, 310, 315, 247, 241, 185, 312,
	245, 240, 233, 212, 0, 225, 273, 239, 274, 226,
	251, 250, 252, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 2567,
	0, 0, 299, 0, 0, 234, 0, 0, 0, 342,
	0, 285, 267, 0, 0, 0, 283, 237, 311, 275,
	317, 301, 325, 279, 276, 177, 302, 206, 248, 188,
	190, 202, 209, 211, 213, 214, 257, 258, 270, 290,
	304, 305, 306, 205, 198, 284, 199, 223, 200, 178,
	292, 201, 180, 271, 309, 0, 219, 280, 244, 181,
	243, 272, 308, 307, 189, 333, 339, 340, 344, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 338, 217, 174,
	175, 321, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 337, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 228, 269, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 319, 331, 348, 351, 0, 0, 0, 179, 350,
	0, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 346, 253, 254,
	255, 256, 220, 0, 196, 349, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 216, 222, 0, 224, 195, 268,
	218, 328, 231, 0, 0, 0, 260, 227, 293, 232,
	238, 281, 327, 266, 286, 193, 318, 294, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 236, 0, 277, 215, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 0, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 303, 0, 0, 334, 335, 336, 320, 0,
	207, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	295, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 300, 316, 192,
	291, 329, 197, 298, 187, 264, 287, 0, 0, 184,
	314, 297, 246, 229, 230, 183, 0, 282, 208, 221,
	204, 262, 0, 313, 341, 203, 332, 0, 324, 186,
	0, 323, 261, 310, 315, 247, 241, 185, 312, 245,
	240, 233, 212, 0, 225, 273, 239, 274, 226, 251,
	250, 252, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 2383, 0,
	0, 299, 0, 0, 234, 0, 0, 0, 342, 0,
	285, 267, 0, 0, 0, 283, 237, 311, 275, 317,
	301, 325, 279, 276, 177, 302, 206, 248, 188, 190,
	202, 209, 211, 213, 214, 257, 258, 270, 290, 304,
	305, 306, 205, 198, 284, 199, 223, 200, 178, 292,
	201, 180, 271, 309, 0, 219, 280, 244, 181, 243,
	272, 308, 307, 189, 333, 339, 340, 344, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 338, 217, 174, 175,
	321, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 337, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 228, 269, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	319, 331, 348, 351, 0, 0, 0, 179, 350, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 346, 253, 254, 255,
	256, 220, 0, 196, 349, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 216, 222, 0, 224, 195, 268, 218,
	328, 231, 0, 0, 0, 260, 227, 293, 232, 238,
	281, 327, 266, 286, 193, 318, 294, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	236, 0, 277, 215, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 0, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 303, 0, 0, 334, 335, 336, 320, 0, 207,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 295,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 300, 316, 192, 291,
	329, 197, 298, 187, 264, 287, 0, 0, 184, 314,
	297, 246, 229, 230, 183, 0, 282, 208, 221, 204,
	262, 0, 313, 341, 203, 332, 0, 324, 186, 0,
	323, 261, 310, 315, 247, 241, 185, 312, 245, 240,
	233, 212, 0, 225, 273, 239, 274, 226, 251, 250,
	252, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	299, 0, 0, 234, 0, 0, 0, 342, 0, 285,
	267, 0, 0, 0, 283, 237, 311, 275, 317, 301,
	325, 279, 276, 177, 302, 206, 248, 188, 190, 202,
	209, 211, 213, 214, 257, 258, 270, 290, 304, 305,
	306, 205, 198, 284, 199, 223, 200, 178, 292, 201,
	180, 271, 309, 0, 219, 280, 244, 181, 243, 272,
	308, 307, 189, 333, 339, 340, 344, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 338, 217, 174, 175, 321,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 337, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 228, 269, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 319,
	331, 348, 351, 0, 0, 0, 179, 350, 0, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 346, 253, 254, 255, 256,
	220, 0, 196, 349, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 216, 222, 0, 224, 195, 268, 218, 328,
	231, 0, 0, 0, 260, 227, 293, 232, 238, 281,
	327, 266, 286, 193, 318, 294, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 236,
	0, 277, 215, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 0, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	303, 0, 0, 334, 335, 336, 320, 0, 207, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 295, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1314, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 300, 316, 192, 291, 329,
	197, 298, 187, 264, 287, 0, 0, 184, 314, 297,
	246, 229, 230, 183, 0, 282, 208, 221, 204, 262,
	0, 313, 341, 203, 332, 0, 324, 186, 0, 323,
	261, 310, 315, 247, 241, 185, 312, 245, 240, 233,
	212, 0, 225, 273, 239, 274, 226, 251, 250, 252,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 299,
	0, 0, 234, 0, 0, 0, 342, 0, 285, 267,
	0, 0, 0, 283, 237, 311, 275, 317, 301, 325,
	279, 276, 177, 302, 206, 248, 188, 190, 202, 209,
	211, 213, 214, 257, 258, 270, 290, 304, 305, 306,
	205, 198, 284, 199, 223, 200, 178, 292, 201, 180,
	271, 309, 0, 219, 280, 244, 181, 243, 272, 308,
	307, 189, 333, 339, 340, 344, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 338, 217, 174, 175, 321, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	337, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 228, 269, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 319, 331,
	348, 351, 0, 0, 0, 179, 350, 0, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 346, 253, 254, 255, 256, 220,
	0, 196, 349, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 216, 222, 0, 224, 195, 268, 218, 328, 231,
	0, 0, 0, 260, 227, 293, 232, 238, 281, 327,
	266, 286, 193, 318, 294, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 236, 0,
	277, 215, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 0, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 303,
	0, 0, 334, 335, 336, 320, 0, 207, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 295, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 300, 316, 192, 291, 329, 197,
	298, 187, 264, 287, 0, 0, 184, 314, 297, 246,
	229, 230, 183, 0, 282, 208, 221, 204, 262, 0,
	313, 341, 203, 332, 0, 324, 186, 0, 323, 261,
	310, 315, 247, 241, 185, 312, 245, 240, 233, 212,
	0, 225, 273, 239, 274, 226, 251, 250, 252, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 299, 0,
	0, 234, 0, 0, 0, 342, 0, 285, 267, 0,
	0, 0, 283, 237, 311, 275, 317, 301, 325, 279,
	276, 177, 302, 206, 248, 188, 190, 202, 209, 211,
	213, 214, 257, 258, 270, 290, 304, 305, 306, 205,
	198, 284, 199, 223, 200, 178, 292, 201, 180, 271,
	309, 0, 219, 280, 244, 181, 243, 272, 308, 307,
	189, 333, 339, 340, 344, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 338, 217, 174, 175, 321, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 337,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	228, 269, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 319, 331, 348,
	351, 0, 0, 0, 179, 350, 0, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 346, 253, 254, 255, 256, 220, 0,
	196, 349, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	216, 222, 0, 224, 195, 268, 218, 328, 231, 0,
	0, 0, 260, 227, 293, 232, 238, 281, 327, 266,
	286, 193, 318, 294, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 236, 0, 277,
	215, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 0, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 303, 0,
	0, 334, 335, 336, 320, 0, 207, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 295, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	2129, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 300, 316, 192, 291, 329, 197, 298,
	187, 264, 287, 0, 0, 184, 314, 297, 246, 229,
	230, 183, 0, 282, 208, 221, 204, 262, 0, 313,
	341, 203, 332, 0, 324, 186, 0, 323, 261, 310,
	315, 247, 241, 185, 312, 245, 240, 233, 212, 0,
	225, 273, 239, 274, 226, 251, 250, 252, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 299, 0, 0,
	234, 0, 0, 0, 342, 0, 285, 267, 0, 0,
	0, 283, 237, 311, 275, 317, 301, 325, 279, 276,
	177, 302, 206, 248, 188, 190, 202, 209, 211, 213,
	214, 257, 258, 270, 290, 304, 305, 306, 205, 198,
	284, 199, 223, 200, 178, 292, 201, 180, 271, 309,
	0, 219, 280, 244, 181, 243, 272, 308, 307, 189,
	333, 339, 340, 344, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 338, 217, 174, 175, 321, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 337, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 228,
	269, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 319, 331, 348, 351,
	0, 0, 0, 179, 350, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 346, 253, 254, 255, 256, 220, 0, 196,
	349, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 216,
	222, 0, 224, 195, 268, 218, 328, 231, 0, 0,
	0, 260, 227, 293, 232, 238, 281, 327, 266, 286,
	193, 318, 294, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 236, 0, 277, 215,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 0, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 303, 0, 0,
	334, 335, 336, 320, 0, 207, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 295, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 0, 0, 1006,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 300, 316, 192, 291, 329, 197, 298, 187,
	264, 287, 0, 0, 184, 314, 297, 246, 229, 230,
	183, 0, 282, 208, 221, 204, 262, 0, 313, 341,
	203, 332, 0, 324, 186, 0, 323, 261, 310, 315,
	247, 241, 185, 312, 245, 240, 233, 212, 0, 225,
	273, 239, 274, 226, 251, 250, 252, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 299, 0, 0, 234,
	0, 0, 0, 342, 0, 285, 267, 0, 0, 0,
	283, 237, 311, 275, 317, 301, 325, 279, 276, 177,
	302, 206, 248, 188, 190, 202, 209, 211, 213, 214,
	257, 258, 270, 290, 304, 305, 306, 205, 198, 284,
	199, 223, 200, 178, 292, 201, 180, 271, 309, 0,
	219, 280, 244, 181, 243, 272, 308, 307, 189, 333,
	339, 340, 344, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 338, 217, 174, 175, 321, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 337, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 228, 269,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 319, 331, 348, 351, 0,
	0, 0, 179, 350, 0, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 346, 253, 254, 255, 256, 220, 0, 196, 349,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 216, 222,
	0, 224, 195, 268, 218, 328, 231, 0, 0, 0,
	260, 227, 293, 232, 238, 281, 327, 266, 286, 193,
	318, 294, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 236, 0, 277, 215, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 0, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 303, 0, 0, 334,
	335, 336, 320, 0, 207, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 295, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 300, 316, 192, 291, 329, 197, 298, 187, 264,
	287, 0, 0, 184, 314, 297, 246, 229, 230, 183,
	0, 282, 208, 221, 204, 262, 0, 313, 341, 203,
	332, 0, 324, 186, 0, 323, 261, 310, 315, 247,
	241, 185, 312, 245, 240, 233, 212, 0, 225, 273,
	239, 274, 226, 251, 250, 252, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 299, 0, 0, 234, 0,
	0, 0, 342, 0, 285, 267, 0, 0, 0, 283,
	237, 311, 275, 317, 301, 325, 279, 276, 177, 302,
	206, 248, 188, 190, 202, 209, 211, 213, 214, 257,
	258, 270, 290, 304, 305, 306, 205, 198, 284, 199,
	223, 200, 178, 292, 201, 180, 271, 309, 0, 219,
	280, 244, 181, 243, 272, 308, 307, 189, 333, 339,
	340, 344, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	338, 217, 174, 175, 321, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 337, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 228, 269, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 319, 331, 348, 351, 0, 0,
	0, 179, 350, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	346, 253, 254, 255, 256, 220, 0, 196, 349, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 216, 222, 0,
	224, 195, 268, 218, 328, 231, 0, 0, 0, 260,
	227, 293, 232, 238, 281, 327, 266, 286, 193, 318,
	294, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 236, 0, 277, 215, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	0, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 303, 0, 0, 334, 335,
	336, 320, 0, 207, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 295, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 1804, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	300, 316, 192, 291, 329, 197, 298, 187, 264, 287,
	0, 0, 184, 314, 297, 246, 229, 230, 183, 0,
	282, 208, 221, 204, 262, 0, 313, 341, 203, 332,
	0, 324, 186, 0, 323, 261, 310, 315, 247, 241,
	185, 312, 245, 240, 233, 212, 0, 225, 273, 239,
	274, 226, 251, 250, 252, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 299, 0, 0, 234, 0, 0,
	0, 342, 0, 285, 267, 0, 0, 0, 283, 237,
	311, 275, 317, 301, 325, 279, 276, 177, 302, 206,
	248, 188, 190, 202, 209, 211, 213, 214, 257, 258,
	270, 290, 304, 305, 306, 205, 198, 284, 199, 223,
	200, 178, 292, 201, 180, 271, 309, 0, 219, 280,
	244, 181, 243, 272, 308, 307, 189, 333, 339, 340,
	344, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 338,
	217, 174, 175, 321, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 337, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 228, 269, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 319, 331, 348, 351, 0, 0, 0,
	179, 350, 0, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 346,
	253, 254, 255, 256, 220, 0, 196, 349, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 216, 222, 0, 224,
	195, 268, 218, 328, 231, 0, 0, 0, 260, 227,
	293, 232, 238, 281, 327, 266, 286, 193, 318, 294,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 236, 0, 277, 215, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 0,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 0, 0, 0, 334, 335, 336,
	320, 303, 207, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 295,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 300, 316, 192, 291,
	329, 197, 298, 187, 264, 287, 0, 0, 184, 314,
	297, 246, 229, 230, 183, 0, 282, 208, 221, 204,
	262, 0, 313, 341, 203, 332, 0, 324, 186, 0,
	323, 261, 310, 315, 247, 241, 185, 312, 245, 240,
	233, 212, 0, 225, 273, 239, 274, 226, 251, 250,
	252, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	299, 0, 0, 234, 0, 0, 0, 342, 0, 285,
	267, 0, 0, 0, 283, 237, 311, 275, 317, 301,
	325, 279, 276, 177, 302, 206, 248, 188, 190, 202,
	209, 211, 213, 214, 257, 258, 270, 290, 304, 305,
	306, 205, 198, 284, 199, 223, 200, 178, 292, 201,
	180, 271, 309, 0, 219, 280, 244, 181, 243, 272,
	308, 307, 189, 333, 339, 340, 344, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 338, 217, 174, 175, 321,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 337, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 228, 269, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 319,
	331, 348, 351, 0, 0, 0, 179, 350, 0, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 346, 253, 254, 255, 256,
	220, 0, 196, 349, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 216, 222, 0, 224, 195, 268, 218, 328,
	231, 0, 0, 0, 260, 227, 293, 232, 238, 281,
	327, 266, 286, 193, 318, 294, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 236,
	0, 277, 215, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 0, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	303, 0, 0, 334, 335, 336, 320, 0, 207, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 295, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 300, 316, 192, 291, 329,
	197, 298, 187, 264, 287, 0, 0, 184, 314, 297,
	246, 229, 230, 183, 0, 282, 208, 221, 204, 262,
	0, 313, 341, 203, 332, 0, 324, 186, 0, 323,
	261, 310, 315, 247, 241, 185, 312, 245, 240, 233,
	212, 0, 225, 273, 239, 274, 226, 251, 250, 252,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 299,
	0, 0, 234, 0, 0, 0, 342, 0, 285, 267,
	0, 0, 0, 283, 237, 311, 275, 317, 301, 325,
	279, 276, 177, 302, 206, 248, 188, 190, 202, 209,
	211, 213, 214, 257, 258, 270, 290, 304, 305, 306,
	205, 198, 284, 199, 223, 200, 178, 292, 201, 180,
	271, 309, 0, 219, 280, 244, 181, 243, 272, 308,
	307, 189, 333, 339, 340, 344, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 338, 217, 174, 175, 321, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	337, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 228, 269, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 319, 331,
	348, 351, 0, 0, 0, 179, 350, 0, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 346, 253, 254, 255, 256, 220,
	0, 196, 349, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 216, 222, 0, 224, 195, 268, 218, 328, 231,
	0, 0, 0, 260, 227, 293, 232, 238, 281, 327,
	266, 286, 193, 318, 294, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 176, 0, 236, 0,
	277, 215, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 0, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 303,
	0, 0, 334, 335, 336, 320, 0, 207, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 295, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 300, 316, 192, 291, 329, 197,
	298, 187, 264, 287, 0, 0, 184, 314, 297, 246,
	229, 230, 183, 0, 282, 208, 221, 204, 262, 0,
	313, 341, 203, 332, 0, 324, 186, 0, 323, 261,
	310, 315, 247, 241, 185, 312, 245, 240, 233, 212,
	0, 225, 273, 239, 274, 226, 251, 250, 252, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 299, 0,
	0, 234, 0, 0, 0, 342, 0, 285, 267, 0,
	0, 0, 283, 237, 311, 275, 317, 301, 325, 382,
	276, 177, 302, 206, 248, 188, 190, 202, 209, 211,
	213, 214, 257, 258, 270, 290, 304, 305, 306, 205,
	198, 284, 199, 223, 200, 178, 292, 201, 180, 271,
	309, 0, 219, 280, 244, 181, 243, 272, 308, 307,
	189, 333, 339, 340, 344, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 338, 217, 174, 175, 321, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 337,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	228, 269, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 319, 331, 348,
	351, 0, 0, 0, 179, 350, 0, 0, 0, 0,
	0, 0, 383, 322, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 346, 253, 254, 255, 256, 220, 0,
	196, 349, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	216, 222, 0, 224, 195, 268, 218, 328, 231, 0,
	0, 0, 260, 227, 293, 232, 238, 281, 327, 266,
	286, 193, 318, 294, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 236, 0, 277,
	215, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 0, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 303, 0,
	0, 334, 335, 336, 320, 0, 207, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 295, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 300, 316, 192, 291, 329, 197, 298,
	187, 264, 287, 0, 0, 184, 314, 297, 246, 229,
	230, 183, 0, 282, 208, 221, 204, 262, 0, 313,
	341, 203, 332, 0, 324, 186, 0, 323, 261, 310,
	315, 247, 241, 185, 312, 245, 240, 233, 212, 0,
	225, 273, 239, 274, 226, 251, 250, 252, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	326, 0, 0, 0, 0, 0, 0, 299, 0, 0,
	234, 0, 0, 0, 342, 0, 285, 267, 0, 0,
	0, 283, 237, 311, 275, 317, 301, 325, 279, 276,
	177, 302, 206, 248, 188, 190, 202, 209, 211, 213,
	214, 257, 258, 270, 290, 304, 305, 306, 205, 198,
	284, 199, 223, 200, 178, 292, 201, 180, 271, 309,
	0, 219, 280, 244, 181, 243, 272, 308, 307, 189,
	333, 339, 340, 344, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 338, 217, 174, 175, 321, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 337, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 228,
	269, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 319, 331, 348, 351,
	0, 0, 0, 179, 350, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 346, 253, 254, 255, 256, 220, 0, 196,
	349, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 216,
	222, 0, 224, 195, 268, 218, 328, 231, 0, 0,
	0, 260, 227, 293, 232, 238, 281, 327, 266, 286,
	193, 318, 294, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 236, 0, 277, 215,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 0, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 303, 0, 0,
	334, 335, 336, 320, 0, 207, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 210, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 295, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 300, 316, 192, 291, 329, 197, 298, 187,
	264, 287, 0, 0, 184, 314, 297, 246, 229, 230,
	183, 0, 282, 208, 221, 204, 262, 0, 313, 341,
	203, 332, 0, 324, 186, 0, 323, 261, 310, 315,
	247, 241, 185, 312, 245, 240, 233, 212, 0, 225,
	273, 239, 274, 226, 251, 250, 252, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 299, 0, 0, 234,
	0, 0, 0, 342, 0, 285, 267, 0, 0, 0,
	283, 237, 311, 275, 317, 301, 325, 279, 276, 177,
	302, 206, 248, 188, 190, 202, 209, 211, 213, 214,
	257, 258, 270, 290, 304, 305, 306, 205, 198, 284,
	199, 223, 200, 178, 292, 201, 180, 271, 309, 0,
	219, 280, 244, 181, 243, 272, 308, 307, 189, 333,
	339, 340, 344, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 338, 217, 174, 175, 321, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 337, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 228, 269,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 319, 331, 348, 351, 0,
	0, 0, 179, 350, 0, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 346, 253, 254, 255, 256, 220, 0, 196, 349,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 216, 222,
	0, 224, 195, 268, 218, 328, 231, 0, 0, 0,
	260, 227, 293, 232, 238, 281, 327, 266, 286, 193,
	318, 294, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 236, 0, 277, 215, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 0, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 303, 0, 0, 334,
	335, 336, 320, 0, 207, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 295, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 300, 316, 192, 291, 329, 197, 298, 187, 264,
	287, 0, 0, 184, 314, 297, 246, 229, 230, 183,
	0, 282, 208, 221, 204, 262, 0, 313, 341, 203,
	332, 0, 324, 186, 0, 323, 261, 310, 315, 247,
	241, 185, 312, 245, 240, 233, 212, 0, 225, 273,
	239, 274, 226, 251, 250, 252, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 299, 0, 0, 234, 0,
	0, 0, 342, 0, 285, 267, 0, 0, 0, 283,
	237, 311, 275, 317, 301, 325, 279, 276, 177, 302,
	206, 248, 188, 190, 202, 209, 211, 213, 214, 257,
	258, 270, 290, 304, 305, 306, 205, 198, 284, 199,
	223, 200, 178, 292, 201, 180, 271, 309, 0, 219,
	280, 244, 181, 243, 272, 308, 307, 189, 333, 339,
	340, 344, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	338, 217, 174, 175, 321, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 337, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 228, 269, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 319, 331, 348, 351, 0, 0,
	0, 179, 350, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	346, 253, 254, 255, 256, 220, 0, 196, 349, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 216, 222, 0,
	224, 195, 268, 218, 328, 231, 0, 0, 0, 260,
	227, 293, 232, 238, 281, 327, 266, 286, 193, 318,
	294, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 236, 0, 277, 215, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	0, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 303, 0, 0, 334, 335,
	336, 320, 0, 207, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 295, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	300, 316, 192, 291, 329, 197, 298, 187, 264, 287,
	0, 0, 184, 314, 297, 246, 229, 230, 183, 0,
	282, 208, 221, 204, 262, 0, 313, 341, 203, 332,
	0, 324, 186, 0, 323, 261, 310, 315, 247, 241,
	185, 312, 245, 240, 233, 212, 0, 225, 273, 239,
	274, 226, 251, 250, 252, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 299, 0, 0, 234, 0, 0,
	0, 342, 0, 285, 267, 0, 0, 0, 283, 237,
	311, 275, 317, 301, 325, 279, 276, 177, 302, 206,
	248, 188, 190, 422, 209, 211, 213, 214, 257, 258,
	270, 290, 304, 305, 306, 205, 198, 284, 199, 223,
	200, 178, 292, 201, 180, 271, 309, 0, 219, 280,
	244, 181, 243, 272, 308, 307, 189, 333, 339, 340,
	344, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 338,
	217, 174, 175, 321, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 337, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 228, 269, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 319, 331, 348, 351, 0, 0, 0,
	179, 350, 0, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 346,
	253, 254, 255, 256, 220, 0, 196, 349, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 216, 222, 0, 224,
	195, 268, 218, 328, 231, 0, 0, 0, 260, 227,
	293, 232, 238, 281, 327, 266, 286, 193, 318, 294,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 236, 0, 277, 215, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 0,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 303, 0, 0, 334, 335, 336,
	320, 0, 207, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 210, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 295, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 688, 689, 690, 1776, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 300,
	316, 192, 291, 329, 197, 298, 187, 264, 287, 0,
	0, 184, 314, 297, 246, 229, 230, 183, 0, 282,
	208, 221, 204, 262, 0, 313, 341, 203, 332, 0,
	324, 186, 0, 323, 261, 310, 315, 247, 241, 185,
	312, 245, 240, 233, 212, 0, 225, 273, 239, 274,
	226, 251, 250, 252, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 299, 0, 0, 234, 0, 0, 0,
	342, 0, 285, 267, 0, 0, 0, 283, 237, 311,
	275, 317, 301, 325, 279, 276, 177, 302, 206, 248,
	188, 190, 202, 209, 211, 213, 214, 257, 258, 270,
	290, 304, 305, 306, 205, 198, 284, 199, 223, 200,
	178, 292, 201, 180, 271, 309, 0, 219, 280, 244,
	181, 243, 272, 308, 307, 189, 333, 339, 340, 344,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 338, 217,
	174, 175, 321, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 337, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 228, 269, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 319, 331, 348, 351, 0, 0, 0, 179,
	350, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 346, 253,
	254, 255, 256, 220, 0, 196, 349, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 343, 216, 222, 0, 224, 195,
	268, 218, 328, 231, 265, 0, 0, 260, 227, 293,
	232, 238, 281, 327, 266, 286, 193, 318, 294, 242,
	0, 210, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 295, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 688, 689, 690, 1776, 0, 0, 0, 191,
	176, 0, 236, 0, 277, 215, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 320,
	0, 207, 0, 0, 0, 0, 0, 182, 300, 316,
	192, 291, 329, 197, 298, 187, 264, 287, 0, 0,
	184, 314, 297, 246, 229, 230, 183, 0, 282, 208,
	221, 204, 262, 0, 313, 341, 203, 332, 0, 324,
	186, 0, 323, 261, 310, 315, 247, 241, 185, 312,
	245, 240, 233, 212, 0, 225, 273, 239, 274, 226,
	251, 250, 252, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 0, 299, 0, 0, 234, 0, 0, 0, 342,
	0, 285, 267, 0, 0, 0, 283, 237, 311, 275,
	317, 301, 325, 279, 276, 177, 302, 206, 248, 188,
	190, 202, 209, 211, 213, 214, 257, 258, 270, 290,
	304, 305, 306, 205, 198, 284, 199, 223, 200, 178,
	292, 201, 180, 271, 309, 0, 219, 280, 244, 181,
	243, 272, 308, 307, 189, 333, 339, 340, 344, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 338, 217, 174,
	175, 321, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 337, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 228, 269, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 319, 331, 348, 351, 0, 0, 0, 179, 350,
	0, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 346, 253, 254,
	255, 256, 220, 0, 196, 349, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 343, 216, 222, 0, 224, 195, 268,
	218, 328, 231, 265, 0, 0, 260, 227, 293, 232,
	238, 281, 327, 266, 286, 193, 318, 294, 242, 0,
	210, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	295, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 688, 689, 690, 0, 0, 0, 0, 191, 176,
	0, 236, 0, 277, 215, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 320, 0,
	207, 0, 0, 0, 0, 0, 182, 300, 316, 192,
	291, 329, 197, 298, 187, 264, 287, 0, 0, 184,
	314, 297, 246, 229, 230, 183, 0, 282, 208, 221,
	204, 262, 0, 313, 341, 203, 332, 0, 324, 186,
	0, 323, 261, 310, 315, 247, 241, 185, 312, 245,
	240, 233, 212, 0, 225, 273, 239, 274, 226, 251,
	250, 252, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 299, 0, 0, 234, 0, 0, 0, 342, 0,
	285, 267, 0, 0, 0, 283, 237, 311, 275, 317,
	301, 325, 279, 276, 177, 302, 206, 248, 188, 190,
	202, 209, 211, 213, 214, 257, 258, 270, 290, 304,
	305, 306, 205, 198, 284, 199, 223, 200, 178, 292,
	201, 180, 271, 309, 0, 219, 280, 244, 181, 243,
	272, 308, 307, 189, 333, 339, 340, 344, 0, 345,
	0, 0, 0, 353, 2328, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 338, 217, 174, 175,
	321, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 337, 0, 0, 0, 0, 288, 1727, 0,
	0, 0, 0, 228, 269, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	319, 331, 348, 351, 0, 2751, 0, 179, 350, 2328,
	0, 0, 0, 0, 0, 2310, 322, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 346, 253, 254, 255,
	256, 220, 0, 196, 349, 278, 0, 0, 0, 0,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 216, 222, 0, 224, 195, 268, 218,
	328, 231, 0, 0, 0, 260, 227, 293, 232, 238,
	281, 327, 266, 286, 193, 318, 294, 242, 0, 402,
	2310, 401, 408, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 2328, 405, 406, 0, 407, 411, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	236, 0, 277, 215, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2410, 0, 420,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	2314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2318, 0, 2310, 334, 335, 336, 320, 0, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2307, 0, 0, 0, 2309, 2311, 2313, 0, 2315,
	2316, 2317, 2319, 2320, 2321, 2323, 2324, 2325, 2326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2318, 0, 0, 0,
	0, 2329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2307, 0, 0, 0,
	2309, 2311, 2313, 0, 2315, 2316, 2317, 2319, 2320, 2321,
	2323, 2324, 2325, 2326, 0, 0, 0, 2327, 0, 0,
	0, 0, 394, 396, 395, 0, 0, 0, 0, 0,
	0, 400, 0, 0, 2306, 0, 0, 402, 0, 401,
	408, 398, 0, 404, 0, 0, 2329, 0, 2314, 0,
	419, 405, 406, 0, 407, 411, 0, 397, 393, 2318,
	0, 388, 0, 2322, 0, 0, 0, 0, 416, 0,
	2312, 0, 0, 0, 0, 0, 0, 0, 0, 2307,
	0, 0, 2327, 2309, 2311, 2313, 0, 2315, 2316, 2317,
	2319, 2320, 2321, 2323, 2324, 2325, 2326, 420, 0, 2306,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2322, 2329,
	0, 0, 0, 0, 0, 2312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	403, 409, 0, 410, 412, 0, 0, 413, 414, 415,
	0, 0, 417, 418, 0, 2327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2322, 0, 0, 0, 0, 0, 0, 2312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 396, 395, 0, 0, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 403, 409,
	0, 410, 412, 0, 0, 413, 414, 415, 0, 0,
	417, 418,
}

var yyPact = [...]int{
	2669, -1000, -298, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -155, 26246, 26246,
	-1000, -1000, 1665, -1000, 25747, 10767, 26745, 189, 184, 26745,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	439, -1000, 25248, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	401, 28939, 27244, 267, 8262, 26745, -281, -1000, 2203, -148,
	-1000, -1000, -1000, -1000, -1000, -1000, 233, 482, 24749, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2828, 144, 482, 595, 599,
	751, 751, 12264, 2203, 223, 974, -1000, 717, 2669, 28521,
	371, 26745, -1000, 996, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 371, -1000, -1000, -1000, 2203, 2203,
	-1000, 26745, 26745, -24, 1093, -1000, 228, 257, 235, 986,
	-1000, -1000, -1000, -1000, -1000, 2211, -1000, 26745, 26745, 1890,
	26745, -1000, 1333, 334, 29147, 2068, 976, 487, 1944, -1000,
	-1000, 1884, -1000, 129, 266, 107, 307, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 126, -1000, 2116, -1000, -1000, 105,
	-1000, -1000, 130, -1000, -1000, -1000, -82, -1000, -1000, -1000,
	-1000, -1000, -149, -1000, -1000, -149, 620, 1445, 8262, -1000,
	1458, -1000, 1571, -1000, -1000, -1000, -1000, 5758, 9759, 9759,
	9759, 9759, -1000, -1000, 1764, 8262, 1883, 1862, -1000, -1000,
	-1000, -1000, 982, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1515, 9260, -1000, 1860, 1859,
	1856, 1855, 1851, 1850, 1849, 1847, 1845, 1842, 1841, 1690,
	1839, 1514, 1513, 1838, 1835, 1834, 9759, 1512, 1690, 1690,
	1831, 1828, 1827, 1825, 1821, 1810, 1809, 1805, 1795, 1793,
	1790, 1789, 1788, 1783, 1781, 1780, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1351,
	-1000, 975, 953, -1000, 1777, 2063, 2144, 1735, 2193, 2143,
	2120, 2115, 2108, 1313, -1000, -1000, 26745, 26745, 54, 396,
	396, 396, 422, 396, 437, 429, -1000, -1000, -1000, -1000,
	-1000, -1000, 509, -1000, -1000, -1000, -1000, 789, 26745, -1000,
	1728, 1049, 2138, 345, 337, 224, -1000, 1049, 251, 332,
	2144, 2144, -79, -104, 1049, 1049, -104, 75, -1000, -1000,
	-1000, 1147, 330, 1147, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2105, 2102, -197, 401, 401, 403, -1000, -163, -1000,
	-1000, 576, -1000, 536, -1000, 1333, 329, 327, 848, 1145,
	-1000, 1063, 26745, 26745, 26745, 1063, 1063, 15261, 14762, -1000,
	2144, 1735, -1000, 1676, 1708, 1735, 401, 401, 401, 401,
	401, 401, 401, 26745, 26745, 7255, 7255, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 268, -1000, -1000, -1000, -1000,
	-1000, 241, 1775, -1000, 26745, 222, 2144, 2063, 2144, -1000,
	-1000, 970, 1308, 1510, -1000, -1000, 228, 1058, -1000, 602,
	-1000, -1000, -1000, -1000, 26745, 236, -1000, -1000, 1500, 1774,
	-1000, 340, 907, 776, -1000, 63, 2765, 22746, 1333, 22746,
	26745, -1000, -1000, -1000, -1000, -1000, -1000, -86, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 69, -1000, 69, 8262, 8262, 8262, 8262, 8262, -1000,
	460, 8761, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9759,
	9759, 9759, 9759, 9759, 9759, 9759, 9759, 9759, 9759, 9759,
	9759, 1759, 1153, 9759, 9759, 9759, 1708, 2037, 811, -1000,
	-1000, -1000, -1000, -1000, 1107, 1445, 8262, 8262, 26745, -1000,
	2666, 8262, 8262, 2567, 8262, 2106, 2106, 4260, 26745, 8262,
	-1000, 1675, 1670, -1000, -1000, 1216, 8262, -1000, -1000, 8262,
	9759, 8262, -1000, -1000, -1000, -1000, 74, 2106, 8262, 8262,
	2106, 2106, 2106, 1104, 2106, 2106, 2106, 2106, 2106, 2106,
	2106, 2106, 26745, 2010, 40, -1000, -1000, -1000, 1707, -1000,
	1733, 1733, 1707, 1707, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1754, 1773, -1000, -1000, 1730, 1730, 1730,
	1707, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1750, 1750, 1753, 1750,
	26745, 2144, -281, 6756, -1000, -285, 2063, 8262, -1000, -1000,
	8262, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1504,
	2085, -1000, 1767, -1000, 419, 396, -1000, 26745, 1112, 22746,
	1333, 1326, 26745, 396, 396, 403, -1000, 26745, 789, 2082,
	26745, 2202, 9759, 22746, 1147, 1049, -1000, 2202, 1147, -1000,
	-1000, -1000, 1049, 1049, -1000, -1000, -1000, -1000, 1147, 1147,
	-1000, -1000, -90, 2202, 2202, -108, 26745, 26745, 396, 26745,
	-1000, -1000, -1000, -1000, 26745, -1000, -1000, 415, 26745, 22746,
	21249, -1000, -129, 584, 524, 548, -1000, -1000, 336, 431,
	13763, 287, 22746, 5258, -1000, -1000, 1063, 1063, 1063, 5258,
	5258, 870, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2063,
	-1000, -1000, -1000, -1000, 26745, 22746, 1333, 26745, 26745, 26745,
	28521, -1000, 1766, 765, -1000, -1000, 11765, 955, 765, 1503,
	26745, 1943, 2003, -1000, 1765, 13264, 26745, -1000, -1000, -282,
	-1000, 12764, 26745, 2063, -1000, 2063, 3308, -1000, 2130, -1000,
	228, 158, -1000, -1000, -1000, -1000, -1000, -1000, 952, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 788, -1000,
	26745, -1000, -1000, 63, 22746, 1089, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 121, -1000, -1000, 151, -1000, 413, 0,
	1057, -1000, -1000, 57, 147, 456, 57, 1445, -1000, 1119,
	1119, 1134, -1000, 438, -1000, -1000, -1000, -1000, 1764, -1000,
	-1000, -1000, 1490, 3074, -1000, 1251, 1251, 871, 871, 871,
	871, 871, 1097, 1097, -1000, -1000, -1000, 5758, 1759, 9759,
	9759, 9759, 378, 3042, 2963, -1000, 8262, 1100, -1000, 8262,
	1547, 872, 951, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1662, 620, 1656, 1402, 2209, 1650, 8262,
	-1000, -1000, 8262, 1505, 7763, -1000, -1000, -1000, 1644, 950,
	1638, -1000, -1000, -1000, 1631, 711, 1613, 1121, 1609, 706,
	8262, 1037, 1036, 8262, 8262, 8262, 8262, 1606, 8262, 8262,
	8262, 8262, 8262, 8262, 8262, 8262, -1000, 8262, 30, -1000,
	-1000, -1000, -1000, 1305, -1000, 1304, -1000, -1000, -1000, 1502,
	1502, -1000, 1302, -1000, -1000, -1000, -1000, 1301, -1000, -1000,
	1300, -1000, -1000, -1000, -1000, 998, -1000, 1445, -1000, 1481,
	-1000, 866, 691, -1000, 1397, -1000, -1000, 26745, 10258, 396,
	26745, 23, -1000, 2067, 702, -1000, 0, 638, 1887, 2008,
	26745, 26745, 24250, -1000, 1758, 988, -1000, -1000, 8262, -1000,
	1865, 26745, 2202, -1000, 26745, 2202, 2202, 1049, 28521, 1147,
	26745, 1147, -1000, -1000, 1147, -1000, 948, -1000, 26745, -1000,
	-1000, -1000, -1000, 401, 21, 702, 2103, 921, -1000, -1000,
	-1000, -1000, 27743, 27743, 14263, 27743, -1000, 1064, -1000, -1000,
	580, 533, 573, -1000, -1000, 409, -1000, -1000, 638, -1000,
	-1000, -1000, 1757, 1091, -1000, -1000, 9759, -1000, 5258, 5258,
	5258, -1000, -1000, 17257, -1000, -1000, 683, 638, 1933, 681,
	-1000, 681, -1000, 10258, 2202, 7255, -1000, 21249, -1000, -1000,
	23744, -1000, 23245, 2202, -289, 714, -1000, 1979, -282, 26745,
	26745, 984, 153, -1000, 983, -1000, 626, -1000, 1756, -1000,
	978, 1982, 632, -1000, 1090, -1000, -1000, -1000, 947, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -26, -1000, -1000, 26745,
	1500, 965, 1089, 654, -1000, 406, 946, 939, -1000, 22746,
	76, 22746, -1000, 22746, -1000, -1000, 237, -1000, 26745, 2062,
	-1000, -1000, -1000, 1413, -302, 2042, -1000, -1000, -1000, -1000,
	-1000, 964, -1000, 378, 3042, 2951, -1000, 9759, 9759, 2031,
	1066, -1000, 8262, 1187, 253, 1314, 16259, 26745, -1000, -1000,
	8262, 8262, -1000, 2020, 2002, -1000, 8262, 8262, 1322, -1000,
	26745, -1000, -1000, -1000, 16259, -1000, 9759, -1000, 8262, 1985,
	-65, -65, 1972, 1954, 1946, 957, -65, 1908, 1901, 1761,
	1746, 1630, 1617, 1612, 1579, 1445, -1000, -1000, 1605, 1600,
	936, -1000, 935, 1598, 933, 926, 6756, -1000, -120, 8262,
	8262, 8262, 1732, -1000, -1000, 60, 1593, 679, -1000, -1000,
	-1000, 2670, 1733, 1707, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1754, -1000, 1730, 1730, 1730, 1707, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1750, 1750,
	1753, 1750, 26745, 1749, -77, 1075, -1000, 328, 22746, 326,
	-1000, 1931, 258, -1000, 2008, -1000, 652, -1000, 1744, 1740,
	26745, 741, -1000, 929, 2669, -1000, 26745, 1445, -1000, 1333,
	1049, -1000, 2202, 932, -1000, -1000, 2202, -1000, 1049, -1000,
	1049, 1147, 26745, -1000, 26745, -77, 1075, 328, 26745, 21249,
	21249, 21249, 21249, -1000, 1960, 1957, -1000, 1959, 1958, 1976,
	26745, 21249, 1728, -1000, 28132, -1000, -1000, -1000, -1000, -1000,
	1708, 924, 2113, 549, 8262, -1000, -1000, -1000, 521, 22746,
	1474, 287, -1000, -1000, -1000, -1000, -1000, 26745, 26745, 1592,
	2200, -1000, 678, -1000, -1000, 928, -1000, 2200, -1000, 1290,
	1467, 1167, 626, 632, 919, -1000, 153, 26745, 1978, 1738,
	-1000, 26745, -282, 6756, 234, -282, 26745, 6756, 3308, 1284,
	-1000, -1000, -1000, 2205, 22746, 1333, 1016, 1069, -1000, 89,
	-1000, 120, 325, 1466, -1000, 428, 85, -1000, 1086, 1413,
	424, -1000, -1000, 9759, -1000, -1000, -1000, -1000, 1445, 8262,
	1591, -1000, 560, 560, 1585, -1000, 1707, 1733, -1000, 1707,
	1730, 1707, 560, 560, 1584, -1000, 1297, 1564, -1000, -1000,
	1551, 1537, 8262, -1000, 1583, 2807, 862, -65, -1000, 1729,
	-1000, -65, -65, -65, -65, -1000, -65, -65, -65, -65,
	-65, -65, -65, -65, -1000, -1000, -1000, 1449, -1000, -1000,
	-1000, 1279, -1000, 1277, -1000, -52, -37, 1445, 1445, -1000,
	-1000, 2016, 1433, 442, 10258, 2001, 1728, 11266, 1317, -1000,
	-1000, 22247, -1000, 308, -1000, -1000, -1000, 418, 118, 1275,
	294, -1000, 1530, 26745, -1000, -1000, -1000, -1000, -1000, 1075,
	1075, 1075, 11266, 11266, 371, 672, 917, 21249, 26745, -1000,
	20750, 1582, -1000, 638, 2202, -1000, 26745, -1000, 2202, 2202,
	1049, -1000, 1728, 1317, 22247, 308, 876, -1000, 1079, 1941,
	1926, 1941, -1000, -1000, -1000, -1000, 1956, -1000, 1912, -1000,
	-1000, 876, -1000, -1000, -1000, -1000, -1000, 549, -1000, 2121,
	558, 558, 558, 1580, -1000, 654, 1577, -1000, -1000, -1000,
	-1000, -1000, 2198, 2188, 21748, 2198, -1000, -289, 2226, 223,
	26745, 227, -1000, -282, 26745, -1000, -1000, 1566, 650, -282,
	-1000, 626, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1333,
	-1000, 113, -1000, -1000, -1000, -1000, -1000, -1000, -14, -1000,
	26745, -1000, 1413, 1411, 81, 26745, -1000, 1445, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 8262, -1000, -1000, -1000, 1511, -1000, -1000,
	8262, -1000, 370, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1565, 1558, -287, -33,
	2185, 2183, -1000, -1000, -1000, 2670, -1000, 1475, 2080, 1557,
	649, -1000, -1000, -1000, 2670, 541, -1000, 26745, 1165, 558,
	396, 558, 1162, 1726, -1000, -1000, -1000, 1409, -2, -1000,
	-1000, -1000, 1404, 1395, 1272, -1000, -1000, 1281, 851, 9,
	-1000, -1000, -1000, -1000, -1000, -1000, 1725, 16259, 16758, 1394,
	1556, 1554, 27743, 21249, 20750, 800, -1000, 895, -1000, -1000,
	-1000, 2202, -1000, -1000, 2202, 2074, -1000, -2, -1000, 2195,
	26745, 6756, -1000, -1000, 8262, 1724, -1000, 8262, -1000, -1000,
	-1000, -1000, -1000, 1722, 2054, -1000, -1000, -1000, -1000, -1000,
	-1000, 8262, 8262, -1000, -1000, -1000, 26745, -1000, -1000, -282,
	-1000, 626, 910, -1000, 626, 638, -1000, -1000, 153, -1000,
	-1000, -1000, -108, 1501, -1000, 1372, 2195, -1000, 2181, -1000,
	-1000, -289, 1387, -1000, 2179, 1382, 1336, -208, -1000, -1000,
	223, 28956, 11266, 2544, -1000, -1000, 26745, 26745, -1000, 26745,
	26745, 396, 8262, -1000, -1000, 215, -1000, -1000, 160, -1000,
	-1000, 1271, 342, -1000, 19253, -1000, -1000, -1000, -1000, -1000,
	69, 28956, 2202, 800, 895, -1000, -1000, 969, -1000, -1000,
	223, -1000, 2144, -1000, -1000, 1445, 26745, 1445, 20251, -1000,
	2178, 2173, 1445, 620, 632, 626, -1000, -108, -1000, -54,
	-43, -1000, -1000, 66, 8262, -291, -1000, 1378, -36, -1000,
	-1000, 26745, -1000, 363, 28873, -1000, 1075, 1075, 743, 1075,
	1075, 1075, 1075, 291, 274, 1075, 1075, 1075, 1075, 1075,
	1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1720,
	-1000, -1000, 2544, -1000, -1000, 1151, 9759, -1000, -1000, 1373,
	16758, 512, 523, 1719, -1000, 229, 2223, -1000, 1142, 1125,
	-1000, 26745, -1000, 1715, 1748, 198, 1712, -1000, 1711, 1710,
	26745, 1357, 313, 1370, -1000, -1000, 159, -1000, -1000, 901,
	-1000, 1707, 8262, -1000, -108, 363, 2195, -1000, -1000, -1000,
	892, 880, -1000, -1000, -1000, -1000, -1000, 398, -42, -43,
	-1000, 2168, -38, 2166, 2165, 1552, -1000, 3761, -1000, -1000,
	-1000, 620, -1000, 1706, -1000, 2163, 2072, -1000, 201, 2162,
	28956, -1000, 1265, 1263, 1075, 1075, 1262, 1369, 1368, 1364,
	1075, 1075, 1238, 1358, 28132, 1226, 1219, 1217, 1267, 1355,
	606, 1260, 1252, 1235, 26745, 1701, 1334, -1000, -1000, 3042,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1212, 1699, -119, -1000, -1000, 1698, 19253, 213, 213,
	19253, 19253, 19253, 1697, 397, -1000, -16, -1000, -1000, -1000,
	19253, 2053, 1331, -1000, 201, 2144, -1000, -1000, 19752, 1691,
	1211, -33, 2160, -1000, 1336, 2159, 1336, 1336, -1000, -1000,
	4759, -283, -69, 244, 26745, 1336, 1353, -1000, 2158, 286,
	-1000, -1000, -1000, 16259, 16259, -1000, -1000, -1000, -1000, 1346,
	1338, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 309, 26745, 875, -1000, 1077, 1506, 8262,
	1690, -203, 19253, 874, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 868, 864, 850, 19253, -1000, -1000, -1000, 232, -1000,
	154, -1000, -1000, 2053, -1000, -1000, -1000, -1000, 2095, 15760,
	-50, -1000, 1337, -1000, 1336, -1000, -1000, 1115, -1000, -1000,
	-1000, -1000, -1000, 843, -1000, -1000, -1000, 18754, 210, 238,
	220, -1000, 382, -1000, -1000, -1000, -1000, -1000, -1000, 320,
	840, -1000, 1334, 1332, -1000, 1242, -1000, 1910, -1000, 61,
	839, -1000, -1000, -1000, -1000, 805, -1000, -1000, 1075, 1328,
	174, -1000, -1000, -1000, -1000, 26745, -1000, 779, -1000, -1000,
	-1000, 890, -1000, -1000, -1000, -1000, 4759, -1000, 26745, -1000,
	26745, 207, 1210, 9759, 1689, 9759, 1683, 218, 1682, -1000,
	-1000, -1000, -1000, -1000, 397, -1000, 1906, 1902, 2215, -1000,
	-1000, -1000, -1000, 154, 154, 154, 154, 79, 1192, -1000,
	1326, 604, -1000, 1072, -1000, 18255, 26745, -1000, -1000, 771,
	1680, 2156, -1000, 2787, 26745, 2321, 26745, 1679, 1062, 9759,
	-1000, -1000, 2222, -1000, 2217, 478, 478, -1000, -1000, -1000,
	26745, 6257, -1000, 879, -1000, -1000, 360, 214, -1000, 766,
	-1000, 763, 17756, 1190, 1863, -1000, -1000, -1000, 1222, 226,
	-1000, -1000, -1000, 1445, 26745, 760, -1000, 1520, 203, -1000,
	-1000, -1000, 759, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	360, 1974, -1000, 1189, -1000, -1000, 28808, 481, -1000, -1000,
	28808, 206, -1000, 343, 1666, -1000, -1000, 756, -1000, 1405,
	525, 8262, -1000, 206, 28956, -1000, 8262, 699, -1000, 28956,
	676, -1000, -1000,
}

var yyPgo = [...]int{
	0, 129, 2631, 213, 150, 135, 209, 2630, 2629, 2074,
	2055, 2628, 2626, 2625, 2623, 2622, 2620, 2619, 2618, 2617,
	2616, 2615, 2612, 2611, 2609, 2607, 2606, 2605, 2603, 2601,
	2600, 201, 2599, 2597, 2596, 2595, 2594, 2593, 2592, 2591,
	2590, 2587, 2586, 2585, 2582, 2580, 2579, 2578, 2577, 2576,
	2575, 2574, 2573, 133, 2572, 2043, 2571, 2568, 2567, 2566,
	2564, 179, 2562, 2561, 2560, 2559, 2558, 2557, 2556, 2554,
	2553, 2552, 2551, 2550, 2549, 2548, 2547, 152, 2544, 2542,
	2540, 2539, 2538, 2537, 2536, 199, 189, 62, 2532, 44,
	59, 159, 217, 1183, 236, 208, 155, 140, 69, 2531,
	2096, 2530, 186, 192, 125, 25, 2529, 143, 2528, 122,
	37, 48, 204, 127, 56, 96, 97, 2527, 182, 66,
	84, 90, 2526, 2525, 214, 158, 2522, 101, 2521, 2520,
	2519, 2518, 172, 105, 2517, 61, 2510, 80, 75, 95,
	28, 2509, 2508, 2507, 85, 2502, 2501, 2500, 2499, 154,
	2496, 98, 54, 2494, 2492, 2491, 58, 2485, 29, 2483,
	51, 2482, 2481, 2480, 2477, 64, 2476, 2475, 14, 20,
	18, 2472, 16, 1, 2470, 184, 65, 88, 116, 2469,
	375, 2466, 2465, 2464, 121, 2459, 304, 2457, 2456, 2455,
	2454, 10, 2453, 169, 2452, 2451, 81, 107, 2450, 74,
	162, 163, 2449, 2448, 111, 53, 52, 104, 2434, 2433,
	79, 181, 17, 41, 0, 167, 35, 2432, 2431, 2430,
	203, 2429, 166, 164, 193, 170, 218, 126, 2426, 2425,
	55, 2424, 128, 76, 102, 12, 2423, 146, 2422, 113,
	144, 2421, 173, 2420, 175, 2, 119, 2417, 2416, 24,
	243, 2413, 2411, 2409, 141, 2408, 2399, 142, 138, 2394,
	2393, 2390, 26, 2386, 32, 30, 2385, 103, 2367, 206,
	2366, 148, 108, 145, 139, 117, 191, 194, 71, 118,
	1057, 112, 78, 19, 2358, 185, 2357, 210, 205, 2355,
	157, 2354, 200, 355, 178, 2353, 156, 7, 42, 31,
	2351, 8, 2350, 503, 2348, 2347, 22, 2346, 23, 2345,
	2344, 2343, 2342, 5, 2340, 2339, 2338, 3, 6, 2337,
	4, 174, 43, 100, 2336, 106, 149, 2335, 2334, 2331,
	2327, 2326, 187, 2325, 1140, 2324, 2319, 2318, 2317, 2316,
	2315, 67, 36, 2314, 2313, 2312, 2310, 72, 110, 2309,
	282, 177, 2308, 38, 2307, 2301, 27, 2300, 34, 2299,
	2298, 2296, 13, 165, 2295, 2293, 15, 2292, 2284, 9,
	11, 2283, 2282, 63, 2281, 49, 33, 70, 82, 2280,
	21, 68, 109, 2278, 2276, 197, 202, 171, 2274, 130,
	195, 212, 2273, 180, 2272, 2271, 2270, 2269, 2268, 216,
	2266, 1054, 2264, 2262, 198, 57, 94, 93, 2261, 2260,
	2259, 77, 124, 92, 91, 168, 2258, 160, 2257, 2256,
	89, 2253, 2252, 2251, 2250, 2249, 2248, 2247, 196, 137,
	2246,
}

//line mysql_sql.y:8283
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 426, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 83, 424, 424, 424, 425, 425,
	81, 81, 70, 69, 82, 372, 372, 371, 371, 370,
	370, 369, 369, 369, 368, 368, 368, 367, 367, 366,
	366, 365, 365, 363, 363, 364, 362, 361, 361, 361,
	359, 359, 357, 357, 358, 358, 352, 352, 355, 355,
	353, 353, 353, 353, 356, 351, 351, 351, 350, 350,
	68, 68, 68, 282, 282, 67, 67, 296, 296, 296,
	296, 296, 294, 294, 294, 294, 294, 294, 293, 293,
	292, 292, 297, 297, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 62, 62, 62, 62, 65, 65,
	65, 66, 291, 291, 291, 63, 64, 64, 281, 281,
	286, 286, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 290, 290, 290, 288, 288, 287,
	287, 289, 289, 56, 56, 56, 59, 58, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 57, 57, 57,
	57, 57, 57, 54, 54, 54, 54, 54, 53, 53,
	55, 55, 279, 279, 278, 73, 73, 73, 73, 73,
	73, 73, 72, 72, 75, 75, 74, 76, 61, 61,
	61, 61, 61, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 396, 396, 396, 398, 398, 218, 219, 427,
	221, 217, 217, 217, 392, 392, 393, 394, 395, 395,
	395, 71, 7, 7, 7, 52, 50, 410, 410, 51,
	417, 417, 332, 332, 232, 232, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 335, 336, 228, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 38, 37, 37, 268, 268, 36, 428, 428,
	201, 201, 44, 45, 46, 35, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 49, 49, 346, 346, 430,
	430, 430, 47, 48, 331, 331, 331, 42, 41, 40,
	39, 39, 34, 34, 33, 33, 225, 225, 227, 227,
	223, 429, 429, 308, 308, 226, 226, 32, 32, 32,
	224, 224, 200, 222, 222, 222, 8, 8, 6, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 18, 20,
	276, 276, 273, 19, 14, 13, 16, 12, 15, 17,
	5, 5, 5, 5, 9, 9, 10, 97, 97, 139,
	139, 405, 405, 401, 401, 402, 402, 402, 403, 403,
	404, 404, 77, 340, 340, 340, 340, 340, 340, 4,
	119, 119, 120, 120, 339, 339, 339, 339, 339, 339,
	339, 423, 423, 381, 381, 381, 382, 118, 118, 113,
	113, 341, 341, 246, 383, 383, 349, 349, 348, 348,
	347, 347, 116, 116, 117, 117, 100, 100, 86, 86,
	354, 354, 354, 354, 360, 360, 329, 329, 165, 165,
	194, 194, 195, 195, 90, 90, 91, 91, 91, 91,
	91, 91, 389, 389, 391, 391, 390, 115, 115, 111,
	111, 112, 112, 112, 110, 110, 109, 108, 108, 107,
	105, 105, 105, 106, 106, 106, 93, 93, 92, 92,
	92, 92, 92, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 94, 94, 397, 397, 397,
	333, 333, 333, 338, 338, 177, 177, 178, 178, 176,
	176, 95, 95, 96, 96, 96, 96, 175, 175, 174,
	98, 98, 104, 103, 103, 99, 99, 99, 99, 185,
	185, 184, 184, 184, 184, 80, 84, 84, 85, 123,
	123, 183, 182, 182, 182, 122, 122, 121, 121, 114,
	114, 102, 102, 102, 102, 181, 101, 179, 422, 422,
	421, 421, 420, 418, 418, 418, 419, 419, 419, 419,
	374, 374, 374, 374, 374, 210, 210, 210, 216, 216,
	209, 209, 209, 209, 209, 220, 215, 215, 211, 211,
	212, 212, 212, 3, 3, 3, 3, 24, 24, 24,
	24, 24, 24, 30, 131, 132, 29, 124, 125, 125,
	126, 126, 127, 128, 128, 128, 130, 129, 28, 399,
	399, 21, 406, 409, 407, 407, 411, 411, 411, 412,
	412, 412, 413, 413, 22, 408, 414, 414, 414, 277,
	277, 274, 275, 275, 272, 271, 271, 271, 416, 416,
	415, 415, 415, 213, 213, 23, 267, 267, 269, 270,
	270, 261, 261, 261, 261, 27, 265, 265, 266, 266,
	266, 266, 266, 262, 262, 264, 264, 260, 260, 260,
	260, 260, 26, 259, 259, 257, 257, 255, 255, 256,
	256, 254, 254, 254, 258, 258, 25, 25, 25, 88,
	87, 87, 87, 197, 197, 196, 196, 89, 334, 334,
	298, 298, 299, 299, 299, 302, 302, 314, 314, 315,
	315, 313, 313, 320, 320, 319, 319, 318, 318, 317,
	317, 316, 316, 316, 316, 311, 311, 310, 310, 300,
	300, 300, 300, 300, 301, 301, 301, 309, 309, 312,
	312, 156, 156, 157, 157, 157, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 379, 379, 380, 159, 159,
	159, 163, 163, 163, 163, 163, 163, 158, 158, 160,
	160, 140, 140, 138, 138, 133, 133, 134, 134, 135,
	135, 136, 136, 137, 137, 137, 137, 137, 137, 284,
	284, 377, 377, 378, 378, 373, 373, 373, 376, 376,
	376, 376, 376, 375, 375, 141, 192, 192, 192, 214,
	214, 214, 191, 191, 191, 155, 155, 154, 154, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 283, 283, 229, 229, 230, 230,
	172, 171, 171, 171, 171, 171, 169, 170, 168, 168,
	168, 168, 168, 167, 167, 166, 166, 166, 263, 263,
	164, 164, 162, 162, 162, 161, 161, 161, 321, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 238, 238, 243, 243, 388, 388, 387, 142,
	142, 142, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 151, 151, 151, 306, 306, 306, 306, 306, 307,
	307, 307, 304, 304, 305, 305, 247, 248, 248, 303,
	303, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 345, 345, 345,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 400, 400, 400, 384, 384, 384, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 189, 189,
	189, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 249, 249, 250, 250, 342, 342,
	342, 342, 342, 342, 343, 343, 344, 344, 344, 344,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 236,
	186, 186, 186, 251, 244, 244, 245, 245, 239, 239,
	239, 239, 239, 239, 239, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 240, 240, 242, 242, 253,
	253, 253, 252, 252, 252, 252, 252, 252, 252, 153,
	153, 153, 153, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 144, 144, 144, 144, 148, 148,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 149, 149, 149, 149, 147, 147,
	147, 147, 147, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 78,
	79, 79, 146, 193, 193, 322, 322, 325, 325, 323,
	323, 324, 326, 326, 326, 327, 327, 327, 328, 328,
	328, 330, 330, 199, 199, 199, 206, 206, 198, 198,
	207, 207, 208, 208, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 9, 10, 2, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 2, 1, 2,
	3, 4, 3, 3, 1, 0, 1, 1, 0, 1,
	8, 5, 7, 0, 3, 8, 5, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 4, 1, 3, 1, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 2, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	4, 6, 1, 1, 1, 2, 4, 6, 1, 4,
	1, 3, 3, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 2, 4, 3, 3, 1, 1,
	1, 1, 1, 2, 3, 4, 7, 2, 3, 3,
	4, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 1, 1, 1,
	1, 6, 1, 1, 1, 9, 7, 0, 4, 7,
	0, 3, 0, 2, 0, 1, 1, 1, 1, 4,
	2, 2, 3, 3, 4, 5, 3, 4, 4, 2,
	2, 2, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 2, 5, 0, 2, 7, 0, 1,
	0, 1, 5, 3, 2, 4, 1, 1, 1, 3,
	2, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	6, 7, 4, 4, 7, 8, 0, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 3, 1, 4, 6, 4, 4, 4, 3, 6,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	0, 4, 1, 3, 3, 1, 5, 6, 5, 5,
	3, 0, 5, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 4, 3, 4, 5,
	4, 5, 2, 3, 1, 3, 6, 0, 3, 0,
	1, 2, 4, 4, 0, 1, 3, 1, 3, 3,
	0, 1, 1, 0, 2, 2, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 1, 12, 1, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 9, 0,
	1, 7, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 0, 2, 7, 1, 0, 2, 2, 1,
	3, 2, 1, 3, 2, 1, 3, 2, 0, 1,
	3, 4, 3, 1, 1, 4, 1, 3, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 5, 1, 1, 0, 3, 0, 1, 1,
	2, 4, 4, 4, 0, 1, 11, 9, 11, 2,
	2, 4, 5, 1, 3, 0, 3, 5, 0, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 0, 1, 1, 3, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 4, 1, 3, 3, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 1, 7, 7, 7, 7, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	5, 6, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 6, 6, 1, 1,
	1, 1, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 5, 0, 1, 3, 0, 1, 0,
	6, 6, 5, 5, 6, 6, 6, 6, 5, 6,
	6, 6, 6, 6, 6, 6, 6, 1, 1, 1,
	4, 4, 6, 8, 6, 4, 5, 5, 4, 6,
	6, 7, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	8, 4, 2, 3, 2, 4, 6, 2, 2, 4,
	6, 4, 2, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -426, -2, -1, -3, -81, -4, -77, -5, -6,
	-8, -60, -72, -74, -76, -75, -31, -7, -71, -53,
	-54, -56, -62, -67, -68, -69, -70, -82, -78, -79,
	-80, -90, -83, -24, -23, -22, -21, 395, 12, 437,
	-9, -10, -389, -11, 231, -217, -218, -219, -221, -427,
	-32, -33, -34, -39, -40, -41, -42, -47, -48, -49,
	-35, -36, -37, -38, -44, -45, -46, -51, -50, -52,
	207, -55, 61, -57, -58, -59, -63, -64, -65, -66,
	326, 332, 385, 394, 518, 519, 46, -91, -93, 520,
	-25, -26, -27, -28, -29, -30, 203, 14, 470, -12,
	-15, -13, -16, -14, -19, -20, -18, -17, 226, 225,
	37, 289, 290, 291, 330, 224, 204, 13, 135, 136,
	138, 139, 30, -92, 67, 205, -94, 10, 521, 430,
	-100, 38, -138, -214, 70, -202, -205, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 440, 307, 308, 467, 243, 267, 356,
	270, 277, 135, 154, 148, 176, 168, 143, 247, 282,
	248, 77, 138, 423, 87, 406, 382, 141, 262, 264,
	266, 269, 249, 164, 159, 261, 245, 518, 157, 250,
	39, 251, 181, 252, 253, 472, 402, 306, 408, 274,
	380, 158, 403, 265, 405, 183, 187, 415, 332, 152,
	153, 410, 417, 180, 223, 42, 469, 235, 418, 185,
	179, 175, 426, 278, 276, 178, 151, 174, 246, 50,
	189, 188, 190, 376, 377, 378, 379, 254, 255, 320,
	414, 171, 160, 311, 144, 22, 421, 230, 407, 333,
	256, 271, 279, 184, 186, 237, 242, 471, 384, 241,
	275, 419, 156, 234, 263, 229, 422, 145, 326, 335,
	257, 139, 268, 416, 425, 49, 348, 150, 142, 220,
	136, 239, 244, 11, 258, 259, 260, 281, 280, 272,
	172, 236, 177, 162, 149, 173, 137, 238, 424, 349,
	516, 309, 365, 170, 167, 240, 213, 420, 409, 140,
	369, 350, 165, 283, 513, 514, 515, 321, 305, 284,
	285, 163, 227, 401, 286, 288, 375, 298, 351, 383,
	357, 352, 196, 292, -100, -55, -10, -9, -92, -93,
	-138, 211, -222, 23, 380, -61, 381, 207, 67, -214,
	-5, -4, -77, -53, -90, -220, -214, 289, 289, -220,
	211, -214, 241, 364, -332, 216, -293, -267, 242, -292,
	-269, -295, -270, 31, 203, 205, 204, 238, 14, 330,
	212, 12, 10, 331, 224, 24, 25, 27, 13, 332,
	334, 28, 335, 338, 339, 340, 41, 343, 344, 231,
	70, 73, 249, -132, -214, 249, -245, -239, 94, 232,
	-241, -234, -235, -237, -369, -363, -233, 67, 119, 120,
	127, 95, -236, -321, 35, 97, 477, 438, -187, -188,
	-189, -190, -214, -364, -362, 73, 78, 81, 84, 85,
	83, 82, 161, 80, 74, 131, 132, -93, 70, -384,
	485, -203, 506, 486, 505, 46, -337, -344, 210, -342,
	166, 227, 162, 12, 125, 375, 130, 163, 482, 502,
	440, 509, 479, 480, 474, 475, 476, 478, 487, 489,
	501, -345, 497, 507, 508, 495, 72, 71, 500, 499,
	488, 483, 484, 490, 473, 481, 491, 492, 498, 503,
	504, 314, 87, 315, 316, 430, 310, 317, 216, 380,
	55, 318, 319, 320, 321, 322, 437, 323, 56, 324,
	313, 231, 365, 325, 165, 182, 442, 441, 443, 434,
	431, 429, 432, 433, 435, 436, 493, 494, 496, -289,
	-287, -214, -84, -85, 511, -109, -110, -180, 19, 6,
	7, 8, 9, -424, 382, 471, 292, 327, -334, 307,
	365, 241, -261, -259, 286, 282, 341, 221, 220, 88,
	430, 210, -401, -402, 200, 201, 202, -391, 463, -390,
	-214, 316, 26, 211, 327, 412, 413, -43, -346, -331,
	409, 408, -226, 407, 400, 411, 402, 203, 464, -199,
	351, 383, 237, 427, 428, 328, 384, 415, 416, 403,
	87, 169, 166, -334, 307, 365, -401, 140, 137, -280,
	140, 93, 145, 144, -280, 241, 364, 40, -286, 375,
	-285, -287, 415, 416, 426, 71, 72, 414, -199, 87,
	-110, -180, -109, -91, -93, -389, 307, 365, 241, 212,
	211, 213, 430, 289, 327, -333, -397, 31, -338, 197,
	198, 199, 32, 33, -1, -215, -212, -205, 70, 71,
	72, -116, 233, -138, 133, -116, -110, -109, -110, -138,
	-191, -214, 382, 103, -61, -61, 381, -392, -393, -394,
	-396, 207, 381, 380, 133, 15, -220, -220, 65, -138,
	-269, 241, -293, -267, 35, 64, 134, 214, 134, 64,
	67, 328, 307, 365, 329, 430, 211, 341, 213, 241,
	342, 307, 365, 211, 213, 430, 241, 307, 211, 213,
	365, 241, 342, 400, 401, 213, 26, 333, 336, 337,
	401, -350, 426, -350, 134, 93, 90, 91, 92, -239,
	110, -252, 103, 104, 105, 106, 107, 108, 109, 116,
	115, 126, 119, 120, 121, 122, 123, 124, 125, 117,
	118, 113, 94, 111, 112, 96, -93, -239, -245, -237,
	-237, -237, -237, -321, -243, -239, 67, 67, 133, 73,
	-239, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	-343, 67, 67, -249, -250, 67, 67, 73, 73, 67,
	67, 67, -237, 73, -250, -250, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 134, -144, -148, -145, -147, -146, -150, -149,
	166, 167, 130, 170, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 30, 182, 227, 162, 163, 164,
	165, 183, 148, 168, 468, 191, 149, 192, 150, 193,
	151, 194, 152, 153, 195, 154, 157, 158, 159, 156,
	133, -110, 134, 67, -86, 38, -112, 21, -94, -93,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 78,
	-131, -214, -124, -214, -399, 211, 463, -257, 216, -257,
	-257, 212, -257, 211, 211, -403, 147, 134, -391, -115,
	67, -225, 111, 23, 239, 239, 276, -225, -430, 212,
	410, 42, 240, 239, -111, -112, -111, 404, 401, -308,
	405, 406, -226, -225, -225, -226, 211, 213, 430, -428,
	-429, 15, 113, 239, -428, 30, 30, -399, -332, -332,
	-404, 215, 419, 470, 143, 144, 145, -269, 241, 241,
	134, 103, 23, -288, 103, 114, -287, -287, -287, -288,
	-288, -158, 40, -213, 130, -214, 73, -158, 40, -111,
	-94, -93, 68, 68, -332, -332, -332, -332, -332, -332,
	-332, -220, -124, -95, -96, 121, -239, -214, -95, 38,
	401, -339, -119, -90, 308, 67, 67, -214, -340, 46,
	-90, 67, 30, -111, -86, -112, 133, 78, 73, -61,
	68, 134, -395, 84, 85, -398, 180, 172, -214, -73,
	73, -3, -4, -5, -6, -31, -53, -90, -365, -363,
	67, 31, 374, 64, 15, -294, 211, 430, 327, 237,
	213, 307, -292, -276, -273, -271, -213, -269, -272, -271,
	-297, -191, 401, -87, 386, 288, -87, -239, -239, -239,
	-239, -239, 83, 94, 305, 84, 85, -234, -253, 31,
	284, 285, -235, -235, -235, -235, -235, -235, -235, -235,
	-235, -235, -235, -235, -242, -251, -321, 67, 113, 111,
	112, 96, -237, -235, -235, 68, 134, -388, -387, 98,
	-239, -239, -214, -385, -386, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 318, 313, 319, 317,
	310, 325, 320, 321, 165, 461, 462, 455, 456, 457,
	458, 459, 460, -244, -245, -244, -239, -385, -244, -186,
	32, 31, -186, -239, -400, 303, 302, 304, -113, -214,
	-244, 68, 68, 68, 78, -245, -244, -235, -244, -386,
	-186, -245, -245, -186, -186, -186, -186, 121, -186, -186,
	-186, -186, -186, -186, -186, -186, -287, 40, -328, 349,
	348, -322, -324, 67, -323, 67, -323, -322, -322, 67,
	67, -325, 67, -325, -325, -322, -326, 67, -326, -327,
	67, -326, -214, -111, -85, -348, -347, -239, 40, 512,
	-86, -239, -108, -107, -239, -425, 73, 34, 67, 213,
	-257, -406, -214, 94, -277, -274, -271, -267, -212, -214,
	-257, -257, -404, -390, 34, -114, -214, -176, 16, -237,
	-271, -428, -225, -176, -429, -225, -225, -227, -429, -223,
	-429, 401, -176, -176, -308, -224, -214, -224, -257, -201,
	-200, -214, -201, 213, -406, -277, -103, -98, -102, -99,
	-104, -179, -181, -101, 67, -138, -93, -214, 420, 421,
	141, 144, 143, 31, 374, -291, 374, 31, -267, -285,
	-281, 73, 375, -272, -290, 64, 130, -347, -288, -288,
	-288, -290, -290, 129, -86, -406, -276, -267, -214, -140,
	-138, -140, -215, 67, -175, 134, -174, 15, -209, -214,
	34, 73, 133, -175, 73, -140, -423, 64, 46, 30,
	67, -118, 68, -113, -117, -214, -341, -246, -383, 511,
	-118, 68, -381, -382, -113, -86, -86, -207, -208, -198,
	-204, -211, -212, -205, 208, 31, 93, 34, 36, 314,
	346, 96, 130, 20, 97, 166, 129, 316, 438, 315,
	203, 59, 441, 443, 442, 431, 429, 367, 371, 373,
	370, 430, 400, 40, 14, 37, 225, 32, 33, 123,
	205, 100, 101, 228, 35, 226, 85, 44, 23, 62,
	15, 17, 18, 317, 366, 216, 215, 113, 386, 212,
	57, 12, 132, 38, 110, 368, 53, 89, 45, 55,
	111, 21, 432, 433, 41, 385, 394, 466, 232, 125,
	318, 319, 60, 94, 374, 83, 43, 64, 90, 19,
	58, 112, 206, 437, 56, 372, 322, 324, 334, 463,
	323, 210, 411, 10, 313, 439, 30, 224, 54, 211,
	99, 214, 84, 231, 6, 88, 13, 61, 65, 434,
	435, 436, 46, 98, 16, 325, 470, 387, 388, 389,
	390, 391, 392, 393, 191, 192, 193, 194, 195, 273,
	219, 217, 221, 222, 511, 512, 197, 198, 302, 304,
	169, 200, 201, 202, 233, 147, 7, 353, 354, 355,
	358, 359, 360, 361, 362, 363, 364, 519, 395, 396,
	397, 398, 399, 412, 413, 209, 23, -61, -393, 133,
	134, -114, -294, -275, -272, -296, 121, 70, -282, 134,
	470, 522, 71, 214, -416, -415, 366, 68, 134, -351,
	215, 437, 73, 523, 196, -351, 83, 305, 84, 85,
	-321, -245, -242, -237, -235, -235, -240, 228, 93, -239,
	-238, -387, 100, -239, 34, 134, 65, 133, 68, 68,
	15, 15, 68, -239, -239, 68, 15, 15, -239, 68,
	133, 68, 68, 68, 65, 68, 134, 68, 134, -239,
	68, 68, -239, -239, -239, -245, 68, -239, -239, -239,
	-239, -239, -239, -239, -239, -239, -330, 350, 78, 78,
	-193, 73, -193, 78, 78, 78, 134, 68, 73, 134,
	22, 134, -105, 36, 37, -132, -125, -126, -127, -128,
	-144, -191, 167, 170, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 227, 162, 163, 164, 165, 183,
	148, 168, 149, 150, 151, 152, 153, 154, 157, 158,
	159, 156, -257, -138, -409, 353, 35, -417, 134, 40,
	-415, -260, 65, -255, -256, -254, -258, 40, -138, -138,
	15, -97, -139, -214, 67, 68, 134, -239, -268, 65,
	-201, -176, -138, -214, -176, -176, -225, -215, -227, -222,
	-227, -223, 133, -200, -332, -410, 353, -417, 30, -182,
	-183, -184, -185, 53, 57, 59, 54, 55, 56, 60,
	30, 134, -210, -216, 34, -211, 73, -212, -205, -210,
	-93, -98, -103, -210, 67, 142, 145, 145, 144, 214,
	67, 103, -290, -290, -290, 40, -213, 64, 134, -125,
	-176, -96, -98, -214, 73, -214, 121, -176, -165, 514,
	38, 39, -341, -381, -120, -406, 68, 134, -119, 308,
	68, 134, 134, 67, 68, 46, 134, 103, 133, 382,
	-214, -363, 68, -296, 134, 214, 133, 133, -273, 332,
	-213, -275, 20, 470, -191, 38, -197, -196, 73, 523,
	38, 68, -240, 93, -237, -234, 68, 101, -239, 99,
	-142, -144, 348, 349, -143, -149, 130, 166, 227, 165,
	164, 162, 348, 349, -158, -214, -239, -239, 68, 68,
	-239, -239, 15, -214, -158, -235, -239, 68, -303, 396,
	-303, 68, 68, 68, 68, -303, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 134, 68, 68,
	68, 134, 68, 134, -347, -354, 405, -239, -239, -107,
	-106, 43, 340, 68, 134, -144, -138, 67, -412, 407,
	355, -206, 103, -232, -231, 309, 41, -335, 375, 361,
	362, -274, 241, 64, 297, 298, 299, 300, -254, -199,
	129, 252, 67, 67, -138, -97, -214, 15, 134, -405,
	133, -1, -214, -267, -225, -176, -429, -176, -225, -225,
	-227, -214, -138, -412, -206, -232, -279, -278, -191, -102,
	-102, -102, -102, 53, 53, 53, 58, 53, 58, 53,
	-184, -279, -104, -115, -216, 68, -422, -421, -420, -418,
	61, 215, 62, -244, 145, -275, -228, 73, -281, -138,
	-138, 68, -178, 17, 133, -178, 78, 73, 89, 68,
	134, -119, -113, 46, 67, -214, -246, -349, -348, 46,
	-90, -341, -382, -347, -207, -204, -212, -205, 78, 15,
	-272, -267, 121, 121, 70, 333, -282, 73, 354, 73,
	211, 524, 134, 103, -197, 211, -234, -239, 68, -151,
	153, 152, -151, 68, -322, -323, -322, -325, -322, -151,
	-151, 68, 68, 23, 68, 68, 68, -239, 68, 68,
	134, -303, 67, -303, -303, -303, -303, -303, -303, -303,
	-303, -303, -303, -303, -303, 73, 78, 78, -360, 392,
	387, 389, 44, 45, 73, 209, -127, 40, -115, -133,
	-134, -135, -141, -136, -191, -230, -137, 219, 217, 221,
	-378, 88, 222, 273, 89, 212, -413, 77, -407, 73,
	-214, -414, 77, 356, 132, 311, 40, 357, 358, 372,
	306, 78, 78, 363, -408, 70, -138, -206, -206, -206,
	-133, -133, -116, 65, 133, -98, -139, -214, 121, 68,
	-176, -214, -176, -176, -225, -115, -413, -407, -414, -176,
	134, 103, -122, -121, 64, 65, -123, 64, -121, 53,
	53, -176, -420, -419, 23, -378, -378, -378, 68, 68,
	-177, 18, 20, 121, -177, -165, 13, -90, -406, 46,
	-90, -341, -120, 68, -341, -267, -282, 375, -138, -196,
	73, 524, -138, -239, 68, -239, -248, -247, 233, 68,
	68, -329, 513, -358, 387, 20, 20, -129, -144, -233,
	34, 68, 134, -144, -137, -214, 89, -377, -378, -257,
	-377, 89, 67, 73, -411, 366, 73, 73, 78, 40,
	78, 132, 359, -336, 67, -158, -160, -213, 130, 73,
	68, 68, -210, -98, -214, -176, -405, 133, -176, -176,
	34, -411, -110, -278, -347, -239, 67, -239, 67, 53,
	19, 17, -239, -245, -381, -341, 68, -119, -89, -352,
	-308, 68, 68, -110, 20, -165, 73, 20, 73, -356,
	73, 469, -90, -156, -157, -173, 346, 243, -258, 247,
	77, 248, 382, 249, 212, 251, 252, 253, 223, 254,
	255, 256, 375, 257, 258, 259, 260, 329, 6, 293,
	-135, -155, -154, -152, 83, 94, 40, 346, -153, 77,
	129, 266, 244, 267, -172, -229, 64, 352, 217, 88,
	89, 334, -230, -373, -375, -214, -375, -214, -373, -373,
	-257, -239, 20, 470, 310, 40, 78, 40, 360, -262,
	-264, -191, 67, -88, -87, -156, -176, -176, -90, -111,
	-114, -374, -214, 217, 20, 20, -89, -359, 392, -355,
	-353, 387, 388, 389, 390, -305, -304, -307, 393, 275,
	399, -245, -194, 515, 73, 389, -130, -214, -298, 233,
	134, -173, -206, -206, -199, 129, -206, -206, -206, -206,
	250, 250, -206, -206, -206, -206, -206, -206, -206, -206,
	-206, -206, -206, -206, -206, -206, 67, -152, 83, -235,
	73, -160, -161, 40, 265, 261, -162, 40, 245, 246,
	-164, 67, 273, 13, 89, 89, -138, 67, 65, 283,
	67, 67, 67, -375, 68, 73, 354, 73, 310, 68,
	134, -322, -239, -89, -298, -110, 68, 68, 134, -361,
	215, -357, 391, -353, 20, 389, 20, 20, 68, -306,
	96, 359, 363, -239, 67, 20, 34, -299, 282, 20,
	-173, 78, 78, -206, -206, 78, 73, 73, 73, -206,
	-206, 78, 73, -216, 78, 78, 78, 78, 40, 73,
	-163, 40, 261, 265, 262, 263, 264, 78, 40, 78,
	40, 78, 40, -214, 67, -379, -380, 73, 78, 67,
	-342, -263, 67, -262, -376, 297, 298, 299, 301, 300,
	-376, -262, -262, -262, 67, -284, -283, 274, 94, 375,
	-265, -264, -105, 68, -299, -111, -214, 217, -368, 67,
	78, -358, 20, -356, 20, -356, -356, -306, 511, 397,
	398, 397, 398, -195, -214, -356, 73, 20, -300, 275,
	276, -301, -312, 278, -158, -158, 73, 73, -159, 244,
	-140, 68, 134, 103, 68, -239, -249, -167, -166, 466,
	-262, 68, 68, 68, 68, -262, 274, -266, 223, 77,
	470, 295, 296, -105, -372, 30, 68, -367, -366, -192,
	-362, -214, 392, 393, 73, -356, 93, 68, 134, -191,
	67, -310, 279, 67, -308, 67, -308, 89, 298, 245,
	246, 68, -380, 73, 68, -171, -169, -170, 64, 403,
	271, 272, 68, -265, -265, -265, -265, 68, -206, 73,
	294, -371, -370, -369, 68, 134, 133, -306, -214, -297,
	-302, 280, 78, -235, 67, -235, 67, -309, 277, 67,
	-283, -170, 64, -169, 64, 14, 13, -172, 78, -212,
	134, 103, -366, -214, 68, -314, 67, 20, 68, -297,
	68, -297, 67, 103, -235, -168, 268, 269, 30, 144,
	-168, -370, 40, -239, 133, -315, -313, 233, -301, 68,
	68, 68, -297, 78, 68, 83, 40, 270, -214, 68,
	134, 70, -311, 281, 68, -313, -316, 46, 78, -320,
	-317, 67, -173, 235, 113, -320, -173, -319, -318, 280,
	236, 67, 68, 134, 70, 232, 67, -245, -318, -317,
	-245, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 653, 654, 655, 656, 0, 0, 0,
	420, 421, 0, 398, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 319, 320, 321, 322, 323, 324,
	325, 326, 327, 328, 329, 330, 331, 282, 283, 284,
	0, 228, 224, 203, 204, 205, 164, 165, 166, 167,
	292, 0, 0, 0, 0, 0, 0, 504, -2, 35,
	657, 658, 659, 660, 661, 662, -2, 433, 0, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 271, 272,
	273, 267, 268, 270, 269, -2, 768, 433, 217, 0,
	208, 208, 0, 524, 0, 0, 538, 560, 33, 0,
	482, 0, 487, 863, 899, 900, 901, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 482, 229, 422, 423, 524, 524,
	396, 0, 253, 0, 1522, 257, 0, 0, 0, 393,
	248, 249, 250, 251, 252, 0, 645, 0, 0, 244,
	0, 223, 1581, 0, 0, 0, 0, 0, 0, 108,
	716, 110, 718, 114, 121, 0, 0, 126, 127, 130,
	131, 132, 133, 134, 0, 138, 0, 140, 143, 0,
	145, 146, 0, 149, 150, 151, 0, 161, 162, 163,
	719, 720, -2, 44, 665, 88, 1269, 1166, 0, 1173,
	1174, 1185, 1194, 971, 972, 973, 974, 0, 0, 0,
	0, 0, 981, 982, 0, 994, 1670, 0, 988, 989,
	990, 991, 51, 63, 64, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 0, 1139, 958, 899, 0,
	1678, 0, 1698, 1679, 1697, 0, 0, 1124, 0, 1114,
	0, -2, -2, 0, 0, 1648, 0, -2, 1675, 1694,
	1702, 1701, 1672, 1673, 1667, 1668, 1669, 1671, 1680, 1682,
	1693, 0, 1689, 1699, 1700, 0, 65, 66, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1130, -2, 1132, 1133, 1135, 1136, 1137, 1138, -2,
	1141, 1142, 1143, -2, -2, 1146, 1147, 1148, 1149, 1150,
	1151, 1154, -2, 1156, -2, 1158, 1126, 1127, 1128, 1129,
	1118, 1119, 1120, 1121, 1122, 1123, -2, -2, -2, 0,
	201, 199, 524, 596, 0, -2, 0, 0, 0, 543,
	546, 549, 552, 0, 36, 37, 0, 0, 679, 745,
	745, 745, 0, 745, 0, 0, 769, 722, 723, 724,
	743, 744, 438, 434, 435, 436, 437, 512, 0, 514,
	517, 376, 333, 0, 0, 0, 344, 376, 0, 0,
	519, 519, 0, 385, 376, 376, -2, 0, 346, 347,
	348, 338, 0, 338, 352, 353, 354, 365, 366, 386,
	1293, 0, 0, 679, 292, 292, 440, 218, 219, 207,
	209, 0, 213, 0, 206, 1581, 0, 0, 175, 1648,
	180, 0, 1529, 1595, 1544, 0, 0, 1562, 0, -2,
	519, 0, 525, 0, 524, 0, 292, 292, 292, 292,
	292, 292, 292, 0, 0, 0, 0, 561, 562, 557,
	558, 559, 563, 564, 3, 0, 646, 647, 650, 651,
	652, 450, 0, 486, 0, 0, 519, -2, 0, 397,
	254, 902, 0, 0, 258, 259, 0, 0, 274, 0,
	277, 262, 263, 264, 0, 0, 246, 247, 0, 0,
	225, 0, 0, 0, 293, 0, 0, 0, 0, 0,
	0, 118, 115, 122, 125, 135, 142, 0, 154, 156,
	159, 116, 123, 128, 129, 136, 157, 117, 119, 120,
	124, 158, 160, 137, 141, 155, 139, 144, 147, 148,
	153, 0, 89, 0, 0, 0, 0, 0, 0, 1172,
	0, 0, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1166, 0, 977,
	978, 979, 980, 983, 0, 995, 0, 0, 0, 1223,
	0, 1164, 1164, 0, 1164, 1160, 1160, 0, 0, 1164,
	1102, 0, 0, 1104, 1115, 0, 0, 1107, 1108, 1164,
	0, 1164, 1112, 1113, 1098, 1099, 0, 1160, 0, 0,
	1160, 1160, 1160, 1160, 1160, 1160, 1160, 1160, 1160, 1160,
	1160, 1160, 0, 1270, 1288, 1225, 1226, 1227, 1275, 1229,
	1279, 1279, 1275, 1275, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 0, 0, 1268, 1248, 1277, 1277, 1277,
	1275, 1272, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1282, 1282, 1285, 1282,
	0, 519, 0, 0, 507, 0, 488, 0, 540, 542,
	0, 544, 545, 547, 548, 550, 551, 553, 554, 38,
	0, 664, 0, 667, 0, 745, 680, 0, 0, 0,
	0, 0, 0, 745, 745, 440, 439, 0, 513, 0,
	0, 569, 0, 0, 338, 376, 343, 569, 0, 359,
	360, 361, 376, 376, 367, 520, 368, 369, 378, 0,
	383, 384, 0, 569, 569, 0, 0, 0, 745, 340,
	339, 381, 382, 350, 340, 1294, 1295, 0, 0, 0,
	0, 441, 0, 0, 211, 0, 216, 168, 0, 0,
	0, 0, 0, 0, 197, 198, 0, 0, 0, 0,
	0, 188, 191, 857, 858, 713, 714, 192, 193, 488,
	539, 541, 536, 537, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 577, 571, 573, 640, 51, 577, 0,
	0, 461, 0, 455, 0, 0, 0, 864, 442, 474,
	444, 0, 463, 488, 510, 488, 0, 255, 0, 260,
	0, 0, 276, 278, 279, 280, 265, 266, 394, 242,
	243, 235, 236, 237, 238, 239, 240, 241, 245, 61,
	0, 226, 227, 0, 0, 0, 102, 103, 104, 105,
	106, 107, 109, 93, 410, 412, 705, 717, 0, 708,
	0, 112, 152, 85, 0, 0, 85, 1167, 1168, 1169,
	1170, 1171, 1175, 0, 1177, 1179, 1181, 1183, 0, 1199,
	-2, -2, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 1186, 1197, 1198, 0, 0, 0,
	0, 0, 1195, 1190, 0, 975, 0, 992, 996, 0,
	0, 0, 52, 1159, 1069, 1070, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	1095, 1096, 1097, 0, 1165, 0, 1166, 0, 0, 0,
	1161, 1162, 0, 0, 0, 1063, 1064, 1065, 0, 469,
	0, 1125, 1103, 1116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 1291, 1289,
	1290, 1228, 1276, 0, 1253, 0, 1254, 1255, 1256, 0,
	0, 1249, 0, 1250, 1251, 1252, 1244, 0, 1245, 1246,
	0, 1247, 200, 595, 597, 0, 478, 480, 481, 0,
	508, 521, 526, 527, 530, 34, 39, 0, 668, 745,
	0, 0, 682, 0, 290, 699, 0, 715, 737, -2,
	0, 0, 0, 515, 0, 0, 609, 332, 0, 377,
	335, 340, 569, 345, 0, 569, 569, 376, 0, 378,
	0, 378, 372, 373, 0, 387, 390, 388, 0, 349,
	341, 392, 351, 292, 287, 290, 582, 0, 583, 584,
	580, 611, 635, 635, 0, 635, 615, 863, 220, 221,
	0, 0, 215, 169, 170, 0, 172, 173, 174, 181,
	176, 178, 0, 0, 182, 194, 195, 196, 0, 0,
	0, 186, 187, 0, 506, 408, 409, 413, 0, 415,
	861, 416, 417, 668, 569, 0, 578, 0, 574, 641,
	0, 643, 0, 569, 498, 0, 449, 0, 474, 463,
	0, 0, 450, 467, 0, 484, 443, 471, 0, 475,
	0, 0, 448, 464, 0, 509, 511, 903, 0, 1300,
	-2, 1302, -2, -2, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 0, 261, 275, 0,
	0, 0, 0, 96, 702, 0, 97, 101, 91, 0,
	0, 0, 707, 0, 704, 709, 0, 111, 0, 0,
	86, 87, 760, 765, 0, 0, 1176, 1178, 1180, 1182,
	1184, 0, 1187, 1195, 1191, 0, 1188, 0, 0, 1167,
	0, 997, 0, 0, 0, 0, 0, 0, 1050, 1051,
	0, 0, 1055, 0, 0, 1058, 0, 0, 0, 1062,
	0, 1101, 1117, 1105, 0, 1109, 0, 1111, 0, 0,
	1029, 1029, 0, 0, 0, 0, 1029, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 1224, 1292, 0, 0,
	0, 1273, 0, 0, 0, 0, 0, 598, 490, 0,
	0, 0, 533, 531, 532, 0, 0, 669, 670, 672,
	673, 0, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1514, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 0, 689, 1296, 746, 294, 0, 0,
	701, 0, 0, 742, -2, 749, 0, 755, 0, 0,
	0, 0, 427, 431, 33, 518, 0, 570, 334, 0,
	376, 342, 569, 863, 362, 363, 569, 379, 376, 380,
	376, 378, 0, 389, 0, 689, 1296, 294, 0, 0,
	0, 0, 0, 602, 0, 0, 601, 0, 0, 0,
	0, 0, 517, 636, 0, 638, 639, 648, 649, 613,
	-2, 0, 582, 618, 1164, 222, 210, 212, 0, 0,
	0, 0, 183, 184, 185, 189, 190, 0, 0, 0,
	567, 572, 579, 642, 644, 52, 575, 567, 40, 0,
	0, 0, 454, 460, 0, 452, 450, 0, 0, 0,
	483, 0, 474, 476, 0, 474, 0, 0, 0, 0,
	395, 62, 281, 0, 0, 0, 0, 0, 411, 0,
	706, 93, 0, 0, 113, 0, 0, 763, 0, 765,
	0, 1163, 1189, 0, 1196, 1192, 976, 984, 993, 0,
	0, 999, 1011, 1011, 0, 1002, 1275, 1279, 1005, 1275,
	1277, 1275, 1011, 1011, 0, 53, 0, 0, 1056, 1057,
	0, 0, 0, 470, 0, 0, 0, 1029, 1032, 0,
	1033, 1029, 1029, 1029, 1029, 1038, 1029, 1029, 1029, 1029,
	1029, 1029, 1029, 1029, 1281, 1280, 1266, 0, 1267, 1278,
	1283, 0, 1286, 0, 479, 494, 0, 522, 523, 528,
	529, 0, 0, 0, 0, 674, 517, 865, 692, 690,
	691, 0, 1297, 696, 295, 296, 297, 298, 0, 0,
	0, 700, 0, 0, 738, 739, 740, 741, 750, 1296,
	1296, 1296, 865, 865, 482, 0, -2, 0, 0, 429,
	0, 0, 610, 336, 569, 355, 0, 370, 569, 569,
	376, 391, 517, 692, 0, 696, 569, 232, 0, 605,
	599, 0, 588, 603, 604, 591, 0, 593, 0, 589,
	590, 569, 581, 612, 637, 614, 617, 619, 620, 626,
	0, 0, 0, 0, 214, 171, 0, 314, 177, 414,
	862, 419, 565, 0, 0, 565, 499, 498, 0, 451,
	0, 0, 468, 474, 0, 485, 472, 0, 477, 474,
	447, 446, 465, 466, 904, 1301, 1298, 1299, 256, 0,
	703, 93, 98, 99, 100, 94, 92, 710, 0, 712,
	0, 761, 765, 0, 0, 0, 1193, 998, 985, 1000,
	1012, 1013, 1001, 986, 1003, 1004, 1006, 1007, 1008, 1009,
	1010, 987, 1052, 0, 1054, 1059, 1060, 0, 1106, 1110,
	0, 1031, 1027, 1034, 1035, 1036, 1037, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1274, 0, 0, 496, 74,
	0, 0, 534, 535, 663, 0, 671, 0, 0, 0,
	866, 867, 869, 870, 0, 0, 872, 928, 0, 881,
	745, 881, 0, 0, 883, 884, 681, 0, 0, 684,
	685, 694, 0, 0, 0, 300, 301, 0, 0, 0,
	313, 309, 310, 311, 291, 695, 0, 0, 0, 0,
	0, 0, 635, 0, 0, 569, 428, 431, 432, 516,
	337, 569, 374, 371, 569, 0, 286, 0, 289, 524,
	0, 0, 585, 606, 0, 0, 586, 0, 587, 592,
	594, 231, 621, 0, 0, 623, 624, 625, 616, 179,
	555, 0, 0, 576, 556, 41, 463, 456, 453, 474,
	459, 458, 0, 473, 445, 95, 90, 711, 450, 764,
	766, 762, 76, 0, 1061, 0, 524, 1028, 0, 1284,
	1287, 498, 0, 495, 0, 0, 0, 0, 677, 675,
	0, -2, 0, -2, 871, 929, 893, 893, 882, 893,
	893, 745, 0, 693, 683, 0, 697, 698, 0, 302,
	303, 0, 306, 312, 0, 751, 752, 859, 860, 753,
	0, -2, 569, 569, -2, 425, 430, 0, 356, 375,
	0, 288, 519, 233, 234, 607, 0, 600, 630, 627,
	0, 0, 566, 568, 462, 457, 451, 76, 42, 70,
	0, 1053, 1100, 1024, 0, 500, 497, 0, 491, 493,
	84, 0, 678, 770, -2, 813, 1296, 1296, 0, 1296,
	1296, 1296, 1296, 0, 0, 1296, 1296, 1296, 1296, 1296,
	1296, 1296, 1296, 1296, 1296, 1296, 1296, 1296, 1296, 0,
	868, 895, -2, 907, 909, 0, 0, 912, 913, 0,
	0, 0, 0, 950, 919, 0, 0, 923, 0, 1211,
	1212, 0, 927, 0, 885, 894, 0, 894, 0, 0,
	893, 0, 0, 0, 299, 304, 0, 307, 308, 0,
	733, 1275, 0, 757, 76, 770, 524, 426, 285, 230,
	0, 0, 631, 633, 628, 629, 43, 67, 72, 77,
	78, 0, 0, 0, 0, 0, 1025, 0, 1019, 1020,
	1021, 1026, 489, 0, 75, 0, 0, 676, 772, 0,
	754, 815, 0, 0, 1296, 1296, 0, 0, 0, 0,
	1296, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 908, 910, 911,
	914, 915, 916, 955, 956, 957, 917, 952, 953, 954,
	918, 0, 0, 0, 1209, 1210, 948, 0, 0, 0,
	0, 0, 0, 0, 879, 686, 0, 688, 305, 726,
	0, 530, 0, 759, 772, 519, 608, 622, 0, 54,
	0, 74, 0, 79, 0, 0, 0, 0, 1030, 1022,
	0, 0, 0, 0, 0, 0, 0, 756, 0, 809,
	814, 816, 817, 0, 0, 820, 821, 822, 823, 0,
	0, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 851, 852, 853, 854, 855, 856, 836, 837, 838,
	839, 840, 841, 848, 0, 0, 845, 0, 0, 0,
	1114, 943, 0, 0, 886, 888, 889, 890, 891, 892,
	887, 0, 0, 0, 0, 878, 880, 924, 0, 687,
	725, 734, 735, 530, 758, 424, 632, 634, 45, 0,
	0, 71, 0, 80, 0, 82, 83, 0, 1014, 1015,
	1017, 1016, 1018, 0, 502, 492, 666, 0, 797, 0,
	0, 803, 0, 810, 818, 819, 824, 825, 842, 0,
	0, 844, 0, 0, 951, 0, 922, 931, 944, 0,
	0, 726, 726, 726, 726, 0, 925, 727, 1296, 0,
	0, 731, 732, 736, 767, 0, 55, 0, 57, 59,
	60, 896, 68, 69, 73, 81, 0, 501, 0, 773,
	0, 775, 0, 0, 0, 0, 0, 807, 0, 849,
	850, 843, 846, 847, 920, 930, 932, 933, 0, 945,
	946, 947, 949, 873, 874, 875, 876, 0, 0, 729,
	0, 46, 47, 0, 56, 0, 0, 1023, 503, 0,
	777, 0, 798, 0, 0, 0, 0, 0, 0, 0,
	921, 934, 0, 935, 0, 0, 0, 877, 728, 730,
	0, 0, 58, 897, 774, 771, 0, 809, 799, 0,
	801, 0, 0, 0, 0, 936, 938, 939, 0, 0,
	937, 48, 49, 50, 0, 0, 779, 0, 795, 800,
	802, 804, 0, 808, 806, 940, 942, 941, 898, 778,
	0, 791, 776, 0, 805, 780, -2, 0, 796, 781,
	-2, 0, 789, 0, 0, 782, 790, 0, 785, 0,
	0, 0, 784, 0, -2, 792, 0, 0, 786, -2,
	0, 794, 793,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 521,
	104, 103, 105, 3, 522, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 523, 115, 524, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:618
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:624
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:659
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:664
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:670
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:690
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:696
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:703
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:711
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:717
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:726
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:734
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:747
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:759
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:772
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:783
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:789
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:793
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:799
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:806
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:815
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:819
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:823
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:836
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:842
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:851
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:862
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:866
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:872
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:876
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:882
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:886
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:892
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:916
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:935
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:939
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:943
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:948
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:952
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:960
		{
			yyVAL.str = ""
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:964
		{
			yyVAL.str = yyDollar[3].str
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:969
		{
			yyVAL.str = "\n"
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:973
		{
			yyVAL.str = yyDollar[3].str
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:982
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1006
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1010
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1016
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1022
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1040
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1057
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1080
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1084
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1088
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1093
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1097
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1103
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1116
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1127
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1140
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1144
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1167
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1180
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1186
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1192
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1199
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1207
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1216
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1220
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1224
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1228
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1232
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1236
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1243
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1247
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1253
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1260
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1269
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1273
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1279
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1283
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1291
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1307
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1311
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1315
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1319
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1323
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1327
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1331
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1335
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1339
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1343
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1347
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1351
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1355
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1359
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1363
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1367
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1371
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1375
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1379
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1383
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1387
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1391
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1395
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1399
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1403
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1407
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1411
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1415
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1419
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1423
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1427
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1431
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1435
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1443
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1447
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1451
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1455
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1459
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1463
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1467
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1471
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1475
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1487
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1494
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1501
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1510
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1548
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1554
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1560
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1571
		{
			yyVAL.str = yyDollar[3].str
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1577
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1581
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1587
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1595
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1604
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1612
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1620
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1643
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1666
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1673
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1680
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1688
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1695
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1702
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1719
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1725
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1729
		{
			yyVAL.str = yyDollar[1].str
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1736
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1742
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1746
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1757
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1763
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1806
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1810
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1814
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1818
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1823
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1834
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1841
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1847
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1854
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1861
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1871
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1878
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1889
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1900
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1904
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1922
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1928
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1938
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1942
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1948
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1964
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1970
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1978
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1982
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1986
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1990
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1998
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2006
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2016
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2057
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2061
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2067
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2073
		{
			yyVAL.str = yyDollar[1].str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2078
		{
			yyVAL.str = "true"
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2079
		{
			yyVAL.str = "false"
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2080
		{
			yyVAL.str = yyDollar[1].str
		}
	case 281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2085
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2097
		{
			yyLOCAL = &tree.AlterView{
				Name:      yyDollar[6].tableNameUnion(),
				ColNames:  yyDollar[7].identifierListUnion(),
				AsSource:  yyDollar[9].selectUnion(),
				Temporary: yyDollar[2].boolValUnion(),
				IfExists:  yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2109
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2120
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2126
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2137
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2157
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2170
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2186
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2190
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2194
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2198
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2202
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2206
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2210
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2214
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2218
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2222
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2226
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2234
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2238
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2242
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2246
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2252
		{
			yyVAL.item = nil
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2257
		{
			yyVAL.item = nil
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2303
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2314
		{
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2318
		{
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2323
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2332
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2357
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2361
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2365
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2369
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2373
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2377
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2381
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2385
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2391
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2398
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2408
		{
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2410
		{
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2419
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2429
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2438
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2442
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2446
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2452
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2470
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2502
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2514
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2531
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2536
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2540
		{
			yyVAL.str = yyDollar[2].str
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2546
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2559
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2563
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2569
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2574
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2578
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2584
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2588
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2597
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2601
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2605
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2611
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2615
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2635
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2644
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2653
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2657
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2663
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2672
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2681
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2691
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2697
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2703
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2709
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2715
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2726
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2731
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2738
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2754
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2767
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2778
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2782
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2788
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2793
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2800
		{
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2802
		{
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2805
		{
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2814
		{
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2818
		{
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2823
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2832
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2839
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2845
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2853
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2860
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2867
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2887
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2896
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2900
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2906
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2910
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2916
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2924
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2930
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2937
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2946
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2962
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2982
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2986
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3009
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3013
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3019
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3028
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3032
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3038
		{
			yyVAL.str = yyDollar[1].str
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3042
		{
			yyVAL.str = yyDollar[3].str
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3048
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3052
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3058
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3063
		{
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3074
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3078
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3085
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3094
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3100
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3104
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3110
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3114
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3143
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3150
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3168
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3193
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3200
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3204
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3217
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3221
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3226
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3230
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3237
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3242
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3255
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3259
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3263
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3267
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3271
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3288
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3297
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3301
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3319
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3328
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3334
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3338
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3342
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3351
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3357
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3363
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3367
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3373
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3378
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3382
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3386
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3391
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3395
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3399
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3405
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3409
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3415
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3419
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3429
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3477
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3486
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3494
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3502
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3510
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3518
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3526
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3534
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3542
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3550
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3560
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3571
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3589
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3593
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3597
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3610
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3619
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3628
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3634
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3638
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3644
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3648
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3652
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3656
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3661
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3669
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3675
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3683
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3701
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3707
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3716
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3725
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3734
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3744
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3748
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3758
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3762
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3766
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3770
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3776
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3786
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3790
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3796
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3806
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3812
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3818
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3822
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3826
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3836
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3842
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3846
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3852
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3856
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3862
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3866
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3876
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3889
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3895
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3901
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3914
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3932
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3936
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3942
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3952
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3956
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3960
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3965
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3969
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3973
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3977
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3982
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3986
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3990
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3994
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3998
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4003
		{
			yyVAL.str = ""
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4007
		{
			yyVAL.str = yyDollar[1].str
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4011
		{
			yyVAL.str = yyDollar[2].str
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4020
		{
			yyVAL.str = ""
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4024
		{
			yyVAL.str = yyDollar[1].str
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4028
		{
			yyVAL.str = yyDollar[2].str
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4032
		{
			yyVAL.str = yyDollar[1].str
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4036
		{
			yyVAL.str = yyDollar[2].str
		}
	case 663:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4072
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4082
		{
			yyVAL.str = yyDollar[1].str
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4088
		{
			yyVAL.str = yyDollar[1].str
		}
	case 666:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4095
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4107
		{
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str))
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4112
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4119
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4123
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4129
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4135
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4139
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4143
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4149
		{
			yyVAL.str = yyDollar[1].str
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4155
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4161
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[6].tableNameUnion(),
				ColNames:    yyDollar[7].identifierListUnion(),
				AsSource:    yyDollar[9].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4172
		{
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4177
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4189
		{
			yyVAL.str = yyDollar[1].str
		}
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4195
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4205
		{
			yyVAL.str = yyDollar[1].str
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4209
		{
			yyVAL.str = yyDollar[1].str
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4215
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4222
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4228
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4236
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4242
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4249
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4257
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4263
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4272
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4284
		{
			yyVAL.str = yyDollar[1].str
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4289
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4295
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4303
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4409
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4413
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4419
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4429
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4433
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4439
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4449
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4453
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4457
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4462
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4466
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4472
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4479
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4485
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4498
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4507
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4511
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4517
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4534
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4538
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4542
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4546
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4552
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4575
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4597
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4605
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4609
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4613
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4619
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4623
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4629
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4634
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4639
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4643
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4647
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4651
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4655
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4661
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4675
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4679
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4688
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4694
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4698
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4708
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4712
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4717
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4721
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4727
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4739
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4748
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4761
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4768
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4776
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4782
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4791
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4795
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4800
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4804
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4811
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4822
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4826
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4835
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4849
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4856
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4867
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4880
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4886
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4890
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4896
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4905
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4919
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4925
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4929
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4935
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4942
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4951
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4955
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4964
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4969
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4973
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4978
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4982
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4992
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4996
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5007
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5015
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5023
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5031
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5042
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5051
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5061
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5071
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5075
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5080
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5084
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5089
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5093
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5099
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5103
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5107
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5113
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5117
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5121
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5125
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5129
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5137
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5141
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5145
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5149
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5153
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5157
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5161
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5165
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5169
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5173
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5177
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5181
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5185
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5189
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5193
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5197
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5201
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5205
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5209
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5213
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5217
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5221
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5225
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5232
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5236
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5242
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5247
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5251
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5255
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5261
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5265
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5269
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5273
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5277
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5281
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5295
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5299
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5308
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5313
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5319
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5326
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5330
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5336
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5340
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5346
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5356
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5362
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5371
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5380
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5403
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5412
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5422
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5430
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5436
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5440
		{
			yyVAL.str = yyDollar[1].str
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5450
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5456
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5462
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5476
		{
			yyVAL.str = ""
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5483
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5489
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5493
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5497
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5508
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5512
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5516
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5521
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5525
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5531
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5535
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5541
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5545
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5549
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5553
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5557
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5561
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5565
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5569
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5573
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5577
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5581
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5585
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5589
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5593
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5606
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5612
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5616
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5621
		{
			yyVAL.str = ""
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5625
		{
			yyVAL.str = yyDollar[1].str
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5631
		{
			yyVAL.str = ""
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5635
		{
			yyVAL.str = yyDollar[2].str
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5641
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5653
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5660
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5667
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5674
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5681
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5690
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5696
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5702
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5706
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5710
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5714
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5718
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5723
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5730
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5734
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5738
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5747
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5752
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5756
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5772
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5778
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5782
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5786
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5790
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5794
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5798
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5802
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5806
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5810
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5814
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5818
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5822
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5826
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5832
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5836
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5840
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5844
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5848
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5852
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5856
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5860
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5864
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5868
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5872
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5876
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5881
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5889
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5893
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5897
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5906
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5910
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5914
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5918
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5927
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5932
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5936
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5942
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5946
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5952
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5962
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5979
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5996
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6009
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6022
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6034
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6048
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6063
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6078
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6095
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6110
		{
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6116
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6120
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6124
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6130
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6134
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6142
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6146
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6150
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6156
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6163
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6172
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6176
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6183
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6192
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6201
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6211
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6221
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6230
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6239
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6249
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6259
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6269
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6279
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6289
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6299
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6309
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6319
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6329
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6339
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6349
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6359
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6376
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6384
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6392
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6400
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6408
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6417
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6425
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6434
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6443
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6451
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6459
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6468
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6477
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6499
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6535
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6547
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6559
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6569
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6577
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6584
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6591
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6603
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6611
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6622
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6631
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6640
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6648
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6658
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6666
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6674
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6688
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6698
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6717
		{
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6719
		{
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6760
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6784
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6793
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6799
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6803
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6810
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6814
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6818
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6826
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6830
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6834
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6838
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6844
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6848
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6852
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6856
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6860
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6864
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6868
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6872
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6876
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6880
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6888
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6892
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6896
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6900
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6904
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6908
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6912
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6916
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6926
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6932
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6936
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6947
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6951
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6957
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6961
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6965
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6969
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6973
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6977
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6981
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6987
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6991
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6995
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6999
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7005
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7009
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7022
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7027
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7031
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7035
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7039
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7043
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7047
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7061
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7065
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7072
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7083
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7088
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7094
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7106
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7118
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7130
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7143
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7156
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7169
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7182
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7195
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7208
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7221
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7234
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7247
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7260
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7275
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7298
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7332
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7380
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7397
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7409
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7429
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7449
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7469
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7485
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7498
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7511
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7524
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7537
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7549
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7561
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7573
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7585
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7597
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7609
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7621
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7633
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7645
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7658
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7671
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7686
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7694
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7703
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7713
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7736
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7741
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7747
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7754
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7758
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7763
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7767
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7773
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7779
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7786
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7793
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7802
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7809
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7816
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7825
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7829
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7833
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7839
		{
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7841
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7851
		{
			yyVAL.str = ""
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7855
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

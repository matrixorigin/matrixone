// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const RETURNS = 57534
const SCHEMA = 57535
const TABLE = 57536
const INDEX = 57537
const VIEW = 57538
const TO = 57539
const IGNORE = 57540
const IF = 57541
const PRIMARY = 57542
const COLUMN = 57543
const CONSTRAINT = 57544
const SPATIAL = 57545
const FULLTEXT = 57546
const FOREIGN = 57547
const KEY_BLOCK_SIZE = 57548
const SHOW = 57549
const DESCRIBE = 57550
const EXPLAIN = 57551
const DATE = 57552
const ESCAPE = 57553
const REPAIR = 57554
const OPTIMIZE = 57555
const TRUNCATE = 57556
const MAXVALUE = 57557
const PARTITION = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const STATUS = 57564
const VARIABLES = 57565
const ROLE = 57566
const PROXY = 57567
const AVG_ROW_LENGTH = 57568
const STORAGE = 57569
const DISK = 57570
const MEMORY = 57571
const CHECKSUM = 57572
const COMPRESSION = 57573
const DATA = 57574
const DIRECTORY = 57575
const DELAY_KEY_WRITE = 57576
const ENCRYPTION = 57577
const ENGINE = 57578
const MAX_ROWS = 57579
const MIN_ROWS = 57580
const PACK_KEYS = 57581
const ROW_FORMAT = 57582
const STATS_AUTO_RECALC = 57583
const STATS_PERSISTENT = 57584
const STATS_SAMPLE_PAGES = 57585
const DYNAMIC = 57586
const COMPRESSED = 57587
const REDUNDANT = 57588
const COMPACT = 57589
const FIXED = 57590
const COLUMN_FORMAT = 57591
const AUTO_RANDOM = 57592
const RESTRICT = 57593
const CASCADE = 57594
const ACTION = 57595
const PARTIAL = 57596
const SIMPLE = 57597
const CHECK = 57598
const ENFORCED = 57599
const RANGE = 57600
const LIST = 57601
const ALGORITHM = 57602
const LINEAR = 57603
const PARTITIONS = 57604
const SUBPARTITION = 57605
const SUBPARTITIONS = 57606
const CLUSTER = 57607
const TYPE = 57608
const ANY = 57609
const SOME = 57610
const EXTERNAL = 57611
const LOCALFILE = 57612
const URL = 57613
const PREPARE = 57614
const DEALLOCATE = 57615
const RESET = 57616
const EXTENSION = 57617
const PROPERTIES = 57618
const PARSER = 57619
const VISIBLE = 57620
const INVISIBLE = 57621
const BTREE = 57622
const HASH = 57623
const RTREE = 57624
const BSI = 57625
const ZONEMAP = 57626
const LEADING = 57627
const BOTH = 57628
const TRAILING = 57629
const UNKNOWN = 57630
const EXPIRE = 57631
const ACCOUNT = 57632
const ACCOUNTS = 57633
const UNLOCK = 57634
const DAY = 57635
const NEVER = 57636
const PUMP = 57637
const SECOND = 57638
const ASCII = 57639
const COALESCE = 57640
const COLLATION = 57641
const HOUR = 57642
const MICROSECOND = 57643
const MINUTE = 57644
const MONTH = 57645
const QUARTER = 57646
const REPEAT = 57647
const REVERSE = 57648
const ROW_COUNT = 57649
const WEEK = 57650
const REVOKE = 57651
const FUNCTION = 57652
const PRIVILEGES = 57653
const TABLESPACE = 57654
const EXECUTE = 57655
const SUPER = 57656
const GRANT = 57657
const OPTION = 57658
const REFERENCES = 57659
const REPLICATION = 57660
const SLAVE = 57661
const CLIENT = 57662
const USAGE = 57663
const RELOAD = 57664
const FILE = 57665
const TEMPORARY = 57666
const ROUTINE = 57667
const EVENT = 57668
const SHUTDOWN = 57669
const NULLX = 57670
const AUTO_INCREMENT = 57671
const APPROXNUM = 57672
const SIGNED = 57673
const UNSIGNED = 57674
const ZEROFILL = 57675
const ENGINES = 57676
const LOW_CARDINALITY = 57677
const ADMIN_NAME = 57678
const RANDOM = 57679
const SUSPEND = 57680
const ATTRIBUTE = 57681
const HISTORY = 57682
const REUSE = 57683
const CURRENT = 57684
const OPTIONAL = 57685
const FAILED_LOGIN_ATTEMPTS = 57686
const PASSWORD_LOCK_TIME = 57687
const UNBOUNDED = 57688
const SECONDARY = 57689
const USER = 57690
const IDENTIFIED = 57691
const CIPHER = 57692
const ISSUER = 57693
const X509 = 57694
const SUBJECT = 57695
const SAN = 57696
const REQUIRE = 57697
const SSL = 57698
const NONE = 57699
const PASSWORD = 57700
const MAX_QUERIES_PER_HOUR = 57701
const MAX_UPDATES_PER_HOUR = 57702
const MAX_CONNECTIONS_PER_HOUR = 57703
const MAX_USER_CONNECTIONS = 57704
const FORMAT = 57705
const VERBOSE = 57706
const CONNECTION = 57707
const TRIGGERS = 57708
const PROFILES = 57709
const LOAD = 57710
const INFILE = 57711
const TERMINATED = 57712
const OPTIONALLY = 57713
const ENCLOSED = 57714
const ESCAPED = 57715
const STARTING = 57716
const LINES = 57717
const ROWS = 57718
const IMPORT = 57719
const MODUMP = 57720
const OVER = 57721
const PRECEDING = 57722
const FOLLOWING = 57723
const GROUPS = 57724
const DATABASES = 57725
const TABLES = 57726
const EXTENDED = 57727
const FULL = 57728
const PROCESSLIST = 57729
const FIELDS = 57730
const COLUMNS = 57731
const OPEN = 57732
const ERRORS = 57733
const WARNINGS = 57734
const INDEXES = 57735
const SCHEMAS = 57736
const NODE = 57737
const LOCKS = 57738
const TABLE_NUMBER = 57739
const TABLE_SIZE = 57740
const COLUMN_NUMBER = 57741
const TABLE_VALUES = 57742
const NAMES = 57743
const GLOBAL = 57744
const SESSION = 57745
const ISOLATION = 57746
const LEVEL = 57747
const READ = 57748
const WRITE = 57749
const ONLY = 57750
const REPEATABLE = 57751
const COMMITTED = 57752
const UNCOMMITTED = 57753
const SERIALIZABLE = 57754
const LOCAL = 57755
const EVENTS = 57756
const PLUGINS = 57757
const CURRENT_TIMESTAMP = 57758
const DATABASE = 57759
const CURRENT_TIME = 57760
const LOCALTIME = 57761
const LOCALTIMESTAMP = 57762
const UTC_DATE = 57763
const UTC_TIME = 57764
const UTC_TIMESTAMP = 57765
const REPLACE = 57766
const CONVERT = 57767
const SEPARATOR = 57768
const TIMESTAMPDIFF = 57769
const CURRENT_DATE = 57770
const CURRENT_USER = 57771
const CURRENT_ROLE = 57772
const SECOND_MICROSECOND = 57773
const MINUTE_MICROSECOND = 57774
const MINUTE_SECOND = 57775
const HOUR_MICROSECOND = 57776
const HOUR_SECOND = 57777
const HOUR_MINUTE = 57778
const DAY_MICROSECOND = 57779
const DAY_SECOND = 57780
const DAY_MINUTE = 57781
const DAY_HOUR = 57782
const YEAR_MONTH = 57783
const SQL_TSI_HOUR = 57784
const SQL_TSI_DAY = 57785
const SQL_TSI_WEEK = 57786
const SQL_TSI_MONTH = 57787
const SQL_TSI_QUARTER = 57788
const SQL_TSI_YEAR = 57789
const SQL_TSI_SECOND = 57790
const SQL_TSI_MINUTE = 57791
const RECURSIVE = 57792
const CONFIG = 57793
const DRAINER = 57794
const MATCH = 57795
const AGAINST = 57796
const BOOLEAN = 57797
const LANGUAGE = 57798
const WITH = 57799
const QUERY = 57800
const EXPANSION = 57801
const ADDDATE = 57802
const BIT_AND = 57803
const BIT_OR = 57804
const BIT_XOR = 57805
const CAST = 57806
const COUNT = 57807
const APPROX_COUNT_DISTINCT = 57808
const APPROX_PERCENTILE = 57809
const CURDATE = 57810
const CURTIME = 57811
const DATE_ADD = 57812
const DATE_SUB = 57813
const EXTRACT = 57814
const GROUP_CONCAT = 57815
const MAX = 57816
const MID = 57817
const MIN = 57818
const NOW = 57819
const POSITION = 57820
const SESSION_USER = 57821
const STD = 57822
const STDDEV = 57823
const MEDIAN = 57824
const STDDEV_POP = 57825
const STDDEV_SAMP = 57826
const SUBDATE = 57827
const SUBSTR = 57828
const SUBSTRING = 57829
const SUM = 57830
const SYSDATE = 57831
const SYSTEM_USER = 57832
const TRANSLATE = 57833
const TRIM = 57834
const VARIANCE = 57835
const VAR_POP = 57836
const VAR_SAMP = 57837
const AVG = 57838
const ARROW = 57839
const ROW = 57840
const OUTFILE = 57841
const HEADER = 57842
const MAX_FILE_SIZE = 57843
const FORCE_QUOTE = 57844
const UNUSED = 57845
const BINDINGS = 57846
const DO = 57847
const DECLARE = 57848
const KILL = 57849

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"TABLE_SIZE",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8314

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 91,
	21, 530,
	-2, 511,
	-1, 99,
	212, 728,
	-2, 775,
	-1, 118,
	42, 363,
	212, 363,
	239, 370,
	240, 370,
	410, 363,
	-2, 391,
	-1, 425,
	288, 88,
	386, 88,
	-2, 1515,
	-1, 484,
	67, 1141,
	-2, 1655,
	-1, 485,
	67, 1159,
	-2, 1626,
	-1, 490,
	67, 1160,
	-2, 1654,
	-1, 511,
	67, 1073,
	-2, 1703,
	-1, 512,
	67, 1074,
	-2, 1702,
	-1, 513,
	67, 1075,
	-2, 1692,
	-1, 514,
	67, 1667,
	-2, 1687,
	-1, 515,
	67, 1668,
	-2, 1688,
	-1, 516,
	67, 1669,
	-2, 1694,
	-1, 517,
	67, 1670,
	-2, 1677,
	-1, 518,
	67, 1671,
	-2, 1685,
	-1, 519,
	67, 1672,
	-2, 1695,
	-1, 520,
	67, 1673,
	-2, 1696,
	-1, 521,
	67, 1674,
	-2, 1701,
	-1, 522,
	67, 1675,
	-2, 1706,
	-1, 523,
	67, 1676,
	-2, 1707,
	-1, 525,
	67, 1138,
	-2, 1507,
	-1, 532,
	67, 1147,
	-2, 1533,
	-1, 536,
	67, 1151,
	-2, 1572,
	-1, 537,
	67, 1152,
	-2, 1650,
	-1, 545,
	67, 1162,
	-2, 1635,
	-1, 547,
	67, 1164,
	-2, 1645,
	-1, 559,
	67, 1054,
	-2, 1697,
	-1, 560,
	67, 1055,
	-2, 1698,
	-1, 561,
	67, 1056,
	-2, 1699,
	-1, 568,
	21, 531,
	-2, 494,
	-1, 623,
	405, 391,
	406, 391,
	-2, 364,
	-1, 665,
	103, 1507,
	114, 1507,
	133, 1507,
	-2, 1300,
	-1, 703,
	21, 531,
	-2, 494,
	-1, 802,
	21, 530,
	-2, 965,
	-1, 1120,
	67, 1207,
	-2, 1652,
	-1, 1121,
	67, 1208,
	-2, 1653,
	-1, 1279,
	1, 754,
	68, 754,
	525, 754,
	-2, 761,
	-1, 1403,
	133, 1310,
	-2, 1308,
	-1, 1405,
	133, 654,
	-2, 1305,
	-1, 1406,
	133, 655,
	-2, 1306,
	-1, 1699,
	68, 1286,
	134, 1286,
	-2, 1637,
	-1, 1700,
	68, 1282,
	134, 1282,
	-2, 1636,
	-1, 1701,
	68, 1264,
	134, 1264,
	-2, 1623,
	-1, 1702,
	68, 1265,
	134, 1265,
	-2, 1628,
	-1, 1703,
	68, 1266,
	134, 1266,
	-2, 1560,
	-1, 1704,
	68, 1267,
	134, 1267,
	-2, 1554,
	-1, 1705,
	68, 1268,
	134, 1268,
	-2, 1498,
	-1, 1706,
	68, 1269,
	134, 1269,
	-2, 1625,
	-1, 1707,
	68, 1270,
	134, 1270,
	-2, 1558,
	-1, 1708,
	68, 1271,
	134, 1271,
	-2, 1553,
	-1, 1709,
	68, 1272,
	134, 1272,
	-2, 1546,
	-1, 1711,
	68, 1255,
	134, 1255,
	-2, 1655,
	-1, 1712,
	68, 1284,
	134, 1284,
	-2, 1626,
	-1, 1713,
	68, 1284,
	134, 1284,
	-2, 1654,
	-1, 1714,
	68, 1284,
	134, 1284,
	-2, 1516,
	-1, 1715,
	68, 1282,
	134, 1282,
	-2, 1645,
	-1, 1716,
	68, 1279,
	134, 1279,
	-2, 1538,
	-1, 1717,
	67, 1237,
	68, 1237,
	134, 1237,
	348, 1237,
	349, 1237,
	350, 1237,
	-2, 1497,
	-1, 1718,
	67, 1238,
	68, 1238,
	134, 1238,
	348, 1238,
	349, 1238,
	350, 1238,
	-2, 1499,
	-1, 1719,
	67, 1241,
	68, 1241,
	134, 1241,
	348, 1241,
	349, 1241,
	350, 1241,
	-2, 1627,
	-1, 1720,
	67, 1243,
	68, 1243,
	134, 1243,
	348, 1243,
	349, 1243,
	350, 1243,
	-2, 1610,
	-1, 1721,
	67, 1245,
	68, 1245,
	134, 1245,
	348, 1245,
	349, 1245,
	350, 1245,
	-2, 1559,
	-1, 1722,
	67, 1247,
	68, 1247,
	134, 1247,
	348, 1247,
	349, 1247,
	350, 1247,
	-2, 1542,
	-1, 1723,
	67, 1248,
	68, 1248,
	134, 1248,
	348, 1248,
	349, 1248,
	350, 1248,
	-2, 1543,
	-1, 1724,
	67, 1250,
	68, 1250,
	134, 1250,
	348, 1250,
	349, 1250,
	350, 1250,
	-2, 1496,
	-1, 1725,
	68, 1289,
	134, 1289,
	348, 1289,
	349, 1289,
	350, 1289,
	-2, 1521,
	-1, 1726,
	68, 1289,
	134, 1289,
	348, 1289,
	349, 1289,
	350, 1289,
	-2, 1534,
	-1, 1727,
	68, 1292,
	134, 1292,
	348, 1292,
	349, 1292,
	350, 1292,
	-2, 1517,
	-1, 1728,
	68, 1289,
	134, 1289,
	348, 1289,
	349, 1289,
	350, 1289,
	-2, 1595,
	-1, 1742,
	1, 755,
	68, 755,
	525, 755,
	-2, 761,
	-1, 1796,
	21, 530,
	-2, 621,
	-1, 1973,
	65, 437,
	134, 437,
	-2, 870,
	-1, 2248,
	87, 761,
	129, 761,
	166, 761,
	169, 761,
	-2, 818,
	-1, 2250,
	273, 933,
	-2, 912,
	-1, 2278,
	87, 761,
	129, 761,
	166, 761,
	169, 761,
	-2, 818,
	-1, 2281,
	65, 437,
	134, 437,
	-2, 871,
	-1, 2320,
	87, 761,
	129, 761,
	166, 761,
	169, 761,
	-2, 819,
	-1, 2348,
	273, 933,
	-2, 913,
	-1, 2763,
	68, 790,
	134, 790,
	-2, 761,
	-1, 2767,
	68, 790,
	134, 790,
	-2, 761,
	-1, 2781,
	68, 794,
	134, 794,
	-2, 761,
	-1, 2786,
	68, 795,
	134, 795,
	-2, 761,
}

const yyPrivate = 57344

const yyLast = 30105

var yyAct = [...]int{
	455, 2321, 1184, 2767, 2766, 2743, 2775, 2608, 435, 1100,
	2387, 437, 2732, 457, 2360, 2689, 2645, 2673, 2573, 1793,
	2505, 2674, 2553, 829, 2306, 2315, 1689, 1362, 2514, 2385,
	2386, 482, 2239, 2561, 2405, 139, 1238, 1011, 569, 136,
	136, 1789, 2424, 968, 2304, 136, 372, 379, 2370, 2273,
	379, 2577, 1285, 664, 1096, 1976, 377, 31, 2132, 2349,
	1948, 2319, 2369, 1103, 2128, 933, 1824, 1042, 1389, 1328,
	2254, 1863, 1395, 945, 1993, 2261, 384, 1350, 1320, 2137,
	1595, 1788, 1697, 439, 2133, 2206, 427, 390, 1830, 564,
	429, 2014, 2148, 1831, 1287, 2189, 2143, 2145, 1750, 697,
	1904, 1695, 603, 2075, 1236, 1400, 1862, 947, 135, 135,
	1396, 2028, 2126, 1241, 363, 470, 91, 434, 1591, 1403,
	1255, 1343, 1590, 1390, 1323, 1777, 564, 1992, 1321, 1296,
	1945, 1397, 375, 7, 1950, 136, 3, 668, 1749, 1183,
	1275, 1263, 1623, 671, 42, 2324, 376, 19, 373, 8,
	1297, 865, 692, 1094, 1592, 1034, 374, 6, 362, 438,
	1693, 91, 1347, 1294, 90, 666, 1735, 436, 693, 691,
	1602, 1293, 626, 1743, 426, 1677, 1148, 957, 1085, 1134,
	446, 1606, 1384, 910, 1791, 714, 1367, 368, 31, 42,
	1003, 1246, 1093, 656, 1099, 1798, 1311, 1274, 602, 365,
	566, 953, 657, 990, 699, 392, 1154, 16, 393, 9,
	4, 1153, 969, 928, 1033, 129, 378, 126, 619, 600,
	2068, 2068, 1609, 1865, 1599, 131, 2418, 1825, 2238, 568,
	1259, 2595, 1392, 567, 830, 2378, 130, 2636, 38, 120,
	100, 130, 577, 670, 734, 130, 1850, 91, 1596, 130,
	130, 130, 1858, 2317, 1174, 2626, 931, 1607, 992, 130,
	361, 38, 120, 100, 7, 1052, 382, 1174, 690, 767,
	980, 130, 981, 132, 1086, 42, 1090, 2215, 19, 768,
	8, 1049, 1331, 1332, 2662, 1932, 2045, 1947, 6, 636,
	965, 563, 669, 127, 761, 742, 1307, 744, 127, 1070,
	1089, 130, 1051, 38, 120, 100, 127, 127, 127, 993,
	130, 1039, 38, 120, 100, 554, 127, 553, 555, 556,
	1102, 557, 558, 974, 975, 745, 766, 2414, 1045, 972,
	125, 2660, 971, 974, 975, 578, 1905, 113, 387, 1946,
	2677, 2678, 2596, 2597, 2649, 2650, 89, 2403, 749, 2115,
	750, 2406, 2407, 2408, 2409, 2116, 2498, 2117, 127, 2501,
	2420, 75, 676, 675, 677, 136, 707, 127, 389, 2240,
	1091, 1105, 1845, 708, 2576, 1344, 706, 2223, 752, 2262,
	1603, 379, 379, 2635, 136, 772, 773, 774, 771, 2269,
	1088, 738, 674, 2159, 2149, 1336, 2157, 1081, 1674, 1170,
	702, 704, 1167, 717, 1772, 2383, 1169, 1166, 1168, 1172,
	1173, 1733, 1170, 740, 1171, 1167, 640, 1938, 2481, 1169,
	1166, 1168, 1172, 1173, 1340, 743, 746, 1171, 2367, 99,
	2063, 128, 764, 765, 705, 121, 122, 2061, 123, 124,
	679, 1230, 1229, 804, 747, 2413, 717, 2154, 2155, 739,
	118, 2415, 570, 725, 763, 2638, 2639, 701, 672, 1855,
	963, 737, 2156, 423, 2484, 2380, 424, 1835, 2153, 1104,
	2687, 430, 2676, 381, 641, 729, 380, 2475, 680, 2664,
	2515, 759, 760, 1608, 2760, 91, 91, 670, 2776, 2698,
	1112, 1115, 1116, 982, 1613, 1615, 1616, 1087, 2659, 2610,
	703, 1113, 748, 99, 119, 128, 2705, 73, 1961, 1962,
	1963, 1964, 932, 42, 42, 2468, 673, 2575, 741, 2562,
	2563, 2564, 2566, 2565, 118, 112, 111, 2606, 2607, 952,
	2610, 44, 2633, 2735, 2459, 2754, 669, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1177, 1178,
	1179, 1180, 1181, 1182, 1175, 1176, 802, 710, 711, 1953,
	2151, 1177, 1178, 1179, 1180, 1181, 1182, 1175, 1176, 1044,
	2437, 751, 2436, 428, 2666, 2667, 719, 718, 2616, 667,
	927, 929, 1959, 2463, 1597, 678, 1597, 999, 1597, 114,
	115, 116, 998, 727, 726, 967, 966, 722, 723, 984,
	951, 950, 603, 2777, 907, 669, 2771, 2744, 2783, 805,
	806, 807, 808, 2425, 2227, 2067, 2234, 698, 934, 719,
	718, 388, 974, 975, 1624, 2496, 83, 991, 809, 1851,
	117, 1805, 84, 1600, 2637, 1269, 937, 2141, 2016, 2018,
	734, 2071, 2066, 940, 973, 859, 1189, 2736, 939, 935,
	936, 2538, 938, 383, 2121, 1611, 942, 838, 964, 564,
	564, 564, 970, 1334, 1015, 1015, 597, 598, 599, 974,
	975, 2020, 712, 2150, 1040, 1802, 1610, 1345, 2160, 1598,
	379, 929, 1037, 1037, 643, 85, 915, 996, 2665, 2379,
	39, 1801, 2598, 2599, 86, 37, 1335, 2574, 769, 2482,
	101, 1047, 1017, 2077, 2076, 101, 1859, 2138, 2141, 101,
	1019, 2064, 1114, 101, 101, 101, 1614, 1333, 1013, 1013,
	733, 1068, 961, 101, 644, 2384, 840, 841, 2770, 977,
	978, 2717, 39, 770, 1015, 101, 1015, 707, 1337, 2152,
	1082, 39, 1804, 1803, 994, 995, 1053, 1101, 1288, 1838,
	754, 1842, 755, 1786, 1043, 2461, 728, 2170, 1050, 2460,
	2142, 954, 958, 958, 958, 101, 734, 1339, 2789, 2249,
	1288, 2733, 2734, 2782, 101, 1683, 1850, 1787, 1077, 954,
	757, 954, 912, 1021, 2788, 2779, 914, 362, 2464, 2465,
	959, 960, 2017, 1940, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1826, 1814, 568, 1143,
	1144, 2761, 1596, 91, 667, 1152, 2756, 91, 1063, 1064,
	2747, 944, 87, 88, 92, 1199, 1975, 1952, 91, 637,
	983, 2142, 985, 1106, 770, 1205, 2135, 91, 1688, 976,
	2136, 2139, 979, 637, 2746, 1207, 753, 1211, 1212, 2721,
	770, 2780, 1009, 1010, 1098, 1651, 42, 1787, 1650, 564,
	997, 1006, 1007, 1008, 2691, 42, 1787, 2684, 1076, 2679,
	1073, 1967, 2539, 2541, 2542, 2543, 2540, 1605, 1072, 1956,
	1957, 758, 2757, 1020, 1079, 2431, 1605, 1054, 2186, 361,
	2741, 1083, 2140, 1955, 1032, 1117, 1031, 1038, 2668, 1655,
	1059, 1231, 1814, 775, 756, 1237, 1067, 1252, 639, 1587,
	1605, 638, 803, 731, 1066, 1605, 943, 1055, 571, 2654,
	811, 1146, 639, 1245, 770, 638, 2631, 2630, 1095, 1075,
	2692, 1074, 1071, 2486, 1272, 2486, 1015, 1000, 1092, 1279,
	568, 816, 1737, 1097, 603, 2693, 1974, 1286, 1370, 2284,
	1015, 1253, 1687, 2629, 1295, 2171, 1198, 1278, 1185, 372,
	1188, 732, 955, 2268, 1814, 1200, 2628, 1142, 683, 688,
	689, 1234, 2618, 2030, 1977, 1206, 2493, 1208, 1136, 988,
	989, 1312, 1312, 732, 1295, 2655, 1295, 1256, 647, 1272,
	1015, 1330, 2486, 2486, 1968, 1853, 2492, 1270, 1243, 1244,
	1852, 564, 1844, 1015, 1310, 1280, 1281, 772, 773, 774,
	771, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 2485, 2486,
	772, 773, 774, 771, 1277, 1272, 1015, 1271, 1361, 136,
	136, 1187, 2486, 908, 2302, 646, 1736, 1372, 2619, 649,
	648, 136, 2494, 1769, 1647, 2035, 1199, 1388, 1314, 1209,
	692, 2096, 1199, 1199, 2011, 1634, 1301, 1364, 1586, 1292,
	956, 1226, 1754, 1928, 1686, 1975, 693, 1368, 1378, 1375,
	1356, 1084, 1308, 1309, 1303, 1304, 1405, 1926, 1056, 906,
	700, 1286, 1317, 787, 2486, 1015, 814, 1341, 720, 1299,
	1300, 700, 1406, 1924, 1922, 1248, 1260, 1251, 1363, 1363,
	2036, 954, 1305, 1910, 1867, 1848, 1329, 2730, 1840, 1254,
	1363, 2036, 2175, 1302, 1360, 1836, 1289, 2058, 1358, 1832,
	1787, 1346, 1753, 1684, 958, 1658, 1657, 592, 948, 1929,
	1276, 645, 2718, 1588, 685, 686, 687, 1633, 955, 1604,
	1618, 1060, 1283, 1927, 1290, 1282, 1800, 1949, 2620, 1621,
	1622, 1306, 1291, 1036, 1036, 1315, 2187, 1316, 1298, 1923,
	1923, 670, 772, 773, 774, 771, 2060, 670, 595, 770,
	770, 1754, 1354, 1355, 1833, 1002, 91, 1386, 1313, 2069,
	1843, 1837, 1873, 1386, 1276, 1833, 1319, 1318, 1754, 1683,
	734, 770, 770, 1807, 1342, 709, 1149, 1351, 1352, 1353,
	1365, 1191, 1190, 1357, 42, 1605, 1632, 1061, 1943, 1273,
	669, 1004, 700, 1594, 774, 771, 669, 2059, 1359, 1662,
	1095, 2653, 1005, 771, 2471, 1376, 788, 789, 790, 791,
	792, 793, 794, 787, 1393, 1141, 956, 1398, 1149, 1399,
	1629, 1404, 1107, 1108, 1109, 1110, 1111, 1585, 1584, 594,
	1139, 1140, 1138, 802, 2470, 1001, 650, 2258, 2253, 591,
	590, 2034, 1589, 2753, 1593, 2454, 1898, 2549, 427, 707,
	136, 136, 790, 791, 792, 793, 794, 787, 1631, 1698,
	584, 136, 136, 1751, 1150, 1151, 1203, 2765, 1612, 642,
	1186, 1217, 1295, 2750, 2547, 1193, 1204, 2715, 2699, 1617,
	2545, 2144, 669, 1762, 2587, 2548, 2752, 1620, 2555, 2535,
	2381, 772, 773, 774, 771, 1295, 2533, 692, 1619, 1136,
	1875, 588, 2266, 2532, 1628, 587, 2531, 2528, 1330, 2686,
	2522, 579, 2546, 693, 772, 773, 774, 771, 2544, 1729,
	1731, 772, 773, 774, 771, 2519, 582, 2534, 2382, 2518,
	1746, 1747, 2265, 2158, 1643, 2113, 2112, 1015, 2054, 2032,
	2267, 1794, 1794, 1637, 1794, 1682, 580, 707, 1681, 1037,
	1680, 1330, 1761, 1676, 1819, 1675, 1821, 1698, 2671, 1057,
	589, 1257, 925, 1199, 1272, 1261, 2670, 1759, 1264, 2089,
	2554, 2316, 1882, 772, 773, 774, 771, 2651, 1763, 1764,
	772, 773, 774, 771, 583, 2614, 1797, 1642, 1795, 2613,
	1799, 1812, 880, 1765, 423, 2603, 1679, 424, 905, 902,
	903, 904, 2536, 2529, 1887, 1744, 1886, 1885, 1883, 772,
	773, 774, 771, 2525, 2088, 2524, 1766, 1767, 772, 773,
	774, 771, 1692, 1796, 694, 695, 696, 1738, 2523, 1818,
	1828, 1690, 1691, 1834, 2483, 1829, 772, 773, 774, 771,
	2456, 958, 1816, 1758, 2419, 2314, 2312, 1760, 2276, 1192,
	2264, 1823, 2263, 593, 2260, 1257, 2226, 1864, 1770, 2120,
	2111, 1257, 1257, 2065, 2033, 1773, 1329, 2023, 1768, 1884,
	1210, 1685, 669, 1213, 1214, 1215, 1216, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 772, 773, 774, 771, 510,
	509, 2781, 868, 1678, 1808, 1809, 1810, 838, 1377, 1266,
	1058, 839, 834, 833, 1817, 815, 2758, 1815, 2162, 2621,
	888, 892, 894, 896, 898, 899, 901, 2504, 905, 902,
	903, 904, 2278, 2277, 883, 884, 885, 886, 866, 867,
	889, 2248, 869, 2236, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 881, 887, 2235, 2219, 2205, 2204,
	2176, 2094, 2087, 891, 893, 895, 897, 900, 2079, 2074,
	2580, 458, 467, 2027, 1939, 1925, 459, 1846, 466, 460,
	464, 463, 461, 462, 1921, 1920, 1663, 1015, 1654, 1015,
	1652, 1015, 772, 773, 774, 771, 707, 1649, 1648, 882,
	1888, 1889, 1646, 1639, 1636, 1635, 1860, 1202, 1626, 1201,
	2480, 1630, 786, 785, 795, 796, 788, 789, 790, 791,
	792, 793, 794, 787, 1015, 1891, 1022, 2778, 2729, 468,
	2723, 1653, 772, 773, 774, 771, 130, 130, 1899, 120,
	100, 2706, 1015, 1856, 2703, 2701, 831, 2586, 2571, 2559,
	2556, 1640, 1901, 2551, 1641, 2510, 1645, 1233, 2478, 465,
	2477, 1890, 795, 796, 788, 789, 790, 791, 792, 793,
	794, 787, 1656, 2476, 2473, 1659, 1660, 1661, 1013, 1900,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 2467, 1672,
	2452, 2196, 2308, 127, 127, 946, 1013, 2294, 2292, 2195,
	2307, 2271, 2259, 2098, 1877, 778, 779, 780, 781, 782,
	783, 784, 776, 1857, 772, 773, 774, 771, 1242, 1235,
	1878, 1879, 772, 773, 774, 771, 2040, 1015, 572, 573,
	574, 575, 1970, 1871, 1849, 1969, 1944, 1847, 1247, 1973,
	1854, 571, 1245, 1250, 1239, 1979, 1839, 1806, 1752, 1906,
	1755, 1930, 1137, 1868, 1911, 127, 1383, 1366, 1268, 1240,
	1988, 2230, 1080, 1046, 909, 707, 1330, 1330, 1330, 1330,
	857, 1941, 856, 855, 1881, 1994, 854, 707, 1330, 853,
	852, 1095, 1870, 772, 773, 774, 771, 1994, 1966, 1937,
	1023, 851, 850, 1942, 849, 848, 1015, 847, 846, 31,
	845, 844, 843, 842, 136, 136, 837, 836, 1971, 835,
	832, 828, 827, 1257, 1257, 1257, 1794, 1243, 1244, 825,
	1935, 824, 2010, 1990, 1199, 823, 822, 821, 2041, 820,
	1036, 819, 818, 1199, 817, 1980, 2764, 2092, 813, 812,
	736, 1015, 2190, 2191, 890, 2474, 1982, 1757, 1740, 724,
	1984, 2711, 2009, 2709, 2052, 2675, 1981, 2193, 91, 772,
	773, 774, 771, 1960, 1985, 1986, 1813, 1958, 1380, 735,
	2053, 2003, 2000, 2025, 2026, 7, 2004, 1972, 1744, 1978,
	2001, 1329, 1329, 1329, 1329, 2002, 42, 2046, 1987, 19,
	2037, 8, 1989, 1329, 1995, 1996, 1997, 1998, 1991, 6,
	2047, 2006, 2008, 1983, 2007, 1999, 1965, 1256, 1248, 2080,
	1251, 2049, 2082, 2005, 2084, 1783, 1784, 1382, 2021, 2024,
	2297, 1276, 2296, 2039, 568, 2031, 2118, 2119, 2062, 2057,
	2019, 707, 1841, 1381, 2123, 707, 74, 41, 1745, 2147,
	2050, 1698, 1227, 2048, 133, 2131, 91, 1827, 40, 1866,
	2044, 136, 2042, 1861, 2051, 2038, 2295, 911, 2125, 2056,
	707, 707, 2070, 2091, 2512, 1330, 1751, 1734, 2174, 730,
	2131, 2131, 2423, 2078, 2178, 1690, 1691, 2072, 2081, 358,
	359, 2147, 2085, 2086, 357, 772, 773, 774, 771, 2090,
	2083, 360, 2124, 1284, 2097, 1267, 1191, 1190, 2099, 2100,
	2101, 2102, 2642, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 772, 773, 774, 771, 923, 924, 2164, 2165, 2166,
	2163, 1891, 987, 798, 986, 801, 762, 1272, 921, 922,
	2200, 1272, 2122, 919, 920, 917, 918, 1583, 949, 913,
	799, 800, 797, 2172, 786, 785, 795, 796, 788, 789,
	790, 791, 792, 793, 794, 787, 2724, 136, 2604, 2591,
	2589, 2169, 136, 2516, 2173, 2511, 2177, 2029, 2503, 2502,
	2179, 2180, 2167, 2168, 2184, 2500, 2182, 2185, 2183, 2400,
	1329, 571, 2213, 2194, 2216, 2181, 2201, 2202, 2203, 1919,
	2211, 1874, 2197, 2399, 1288, 2198, 2313, 2310, 2217, 1892,
	1893, 2242, 2241, 2208, 2220, 1896, 1897, 2210, 916, 2207,
	2055, 772, 773, 774, 771, 1918, 136, 1902, 1638, 2218,
	2214, 572, 573, 574, 575, 2252, 2224, 721, 2222, 1917,
	2225, 2228, 2712, 2221, 571, 1916, 2713, 772, 773, 774,
	771, 91, 1915, 91, 2469, 1257, 2713, 2712, 1933, 1934,
	1264, 772, 773, 774, 771, 1015, 1015, 772, 773, 774,
	771, 1330, 2281, 2212, 772, 773, 774, 771, 962, 49,
	1, 2246, 1779, 1782, 1783, 1784, 1780, 707, 1781, 1785,
	1265, 576, 1379, 2012, 2013, 2247, 2199, 1994, 2015, 1601,
	1771, 1732, 2272, 2256, 2244, 1794, 2161, 2245, 941, 2257,
	1914, 2299, 596, 1199, 2250, 1194, 2255, 2251, 2255, 1013,
	2274, 1913, 930, 1065, 2288, 682, 716, 1062, 715, 713,
	2283, 1147, 772, 773, 774, 771, 472, 1391, 2552, 2396,
	91, 2641, 2688, 772, 773, 774, 771, 2585, 2644, 2280,
	707, 2279, 1078, 456, 2371, 2373, 1912, 2371, 2371, 2287,
	2131, 2289, 2495, 2114, 2402, 2290, 1909, 2282, 2497, 2404,
	1931, 2309, 707, 2285, 1908, 2305, 2286, 2043, 772, 773,
	774, 771, 615, 1907, 2301, 2300, 1329, 504, 772, 773,
	774, 771, 2303, 1286, 480, 2397, 772, 773, 774, 771,
	826, 1048, 1041, 2372, 2311, 772, 773, 774, 771, 2368,
	684, 1257, 479, 2416, 2346, 1257, 2270, 1954, 2422, 2374,
	2375, 2318, 2427, 581, 2376, 681, 616, 1903, 1673, 2237,
	1228, 1895, 2394, 1249, 1232, 2774, 2763, 2283, 2742, 2722,
	2391, 2390, 2609, 2759, 2658, 2395, 2704, 2073, 2401, 772,
	773, 774, 771, 772, 773, 774, 771, 1015, 2412, 2410,
	2411, 2455, 2697, 2605, 394, 2751, 1338, 562, 136, 654,
	2093, 2572, 395, 1756, 2392, 2393, 2634, 2373, 2430, 2558,
	585, 1739, 586, 2428, 2429, 1742, 2432, 2433, 2434, 2435,
	1741, 1118, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2457, 2368, 2453, 2727,
	777, 2274, 786, 785, 795, 796, 788, 789, 790, 791,
	792, 793, 794, 787, 2487, 2479, 1135, 2232, 2517, 2233,
	1894, 2491, 810, 433, 2490, 2489, 1627, 2472, 445, 2499,
	785, 795, 796, 788, 789, 790, 791, 792, 793, 794,
	787, 2550, 772, 773, 774, 771, 786, 785, 795, 796,
	788, 789, 790, 791, 792, 793, 794, 787, 1951, 2361,
	2022, 48, 47, 46, 707, 45, 1794, 707, 707, 707,
	2513, 1371, 2530, 1401, 474, 138, 1402, 707, 2600, 2417,
	2646, 2520, 2521, 2725, 454, 2583, 453, 2526, 2527, 452,
	451, 2557, 1778, 2560, 1776, 1775, 2568, 2569, 2570, 2567,
	1325, 2601, 1324, 1369, 2579, 2672, 2624, 2578, 2625, 2581,
	2466, 1015, 1015, 2537, 2462, 2458, 2590, 2594, 2592, 2593,
	2588, 1872, 2615, 2320, 2347, 2582, 2348, 2602, 2354, 91,
	786, 785, 795, 796, 788, 789, 790, 791, 792, 793,
	794, 787, 136, 772, 773, 774, 771, 864, 2611, 2612,
	707, 2229, 860, 862, 863, 861, 1880, 1876, 2231, 1145,
	2129, 2130, 707, 2127, 926, 1013, 1013, 2421, 2243, 2617,
	1696, 2623, 1694, 2192, 2188, 1387, 1262, 2648, 1936, 2627,
	1326, 772, 773, 774, 771, 1322, 2389, 565, 32, 27,
	2647, 2632, 5, 30, 29, 707, 28, 2640, 14, 15,
	1774, 13, 1069, 12, 18, 2656, 26, 2652, 25, 24,
	23, 1363, 772, 773, 774, 771, 82, 81, 80, 79,
	22, 2661, 2663, 1779, 1782, 1783, 1784, 1780, 11, 1781,
	1785, 78, 2669, 77, 76, 21, 20, 71, 72, 59,
	58, 57, 70, 69, 2690, 68, 2695, 67, 707, 1257,
	66, 65, 2291, 64, 614, 2293, 56, 2696, 1101, 2700,
	55, 2702, 54, 53, 2694, 880, 63, 62, 61, 2298,
	2680, 2681, 2682, 2683, 60, 52, 51, 50, 98, 97,
	2707, 96, 2710, 2648, 2720, 2708, 2685, 1174, 2095, 2714,
	95, 94, 707, 93, 707, 33, 2647, 2716, 34, 2719,
	35, 2726, 1101, 2728, 1101, 2731, 36, 108, 107, 109,
	110, 105, 103, 106, 104, 102, 2737, 43, 10, 2690,
	707, 2377, 2745, 2738, 17, 2, 0, 0, 0, 2749,
	1101, 0, 2755, 0, 0, 786, 785, 795, 796, 788,
	789, 790, 791, 792, 793, 794, 787, 0, 0, 0,
	0, 0, 0, 2762, 0, 2769, 0, 0, 0, 2773,
	0, 0, 2772, 0, 0, 868, 0, 0, 0, 858,
	0, 2784, 0, 2769, 0, 2786, 2787, 2785, 2773, 0,
	0, 0, 0, 888, 892, 894, 896, 898, 899, 901,
	0, 905, 902, 903, 904, 0, 880, 883, 884, 885,
	886, 866, 867, 889, 0, 869, 0, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 879, 881, 887, 0,
	0, 0, 0, 0, 0, 0, 891, 893, 895, 897,
	900, 0, 1170, 0, 0, 1167, 0, 0, 0, 1169,
	1166, 1168, 1172, 1173, 0, 0, 0, 1171, 0, 0,
	2488, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2509, 786, 785, 795, 796, 788,
	789, 790, 791, 792, 793, 794, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 868, 786, 785, 795,
	796, 788, 789, 790, 791, 792, 793, 794, 787, 0,
	0, 0, 0, 0, 888, 892, 894, 896, 898, 899,
	901, 0, 905, 902, 903, 904, 0, 0, 883, 884,
	885, 886, 866, 867, 889, 0, 869, 0, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 881, 887,
	0, 0, 0, 0, 0, 0, 0, 891, 893, 895,
	897, 900, 0, 0, 0, 0, 0, 0, 2509, 0,
	1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1177, 1178, 1179, 1180, 1181, 1182, 1175, 1176, 0,
	0, 0, 0, 882, 0, 0, 0, 1625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2622, 786,
	785, 795, 796, 788, 789, 790, 791, 792, 793, 794,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 1559, 0, 0, 1506, 306, 1464, 1519, 1437, 1453,
	1527, 1454, 1455, 1492, 1416, 1474, 268, 1451, 0, 0,
	0, 0, 0, 0, 1509, 1408, 1440, 1441, 1410, 1447,
	1411, 1438, 1466, 213, 1436, 1477, 238, 1489, 1450, 1471,
	1525, 0, 0, 298, 252, 0, 0, 1469, 1511, 1472,
	1497, 1463, 1493, 1424, 1485, 1520, 1452, 0, 1490, 1521,
	0, 0, 0, 0, 694, 695, 696, 890, 0, 0,
	0, 194, 0, 0, 0, 2509, 0, 1488, 1515, 1449,
	0, 197, 1518, 1470, 1491, 0, 0, 1409, 1486, 0,
	1414, 1417, 1526, 1513, 1444, 1445, 0, 0, 0, 0,
	0, 0, 0, 0, 1467, 1473, 1494, 1460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1442, 0, 1482,
	0, 0, 0, 1419, 1415, 0, 1465, 0, 0, 185,
	303, 319, 195, 294, 332, 200, 301, 190, 267, 290,
	2740, 1558, 187, 317, 300, 249, 232, 233, 186, 0,
	285, 211, 224, 207, 265, 0, 316, 344, 206, 335,
	1418, 327, 189, 1553, 326, 264, 313, 318, 250, 244,
	188, 315, 248, 243, 236, 215, 0, 228, 276, 242,
	277, 229, 254, 253, 255, 1537, 1538, 1539, 1540, 1541,
	355, 1549, 1550, 0, 1554, 1555, 1556, 1423, 890, 1443,
	1495, 0, 1407, 1582, 1504, 1512, 1462, 329, 1514, 1459,
	1458, 1544, 0, 1543, 302, 1545, 1546, 237, 1510, 1439,
	1448, 345, 1446, 288, 270, 1516, 1481, 1557, 286, 240,
	314, 278, 320, 304, 328, 282, 279, 180, 305, 209,
	251, 191, 193, 205, 212, 214, 216, 217, 260, 261,
	273, 293, 307, 308, 309, 208, 201, 287, 202, 226,
	203, 181, 295, 204, 183, 274, 312, 1542, 222, 283,
	247, 184, 246, 275, 311, 310, 192, 336, 342, 343,
	347, 0, 348, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 1551, 0, 1552, 341,
	220, 177, 178, 324, 0, 266, 0, 1507, 1412, 1422,
	1420, 1456, 1483, 1484, 262, 340, 1499, 1503, 1500, 1528,
	291, 0, 0, 0, 0, 0, 231, 272, 1501, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 299, 322, 334, 351, 354, 1560, 1561, 1562,
	182, 353, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 325,
	1457, 1430, 1468, 333, 1433, 1431, 1498, 1432, 1487, 349,
	256, 257, 258, 259, 223, 0, 199, 352, 281, 1478,
	1461, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1479, 1571,
	1572, 1573, 1574, 1575, 1435, 346, 219, 225, 0, 227,
	198, 271, 221, 331, 234, 1505, 1576, 1577, 1578, 1579,
	1580, 1581, 263, 230, 296, 235, 241, 284, 330, 269,
	289, 196, 321, 297, 245, 0, 0, 1429, 1434, 1428,
	1475, 1476, 1522, 1523, 1524, 1496, 1421, 1508, 0, 1425,
	1427, 1426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 306, 486, 1480, 179, 0, 239, 1529, 280,
	218, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 447, 0, 0, 0,
	213, 0, 0, 238, 0, 0, 0, 478, 0, 0,
	298, 252, 0, 0, 0, 0, 533, 541, 0, 1547,
	1548, 337, 338, 339, 323, 0, 210, 1570, 440, 0,
	0, 471, 510, 509, 458, 467, 0, 0, 194, 459,
	0, 466, 460, 464, 463, 461, 462, 0, 525, 0,
	0, 0, 0, 0, 0, 431, 444, 2506, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	441, 442, 0, 0, 0, 0, 487, 0, 443, 0,
	0, 489, 468, 469, 0, 0, 185, 303, 319, 195,
	294, 332, 200, 301, 190, 267, 290, 0, 0, 187,
	317, 300, 249, 232, 233, 186, 0, 285, 211, 224,
	207, 265, 465, 485, 490, 206, 547, 483, 327, 189,
	0, 326, 264, 313, 318, 250, 244, 188, 315, 248,
	243, 236, 215, 548, 228, 276, 242, 277, 229, 254,
	253, 255, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 481, 0, 0, 329, 0, 0, 531, 0, 0,
	0, 302, 0, 0, 237, 0, 0, 0, 484, 0,
	288, 270, 544, 432, 0, 286, 240, 314, 278, 320,
	304, 328, 282, 279, 180, 305, 209, 251, 191, 193,
	205, 212, 214, 216, 217, 260, 261, 273, 293, 307,
	308, 309, 208, 201, 287, 202, 226, 203, 181, 295,
	204, 183, 274, 312, 0, 222, 283, 247, 184, 246,
	275, 311, 310, 192, 336, 342, 343, 347, 0, 348,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 341, 220, 177, 178,
	324, 529, 266, 0, 543, 524, 526, 527, 530, 534,
	535, 536, 537, 538, 540, 542, 546, 291, 0, 0,
	0, 0, 0, 231, 272, 0, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	322, 334, 351, 354, 0, 0, 0, 182, 353, 0,
	2507, 0, 0, 0, 2508, 0, 545, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 488, 256, 257, 258,
	259, 532, 0, 199, 352, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 219, 225, 0, 227, 198, 271, 221,
	331, 234, 0, 0, 0, 0, 0, 0, 0, 263,
	230, 296, 235, 241, 284, 330, 269, 289, 196, 321,
	297, 245, 0, 0, 554, 528, 553, 555, 556, 552,
	557, 558, 539, 450, 0, 493, 550, 549, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 239, 0, 280, 218, 517, 497,
	498, 499, 449, 500, 495, 496, 518, 491, 514, 515,
	473, 476, 501, 513, 502, 516, 519, 520, 559, 560,
	508, 561, 505, 521, 512, 511, 503, 492, 522, 523,
	477, 475, 506, 507, 494, 306, 486, 0, 337, 338,
	339, 323, 0, 210, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 447,
	0, 0, 0, 213, 0, 0, 238, 0, 0, 0,
	478, 0, 0, 298, 252, 0, 0, 0, 0, 533,
	541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 440, 0, 0, 471, 510, 509, 458, 467, 0,
	0, 194, 459, 0, 466, 460, 464, 463, 461, 462,
	0, 525, 0, 0, 0, 0, 0, 0, 431, 444,
	0, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 487,
	0, 443, 0, 0, 489, 468, 469, 0, 0, 185,
	303, 319, 195, 294, 332, 200, 301, 190, 267, 290,
	0, 0, 187, 317, 300, 249, 232, 233, 186, 0,
	285, 211, 224, 207, 265, 465, 485, 490, 206, 547,
	483, 327, 189, 0, 326, 264, 313, 318, 250, 244,
	188, 315, 248, 243, 236, 215, 548, 228, 276, 242,
	277, 229, 254, 253, 255, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 329, 0, 0,
	531, 0, 0, 0, 302, 0, 0, 237, 0, 0,
	0, 484, 0, 288, 270, 544, 432, 0, 286, 240,
	314, 278, 320, 304, 328, 282, 279, 180, 305, 209,
	251, 191, 193, 205, 212, 214, 216, 217, 260, 261,
	273, 293, 307, 308, 309, 208, 201, 287, 202, 226,
	203, 181, 295, 204, 183, 274, 312, 0, 222, 283,
	247, 184, 246, 275, 311, 310, 192, 336, 342, 343,
	347, 0, 348, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 1196, 1195, 1197, 341,
	220, 177, 178, 324, 529, 266, 0, 543, 524, 526,
	527, 530, 534, 535, 536, 537, 538, 540, 542, 546,
	291, 0, 0, 0, 0, 0, 231, 272, 0, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 322, 334, 351, 354, 0, 0, 0,
	182, 353, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 488,
	256, 257, 258, 259, 532, 0, 199, 352, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 219, 225, 0, 227,
	198, 271, 221, 331, 234, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 296, 235, 241, 284, 330, 269,
	289, 196, 321, 297, 245, 0, 0, 554, 528, 553,
	555, 556, 552, 557, 558, 539, 450, 0, 493, 550,
	549, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 239, 0, 280,
	218, 517, 497, 498, 499, 449, 500, 495, 496, 518,
	491, 514, 515, 473, 476, 501, 513, 502, 516, 519,
	520, 559, 560, 508, 561, 505, 521, 512, 511, 503,
	492, 522, 523, 477, 475, 506, 507, 494, 306, 486,
	0, 337, 338, 339, 323, 0, 210, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 447, 0, 0, 0, 213, 0, 0, 238,
	0, 0, 0, 478, 0, 0, 298, 252, 0, 0,
	0, 0, 533, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 440, 0, 0, 471, 510, 509,
	458, 467, 0, 0, 194, 459, 0, 466, 460, 464,
	463, 461, 462, 0, 525, 0, 0, 0, 0, 0,
	0, 431, 444, 0, 448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 441, 442, 0, 0,
	0, 0, 487, 0, 443, 0, 0, 489, 468, 469,
	0, 0, 185, 303, 319, 195, 294, 332, 200, 301,
	190, 267, 290, 0, 0, 187, 317, 300, 249, 232,
	233, 186, 0, 285, 211, 224, 207, 265, 465, 485,
	490, 206, 547, 483, 327, 189, 0, 326, 264, 313,
	318, 250, 244, 188, 315, 248, 243, 236, 215, 548,
	228, 276, 242, 277, 229, 254, 253, 255, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 481, 0, 0,
	329, 0, 0, 531, 0, 0, 0, 302, 0, 0,
	237, 0, 0, 0, 484, 0, 288, 270, 544, 432,
	0, 286, 240, 314, 278, 320, 304, 328, 282, 279,
	180, 305, 209, 251, 191, 193, 205, 212, 214, 216,
	217, 260, 261, 273, 293, 307, 308, 309, 208, 201,
	287, 202, 226, 203, 181, 295, 204, 183, 274, 312,
	0, 222, 283, 247, 184, 246, 275, 311, 310, 192,
	336, 342, 343, 347, 0, 348, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 341, 220, 177, 178, 324, 529, 266, 0,
	543, 524, 526, 527, 530, 534, 535, 536, 537, 538,
	540, 542, 546, 291, 0, 0, 0, 0, 0, 231,
	272, 0, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 322, 334, 351, 354,
	0, 0, 0, 182, 353, 0, 2507, 0, 0, 0,
	2508, 0, 545, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 488, 256, 257, 258, 259, 532, 0, 199,
	352, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 219,
	225, 0, 227, 198, 271, 221, 331, 234, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 296, 235, 241,
	284, 330, 269, 289, 196, 321, 297, 245, 0, 0,
	554, 528, 553, 555, 556, 552, 557, 558, 539, 450,
	0, 493, 550, 549, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	239, 0, 280, 218, 517, 497, 498, 499, 449, 500,
	495, 496, 518, 491, 514, 515, 473, 476, 501, 513,
	502, 516, 519, 520, 559, 560, 508, 561, 505, 521,
	512, 511, 503, 492, 522, 523, 477, 475, 506, 507,
	494, 306, 486, 0, 337, 338, 339, 323, 0, 210,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 447, 0, 0, 0, 213,
	1258, 0, 238, 0, 0, 0, 478, 0, 0, 298,
	252, 0, 0, 0, 0, 533, 541, 0, 0, 0,
	0, 0, 0, 0, 1348, 0, 0, 440, 0, 0,
	471, 510, 509, 458, 467, 0, 0, 194, 459, 0,
	466, 460, 464, 463, 461, 462, 0, 525, 0, 0,
	0, 0, 0, 0, 431, 444, 0, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 487, 0, 443, 0, 0,
	1349, 468, 469, 0, 0, 185, 303, 319, 195, 294,
	332, 200, 301, 190, 267, 290, 0, 0, 187, 317,
	300, 249, 232, 233, 186, 0, 285, 211, 224, 207,
	265, 465, 485, 490, 206, 547, 483, 327, 189, 0,
	326, 264, 313, 318, 250, 244, 188, 315, 248, 243,
	236, 215, 548, 228, 276, 242, 277, 229, 254, 253,
	255, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	481, 0, 0, 329, 0, 0, 531, 0, 0, 0,
	302, 0, 0, 237, 0, 0, 0, 484, 0, 288,
	270, 544, 432, 0, 286, 240, 314, 278, 320, 304,
	328, 282, 279, 180, 305, 209, 251, 191, 193, 205,
	212, 214, 216, 217, 260, 261, 273, 293, 307, 308,
	309, 208, 201, 287, 202, 226, 203, 181, 295, 204,
	183, 274, 312, 0, 222, 283, 247, 184, 246, 275,
	311, 310, 192, 336, 342, 343, 347, 0, 348, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 341, 220, 177, 178, 324,
	529, 266, 0, 543, 524, 526, 527, 530, 534, 535,
	536, 537, 538, 540, 542, 546, 291, 0, 0, 0,
	0, 0, 231, 272, 0, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 322,
	334, 351, 354, 0, 0, 0, 182, 353, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 488, 256, 257, 258, 259,
	532, 0, 199, 352, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 219, 225, 0, 227, 198, 271, 221, 331,
	234, 0, 0, 0, 0, 0, 0, 0, 263, 230,
	296, 235, 241, 284, 330, 269, 289, 196, 321, 297,
	245, 0, 0, 554, 528, 553, 555, 556, 552, 557,
	558, 539, 450, 0, 493, 550, 549, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 239, 0, 280, 218, 517, 497, 498,
	499, 449, 500, 495, 496, 518, 491, 514, 515, 473,
	476, 501, 513, 502, 516, 519, 520, 559, 560, 508,
	561, 505, 521, 512, 511, 503, 492, 522, 523, 477,
	475, 506, 507, 494, 130, 306, 486, 337, 338, 339,
	323, 0, 210, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 447,
	0, 0, 0, 213, 0, 0, 238, 0, 0, 0,
	478, 0, 0, 298, 252, 0, 0, 0, 0, 533,
	541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 440, 0, 0, 471, 510, 509, 458, 467, 0,
	0, 194, 459, 0, 466, 460, 464, 463, 461, 462,
	0, 525, 0, 0, 0, 0, 0, 0, 431, 444,
	0, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 487,
	0, 443, 0, 0, 489, 468, 469, 0, 0, 185,
	303, 319, 195, 294, 332, 200, 301, 190, 267, 290,
	0, 0, 187, 317, 300, 249, 232, 233, 186, 0,
	285, 211, 224, 207, 265, 465, 485, 490, 206, 547,
	483, 327, 189, 0, 326, 264, 313, 318, 250, 244,
	188, 315, 248, 243, 236, 215, 548, 228, 276, 242,
	277, 229, 254, 253, 255, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 329, 0, 0,
	531, 0, 0, 0, 302, 0, 0, 237, 0, 0,
	0, 484, 0, 288, 270, 544, 432, 0, 286, 240,
	314, 278, 320, 304, 328, 282, 279, 180, 305, 209,
	251, 191, 193, 205, 212, 214, 216, 217, 260, 261,
	273, 293, 307, 308, 309, 208, 201, 287, 202, 226,
	203, 181, 295, 204, 183, 274, 312, 0, 222, 283,
	247, 184, 246, 275, 311, 310, 192, 336, 342, 343,
	347, 0, 348, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 341,
	220, 177, 178, 324, 529, 266, 0, 543, 524, 526,
	527, 530, 534, 535, 536, 537, 538, 540, 542, 546,
	291, 0, 0, 0, 0, 0, 231, 272, 0, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 322, 334, 351, 354, 0, 0, 0,
	182, 353, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 488,
	256, 257, 258, 259, 532, 0, 199, 352, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 219, 225, 0, 227,
	198, 271, 221, 331, 234, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 296, 235, 241, 284, 330, 269,
	289, 196, 321, 297, 245, 0, 0, 554, 528, 553,
	555, 556, 552, 557, 558, 539, 450, 0, 493, 550,
	549, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 239, 101, 280,
	218, 517, 497, 498, 499, 449, 500, 495, 496, 518,
	491, 514, 515, 473, 476, 501, 513, 502, 516, 519,
	520, 559, 560, 508, 561, 505, 521, 512, 511, 503,
	492, 522, 523, 477, 475, 506, 507, 494, 306, 486,
	0, 337, 338, 339, 323, 0, 210, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 447, 0, 0, 0, 213, 2739, 0, 238,
	0, 0, 0, 478, 0, 0, 298, 252, 0, 0,
	0, 0, 533, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 440, 0, 0, 471, 510, 509,
	458, 467, 0, 0, 194, 459, 0, 466, 460, 464,
	463, 461, 462, 0, 525, 0, 0, 0, 0, 0,
	0, 431, 444, 0, 448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 441, 442, 0, 0,
	0, 0, 487, 0, 443, 0, 0, 489, 468, 469,
	0, 0, 185, 303, 319, 195, 294, 332, 200, 301,
	190, 267, 290, 0, 0, 187, 317, 300, 249, 232,
	233, 186, 0, 285, 211, 224, 207, 265, 465, 485,
	490, 206, 547, 483, 327, 189, 0, 326, 264, 313,
	318, 250, 244, 188, 315, 248, 243, 236, 215, 548,
	228, 276, 242, 277, 229, 254, 253, 255, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 481, 0, 0,
	329, 0, 0, 531, 0, 0, 0, 302, 0, 0,
	237, 0, 0, 0, 484, 0, 288, 270, 544, 432,
	0, 286, 240, 314, 278, 320, 304, 328, 282, 279,
	180, 305, 209, 251, 191, 193, 205, 212, 214, 216,
	217, 260, 261, 273, 293, 307, 308, 309, 208, 201,
	287, 202, 226, 203, 181, 295, 204, 183, 274, 312,
	0, 222, 283, 247, 184, 246, 275, 311, 310, 192,
	336, 342, 343, 347, 0, 348, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 341, 220, 177, 178, 324, 529, 266, 0,
	543, 524, 526, 527, 530, 534, 535, 536, 537, 538,
	540, 542, 546, 291, 0, 0, 0, 0, 0, 231,
	272, 0, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 322, 334, 351, 354,
	0, 0, 0, 182, 353, 0, 0, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 488, 256, 257, 258, 259, 532, 0, 199,
	352, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 219,
	225, 0, 227, 198, 271, 221, 331, 234, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 296, 235, 241,
	284, 330, 269, 289, 196, 321, 297, 245, 0, 0,
	554, 528, 553, 555, 556, 552, 557, 558, 539, 450,
	0, 493, 550, 549, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	239, 0, 280, 218, 517, 497, 498, 499, 449, 500,
	495, 496, 518, 491, 514, 515, 473, 476, 501, 513,
	502, 516, 519, 520, 559, 560, 508, 561, 505, 521,
	512, 511, 503, 492, 522, 523, 477, 475, 506, 507,
	494, 306, 486, 0, 337, 338, 339, 323, 0, 210,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 447, 0, 0, 0, 213,
	1258, 0, 238, 0, 0, 0, 478, 0, 0, 298,
	252, 0, 0, 0, 0, 533, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 440, 0, 0,
	471, 510, 509, 458, 467, 0, 0, 194, 459, 0,
	466, 460, 464, 463, 461, 462, 0, 525, 0, 0,
	0, 0, 0, 0, 431, 444, 0, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 487, 0, 443, 0, 0,
	489, 468, 469, 0, 0, 185, 303, 319, 195, 294,
	332, 200, 301, 190, 267, 290, 0, 0, 187, 317,
	300, 249, 232, 233, 186, 0, 285, 211, 224, 207,
	265, 465, 485, 490, 206, 547, 483, 327, 189, 0,
	326, 264, 313, 318, 250, 244, 188, 315, 248, 243,
	236, 215, 548, 228, 276, 242, 277, 229, 254, 253,
	255, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	481, 0, 0, 329, 0, 0, 531, 0, 0, 0,
	302, 0, 0, 237, 0, 0, 0, 484, 0, 288,
	270, 544, 432, 0, 286, 240, 314, 278, 320, 304,
	328, 282, 279, 180, 305, 209, 251, 191, 193, 205,
	212, 214, 216, 217, 260, 261, 273, 293, 307, 308,
	309, 208, 201, 287, 202, 226, 203, 181, 295, 204,
	183, 274, 312, 0, 222, 283, 247, 184, 246, 275,
	311, 310, 192, 336, 342, 343, 347, 0, 348, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 341, 220, 177, 178, 324,
	529, 266, 0, 543, 524, 526, 527, 530, 534, 535,
	536, 537, 538, 540, 542, 546, 291, 0, 0, 0,
	0, 0, 231, 272, 0, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 322,
	334, 351, 354, 0, 0, 0, 182, 353, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 488, 256, 257, 258, 259,
	532, 0, 199, 352, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 219, 225, 0, 227, 198, 271, 221, 331,
	234, 0, 0, 0, 0, 0, 0, 0, 263, 230,
	296, 235, 241, 284, 330, 269, 289, 196, 321, 297,
	245, 0, 0, 554, 528, 553, 555, 556, 552, 557,
	558, 539, 450, 0, 493, 550, 549, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 239, 0, 280, 218, 517, 497, 498,
	499, 449, 500, 495, 496, 518, 491, 514, 515, 473,
	476, 501, 513, 502, 516, 519, 520, 559, 560, 508,
	561, 505, 521, 512, 511, 503, 492, 522, 523, 477,
	475, 506, 507, 494, 306, 486, 0, 337, 338, 339,
	323, 0, 210, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 447, 0,
	0, 0, 213, 0, 0, 238, 0, 0, 0, 478,
	0, 0, 298, 252, 0, 0, 0, 0, 533, 541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	440, 0, 0, 471, 510, 509, 458, 467, 0, 0,
	194, 459, 0, 466, 460, 464, 463, 461, 462, 0,
	525, 0, 0, 0, 0, 0, 0, 431, 444, 0,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 441, 442, 1035, 0, 0, 0, 487, 0,
	443, 0, 0, 489, 468, 469, 0, 0, 185, 303,
	319, 195, 294, 332, 200, 301, 190, 267, 290, 0,
	0, 187, 317, 300, 249, 232, 233, 186, 0, 285,
	211, 224, 207, 265, 465, 485, 490, 206, 547, 483,
	327, 189, 0, 326, 264, 313, 318, 250, 244, 188,
	315, 248, 243, 236, 215, 548, 228, 276, 242, 277,
	229, 254, 253, 255, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 481, 0, 0, 329, 0, 0, 531,
	0, 0, 0, 302, 0, 0, 237, 0, 0, 0,
	484, 0, 288, 270, 544, 432, 0, 286, 240, 314,
	278, 320, 304, 328, 282, 279, 180, 305, 209, 251,
	191, 193, 205, 212, 214, 216, 217, 260, 261, 273,
	293, 307, 308, 309, 208, 201, 287, 202, 226, 203,
	181, 295, 204, 183, 274, 312, 0, 222, 283, 247,
	184, 246, 275, 311, 310, 192, 336, 342, 343, 347,
	0, 348, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 341, 220,
	177, 178, 324, 529, 266, 0, 543, 524, 526, 527,
	530, 534, 535, 536, 537, 538, 540, 542, 546, 291,
	0, 0, 0, 0, 0, 231, 272, 0, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 322, 334, 351, 354, 0, 0, 0, 182,
	353, 0, 0, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 488, 256,
	257, 258, 259, 532, 0, 199, 352, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 219, 225, 0, 227, 198,
	271, 221, 331, 234, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 296, 235, 241, 284, 330, 269, 289,
	196, 321, 297, 245, 0, 0, 554, 528, 553, 555,
	556, 552, 557, 558, 539, 450, 0, 493, 550, 549,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 239, 0, 280, 218,
	517, 497, 498, 499, 449, 500, 495, 496, 518, 491,
	514, 515, 473, 476, 501, 513, 502, 516, 519, 520,
	559, 560, 508, 561, 505, 521, 512, 511, 503, 492,
	522, 523, 477, 475, 506, 507, 494, 0, 0, 0,
	337, 338, 339, 323, 0, 210, 306, 486, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	447, 0, 0, 0, 213, 0, 0, 238, 0, 0,
	0, 478, 0, 0, 298, 252, 0, 0, 0, 0,
	533, 541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 440, 0, 0, 471, 510, 509, 458, 467,
	0, 0, 194, 459, 0, 466, 460, 464, 463, 461,
	462, 0, 525, 0, 0, 0, 0, 0, 0, 431,
	444, 0, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 441, 442, 0, 0, 0, 0,
	487, 0, 443, 0, 0, 489, 468, 469, 0, 0,
	185, 303, 319, 195, 294, 332, 200, 301, 190, 267,
	290, 0, 0, 187, 317, 300, 249, 232, 233, 186,
	0, 285, 211, 224, 207, 265, 465, 485, 490, 206,
	547, 483, 327, 189, 0, 326, 264, 313, 318, 250,
	244, 188, 315, 248, 243, 236, 215, 548, 228, 276,
	242, 277, 229, 254, 253, 255, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 481, 0, 0, 329, 0,
	0, 531, 0, 0, 0, 302, 0, 0, 237, 0,
	0, 0, 484, 0, 288, 270, 544, 432, 0, 286,
	240, 314, 278, 320, 304, 328, 282, 279, 180, 305,
	209, 251, 191, 193, 205, 212, 214, 216, 217, 260,
	261, 273, 293, 307, 308, 309, 208, 201, 287, 202,
	226, 203, 181, 295, 204, 183, 274, 312, 0, 222,
	283, 247, 184, 246, 275, 311, 310, 192, 336, 342,
	343, 347, 0, 348, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	341, 220, 177, 178, 324, 529, 266, 0, 543, 524,
	526, 527, 530, 534, 535, 536, 537, 538, 540, 542,
	546, 291, 0, 0, 0, 0, 0, 231, 272, 0,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 322, 334, 351, 354, 0, 0,
	0, 182, 353, 0, 0, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	488, 256, 257, 258, 259, 532, 0, 199, 352, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 219, 225, 0,
	227, 198, 271, 221, 331, 234, 0, 0, 0, 0,
	0, 0, 0, 263, 230, 296, 235, 241, 284, 330,
	269, 289, 196, 321, 297, 245, 0, 0, 554, 528,
	553, 555, 556, 552, 557, 558, 539, 450, 0, 493,
	550, 549, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 239, 0,
	280, 218, 517, 497, 498, 499, 449, 500, 495, 496,
	518, 491, 514, 515, 473, 476, 501, 513, 502, 516,
	519, 520, 559, 560, 508, 561, 505, 521, 512, 511,
	503, 492, 522, 523, 477, 475, 506, 507, 494, 306,
	486, 0, 337, 338, 339, 323, 0, 210, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 447, 0, 0, 0, 213, 0, 0,
	238, 0, 0, 0, 478, 0, 0, 298, 252, 0,
	0, 0, 0, 533, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 440, 0, 0, 471, 510,
	509, 458, 467, 0, 0, 194, 459, 0, 466, 460,
	464, 463, 461, 462, 0, 525, 0, 0, 0, 0,
	0, 0, 431, 444, 0, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 441, 442, 0,
	0, 0, 0, 487, 0, 443, 0, 0, 489, 468,
	469, 0, 0, 185, 303, 319, 195, 294, 332, 200,
	301, 190, 267, 290, 0, 0, 187, 317, 300, 249,
	232, 233, 186, 0, 285, 211, 224, 207, 265, 465,
	485, 490, 206, 547, 483, 327, 189, 0, 326, 264,
	313, 318, 250, 244, 188, 315, 248, 243, 236, 215,
	548, 228, 276, 242, 277, 229, 254, 253, 255, 0,
	0, 0, 0, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	0, 329, 0, 0, 531, 0, 0, 0, 302, 0,
	0, 237, 0, 0, 0, 484, 0, 288, 270, 544,
	432, 0, 286, 240, 314, 278, 320, 304, 328, 282,
	279, 180, 305, 209, 251, 191, 193, 205, 212, 214,
	216, 217, 260, 261, 273, 293, 307, 308, 309, 208,
	201, 287, 202, 226, 203, 181, 295, 204, 183, 274,
	312, 0, 222, 283, 247, 184, 246, 275, 311, 310,
	192, 336, 342, 343, 347, 0, 348, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 341, 220, 177, 178, 324, 529, 266,
	0, 543, 524, 526, 527, 530, 534, 535, 536, 537,
	538, 540, 542, 546, 291, 0, 0, 0, 0, 0,
	231, 272, 0, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 322, 334, 351,
	354, 0, 0, 0, 182, 353, 0, 0, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 488, 256, 257, 258, 259, 532, 0,
	199, 352, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	219, 225, 0, 227, 198, 271, 221, 331, 234, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 296, 235,
	241, 284, 330, 269, 289, 196, 321, 297, 245, 0,
	0, 554, 528, 553, 555, 556, 552, 557, 558, 539,
	450, 0, 493, 550, 549, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 239, 0, 280, 218, 517, 497, 498, 499, 449,
	500, 495, 496, 518, 491, 514, 515, 473, 476, 501,
	513, 502, 516, 519, 520, 559, 560, 508, 561, 505,
	521, 512, 511, 503, 492, 522, 523, 477, 475, 506,
	507, 494, 306, 486, 0, 337, 338, 339, 323, 0,
	210, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 1119, 0, 0, 0, 447, 0, 0, 0,
	213, 0, 0, 238, 0, 0, 0, 478, 0, 0,
	298, 252, 0, 0, 0, 0, 533, 541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 440, 0,
	0, 471, 510, 509, 458, 467, 0, 0, 194, 459,
	0, 466, 460, 464, 463, 461, 462, 0, 525, 0,
	0, 0, 0, 0, 0, 0, 444, 0, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	441, 442, 0, 0, 0, 0, 487, 0, 443, 0,
	0, 489, 468, 469, 0, 0, 185, 303, 319, 195,
	294, 332, 200, 301, 190, 267, 290, 0, 0, 187,
	317, 300, 249, 232, 233, 186, 0, 285, 211, 224,
	207, 265, 465, 485, 490, 206, 547, 483, 327, 189,
	0, 326, 264, 313, 318, 250, 244, 188, 315, 248,
	243, 236, 215, 548, 228, 276, 242, 277, 229, 254,
	253, 255, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 481, 0, 0, 329, 0, 0, 531, 0, 0,
	0, 302, 0, 0, 237, 0, 0, 0, 484, 0,
	288, 270, 544, 0, 0, 286, 240, 314, 278, 320,
	304, 328, 282, 279, 180, 305, 209, 251, 191, 193,
	205, 212, 214, 216, 217, 260, 261, 273, 293, 307,
	308, 309, 208, 201, 287, 202, 226, 203, 181, 295,
	204, 183, 274, 312, 0, 222, 283, 247, 184, 246,
	275, 311, 310, 192, 336, 1120, 1121, 347, 0, 348,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 341, 220, 177, 178,
	324, 529, 266, 0, 543, 524, 526, 527, 530, 534,
	535, 536, 537, 538, 540, 542, 546, 291, 0, 0,
	0, 0, 0, 231, 272, 0, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	322, 334, 351, 354, 0, 0, 0, 182, 353, 0,
	0, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 488, 256, 257, 258,
	259, 532, 0, 199, 352, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 219, 225, 0, 227, 198, 271, 221,
	331, 234, 0, 0, 0, 0, 0, 0, 0, 263,
	230, 296, 235, 241, 284, 330, 269, 289, 196, 321,
	297, 245, 0, 0, 554, 528, 553, 555, 556, 552,
	557, 558, 539, 450, 0, 493, 550, 549, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 239, 0, 280, 218, 517, 497,
	498, 499, 449, 500, 495, 496, 518, 491, 514, 515,
	473, 476, 501, 513, 502, 516, 519, 520, 559, 560,
	508, 561, 505, 521, 512, 511, 503, 492, 522, 523,
	477, 475, 506, 507, 494, 306, 486, 0, 337, 338,
	339, 323, 0, 210, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 447,
	0, 0, 0, 213, 0, 0, 238, 0, 0, 0,
	478, 0, 0, 298, 252, 0, 0, 0, 0, 533,
	541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 510, 509, 458, 467, 0,
	0, 194, 459, 0, 466, 460, 464, 463, 461, 462,
	0, 525, 0, 0, 0, 0, 0, 0, 431, 444,
	0, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 487,
	0, 443, 0, 0, 489, 468, 469, 0, 0, 185,
	303, 319, 195, 294, 332, 200, 301, 190, 267, 290,
	0, 0, 187, 317, 300, 249, 232, 233, 186, 0,
	285, 211, 224, 207, 265, 465, 485, 490, 206, 547,
	483, 327, 189, 0, 326, 264, 313, 318, 250, 244,
	188, 315, 248, 243, 236, 215, 548, 228, 276, 242,
	277, 229, 254, 253, 255, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 329, 0, 0,
	531, 0, 0, 0, 302, 0, 0, 237, 0, 0,
	0, 484, 0, 288, 270, 544, 432, 0, 286, 240,
	314, 278, 320, 304, 328, 282, 279, 180, 305, 209,
	251, 191, 193, 205, 212, 214, 216, 217, 260, 261,
	273, 293, 307, 308, 309, 208, 201, 287, 202, 226,
	203, 181, 295, 204, 183, 274, 312, 0, 222, 283,
	247, 184, 246, 275, 311, 310, 192, 336, 342, 343,
	347, 0, 348, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 341,
	220, 177, 178, 324, 529, 266, 0, 543, 524, 526,
	527, 530, 534, 535, 536, 537, 538, 540, 542, 546,
	291, 0, 0, 0, 0, 0, 231, 272, 0, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 322, 334, 351, 354, 0, 0, 0,
	182, 353, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 488,
	256, 257, 258, 259, 532, 0, 199, 352, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 219, 225, 0, 227,
	198, 271, 221, 331, 234, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 296, 235, 241, 284, 330, 269,
	289, 196, 321, 297, 245, 0, 0, 554, 528, 553,
	555, 556, 552, 557, 558, 539, 450, 0, 493, 550,
	549, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 239, 0, 280,
	218, 517, 497, 498, 499, 449, 500, 495, 496, 518,
	491, 514, 515, 473, 476, 501, 513, 502, 516, 519,
	520, 559, 560, 508, 561, 505, 521, 512, 511, 503,
	492, 522, 523, 477, 475, 506, 507, 494, 306, 486,
	0, 337, 338, 339, 323, 0, 210, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 447, 0, 0, 0, 213, 0, 0, 238,
	0, 0, 0, 478, 0, 0, 298, 252, 0, 0,
	0, 0, 533, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 440, 0, 0, 471, 510, 509,
	458, 467, 0, 0, 194, 459, 0, 466, 460, 464,
	463, 461, 462, 0, 525, 0, 0, 0, 0, 0,
	0, 0, 444, 0, 448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 441, 442, 0, 0,
	0, 0, 487, 0, 443, 0, 0, 489, 468, 469,
	0, 0, 185, 303, 319, 195, 294, 332, 200, 301,
	190, 267, 290, 0, 0, 187, 317, 300, 249, 232,
	233, 186, 0, 285, 211, 224, 207, 265, 465, 485,
	490, 206, 547, 483, 327, 189, 0, 326, 264, 313,
	318, 250, 244, 188, 315, 248, 243, 236, 215, 548,
	228, 276, 242, 277, 229, 254, 253, 255, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 481, 0, 0,
	329, 0, 0, 531, 0, 0, 0, 302, 0, 0,
	237, 0, 0, 0, 484, 0, 288, 270, 544, 0,
	0, 286, 240, 314, 278, 320, 304, 328, 282, 279,
	180, 305, 209, 251, 191, 193, 205, 212, 214, 216,
	217, 260, 261, 273, 293, 307, 308, 309, 208, 201,
	287, 202, 226, 203, 181, 295, 204, 183, 274, 312,
	0, 222, 283, 247, 184, 246, 275, 311, 310, 192,
	336, 342, 343, 347, 0, 348, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 341, 220, 177, 178, 324, 529, 266, 0,
	543, 524, 526, 527, 530, 534, 535, 536, 537, 538,
	540, 542, 546, 291, 0, 0, 0, 0, 0, 231,
	272, 0, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 322, 334, 351, 354,
	0, 0, 0, 182, 353, 0, 0, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 488, 256, 257, 258, 259, 532, 0, 199,
	352, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 219,
	225, 0, 227, 198, 271, 221, 331, 234, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 296, 235, 241,
	284, 330, 269, 289, 196, 321, 297, 245, 0, 0,
	554, 528, 553, 555, 556, 552, 557, 558, 539, 450,
	0, 493, 550, 549, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	239, 0, 280, 218, 517, 497, 498, 499, 449, 500,
	495, 496, 518, 491, 514, 515, 473, 476, 501, 513,
	502, 516, 519, 520, 559, 560, 508, 561, 505, 521,
	512, 511, 503, 492, 522, 523, 477, 475, 506, 507,
	494, 306, 0, 0, 337, 338, 339, 323, 0, 210,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	880, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 298,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	868, 0, 0, 0, 0, 185, 303, 319, 195, 294,
	332, 200, 301, 190, 267, 290, 0, 0, 1717, 1719,
	1720, 1721, 1722, 1723, 1724, 0, 1728, 1725, 1726, 1727,
	265, 0, 1712, 1713, 1714, 1715, 866, 1699, 1718, 0,
	1700, 264, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 881, 1716, 276, 242, 277, 229, 254, 253,
	255, 891, 893, 895, 897, 900, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	302, 0, 0, 237, 0, 0, 0, 1711, 0, 288,
	270, 0, 0, 0, 286, 240, 314, 278, 320, 304,
	328, 282, 279, 180, 305, 209, 251, 191, 193, 205,
	212, 214, 216, 217, 260, 261, 273, 293, 307, 308,
	309, 208, 201, 287, 202, 226, 203, 181, 295, 204,
	183, 274, 312, 0, 222, 283, 247, 184, 246, 275,
	311, 310, 192, 336, 342, 343, 347, 0, 348, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 341, 220, 177, 178, 324,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 340, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 231, 272, 0, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 322,
	334, 351, 354, 0, 0, 0, 182, 353, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 349, 256, 257, 258, 259,
	223, 0, 199, 352, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 219, 225, 0, 227, 198, 271, 221, 331,
	234, 0, 0, 0, 0, 0, 0, 0, 263, 230,
	296, 235, 241, 284, 330, 269, 289, 196, 321, 297,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 890, 239, 0, 280, 218, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 0,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 0, 0, 0, 337, 338, 339,
	323, 0, 210, 130, 306, 38, 120, 100, 0, 0,
	0, 0, 0, 0, 0, 268, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 298, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 303,
	319, 195, 294, 332, 200, 301, 190, 267, 290, 0,
	0, 187, 317, 300, 249, 232, 233, 186, 0, 285,
	211, 224, 207, 265, 0, 316, 344, 206, 335, 0,
	327, 189, 0, 326, 264, 313, 318, 250, 244, 188,
	315, 248, 243, 236, 215, 0, 228, 276, 242, 277,
	229, 254, 253, 255, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 302, 0, 0, 237, 0, 0, 0,
	345, 0, 288, 270, 0, 0, 0, 286, 240, 314,
	278, 320, 304, 328, 282, 279, 180, 305, 209, 251,
	191, 193, 205, 212, 214, 216, 217, 260, 261, 273,
	293, 307, 308, 309, 208, 201, 287, 202, 226, 203,
	181, 295, 204, 183, 274, 312, 0, 222, 283, 247,
	184, 246, 275, 311, 310, 192, 336, 342, 343, 347,
	0, 348, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 341, 220,
	177, 178, 324, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 340, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 231, 272, 0, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 322, 334, 351, 354, 0, 0, 0, 182,
	353, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 349, 256,
	257, 258, 259, 367, 369, 199, 352, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 219, 225, 0, 227, 198,
	271, 221, 331, 234, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 296, 235, 241, 284, 330, 269, 289,
	196, 321, 297, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 39, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 239, 101, 280, 218,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 0, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 306, 0, 0,
	337, 338, 339, 323, 0, 210, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 298, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 2138, 2141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 303, 319, 195, 294, 332, 200, 301, 190,
	267, 290, 0, 0, 187, 317, 300, 249, 232, 233,
	186, 0, 285, 211, 224, 207, 265, 0, 316, 344,
	206, 335, 0, 327, 189, 0, 326, 264, 313, 318,
	250, 244, 188, 315, 248, 243, 236, 215, 0, 228,
	276, 242, 277, 229, 254, 253, 255, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2142, 329,
	0, 0, 0, 2135, 0, 2134, 302, 2136, 2139, 237,
	0, 0, 0, 345, 0, 288, 270, 0, 0, 0,
	286, 240, 314, 278, 320, 304, 328, 282, 279, 180,
	305, 209, 251, 191, 193, 205, 212, 214, 216, 217,
	260, 261, 273, 293, 307, 308, 309, 208, 201, 287,
	202, 226, 203, 181, 295, 204, 183, 274, 312, 2140,
	222, 283, 247, 184, 246, 275, 311, 310, 192, 336,
	342, 343, 347, 0, 348, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 341, 220, 177, 178, 324, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 340, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 231, 272,
	0, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 322, 334, 351, 354, 0,
	0, 0, 182, 353, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 349, 256, 257, 258, 259, 223, 0, 199, 352,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 219, 225,
	0, 227, 198, 271, 221, 331, 234, 0, 0, 0,
	0, 0, 0, 0, 263, 230, 296, 235, 241, 284,
	330, 269, 289, 196, 321, 297, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 239,
	0, 280, 218, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 0, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	306, 0, 0, 337, 338, 339, 323, 0, 210, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1373, 0, 0, 0, 0, 213, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 298, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 1374, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 772,
	773, 774, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 303, 319, 195, 294, 332,
	200, 301, 190, 267, 290, 0, 0, 187, 317, 300,
	249, 232, 233, 186, 0, 285, 211, 224, 207, 265,
	0, 316, 344, 206, 335, 0, 327, 189, 0, 326,
	264, 313, 318, 250, 244, 188, 315, 248, 243, 236,
	215, 0, 228, 276, 242, 277, 229, 254, 253, 255,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 237, 0, 0, 0, 345, 0, 288, 270,
	0, 0, 0, 286, 240, 314, 278, 320, 304, 328,
	282, 279, 180, 305, 209, 251, 191, 193, 205, 212,
	214, 216, 217, 260, 261, 273, 293, 307, 308, 309,
	208, 201, 287, 202, 226, 203, 181, 295, 204, 183,
	274, 312, 0, 222, 283, 247, 184, 246, 275, 311,
	310, 192, 336, 342, 343, 347, 0, 348, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 341, 220, 177, 178, 324, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	340, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 231, 272, 0, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 322, 334,
	351, 354, 0, 0, 0, 182, 353, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 349, 256, 257, 258, 259, 223,
	0, 199, 352, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 219, 225, 0, 227, 198, 271, 221, 331, 234,
	0, 0, 0, 0, 0, 0, 0, 263, 230, 296,
	235, 241, 284, 330, 269, 289, 196, 321, 297, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 239, 0, 280, 218, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 0, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 306, 0, 0, 337, 338, 339, 323,
	0, 210, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 653, 0, 238, 0, 0, 0, 0, 0,
	0, 298, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 661, 662, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 303, 319,
	195, 294, 332, 200, 301, 190, 267, 290, 0, 0,
	187, 317, 300, 249, 232, 233, 186, 0, 285, 211,
	224, 207, 265, 0, 316, 344, 206, 335, 639, 327,
	189, 638, 326, 264, 313, 318, 250, 244, 188, 315,
	248, 243, 236, 215, 0, 228, 276, 242, 277, 229,
	254, 253, 255, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 302, 0, 0, 237, 0, 0, 0, 345,
	0, 288, 270, 0, 0, 0, 286, 240, 314, 278,
	320, 304, 328, 651, 279, 180, 305, 209, 251, 191,
	193, 205, 212, 214, 216, 217, 260, 261, 273, 293,
	307, 308, 309, 208, 201, 287, 202, 226, 203, 181,
	295, 204, 183, 274, 312, 0, 222, 283, 247, 184,
	246, 275, 311, 310, 192, 336, 342, 343, 347, 0,
	348, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 341, 220, 177,
	178, 324, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 340, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 231, 272, 0, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 322, 334, 351, 354, 0, 0, 0, 182, 353,
	0, 0, 0, 0, 0, 0, 652, 325, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 655, 256, 257,
	258, 259, 223, 0, 199, 352, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 219, 225, 0, 227, 198, 271,
	221, 331, 234, 0, 0, 0, 0, 0, 0, 0,
	663, 658, 659, 235, 241, 284, 330, 269, 289, 196,
	321, 297, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 239, 0, 280, 218, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 0, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 130, 306, 0, 337,
	338, 339, 323, 0, 210, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 298, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 1394, 0, 137, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 303, 319, 195, 294, 332, 200, 301, 190,
	267, 290, 0, 0, 187, 317, 300, 249, 232, 233,
	186, 0, 285, 211, 224, 207, 265, 0, 316, 344,
	206, 335, 0, 327, 189, 0, 326, 264, 313, 318,
	250, 244, 188, 315, 248, 243, 236, 215, 0, 228,
	276, 242, 277, 229, 254, 253, 255, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 302, 0, 0, 237,
	0, 0, 0, 345, 0, 288, 270, 0, 0, 0,
	286, 240, 314, 278, 320, 304, 328, 282, 279, 180,
	305, 209, 251, 191, 193, 205, 212, 214, 216, 217,
	260, 261, 273, 293, 307, 308, 309, 208, 201, 287,
	202, 226, 203, 181, 295, 204, 183, 274, 312, 0,
	222, 283, 247, 184, 246, 275, 311, 310, 192, 336,
	342, 343, 347, 0, 348, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 341, 220, 177, 178, 324, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 340, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 231, 272,
	0, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 322, 334, 351, 354, 0,
	0, 0, 182, 353, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 349, 256, 257, 258, 259, 223, 0, 199, 352,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 219, 225,
	0, 227, 198, 271, 221, 331, 234, 0, 0, 0,
	0, 0, 0, 0, 263, 230, 296, 235, 241, 284,
	330, 269, 289, 196, 321, 297, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 239,
	101, 280, 218, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 0, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	130, 306, 0, 337, 338, 339, 323, 0, 210, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 298,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 1385, 0,
	137, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 303, 319, 195, 294,
	332, 200, 301, 190, 267, 290, 0, 0, 187, 317,
	300, 249, 232, 233, 186, 0, 285, 211, 224, 207,
	265, 0, 316, 344, 206, 335, 0, 327, 189, 0,
	326, 264, 313, 318, 250, 244, 188, 315, 248, 243,
	236, 215, 0, 228, 276, 242, 277, 229, 254, 253,
	255, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	302, 0, 0, 237, 0, 0, 0, 345, 0, 288,
	270, 0, 0, 0, 286, 240, 314, 278, 320, 304,
	328, 282, 279, 180, 305, 209, 251, 191, 193, 205,
	212, 214, 216, 217, 260, 261, 273, 293, 307, 308,
	309, 208, 201, 287, 202, 226, 203, 181, 295, 204,
	183, 274, 312, 0, 222, 283, 247, 184, 246, 275,
	311, 310, 192, 336, 342, 343, 347, 0, 348, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 341, 220, 177, 178, 324,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 340, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 231, 272, 0, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 322,
	334, 351, 354, 0, 0, 0, 182, 353, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 349, 256, 257, 258, 259,
	223, 0, 199, 352, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 219, 225, 0, 227, 198, 271, 221, 331,
	234, 0, 0, 0, 0, 0, 0, 0, 263, 230,
	296, 235, 241, 284, 330, 269, 289, 196, 321, 297,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 239, 101, 280, 218, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 0,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 306, 0, 0, 337, 338, 339,
	323, 0, 210, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 298, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 661, 662, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 303,
	319, 195, 294, 332, 200, 301, 190, 267, 290, 0,
	0, 187, 317, 300, 249, 232, 233, 186, 0, 285,
	211, 224, 207, 265, 0, 316, 344, 206, 335, 639,
	327, 189, 638, 326, 264, 313, 318, 250, 244, 188,
	315, 248, 243, 236, 215, 0, 228, 276, 242, 277,
	229, 254, 253, 255, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 302, 0, 0, 237, 0, 0, 0,
	345, 0, 288, 270, 0, 0, 0, 286, 240, 314,
	278, 320, 304, 328, 282, 279, 180, 305, 209, 251,
	191, 193, 205, 212, 214, 216, 217, 260, 261, 273,
	293, 307, 308, 309, 208, 201, 287, 202, 226, 203,
	181, 295, 204, 183, 274, 312, 0, 222, 283, 247,
	184, 246, 275, 311, 310, 192, 336, 342, 343, 347,
	0, 348, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 341, 220,
	177, 178, 324, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 340, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 231, 272, 0, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 322, 334, 351, 354, 0, 0, 0, 182,
	353, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 349, 256,
	257, 258, 259, 223, 0, 199, 352, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 219, 225, 0, 227, 198,
	271, 221, 331, 234, 0, 0, 0, 0, 0, 0,
	0, 663, 658, 659, 235, 241, 284, 330, 269, 289,
	196, 321, 297, 660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 239, 0, 280, 218,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 0, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 130, 306, 0,
	337, 338, 339, 323, 0, 210, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 298, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 303, 319, 195, 294, 332, 200, 301,
	190, 267, 290, 0, 0, 187, 317, 300, 249, 232,
	233, 186, 0, 285, 211, 224, 207, 265, 0, 316,
	344, 206, 335, 0, 327, 189, 0, 326, 264, 313,
	318, 250, 244, 188, 315, 248, 243, 236, 215, 0,
	228, 276, 242, 277, 229, 254, 253, 255, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 302, 0, 0,
	237, 0, 0, 0, 345, 0, 288, 270, 0, 0,
	0, 286, 240, 314, 278, 320, 304, 328, 282, 279,
	180, 305, 209, 251, 191, 193, 205, 212, 214, 216,
	217, 260, 261, 273, 293, 307, 308, 309, 208, 201,
	287, 202, 226, 203, 181, 295, 204, 183, 274, 312,
	0, 222, 283, 247, 184, 246, 275, 311, 310, 192,
	336, 342, 343, 347, 0, 348, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 341, 220, 177, 178, 324, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 340, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 231,
	272, 0, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 322, 334, 351, 354,
	0, 0, 0, 182, 353, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 349, 256, 257, 258, 259, 223, 0, 199,
	352, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 219,
	225, 0, 227, 198, 271, 221, 331, 234, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 296, 235, 241,
	284, 330, 269, 289, 196, 321, 297, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	239, 101, 280, 218, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 0, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 306, 0, 0, 337, 338, 339, 323, 0, 210,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	1018, 0, 238, 0, 0, 0, 0, 0, 0, 298,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 1016, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1014, 0, 0, 0, 0, 185, 303, 319, 195, 294,
	332, 200, 301, 190, 267, 290, 0, 0, 187, 317,
	300, 249, 232, 233, 186, 0, 285, 211, 224, 207,
	265, 0, 316, 344, 206, 335, 0, 327, 189, 0,
	326, 264, 313, 318, 250, 244, 188, 315, 248, 243,
	236, 215, 0, 228, 276, 242, 277, 229, 254, 253,
	255, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	302, 0, 0, 237, 0, 0, 0, 345, 0, 288,
	270, 0, 0, 0, 286, 240, 314, 278, 320, 304,
	328, 282, 279, 180, 305, 209, 251, 191, 193, 205,
	212, 214, 216, 217, 260, 261, 273, 293, 307, 308,
	309, 208, 201, 287, 202, 226, 203, 181, 295, 204,
	183, 274, 312, 0, 222, 283, 247, 184, 246, 275,
	311, 310, 192, 336, 342, 343, 347, 0, 348, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 341, 220, 177, 178, 324,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 340, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 231, 272, 0, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 322,
	334, 351, 354, 0, 0, 0, 182, 353, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 349, 256, 257, 258, 259,
	223, 0, 199, 352, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 219, 225, 0, 227, 198, 271, 221, 331,
	234, 0, 0, 0, 0, 0, 0, 0, 263, 230,
	296, 235, 241, 284, 330, 269, 289, 196, 321, 297,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 239, 0, 280, 218, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 0,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 306, 0, 0, 337, 338, 339,
	323, 0, 210, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 1012, 0, 238, 0, 0, 0, 0,
	0, 0, 298, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 1016, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1014, 0, 0, 0, 0, 185, 303,
	319, 195, 294, 332, 200, 301, 190, 267, 290, 0,
	0, 187, 317, 300, 249, 232, 233, 186, 0, 285,
	211, 224, 207, 265, 0, 316, 344, 206, 335, 0,
	327, 189, 0, 326, 264, 313, 318, 250, 244, 188,
	315, 248, 243, 236, 215, 0, 228, 276, 242, 277,
	229, 254, 253, 255, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 302, 0, 0, 237, 0, 0, 0,
	345, 0, 288, 270, 0, 0, 0, 286, 240, 314,
	278, 320, 304, 328, 282, 279, 180, 305, 209, 251,
	191, 193, 205, 212, 214, 216, 217, 260, 261, 273,
	293, 307, 308, 309, 208, 201, 287, 202, 226, 203,
	181, 295, 204, 183, 274, 312, 0, 222, 283, 247,
	184, 246, 275, 311, 310, 192, 336, 342, 343, 347,
	0, 348, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 341, 220,
	177, 178, 324, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 340, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 231, 272, 0, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 322, 334, 351, 354, 0, 0, 0, 182,
	353, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 349, 256,
	257, 258, 259, 223, 0, 199, 352, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 219, 225, 0, 227, 198,
	271, 221, 331, 234, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 296, 235, 241, 284, 330, 269, 289,
	196, 321, 297, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 239, 0, 280, 218,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 0, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 306, 0, 0,
	337, 338, 339, 323, 0, 210, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 298, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2643, 0, 137, 510, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 303, 319, 195, 294, 332, 200, 301, 190,
	267, 290, 0, 0, 187, 317, 300, 249, 232, 233,
	186, 0, 285, 211, 224, 207, 265, 0, 316, 344,
	206, 335, 0, 327, 189, 0, 326, 264, 313, 318,
	250, 244, 188, 315, 248, 243, 236, 215, 0, 228,
	276, 242, 277, 229, 254, 253, 255, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 302, 0, 0, 237,
	0, 0, 0, 345, 0, 288, 270, 0, 0, 0,
	286, 240, 314, 278, 320, 304, 328, 282, 279, 180,
	305, 209, 251, 191, 193, 205, 212, 214, 216, 217,
	260, 261, 273, 293, 307, 308, 309, 208, 201, 287,
	202, 226, 203, 181, 295, 204, 183, 274, 312, 0,
	222, 283, 247, 184, 246, 275, 311, 310, 192, 336,
	342, 343, 347, 0, 348, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 341, 220, 177, 178, 324, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 340, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 231, 272,
	0, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 322, 334, 351, 354, 0,
	0, 0, 182, 353, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 349, 256, 257, 258, 259, 223, 0, 199, 352,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 219, 225,
	0, 227, 198, 271, 221, 331, 234, 0, 0, 0,
	0, 0, 0, 0, 263, 230, 296, 235, 241, 284,
	330, 269, 289, 196, 321, 297, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 239,
	0, 280, 218, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 0, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	306, 0, 0, 337, 338, 339, 323, 0, 210, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 298, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 1016, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1014,
	0, 0, 0, 0, 185, 303, 319, 195, 294, 332,
	200, 301, 190, 267, 290, 0, 0, 187, 317, 300,
	249, 232, 233, 186, 0, 285, 211, 224, 207, 265,
	0, 316, 344, 206, 335, 0, 327, 189, 0, 326,
	264, 313, 318, 250, 244, 188, 315, 248, 243, 236,
	215, 0, 228, 276, 242, 277, 229, 254, 253, 255,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 237, 0, 0, 0, 345, 0, 288, 270,
	0, 0, 0, 286, 240, 314, 278, 320, 304, 328,
	282, 279, 180, 305, 209, 251, 191, 193, 205, 212,
	214, 216, 217, 260, 261, 273, 293, 307, 308, 309,
	208, 201, 287, 202, 226, 203, 181, 295, 204, 183,
	274, 312, 0, 222, 283, 247, 184, 246, 275, 311,
	310, 192, 336, 342, 343, 347, 0, 348, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 341, 220, 177, 178, 324, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	340, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 231, 272, 0, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 322, 334,
	351, 354, 0, 0, 0, 182, 353, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 349, 256, 257, 258, 259, 223,
	0, 199, 352, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 219, 225, 0, 227, 198, 271, 221, 331, 234,
	0, 0, 0, 0, 0, 0, 0, 263, 230, 296,
	235, 241, 284, 330, 269, 289, 196, 321, 297, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 239, 0, 280, 218, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 0, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 306, 0, 0, 337, 338, 339, 323,
	0, 210, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 298, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 1016, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2275, 0, 0, 0, 0, 185, 303, 319,
	195, 294, 332, 200, 301, 190, 267, 290, 0, 0,
	187, 317, 300, 249, 232, 233, 186, 0, 285, 211,
	224, 207, 265, 0, 316, 344, 206, 335, 0, 327,
	189, 0, 326, 264, 313, 318, 250, 244, 188, 315,
	248, 243, 236, 215, 0, 228, 276, 242, 277, 229,
	254, 253, 255, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 302, 0, 0, 237, 0, 0, 0, 345,
	0, 288, 270, 0, 0, 0, 286, 240, 314, 278,
	320, 304, 328, 282, 279, 180, 305, 209, 251, 191,
	193, 205, 212, 214, 216, 217, 260, 261, 273, 293,
	307, 308, 309, 208, 201, 287, 202, 226, 203, 181,
	295, 204, 183, 274, 312, 0, 222, 283, 247, 184,
	246, 275, 311, 310, 192, 336, 342, 343, 347, 0,
	348, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 341, 220, 177,
	178, 324, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 340, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 231, 272, 0, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 322, 334, 351, 354, 0, 0, 0, 182, 353,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 349, 256, 257,
	258, 259, 223, 0, 199, 352, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 219, 225, 0, 227, 198, 271,
	221, 331, 234, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 296, 235, 241, 284, 330, 269, 289, 196,
	321, 297, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 239, 0, 280, 218, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 0, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 306, 0, 0, 337,
	338, 339, 323, 0, 210, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 1811, 0, 238, 0, 0,
	0, 0, 0, 0, 298, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 1016, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 303, 319, 195, 294, 332, 200, 301, 190, 267,
	290, 0, 0, 187, 317, 300, 249, 232, 233, 186,
	0, 285, 211, 224, 207, 265, 0, 316, 344, 206,
	335, 0, 327, 189, 0, 326, 264, 313, 318, 250,
	244, 188, 315, 248, 243, 236, 215, 0, 228, 276,
	242, 277, 229, 254, 253, 255, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 302, 0, 0, 237, 0,
	0, 0, 345, 0, 288, 270, 0, 0, 0, 286,
	240, 314, 278, 320, 304, 328, 282, 279, 180, 305,
	209, 251, 191, 193, 205, 212, 214, 216, 217, 260,
	261, 273, 293, 307, 308, 309, 208, 201, 287, 202,
	226, 203, 181, 295, 204, 183, 274, 312, 0, 222,
	283, 247, 184, 246, 275, 311, 310, 192, 336, 342,
	343, 347, 0, 348, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	341, 220, 177, 178, 324, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 340, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 231, 272, 0,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 322, 334, 351, 354, 0, 0,
	0, 182, 353, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	349, 256, 257, 258, 259, 223, 0, 199, 352, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 219, 225, 0,
	227, 198, 271, 221, 331, 234, 0, 0, 0, 0,
	0, 0, 0, 263, 230, 296, 235, 241, 284, 330,
	269, 289, 196, 321, 297, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 239, 0,
	280, 218, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 0, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 306,
	0, 0, 337, 338, 339, 323, 0, 210, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 298, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2748, 0, 137, 0,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 303, 319, 195, 294, 332, 200,
	301, 190, 267, 290, 0, 0, 187, 317, 300, 249,
	232, 233, 186, 0, 285, 211, 224, 207, 265, 0,
	316, 344, 206, 335, 0, 327, 189, 0, 326, 264,
	313, 318, 250, 244, 188, 315, 248, 243, 236, 215,
	0, 228, 276, 242, 277, 229, 254, 253, 255, 0,
	0, 0, 0, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 302, 0,
	0, 237, 0, 0, 0, 345, 0, 288, 270, 0,
	0, 0, 286, 240, 314, 278, 320, 304, 328, 282,
	279, 180, 305, 209, 251, 191, 193, 205, 212, 214,
	216, 217, 260, 261, 273, 293, 307, 308, 309, 208,
	201, 287, 202, 226, 203, 181, 295, 204, 183, 274,
	312, 0, 222, 283, 247, 184, 246, 275, 311, 310,
	192, 336, 342, 343, 347, 0, 348, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 341, 220, 177, 178, 324, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 340,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	231, 272, 0, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 322, 334, 351,
	354, 0, 0, 0, 182, 353, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 349, 256, 257, 258, 259, 223, 0,
	199, 352, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	219, 225, 0, 227, 198, 271, 221, 331, 234, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 296, 235,
	241, 284, 330, 269, 289, 196, 321, 297, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 239, 0, 280, 218, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 0, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 306, 0, 0, 337, 338, 339, 323, 0,
	210, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	298, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 510, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 303, 319, 195,
	294, 332, 200, 301, 190, 267, 290, 0, 0, 187,
	317, 300, 249, 232, 233, 186, 0, 285, 211, 224,
	207, 265, 0, 316, 344, 206, 335, 0, 327, 189,
	0, 326, 264, 313, 318, 250, 244, 188, 315, 248,
	243, 236, 215, 0, 228, 276, 242, 277, 229, 254,
	253, 255, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 302, 0, 0, 237, 0, 0, 0, 345, 0,
	288, 270, 0, 0, 0, 286, 240, 314, 278, 320,
	304, 328, 282, 279, 180, 305, 209, 251, 191, 193,
	205, 212, 214, 216, 217, 260, 261, 273, 293, 307,
	308, 309, 208, 201, 287, 202, 226, 203, 181, 295,
	204, 183, 274, 312, 0, 222, 283, 247, 184, 246,
	275, 311, 310, 192, 336, 342, 343, 347, 0, 348,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 341, 220, 177, 178,
	324, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 340, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 231, 272, 0, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	322, 334, 351, 354, 0, 0, 0, 182, 353, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 349, 256, 257, 258,
	259, 223, 0, 199, 352, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 219, 225, 0, 227, 198, 271, 221,
	331, 234, 0, 0, 0, 0, 0, 0, 0, 263,
	230, 296, 235, 241, 284, 330, 269, 289, 196, 321,
	297, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 239, 0, 280, 218, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	0, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 306, 0, 0, 337, 338,
	339, 323, 0, 210, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 298, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2657, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	303, 319, 195, 294, 332, 200, 301, 190, 267, 290,
	0, 0, 187, 317, 300, 249, 232, 233, 186, 0,
	285, 211, 224, 207, 265, 0, 316, 344, 206, 335,
	0, 327, 189, 0, 326, 264, 313, 318, 250, 244,
	188, 315, 248, 243, 236, 215, 0, 228, 276, 242,
	277, 229, 254, 253, 255, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 237, 0, 0,
	0, 345, 0, 288, 270, 0, 0, 0, 286, 240,
	314, 278, 320, 304, 328, 282, 279, 180, 305, 209,
	251, 191, 193, 205, 212, 214, 216, 217, 260, 261,
	273, 293, 307, 308, 309, 208, 201, 287, 202, 226,
	203, 181, 295, 204, 183, 274, 312, 0, 222, 283,
	247, 184, 246, 275, 311, 310, 192, 336, 342, 343,
	347, 0, 348, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 341,
	220, 177, 178, 324, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 340, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 231, 272, 0, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 322, 334, 351, 354, 0, 0, 0,
	182, 353, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 349,
	256, 257, 258, 259, 223, 0, 199, 352, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 219, 225, 0, 227,
	198, 271, 221, 331, 234, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 296, 235, 241, 284, 330, 269,
	289, 196, 321, 297, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 239, 0, 280,
	218, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 0, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 306, 0,
	0, 337, 338, 339, 323, 0, 210, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 298, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2388, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 303, 319, 195, 294, 332, 200, 301,
	190, 267, 290, 0, 0, 187, 317, 300, 249, 232,
	233, 186, 0, 285, 211, 224, 207, 265, 0, 316,
	344, 206, 335, 0, 327, 189, 0, 326, 264, 313,
	318, 250, 244, 188, 315, 248, 243, 236, 215, 0,
	228, 276, 242, 277, 229, 254, 253, 255, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 302, 0, 0,
	237, 0, 0, 0, 345, 0, 288, 270, 0, 0,
	0, 286, 240, 314, 278, 320, 304, 328, 282, 279,
	180, 305, 209, 251, 191, 193, 205, 212, 214, 216,
	217, 260, 261, 273, 293, 307, 308, 309, 208, 201,
	287, 202, 226, 203, 181, 295, 204, 183, 274, 312,
	0, 222, 283, 247, 184, 246, 275, 311, 310, 192,
	336, 342, 343, 347, 0, 348, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 341, 220, 177, 178, 324, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 340, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 231,
	272, 0, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 322, 334, 351, 354,
	0, 0, 0, 182, 353, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 349, 256, 257, 258, 259, 223, 0, 199,
	352, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 219,
	225, 0, 227, 198, 271, 221, 331, 234, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 296, 235, 241,
	284, 330, 269, 289, 196, 321, 297, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	239, 0, 280, 218, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 0, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 306, 0, 0, 337, 338, 339, 323, 0, 210,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 298,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 303, 319, 195, 294,
	332, 200, 301, 190, 267, 290, 0, 0, 187, 317,
	300, 249, 232, 233, 186, 0, 285, 211, 224, 207,
	265, 0, 316, 344, 206, 335, 0, 327, 189, 0,
	326, 264, 313, 318, 250, 244, 188, 315, 248, 243,
	236, 215, 0, 228, 276, 242, 277, 229, 254, 253,
	255, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 2584, 0, 0,
	302, 0, 0, 237, 0, 0, 0, 345, 0, 288,
	270, 0, 0, 0, 286, 240, 314, 278, 320, 304,
	328, 282, 279, 180, 305, 209, 251, 191, 193, 205,
	212, 214, 216, 217, 260, 261, 273, 293, 307, 308,
	309, 208, 201, 287, 202, 226, 203, 181, 295, 204,
	183, 274, 312, 0, 222, 283, 247, 184, 246, 275,
	311, 310, 192, 336, 342, 343, 347, 0, 348, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 341, 220, 177, 178, 324,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 340, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 231, 272, 0, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 322,
	334, 351, 354, 0, 0, 0, 182, 353, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 349, 256, 257, 258, 259,
	223, 0, 199, 352, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 219, 225, 0, 227, 198, 271, 221, 331,
	234, 0, 0, 0, 0, 0, 0, 0, 263, 230,
	296, 235, 241, 284, 330, 269, 289, 196, 321, 297,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 239, 0, 280, 218, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 0,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 306, 0, 0, 337, 338, 339,
	323, 0, 210, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 298, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 303,
	319, 195, 294, 332, 200, 301, 190, 267, 290, 0,
	0, 187, 317, 300, 249, 232, 233, 186, 0, 285,
	211, 224, 207, 265, 0, 316, 344, 206, 335, 0,
	327, 189, 0, 326, 264, 313, 318, 250, 244, 188,
	315, 248, 243, 236, 215, 0, 228, 276, 242, 277,
	229, 254, 253, 255, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	2398, 0, 0, 302, 0, 0, 237, 0, 0, 0,
	345, 0, 288, 270, 0, 0, 0, 286, 240, 314,
	278, 320, 304, 328, 282, 279, 180, 305, 209, 251,
	191, 193, 205, 212, 214, 216, 217, 260, 261, 273,
	293, 307, 308, 309, 208, 201, 287, 202, 226, 203,
	181, 295, 204, 183, 274, 312, 0, 222, 283, 247,
	184, 246, 275, 311, 310, 192, 336, 342, 343, 347,
	0, 348, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 341, 220,
	177, 178, 324, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 340, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 231, 272, 0, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 322, 334, 351, 354, 0, 0, 0, 182,
	353, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 349, 256,
	257, 258, 259, 223, 0, 199, 352, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 219, 225, 0, 227, 198,
	271, 221, 331, 234, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 296, 235, 241, 284, 330, 269, 289,
	196, 321, 297, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 239, 0, 280, 218,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 0, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 306, 0, 0,
	337, 338, 339, 323, 0, 210, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 298, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 303, 319, 195, 294, 332, 200, 301, 190,
	267, 290, 0, 0, 187, 317, 300, 249, 232, 233,
	186, 0, 285, 211, 224, 207, 265, 0, 316, 344,
	206, 335, 0, 327, 189, 0, 326, 264, 313, 318,
	250, 244, 188, 315, 248, 243, 236, 215, 0, 228,
	276, 242, 277, 229, 254, 253, 255, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 302, 0, 0, 237,
	0, 0, 0, 345, 0, 288, 270, 0, 0, 0,
	286, 240, 314, 278, 320, 304, 328, 282, 279, 180,
	305, 209, 251, 191, 193, 205, 212, 214, 216, 217,
	260, 261, 273, 293, 307, 308, 309, 208, 201, 287,
	202, 226, 203, 181, 295, 204, 183, 274, 312, 0,
	222, 283, 247, 184, 246, 275, 311, 310, 192, 336,
	342, 343, 347, 0, 348, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 341, 220, 177, 178, 324, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 340, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 231, 272,
	0, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 322, 334, 351, 354, 0,
	0, 0, 182, 353, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 349, 256, 257, 258, 259, 223, 0, 199, 352,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 219, 225,
	0, 227, 198, 271, 221, 331, 234, 0, 0, 0,
	0, 0, 0, 0, 263, 230, 296, 235, 241, 284,
	330, 269, 289, 196, 321, 297, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 239,
	0, 280, 218, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 0, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	306, 0, 0, 337, 338, 339, 323, 0, 210, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 298, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 303, 319, 195, 294, 332,
	200, 301, 190, 267, 290, 0, 0, 187, 317, 300,
	249, 232, 233, 186, 0, 285, 211, 224, 207, 265,
	0, 316, 344, 206, 335, 0, 327, 189, 0, 326,
	264, 313, 318, 250, 244, 188, 315, 248, 243, 236,
	215, 0, 228, 276, 242, 277, 229, 254, 253, 255,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 237, 0, 0, 0, 345, 0, 288, 270,
	0, 0, 0, 286, 240, 314, 278, 320, 304, 328,
	282, 279, 180, 305, 209, 251, 191, 193, 205, 212,
	214, 216, 217, 260, 261, 273, 293, 307, 308, 309,
	208, 201, 287, 202, 226, 203, 181, 295, 204, 183,
	274, 312, 0, 222, 283, 247, 184, 246, 275, 311,
	310, 192, 336, 342, 343, 347, 0, 348, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 341, 220, 177, 178, 324, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	340, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 231, 272, 0, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 322, 334,
	351, 354, 0, 0, 0, 182, 353, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 349, 256, 257, 258, 259, 223,
	0, 199, 352, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 219, 225, 0, 227, 198, 271, 221, 331, 234,
	0, 0, 0, 0, 0, 0, 0, 263, 230, 296,
	235, 241, 284, 330, 269, 289, 196, 321, 297, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 239, 0, 280, 218, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 0, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 306, 0, 0, 337, 338, 339, 323,
	0, 210, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 298, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 303, 319,
	195, 294, 332, 200, 301, 190, 267, 290, 0, 0,
	187, 317, 300, 249, 232, 233, 186, 0, 285, 211,
	224, 207, 265, 0, 316, 344, 206, 335, 0, 327,
	189, 0, 326, 264, 313, 318, 250, 244, 188, 315,
	248, 243, 236, 215, 0, 228, 276, 242, 277, 229,
	254, 253, 255, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 302, 0, 0, 237, 0, 0, 0, 345,
	0, 288, 270, 0, 0, 0, 286, 240, 314, 278,
	320, 304, 328, 282, 279, 180, 305, 209, 251, 191,
	193, 205, 212, 214, 216, 217, 260, 261, 273, 293,
	307, 308, 309, 208, 201, 287, 202, 226, 203, 181,
	295, 204, 183, 274, 312, 0, 222, 283, 247, 184,
	246, 275, 311, 310, 192, 336, 342, 343, 347, 0,
	348, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 341, 220, 177,
	178, 324, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 340, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 231, 272, 0, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 322, 334, 351, 354, 0, 0, 0, 182, 353,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 349, 256, 257,
	258, 259, 223, 0, 199, 352, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 219, 225, 0, 227, 198, 271,
	221, 331, 234, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 296, 235, 241, 284, 330, 269, 289, 196,
	321, 297, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 239, 0, 280, 218, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 0, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 306, 0, 0, 337,
	338, 339, 323, 0, 210, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 298, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 2146, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 303, 319, 195, 294, 332, 200, 301, 190, 267,
	290, 0, 0, 187, 317, 300, 249, 232, 233, 186,
	0, 285, 211, 224, 207, 265, 0, 316, 344, 206,
	335, 0, 327, 189, 0, 326, 264, 313, 318, 250,
	244, 188, 315, 248, 243, 236, 215, 0, 228, 276,
	242, 277, 229, 254, 253, 255, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 302, 0, 0, 237, 0,
	0, 0, 345, 0, 288, 270, 0, 0, 0, 286,
	240, 314, 278, 320, 304, 328, 282, 279, 180, 305,
	209, 251, 191, 193, 205, 212, 214, 216, 217, 260,
	261, 273, 293, 307, 308, 309, 208, 201, 287, 202,
	226, 203, 181, 295, 204, 183, 274, 312, 0, 222,
	283, 247, 184, 246, 275, 311, 310, 192, 336, 342,
	343, 347, 0, 348, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	341, 220, 177, 178, 324, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 340, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 231, 272, 0,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 322, 334, 351, 354, 0, 0,
	0, 182, 353, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	349, 256, 257, 258, 259, 223, 0, 199, 352, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 219, 225, 0,
	227, 198, 271, 221, 331, 234, 0, 0, 0, 0,
	0, 0, 0, 263, 230, 296, 235, 241, 284, 330,
	269, 289, 196, 321, 297, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 239, 0,
	280, 218, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 0, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 306,
	0, 0, 337, 338, 339, 323, 0, 210, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 298, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 1016, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 303, 319, 195, 294, 332, 200,
	301, 190, 267, 290, 0, 0, 187, 317, 300, 249,
	232, 233, 186, 0, 285, 211, 224, 207, 265, 0,
	316, 344, 206, 335, 0, 327, 189, 0, 326, 264,
	313, 318, 250, 244, 188, 315, 248, 243, 236, 215,
	0, 228, 276, 242, 277, 229, 254, 253, 255, 0,
	0, 0, 0, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 302, 0,
	0, 237, 0, 0, 0, 345, 0, 288, 270, 0,
	0, 0, 286, 240, 314, 278, 320, 304, 328, 282,
	279, 180, 305, 209, 251, 191, 193, 205, 212, 214,
	216, 217, 260, 261, 273, 293, 307, 308, 309, 208,
	201, 287, 202, 226, 203, 181, 295, 204, 183, 274,
	312, 0, 222, 283, 247, 184, 246, 275, 311, 310,
	192, 336, 342, 343, 347, 0, 348, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 341, 220, 177, 178, 324, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 340,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	231, 272, 0, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 322, 334, 351,
	354, 0, 0, 0, 182, 353, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 349, 256, 257, 258, 259, 223, 0,
	199, 352, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	219, 225, 0, 227, 198, 271, 221, 331, 234, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 296, 235,
	241, 284, 330, 269, 289, 196, 321, 297, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 239, 0, 280, 218, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 0, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 306, 0, 0, 337, 338, 339, 323, 0,
	210, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	298, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 303, 319, 195,
	294, 332, 200, 301, 190, 267, 290, 0, 0, 187,
	317, 300, 249, 232, 233, 186, 0, 285, 211, 224,
	207, 265, 0, 316, 344, 206, 335, 0, 327, 189,
	0, 326, 264, 313, 318, 250, 244, 188, 315, 248,
	243, 236, 215, 0, 228, 276, 242, 277, 229, 254,
	253, 255, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 302, 0, 0, 237, 0, 0, 0, 345, 0,
	288, 270, 0, 0, 0, 286, 240, 314, 278, 320,
	304, 328, 282, 279, 180, 305, 209, 251, 191, 193,
	205, 212, 214, 216, 217, 260, 261, 273, 293, 307,
	308, 309, 208, 201, 287, 202, 226, 203, 181, 295,
	204, 183, 274, 312, 0, 222, 283, 247, 184, 246,
	275, 311, 310, 192, 336, 342, 343, 347, 0, 348,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 341, 220, 177, 178,
	324, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 340, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 231, 272, 0, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	322, 334, 351, 354, 0, 0, 0, 182, 353, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 349, 256, 257, 258,
	259, 223, 0, 199, 352, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 219, 225, 0, 227, 198, 271, 221,
	331, 234, 0, 0, 0, 0, 0, 0, 0, 263,
	230, 296, 235, 241, 284, 330, 269, 289, 196, 321,
	297, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 239, 0, 280, 218, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	0, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 306, 0, 0, 337, 338,
	339, 323, 0, 210, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 298, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 1820, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	303, 319, 195, 294, 332, 200, 301, 190, 267, 290,
	0, 0, 187, 317, 300, 249, 232, 233, 186, 0,
	285, 211, 224, 207, 265, 0, 316, 344, 206, 335,
	0, 327, 189, 0, 326, 264, 313, 318, 250, 244,
	188, 315, 248, 243, 236, 215, 0, 228, 276, 242,
	277, 229, 254, 253, 255, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 237, 0, 0,
	0, 345, 0, 288, 270, 0, 0, 0, 286, 240,
	314, 278, 320, 304, 328, 282, 279, 180, 305, 209,
	251, 191, 193, 205, 212, 214, 216, 217, 260, 261,
	273, 293, 307, 308, 309, 208, 201, 287, 202, 226,
	203, 181, 295, 204, 183, 274, 312, 0, 222, 283,
	247, 184, 246, 275, 311, 310, 192, 336, 342, 343,
	347, 0, 348, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 341,
	220, 177, 178, 324, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 340, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 231, 272, 0, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 322, 334, 351, 354, 0, 0, 0,
	182, 353, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 349,
	256, 257, 258, 259, 223, 0, 199, 352, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 219, 225, 0, 227,
	198, 271, 221, 331, 234, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 296, 235, 241, 284, 330, 269,
	289, 196, 321, 297, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 239, 0, 280,
	218, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 0, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 0, 0,
	0, 337, 338, 339, 323, 306, 210, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 298, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	303, 319, 195, 294, 332, 200, 301, 190, 267, 290,
	0, 0, 187, 317, 300, 249, 232, 233, 186, 0,
	285, 211, 224, 207, 265, 0, 316, 344, 206, 335,
	0, 327, 189, 0, 326, 264, 313, 318, 250, 244,
	188, 315, 248, 243, 236, 215, 0, 228, 276, 242,
	277, 229, 254, 253, 255, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 237, 0, 0,
	0, 345, 0, 288, 270, 0, 0, 0, 286, 240,
	314, 278, 320, 304, 328, 282, 279, 180, 305, 209,
	251, 191, 193, 205, 212, 214, 216, 217, 260, 261,
	273, 293, 307, 308, 309, 208, 201, 287, 202, 226,
	203, 181, 295, 204, 183, 274, 312, 0, 222, 283,
	247, 184, 246, 275, 311, 310, 192, 336, 342, 343,
	347, 0, 348, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 341,
	220, 177, 178, 324, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 340, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 231, 272, 0, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 322, 334, 351, 354, 0, 0, 0,
	182, 353, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 349,
	256, 257, 258, 259, 223, 0, 199, 352, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 219, 225, 0, 227,
	198, 271, 221, 331, 234, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 296, 235, 241, 284, 330, 269,
	289, 196, 321, 297, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 239, 0, 280,
	218, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 0, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 306, 0,
	0, 337, 338, 339, 323, 0, 210, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 298, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 303, 319, 195, 294, 332, 200, 301,
	190, 267, 290, 0, 0, 187, 317, 300, 249, 232,
	233, 186, 0, 285, 211, 224, 207, 265, 0, 316,
	344, 206, 335, 0, 327, 189, 0, 326, 264, 313,
	318, 250, 244, 188, 315, 248, 243, 236, 215, 0,
	228, 276, 242, 277, 229, 254, 253, 255, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 1730, 0, 0, 0, 302, 0, 0,
	237, 0, 0, 0, 345, 0, 288, 270, 0, 0,
	0, 286, 240, 314, 278, 320, 304, 328, 282, 279,
	180, 305, 209, 251, 191, 193, 205, 212, 214, 216,
	217, 260, 261, 273, 293, 307, 308, 309, 208, 201,
	287, 202, 226, 203, 181, 295, 204, 183, 274, 312,
	0, 222, 283, 247, 184, 246, 275, 311, 310, 192,
	336, 342, 343, 347, 0, 348, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 341, 220, 177, 178, 324, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 340, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 231,
	272, 0, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 322, 334, 351, 354,
	0, 0, 0, 182, 353, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 349, 256, 257, 258, 259, 223, 0, 199,
	352, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 219,
	225, 0, 227, 198, 271, 221, 331, 234, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 296, 235, 241,
	284, 330, 269, 289, 196, 321, 297, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	239, 0, 280, 218, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 0, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 306, 0, 0, 337, 338, 339, 323, 0, 210,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 298,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 303, 319, 195, 294,
	332, 200, 301, 190, 267, 290, 0, 0, 187, 317,
	300, 249, 232, 233, 186, 0, 285, 211, 224, 207,
	265, 0, 316, 344, 206, 335, 0, 327, 189, 0,
	326, 264, 313, 318, 250, 244, 188, 315, 248, 243,
	236, 215, 0, 228, 276, 242, 277, 229, 254, 253,
	255, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	302, 0, 0, 237, 0, 0, 0, 345, 0, 288,
	270, 0, 0, 0, 286, 240, 314, 278, 320, 304,
	328, 282, 279, 180, 305, 209, 251, 191, 193, 205,
	212, 214, 216, 217, 260, 261, 273, 293, 307, 308,
	309, 208, 201, 287, 202, 226, 203, 181, 295, 204,
	183, 274, 312, 0, 222, 283, 247, 184, 246, 275,
	311, 310, 192, 336, 342, 343, 347, 0, 348, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 341, 220, 177, 178, 324,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 340, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 231, 272, 0, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 322,
	334, 351, 354, 0, 0, 0, 182, 353, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 349, 256, 257, 258, 259,
	223, 0, 199, 352, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 219, 225, 0, 227, 198, 271, 221, 331,
	234, 0, 0, 0, 0, 0, 0, 0, 263, 230,
	296, 235, 241, 284, 330, 269, 289, 196, 321, 297,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 0, 0,
	0, 179, 0, 239, 0, 280, 218, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 0,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 306, 0, 0, 337, 338, 339,
	323, 0, 210, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 298, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 303,
	319, 195, 294, 332, 200, 301, 190, 267, 290, 0,
	0, 187, 317, 300, 249, 232, 233, 186, 0, 285,
	211, 224, 207, 265, 0, 316, 344, 206, 335, 0,
	327, 189, 0, 326, 264, 313, 318, 250, 244, 188,
	315, 248, 243, 236, 215, 0, 228, 276, 242, 277,
	229, 254, 253, 255, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 302, 0, 0, 237, 0, 0, 0,
	345, 0, 288, 270, 0, 0, 0, 286, 240, 314,
	278, 320, 304, 328, 385, 279, 180, 305, 209, 251,
	191, 193, 205, 212, 214, 216, 217, 260, 261, 273,
	293, 307, 308, 309, 208, 201, 287, 202, 226, 203,
	181, 295, 204, 183, 274, 312, 0, 222, 283, 247,
	184, 246, 275, 311, 310, 192, 336, 342, 343, 347,
	0, 348, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 341, 220,
	177, 178, 324, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 340, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 231, 272, 0, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 322, 334, 351, 354, 0, 0, 0, 182,
	353, 0, 0, 0, 0, 0, 0, 386, 325, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 349, 256,
	257, 258, 259, 223, 0, 199, 352, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 219, 225, 0, 227, 198,
	271, 221, 331, 234, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 296, 235, 241, 284, 330, 269, 289,
	196, 321, 297, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 239, 0, 280, 218,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 0, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 306, 0, 0,
	337, 338, 339, 323, 0, 210, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 298, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 303, 319, 195, 294, 332, 200, 301, 190,
	267, 290, 0, 0, 187, 317, 300, 249, 232, 233,
	186, 0, 285, 211, 224, 207, 265, 0, 316, 344,
	206, 335, 0, 327, 189, 0, 326, 264, 313, 318,
	250, 244, 188, 315, 248, 243, 236, 215, 0, 228,
	276, 242, 277, 229, 254, 253, 255, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 329,
	0, 0, 0, 0, 0, 0, 302, 0, 0, 237,
	0, 0, 0, 345, 0, 288, 270, 0, 0, 0,
	286, 240, 314, 278, 320, 304, 328, 282, 279, 180,
	305, 209, 251, 191, 193, 205, 212, 214, 216, 217,
	260, 261, 273, 293, 307, 308, 309, 208, 201, 287,
	202, 226, 203, 181, 295, 204, 183, 274, 312, 0,
	222, 283, 247, 184, 246, 275, 311, 310, 192, 336,
	342, 343, 347, 0, 348, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 341, 220, 177, 178, 324, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 340, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 231, 272,
	0, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 322, 334, 351, 354, 0,
	0, 0, 182, 353, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 349, 256, 257, 258, 259, 223, 0, 199, 352,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 219, 225,
	0, 227, 198, 271, 221, 331, 234, 0, 0, 0,
	0, 0, 0, 0, 263, 230, 296, 235, 241, 284,
	330, 269, 289, 196, 321, 297, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 239,
	0, 280, 218, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 0, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	306, 0, 0, 337, 338, 339, 323, 0, 210, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 213, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 298, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 303, 319, 195, 294, 332,
	200, 301, 190, 267, 290, 0, 0, 187, 317, 300,
	249, 232, 233, 186, 0, 285, 211, 224, 207, 265,
	0, 316, 344, 206, 335, 0, 327, 189, 0, 326,
	264, 313, 318, 250, 244, 188, 315, 248, 243, 236,
	215, 0, 228, 276, 242, 277, 229, 254, 253, 255,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 237, 0, 0, 0, 345, 0, 288, 270,
	0, 0, 0, 286, 240, 314, 278, 320, 304, 328,
	282, 279, 180, 305, 209, 251, 191, 193, 205, 212,
	214, 216, 217, 260, 261, 273, 293, 307, 308, 309,
	208, 201, 287, 202, 226, 203, 181, 295, 204, 183,
	274, 312, 0, 222, 283, 247, 184, 246, 275, 311,
	310, 192, 336, 342, 343, 347, 0, 348, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 341, 220, 177, 178, 324, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	340, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 231, 272, 0, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 322, 334,
	351, 354, 0, 0, 0, 182, 353, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 349, 256, 257, 258, 259, 223,
	0, 199, 352, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 219, 225, 0, 227, 198, 271, 221, 331, 234,
	0, 0, 0, 0, 0, 0, 0, 263, 230, 296,
	235, 241, 284, 330, 269, 289, 196, 321, 297, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 239, 0, 280, 218, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 0, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 306, 0, 0, 337, 338, 339, 323,
	0, 210, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 298, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 303, 319,
	195, 294, 332, 200, 301, 190, 267, 290, 0, 0,
	187, 317, 300, 249, 232, 233, 186, 0, 285, 211,
	224, 207, 265, 0, 316, 344, 206, 335, 0, 327,
	189, 0, 326, 264, 313, 318, 250, 244, 188, 315,
	248, 243, 236, 215, 0, 228, 276, 242, 277, 229,
	254, 253, 255, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 302, 0, 0, 237, 0, 0, 0, 345,
	0, 288, 270, 0, 0, 0, 286, 240, 314, 278,
	320, 304, 328, 282, 279, 180, 305, 209, 251, 191,
	193, 205, 212, 214, 216, 217, 260, 261, 273, 293,
	307, 308, 309, 208, 201, 287, 202, 226, 203, 181,
	295, 204, 183, 274, 312, 0, 222, 283, 247, 184,
	246, 275, 311, 310, 192, 336, 342, 343, 347, 0,
	348, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 341, 220, 177,
	178, 324, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 340, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 231, 272, 0, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 322, 334, 351, 354, 0, 0, 0, 182, 353,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 349, 256, 257,
	258, 259, 223, 0, 199, 352, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 219, 225, 0, 227, 198, 271,
	221, 331, 234, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 296, 235, 241, 284, 330, 269, 289, 196,
	321, 297, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 239, 0, 280, 218, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 0, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 306, 0, 0, 337,
	338, 339, 323, 0, 210, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 298, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 303, 319, 195, 294, 332, 200, 301, 190, 267,
	290, 0, 0, 187, 317, 300, 249, 232, 233, 186,
	0, 285, 211, 224, 207, 265, 0, 316, 344, 206,
	335, 0, 327, 189, 0, 326, 264, 313, 318, 250,
	244, 188, 315, 248, 243, 236, 215, 0, 228, 276,
	242, 277, 229, 254, 253, 255, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 302, 0, 0, 237, 0,
	0, 0, 345, 0, 288, 270, 0, 0, 0, 286,
	240, 314, 278, 320, 304, 328, 282, 279, 180, 305,
	209, 251, 191, 193, 425, 212, 214, 216, 217, 260,
	261, 273, 293, 307, 308, 309, 208, 201, 287, 202,
	226, 203, 181, 295, 204, 183, 274, 312, 0, 222,
	283, 247, 184, 246, 275, 311, 310, 192, 336, 342,
	343, 347, 0, 348, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	341, 220, 177, 178, 324, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 340, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 231, 272, 0,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 322, 334, 351, 354, 0, 0,
	0, 182, 353, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	349, 256, 257, 258, 259, 223, 0, 199, 352, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 219, 225, 0,
	227, 198, 271, 221, 331, 234, 0, 0, 0, 0,
	0, 0, 0, 263, 230, 296, 235, 241, 284, 330,
	269, 289, 196, 321, 297, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 239, 0,
	280, 218, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 0, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 306,
	0, 0, 337, 338, 339, 323, 0, 210, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 213, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 298, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 694, 695,
	696, 1792, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 303, 319, 195, 294, 332, 200,
	301, 190, 267, 290, 0, 0, 187, 317, 300, 249,
	232, 233, 186, 0, 285, 211, 224, 207, 265, 0,
	316, 344, 206, 335, 0, 327, 189, 0, 326, 264,
	313, 318, 250, 244, 188, 315, 248, 243, 236, 215,
	0, 228, 276, 242, 277, 229, 254, 253, 255, 0,
	0, 0, 0, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 302, 0,
	0, 237, 0, 0, 0, 345, 0, 288, 270, 0,
	0, 0, 286, 240, 314, 278, 320, 304, 328, 282,
	279, 180, 305, 209, 251, 191, 193, 205, 212, 214,
	216, 217, 260, 261, 273, 293, 307, 308, 309, 208,
	201, 287, 202, 226, 203, 181, 295, 204, 183, 274,
	312, 0, 222, 283, 247, 184, 246, 275, 311, 310,
	192, 336, 342, 343, 347, 0, 348, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 341, 220, 177, 178, 324, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 340,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	231, 272, 0, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 322, 334, 351,
	354, 0, 0, 0, 182, 353, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 349, 256, 257, 258, 259, 223, 0,
	199, 352, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	219, 225, 306, 227, 198, 271, 221, 331, 234, 0,
	0, 0, 0, 268, 0, 0, 263, 230, 296, 235,
	241, 284, 330, 269, 289, 196, 321, 297, 245, 0,
	213, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	298, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 694, 695, 696, 1792, 0, 0, 0, 194, 179,
	0, 239, 0, 280, 218, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 323, 0,
	210, 0, 0, 0, 0, 0, 185, 303, 319, 195,
	294, 332, 200, 301, 190, 267, 290, 0, 0, 187,
	317, 300, 249, 232, 233, 186, 0, 285, 211, 224,
	207, 265, 0, 316, 344, 206, 335, 0, 327, 189,
	0, 326, 264, 313, 318, 250, 244, 188, 315, 248,
	243, 236, 215, 0, 228, 276, 242, 277, 229, 254,
	253, 255, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 302, 0, 0, 237, 0, 0, 0, 345, 0,
	288, 270, 0, 0, 0, 286, 240, 314, 278, 320,
	304, 328, 282, 279, 180, 305, 209, 251, 191, 193,
	205, 212, 214, 216, 217, 260, 261, 273, 293, 307,
	308, 309, 208, 201, 287, 202, 226, 203, 181, 295,
	204, 183, 274, 312, 0, 222, 283, 247, 184, 246,
	275, 311, 310, 192, 336, 342, 343, 347, 0, 348,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 341, 220, 177, 178,
	324, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 340, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 231, 272, 0, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	322, 334, 351, 354, 0, 0, 0, 182, 353, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 349, 256, 257, 258,
	259, 223, 0, 199, 352, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 219, 225, 306, 227, 198, 271, 221,
	331, 234, 0, 0, 0, 0, 268, 0, 0, 263,
	230, 296, 235, 241, 284, 330, 269, 289, 196, 321,
	297, 245, 0, 213, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 298, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 694, 695, 696, 0, 0, 0,
	0, 194, 179, 0, 239, 0, 280, 218, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 323, 0, 210, 0, 0, 0, 0, 0, 185,
	303, 319, 195, 294, 332, 200, 301, 190, 267, 290,
	0, 0, 187, 317, 300, 249, 232, 233, 186, 0,
	285, 211, 224, 207, 265, 0, 316, 344, 206, 335,
	0, 327, 189, 0, 326, 264, 313, 318, 250, 244,
	188, 315, 248, 243, 236, 215, 0, 228, 276, 242,
	277, 229, 254, 253, 255, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 237, 0, 0,
	0, 345, 0, 288, 270, 0, 0, 0, 286, 240,
	314, 278, 320, 304, 328, 282, 279, 180, 305, 209,
	251, 191, 193, 205, 212, 214, 216, 217, 260, 261,
	273, 293, 307, 308, 309, 208, 201, 287, 202, 226,
	203, 181, 295, 204, 183, 274, 312, 605, 222, 283,
	247, 184, 246, 275, 311, 310, 192, 336, 342, 343,
	347, 0, 348, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 341,
	220, 177, 178, 324, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 340, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 231, 272, 637, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 322, 334, 351, 354, 0, 0, 0,
	182, 353, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 0, 0, 333, 2344, 0, 0, 0, 0, 349,
	256, 257, 258, 259, 223, 0, 199, 352, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 219, 225, 1745, 227,
	198, 271, 221, 331, 234, 0, 0, 639, 0, 0,
	638, 0, 263, 230, 296, 235, 241, 284, 330, 269,
	289, 196, 321, 297, 245, 2768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2326, 0, 0, 0, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 239, 0, 280,
	218, 2344, 0, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 337, 338, 339, 323, 0, 210, 0, 0, 0,
	2344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 607, 632,
	2330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2326, 627, 0, 0, 0, 0, 0, 0, 2426,
	0, 2323, 0, 0, 0, 2325, 2327, 2329, 0, 2331,
	2332, 2333, 2335, 2336, 2337, 2339, 2340, 2341, 2342, 0,
	0, 0, 0, 0, 628, 633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 621, 0, 623, 636, 0, 0, 0, 620, 618,
	617, 2345, 622, 608, 609, 610, 612, 611, 613, 0,
	634, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 631, 0, 0, 405, 2330, 404, 411,
	401, 0, 0, 0, 0, 0, 0, 2343, 2334, 0,
	408, 409, 0, 410, 414, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 2322, 0, 0, 419, 2323, 625,
	0, 0, 2325, 2327, 2329, 0, 2331, 2332, 2333, 2335,
	2336, 2337, 2339, 2340, 2341, 2342, 2330, 0, 405, 0,
	404, 411, 401, 2338, 0, 0, 423, 2334, 0, 424,
	2328, 0, 408, 409, 0, 410, 414, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 2323, 2345, 419,
	0, 2325, 2327, 2329, 0, 2331, 2332, 2333, 2335, 2336,
	2337, 2339, 2340, 2341, 2342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2352, 0, 0, 423, 0,
	0, 424, 0, 0, 2343, 0, 0, 0, 0, 0,
	405, 0, 404, 411, 401, 0, 0, 2345, 0, 2362,
	0, 2322, 0, 0, 408, 409, 0, 410, 414, 0,
	0, 396, 2355, 0, 0, 0, 0, 0, 2350, 0,
	0, 419, 0, 2365, 2366, 0, 0, 0, 0, 2351,
	2338, 0, 0, 2343, 0, 0, 0, 2328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2322, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	399, 398, 0, 0, 2356, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2338,
	407, 0, 0, 0, 0, 0, 2328, 422, 0, 0,
	0, 0, 0, 0, 400, 0, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 399, 398, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 2364, 0, 2134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2358,
	0, 0, 0, 397, 399, 398, 402, 406, 412, 0,
	413, 415, 403, 0, 416, 417, 418, 0, 0, 420,
	421, 2357, 2359, 0, 407, 0, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 406,
	412, 0, 413, 415, 0, 0, 416, 417, 418, 0,
	0, 420, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2353, 0, 0, 0, 0, 0, 2363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 406, 412, 0, 413, 415, 0, 0, 416, 417,
	418, 0, 0, 420, 421,
}

var yyPact = [...]int{
	300, -1000, -300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -161, 26669, 26669,
	-1000, -1000, 1636, -1000, 26166, 10563, 27172, 187, 184, 27172,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 442, -1000, 25663, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 405, 29636, 27675, 324, 8038, 27172, -282,
	-1000, 2125, -140, -1000, -1000, -1000, -1000, -1000, -1000, 1039,
	466, 25160, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29211, 109,
	466, 544, 587, 895, 895, 12072, 2125, 241, 151, -1000,
	937, 300, 28964, 384, 27172, -1000, 958, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 384, -1000, -1000,
	-1000, 2125, 2125, -1000, 27172, 27172, -9, 1092, -1000, 249,
	291, 239, 955, -1000, -1000, -1000, -1000, -1000, 2122, -1000,
	27172, 27172, 1794, 27172, -1000, 1344, 352, 29688, 1944, 849,
	506, 1815, -1000, -1000, 1783, -1000, 133, 84, 137, 539,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 81, -1000, 2010,
	-1000, -1000, 121, -1000, -1000, 96, -1000, -1000, -1000, -75,
	-1000, -1000, -1000, -1000, -1000, -151, -1000, -1000, -151, 599,
	1303, 8038, -1000, 1612, -1000, 1939, -1000, -1000, -1000, -1000,
	5514, 9547, 9547, 9547, 9547, -1000, -1000, 1698, 8038, 1782,
	1781, -1000, -1000, -1000, -1000, 953, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1452, 9044,
	-1000, 1777, 1775, 1774, 1772, 1770, 1769, 1768, 1764, 1762,
	1755, 1754, 1589, 1753, 1450, 1449, 1752, 1750, 1749, 9547,
	1448, 1589, 1589, 1746, 1745, 1744, 1743, 1741, 1740, 1738,
	1737, 1735, 1734, 1723, 1722, 1719, 1716, 1715, 1713, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2645, -1000, 946, 899, -1000, 1707, 1929, 2028,
	1637, 2098, 2014, 2012, 2007, 1994, 1304, -1000, -1000, 27172,
	27172, 45, 402, 402, 402, 424, 402, 437, 432, -1000,
	-1000, -1000, -1000, -1000, -1000, 509, -1000, -1000, -1000, -1000,
	782, 27172, -1000, 1638, 1017, 2025, 362, 361, 253, -1000,
	1123, 1123, 1123, 1123, 1017, 248, 356, 2028, 2028, -72,
	-114, 1017, 1017, -114, 59, -1000, -1000, -1000, 1123, 360,
	1123, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2004, 2002,
	405, 405, 412, -1000, -165, -1000, -1000, 601, -1000, 542,
	-1000, 1344, 351, 346, 803, 1152, -1000, 1108, 27172, 27172,
	27172, 1108, 1108, 15093, 14590, -1000, 2028, 1637, -1000, 1568,
	1732, 1637, 405, 405, 405, 405, 405, 405, 405, 27172,
	27172, 7023, 7023, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 273, -1000, -1000, -1000, -1000, -1000, 261, 1706, -1000,
	27172, 235, 2028, 1929, 2028, -1000, -1000, 945, 1301, 1447,
	-1000, -1000, 249, 1073, -1000, 734, -1000, -1000, -1000, -1000,
	27172, 226, -1000, -1000, 1438, 1705, -1000, 366, 827, 1056,
	-1000, 63, 29760, 22638, 1344, 22638, 27172, -1000, -1000, -1000,
	-1000, -1000, -1000, -81, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 83, -1000, 83,
	8038, 8038, 8038, 8038, 8038, -1000, 407, 8541, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 9547, 9547, 9547, 9547, 9547,
	9547, 9547, 9547, 9547, 9547, 9547, 9547, 1695, 1139, 9547,
	9547, 9547, 1732, 2501, 787, -1000, -1000, -1000, -1000, -1000,
	1098, 1303, 8038, 8038, 27172, -1000, 2532, 8038, 8038, 89,
	8038, 1975, 1975, 4004, 27172, 8038, -1000, 1551, 1549, -1000,
	-1000, 1218, 8038, -1000, -1000, 8038, 9547, 8038, -1000, -1000,
	-1000, -1000, 102, 1975, 8038, 8038, 1975, 1975, 1975, 1170,
	1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 27172, 1912,
	93, -1000, -1000, -1000, 1600, -1000, 1662, 1662, 1600, 1600,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1687,
	1702, -1000, -1000, 1661, 1661, 1661, 1600, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1681, 1681, 1686, 1681, 27172, 2028, -282, 6520,
	-1000, -286, 1929, 8038, -1000, -1000, 8038, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1446, 1971, -1000, 1701, -1000,
	422, 402, -1000, 27172, 1115, 22638, 1344, 1374, 27172, 402,
	402, 412, -1000, 27172, 782, 1969, 27172, 2088, 9547, 22638,
	1123, 1017, -1000, 27172, -1000, -1000, -1000, 1123, 27172, 1123,
	1123, 2088, 1123, -1000, -1000, -1000, 1017, 1017, -1000, -1000,
	-1000, -1000, 1123, 1123, -1000, -1000, -105, 2088, 2088, -82,
	27172, 27172, 402, 27172, -1000, 27172, -1000, -1000, 27172, 22638,
	21129, -1000, -142, 576, 519, 553, -1000, -1000, 364, 393,
	13583, 302, 22638, 5010, -1000, -1000, 1108, 1108, 1108, 5010,
	5010, 941, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1929,
	-1000, -1000, -1000, -1000, 27172, 22638, 1344, 27172, 27172, 27172,
	28964, -1000, 1700, 933, -1000, -1000, 11569, 936, 933, 1445,
	27172, 1814, 1897, -1000, 1699, 13080, 27172, -1000, -1000, -283,
	-1000, 12576, 27172, 1929, -1000, 1929, 3044, -1000, 2024, -1000,
	249, 196, -1000, -1000, -1000, -1000, -1000, -1000, 925, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 775, -1000,
	27172, -1000, -1000, 63, 22638, 1143, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 114, -1000, -1000, 153, -1000, 419, 14,
	1071, -1000, -1000, 42, 149, 459, 42, 1303, -1000, 1122,
	1122, 1130, -1000, 411, -1000, -1000, -1000, -1000, 1698, -1000,
	-1000, -1000, 1555, 2324, -1000, 1151, 1151, 957, 957, 957,
	957, 957, 1107, 1107, -1000, -1000, -1000, 5514, 1695, 9547,
	9547, 9547, 396, 2792, 2914, -1000, 8038, 1140, -1000, 8038,
	1244, 1072, 922, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1547, 599, 1546, 1348, 2113, 1545, 8038,
	-1000, -1000, 8038, 1339, 7535, -1000, -1000, -1000, 1544, 911,
	1540, -1000, -1000, -1000, 1539, 790, 1532, 1507, 1530, 765,
	8038, 1058, 1057, 8038, 8038, 8038, 8038, 1528, 8038, 8038,
	8038, 8038, 8038, 8038, 8038, 8038, -1000, 8038, 48, -1000,
	-1000, -1000, -1000, 1297, -1000, 1295, -1000, -1000, -1000, 1440,
	1440, -1000, 1292, -1000, -1000, -1000, -1000, 1290, -1000, -1000,
	1287, -1000, -1000, -1000, -1000, 1055, -1000, 1303, -1000, 1418,
	-1000, 930, 704, -1000, 1415, -1000, -1000, 27172, 10050, 24657,
	27172, 58, -1000, 1942, 902, -1000, 14, 632, 1793, 1908,
	27172, 27172, 24154, -1000, 1691, 1054, -1000, -1000, 8038, -1000,
	1792, 27172, 2088, -1000, -1000, -1000, -1000, 28964, -1000, -1000,
	-1000, -1000, 27172, 2088, 2088, 1017, 1123, 1123, -1000, -1000,
	1123, -1000, 910, -1000, 27172, -1000, -1000, 51, 902, 2580,
	723, -1000, -1000, -1000, -1000, 28178, 28178, 14087, 28178, -1000,
	1079, -1000, -1000, 549, 530, 598, -1000, -1000, 417, -1000,
	-1000, 632, -1000, -1000, -1000, 1690, 1090, -1000, -1000, 9547,
	-1000, 5010, 5010, 5010, -1000, -1000, 17105, -1000, -1000, 678,
	632, 1812, 673, -1000, 673, -1000, 10050, 2088, 7023, -1000,
	21129, -1000, -1000, 23644, -1000, 23141, 2088, -291, 768, -1000,
	1918, -283, 27172, 27172, 1051, 159, -1000, 1047, -1000, 615,
	-1000, 1689, -1000, 1040, 1896, 617, -1000, 1077, -1000, -1000,
	-1000, 869, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -10, -1000, -1000, 27172, 1438, 1037, 1143,
	642, -1000, 415, 867, 862, -1000, 22638, 127, 22638, -1000,
	22638, -1000, -1000, 232, -1000, 27172, 1925, -1000, -1000, -1000,
	1404, -304, 1921, -1000, -1000, -1000, -1000, -1000, 1036, -1000,
	396, 2792, 2770, -1000, 9547, 9547, 2463, 1081, -1000, 8038,
	1221, 1382, 1262, 16099, 27172, -1000, -1000, 8038, 8038, -1000,
	2362, 2263, -1000, 8038, 8038, 1251, -1000, 27172, -1000, -1000,
	-1000, 16099, -1000, 9547, -1000, 8038, 2259, -60, -60, 2215,
	2206, 2198, 1035, -60, 2188, 2153, 2142, 2084, 2077, 2071,
	2057, 2031, 1303, -1000, -1000, 1527, 1526, 1026, -1000, 1025,
	1517, 1009, 995, 6520, -1000, -120, 8038, 8038, 8038, 1756,
	-1000, -1000, 77, 1516, 659, -1000, -1000, -1000, 2776, 1662,
	1600, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1687, -1000, 1661, 1661, 1661, 1600, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1681, 1681, 1686, 1681, 1638,
	1114, 1679, -68, 1044, -1000, 518, 22638, 341, -1000, 1809,
	211, -1000, 1908, -1000, 742, -1000, 1678, 1675, 27172, 931,
	-1000, 841, 300, -1000, 27172, 1303, -1000, 1344, 1017, -1000,
	-1000, 2088, 947, -1000, -1000, 2088, 1017, 1017, 1123, 27172,
	-1000, -68, 1044, 518, 27172, 21129, 21129, 21129, 21129, -1000,
	1862, 1829, -1000, 1837, 1828, 1870, 27172, 21129, 1638, -1000,
	28571, -1000, -1000, -1000, -1000, -1000, 1732, 986, 2129, 577,
	8038, -1000, -1000, -1000, 526, 22638, 1414, 302, -1000, -1000,
	-1000, -1000, -1000, 27172, 27172, 1515, 2060, -1000, 643, -1000,
	-1000, 840, -1000, 2060, -1000, 1281, 1411, 1172, 615, 617,
	977, -1000, 159, 27172, 1887, 1669, -1000, 27172, -283, 6520,
	240, -283, 27172, 6520, 3044, 1280, -1000, -1000, -1000, 2105,
	22638, 1344, 996, 1096, -1000, 104, -1000, 112, 357, 1410,
	-1000, 431, 87, -1000, 1076, 1404, 430, -1000, -1000, 9547,
	-1000, -1000, -1000, -1000, 1303, 8038, 1511, -1000, 551, 551,
	1510, -1000, 1600, 1662, -1000, 1600, 1661, 1600, 551, 551,
	1504, -1000, 1366, 1931, -1000, -1000, 1905, 1779, 8038, -1000,
	1503, 2630, 917, -60, -1000, 1646, -1000, -60, -60, -60,
	-60, -1000, -60, -60, -60, -60, -60, -60, -60, -60,
	-1000, -1000, -1000, 1407, -1000, -1000, -1000, 1278, -1000, 1277,
	-1000, -43, -32, 1303, 1303, -1000, -1000, 1892, 1406, 445,
	10050, 1904, 1968, 1933, 11066, 1224, -1000, -1000, 22135, -1000,
	317, -1000, -1000, -1000, 428, 90, 1275, 315, -1000, 1458,
	27172, -1000, -1000, -1000, -1000, -1000, 1044, 1044, 1044, 11066,
	11066, 384, 692, 822, 21129, 27172, -1000, 20626, 1502, -1000,
	632, 2088, -1000, 27172, -1000, 2088, 2088, 1017, -1000, 1224,
	22135, 317, 754, -1000, 1053, 1788, 1803, 1788, -1000, -1000,
	-1000, -1000, 1656, -1000, 1648, -1000, -1000, 754, -1000, -1000,
	-1000, -1000, -1000, 577, -1000, 2017, 548, 548, 548, 1501,
	-1000, 642, 1500, -1000, -1000, -1000, -1000, -1000, 2101, 2093,
	21632, 2101, -1000, -291, 2160, 241, 27172, 231, -1000, -283,
	27172, -1000, -1000, 1499, 641, -283, -1000, 615, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1344, -1000, 110, -1000, -1000,
	-1000, -1000, -1000, -1000, 2, -1000, 27172, -1000, 1404, 1403,
	86, 27172, -1000, 1303, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8038,
	-1000, -1000, -1000, 1703, -1000, -1000, 8038, -1000, 383, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1498, 1485, -289, -18, 2092, 2091, -1000, -1000,
	-1000, 2776, -1000, 1508, 241, 27172, 1483, 635, -1000, -1000,
	-1000, 2776, 619, -1000, 27172, 1169, 548, 402, 548, 1168,
	1645, -1000, -1000, -1000, 1401, 13, -1000, -1000, -1000, 1399,
	1397, 1274, -1000, -1000, 1282, 831, 30, -1000, -1000, -1000,
	-1000, -1000, -1000, 1644, 16099, 16602, 1395, 1475, 1474, 28178,
	21129, 20626, 732, -1000, 816, -1000, -1000, -1000, 2088, -1000,
	-1000, 2088, -1000, 13, -1000, 2072, 27172, 6520, -1000, -1000,
	8038, 1641, -1000, 8038, -1000, -1000, -1000, -1000, -1000, 1640,
	1913, -1000, -1000, -1000, -1000, -1000, -1000, 8038, 8038, -1000,
	-1000, -1000, 27172, -1000, -1000, -283, -1000, 615, 966, -1000,
	615, 632, -1000, -1000, 159, -1000, -1000, -1000, -82, 1642,
	-1000, 1634, 2072, -1000, 2087, -1000, -1000, -291, 1393, -1000,
	2086, 1392, 1318, -220, -1000, -1000, -1000, 1638, 29484, 11066,
	29715, -1000, -1000, 27172, 27172, -1000, 27172, 27172, 402, 8038,
	-1000, -1000, 215, -1000, -1000, 155, -1000, -1000, 1270, 365,
	-1000, 19117, -1000, -1000, -1000, -1000, -1000, 83, 29484, 2088,
	732, 816, -1000, -1000, 991, -1000, -1000, -1000, 2028, -1000,
	-1000, 1303, 27172, 1303, 20123, -1000, 2083, 2069, 1303, 599,
	617, 615, -1000, -82, -1000, -45, -36, -1000, -1000, 52,
	8038, -293, -1000, 1391, -29, -1000, -1000, 27172, 1948, 380,
	29435, -1000, 1044, 1044, 756, 1044, 1044, 1044, 1044, 322,
	320, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044,
	1044, 1044, 1044, 1044, 1044, 1633, -1000, -1000, 29715, -1000,
	-1000, 1182, 9547, -1000, -1000, 1387, 16602, 494, 543, 1631,
	-1000, 242, 2141, -1000, 1165, 1135, -1000, 27172, -1000, 1617,
	1790, 194, 1616, -1000, 1603, 1601, 27172, 1552, 345, 1381,
	-1000, -1000, 154, -1000, -1000, 950, -1000, 1600, 8038, -1000,
	-82, 380, 2072, -1000, -1000, 928, 908, -1000, -1000, -1000,
	-1000, -1000, 410, -35, -36, -1000, 2065, -30, 2059, 2058,
	1469, -1000, 3501, -1000, -1000, -1000, 599, -1000, 1598, -1000,
	2055, 1940, -1000, 241, 198, 2053, 29484, -1000, 1271, 1267,
	1044, 1044, 1252, 1375, 1362, 1360, 1044, 1044, 1249, 1350,
	28571, 1248, 1245, 1238, 1269, 1349, 611, 1260, 1254, 1227,
	27172, 1596, 1317, -1000, -1000, 2792, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1230, 1593, -118,
	-1000, -1000, 1592, 19117, 222, 222, 19117, 19117, 19117, 1591,
	423, -1000, -1, -1000, -1000, -1000, 19117, 1949, 1512, -1000,
	198, 2028, -1000, -1000, 19620, 1590, 1226, -18, 2050, -1000,
	1318, 2049, 1318, 1318, -1000, -1000, 4507, -284, -55, 295,
	27172, 1318, 1342, -1000, -1000, 2048, 252, -1000, -1000, -1000,
	16099, 16099, -1000, -1000, -1000, -1000, 1336, 1332, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	334, 27172, 904, -1000, 1045, 1461, 8038, 1589, -215, 19117,
	898, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 885, 859,
	858, 19117, -1000, -1000, -1000, 258, -1000, 160, -1000, -1000,
	1949, -1000, -1000, -1000, -1000, 1982, 15596, -48, -1000, 1324,
	-1000, 1318, -1000, -1000, 1128, -1000, -1000, -1000, -1000, -1000,
	851, -1000, -1000, -1000, 18614, 219, 264, 217, -1000, 390,
	-1000, -1000, -1000, -1000, -1000, -1000, 329, 830, -1000, 1317,
	1313, -1000, 1310, -1000, 1801, -1000, 69, 801, -1000, -1000,
	-1000, -1000, 799, -1000, -1000, 1044, 1256, 176, -1000, -1000,
	-1000, -1000, 27172, -1000, 796, -1000, -1000, -1000, 812, -1000,
	-1000, -1000, -1000, 4507, -1000, 27172, -1000, 27172, 209, 1220,
	9547, 1588, 9547, 1587, 229, 1584, -1000, -1000, -1000, -1000,
	-1000, 423, -1000, 1799, 1797, 2143, -1000, -1000, -1000, -1000,
	160, 160, 160, 160, 94, 1219, -1000, 1374, 597, -1000,
	1029, -1000, 18111, 27172, -1000, -1000, 781, 1573, 2046, -1000,
	2425, 27172, 2341, 27172, 1571, 1004, 9547, -1000, -1000, 2133,
	-1000, 2128, 503, 503, -1000, -1000, -1000, 27172, 6017, -1000,
	757, -1000, -1000, 374, 221, -1000, 776, -1000, 752, 17608,
	1215, 2297, -1000, -1000, -1000, 1223, 265, -1000, -1000, -1000,
	1303, 27172, 748, -1000, 1456, 203, -1000, -1000, -1000, 743,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 374, 1800, -1000,
	1209, -1000, -1000, 29328, 493, -1000, -1000, 29328, 208, -1000,
	367, 1570, -1000, -1000, 717, -1000, 1441, 541, 8038, -1000,
	208, 29484, -1000, 8038, 716, -1000, 29484, 700, -1000, -1000,
}

var yyPgo = [...]int{
	0, 136, 2735, 210, 156, 148, 209, 2734, 2728, 1958,
	1947, 2727, 2725, 2724, 2723, 2722, 2721, 2720, 2719, 2718,
	2717, 2716, 2710, 2708, 2705, 2703, 2701, 2700, 2691, 2689,
	2688, 207, 2687, 2686, 2685, 2684, 2678, 2677, 2676, 2673,
	2672, 2670, 2666, 2664, 2663, 2661, 2660, 2657, 2655, 2653,
	2652, 2651, 2650, 2649, 2648, 2647, 146, 2646, 1946, 2645,
	2644, 2643, 2641, 2638, 187, 2630, 2629, 2628, 2627, 2626,
	2620, 2619, 2618, 2616, 2614, 2613, 2612, 2611, 2609, 2608,
	132, 2606, 2604, 2603, 2602, 2599, 2598, 2597, 200, 183,
	63, 2596, 44, 56, 164, 217, 115, 215, 214, 155,
	138, 78, 2595, 1954, 2590, 128, 195, 124, 26, 2588,
	141, 2586, 137, 38, 43, 212, 131, 52, 73, 99,
	2585, 182, 67, 88, 95, 2584, 2583, 213, 160, 2582,
	101, 2580, 2578, 2577, 2574, 174, 112, 2573, 64, 2571,
	84, 69, 98, 27, 2570, 2567, 2566, 82, 2565, 2564,
	2563, 2562, 151, 2557, 103, 59, 2538, 2536, 2534, 61,
	2533, 37, 2532, 49, 2525, 2524, 2523, 2520, 66, 2518,
	2516, 12, 17, 21, 2515, 14, 1, 2513, 186, 94,
	85, 111, 2512, 452, 2510, 2505, 2504, 125, 2502, 646,
	2500, 2499, 2496, 2494, 10, 2490, 175, 2489, 2488, 71,
	106, 2486, 53, 163, 171, 2485, 2484, 119, 35, 60,
	105, 2483, 2481, 81, 184, 19, 54, 0, 169, 41,
	2475, 2473, 2472, 216, 2471, 199, 177, 196, 107, 218,
	129, 2470, 2469, 58, 2468, 134, 83, 117, 8, 2438,
	167, 2436, 471, 142, 2433, 179, 2432, 139, 2, 123,
	2429, 2427, 23, 234, 2426, 2410, 2391, 173, 2390, 2385,
	65, 145, 2382, 2381, 2380, 29, 2379, 30, 51, 2376,
	87, 2373, 208, 2372, 194, 118, 153, 140, 122, 192,
	197, 74, 127, 1131, 121, 80, 18, 2371, 193, 2369,
	202, 190, 2367, 162, 2366, 205, 368, 178, 2364, 154,
	9, 42, 28, 2363, 7, 2362, 100, 2360, 2359, 20,
	2358, 24, 2346, 2344, 2343, 2342, 5, 2339, 2338, 2336,
	3, 6, 2335, 4, 180, 36, 104, 2334, 113, 191,
	2333, 2330, 2329, 2328, 2326, 338, 2325, 2323, 2317, 2316,
	2312, 2310, 2302, 2301, 68, 31, 2300, 2294, 2287, 2282,
	77, 120, 2277, 269, 181, 2275, 34, 2270, 2269, 25,
	2268, 32, 2264, 2263, 2262, 13, 159, 2253, 2252, 16,
	2248, 2247, 11, 15, 2242, 2241, 62, 2239, 48, 33,
	70, 79, 2238, 22, 72, 110, 2237, 2236, 211, 206,
	176, 2231, 143, 198, 219, 2229, 185, 2228, 2227, 2226,
	2225, 2223, 2222, 2215, 1168, 2212, 2208, 203, 55, 93,
	97, 2206, 2201, 2200, 75, 130, 96, 92, 170, 2199,
	166, 2198, 2196, 91, 2194, 2193, 2192, 2191, 2190, 2180,
	2179, 201, 150, 2178,
}

//line mysql_sql.y:8314
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 429, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 86, 427, 427, 427, 428, 428,
	84, 84, 73, 72, 85, 375, 375, 374, 374, 373,
	373, 372, 372, 372, 371, 371, 371, 370, 370, 369,
	369, 368, 368, 366, 366, 367, 365, 364, 364, 364,
	362, 362, 360, 360, 361, 361, 355, 355, 358, 358,
	356, 356, 356, 356, 359, 354, 354, 354, 353, 353,
	71, 71, 71, 285, 285, 70, 70, 299, 299, 299,
	299, 299, 297, 297, 297, 297, 297, 297, 296, 296,
	295, 295, 300, 300, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 65, 65, 65, 65, 68, 68,
	68, 69, 294, 294, 294, 66, 67, 67, 284, 284,
	289, 289, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 293, 293, 293, 291, 291, 290,
	290, 292, 292, 59, 59, 59, 62, 61, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 60, 60, 60,
	60, 60, 60, 57, 57, 57, 57, 57, 56, 56,
	58, 58, 282, 282, 281, 76, 76, 76, 76, 76,
	76, 76, 75, 75, 78, 78, 77, 79, 64, 64,
	64, 64, 64, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 399, 399, 399, 401, 401, 221, 222, 430,
	224, 220, 220, 220, 395, 395, 396, 397, 398, 398,
	398, 74, 7, 7, 54, 413, 413, 55, 420, 420,
	335, 335, 235, 235, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	338, 339, 231, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 38, 37, 37, 271, 271, 36,
	431, 431, 204, 204, 44, 45, 46, 47, 48, 49,
	50, 35, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 53, 53, 349, 349, 433, 433, 433, 51, 52,
	334, 334, 334, 42, 41, 40, 39, 39, 34, 34,
	33, 33, 228, 228, 230, 230, 226, 432, 432, 311,
	311, 229, 229, 32, 32, 32, 227, 227, 203, 225,
	225, 225, 8, 8, 6, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 18, 20, 279, 279, 276, 19,
	14, 13, 16, 12, 15, 17, 5, 5, 5, 5,
	9, 9, 10, 100, 100, 142, 142, 408, 408, 404,
	404, 405, 405, 405, 406, 406, 407, 407, 80, 343,
	343, 343, 343, 343, 343, 4, 122, 122, 123, 123,
	342, 342, 342, 342, 342, 342, 342, 426, 426, 384,
	384, 384, 385, 121, 121, 116, 116, 344, 344, 249,
	386, 386, 352, 352, 351, 351, 350, 350, 119, 119,
	120, 120, 103, 103, 89, 89, 357, 357, 357, 357,
	363, 363, 332, 332, 168, 168, 197, 197, 198, 198,
	93, 93, 94, 94, 94, 94, 94, 94, 392, 392,
	394, 394, 393, 118, 118, 114, 114, 115, 115, 115,
	113, 113, 112, 111, 111, 110, 108, 108, 108, 109,
	109, 109, 96, 96, 95, 95, 95, 95, 95, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 97, 97, 400, 400, 400, 336, 336, 336, 341,
	341, 180, 180, 181, 181, 179, 179, 98, 98, 99,
	99, 99, 99, 178, 178, 177, 101, 101, 107, 106,
	106, 102, 102, 102, 102, 188, 188, 187, 187, 187,
	187, 83, 87, 87, 88, 126, 126, 186, 185, 185,
	185, 125, 125, 124, 124, 117, 117, 105, 105, 105,
	105, 184, 104, 182, 425, 425, 424, 424, 423, 421,
	421, 421, 422, 422, 422, 422, 377, 377, 377, 377,
	377, 213, 213, 213, 219, 219, 212, 212, 212, 212,
	212, 223, 218, 218, 214, 214, 215, 215, 215, 3,
	3, 3, 3, 24, 24, 24, 24, 24, 24, 30,
	134, 135, 29, 127, 128, 128, 129, 129, 130, 131,
	131, 131, 133, 132, 28, 28, 402, 402, 21, 409,
	412, 410, 410, 414, 414, 414, 415, 415, 415, 416,
	416, 22, 411, 417, 417, 417, 280, 280, 277, 278,
	278, 275, 274, 274, 274, 419, 419, 418, 418, 418,
	216, 216, 23, 270, 270, 272, 273, 273, 264, 264,
	264, 264, 27, 268, 268, 269, 269, 269, 269, 269,
	265, 265, 267, 267, 263, 263, 263, 263, 263, 26,
	262, 262, 260, 260, 258, 258, 259, 259, 257, 257,
	257, 261, 261, 25, 25, 25, 91, 90, 90, 90,
	200, 200, 199, 199, 92, 337, 337, 301, 301, 302,
	302, 302, 305, 305, 317, 317, 318, 318, 316, 316,
	323, 323, 322, 322, 321, 321, 320, 320, 319, 319,
	319, 319, 314, 314, 313, 313, 303, 303, 303, 303,
	303, 304, 304, 304, 312, 312, 315, 315, 159, 159,
	160, 160, 160, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 382, 382, 383, 162, 162, 162, 166, 166,
	166, 166, 166, 166, 161, 161, 163, 163, 143, 143,
	141, 141, 136, 136, 137, 137, 138, 138, 139, 139,
	140, 140, 140, 140, 140, 140, 287, 287, 380, 380,
	381, 381, 376, 376, 376, 379, 379, 379, 379, 379,
	378, 378, 144, 195, 195, 195, 217, 217, 217, 194,
	194, 194, 158, 158, 157, 157, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 286, 286, 232, 232, 233, 233, 175, 174, 174,
	174, 174, 174, 172, 173, 171, 171, 171, 171, 171,
	170, 170, 169, 169, 169, 266, 266, 167, 167, 165,
	165, 165, 164, 164, 164, 324, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 241,
	241, 246, 246, 391, 391, 390, 145, 145, 145, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 154, 154,
	154, 309, 309, 309, 309, 309, 310, 310, 310, 307,
	307, 308, 308, 250, 251, 251, 306, 306, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 348, 348, 348, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	403, 403, 403, 387, 387, 387, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 192, 192, 192, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 252, 252, 253, 253, 345, 345, 345, 345, 345,
	345, 346, 346, 347, 347, 347, 347, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 239, 189, 189, 189,
	254, 247, 247, 248, 248, 242, 242, 242, 242, 242,
	242, 242, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 243, 243, 245, 245, 256, 256, 256, 255,
	255, 255, 255, 255, 255, 255, 156, 156, 156, 156,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 147, 147, 147, 147, 151, 151, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 152, 152, 152, 152, 150, 150, 150, 150, 150,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 81, 82, 82, 149,
	196, 196, 325, 325, 328, 328, 326, 326, 327, 329,
	329, 329, 330, 330, 330, 331, 331, 331, 333, 333,
	202, 202, 202, 209, 209, 201, 201, 210, 210, 211,
	211, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 9, 10, 2, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 2, 1, 2,
	3, 4, 3, 3, 1, 0, 1, 1, 0, 1,
	8, 5, 7, 0, 3, 8, 5, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 4, 1, 3, 1, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 2, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	4, 6, 1, 1, 1, 2, 4, 6, 1, 4,
	1, 3, 3, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 2, 4, 3, 3, 1, 1,
	1, 1, 1, 2, 3, 4, 7, 2, 3, 3,
	4, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 1, 1, 1,
	1, 6, 1, 1, 7, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 2, 5, 0, 2, 7,
	0, 1, 0, 1, 5, 3, 2, 4, 4, 4,
	4, 4, 1, 1, 1, 3, 2, 3, 1, 1,
	1, 6, 8, 0, 1, 1, 1, 1, 5, 5,
	0, 1, 1, 3, 3, 3, 6, 7, 4, 4,
	7, 8, 0, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 1, 3, 1, 1,
	3, 5, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 6, 1, 1, 2, 2,
	11, 8, 9, 1, 3, 2, 4, 0, 2, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 4, 2,
	1, 5, 4, 4, 2, 5, 0, 4, 1, 3,
	3, 1, 5, 6, 5, 5, 3, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 4, 3, 4, 5, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 1, 12, 1, 0, 1, 1, 3, 1, 1,
	2, 4, 1, 1, 8, 11, 0, 1, 7, 1,
	4, 1, 1, 3, 4, 3, 0, 1, 1, 0,
	2, 7, 1, 0, 2, 2, 1, 3, 2, 1,
	3, 2, 1, 3, 2, 0, 1, 3, 4, 3,
	1, 1, 4, 1, 3, 1, 1, 1, 0, 1,
	1, 1, 11, 0, 2, 3, 2, 3, 1, 1,
	1, 3, 3, 4, 0, 2, 2, 2, 2, 5,
	1, 1, 0, 3, 0, 1, 1, 2, 4, 4,
	4, 0, 1, 11, 9, 11, 2, 2, 4, 5,
	1, 3, 0, 3, 5, 0, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 0, 1,
	1, 3, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 4, 1, 3, 3, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 1,
	7, 7, 7, 7, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 1, 5, 6, 4,
	1, 1, 2, 0, 1, 1, 2, 5, 0, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 5, 6, 6, 6, 1, 1, 1, 1, 0,
	2, 0, 1, 1, 2, 4, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 2,
	5, 0, 1, 3, 0, 1, 0, 6, 6, 5,
	5, 6, 6, 6, 6, 5, 6, 6, 6, 6,
	6, 6, 6, 6, 1, 1, 1, 4, 4, 6,
	8, 6, 4, 5, 5, 4, 6, 6, 7, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	1, 1, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 4, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 2, 3, 5, 1,
	1, 3, 0, 1, 0, 3, 0, 3, 3, 0,
	3, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -429, -2, -1, -3, -84, -4, -80, -5, -6,
	-8, -63, -75, -77, -79, -78, -31, -7, -74, -56,
	-57, -59, -65, -70, -71, -72, -73, -85, -81, -82,
	-83, -93, -86, -24, -23, -22, -21, 395, 12, 441,
	-9, -10, -392, -11, 231, -220, -221, -222, -224, -430,
	-32, -33, -34, -39, -40, -41, -42, -51, -52, -53,
	-35, -36, -37, -38, -44, -45, -46, -47, -48, -49,
	-50, -55, -54, 207, -58, 61, -60, -61, -62, -66,
	-67, -68, -69, 326, 332, 385, 394, 522, 523, 46,
	-94, -96, 524, -25, -26, -27, -28, -29, -30, 203,
	14, 474, -12, -15, -13, -16, -14, -19, -20, -18,
	-17, 226, 225, 37, 289, 290, 291, 330, 224, 204,
	13, 135, 136, 138, 139, 30, -95, 67, 205, -97,
	10, 525, 434, -103, 38, -141, -217, 70, -205, -208,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 444, 307, 308, 471,
	243, 267, 356, 270, 277, 135, 154, 148, 176, 168,
	143, 247, 282, 248, 77, 138, 427, 87, 406, 382,
	141, 262, 264, 266, 269, 249, 164, 159, 261, 245,
	522, 157, 250, 39, 251, 181, 252, 253, 476, 402,
	306, 408, 274, 380, 158, 403, 265, 405, 183, 187,
	419, 332, 152, 153, 410, 421, 180, 223, 42, 473,
	235, 422, 185, 179, 175, 430, 278, 276, 178, 151,
	174, 246, 50, 189, 188, 190, 376, 377, 378, 379,
	254, 255, 320, 418, 171, 160, 311, 144, 22, 425,
	230, 407, 333, 256, 271, 279, 184, 186, 237, 242,
	475, 384, 241, 275, 423, 156, 234, 263, 229, 426,
	145, 326, 335, 257, 139, 268, 420, 429, 49, 348,
	150, 142, 220, 136, 239, 244, 11, 258, 259, 260,
	281, 280, 272, 172, 236, 177, 162, 149, 173, 137,
	238, 428, 349, 520, 309, 365, 170, 167, 240, 213,
	424, 409, 140, 369, 350, 165, 283, 517, 518, 519,
	321, 305, 284, 285, 163, 227, 401, 286, 288, 375,
	298, 351, 383, 357, 352, 196, 292, -103, -58, -10,
	-9, -95, -96, -141, 211, -225, 23, 380, -64, 381,
	207, 67, -217, -5, -4, -80, -56, -93, -223, -217,
	289, 289, -223, 211, -217, 241, 364, -335, 216, -296,
	-270, 242, -295, -272, -298, -273, 31, 203, 205, 204,
	238, 14, 330, 212, 12, 10, 331, 224, 24, 25,
	27, 13, 332, 334, 28, 335, 338, 339, 340, 41,
	343, 344, 231, 70, 73, 249, -135, -217, 249, -248,
	-242, 94, 232, -244, -237, -238, -240, -372, -366, -236,
	67, 119, 120, 127, 95, -239, -324, 35, 97, 481,
	442, -190, -191, -192, -193, -217, -367, -365, 73, 78,
	81, 84, 85, 83, 82, 161, 80, 74, 131, 132,
	-96, 70, -387, 489, -206, 510, 490, 509, 46, -340,
	-347, 210, -345, 166, 227, 162, 12, 125, 375, 130,
	163, 486, 506, 444, 513, 483, 484, 478, 479, 480,
	482, 491, 493, 505, -348, 501, 511, 512, 499, 72,
	71, 504, 503, 492, 487, 488, 494, 477, 485, 495,
	496, 502, 507, 508, 314, 87, 315, 316, 434, 310,
	317, 216, 380, 55, 318, 319, 320, 321, 322, 441,
	323, 56, 324, 313, 231, 365, 325, 165, 182, 446,
	445, 447, 438, 435, 433, 436, 437, 439, 440, 497,
	498, 500, -292, -290, -217, -87, -88, 515, -112, -113,
	-183, 19, 6, 7, 8, 9, -427, 382, 475, 292,
	327, -337, 307, 365, 241, -264, -262, 286, 282, 341,
	221, 220, 88, 434, 210, -404, -405, 200, 201, 202,
	-394, 467, -393, -217, 316, 26, 211, 327, 412, 413,
	414, 416, 415, 417, -43, -349, -334, 409, 408, -229,
	407, 400, 411, 402, 203, 468, -202, 351, 383, 237,
	431, 432, 328, 384, 419, 420, 403, 87, 169, 166,
	307, 365, -404, 140, 137, -283, 140, 93, 145, 144,
	-283, 241, 364, 40, -289, 375, -288, -290, 419, 420,
	430, 71, 72, 418, -202, 87, -113, -183, -112, -94,
	-96, -392, 307, 365, 241, 212, 211, 213, 434, 289,
	327, -336, -400, 31, -341, 197, 198, 199, 32, 33,
	-1, -218, -215, -208, 70, 71, 72, -119, 233, -141,
	133, -119, -113, -112, -113, -141, -194, -217, 382, 103,
	-64, -64, 381, -395, -396, -397, -399, 207, 381, 380,
	133, 15, -223, -223, 65, -141, -272, 241, -296, -270,
	35, 64, 134, 214, 134, 64, 67, 328, 307, 365,
	329, 434, 211, 341, 213, 241, 342, 307, 365, 211,
	213, 434, 241, 307, 211, 213, 365, 241, 342, 400,
	401, 213, 26, 333, 336, 337, 401, -353, 430, -353,
	134, 93, 90, 91, 92, -242, 110, -255, 103, 104,
	105, 106, 107, 108, 109, 116, 115, 126, 119, 120,
	121, 122, 123, 124, 125, 117, 118, 113, 94, 111,
	112, 96, -96, -242, -248, -240, -240, -240, -240, -324,
	-246, -242, 67, 67, 133, 73, -242, 67, 67, 67,
	67, 67, 67, 67, 67, 67, -346, 67, 67, -252,
	-253, 67, 67, 73, 73, 67, 67, 67, -240, 73,
	-253, -253, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 134, -147,
	-151, -148, -150, -149, -153, -152, 166, 167, 130, 170,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	30, 182, 227, 162, 163, 164, 165, 183, 148, 168,
	472, 191, 149, 192, 150, 193, 151, 194, 152, 153,
	195, 154, 157, 158, 159, 156, 133, -113, 134, 67,
	-89, 38, -115, 21, -97, -96, 20, 31, 32, 31,
	32, 31, 32, 31, 32, 78, -134, -217, -127, -217,
	-402, 211, 467, -260, 216, -260, -260, 212, -260, 211,
	211, -406, 147, 134, -394, -118, 67, -228, 111, 23,
	239, 239, 276, -431, -432, 15, 113, -226, -432, -226,
	-226, -228, -433, 212, 410, 42, 240, 239, -114, -115,
	-114, 404, 401, -311, 405, 406, -229, -228, -228, -229,
	211, 213, 434, -431, 239, -431, 30, 30, -335, -335,
	-407, 215, 423, 474, 143, 144, 145, -272, 241, 241,
	134, 103, 23, -291, 103, 114, -290, -290, -290, -291,
	-291, -161, 40, -216, 130, -217, 73, -161, 40, -114,
	-97, -96, 68, 68, -335, -335, -335, -335, -335, -335,
	-335, -223, -127, -98, -99, 121, -242, -217, -98, 38,
	401, -342, -122, -93, 308, 67, 67, -217, -343, 46,
	-93, 67, 30, -114, -89, -115, 133, 78, 73, -64,
	68, 134, -398, 84, 85, -401, 180, 172, -217, -76,
	73, -3, -4, -5, -6, -31, -56, -93, -368, -366,
	67, 31, 374, 64, 15, -297, 211, 434, 327, 237,
	213, 307, -295, -279, -276, -274, -216, -272, -275, -274,
	-300, -194, 401, -90, 386, 288, -90, -242, -242, -242,
	-242, -242, 83, 94, 305, 84, 85, -237, -256, 31,
	284, 285, -238, -238, -238, -238, -238, -238, -238, -238,
	-238, -238, -238, -238, -245, -254, -324, 67, 113, 111,
	112, 96, -240, -238, -238, 68, 134, -391, -390, 98,
	-242, -242, -217, -388, -389, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 318, 313, 319, 317,
	310, 325, 320, 321, 165, 465, 466, 459, 460, 461,
	462, 463, 464, -247, -248, -247, -242, -388, -247, -189,
	32, 31, -189, -242, -403, 303, 302, 304, -116, -217,
	-247, 68, 68, 68, 78, -248, -247, -238, -247, -389,
	-189, -248, -248, -189, -189, -189, -189, 121, -189, -189,
	-189, -189, -189, -189, -189, -189, -290, 40, -331, 349,
	348, -325, -327, 67, -326, 67, -326, -325, -325, 67,
	67, -328, 67, -328, -328, -325, -329, 67, -329, -330,
	67, -329, -217, -114, -88, -351, -350, -242, 40, 516,
	-89, -242, -111, -110, -242, -428, 73, 34, 67, 213,
	-260, -409, -217, 94, -280, -277, -274, -270, -215, -217,
	-260, -260, -407, -393, 34, -117, -217, -179, 16, -240,
	-274, -431, -228, -204, -203, -217, -230, -432, -225, -230,
	-230, -179, -432, -228, -228, -230, -226, 401, -179, -179,
	-311, -227, -217, -227, -260, -204, -204, -409, -280, -106,
	-101, -105, -102, -107, -182, -184, -104, 67, -141, -96,
	-217, 424, 425, 141, 144, 143, 31, 374, -294, 374,
	31, -270, -288, -284, 73, 375, -275, -293, 64, 130,
	-350, -291, -291, -291, -293, -293, 129, -89, -409, -279,
	-270, -217, -143, -141, -143, -218, 67, -178, 134, -177,
	15, -212, -217, 34, 73, 133, -178, 73, -143, -426,
	64, 46, 30, 67, -121, 68, -116, -120, -217, -344,
	-249, -386, 515, -121, 68, -384, -385, -116, -89, -89,
	-210, -211, -201, -207, -214, -215, -208, 208, 31, 93,
	34, 36, 314, 346, 96, 130, 20, 97, 166, 129,
	316, 442, 315, 203, 59, 445, 447, 446, 435, 433,
	367, 371, 373, 370, 434, 400, 40, 14, 37, 225,
	32, 33, 123, 205, 100, 101, 228, 35, 226, 85,
	44, 23, 62, 15, 17, 18, 317, 366, 216, 215,
	113, 386, 212, 57, 12, 132, 38, 110, 368, 53,
	89, 45, 55, 111, 21, 436, 437, 41, 385, 394,
	470, 232, 125, 318, 319, 60, 94, 374, 83, 43,
	64, 90, 19, 58, 112, 206, 441, 56, 372, 322,
	324, 334, 467, 323, 210, 411, 10, 313, 443, 30,
	224, 54, 211, 99, 214, 84, 231, 6, 88, 13,
	61, 65, 438, 439, 440, 46, 98, 16, 325, 474,
	387, 388, 389, 390, 391, 392, 393, 191, 192, 193,
	194, 195, 273, 219, 217, 221, 222, 515, 516, 197,
	198, 302, 304, 169, 200, 201, 202, 233, 147, 7,
	353, 354, 355, 358, 359, 360, 361, 362, 363, 364,
	523, 395, 396, 397, 398, 399, 412, 413, 414, 415,
	416, 417, 209, 23, -64, -396, 133, 134, -117, -297,
	-278, -275, -299, 121, 70, -285, 134, 474, 526, 71,
	214, -419, -418, 366, 68, 134, -354, 215, 441, 73,
	527, 196, -354, 83, 305, 84, 85, -324, -248, -245,
	-240, -238, -238, -243, 228, 93, -242, -241, -390, 100,
	-242, 34, 134, 65, 133, 68, 68, 15, 15, 68,
	-242, -242, 68, 15, 15, -242, 68, 133, 68, 68,
	68, 65, 68, 134, 68, 134, -242, 68, 68, -242,
	-242, -242, -248, 68, -242, -242, -242, -242, -242, -242,
	-242, -242, -242, -333, 350, 78, 78, -196, 73, -196,
	78, 78, 78, 134, 68, 73, 134, 22, 134, -108,
	36, 37, -135, -128, -129, -130, -131, -147, -194, 167,
	170, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 227, 162, 163, 164, 165, 183, 148, 168, 149,
	150, 151, 152, 153, 154, 157, 158, 159, 156, -141,
	216, -141, -412, 353, 35, -420, 134, 40, -418, -263,
	65, -258, -259, -257, -261, 40, -141, -141, 15, -100,
	-142, -217, 67, 68, 134, -242, -271, 65, -204, -179,
	-218, -141, -217, -179, -179, -228, -230, -230, -226, 133,
	-203, -413, 353, -420, 30, -185, -186, -187, -188, 53,
	57, 59, 54, 55, 56, 60, 30, 134, -213, -219,
	34, -214, 73, -215, -208, -213, -96, -101, -106, -213,
	67, 142, 145, 145, 144, 214, 67, 103, -293, -293,
	-293, 40, -216, 64, 134, -128, -179, -99, -101, -217,
	73, -217, 121, -179, -168, 518, 38, 39, -344, -384,
	-123, -409, 68, 134, -122, 308, 68, 134, 134, 67,
	68, 46, 134, 103, 133, 382, -217, -366, 68, -299,
	134, 214, 133, 133, -276, 332, -216, -278, 20, 474,
	-194, 38, -200, -199, 73, 527, 38, 68, -243, 93,
	-240, -237, 68, 101, -242, 99, -145, -147, 348, 349,
	-146, -152, 130, 166, 227, 165, 164, 162, 348, 349,
	-161, -217, -242, -242, 68, 68, -242, -242, 15, -217,
	-161, -238, -242, 68, -306, 396, -306, 68, 68, 68,
	68, -306, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 134, 68, 68, 68, 134, 68, 134,
	-350, -357, 405, -242, -242, -110, -109, 43, 340, 68,
	134, -147, -118, 94, 67, -415, 407, 355, -209, 103,
	-235, -234, 309, 41, -338, 375, 361, 362, -277, 241,
	64, 297, 298, 299, 300, -257, -202, 129, 252, 67,
	67, -141, -100, -217, 15, 134, -408, 133, -1, -217,
	-270, -228, -179, -432, -179, -228, -228, -230, -217, -415,
	-209, -235, -282, -281, -194, -105, -105, -105, -105, 53,
	53, 53, 58, 53, 58, 53, -187, -282, -107, -118,
	-219, 68, -425, -424, -423, -421, 61, 215, 62, -247,
	145, -278, -231, 73, -284, -141, -141, 68, -181, 17,
	133, -181, 78, 73, 89, 68, 134, -122, -116, 46,
	67, -217, -249, -352, -351, 46, -93, -344, -385, -350,
	-210, -207, -215, -208, 78, 15, -275, -270, 121, 121,
	70, 333, -285, 73, 354, 73, 211, 528, 134, 103,
	-200, 211, -237, -242, 68, -154, 153, 152, -154, 68,
	-325, -326, -325, -328, -325, -154, -154, 68, 68, 23,
	68, 68, 68, -242, 68, 68, 134, -306, 67, -306,
	-306, -306, -306, -306, -306, -306, -306, -306, -306, -306,
	-306, 73, 78, 78, -363, 392, 387, 389, 44, 45,
	73, 209, -130, 40, 34, 35, -136, -137, -138, -144,
	-139, -194, -233, -140, 219, 217, 221, -381, 88, 222,
	273, 89, 212, -416, 77, -410, 73, -217, -417, 77,
	356, 132, 311, 40, 357, 358, 372, 306, 78, 78,
	363, -411, 70, -141, -209, -209, -209, -136, -136, -119,
	65, 133, -101, -142, -217, 121, 68, -179, -217, -179,
	-179, -228, -416, -410, -417, -179, 134, 103, -125, -124,
	64, 65, -126, 64, -124, 53, 53, -179, -423, -422,
	23, -381, -381, -381, 68, 68, -180, 18, 20, 121,
	-180, -168, 13, -93, -409, 46, -93, -344, -123, 68,
	-344, -270, -285, 375, -141, -199, 73, 528, -141, -242,
	68, -242, -251, -250, 233, 68, 68, -332, 517, -361,
	387, 20, 20, -132, -147, -236, -93, -141, 68, 134,
	-147, -140, -217, 89, -380, -381, -260, -380, 89, 67,
	73, -414, 366, 73, 73, 78, 40, 78, 132, 359,
	-339, 67, -161, -163, -216, 130, 73, 68, 68, -213,
	-101, -217, -179, -408, 133, -179, -179, -414, -113, -281,
	-350, -242, 67, -242, 67, 53, 19, 17, -242, -248,
	-384, -344, 68, -122, -92, -355, -311, 68, 68, -113,
	20, -168, 73, 20, 73, -359, 73, 473, -118, -159,
	-160, -176, 346, 243, -261, 247, 77, 248, 382, 249,
	212, 251, 252, 253, 223, 254, 255, 256, 375, 257,
	258, 259, 260, 329, 6, 293, -138, -158, -157, -155,
	83, 94, 40, 346, -156, 77, 129, 266, 244, 267,
	-175, -232, 64, 352, 217, 88, 89, 334, -233, -376,
	-378, -217, -378, -217, -376, -376, -260, -242, 20, 474,
	310, 40, 78, 40, 360, -265, -267, -194, 67, -91,
	-90, -159, -179, -179, -114, -117, -377, -217, 217, 20,
	20, -92, -362, 392, -358, -356, 387, 388, 389, 390,
	-308, -307, -310, 393, 275, 399, -248, -197, 519, 73,
	389, -133, -217, 34, -301, 233, 134, -176, -209, -209,
	-202, 129, -209, -209, -209, -209, 250, 250, -209, -209,
	-209, -209, -209, -209, -209, -209, -209, -209, -209, -209,
	-209, -209, 67, -155, 83, -238, 73, -163, -164, 40,
	265, 261, -165, 40, 245, 246, -167, 67, 273, 13,
	89, 89, -141, 67, 65, 283, 67, 67, 67, -378,
	68, 73, 354, 73, 310, 68, 134, -325, -242, -92,
	-301, -113, 68, 68, 134, -364, 215, -360, 391, -356,
	20, 389, 20, 20, 68, -309, 96, 359, 363, -242,
	67, 20, 34, -93, -302, 282, 20, -176, 78, 78,
	-209, -209, 78, 73, 73, 73, -209, -209, 78, 73,
	-219, 78, 78, 78, 78, 40, 73, -166, 40, 261,
	265, 262, 263, 264, 78, 40, 78, 40, 78, 40,
	-217, 67, -382, -383, 73, 78, 67, -345, -266, 67,
	-265, -379, 297, 298, 299, 301, 300, -379, -265, -265,
	-265, 67, -287, -286, 274, 94, 375, -268, -267, -108,
	68, -302, -114, -217, 217, -371, 67, 78, -361, 20,
	-359, 20, -359, -359, -309, 515, 397, 398, 397, 398,
	-198, -217, -359, 73, 20, -303, 275, 276, -304, -315,
	278, -161, -161, 73, 73, -162, 244, -143, 68, 134,
	103, 68, -242, -252, -170, -169, 470, -265, 68, 68,
	68, 68, -265, 274, -269, 223, 77, 474, 295, 296,
	-108, -375, 30, 68, -370, -369, -195, -365, -217, 392,
	393, 73, -359, 93, 68, 134, -194, 67, -313, 279,
	67, -311, 67, -311, 89, 298, 245, 246, 68, -383,
	73, 68, -174, -172, -173, 64, 403, 271, 272, 68,
	-268, -268, -268, -268, 68, -209, 73, 294, -374, -373,
	-372, 68, 134, 133, -309, -217, -300, -305, 280, 78,
	-238, 67, -238, 67, -312, 277, 67, -286, -173, 64,
	-172, 64, 14, 13, -175, 78, -215, 134, 103, -369,
	-217, 68, -317, 67, 20, 68, -300, 68, -300, 67,
	103, -238, -171, 268, 269, 30, 144, -171, -373, 40,
	-242, 133, -318, -316, 233, -304, 68, 68, 68, -300,
	78, 68, 83, 40, 270, -217, 68, 134, 70, -314,
	281, 68, -316, -319, 46, 78, -323, -320, 67, -176,
	235, 113, -323, -176, -322, -321, 280, 236, 67, 68,
	134, 70, 232, 67, -248, -321, -320, -248, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 659, 660, 661, 662, 0, 0, 0,
	426, 427, 0, 404, 0, 0, 0, 0, 0, 0,
	313, 314, 315, 316, 317, 318, 319, 320, 321, 322,
	323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
	333, 282, 283, 0, 228, 224, 203, 204, 205, 164,
	165, 166, 167, 290, 0, 0, 0, 0, 0, 0,
	510, -2, 35, 663, 664, 665, 666, 667, 668, -2,
	439, 0, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 271, 272, 273, 267, 268, 270, 269, -2, 0,
	439, 217, 0, 208, 208, 0, 530, 0, 0, 544,
	566, 33, 0, 488, 0, 493, 870, 906, 907, 908,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 488, 229, 428,
	429, 530, 530, 402, 0, 253, 0, 1533, 257, 0,
	0, 0, 399, 248, 249, 250, 251, 252, 0, 651,
	0, 0, 244, 0, 223, 1592, 0, 0, 0, 0,
	0, 0, 108, 723, 110, 725, 114, 121, 0, 0,
	126, 127, 130, 131, 132, 133, 134, 0, 138, 0,
	140, 143, 0, 145, 146, 0, 149, 150, 151, 0,
	161, 162, 163, 726, 727, -2, 44, 671, 88, 1276,
	1173, 0, 1180, 1181, 1192, 1201, 978, 979, 980, 981,
	0, 0, 0, 0, 0, 988, 989, 0, 1001, 1681,
	0, 995, 996, 997, 998, 51, 63, 64, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 0, 1146,
	965, 906, 0, 1689, 0, 1709, 1690, 1708, 0, 0,
	1131, 0, 1121, 0, -2, -2, 0, 0, 1659, 0,
	-2, 1686, 1705, 1713, 1712, 1683, 1684, 1678, 1679, 1680,
	1682, 1691, 1693, 1704, 0, 1700, 1710, 1711, 0, 65,
	66, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1137, -2, 1139, 1140, 1142, 1143,
	1144, 1145, -2, 1148, 1149, 1150, -2, -2, 1153, 1154,
	1155, 1156, 1157, 1158, 1161, -2, 1163, -2, 1165, 1133,
	1134, 1135, 1136, 1125, 1126, 1127, 1128, 1129, 1130, -2,
	-2, -2, 0, 201, 199, 530, 602, 0, -2, 0,
	0, 0, 549, 552, 555, 558, 0, 36, 37, 0,
	0, 686, 752, 752, 752, 0, 752, 0, 0, 776,
	729, 730, 731, 750, 751, 444, 440, 441, 442, 443,
	518, 0, 520, 523, 382, 335, 0, 0, 0, 346,
	340, 0, 0, 0, 382, 0, 0, 525, 525, 0,
	391, 382, 382, -2, 0, 352, 353, 354, 340, 0,
	340, 358, 359, 360, 371, 372, 392, 1300, 0, 0,
	290, 290, 446, 218, 219, 207, 209, 0, 213, 0,
	206, 1592, 0, 0, 175, 1659, 180, 0, 1540, 1606,
	1555, 0, 0, 1573, 0, -2, 525, 0, 531, 0,
	530, 0, 290, 290, 290, 290, 290, 290, 290, 0,
	0, 0, 0, 567, 568, 563, 564, 565, 569, 570,
	3, 0, 652, 653, 656, 657, 658, 456, 0, 492,
	0, 0, 525, -2, 0, 403, 254, 909, 0, 0,
	258, 259, 0, 0, 274, 0, 277, 262, 263, 264,
	0, 0, 246, 247, 0, 0, 225, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 118, 115, 122,
	125, 135, 142, 0, 154, 156, 159, 116, 123, 128,
	129, 136, 157, 117, 119, 120, 124, 158, 160, 137,
	141, 155, 139, 144, 147, 148, 153, 0, 89, 0,
	0, 0, 0, 0, 0, 1179, 0, 0, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 1173, 0, 984, 985, 986, 987, 990,
	0, 1002, 0, 0, 0, 1230, 0, 1171, 1171, 0,
	1171, 1167, 1167, 0, 0, 1171, 1109, 0, 0, 1111,
	1122, 0, 0, 1114, 1115, 1171, 0, 1171, 1119, 1120,
	1105, 1106, 0, 1167, 0, 0, 1167, 1167, 1167, 1167,
	1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 0, 1277,
	1295, 1232, 1233, 1234, 1282, 1236, 1286, 1286, 1282, 1282,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 0,
	0, 1275, 1255, 1284, 1284, 1284, 1282, 1279, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1289, 1289, 1292, 1289, 0, 525, 0, 0,
	513, 0, 494, 0, 546, 548, 0, 550, 551, 553,
	554, 556, 557, 559, 560, 38, 0, 670, 0, 673,
	0, 752, 687, 0, 0, 0, 0, 0, 0, 752,
	752, 446, 445, 0, 519, 0, 0, 575, 0, 0,
	340, 382, 345, 342, 341, 387, 388, 384, 0, 384,
	384, 575, 0, 365, 366, 367, 382, 382, 373, 526,
	374, 375, 384, 0, 389, 390, 0, 575, 575, 0,
	0, 0, 752, 342, 356, 342, 1301, 1302, 0, 0,
	0, 447, 0, 0, 211, 0, 216, 168, 0, 0,
	0, 0, 0, 0, 197, 198, 0, 0, 0, 0,
	0, 188, 191, 864, 865, 720, 721, 192, 193, 494,
	545, 547, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 424, 0, 583, 577, 579, 646, 51, 583, 0,
	0, 467, 0, 461, 0, 0, 0, 871, 448, 480,
	450, 0, 469, 494, 516, 494, 0, 255, 0, 260,
	0, 0, 276, 278, 279, 280, 265, 266, 400, 242,
	243, 235, 236, 237, 238, 239, 240, 241, 245, 61,
	0, 226, 227, 0, 0, 0, 102, 103, 104, 105,
	106, 107, 109, 93, 416, 418, 712, 724, 0, 715,
	0, 112, 152, 85, 0, 0, 85, 1174, 1175, 1176,
	1177, 1178, 1182, 0, 1184, 1186, 1188, 1190, 0, 1206,
	-2, -2, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 1193, 1204, 1205, 0, 0, 0,
	0, 0, 1202, 1197, 0, 982, 0, 999, 1003, 0,
	0, 0, 52, 1166, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, 1104, 0, 1172, 0, 1173, 0, 0, 0,
	1168, 1169, 0, 0, 0, 1070, 1071, 1072, 0, 475,
	0, 1132, 1110, 1123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 1298, 1296,
	1297, 1235, 1283, 0, 1260, 0, 1261, 1262, 1263, 0,
	0, 1256, 0, 1257, 1258, 1259, 1251, 0, 1252, 1253,
	0, 1254, 200, 601, 603, 0, 484, 486, 487, 0,
	514, 527, 532, 533, 536, 34, 39, 0, 674, 0,
	0, 0, 689, 0, 288, 706, 0, 722, 744, -2,
	0, 0, 0, 521, 0, 0, 615, 334, 0, 383,
	337, 342, 575, 347, 343, 398, 348, 0, 386, 349,
	350, 351, 0, 575, 575, 382, 384, 384, 378, 379,
	0, 393, 396, 394, 0, 355, 357, 285, 288, 588,
	0, 589, 590, 586, 617, 641, 641, 0, 641, 621,
	870, 220, 221, 0, 0, 215, 169, 170, 0, 172,
	173, 174, 181, 176, 178, 0, 0, 182, 194, 195,
	196, 0, 0, 0, 186, 187, 0, 512, 414, 415,
	419, 0, 421, 868, 422, 423, 674, 575, 0, 584,
	0, 580, 647, 0, 649, 0, 575, 504, 0, 455,
	0, 480, 469, 0, 0, 456, 473, 0, 490, 449,
	477, 0, 481, 0, 0, 454, 470, 0, 515, 517,
	910, 0, 1307, -2, 1309, -2, -2, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 0, 261, 275, 0, 0, 0, 0,
	96, 709, 0, 97, 101, 91, 0, 0, 0, 714,
	0, 711, 716, 0, 111, 0, 0, 86, 87, 767,
	772, 0, 0, 1183, 1185, 1187, 1189, 1191, 0, 1194,
	1202, 1198, 0, 1195, 0, 0, 1174, 0, 1004, 0,
	0, 0, 0, 0, 0, 1057, 1058, 0, 0, 1062,
	0, 0, 1065, 0, 0, 0, 1069, 0, 1108, 1124,
	1112, 0, 1116, 0, 1118, 0, 0, 1036, 1036, 0,
	0, 0, 0, 1036, 0, 0, 0, 0, 0, 0,
	0, 0, 1278, 1231, 1299, 0, 0, 0, 1280, 0,
	0, 0, 0, 0, 604, 496, 0, 0, 0, 539,
	537, 538, 0, 0, 675, 676, 678, 679, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1525, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 523,
	0, 0, 696, 1303, 753, 292, 0, 0, 708, 0,
	0, 749, -2, 756, 0, 762, 0, 0, 0, 0,
	433, 437, 33, 524, 0, 576, 336, 0, 382, 344,
	385, 575, 870, 368, 369, 575, 382, 382, 384, 0,
	395, 696, 1303, 292, 0, 0, 0, 0, 0, 608,
	0, 0, 607, 0, 0, 0, 0, 0, 523, 642,
	0, 644, 645, 654, 655, 619, -2, 0, 588, 624,
	1171, 222, 210, 212, 0, 0, 0, 0, 183, 184,
	185, 189, 190, 0, 0, 0, 573, 578, 585, 648,
	650, 52, 581, 573, 40, 0, 0, 0, 460, 466,
	0, 458, 456, 0, 0, 0, 489, 0, 480, 482,
	0, 480, 0, 0, 0, 0, 401, 62, 281, 0,
	0, 0, 0, 0, 417, 0, 713, 93, 0, 0,
	113, 0, 0, 770, 0, 772, 0, 1170, 1196, 0,
	1203, 1199, 983, 991, 1000, 0, 0, 1006, 1018, 1018,
	0, 1009, 1282, 1286, 1012, 1282, 1284, 1282, 1018, 1018,
	0, 53, 0, 0, 1063, 1064, 0, 0, 0, 476,
	0, 0, 0, 1036, 1039, 0, 1040, 1036, 1036, 1036,
	1036, 1045, 1036, 1036, 1036, 1036, 1036, 1036, 1036, 1036,
	1288, 1287, 1273, 0, 1274, 1285, 1290, 0, 1293, 0,
	485, 500, 0, 528, 529, 534, 535, 0, 0, 0,
	0, 680, 0, 0, 872, 699, 697, 698, 0, 1304,
	703, 293, 294, 295, 296, 0, 0, 0, 707, 0,
	0, 745, 746, 747, 748, 757, 1303, 1303, 1303, 872,
	872, 488, 0, -2, 0, 0, 435, 0, 0, 616,
	338, 575, 361, 0, 376, 575, 575, 382, 397, 699,
	0, 703, 575, 232, 0, 611, 605, 0, 594, 609,
	610, 597, 0, 599, 0, 595, 596, 575, 587, 618,
	643, 620, 623, 625, 626, 632, 0, 0, 0, 0,
	214, 171, 0, 312, 177, 420, 869, 425, 571, 0,
	0, 571, 505, 504, 0, 457, 0, 0, 474, 480,
	0, 491, 478, 0, 483, 480, 453, 452, 471, 472,
	911, 1308, 1305, 1306, 256, 0, 710, 93, 98, 99,
	100, 94, 92, 717, 0, 719, 0, 768, 772, 0,
	0, 0, 1200, 1005, 992, 1007, 1019, 1020, 1008, 993,
	1010, 1011, 1013, 1014, 1015, 1016, 1017, 994, 1059, 0,
	1061, 1066, 1067, 0, 1113, 1117, 0, 1038, 1034, 1041,
	1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1281, 0, 0, 502, 74, 0, 0, 540, 541,
	669, 0, 677, 0, 0, 0, 0, 873, 874, 876,
	877, 0, 0, 879, 935, 0, 888, 752, 888, 0,
	0, 890, 891, 688, 0, 0, 691, 692, 701, 0,
	0, 0, 298, 299, 0, 0, 0, 311, 307, 308,
	309, 289, 702, 0, 0, 0, 0, 0, 0, 641,
	0, 0, 575, 434, 437, 438, 522, 339, 575, 380,
	377, 575, 284, 0, 287, 530, 0, 0, 591, 612,
	0, 0, 592, 0, 593, 598, 600, 231, 627, 0,
	0, 629, 630, 631, 622, 179, 561, 0, 0, 582,
	562, 41, 469, 462, 459, 480, 465, 464, 0, 479,
	451, 95, 90, 718, 456, 771, 773, 769, 76, 0,
	1068, 0, 530, 1035, 0, 1291, 1294, 504, 0, 501,
	0, 0, 0, 0, 683, 681, 684, 523, -2, 0,
	-2, 878, 936, 900, 900, 889, 900, 900, 752, 0,
	700, 690, 0, 704, 705, 0, 300, 301, 0, 304,
	310, 0, 758, 759, 866, 867, 760, 0, -2, 575,
	575, -2, 431, 436, 0, 362, 381, 286, 525, 233,
	234, 613, 0, 606, 636, 633, 0, 0, 572, 574,
	468, 463, 457, 76, 42, 70, 0, 1060, 1107, 1031,
	0, 506, 503, 0, 497, 499, 84, 0, 0, 777,
	-2, 820, 1303, 1303, 0, 1303, 1303, 1303, 1303, 0,
	0, 1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303, 1303,
	1303, 1303, 1303, 1303, 1303, 0, 875, 902, -2, 914,
	916, 0, 0, 919, 920, 0, 0, 0, 0, 957,
	926, 0, 0, 930, 0, 1218, 1219, 0, 934, 0,
	892, 901, 0, 901, 0, 0, 900, 0, 0, 0,
	297, 302, 0, 305, 306, 0, 740, 1282, 0, 764,
	76, 777, 530, 432, 230, 0, 0, 637, 639, 634,
	635, 43, 67, 72, 77, 78, 0, 0, 0, 0,
	0, 1032, 0, 1026, 1027, 1028, 1033, 495, 0, 75,
	0, 0, 682, 0, 779, 0, 761, 822, 0, 0,
	1303, 1303, 0, 0, 0, 0, 1303, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 915, 917, 918, 921, 922, 923, 962,
	963, 964, 924, 959, 960, 961, 925, 0, 0, 0,
	1216, 1217, 955, 0, 0, 0, 0, 0, 0, 0,
	886, 693, 0, 695, 303, 733, 0, 536, 0, 766,
	779, 525, 614, 628, 0, 54, 0, 74, 0, 79,
	0, 0, 0, 0, 1037, 1029, 0, 0, 0, 0,
	0, 0, 0, 685, 763, 0, 816, 821, 823, 824,
	0, 0, 827, 828, 829, 830, 0, 0, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 858, 859,
	860, 861, 862, 863, 843, 844, 845, 846, 847, 848,
	855, 0, 0, 852, 0, 0, 0, 1121, 950, 0,
	0, 893, 895, 896, 897, 898, 899, 894, 0, 0,
	0, 0, 885, 887, 931, 0, 694, 732, 741, 742,
	536, 765, 430, 638, 640, 45, 0, 0, 71, 0,
	80, 0, 82, 83, 0, 1021, 1022, 1024, 1023, 1025,
	0, 508, 498, 672, 0, 804, 0, 0, 810, 0,
	817, 825, 826, 831, 832, 849, 0, 0, 851, 0,
	0, 958, 0, 929, 938, 951, 0, 0, 733, 733,
	733, 733, 0, 932, 734, 1303, 0, 0, 738, 739,
	743, 774, 0, 55, 0, 57, 59, 60, 903, 68,
	69, 73, 81, 0, 507, 0, 780, 0, 782, 0,
	0, 0, 0, 0, 814, 0, 856, 857, 850, 853,
	854, 927, 937, 939, 940, 0, 952, 953, 954, 956,
	880, 881, 882, 883, 0, 0, 736, 0, 46, 47,
	0, 56, 0, 0, 1030, 509, 0, 784, 0, 805,
	0, 0, 0, 0, 0, 0, 0, 928, 941, 0,
	942, 0, 0, 0, 884, 735, 737, 0, 0, 58,
	904, 781, 778, 0, 816, 806, 0, 808, 0, 0,
	0, 0, 943, 945, 946, 0, 0, 944, 48, 49,
	50, 0, 0, 786, 0, 802, 807, 809, 811, 0,
	815, 813, 947, 949, 948, 905, 785, 0, 798, 783,
	0, 812, 787, -2, 0, 803, 788, -2, 0, 796,
	0, 0, 789, 797, 0, 792, 0, 0, 0, 791,
	0, -2, 799, 0, 0, 793, -2, 0, 801, 800,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 525,
	104, 103, 105, 3, 526, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 527, 115, 528, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:620
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:626
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:661
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:666
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:672
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:692
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:698
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:705
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:713
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:719
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:728
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:736
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:749
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:761
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:774
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:785
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:791
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:795
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:801
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:808
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:817
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:821
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:825
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:838
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:844
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:853
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:864
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:868
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:874
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:878
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:884
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:888
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:894
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:918
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:937
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:941
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:945
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:954
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:962
		{
			yyVAL.str = ""
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:966
		{
			yyVAL.str = yyDollar[3].str
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:971
		{
			yyVAL.str = "\n"
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:975
		{
			yyVAL.str = yyDollar[3].str
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:984
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1008
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1012
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1018
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1024
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1042
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1059
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1082
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1086
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1090
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1095
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1099
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1105
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1118
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1129
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1142
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1146
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1156
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1169
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1182
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1188
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1194
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1201
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1209
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1218
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1222
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1226
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1230
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1234
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1238
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1245
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1249
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1255
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1262
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1271
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1275
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1389
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1393
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1397
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1401
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1405
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1409
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1417
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1421
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1425
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1429
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1453
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1457
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1461
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1465
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1469
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1473
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1477
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1489
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1496
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1503
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1512
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1546
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1550
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1556
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1562
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1573
		{
			yyVAL.str = yyDollar[3].str
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1579
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1583
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1597
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1606
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1622
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1645
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1668
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1675
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1682
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1690
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1697
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1704
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1721
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1731
		{
			yyVAL.str = yyDollar[1].str
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1738
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1744
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1748
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1759
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1765
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1770
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1778
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1786
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1794
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1798
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1808
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1812
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1816
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1820
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1830
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1836
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1843
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1849
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1856
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1891
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1902
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1906
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1912
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1930
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1934
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1940
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1944
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1956
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1966
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1972
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1976
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1980
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1984
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1992
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2000
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2008
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2018
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2059
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2063
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2069
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2075
		{
			yyVAL.str = yyDollar[1].str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2080
		{
			yyVAL.str = "true"
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2081
		{
			yyVAL.str = "false"
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2082
		{
			yyVAL.str = yyDollar[1].str
		}
	case 281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2087
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2098
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2109
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2115
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2126
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2141
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2146
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2150
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2159
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2183
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2187
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2191
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2195
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2199
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2203
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2207
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2211
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2215
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2219
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2223
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2227
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2235
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2241
		{
			yyVAL.item = nil
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2246
		{
			yyVAL.item = nil
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2283
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2287
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2296
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2307
		{
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2311
		{
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2331
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2349
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2361
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2374
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2378
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2382
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2386
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2390
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2394
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2398
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2402
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2415
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2425
		{
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2427
		{
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2455
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2459
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2463
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2469
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2475
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2481
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2513
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2519
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2548
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2553
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2557
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2563
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2576
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2580
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2586
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2591
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2595
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2601
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2605
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2614
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2618
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2622
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2628
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2632
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2652
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2661
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2670
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2674
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2680
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2689
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2698
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2708
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2714
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2720
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2726
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2732
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2743
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2748
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2755
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2771
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2784
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2795
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2799
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2805
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2810
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2817
		{
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2819
		{
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2822
		{
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2831
		{
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2835
		{
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2840
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2849
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2856
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2862
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2870
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2877
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2884
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2904
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2917
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2923
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2927
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2933
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2941
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2954
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2963
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2971
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2979
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3003
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3026
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3030
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3036
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3045
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3049
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3055
		{
			yyVAL.str = yyDollar[1].str
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3059
		{
			yyVAL.str = yyDollar[3].str
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3065
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3069
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3075
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3080
		{
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3091
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3095
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3102
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3111
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3117
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3121
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3127
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3131
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3136
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3140
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3153
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3160
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3167
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3185
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3204
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3210
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3217
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3221
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3234
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3238
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3243
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3247
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3254
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3259
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3266
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3272
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3280
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3284
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3288
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3292
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3298
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3305
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3314
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3318
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3324
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3332
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3336
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3345
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3351
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3355
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3359
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3368
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3374
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3380
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3384
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3390
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3395
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3399
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3403
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3408
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3412
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3416
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3426
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3432
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3436
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3446
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3456
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3466
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3478
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3486
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3494
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3503
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3511
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3519
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3527
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3535
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3543
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3559
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3567
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3588
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3606
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3610
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3614
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3627
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3636
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3645
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3651
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3655
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3661
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3665
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3669
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3673
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3678
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3686
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3692
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3700
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3708
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3718
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3724
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3733
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3742
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3751
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3761
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3765
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3775
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3779
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3783
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3787
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3793
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3803
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3807
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3813
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3819
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3823
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3829
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3835
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3839
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3843
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3853
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3859
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3863
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3869
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3873
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3879
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3883
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3893
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3906
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3912
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3918
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3931
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3949
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3953
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3959
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3969
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3973
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3977
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3982
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3986
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3990
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3994
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4003
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4007
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4011
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4015
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4020
		{
			yyVAL.str = ""
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4024
		{
			yyVAL.str = yyDollar[1].str
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4028
		{
			yyVAL.str = yyDollar[2].str
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4037
		{
			yyVAL.str = ""
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4041
		{
			yyVAL.str = yyDollar[1].str
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4045
		{
			yyVAL.str = yyDollar[2].str
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4049
		{
			yyVAL.str = yyDollar[1].str
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4053
		{
			yyVAL.str = yyDollar[2].str
		}
	case 669:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4089
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4099
		{
			yyVAL.str = yyDollar[1].str
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4105
		{
			yyVAL.str = yyDollar[1].str
		}
	case 672:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4112
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4124
		{
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str))
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4129
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4136
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4140
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4146
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4152
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4156
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4160
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4166
		{
			yyVAL.str = yyDollar[1].str
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4172
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4178
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4188
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4199
		{
		}
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4204
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4216
		{
			yyVAL.str = yyDollar[1].str
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4222
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4232
		{
			yyVAL.str = yyDollar[1].str
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4236
		{
			yyVAL.str = yyDollar[1].str
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4242
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4249
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4255
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4263
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4269
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4276
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4284
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4290
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4299
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4311
		{
			yyVAL.str = yyDollar[1].str
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4316
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4322
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4330
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4436
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4440
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4446
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4456
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4460
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4466
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4476
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4480
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4484
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4493
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4499
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4506
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4512
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4525
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4534
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4538
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4544
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4561
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4565
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4569
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4573
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4579
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4602
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4624
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4628
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4632
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4636
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4646
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4650
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4656
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4661
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4666
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4670
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4674
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4678
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4682
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4688
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4702
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4706
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4711
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4715
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4721
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4725
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4731
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4735
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4739
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4744
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4748
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4754
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4766
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4775
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4788
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4795
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4803
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4809
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4818
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4822
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4827
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4831
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4838
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4849
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4853
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4862
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4872
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4876
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4883
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4894
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4907
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4913
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4917
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4923
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4932
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4946
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4952
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4956
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4962
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4969
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4978
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4982
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4987
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4991
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4996
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5000
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5005
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5009
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5019
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5023
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5034
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5042
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5050
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5058
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5069
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5078
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5088
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5098
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5102
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5107
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5111
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5120
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5126
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5130
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5134
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5140
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5144
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5148
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5152
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5156
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5160
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5164
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5168
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5172
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5176
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5180
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5184
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5188
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5192
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5196
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5200
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5204
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5208
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5212
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5216
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5220
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5224
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5228
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5232
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5236
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5240
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5244
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5248
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5252
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5259
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5263
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5269
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5274
		{
			yyVAL.str = ""
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5278
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5282
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5288
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5292
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5296
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5300
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5304
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5308
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5322
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5326
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5335
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5340
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5346
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5353
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5357
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5363
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5367
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5373
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5383
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5389
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5398
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5407
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5430
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5439
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5449
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5457
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5463
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5467
		{
			yyVAL.str = yyDollar[1].str
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5477
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5483
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5489
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5503
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5510
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5516
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5520
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5524
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5535
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5539
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5543
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5552
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5558
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5562
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5568
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5572
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5576
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5580
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5584
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5588
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5592
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5596
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5600
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5604
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5608
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5612
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5616
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5620
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5633
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5639
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5643
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5648
		{
			yyVAL.str = ""
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5652
		{
			yyVAL.str = yyDollar[1].str
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5658
		{
			yyVAL.str = ""
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5662
		{
			yyVAL.str = yyDollar[2].str
		}
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5668
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5680
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5687
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5694
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5701
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5708
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5717
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5723
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5729
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5733
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5737
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5741
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5745
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5750
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5757
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5761
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5765
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5774
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5779
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5783
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5799
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5805
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5809
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5813
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5817
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5821
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5825
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5829
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5833
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5837
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5841
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5845
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5849
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5853
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5859
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5863
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5867
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5871
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5875
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5879
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5883
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5887
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5891
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5895
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5899
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5903
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5908
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5916
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5920
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5924
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5933
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5937
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5941
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5945
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5954
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5963
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5969
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5973
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5979
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5989
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6006
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6023
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6036
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6049
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6061
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6075
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6090
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6105
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6122
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6137
		{
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6143
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6147
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6151
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6157
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6161
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6169
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6173
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6177
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6183
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6190
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6199
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6203
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6210
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6215
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6219
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6228
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6238
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6248
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6257
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6266
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6276
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6286
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6296
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6306
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6316
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6326
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6336
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6346
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6356
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6366
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6376
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6386
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6403
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6411
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6419
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6427
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6435
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6444
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6452
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6461
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6470
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6478
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6486
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6495
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6504
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6526
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6562
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6574
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6586
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6596
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6604
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6611
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6618
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6630
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6638
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6649
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6658
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6667
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6675
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6685
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6693
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6701
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6711
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6715
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6725
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6744
		{
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6746
		{
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6787
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6797
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6801
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6805
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6811
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6820
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6826
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6830
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6837
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6841
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6845
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6853
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6857
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6861
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6865
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6871
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6875
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6879
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6883
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6887
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6891
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6895
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6899
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6903
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6907
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6915
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6919
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6923
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6927
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6931
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6935
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6939
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6953
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6959
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6963
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6970
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6974
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6978
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6984
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6988
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6992
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6996
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7000
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7004
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7008
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7014
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7018
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7022
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7026
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7032
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7036
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7049
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7054
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7058
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7062
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7066
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7070
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7074
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7088
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7092
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7099
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7110
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7115
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7121
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7133
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7145
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7157
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7170
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7183
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7235
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7248
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7261
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7274
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7287
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7302
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7325
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7359
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7407
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7424
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7436
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7456
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7476
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7496
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7512
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7525
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7538
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7551
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7564
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7576
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7588
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7600
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7612
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7624
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7636
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7648
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7660
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7672
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7685
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7698
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7713
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7721
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7730
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7740
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7763
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7768
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7774
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7781
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7785
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7790
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7794
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7800
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7806
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7813
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7820
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7829
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7836
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7843
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7852
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7856
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7860
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7866
		{
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7868
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7878
		{
			yyVAL.str = ""
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7882
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

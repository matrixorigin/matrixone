// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const RETURNS = 57534
const SCHEMA = 57535
const TABLE = 57536
const INDEX = 57537
const VIEW = 57538
const TO = 57539
const IGNORE = 57540
const IF = 57541
const PRIMARY = 57542
const COLUMN = 57543
const CONSTRAINT = 57544
const SPATIAL = 57545
const FULLTEXT = 57546
const FOREIGN = 57547
const KEY_BLOCK_SIZE = 57548
const SHOW = 57549
const DESCRIBE = 57550
const EXPLAIN = 57551
const DATE = 57552
const ESCAPE = 57553
const REPAIR = 57554
const OPTIMIZE = 57555
const TRUNCATE = 57556
const MAXVALUE = 57557
const PARTITION = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const STATUS = 57564
const VARIABLES = 57565
const ROLE = 57566
const PROXY = 57567
const AVG_ROW_LENGTH = 57568
const STORAGE = 57569
const DISK = 57570
const MEMORY = 57571
const CHECKSUM = 57572
const COMPRESSION = 57573
const DATA = 57574
const DIRECTORY = 57575
const DELAY_KEY_WRITE = 57576
const ENCRYPTION = 57577
const ENGINE = 57578
const MAX_ROWS = 57579
const MIN_ROWS = 57580
const PACK_KEYS = 57581
const ROW_FORMAT = 57582
const STATS_AUTO_RECALC = 57583
const STATS_PERSISTENT = 57584
const STATS_SAMPLE_PAGES = 57585
const DYNAMIC = 57586
const COMPRESSED = 57587
const REDUNDANT = 57588
const COMPACT = 57589
const FIXED = 57590
const COLUMN_FORMAT = 57591
const AUTO_RANDOM = 57592
const RESTRICT = 57593
const CASCADE = 57594
const ACTION = 57595
const PARTIAL = 57596
const SIMPLE = 57597
const CHECK = 57598
const ENFORCED = 57599
const RANGE = 57600
const LIST = 57601
const ALGORITHM = 57602
const LINEAR = 57603
const PARTITIONS = 57604
const SUBPARTITION = 57605
const SUBPARTITIONS = 57606
const CLUSTER = 57607
const TYPE = 57608
const ANY = 57609
const SOME = 57610
const EXTERNAL = 57611
const LOCALFILE = 57612
const URL = 57613
const PREPARE = 57614
const DEALLOCATE = 57615
const RESET = 57616
const EXTENSION = 57617
const PROPERTIES = 57618
const PARSER = 57619
const VISIBLE = 57620
const INVISIBLE = 57621
const BTREE = 57622
const HASH = 57623
const RTREE = 57624
const BSI = 57625
const ZONEMAP = 57626
const LEADING = 57627
const BOTH = 57628
const TRAILING = 57629
const UNKNOWN = 57630
const EXPIRE = 57631
const ACCOUNT = 57632
const ACCOUNTS = 57633
const UNLOCK = 57634
const DAY = 57635
const NEVER = 57636
const PUMP = 57637
const SECOND = 57638
const ASCII = 57639
const COALESCE = 57640
const COLLATION = 57641
const HOUR = 57642
const MICROSECOND = 57643
const MINUTE = 57644
const MONTH = 57645
const QUARTER = 57646
const REPEAT = 57647
const REVERSE = 57648
const ROW_COUNT = 57649
const WEEK = 57650
const REVOKE = 57651
const FUNCTION = 57652
const PRIVILEGES = 57653
const TABLESPACE = 57654
const EXECUTE = 57655
const SUPER = 57656
const GRANT = 57657
const OPTION = 57658
const REFERENCES = 57659
const REPLICATION = 57660
const SLAVE = 57661
const CLIENT = 57662
const USAGE = 57663
const RELOAD = 57664
const FILE = 57665
const TEMPORARY = 57666
const ROUTINE = 57667
const EVENT = 57668
const SHUTDOWN = 57669
const NULLX = 57670
const AUTO_INCREMENT = 57671
const APPROXNUM = 57672
const SIGNED = 57673
const UNSIGNED = 57674
const ZEROFILL = 57675
const ENGINES = 57676
const LOW_CARDINALITY = 57677
const ADMIN_NAME = 57678
const RANDOM = 57679
const SUSPEND = 57680
const ATTRIBUTE = 57681
const HISTORY = 57682
const REUSE = 57683
const CURRENT = 57684
const OPTIONAL = 57685
const FAILED_LOGIN_ATTEMPTS = 57686
const PASSWORD_LOCK_TIME = 57687
const UNBOUNDED = 57688
const SECONDARY = 57689
const USER = 57690
const IDENTIFIED = 57691
const CIPHER = 57692
const ISSUER = 57693
const X509 = 57694
const SUBJECT = 57695
const SAN = 57696
const REQUIRE = 57697
const SSL = 57698
const NONE = 57699
const PASSWORD = 57700
const MAX_QUERIES_PER_HOUR = 57701
const MAX_UPDATES_PER_HOUR = 57702
const MAX_CONNECTIONS_PER_HOUR = 57703
const MAX_USER_CONNECTIONS = 57704
const FORMAT = 57705
const VERBOSE = 57706
const CONNECTION = 57707
const TRIGGERS = 57708
const PROFILES = 57709
const LOAD = 57710
const INFILE = 57711
const TERMINATED = 57712
const OPTIONALLY = 57713
const ENCLOSED = 57714
const ESCAPED = 57715
const STARTING = 57716
const LINES = 57717
const ROWS = 57718
const IMPORT = 57719
const MODUMP = 57720
const OVER = 57721
const PRECEDING = 57722
const FOLLOWING = 57723
const GROUPS = 57724
const DATABASES = 57725
const TABLES = 57726
const EXTENDED = 57727
const FULL = 57728
const PROCESSLIST = 57729
const FIELDS = 57730
const COLUMNS = 57731
const OPEN = 57732
const ERRORS = 57733
const WARNINGS = 57734
const INDEXES = 57735
const SCHEMAS = 57736
const NODE = 57737
const LOCKS = 57738
const TABLE_NUMBER = 57739
const COLUMN_NUMBER = 57740
const TABLE_VALUES = 57741
const NAMES = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const LOCAL = 57754
const EVENTS = 57755
const PLUGINS = 57756
const CURRENT_TIMESTAMP = 57757
const DATABASE = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const SEPARATOR = 57767
const TIMESTAMPDIFF = 57768
const CURRENT_DATE = 57769
const CURRENT_USER = 57770
const CURRENT_ROLE = 57771
const SECOND_MICROSECOND = 57772
const MINUTE_MICROSECOND = 57773
const MINUTE_SECOND = 57774
const HOUR_MICROSECOND = 57775
const HOUR_SECOND = 57776
const HOUR_MINUTE = 57777
const DAY_MICROSECOND = 57778
const DAY_SECOND = 57779
const DAY_MINUTE = 57780
const DAY_HOUR = 57781
const YEAR_MONTH = 57782
const SQL_TSI_HOUR = 57783
const SQL_TSI_DAY = 57784
const SQL_TSI_WEEK = 57785
const SQL_TSI_MONTH = 57786
const SQL_TSI_QUARTER = 57787
const SQL_TSI_YEAR = 57788
const SQL_TSI_SECOND = 57789
const SQL_TSI_MINUTE = 57790
const RECURSIVE = 57791
const CONFIG = 57792
const DRAINER = 57793
const MATCH = 57794
const AGAINST = 57795
const BOOLEAN = 57796
const LANGUAGE = 57797
const WITH = 57798
const QUERY = 57799
const EXPANSION = 57800
const ADDDATE = 57801
const BIT_AND = 57802
const BIT_OR = 57803
const BIT_XOR = 57804
const CAST = 57805
const COUNT = 57806
const APPROX_COUNT_DISTINCT = 57807
const APPROX_PERCENTILE = 57808
const CURDATE = 57809
const CURTIME = 57810
const DATE_ADD = 57811
const DATE_SUB = 57812
const EXTRACT = 57813
const GROUP_CONCAT = 57814
const MAX = 57815
const MID = 57816
const MIN = 57817
const NOW = 57818
const POSITION = 57819
const SESSION_USER = 57820
const STD = 57821
const STDDEV = 57822
const MEDIAN = 57823
const STDDEV_POP = 57824
const STDDEV_SAMP = 57825
const SUBDATE = 57826
const SUBSTR = 57827
const SUBSTRING = 57828
const SUM = 57829
const SYSDATE = 57830
const SYSTEM_USER = 57831
const TRANSLATE = 57832
const TRIM = 57833
const VARIANCE = 57834
const VAR_POP = 57835
const VAR_SAMP = 57836
const AVG = 57837
const ARROW = 57838
const ROW = 57839
const OUTFILE = 57840
const HEADER = 57841
const MAX_FILE_SIZE = 57842
const FORCE_QUOTE = 57843
const UNUSED = 57844
const BINDINGS = 57845
const DO = 57846
const DECLARE = 57847
const KILL = 57848
const QUERY_RESULT = 57849

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8377

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 92,
	21, 534,
	-2, 515,
	-1, 100,
	212, 733,
	-2, 780,
	-1, 119,
	42, 366,
	212, 366,
	239, 373,
	240, 373,
	410, 366,
	-2, 395,
	-1, 427,
	288, 89,
	386, 89,
	-2, 1521,
	-1, 486,
	67, 1148,
	-2, 1661,
	-1, 487,
	67, 1166,
	-2, 1632,
	-1, 491,
	67, 1167,
	-2, 1660,
	-1, 513,
	67, 1081,
	-2, 1709,
	-1, 514,
	67, 1082,
	-2, 1708,
	-1, 515,
	67, 1083,
	-2, 1698,
	-1, 516,
	67, 1673,
	-2, 1693,
	-1, 517,
	67, 1674,
	-2, 1694,
	-1, 518,
	67, 1675,
	-2, 1700,
	-1, 519,
	67, 1676,
	-2, 1683,
	-1, 520,
	67, 1677,
	-2, 1691,
	-1, 521,
	67, 1678,
	-2, 1701,
	-1, 522,
	67, 1679,
	-2, 1702,
	-1, 523,
	67, 1680,
	-2, 1707,
	-1, 524,
	67, 1681,
	-2, 1712,
	-1, 525,
	67, 1682,
	-2, 1713,
	-1, 527,
	67, 1145,
	-2, 1513,
	-1, 534,
	67, 1154,
	-2, 1539,
	-1, 538,
	67, 1158,
	-2, 1578,
	-1, 539,
	67, 1159,
	-2, 1656,
	-1, 547,
	67, 1169,
	-2, 1641,
	-1, 549,
	67, 1171,
	-2, 1651,
	-1, 561,
	67, 1063,
	-2, 1703,
	-1, 562,
	67, 1064,
	-2, 1704,
	-1, 563,
	67, 1065,
	-2, 1705,
	-1, 570,
	21, 535,
	-2, 498,
	-1, 624,
	405, 395,
	406, 395,
	-2, 367,
	-1, 668,
	103, 1513,
	114, 1513,
	133, 1513,
	-2, 1307,
	-1, 708,
	21, 535,
	-2, 498,
	-1, 807,
	21, 534,
	-2, 970,
	-1, 1129,
	67, 1214,
	-2, 1658,
	-1, 1130,
	67, 1215,
	-2, 1659,
	-1, 1290,
	1, 759,
	68, 759,
	525, 759,
	-2, 766,
	-1, 1416,
	133, 1317,
	-2, 1315,
	-1, 1418,
	133, 659,
	-2, 1312,
	-1, 1419,
	133, 660,
	-2, 1313,
	-1, 1712,
	68, 1293,
	134, 1293,
	-2, 1643,
	-1, 1713,
	68, 1289,
	134, 1289,
	-2, 1642,
	-1, 1714,
	68, 1271,
	134, 1271,
	-2, 1629,
	-1, 1715,
	68, 1272,
	134, 1272,
	-2, 1634,
	-1, 1716,
	68, 1273,
	134, 1273,
	-2, 1566,
	-1, 1717,
	68, 1274,
	134, 1274,
	-2, 1560,
	-1, 1718,
	68, 1275,
	134, 1275,
	-2, 1504,
	-1, 1719,
	68, 1276,
	134, 1276,
	-2, 1631,
	-1, 1720,
	68, 1277,
	134, 1277,
	-2, 1564,
	-1, 1721,
	68, 1278,
	134, 1278,
	-2, 1559,
	-1, 1722,
	68, 1279,
	134, 1279,
	-2, 1552,
	-1, 1724,
	68, 1262,
	134, 1262,
	-2, 1661,
	-1, 1725,
	68, 1291,
	134, 1291,
	-2, 1632,
	-1, 1726,
	68, 1291,
	134, 1291,
	-2, 1660,
	-1, 1727,
	68, 1291,
	134, 1291,
	-2, 1522,
	-1, 1728,
	68, 1289,
	134, 1289,
	-2, 1651,
	-1, 1729,
	68, 1286,
	134, 1286,
	-2, 1544,
	-1, 1730,
	67, 1244,
	68, 1244,
	134, 1244,
	348, 1244,
	349, 1244,
	350, 1244,
	-2, 1503,
	-1, 1731,
	67, 1245,
	68, 1245,
	134, 1245,
	348, 1245,
	349, 1245,
	350, 1245,
	-2, 1505,
	-1, 1732,
	67, 1248,
	68, 1248,
	134, 1248,
	348, 1248,
	349, 1248,
	350, 1248,
	-2, 1633,
	-1, 1733,
	67, 1250,
	68, 1250,
	134, 1250,
	348, 1250,
	349, 1250,
	350, 1250,
	-2, 1616,
	-1, 1734,
	67, 1252,
	68, 1252,
	134, 1252,
	348, 1252,
	349, 1252,
	350, 1252,
	-2, 1565,
	-1, 1735,
	67, 1254,
	68, 1254,
	134, 1254,
	348, 1254,
	349, 1254,
	350, 1254,
	-2, 1548,
	-1, 1736,
	67, 1255,
	68, 1255,
	134, 1255,
	348, 1255,
	349, 1255,
	350, 1255,
	-2, 1549,
	-1, 1737,
	67, 1257,
	68, 1257,
	134, 1257,
	348, 1257,
	349, 1257,
	350, 1257,
	-2, 1502,
	-1, 1738,
	68, 1296,
	134, 1296,
	348, 1296,
	349, 1296,
	350, 1296,
	-2, 1527,
	-1, 1739,
	68, 1296,
	134, 1296,
	348, 1296,
	349, 1296,
	350, 1296,
	-2, 1540,
	-1, 1740,
	68, 1299,
	134, 1299,
	348, 1299,
	349, 1299,
	350, 1299,
	-2, 1523,
	-1, 1741,
	68, 1296,
	134, 1296,
	348, 1296,
	349, 1296,
	350, 1296,
	-2, 1601,
	-1, 1755,
	1, 760,
	68, 760,
	525, 760,
	-2, 766,
	-1, 1811,
	21, 534,
	-2, 626,
	-1, 1989,
	65, 441,
	134, 441,
	-2, 875,
	-1, 2269,
	87, 766,
	129, 766,
	166, 766,
	169, 766,
	-2, 823,
	-1, 2271,
	273, 938,
	-2, 917,
	-1, 2299,
	87, 766,
	129, 766,
	166, 766,
	169, 766,
	-2, 823,
	-1, 2302,
	65, 441,
	134, 441,
	-2, 876,
	-1, 2343,
	87, 766,
	129, 766,
	166, 766,
	169, 766,
	-2, 824,
	-1, 2371,
	273, 938,
	-2, 918,
	-1, 2786,
	68, 795,
	134, 795,
	-2, 766,
	-1, 2790,
	68, 795,
	134, 795,
	-2, 766,
	-1, 2804,
	68, 799,
	134, 799,
	-2, 766,
	-1, 2809,
	68, 800,
	134, 800,
	-2, 766,
}

const yyPrivate = 57344

const yyLast = 29985

var yyAct = [...]int{
	458, 2344, 2790, 1194, 2798, 2789, 2766, 1109, 2631, 437,
	439, 2410, 2755, 2713, 460, 1808, 2670, 2696, 2596, 2697,
	2383, 2600, 2531, 2408, 2576, 1702, 2334, 835, 1374, 1105,
	2409, 2537, 1018, 2234, 2584, 2326, 1340, 484, 2433, 138,
	138, 1804, 2393, 2294, 2425, 138, 374, 381, 2372, 2151,
	381, 571, 973, 2448, 667, 2332, 1296, 1992, 2342, 1248,
	2392, 2147, 1112, 1051, 1839, 2010, 1402, 1408, 939, 1362,
	141, 1803, 2275, 1332, 2232, 137, 137, 386, 2156, 2282,
	441, 365, 1880, 1922, 1710, 2152, 392, 429, 1607, 1847,
	566, 1848, 431, 2226, 2031, 2209, 2167, 951, 1964, 2164,
	1763, 702, 2162, 605, 2145, 2051, 1879, 1708, 436, 1413,
	1409, 1416, 1403, 2045, 1355, 1410, 1603, 473, 92, 1265,
	1602, 1251, 1246, 379, 31, 2096, 1335, 566, 1966, 1193,
	1792, 2009, 1961, 953, 3, 1308, 1298, 138, 2347, 671,
	1108, 675, 42, 1762, 1273, 1286, 1842, 1103, 1635, 696,
	1604, 871, 1042, 1706, 440, 1333, 378, 19, 1748, 1309,
	364, 674, 30, 92, 1359, 1756, 91, 1306, 375, 8,
	963, 1305, 1614, 704, 628, 695, 376, 6, 438, 669,
	397, 428, 1157, 448, 377, 7, 1143, 42, 1690, 1618,
	1094, 370, 719, 1806, 389, 916, 1397, 1379, 1256, 1102,
	659, 1010, 432, 1813, 697, 1285, 1322, 604, 367, 395,
	959, 1164, 1163, 568, 997, 974, 394, 16, 660, 936,
	1041, 9, 380, 934, 4, 127, 130, 2089, 602, 1621,
	1882, 620, 570, 2089, 1611, 133, 132, 2426, 1840, 2233,
	1269, 830, 2621, 1405, 569, 2659, 673, 579, 2401, 739,
	92, 836, 1867, 131, 131, 131, 31, 131, 131, 1608,
	2340, 131, 1875, 38, 121, 101, 131, 694, 363, 999,
	2649, 937, 384, 131, 42, 38, 121, 101, 938, 775,
	131, 1619, 38, 121, 101, 773, 1061, 1843, 131, 19,
	2241, 2066, 772, 90, 30, 672, 986, 638, 987, 1343,
	1344, 8, 1058, 1963, 2685, 886, 979, 980, 565, 6,
	1054, 128, 128, 970, 128, 128, 1318, 7, 128, 1047,
	1000, 1111, 2683, 1060, 90, 556, 134, 555, 557, 558,
	128, 559, 560, 2700, 2701, 766, 771, 128, 1923, 580,
	2524, 2622, 2623, 1079, 977, 128, 2431, 976, 979, 980,
	2674, 2675, 2052, 2527, 2053, 1962, 2054, 391, 777, 778,
	779, 776, 2428, 754, 1095, 755, 1099, 138, 712, 2442,
	2434, 2435, 2436, 2437, 2235, 1862, 722, 713, 747, 711,
	749, 2599, 2249, 381, 381, 1348, 138, 2283, 1114, 1090,
	1098, 2658, 1199, 757, 1615, 2178, 1356, 572, 2290, 2406,
	1787, 1746, 1687, 710, 1955, 874, 1240, 1239, 750, 864,
	769, 770, 2505, 2168, 1184, 707, 709, 2390, 742, 2082,
	768, 2084, 730, 894, 898, 900, 902, 904, 905, 907,
	1872, 911, 908, 909, 910, 1852, 2508, 889, 890, 891,
	892, 872, 873, 895, 2403, 875, 809, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 887, 893, 752,
	1100, 706, 1969, 2661, 2662, 2699, 897, 899, 901, 903,
	906, 643, 2710, 100, 743, 129, 734, 680, 679, 681,
	1097, 383, 1352, 968, 2172, 722, 1113, 2441, 382, 92,
	92, 673, 2176, 2443, 119, 2687, 745, 2499, 759, 2538,
	760, 2783, 888, 2799, 708, 591, 1620, 678, 748, 751,
	2721, 2682, 2633, 42, 42, 2728, 958, 753, 988, 2461,
	2656, 425, 764, 765, 426, 670, 938, 2492, 762, 644,
	2758, 2777, 744, 2460, 430, 2639, 1121, 1124, 1125, 1975,
	672, 2561, 1006, 2173, 2174, 1005, 2483, 1122, 732, 724,
	723, 1053, 2800, 2598, 990, 683, 2689, 2690, 2175, 1180,
	807, 957, 1177, 715, 716, 956, 1179, 1176, 1178, 1182,
	1183, 972, 971, 676, 1181, 2487, 2170, 2585, 2586, 2587,
	2589, 2588, 933, 935, 2767, 756, 1096, 1920, 1609, 2629,
	2630, 1609, 2633, 684, 758, 2449, 2261, 731, 1609, 703,
	746, 1625, 1627, 1628, 605, 727, 728, 1636, 940, 672,
	1977, 1978, 1979, 1980, 2806, 2794, 2033, 2035, 390, 913,
	2522, 2253, 811, 812, 813, 814, 998, 2088, 1868, 763,
	1820, 677, 717, 815, 1612, 1328, 780, 1280, 943, 2092,
	2087, 2660, 979, 980, 2759, 808, 946, 978, 945, 865,
	385, 739, 761, 817, 941, 942, 2141, 944, 724, 723,
	979, 980, 566, 566, 566, 2624, 2625, 1022, 1022, 1623,
	948, 2160, 975, 2098, 2097, 823, 599, 600, 601, 2037,
	2179, 969, 1048, 1622, 381, 935, 1045, 1045, 569, 1610,
	921, 39, 2169, 2506, 1819, 1818, 1020, 1020, 1357, 682,
	1024, 2402, 2085, 39, 2688, 1817, 1056, 1187, 1188, 1189,
	1190, 1191, 1192, 1185, 1186, 1876, 102, 102, 102, 2407,
	102, 102, 1026, 774, 102, 1003, 1077, 1346, 1349, 102,
	1968, 738, 1091, 2597, 1347, 639, 102, 2793, 1816, 1022,
	1345, 1022, 712, 102, 845, 846, 896, 733, 646, 966,
	647, 102, 2812, 1110, 2740, 2171, 982, 983, 1123, 985,
	1062, 670, 2562, 2564, 2565, 2566, 2563, 2485, 2756, 2757,
	2034, 2484, 960, 964, 964, 1001, 1002, 1983, 775, 2805,
	2488, 2489, 1972, 1973, 1855, 965, 1990, 918, 1028, 2189,
	960, 1859, 960, 364, 2161, 2811, 1971, 1072, 1073, 920,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 2802, 570, 641, 1152, 1153, 640, 775, 1299,
	92, 739, 1162, 1626, 92, 1351, 1052, 2270, 1696, 1867,
	1059, 1208, 950, 1663, 1802, 92, 1662, 1115, 995, 996,
	1957, 989, 1214, 991, 92, 639, 2784, 650, 2779, 2770,
	1086, 1382, 1216, 981, 1221, 1222, 984, 1107, 1991, 42,
	2769, 775, 994, 2744, 1004, 566, 1016, 1017, 42, 2715,
	2707, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 2803, 1104,
	1013, 1014, 1015, 1085, 1088, 1076, 1829, 2455, 1044, 1044,
	1608, 1126, 2702, 1075, 649, 1082, 2691, 1027, 652, 651,
	1984, 363, 775, 1081, 1063, 1991, 1039, 1046, 1040, 1068,
	2664, 2654, 1617, 1262, 2780, 1617, 1801, 2157, 2160, 1092,
	777, 778, 779, 776, 641, 1064, 1617, 640, 2653, 1617,
	1241, 687, 692, 693, 1247, 2716, 2510, 1802, 2652, 2651,
	1283, 2641, 1022, 2517, 1084, 1290, 1207, 570, 1083, 1106,
	605, 1080, 1255, 1297, 1101, 1195, 1022, 1198, 2510, 1289,
	1307, 1209, 1829, 573, 2117, 374, 1263, 1701, 1299, 2516,
	1380, 1215, 736, 1217, 2509, 1646, 2665, 2510, 1116, 1117,
	1118, 1119, 1120, 1151, 1841, 1266, 1145, 1323, 1323, 737,
	1307, 1667, 1307, 1093, 2510, 1244, 1283, 1022, 1342, 1700,
	777, 778, 779, 776, 2510, 2510, 1281, 2642, 566, 2518,
	1022, 1321, 1253, 1254, 1291, 1292, 1599, 949, 2330, 1155,
	1802, 1159, 1160, 1161, 1007, 961, 2056, 2764, 1196, 1288,
	2717, 1282, 1202, 1283, 1022, 1767, 1373, 138, 138, 1197,
	2510, 2161, 737, 2289, 1645, 1384, 2154, 2305, 2190, 138,
	2155, 2158, 2047, 1750, 696, 1208, 1401, 1325, 1993, 1218,
	1870, 1208, 1208, 2028, 1946, 1944, 1376, 777, 778, 779,
	776, 1869, 1861, 1375, 1375, 1942, 1940, 1390, 914, 1928,
	1829, 1418, 1287, 1236, 2057, 1375, 2206, 1329, 1884, 1865,
	1297, 1304, 2057, 1353, 1022, 1783, 1301, 689, 690, 691,
	1659, 1311, 2159, 1312, 1647, 1314, 1315, 1598, 1258, 697,
	1261, 1699, 739, 1316, 1270, 1341, 960, 1857, 1267, 1319,
	1320, 1372, 1271, 962, 1370, 1274, 1358, 1313, 1264, 1802,
	1947, 1945, 1853, 1300, 1849, 1387, 1419, 1287, 964, 1766,
	1697, 1941, 1941, 705, 1671, 775, 1600, 1749, 1279, 1317,
	1630, 1065, 1670, 1368, 775, 1767, 912, 1294, 1616, 1633,
	1634, 1326, 1293, 1327, 821, 1069, 594, 1303, 1815, 725,
	1399, 705, 673, 1310, 1104, 648, 1399, 792, 673, 1201,
	1200, 1366, 1367, 1850, 2081, 1606, 597, 92, 795, 796,
	797, 798, 799, 792, 1324, 2194, 2079, 961, 1854, 583,
	1850, 1331, 1330, 954, 1009, 1767, 1696, 2753, 1354, 2741,
	775, 42, 1965, 1267, 1377, 1363, 1364, 1365, 775, 1267,
	1267, 672, 1369, 1668, 1617, 2643, 1011, 672, 2207, 2090,
	1675, 1070, 1860, 1371, 705, 2080, 1605, 1012, 1822, 714,
	1890, 1219, 1220, 1158, 1388, 1223, 1224, 1225, 1226, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1406, 1411, 1417,
	1412, 1596, 1284, 1597, 807, 461, 470, 779, 776, 1227,
	462, 2678, 469, 463, 467, 466, 464, 465, 429, 712,
	1742, 776, 138, 1601, 1008, 1158, 2495, 1641, 596, 2494,
	1711, 2279, 138, 138, 1764, 962, 2274, 2055, 593, 592,
	1150, 653, 2367, 2478, 1307, 1624, 2788, 2773, 645, 2776,
	2738, 1629, 2722, 672, 1776, 1148, 1149, 1147, 1744, 586,
	642, 1703, 1704, 471, 2572, 696, 1307, 1632, 1759, 1760,
	607, 1145, 2694, 2570, 1631, 2613, 1758, 2578, 2556, 1640,
	1342, 793, 794, 795, 796, 797, 798, 799, 792, 1743,
	1775, 2568, 2775, 468, 777, 778, 779, 776, 1638, 2555,
	590, 1642, 2571, 2791, 589, 777, 778, 779, 776, 1022,
	581, 2569, 2554, 2349, 1892, 777, 778, 779, 776, 712,
	697, 1045, 2558, 1342, 2404, 584, 1834, 2287, 1836, 2567,
	1711, 639, 2603, 1212, 2551, 2545, 1208, 1283, 1827, 2110,
	2542, 2541, 1653, 1213, 2286, 582, 1657, 2177, 1809, 1809,
	1810, 1809, 1814, 1812, 777, 778, 779, 776, 2136, 591,
	2557, 2135, 2405, 1669, 2075, 2288, 1672, 1673, 1674, 1757,
	2049, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1692,
	1685, 1773, 1695, 585, 2109, 1694, 1693, 2375, 1689, 1688,
	1779, 1777, 1778, 1780, 1781, 2504, 1833, 1811, 1066, 1705,
	1751, 1845, 1851, 1846, 931, 2163, 777, 778, 779, 776,
	641, 2385, 2709, 640, 2693, 1772, 2577, 777, 778, 779,
	776, 964, 2327, 1771, 2378, 1774, 2676, 2637, 425, 1788,
	2373, 426, 1782, 1784, 2636, 2388, 2389, 698, 699, 700,
	1341, 2374, 1768, 2626, 2559, 2552, 672, 626, 2353, 1914,
	2548, 595, 2547, 2546, 2507, 608, 1831, 1655, 2480, 2357,
	2427, 2325, 2323, 1785, 2297, 1838, 2285, 2804, 1823, 1824,
	1825, 2284, 1830, 1832, 2281, 2252, 2379, 1881, 2140, 2346,
	2134, 631, 2119, 2348, 2350, 2352, 1899, 2354, 2355, 2356,
	2358, 2359, 2360, 2362, 2363, 2364, 2365, 783, 784, 785,
	786, 787, 788, 789, 781, 2086, 1267, 1267, 1267, 2050,
	1654, 2040, 911, 908, 909, 910, 512, 511, 1904, 2336,
	1903, 1902, 1900, 1044, 777, 778, 779, 776, 2644, 2368,
	1698, 1691, 777, 778, 779, 776, 1391, 1389, 1276, 1863,
	1067, 777, 778, 779, 776, 777, 778, 779, 776, 1022,
	844, 1022, 625, 1022, 2335, 840, 839, 822, 712, 2781,
	606, 701, 2181, 2530, 2387, 2366, 2153, 2299, 2298, 1877,
	2269, 609, 634, 1643, 2256, 2263, 777, 778, 779, 776,
	1873, 2262, 2345, 1901, 2113, 2245, 2225, 1022, 1908, 1650,
	2224, 2381, 2195, 2118, 2115, 629, 777, 778, 779, 776,
	1915, 2112, 2108, 2100, 1022, 2095, 777, 778, 779, 776,
	2044, 2361, 1956, 2380, 2382, 1917, 1020, 2111, 2351, 1907,
	1943, 1939, 1938, 777, 778, 779, 776, 630, 635, 777,
	778, 779, 776, 1020, 1676, 1666, 1916, 1664, 1661, 777,
	778, 779, 776, 1660, 622, 1658, 624, 638, 1652, 1649,
	1648, 621, 619, 618, 1937, 623, 610, 611, 612, 613,
	614, 1211, 636, 637, 777, 778, 779, 776, 1894, 1210,
	131, 1031, 1029, 1874, 632, 633, 777, 778, 779, 776,
	2801, 2390, 2752, 2746, 138, 2729, 1888, 2726, 2724, 1104,
	1022, 1936, 1866, 2376, 1864, 1924, 1871, 837, 2612, 2386,
	1929, 2594, 1989, 2582, 1905, 1906, 1948, 2579, 1995, 2574,
	2519, 627, 1243, 777, 778, 779, 776, 2502, 2501, 2500,
	1959, 1885, 1935, 2734, 2004, 2497, 138, 128, 1255, 2491,
	712, 1342, 1342, 1342, 1342, 1934, 1958, 1898, 1987, 2476,
	2316, 2011, 712, 1342, 777, 778, 779, 776, 2314, 2292,
	2280, 952, 1982, 2011, 2121, 1887, 1252, 777, 778, 779,
	776, 1022, 2005, 1245, 2061, 1986, 1985, 1960, 1257, 138,
	138, 791, 790, 800, 801, 793, 794, 795, 796, 797,
	798, 799, 792, 1260, 1891, 1949, 1952, 2027, 1253, 1254,
	1665, 1208, 1249, 1909, 1910, 2062, 1933, 1996, 1912, 1913,
	1208, 574, 575, 576, 577, 2042, 2043, 1856, 1022, 819,
	1918, 1821, 1765, 1146, 573, 128, 1809, 2073, 777, 778,
	779, 776, 1396, 92, 1378, 1278, 2007, 1250, 1089, 31,
	1287, 1055, 915, 863, 1757, 1974, 862, 861, 860, 1267,
	1994, 2026, 1950, 1951, 1274, 1988, 1997, 42, 1341, 1341,
	1341, 1341, 1998, 2058, 2001, 2002, 2000, 2008, 2003, 2006,
	1341, 1981, 19, 1030, 859, 2068, 1266, 30, 858, 2025,
	2070, 2023, 2074, 2024, 8, 857, 1999, 2041, 1258, 856,
	1261, 2038, 6, 855, 854, 2036, 2012, 2013, 2014, 2015,
	7, 570, 2048, 853, 852, 2078, 851, 850, 712, 2101,
	849, 712, 2103, 2083, 2105, 2166, 2059, 848, 2063, 1711,
	2069, 2071, 2150, 2072, 847, 92, 2065, 138, 2732, 1932,
	843, 2067, 842, 841, 2077, 838, 712, 712, 2774, 2091,
	834, 1342, 1764, 833, 2193, 2093, 831, 2150, 2150, 830,
	2197, 777, 778, 779, 776, 2120, 829, 828, 2166, 2122,
	2123, 2124, 2125, 2182, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2099, 2102, 827, 2104, 2216, 1931, 826, 825,
	131, 2106, 2107, 121, 101, 791, 790, 800, 801, 793,
	794, 795, 796, 797, 798, 799, 792, 1886, 1908, 777,
	778, 779, 776, 824, 820, 2137, 818, 2144, 1283, 1267,
	741, 2498, 1283, 1267, 2191, 2142, 2210, 2211, 1770, 791,
	790, 800, 801, 793, 794, 795, 796, 797, 798, 799,
	792, 2183, 2184, 2185, 1753, 2215, 729, 128, 138, 2188,
	2186, 2187, 2192, 138, 2698, 2094, 1930, 2213, 1976, 1828,
	1393, 740, 2017, 2201, 2016, 2204, 2020, 2203, 1341, 2202,
	2214, 2021, 2221, 2222, 2223, 2231, 1395, 2114, 777, 778,
	779, 776, 2787, 2018, 2250, 2218, 2060, 2243, 2019, 2254,
	1858, 2143, 1394, 2246, 2196, 1927, 1954, 2200, 2198, 2199,
	75, 2022, 2230, 1798, 1799, 1758, 2205, 2138, 2139, 2240,
	1237, 2244, 1747, 1844, 2273, 1703, 1704, 777, 778, 779,
	776, 2217, 735, 2247, 1926, 41, 1883, 2248, 40, 1878,
	135, 917, 2251, 2319, 92, 2318, 92, 1049, 2536, 2308,
	2239, 1925, 2242, 360, 1022, 1022, 777, 778, 779, 776,
	1342, 2302, 800, 801, 793, 794, 795, 796, 797, 798,
	799, 792, 2258, 777, 778, 779, 776, 712, 361, 2317,
	359, 362, 2264, 1020, 2295, 2268, 2293, 1295, 2011, 1277,
	1201, 1200, 929, 930, 2267, 2277, 2266, 927, 928, 2667,
	2278, 1921, 2321, 993, 2276, 2271, 2276, 2272, 992, 1208,
	790, 800, 801, 793, 794, 795, 796, 797, 798, 799,
	792, 2304, 767, 777, 778, 779, 776, 2310, 2220, 1809,
	2300, 1595, 1911, 2301, 925, 926, 1889, 923, 924, 955,
	919, 712, 2311, 2747, 2627, 2394, 2396, 2312, 2394, 2394,
	1644, 2617, 2150, 2309, 777, 778, 779, 776, 777, 778,
	779, 776, 2615, 712, 2539, 2529, 2528, 2322, 2526, 2520,
	1154, 2424, 777, 778, 779, 776, 2328, 1341, 2329, 2423,
	2338, 2337, 2324, 2255, 2331, 1297, 573, 2421, 2395, 2237,
	2257, 2391, 777, 778, 779, 776, 1789, 2236, 2303, 2339,
	2228, 922, 2369, 2227, 2306, 2046, 1299, 2307, 2397, 2398,
	2076, 2447, 2444, 2736, 2735, 2451, 1651, 726, 2399, 1794,
	1797, 1798, 1799, 1795, 2735, 1796, 1800, 2736, 2414, 2493,
	2304, 2413, 2238, 2418, 967, 49, 1794, 1797, 1798, 1799,
	1795, 2419, 1796, 1800, 1, 574, 575, 576, 577, 1275,
	1022, 578, 1392, 2029, 2445, 2479, 92, 2429, 573, 2030,
	2219, 138, 2341, 2032, 1613, 1786, 1745, 2180, 947, 598,
	2396, 1203, 2454, 1074, 686, 721, 1071, 720, 718, 2295,
	1267, 1156, 475, 2313, 1404, 2575, 2315, 2420, 2666, 2712,
	2477, 2391, 2611, 2481, 2669, 1087, 92, 2496, 459, 2521,
	2320, 2430, 2417, 2523, 2432, 2333, 2064, 2415, 2416, 2750,
	616, 506, 2503, 482, 2452, 2453, 832, 2456, 2457, 2458,
	2459, 1057, 2540, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2515, 2514, 2513,
	2511, 2525, 1050, 1919, 688, 2573, 481, 2291, 1970, 685,
	617, 1686, 1238, 2400, 1259, 1242, 791, 790, 800, 801,
	793, 794, 795, 796, 797, 798, 799, 792, 712, 2797,
	2786, 712, 712, 712, 2765, 2745, 2553, 2632, 2782, 2681,
	2727, 712, 2440, 2438, 2439, 2720, 2628, 396, 1350, 2606,
	2609, 2583, 564, 657, 2591, 2592, 2593, 2595, 1769, 2657,
	2581, 2580, 587, 1752, 2590, 1809, 588, 2602, 1755, 1754,
	1127, 2601, 782, 1144, 1022, 1022, 2604, 2259, 2260, 816,
	435, 1639, 447, 2543, 2544, 2620, 2610, 2614, 1967, 2549,
	2550, 2384, 2616, 2039, 2618, 2619, 48, 47, 2605, 46,
	45, 1383, 1414, 1020, 1020, 138, 2634, 2635, 477, 140,
	1415, 2608, 2671, 712, 457, 456, 455, 454, 1793, 1791,
	1790, 1337, 1336, 1381, 2695, 712, 2647, 2648, 2490, 2560,
	2486, 2482, 2638, 2640, 2343, 2370, 2650, 2371, 2646, 2377,
	870, 1375, 866, 2673, 2512, 868, 869, 867, 2655, 1897,
	1893, 2148, 2149, 2146, 932, 2446, 2265, 2672, 712, 2663,
	1709, 1707, 2212, 2208, 1400, 1272, 1953, 1338, 1334, 2679,
	2412, 567, 32, 2535, 27, 5, 29, 28, 14, 15,
	13, 1078, 12, 2677, 18, 26, 2684, 2686, 25, 24,
	23, 83, 82, 81, 80, 22, 2711, 2692, 11, 79,
	78, 77, 21, 2703, 2704, 2705, 2706, 20, 2714, 73,
	71, 712, 72, 59, 58, 57, 69, 68, 2719, 67,
	66, 65, 1110, 2723, 64, 2725, 615, 56, 55, 54,
	53, 2718, 70, 63, 62, 61, 60, 52, 51, 50,
	99, 98, 97, 2730, 96, 2733, 2731, 2673, 2743, 2748,
	95, 94, 33, 34, 35, 712, 2739, 712, 2737, 36,
	109, 2672, 2749, 2742, 2751, 2535, 1110, 108, 1110, 2754,
	110, 111, 106, 104, 107, 105, 103, 43, 10, 2760,
	17, 2714, 2, 712, 2761, 0, 2768, 2708, 0, 0,
	2772, 0, 0, 0, 1110, 2778, 791, 790, 800, 801,
	793, 794, 795, 796, 797, 798, 799, 792, 0, 0,
	0, 0, 2645, 0, 0, 0, 0, 2785, 2792, 0,
	0, 0, 2796, 0, 0, 0, 2795, 0, 0, 0,
	0, 0, 0, 0, 0, 2807, 2792, 2809, 2808, 0,
	2810, 2796, 0, 0, 0, 0, 0, 0, 0, 1530,
	1572, 0, 0, 1519, 308, 1477, 1532, 1450, 1466, 1540,
	1467, 1468, 1505, 1429, 1487, 270, 1464, 0, 0, 0,
	0, 0, 0, 1522, 1421, 1453, 1454, 1423, 1460, 1424,
	1451, 1479, 215, 1449, 1490, 240, 1502, 1463, 1484, 1538,
	0, 0, 300, 254, 0, 0, 1482, 1524, 1485, 1510,
	1476, 1506, 1437, 1498, 1533, 1465, 0, 1503, 1534, 0,
	0, 2535, 0, 698, 699, 700, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 1501, 1528, 1462, 0,
	199, 1531, 1483, 1504, 0, 0, 1422, 1499, 0, 1427,
	1430, 1539, 1526, 1457, 1458, 0, 0, 0, 0, 0,
	0, 0, 0, 1480, 1486, 1507, 1473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1455, 0, 1495, 0,
	0, 0, 1432, 1428, 2763, 1478, 0, 0, 187, 305,
	321, 197, 296, 334, 202, 303, 192, 269, 292, 0,
	1571, 189, 319, 302, 251, 234, 235, 188, 0, 287,
	213, 226, 209, 267, 0, 318, 346, 208, 337, 1431,
	329, 191, 1566, 328, 266, 315, 320, 252, 246, 190,
	317, 250, 245, 238, 217, 0, 230, 278, 244, 279,
	231, 256, 255, 257, 1550, 1551, 1552, 1553, 1554, 357,
	1562, 1563, 0, 1567, 1568, 1569, 1436, 0, 1456, 1508,
	0, 1420, 1594, 1517, 1525, 1475, 331, 1527, 1472, 1471,
	1557, 0, 1556, 304, 1558, 1559, 239, 1523, 1452, 1461,
	347, 1459, 290, 272, 1529, 1494, 1570, 288, 242, 316,
	280, 322, 306, 330, 284, 281, 182, 307, 211, 253,
	193, 195, 207, 214, 216, 218, 219, 262, 263, 275,
	295, 309, 310, 311, 210, 203, 289, 204, 228, 205,
	183, 297, 206, 185, 276, 314, 1555, 224, 285, 249,
	186, 248, 277, 313, 312, 194, 338, 344, 345, 349,
	0, 350, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 1564, 0, 1565, 343, 222,
	179, 180, 326, 0, 268, 0, 1520, 1425, 1435, 1433,
	1469, 1496, 1497, 264, 342, 1512, 1516, 1513, 1541, 293,
	0, 0, 0, 0, 0, 233, 274, 1514, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 301, 324, 336, 353, 356, 1573, 1574, 1575, 184,
	355, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 327, 1470,
	1443, 1481, 335, 1446, 1444, 1511, 1445, 1500, 351, 258,
	259, 260, 261, 225, 0, 201, 354, 283, 1491, 1474,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1492, 1584, 1585,
	1586, 1587, 1588, 1448, 348, 221, 227, 2116, 229, 200,
	273, 223, 333, 236, 1518, 1589, 1590, 1591, 1592, 1593,
	265, 232, 298, 237, 243, 286, 332, 271, 291, 198,
	323, 299, 247, 0, 0, 1442, 1447, 1441, 1488, 1489,
	1535, 1536, 1537, 1509, 1434, 1521, 0, 1438, 1440, 1439,
	0, 0, 0, 0, 791, 790, 800, 801, 793, 794,
	795, 796, 797, 798, 799, 792, 0, 0, 0, 1515,
	308, 488, 1493, 181, 0, 241, 1542, 282, 220, 0,
	0, 270, 791, 790, 800, 801, 793, 794, 795, 796,
	797, 798, 799, 792, 449, 0, 0, 0, 215, 0,
	0, 240, 0, 0, 0, 480, 0, 0, 300, 254,
	0, 0, 0, 0, 535, 543, 0, 1560, 1561, 339,
	340, 341, 325, 0, 212, 1583, 442, 0, 0, 474,
	512, 511, 461, 470, 0, 0, 196, 462, 0, 469,
	463, 467, 466, 464, 465, 803, 527, 806, 0, 0,
	0, 0, 0, 433, 446, 2532, 450, 0, 0, 0,
	0, 0, 804, 805, 802, 0, 791, 790, 800, 801,
	793, 794, 795, 796, 797, 798, 799, 792, 443, 444,
	0, 0, 0, 0, 489, 0, 445, 0, 0, 452,
	471, 472, 0, 0, 187, 305, 321, 197, 296, 334,
	202, 303, 192, 269, 292, 0, 0, 189, 319, 302,
	251, 234, 235, 188, 0, 287, 213, 226, 209, 267,
	468, 487, 491, 208, 549, 485, 329, 191, 0, 328,
	266, 315, 320, 252, 246, 190, 317, 250, 245, 238,
	217, 550, 230, 278, 244, 279, 231, 256, 255, 257,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 331, 0, 0, 533, 0, 0, 0, 304,
	0, 0, 239, 0, 0, 0, 486, 0, 290, 272,
	546, 434, 0, 288, 242, 316, 280, 322, 306, 330,
	284, 281, 182, 307, 211, 253, 193, 195, 207, 214,
	216, 218, 219, 262, 263, 275, 295, 309, 310, 311,
	210, 203, 289, 204, 228, 205, 183, 297, 206, 185,
	276, 314, 0, 224, 285, 249, 186, 248, 277, 313,
	312, 194, 338, 344, 345, 349, 0, 350, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 343, 222, 179, 180, 326, 531,
	268, 0, 545, 526, 528, 529, 532, 536, 537, 538,
	539, 540, 542, 544, 548, 293, 0, 0, 0, 0,
	0, 233, 274, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 324, 336,
	353, 356, 0, 0, 0, 184, 355, 0, 2533, 0,
	0, 0, 2534, 1637, 547, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 490, 258, 259, 260, 261, 534,
	0, 201, 354, 283, 0, 791, 790, 800, 801, 793,
	794, 795, 796, 797, 798, 799, 792, 0, 0, 0,
	348, 221, 227, 0, 229, 200, 273, 223, 333, 236,
	0, 0, 0, 0, 0, 0, 265, 232, 298, 237,
	243, 286, 332, 271, 291, 198, 323, 299, 247, 0,
	0, 556, 530, 555, 557, 558, 554, 559, 560, 541,
	453, 0, 494, 552, 551, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 241, 0, 282, 220, 519, 499, 500, 501, 451,
	502, 497, 498, 520, 492, 516, 517, 476, 495, 503,
	515, 504, 518, 521, 522, 561, 562, 510, 563, 507,
	523, 514, 513, 505, 493, 524, 525, 479, 478, 508,
	509, 496, 308, 488, 0, 339, 340, 341, 325, 0,
	212, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 0, 0, 0,
	215, 0, 0, 240, 0, 0, 0, 480, 0, 0,
	300, 254, 0, 0, 0, 0, 535, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 0,
	0, 474, 512, 511, 461, 470, 0, 0, 196, 462,
	0, 469, 463, 467, 466, 464, 465, 0, 527, 0,
	0, 0, 0, 0, 0, 433, 446, 0, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	443, 444, 0, 0, 0, 0, 489, 0, 445, 0,
	0, 452, 471, 472, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 468, 487, 491, 208, 549, 485, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 550, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 331, 0, 0, 533, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 486, 0,
	290, 272, 546, 434, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 1205, 1204, 1206, 343, 222, 179, 180,
	326, 531, 268, 0, 545, 526, 528, 529, 532, 536,
	537, 538, 539, 540, 542, 544, 548, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 0, 0, 0, 0, 0, 547, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 490, 258, 259, 260,
	261, 534, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 265, 232,
	298, 237, 243, 286, 332, 271, 291, 198, 323, 299,
	247, 0, 0, 556, 530, 555, 557, 558, 554, 559,
	560, 541, 453, 0, 494, 552, 551, 553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 241, 0, 282, 220, 519, 499, 500,
	501, 451, 502, 497, 498, 520, 492, 516, 517, 476,
	495, 503, 515, 504, 518, 521, 522, 561, 562, 510,
	563, 507, 523, 514, 513, 505, 493, 524, 525, 479,
	478, 508, 509, 496, 308, 488, 0, 339, 340, 341,
	325, 0, 212, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 0,
	0, 0, 215, 0, 0, 240, 0, 0, 0, 480,
	0, 0, 300, 254, 0, 0, 0, 0, 535, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 0, 0, 474, 512, 511, 461, 470, 0, 0,
	196, 462, 0, 469, 463, 467, 466, 464, 465, 0,
	527, 0, 0, 0, 0, 0, 0, 433, 446, 0,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 443, 444, 0, 0, 0, 0, 489, 0,
	445, 0, 0, 452, 471, 472, 0, 0, 187, 305,
	321, 197, 296, 334, 202, 303, 192, 269, 292, 0,
	0, 189, 319, 302, 251, 234, 235, 188, 0, 287,
	213, 226, 209, 267, 468, 487, 491, 208, 549, 485,
	329, 191, 0, 328, 266, 315, 320, 252, 246, 190,
	317, 250, 245, 238, 217, 550, 230, 278, 244, 279,
	231, 256, 255, 257, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 0, 331, 0, 0, 533,
	0, 0, 0, 304, 0, 0, 239, 0, 0, 0,
	486, 0, 290, 272, 546, 434, 0, 288, 242, 316,
	280, 322, 306, 330, 284, 281, 182, 307, 211, 253,
	193, 195, 207, 214, 216, 218, 219, 262, 263, 275,
	295, 309, 310, 311, 210, 203, 289, 204, 228, 205,
	183, 297, 206, 185, 276, 314, 0, 224, 285, 249,
	186, 248, 277, 313, 312, 194, 338, 344, 345, 349,
	0, 350, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 343, 222,
	179, 180, 326, 531, 268, 0, 545, 526, 528, 529,
	532, 536, 537, 538, 539, 540, 542, 544, 548, 293,
	0, 0, 0, 0, 0, 233, 274, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 324, 336, 353, 356, 0, 0, 0, 184,
	355, 0, 2533, 0, 0, 0, 2534, 0, 547, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 490, 258,
	259, 260, 261, 534, 0, 201, 354, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 221, 227, 0, 229, 200,
	273, 223, 333, 236, 0, 0, 0, 0, 0, 0,
	265, 232, 298, 237, 243, 286, 332, 271, 291, 198,
	323, 299, 247, 0, 0, 556, 530, 555, 557, 558,
	554, 559, 560, 541, 453, 0, 494, 552, 551, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 241, 0, 282, 220, 519,
	499, 500, 501, 451, 502, 497, 498, 520, 492, 516,
	517, 476, 495, 503, 515, 504, 518, 521, 522, 561,
	562, 510, 563, 507, 523, 514, 513, 505, 493, 524,
	525, 479, 478, 508, 509, 496, 308, 488, 0, 339,
	340, 341, 325, 0, 212, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 0, 0, 0, 215, 1268, 0, 240, 0, 0,
	0, 480, 0, 0, 300, 254, 0, 0, 0, 0,
	535, 543, 0, 0, 0, 0, 0, 0, 0, 1360,
	0, 0, 442, 0, 0, 474, 512, 511, 461, 470,
	0, 0, 196, 462, 0, 469, 463, 467, 466, 464,
	465, 0, 527, 0, 0, 0, 0, 0, 0, 433,
	446, 0, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 443, 444, 0, 0, 0, 0,
	489, 0, 445, 0, 0, 1361, 471, 472, 0, 0,
	187, 305, 321, 197, 296, 334, 202, 303, 192, 269,
	292, 0, 0, 189, 319, 302, 251, 234, 235, 188,
	0, 287, 213, 226, 209, 267, 468, 487, 491, 208,
	549, 485, 329, 191, 0, 328, 266, 315, 320, 252,
	246, 190, 317, 250, 245, 238, 217, 550, 230, 278,
	244, 279, 231, 256, 255, 257, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 331, 0,
	0, 533, 0, 0, 0, 304, 0, 0, 239, 0,
	0, 0, 486, 0, 290, 272, 546, 434, 0, 288,
	242, 316, 280, 322, 306, 330, 284, 281, 182, 307,
	211, 253, 193, 195, 207, 214, 216, 218, 219, 262,
	263, 275, 295, 309, 310, 311, 210, 203, 289, 204,
	228, 205, 183, 297, 206, 185, 276, 314, 0, 224,
	285, 249, 186, 248, 277, 313, 312, 194, 338, 344,
	345, 349, 0, 350, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	343, 222, 179, 180, 326, 531, 268, 0, 545, 526,
	528, 529, 532, 536, 537, 538, 539, 540, 542, 544,
	548, 293, 0, 0, 0, 0, 0, 233, 274, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 324, 336, 353, 356, 0, 0,
	0, 184, 355, 0, 0, 0, 0, 0, 0, 0,
	547, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	490, 258, 259, 260, 261, 534, 0, 201, 354, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 221, 227, 0,
	229, 200, 273, 223, 333, 236, 0, 0, 0, 0,
	0, 0, 265, 232, 298, 237, 243, 286, 332, 271,
	291, 198, 323, 299, 247, 0, 0, 556, 530, 555,
	557, 558, 554, 559, 560, 541, 453, 0, 494, 552,
	551, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 241, 0, 282,
	220, 519, 499, 500, 501, 451, 502, 497, 498, 520,
	492, 516, 517, 476, 495, 503, 515, 504, 518, 521,
	522, 561, 562, 510, 563, 507, 523, 514, 513, 505,
	493, 524, 525, 479, 478, 508, 509, 496, 131, 308,
	488, 339, 340, 341, 325, 0, 212, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 0, 0, 0, 215, 0, 0,
	240, 0, 0, 0, 810, 0, 0, 300, 254, 0,
	0, 0, 0, 535, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 0, 0, 474, 512,
	511, 461, 470, 0, 0, 196, 462, 0, 469, 463,
	467, 466, 464, 465, 0, 527, 0, 0, 0, 0,
	0, 0, 433, 446, 0, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 443, 444, 0,
	0, 0, 0, 489, 0, 445, 0, 0, 452, 471,
	472, 0, 0, 187, 305, 321, 197, 296, 334, 202,
	303, 192, 269, 292, 0, 0, 189, 319, 302, 251,
	234, 235, 188, 0, 287, 213, 226, 209, 267, 468,
	487, 491, 208, 549, 485, 329, 191, 0, 328, 266,
	315, 320, 252, 246, 190, 317, 250, 245, 238, 217,
	550, 230, 278, 244, 279, 231, 256, 255, 257, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	0, 331, 0, 0, 533, 0, 0, 0, 304, 0,
	0, 239, 0, 0, 0, 486, 0, 290, 272, 546,
	434, 0, 288, 242, 316, 280, 322, 306, 330, 284,
	281, 182, 307, 211, 253, 193, 195, 207, 214, 216,
	218, 219, 262, 263, 275, 295, 309, 310, 311, 210,
	203, 289, 204, 228, 205, 183, 297, 206, 185, 276,
	314, 0, 224, 285, 249, 186, 248, 277, 313, 312,
	194, 338, 344, 345, 349, 0, 350, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 343, 222, 179, 180, 326, 531, 268,
	0, 545, 526, 528, 529, 532, 536, 537, 538, 539,
	540, 542, 544, 548, 293, 0, 0, 0, 0, 0,
	233, 274, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 324, 336, 353,
	356, 0, 0, 0, 184, 355, 0, 0, 0, 0,
	0, 0, 0, 547, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 490, 258, 259, 260, 261, 534, 0,
	201, 354, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	221, 227, 0, 229, 200, 273, 223, 333, 236, 0,
	0, 0, 0, 0, 0, 265, 232, 298, 237, 243,
	286, 332, 271, 291, 198, 323, 299, 247, 0, 0,
	556, 530, 555, 557, 558, 554, 559, 560, 541, 453,
	0, 494, 552, 551, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	241, 102, 282, 220, 519, 499, 500, 501, 451, 502,
	497, 498, 520, 492, 516, 517, 476, 495, 503, 515,
	504, 518, 521, 522, 561, 562, 510, 563, 507, 523,
	514, 513, 505, 493, 524, 525, 479, 478, 508, 509,
	496, 308, 488, 0, 339, 340, 341, 325, 0, 212,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 0, 0, 0, 215,
	2762, 0, 240, 0, 0, 0, 480, 0, 0, 300,
	254, 0, 0, 0, 0, 535, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 0, 0,
	474, 512, 511, 461, 470, 0, 0, 196, 462, 0,
	469, 463, 467, 466, 464, 465, 0, 527, 0, 0,
	0, 0, 0, 0, 433, 446, 0, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 443,
	444, 0, 0, 0, 0, 489, 0, 445, 0, 0,
	452, 471, 472, 0, 0, 187, 305, 321, 197, 296,
	334, 202, 303, 192, 269, 292, 0, 0, 189, 319,
	302, 251, 234, 235, 188, 0, 287, 213, 226, 209,
	267, 468, 487, 491, 208, 549, 485, 329, 191, 0,
	328, 266, 315, 320, 252, 246, 190, 317, 250, 245,
	238, 217, 550, 230, 278, 244, 279, 231, 256, 255,
	257, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 331, 0, 0, 533, 0, 0, 0,
	304, 0, 0, 239, 0, 0, 0, 486, 0, 290,
	272, 546, 434, 0, 288, 242, 316, 280, 322, 306,
	330, 284, 281, 182, 307, 211, 253, 193, 195, 207,
	214, 216, 218, 219, 262, 263, 275, 295, 309, 310,
	311, 210, 203, 289, 204, 228, 205, 183, 297, 206,
	185, 276, 314, 0, 224, 285, 249, 186, 248, 277,
	313, 312, 194, 338, 344, 345, 349, 0, 350, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 343, 222, 179, 180, 326,
	531, 268, 0, 545, 526, 528, 529, 532, 536, 537,
	538, 539, 540, 542, 544, 548, 293, 0, 0, 0,
	0, 0, 233, 274, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 324,
	336, 353, 356, 0, 0, 0, 184, 355, 0, 0,
	0, 0, 0, 0, 0, 547, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 490, 258, 259, 260, 261,
	534, 0, 201, 354, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 221, 227, 0, 229, 200, 273, 223, 333,
	236, 0, 0, 0, 0, 0, 0, 265, 232, 298,
	237, 243, 286, 332, 271, 291, 198, 323, 299, 247,
	0, 0, 556, 530, 555, 557, 558, 554, 559, 560,
	541, 453, 0, 494, 552, 551, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 241, 0, 282, 220, 519, 499, 500, 501,
	451, 502, 497, 498, 520, 492, 516, 517, 476, 495,
	503, 515, 504, 518, 521, 522, 561, 562, 510, 563,
	507, 523, 514, 513, 505, 493, 524, 525, 479, 478,
	508, 509, 496, 308, 488, 0, 339, 340, 341, 325,
	0, 212, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 0, 0,
	0, 215, 1268, 0, 240, 0, 0, 0, 480, 0,
	0, 300, 254, 0, 0, 0, 0, 535, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	0, 0, 474, 512, 511, 461, 470, 0, 0, 196,
	462, 0, 469, 463, 467, 466, 464, 465, 0, 527,
	0, 0, 0, 0, 0, 0, 433, 446, 0, 450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 443, 444, 0, 0, 0, 0, 489, 0, 445,
	0, 0, 452, 471, 472, 0, 0, 187, 305, 321,
	197, 296, 334, 202, 303, 192, 269, 292, 0, 0,
	189, 319, 302, 251, 234, 235, 188, 0, 287, 213,
	226, 209, 267, 468, 487, 491, 208, 549, 485, 329,
	191, 0, 328, 266, 315, 320, 252, 246, 190, 317,
	250, 245, 238, 217, 550, 230, 278, 244, 279, 231,
	256, 255, 257, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 0, 331, 0, 0, 533, 0,
	0, 0, 304, 0, 0, 239, 0, 0, 0, 486,
	0, 290, 272, 546, 434, 0, 288, 242, 316, 280,
	322, 306, 330, 284, 281, 182, 307, 211, 253, 193,
	195, 207, 214, 216, 218, 219, 262, 263, 275, 295,
	309, 310, 311, 210, 203, 289, 204, 228, 205, 183,
	297, 206, 185, 276, 314, 0, 224, 285, 249, 186,
	248, 277, 313, 312, 194, 338, 344, 345, 349, 0,
	350, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 343, 222, 179,
	180, 326, 531, 268, 0, 545, 526, 528, 529, 532,
	536, 537, 538, 539, 540, 542, 544, 548, 293, 0,
	0, 0, 0, 0, 233, 274, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 324, 336, 353, 356, 0, 0, 0, 184, 355,
	0, 0, 0, 0, 0, 0, 0, 547, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 490, 258, 259,
	260, 261, 534, 0, 201, 354, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 221, 227, 0, 229, 200, 273,
	223, 333, 236, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 556, 530, 555, 557, 558, 554,
	559, 560, 541, 453, 0, 494, 552, 551, 553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 0, 282, 220, 519, 499,
	500, 501, 451, 502, 497, 498, 520, 492, 516, 517,
	476, 495, 503, 515, 504, 518, 521, 522, 561, 562,
	510, 563, 507, 523, 514, 513, 505, 493, 524, 525,
	479, 478, 508, 509, 496, 308, 488, 0, 339, 340,
	341, 325, 0, 212, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	0, 0, 0, 215, 0, 0, 240, 0, 0, 0,
	480, 0, 0, 300, 254, 0, 0, 0, 0, 535,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 0, 0, 474, 512, 511, 461, 470, 0,
	0, 196, 462, 0, 469, 463, 467, 466, 464, 465,
	0, 527, 0, 0, 0, 0, 0, 0, 433, 446,
	0, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 444, 1043, 0, 0, 0, 489,
	0, 445, 0, 0, 452, 471, 472, 0, 0, 187,
	305, 321, 197, 296, 334, 202, 303, 192, 269, 292,
	0, 0, 189, 319, 302, 251, 234, 235, 188, 0,
	287, 213, 226, 209, 267, 468, 487, 491, 208, 549,
	485, 329, 191, 0, 328, 266, 315, 320, 252, 246,
	190, 317, 250, 245, 238, 217, 550, 230, 278, 244,
	279, 231, 256, 255, 257, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 331, 0, 0,
	533, 0, 0, 0, 304, 0, 0, 239, 0, 0,
	0, 486, 0, 290, 272, 546, 434, 0, 288, 242,
	316, 280, 322, 306, 330, 284, 281, 182, 307, 211,
	253, 193, 195, 207, 214, 216, 218, 219, 262, 263,
	275, 295, 309, 310, 311, 210, 203, 289, 204, 228,
	205, 183, 297, 206, 185, 276, 314, 0, 224, 285,
	249, 186, 248, 277, 313, 312, 194, 338, 344, 345,
	349, 0, 350, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 343,
	222, 179, 180, 326, 531, 268, 0, 545, 526, 528,
	529, 532, 536, 537, 538, 539, 540, 542, 544, 548,
	293, 0, 0, 0, 0, 0, 233, 274, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 324, 336, 353, 356, 0, 0, 0,
	184, 355, 0, 0, 0, 0, 0, 0, 0, 547,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 490,
	258, 259, 260, 261, 534, 0, 201, 354, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 221, 227, 0, 229,
	200, 273, 223, 333, 236, 0, 0, 0, 0, 0,
	0, 265, 232, 298, 237, 243, 286, 332, 271, 291,
	198, 323, 299, 247, 0, 0, 556, 530, 555, 557,
	558, 554, 559, 560, 541, 453, 0, 494, 552, 551,
	553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 241, 0, 282, 220,
	519, 499, 500, 501, 451, 502, 497, 498, 520, 492,
	516, 517, 476, 495, 503, 515, 504, 518, 521, 522,
	561, 562, 510, 563, 507, 523, 514, 513, 505, 493,
	524, 525, 479, 478, 508, 509, 496, 0, 0, 0,
	339, 340, 341, 325, 0, 212, 308, 488, 0, 0,
	1656, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 0, 0, 0, 215, 0, 0, 240, 0, 0,
	0, 480, 0, 0, 300, 254, 0, 0, 0, 0,
	535, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 0, 0, 474, 512, 511, 461, 470,
	0, 0, 196, 462, 0, 469, 463, 467, 466, 464,
	465, 0, 527, 0, 0, 0, 0, 0, 0, 433,
	446, 0, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 443, 444, 0, 0, 0, 0,
	489, 0, 445, 0, 0, 452, 471, 472, 0, 0,
	187, 305, 321, 197, 296, 334, 202, 303, 192, 269,
	292, 0, 0, 189, 319, 302, 251, 234, 235, 188,
	0, 287, 213, 226, 209, 267, 468, 487, 491, 208,
	549, 485, 329, 191, 0, 328, 266, 315, 320, 252,
	246, 190, 317, 250, 245, 238, 217, 550, 230, 278,
	244, 279, 231, 256, 255, 257, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 331, 0,
	0, 533, 0, 0, 0, 304, 0, 0, 239, 0,
	0, 0, 486, 0, 290, 272, 546, 434, 0, 288,
	242, 316, 280, 322, 306, 330, 284, 281, 182, 307,
	211, 253, 193, 195, 207, 214, 216, 218, 219, 262,
	263, 275, 295, 309, 310, 311, 210, 203, 289, 204,
	228, 205, 183, 297, 206, 185, 276, 314, 0, 224,
	285, 249, 186, 248, 277, 313, 312, 194, 338, 344,
	345, 349, 0, 350, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	343, 222, 179, 180, 326, 531, 268, 0, 545, 526,
	528, 529, 532, 536, 537, 538, 539, 540, 542, 544,
	548, 293, 0, 0, 0, 0, 0, 233, 274, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 324, 336, 353, 356, 0, 0,
	0, 184, 355, 0, 0, 0, 0, 0, 0, 0,
	547, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	490, 258, 259, 260, 261, 534, 0, 201, 354, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 221, 227, 0,
	229, 200, 273, 223, 333, 236, 0, 0, 0, 0,
	0, 0, 265, 232, 298, 237, 243, 286, 332, 271,
	291, 198, 323, 299, 247, 0, 0, 556, 530, 555,
	557, 558, 554, 559, 560, 541, 453, 0, 494, 552,
	551, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 241, 0, 282,
	220, 519, 499, 500, 501, 451, 502, 497, 498, 520,
	492, 516, 517, 476, 495, 503, 515, 504, 518, 521,
	522, 561, 562, 510, 563, 507, 523, 514, 513, 505,
	493, 524, 525, 479, 478, 508, 509, 496, 308, 488,
	0, 339, 340, 341, 325, 0, 212, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 0, 0, 0, 215, 0, 0, 240,
	0, 0, 0, 480, 0, 0, 300, 254, 0, 0,
	0, 0, 535, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 442, 0, 0, 474, 512, 511,
	461, 470, 0, 0, 196, 462, 0, 469, 463, 467,
	466, 464, 465, 0, 527, 0, 0, 0, 0, 0,
	0, 433, 446, 0, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 444, 0, 0,
	0, 0, 489, 0, 445, 0, 0, 452, 471, 472,
	0, 0, 187, 305, 321, 197, 296, 334, 202, 303,
	192, 269, 292, 0, 0, 189, 319, 302, 251, 234,
	235, 188, 0, 287, 213, 226, 209, 267, 468, 487,
	491, 208, 549, 485, 329, 191, 0, 328, 266, 315,
	320, 252, 246, 190, 317, 250, 245, 238, 217, 550,
	230, 278, 244, 279, 231, 256, 255, 257, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	331, 0, 0, 533, 0, 0, 0, 304, 0, 0,
	239, 0, 0, 0, 486, 0, 290, 272, 546, 434,
	0, 288, 242, 316, 280, 322, 306, 330, 284, 281,
	182, 307, 211, 253, 193, 195, 207, 214, 216, 218,
	219, 262, 263, 275, 295, 309, 310, 311, 210, 203,
	289, 204, 228, 205, 183, 297, 206, 185, 276, 314,
	0, 224, 285, 249, 186, 248, 277, 313, 312, 194,
	338, 344, 345, 349, 0, 350, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 343, 222, 179, 180, 326, 531, 268, 0,
	545, 526, 528, 529, 532, 536, 537, 538, 539, 540,
	542, 544, 548, 293, 0, 0, 0, 0, 0, 233,
	274, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 324, 336, 353, 356,
	0, 0, 0, 184, 355, 0, 0, 0, 0, 0,
	0, 0, 547, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 490, 258, 259, 260, 261, 534, 0, 201,
	354, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 221,
	227, 0, 229, 200, 273, 223, 333, 236, 0, 0,
	0, 0, 0, 0, 265, 232, 298, 237, 243, 286,
	332, 271, 291, 198, 323, 299, 247, 0, 0, 556,
	530, 555, 557, 558, 554, 559, 560, 541, 453, 0,
	494, 552, 551, 553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 241,
	0, 282, 220, 519, 499, 500, 501, 451, 502, 497,
	498, 520, 492, 516, 517, 476, 495, 503, 515, 504,
	518, 521, 522, 561, 562, 510, 563, 507, 523, 514,
	513, 505, 493, 524, 525, 479, 478, 508, 509, 496,
	308, 488, 0, 339, 340, 341, 325, 0, 212, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	1128, 0, 0, 0, 449, 0, 0, 0, 215, 0,
	0, 240, 0, 0, 0, 480, 0, 0, 300, 254,
	0, 0, 0, 0, 535, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 0, 0, 474,
	512, 511, 461, 470, 0, 0, 196, 462, 0, 469,
	463, 467, 466, 464, 465, 0, 527, 0, 0, 0,
	0, 0, 0, 0, 446, 0, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 443, 444,
	0, 0, 0, 0, 489, 0, 445, 0, 0, 452,
	471, 472, 0, 0, 187, 305, 321, 197, 296, 334,
	202, 303, 192, 269, 292, 0, 0, 189, 319, 302,
	251, 234, 235, 188, 0, 287, 213, 226, 209, 267,
	468, 487, 491, 208, 549, 485, 329, 191, 0, 328,
	266, 315, 320, 252, 246, 190, 317, 250, 245, 238,
	217, 550, 230, 278, 244, 279, 231, 256, 255, 257,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 331, 0, 0, 533, 0, 0, 0, 304,
	0, 0, 239, 0, 0, 0, 486, 0, 290, 272,
	546, 0, 0, 288, 242, 316, 280, 322, 306, 330,
	284, 281, 182, 307, 211, 253, 193, 195, 207, 214,
	216, 218, 219, 262, 263, 275, 295, 309, 310, 311,
	210, 203, 289, 204, 228, 205, 183, 297, 206, 185,
	276, 314, 0, 224, 285, 249, 186, 248, 277, 313,
	312, 194, 338, 1129, 1130, 349, 0, 350, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 343, 222, 179, 180, 326, 531,
	268, 0, 545, 526, 528, 529, 532, 536, 537, 538,
	539, 540, 542, 544, 548, 293, 0, 0, 0, 0,
	0, 233, 274, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 324, 336,
	353, 356, 0, 0, 0, 184, 355, 0, 0, 0,
	0, 0, 0, 0, 547, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 490, 258, 259, 260, 261, 534,
	0, 201, 354, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 221, 227, 0, 229, 200, 273, 223, 333, 236,
	0, 0, 0, 0, 0, 0, 265, 232, 298, 237,
	243, 286, 332, 271, 291, 198, 323, 299, 247, 0,
	0, 556, 530, 555, 557, 558, 554, 559, 560, 541,
	453, 0, 494, 552, 551, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 241, 0, 282, 220, 519, 499, 500, 501, 451,
	502, 497, 498, 520, 492, 516, 517, 476, 495, 503,
	515, 504, 518, 521, 522, 561, 562, 510, 563, 507,
	523, 514, 513, 505, 493, 524, 525, 479, 478, 508,
	509, 496, 308, 488, 0, 339, 340, 341, 325, 0,
	212, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 0, 0, 0,
	215, 0, 0, 240, 0, 0, 0, 480, 0, 0,
	300, 254, 0, 0, 0, 0, 535, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 512, 511, 461, 470, 0, 0, 196, 462,
	0, 469, 463, 467, 466, 464, 465, 0, 527, 0,
	0, 0, 0, 0, 0, 433, 446, 0, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	443, 444, 0, 0, 0, 0, 489, 0, 445, 0,
	0, 452, 471, 472, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 468, 487, 491, 208, 549, 485, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 550, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 331, 0, 0, 533, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 486, 0,
	290, 272, 546, 434, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 343, 222, 179, 180,
	326, 531, 268, 0, 545, 526, 528, 529, 532, 536,
	537, 538, 539, 540, 542, 544, 548, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 0, 0, 0, 0, 0, 547, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 490, 258, 259, 260,
	261, 534, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 265, 232,
	298, 237, 243, 286, 332, 271, 291, 198, 323, 299,
	247, 0, 0, 556, 530, 555, 557, 558, 554, 559,
	560, 541, 453, 0, 494, 552, 551, 553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 241, 0, 282, 220, 519, 499, 500,
	501, 451, 502, 497, 498, 520, 492, 516, 517, 476,
	495, 503, 515, 504, 518, 521, 522, 561, 562, 510,
	563, 507, 523, 514, 513, 505, 493, 524, 525, 479,
	478, 508, 509, 496, 308, 488, 0, 339, 340, 341,
	325, 0, 212, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 0,
	0, 0, 215, 0, 0, 240, 0, 0, 0, 480,
	0, 0, 300, 254, 0, 0, 0, 0, 535, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 0, 0, 474, 512, 511, 461, 470, 0, 0,
	196, 462, 0, 469, 463, 467, 466, 464, 465, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 446, 0,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 443, 444, 0, 0, 0, 0, 489, 0,
	445, 0, 0, 452, 471, 472, 0, 0, 187, 305,
	321, 197, 296, 334, 202, 303, 192, 269, 292, 0,
	0, 189, 319, 302, 251, 234, 235, 188, 0, 287,
	213, 226, 209, 267, 468, 487, 491, 208, 549, 485,
	329, 191, 0, 328, 266, 315, 320, 252, 246, 190,
	317, 250, 245, 238, 217, 550, 230, 278, 244, 279,
	231, 256, 255, 257, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 0, 331, 0, 0, 533,
	0, 0, 0, 304, 0, 0, 239, 0, 0, 0,
	486, 0, 290, 272, 546, 0, 0, 288, 242, 316,
	280, 322, 306, 330, 284, 281, 182, 307, 211, 253,
	193, 195, 207, 214, 216, 218, 219, 262, 263, 275,
	295, 309, 310, 311, 210, 203, 289, 204, 228, 205,
	183, 297, 206, 185, 276, 314, 0, 224, 285, 249,
	186, 248, 277, 313, 312, 194, 338, 344, 345, 349,
	0, 350, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 343, 222,
	179, 180, 326, 531, 268, 0, 545, 526, 528, 529,
	532, 536, 537, 538, 539, 540, 542, 544, 548, 293,
	0, 0, 0, 0, 0, 233, 274, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 324, 336, 353, 356, 0, 0, 0, 184,
	355, 0, 0, 0, 0, 0, 0, 0, 547, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 490, 258,
	259, 260, 261, 534, 0, 201, 354, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 221, 227, 0, 229, 200,
	273, 223, 333, 236, 0, 0, 0, 0, 0, 0,
	265, 232, 298, 237, 243, 286, 332, 271, 291, 198,
	323, 299, 247, 0, 0, 556, 530, 555, 557, 558,
	554, 559, 560, 541, 453, 0, 494, 552, 551, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 241, 0, 282, 220, 519,
	499, 500, 501, 451, 502, 497, 498, 520, 492, 516,
	517, 476, 495, 503, 515, 504, 518, 521, 522, 561,
	562, 510, 563, 507, 523, 514, 513, 505, 493, 524,
	525, 479, 478, 508, 509, 496, 308, 0, 0, 339,
	340, 341, 325, 0, 212, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 300, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 139, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 874, 0, 0, 0, 0,
	187, 305, 321, 197, 296, 334, 202, 303, 192, 269,
	292, 0, 0, 1730, 1732, 1733, 1734, 1735, 1736, 1737,
	0, 1741, 1738, 1739, 1740, 267, 0, 1725, 1726, 1727,
	1728, 872, 1712, 1731, 0, 1713, 266, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 887, 1729, 278,
	244, 279, 231, 256, 255, 257, 897, 899, 901, 903,
	906, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 239, 0,
	0, 0, 1724, 0, 290, 272, 0, 0, 0, 288,
	242, 316, 280, 322, 306, 330, 284, 281, 182, 307,
	211, 253, 193, 195, 207, 214, 216, 218, 219, 262,
	263, 275, 295, 309, 310, 311, 210, 203, 289, 204,
	228, 205, 183, 297, 206, 185, 276, 314, 0, 224,
	285, 249, 186, 248, 277, 313, 312, 194, 338, 344,
	345, 349, 0, 350, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	343, 222, 179, 180, 326, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 342, 0, 0, 0,
	0, 293, 0, 0, 0, 0, 0, 233, 274, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 324, 336, 353, 356, 0, 0,
	0, 184, 355, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	351, 258, 259, 260, 261, 225, 0, 201, 354, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 221, 227, 0,
	229, 200, 273, 223, 333, 236, 0, 0, 0, 0,
	0, 0, 265, 232, 298, 237, 243, 286, 332, 271,
	291, 198, 323, 299, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 896, 241, 0, 282,
	220, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 0, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 0,
	0, 339, 340, 341, 325, 0, 212, 131, 308, 38,
	121, 101, 0, 0, 0, 0, 0, 0, 0, 270,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 300, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 305, 321, 197, 296, 334, 202, 303,
	192, 269, 292, 0, 0, 189, 319, 302, 251, 234,
	235, 188, 0, 287, 213, 226, 209, 267, 0, 318,
	346, 208, 337, 0, 329, 191, 0, 328, 266, 315,
	320, 252, 246, 190, 317, 250, 245, 238, 217, 0,
	230, 278, 244, 279, 231, 256, 255, 257, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	239, 0, 0, 0, 347, 0, 290, 272, 0, 0,
	0, 288, 242, 316, 280, 322, 306, 330, 284, 281,
	182, 307, 211, 253, 193, 195, 207, 214, 216, 218,
	219, 262, 263, 275, 295, 309, 310, 311, 210, 203,
	289, 204, 228, 205, 183, 297, 206, 185, 276, 314,
	0, 224, 285, 249, 186, 248, 277, 313, 312, 194,
	338, 344, 345, 349, 0, 350, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 343, 222, 179, 180, 326, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 342, 0,
	0, 0, 0, 293, 0, 0, 0, 0, 0, 233,
	274, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 324, 336, 353, 356,
	0, 0, 0, 184, 355, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 351, 258, 259, 260, 261, 369, 371, 201,
	354, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 221,
	227, 0, 229, 200, 273, 223, 333, 236, 0, 0,
	0, 0, 0, 0, 265, 232, 298, 237, 243, 286,
	332, 271, 291, 198, 323, 299, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 241,
	102, 282, 220, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 0, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	308, 0, 0, 339, 340, 341, 325, 0, 212, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 300, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 2157, 2160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 305, 321, 197, 296, 334,
	202, 303, 192, 269, 292, 0, 0, 189, 319, 302,
	251, 234, 235, 188, 0, 287, 213, 226, 209, 267,
	0, 318, 346, 208, 337, 0, 329, 191, 0, 328,
	266, 315, 320, 252, 246, 190, 317, 250, 245, 238,
	217, 0, 230, 278, 244, 279, 231, 256, 255, 257,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2161, 331, 0, 0, 0, 2154, 0, 2153, 304,
	2155, 2158, 239, 0, 0, 0, 347, 0, 290, 272,
	0, 0, 0, 288, 242, 316, 280, 322, 306, 330,
	284, 281, 182, 307, 211, 253, 193, 195, 207, 214,
	216, 218, 219, 262, 263, 275, 295, 309, 310, 311,
	210, 203, 289, 204, 228, 205, 183, 297, 206, 185,
	276, 314, 2159, 224, 285, 249, 186, 248, 277, 313,
	312, 194, 338, 344, 345, 349, 0, 350, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 343, 222, 179, 180, 326, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	342, 0, 0, 0, 0, 293, 0, 0, 0, 0,
	0, 233, 274, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 324, 336,
	353, 356, 0, 0, 0, 184, 355, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 351, 258, 259, 260, 261, 225,
	0, 201, 354, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 221, 227, 0, 229, 200, 273, 223, 333, 236,
	0, 0, 0, 0, 0, 0, 265, 232, 298, 237,
	243, 286, 332, 271, 291, 198, 323, 299, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 241, 0, 282, 220, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 0, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 308, 0, 0, 339, 340, 341, 325, 0,
	212, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1385, 0, 0, 0, 0,
	215, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	300, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 1386, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 777, 778, 779, 776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 0, 318, 346, 208, 337, 0, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 0, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 347, 0,
	290, 272, 0, 0, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 343, 222, 179, 180,
	326, 0, 268, 0, 1184, 0, 0, 0, 0, 0,
	0, 264, 342, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 351, 258, 259, 260,
	261, 225, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 265, 232,
	298, 237, 243, 286, 332, 271, 291, 198, 323, 299,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1180,
	0, 0, 1177, 0, 0, 0, 1179, 1176, 1178, 1182,
	1183, 181, 0, 241, 1181, 282, 220, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 0,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 308, 0, 0, 339, 340, 341,
	325, 0, 212, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 656, 0, 240, 0, 0, 0, 0,
	0, 0, 300, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 664, 665, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	668, 0, 0, 0, 0, 0, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1187, 1188, 1189,
	1190, 1191, 1192, 1185, 1186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 305,
	321, 197, 296, 334, 202, 303, 192, 269, 292, 0,
	0, 189, 319, 302, 251, 234, 235, 188, 0, 287,
	213, 226, 209, 267, 0, 318, 346, 208, 337, 641,
	329, 191, 640, 328, 266, 315, 320, 252, 246, 190,
	317, 250, 245, 238, 217, 0, 230, 278, 244, 279,
	231, 256, 255, 257, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 239, 0, 0, 0,
	347, 0, 290, 272, 0, 0, 0, 288, 242, 316,
	280, 322, 306, 330, 654, 281, 182, 307, 211, 253,
	193, 195, 207, 214, 216, 218, 219, 262, 263, 275,
	295, 309, 310, 311, 210, 203, 289, 204, 228, 205,
	183, 297, 206, 185, 276, 314, 0, 224, 285, 249,
	186, 248, 277, 313, 312, 194, 338, 344, 345, 349,
	0, 350, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 343, 222,
	179, 180, 326, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 342, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 233, 274, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 324, 336, 353, 356, 0, 0, 0, 184,
	355, 0, 0, 0, 0, 0, 0, 655, 327, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 658, 258,
	259, 260, 261, 225, 0, 201, 354, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 221, 227, 0, 229, 200,
	273, 223, 333, 236, 0, 0, 0, 0, 0, 0,
	666, 661, 662, 237, 243, 286, 332, 271, 291, 198,
	323, 299, 663, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 241, 0, 282, 220, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 0, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 131, 308, 0, 339,
	340, 341, 325, 0, 212, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 240, 0,
	0, 0, 90, 0, 0, 300, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 1407, 0, 139, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 305, 321, 197, 296, 334, 202, 303, 192,
	269, 292, 0, 0, 189, 319, 302, 251, 234, 235,
	188, 0, 287, 213, 226, 209, 267, 0, 318, 346,
	208, 337, 0, 329, 191, 0, 328, 266, 315, 320,
	252, 246, 190, 317, 250, 245, 238, 217, 0, 230,
	278, 244, 279, 231, 256, 255, 257, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 239,
	0, 0, 0, 347, 0, 290, 272, 0, 0, 0,
	288, 242, 316, 280, 322, 306, 330, 284, 281, 182,
	307, 211, 253, 193, 195, 207, 214, 216, 218, 219,
	262, 263, 275, 295, 309, 310, 311, 210, 203, 289,
	204, 228, 205, 183, 297, 206, 185, 276, 314, 0,
	224, 285, 249, 186, 248, 277, 313, 312, 194, 338,
	344, 345, 349, 0, 350, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 343, 222, 179, 180, 326, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 342, 0, 0,
	0, 0, 293, 0, 0, 0, 0, 0, 233, 274,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 324, 336, 353, 356, 0,
	0, 0, 184, 355, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 351, 258, 259, 260, 261, 225, 0, 201, 354,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 221, 227,
	0, 229, 200, 273, 223, 333, 236, 0, 0, 0,
	0, 0, 0, 265, 232, 298, 237, 243, 286, 332,
	271, 291, 198, 323, 299, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 241, 102,
	282, 220, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 0, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 131,
	308, 0, 339, 340, 341, 325, 0, 212, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 240, 0, 0, 0, 90, 0, 0, 300, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 1398, 0, 139,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 305, 321, 197, 296, 334,
	202, 303, 192, 269, 292, 0, 0, 189, 319, 302,
	251, 234, 235, 188, 0, 287, 213, 226, 209, 267,
	0, 318, 346, 208, 337, 0, 329, 191, 0, 328,
	266, 315, 320, 252, 246, 190, 317, 250, 245, 238,
	217, 0, 230, 278, 244, 279, 231, 256, 255, 257,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 239, 0, 0, 0, 347, 0, 290, 272,
	0, 0, 0, 288, 242, 316, 280, 322, 306, 330,
	284, 281, 182, 307, 211, 253, 193, 195, 207, 214,
	216, 218, 219, 262, 263, 275, 295, 309, 310, 311,
	210, 203, 289, 204, 228, 205, 183, 297, 206, 185,
	276, 314, 0, 224, 285, 249, 186, 248, 277, 313,
	312, 194, 338, 344, 345, 349, 0, 350, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 343, 222, 179, 180, 326, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	342, 0, 0, 0, 0, 293, 0, 0, 0, 0,
	0, 233, 274, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 324, 336,
	353, 356, 0, 0, 0, 184, 355, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 351, 258, 259, 260, 261, 225,
	0, 201, 354, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 221, 227, 0, 229, 200, 273, 223, 333, 236,
	0, 0, 0, 0, 0, 0, 265, 232, 298, 237,
	243, 286, 332, 271, 291, 198, 323, 299, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 241, 102, 282, 220, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 0, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 131, 308, 0, 339, 340, 341, 325, 0,
	212, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 240, 0, 0, 0, 90, 0,
	0, 300, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 305, 321,
	197, 296, 334, 202, 303, 192, 269, 292, 0, 0,
	189, 319, 302, 251, 234, 235, 188, 0, 287, 213,
	226, 209, 267, 0, 318, 346, 208, 337, 0, 329,
	191, 0, 328, 266, 315, 320, 252, 246, 190, 317,
	250, 245, 238, 217, 0, 230, 278, 244, 279, 231,
	256, 255, 257, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 239, 0, 0, 0, 347,
	0, 290, 272, 0, 0, 0, 288, 242, 316, 280,
	322, 306, 330, 284, 281, 182, 307, 211, 253, 193,
	195, 207, 214, 216, 218, 219, 262, 263, 275, 295,
	309, 310, 311, 210, 203, 289, 204, 228, 205, 183,
	297, 206, 185, 276, 314, 0, 224, 285, 249, 186,
	248, 277, 313, 312, 194, 338, 344, 345, 349, 0,
	350, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 343, 222, 179,
	180, 326, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 342, 0, 0, 0, 0, 293, 0,
	0, 0, 0, 0, 233, 274, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 324, 336, 353, 356, 0, 0, 0, 184, 355,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 351, 258, 259,
	260, 261, 225, 0, 201, 354, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 221, 227, 0, 229, 200, 273,
	223, 333, 236, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 102, 282, 220, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	0, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 308, 0, 0, 339, 340,
	341, 325, 0, 212, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 300, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 664, 665, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	305, 321, 197, 296, 334, 202, 303, 192, 269, 292,
	0, 0, 189, 319, 302, 251, 234, 235, 188, 0,
	287, 213, 226, 209, 267, 0, 318, 346, 208, 337,
	641, 329, 191, 640, 328, 266, 315, 320, 252, 246,
	190, 317, 250, 245, 238, 217, 0, 230, 278, 244,
	279, 231, 256, 255, 257, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 239, 0, 0,
	0, 347, 0, 290, 272, 0, 0, 0, 288, 242,
	316, 280, 322, 306, 330, 284, 281, 182, 307, 211,
	253, 193, 195, 207, 214, 216, 218, 219, 262, 263,
	275, 295, 309, 310, 311, 210, 203, 289, 204, 228,
	205, 183, 297, 206, 185, 276, 314, 0, 224, 285,
	249, 186, 248, 277, 313, 312, 194, 338, 344, 345,
	349, 0, 350, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 343,
	222, 179, 180, 326, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 342, 0, 0, 0, 0,
	293, 0, 0, 0, 0, 0, 233, 274, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 324, 336, 353, 356, 0, 0, 0,
	184, 355, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 351,
	258, 259, 260, 261, 225, 0, 201, 354, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 221, 227, 0, 229,
	200, 273, 223, 333, 236, 0, 0, 0, 0, 0,
	0, 666, 661, 662, 237, 243, 286, 332, 271, 291,
	198, 323, 299, 663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 241, 0, 282, 220,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 0, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 308, 0, 0,
	339, 340, 341, 325, 0, 212, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 1025, 0, 240, 0,
	0, 0, 0, 0, 0, 300, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 0, 1023,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1021, 0, 0, 0,
	0, 187, 305, 321, 197, 296, 334, 202, 303, 192,
	269, 292, 0, 0, 189, 319, 302, 251, 234, 235,
	188, 0, 287, 213, 226, 209, 267, 0, 318, 346,
	208, 337, 0, 329, 191, 0, 328, 266, 315, 320,
	252, 246, 190, 317, 250, 245, 238, 217, 0, 230,
	278, 244, 279, 231, 256, 255, 257, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 239,
	0, 0, 0, 347, 0, 290, 272, 0, 0, 0,
	288, 242, 316, 280, 322, 306, 330, 284, 281, 182,
	307, 211, 253, 193, 195, 207, 214, 216, 218, 219,
	262, 263, 275, 295, 309, 310, 311, 210, 203, 289,
	204, 228, 205, 183, 297, 206, 185, 276, 314, 0,
	224, 285, 249, 186, 248, 277, 313, 312, 194, 338,
	344, 345, 349, 0, 350, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 343, 222, 179, 180, 326, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 342, 0, 0,
	0, 0, 293, 0, 0, 0, 0, 0, 233, 274,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 324, 336, 353, 356, 0,
	0, 0, 184, 355, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 351, 258, 259, 260, 261, 225, 0, 201, 354,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 221, 227,
	0, 229, 200, 273, 223, 333, 236, 0, 0, 0,
	0, 0, 0, 265, 232, 298, 237, 243, 286, 332,
	271, 291, 198, 323, 299, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 241, 0,
	282, 220, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 0, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 308,
	0, 0, 339, 340, 341, 325, 0, 212, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 1019, 0,
	240, 0, 0, 0, 0, 0, 0, 300, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 1023, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1021, 0,
	0, 0, 0, 187, 305, 321, 197, 296, 334, 202,
	303, 192, 269, 292, 0, 0, 189, 319, 302, 251,
	234, 235, 188, 0, 287, 213, 226, 209, 267, 0,
	318, 346, 208, 337, 0, 329, 191, 0, 328, 266,
	315, 320, 252, 246, 190, 317, 250, 245, 238, 217,
	0, 230, 278, 244, 279, 231, 256, 255, 257, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 239, 0, 0, 0, 347, 0, 290, 272, 0,
	0, 0, 288, 242, 316, 280, 322, 306, 330, 284,
	281, 182, 307, 211, 253, 193, 195, 207, 214, 216,
	218, 219, 262, 263, 275, 295, 309, 310, 311, 210,
	203, 289, 204, 228, 205, 183, 297, 206, 185, 276,
	314, 0, 224, 285, 249, 186, 248, 277, 313, 312,
	194, 338, 344, 345, 349, 0, 350, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 343, 222, 179, 180, 326, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 342,
	0, 0, 0, 0, 293, 0, 0, 0, 0, 0,
	233, 274, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 324, 336, 353,
	356, 0, 0, 0, 184, 355, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 351, 258, 259, 260, 261, 225, 0,
	201, 354, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	221, 227, 0, 229, 200, 273, 223, 333, 236, 0,
	0, 0, 0, 0, 0, 265, 232, 298, 237, 243,
	286, 332, 271, 291, 198, 323, 299, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	241, 0, 282, 220, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 0, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 308, 0, 0, 339, 340, 341, 325, 0, 212,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 300,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2668, 0,
	139, 512, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 305, 321, 197, 296,
	334, 202, 303, 192, 269, 292, 0, 0, 189, 319,
	302, 251, 234, 235, 188, 0, 287, 213, 226, 209,
	267, 0, 318, 346, 208, 337, 0, 329, 191, 0,
	328, 266, 315, 320, 252, 246, 190, 317, 250, 245,
	238, 217, 0, 230, 278, 244, 279, 231, 256, 255,
	257, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 239, 0, 0, 0, 347, 0, 290,
	272, 0, 0, 0, 288, 242, 316, 280, 322, 306,
	330, 284, 281, 182, 307, 211, 253, 193, 195, 207,
	214, 216, 218, 219, 262, 263, 275, 295, 309, 310,
	311, 210, 203, 289, 204, 228, 205, 183, 297, 206,
	185, 276, 314, 0, 224, 285, 249, 186, 248, 277,
	313, 312, 194, 338, 344, 345, 349, 0, 350, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 343, 222, 179, 180, 326,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 342, 0, 0, 0, 0, 293, 0, 0, 0,
	0, 0, 233, 274, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 324,
	336, 353, 356, 0, 0, 0, 184, 355, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 351, 258, 259, 260, 261,
	225, 0, 201, 354, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 221, 227, 0, 229, 200, 273, 223, 333,
	236, 0, 0, 0, 0, 0, 0, 265, 232, 298,
	237, 243, 286, 332, 271, 291, 198, 323, 299, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 241, 0, 282, 220, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 0, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 308, 0, 0, 339, 340, 341, 325,
	0, 212, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 300, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 0, 1023, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 0, 187, 305, 321,
	197, 296, 334, 202, 303, 192, 269, 292, 0, 0,
	189, 319, 302, 251, 234, 235, 188, 0, 287, 213,
	226, 209, 267, 0, 318, 346, 208, 337, 0, 329,
	191, 0, 328, 266, 315, 320, 252, 246, 190, 317,
	250, 245, 238, 217, 0, 230, 278, 244, 279, 231,
	256, 255, 257, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 239, 0, 0, 0, 347,
	0, 290, 272, 0, 0, 0, 288, 242, 316, 280,
	322, 306, 330, 284, 281, 182, 307, 211, 253, 193,
	195, 207, 214, 216, 218, 219, 262, 263, 275, 295,
	309, 310, 311, 210, 203, 289, 204, 228, 205, 183,
	297, 206, 185, 276, 314, 0, 224, 285, 249, 186,
	248, 277, 313, 312, 194, 338, 344, 345, 349, 0,
	350, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 343, 222, 179,
	180, 326, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 342, 0, 0, 0, 0, 293, 0,
	0, 0, 0, 0, 233, 274, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 324, 336, 353, 356, 0, 0, 0, 184, 355,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 351, 258, 259,
	260, 261, 225, 0, 201, 354, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 221, 227, 0, 229, 200, 273,
	223, 333, 236, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 0, 282, 220, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	0, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 308, 0, 0, 339, 340,
	341, 325, 0, 212, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 300, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 0, 1023, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2296, 0, 0, 0, 0, 187,
	305, 321, 197, 296, 334, 202, 303, 192, 269, 292,
	0, 0, 189, 319, 302, 251, 234, 235, 188, 0,
	287, 213, 226, 209, 267, 0, 318, 346, 208, 337,
	0, 329, 191, 0, 328, 266, 315, 320, 252, 246,
	190, 317, 250, 245, 238, 217, 0, 230, 278, 244,
	279, 231, 256, 255, 257, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 239, 0, 0,
	0, 347, 0, 290, 272, 0, 0, 0, 288, 242,
	316, 280, 322, 306, 330, 284, 281, 182, 307, 211,
	253, 193, 195, 207, 214, 216, 218, 219, 262, 263,
	275, 295, 309, 310, 311, 210, 203, 289, 204, 228,
	205, 183, 297, 206, 185, 276, 314, 0, 224, 285,
	249, 186, 248, 277, 313, 312, 194, 338, 344, 345,
	349, 0, 350, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 343,
	222, 179, 180, 326, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 342, 0, 0, 0, 0,
	293, 0, 0, 0, 0, 0, 233, 274, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 324, 336, 353, 356, 0, 0, 0,
	184, 355, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 351,
	258, 259, 260, 261, 225, 0, 201, 354, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 221, 227, 0, 229,
	200, 273, 223, 333, 236, 0, 0, 0, 0, 0,
	0, 265, 232, 298, 237, 243, 286, 332, 271, 291,
	198, 323, 299, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 241, 0, 282, 220,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 0, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 308, 0, 0,
	339, 340, 341, 325, 0, 212, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 1826, 0, 240, 0,
	0, 0, 0, 0, 0, 300, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 0, 1023,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 305, 321, 197, 296, 334, 202, 303, 192,
	269, 292, 0, 0, 189, 319, 302, 251, 234, 235,
	188, 0, 287, 213, 226, 209, 267, 0, 318, 346,
	208, 337, 0, 329, 191, 0, 328, 266, 315, 320,
	252, 246, 190, 317, 250, 245, 238, 217, 0, 230,
	278, 244, 279, 231, 256, 255, 257, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 239,
	0, 0, 0, 347, 0, 290, 272, 0, 0, 0,
	288, 242, 316, 280, 322, 306, 330, 284, 281, 182,
	307, 211, 253, 193, 195, 207, 214, 216, 218, 219,
	262, 263, 275, 295, 309, 310, 311, 210, 203, 289,
	204, 228, 205, 183, 297, 206, 185, 276, 314, 0,
	224, 285, 249, 186, 248, 277, 313, 312, 194, 338,
	344, 345, 349, 0, 350, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 343, 222, 179, 180, 326, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 342, 0, 0,
	0, 0, 293, 0, 0, 0, 0, 0, 233, 274,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 324, 336, 353, 356, 0,
	0, 0, 184, 355, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 351, 258, 259, 260, 261, 225, 0, 201, 354,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 221, 227,
	0, 229, 200, 273, 223, 333, 236, 0, 0, 0,
	0, 0, 0, 265, 232, 298, 237, 243, 286, 332,
	271, 291, 198, 323, 299, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 241, 0,
	282, 220, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 0, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 308,
	0, 0, 339, 340, 341, 325, 0, 212, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 300, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2771, 0, 139, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 305, 321, 197, 296, 334, 202,
	303, 192, 269, 292, 0, 0, 189, 319, 302, 251,
	234, 235, 188, 0, 287, 213, 226, 209, 267, 0,
	318, 346, 208, 337, 0, 329, 191, 0, 328, 266,
	315, 320, 252, 246, 190, 317, 250, 245, 238, 217,
	0, 230, 278, 244, 279, 231, 256, 255, 257, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 239, 0, 0, 0, 347, 0, 290, 272, 0,
	0, 0, 288, 242, 316, 280, 322, 306, 330, 284,
	281, 182, 307, 211, 253, 193, 195, 207, 214, 216,
	218, 219, 262, 263, 275, 295, 309, 310, 311, 210,
	203, 289, 204, 228, 205, 183, 297, 206, 185, 276,
	314, 0, 224, 285, 249, 186, 248, 277, 313, 312,
	194, 338, 344, 345, 349, 0, 350, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 343, 222, 179, 180, 326, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 342,
	0, 0, 0, 0, 293, 0, 0, 0, 0, 0,
	233, 274, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 324, 336, 353,
	356, 0, 0, 0, 184, 355, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 351, 258, 259, 260, 261, 225, 0,
	201, 354, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	221, 227, 0, 229, 200, 273, 223, 333, 236, 0,
	0, 0, 0, 0, 0, 265, 232, 298, 237, 243,
	286, 332, 271, 291, 198, 323, 299, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	241, 0, 282, 220, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 0, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 308, 0, 0, 339, 340, 341, 325, 0, 212,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 300,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 512, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 305, 321, 197, 296,
	334, 202, 303, 192, 269, 292, 0, 0, 189, 319,
	302, 251, 234, 235, 188, 0, 287, 213, 226, 209,
	267, 0, 318, 346, 208, 337, 0, 329, 191, 0,
	328, 266, 315, 320, 252, 246, 190, 317, 250, 245,
	238, 217, 0, 230, 278, 244, 279, 231, 256, 255,
	257, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 239, 0, 0, 0, 347, 0, 290,
	272, 0, 0, 0, 288, 242, 316, 280, 322, 306,
	330, 284, 281, 182, 307, 211, 253, 193, 195, 207,
	214, 216, 218, 219, 262, 263, 275, 295, 309, 310,
	311, 210, 203, 289, 204, 228, 205, 183, 297, 206,
	185, 276, 314, 0, 224, 285, 249, 186, 248, 277,
	313, 312, 194, 338, 344, 345, 349, 0, 350, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 343, 222, 179, 180, 326,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 342, 0, 0, 0, 0, 293, 0, 0, 0,
	0, 0, 233, 274, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 324,
	336, 353, 356, 0, 0, 0, 184, 355, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 351, 258, 259, 260, 261,
	225, 0, 201, 354, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 221, 227, 0, 229, 200, 273, 223, 333,
	236, 0, 0, 0, 0, 0, 0, 265, 232, 298,
	237, 243, 286, 332, 271, 291, 198, 323, 299, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 241, 0, 282, 220, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 0, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 308, 0, 0, 339, 340, 341, 325,
	0, 212, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 300, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2680,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 305, 321,
	197, 296, 334, 202, 303, 192, 269, 292, 0, 0,
	189, 319, 302, 251, 234, 235, 188, 0, 287, 213,
	226, 209, 267, 0, 318, 346, 208, 337, 0, 329,
	191, 0, 328, 266, 315, 320, 252, 246, 190, 317,
	250, 245, 238, 217, 0, 230, 278, 244, 279, 231,
	256, 255, 257, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 239, 0, 0, 0, 347,
	0, 290, 272, 0, 0, 0, 288, 242, 316, 280,
	322, 306, 330, 284, 281, 182, 307, 211, 253, 193,
	195, 207, 214, 216, 218, 219, 262, 263, 275, 295,
	309, 310, 311, 210, 203, 289, 204, 228, 205, 183,
	297, 206, 185, 276, 314, 0, 224, 285, 249, 186,
	248, 277, 313, 312, 194, 338, 344, 345, 349, 0,
	350, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 343, 222, 179,
	180, 326, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 342, 0, 0, 0, 0, 293, 0,
	0, 0, 0, 0, 233, 274, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 324, 336, 353, 356, 0, 0, 0, 184, 355,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 351, 258, 259,
	260, 261, 225, 0, 201, 354, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 221, 227, 0, 229, 200, 273,
	223, 333, 236, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 0, 282, 220, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	0, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 308, 0, 0, 339, 340,
	341, 325, 0, 212, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 300, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2411, 0, 0, 139, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	305, 321, 197, 296, 334, 202, 303, 192, 269, 292,
	0, 0, 189, 319, 302, 251, 234, 235, 188, 0,
	287, 213, 226, 209, 267, 0, 318, 346, 208, 337,
	0, 329, 191, 0, 328, 266, 315, 320, 252, 246,
	190, 317, 250, 245, 238, 217, 0, 230, 278, 244,
	279, 231, 256, 255, 257, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 239, 0, 0,
	0, 347, 0, 290, 272, 0, 0, 0, 288, 242,
	316, 280, 322, 306, 330, 284, 281, 182, 307, 211,
	253, 193, 195, 207, 214, 216, 218, 219, 262, 263,
	275, 295, 309, 310, 311, 210, 203, 289, 204, 228,
	205, 183, 297, 206, 185, 276, 314, 0, 224, 285,
	249, 186, 248, 277, 313, 312, 194, 338, 344, 345,
	349, 0, 350, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 343,
	222, 179, 180, 326, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 342, 0, 0, 0, 0,
	293, 0, 0, 0, 0, 0, 233, 274, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 324, 336, 353, 356, 0, 0, 0,
	184, 355, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 351,
	258, 259, 260, 261, 225, 0, 201, 354, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 221, 227, 0, 229,
	200, 273, 223, 333, 236, 0, 0, 0, 0, 0,
	0, 265, 232, 298, 237, 243, 286, 332, 271, 291,
	198, 323, 299, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 241, 0, 282, 220,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 0, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 308, 0, 0,
	339, 340, 341, 325, 0, 212, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 300, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 305, 321, 197, 296, 334, 202, 303, 192,
	269, 292, 0, 0, 189, 319, 302, 251, 234, 235,
	188, 0, 287, 213, 226, 209, 267, 0, 318, 346,
	208, 337, 0, 329, 191, 0, 328, 266, 315, 320,
	252, 246, 190, 317, 250, 245, 238, 217, 0, 230,
	278, 244, 279, 231, 256, 255, 257, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 2607, 0, 0, 304, 0, 0, 239,
	0, 0, 0, 347, 0, 290, 272, 0, 0, 0,
	288, 242, 316, 280, 322, 306, 330, 284, 281, 182,
	307, 211, 253, 193, 195, 207, 214, 216, 218, 219,
	262, 263, 275, 295, 309, 310, 311, 210, 203, 289,
	204, 228, 205, 183, 297, 206, 185, 276, 314, 0,
	224, 285, 249, 186, 248, 277, 313, 312, 194, 338,
	344, 345, 349, 0, 350, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 343, 222, 179, 180, 326, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 342, 0, 0,
	0, 0, 293, 0, 0, 0, 0, 0, 233, 274,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 324, 336, 353, 356, 0,
	0, 0, 184, 355, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 351, 258, 259, 260, 261, 225, 0, 201, 354,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 221, 227,
	0, 229, 200, 273, 223, 333, 236, 0, 0, 0,
	0, 0, 0, 265, 232, 298, 237, 243, 286, 332,
	271, 291, 198, 323, 299, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 241, 0,
	282, 220, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 0, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 308,
	0, 0, 339, 340, 341, 325, 0, 212, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 300, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 305, 321, 197, 296, 334, 202,
	303, 192, 269, 292, 0, 0, 189, 319, 302, 251,
	234, 235, 188, 0, 287, 213, 226, 209, 267, 0,
	318, 346, 208, 337, 0, 329, 191, 0, 328, 266,
	315, 320, 252, 246, 190, 317, 250, 245, 238, 217,
	0, 230, 278, 244, 279, 231, 256, 255, 257, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 0, 0, 2422, 0, 0, 304, 0,
	0, 239, 0, 0, 0, 347, 0, 290, 272, 0,
	0, 0, 288, 242, 316, 280, 322, 306, 330, 284,
	281, 182, 307, 211, 253, 193, 195, 207, 214, 216,
	218, 219, 262, 263, 275, 295, 309, 310, 311, 210,
	203, 289, 204, 228, 205, 183, 297, 206, 185, 276,
	314, 0, 224, 285, 249, 186, 248, 277, 313, 312,
	194, 338, 344, 345, 349, 0, 350, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 343, 222, 179, 180, 326, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 342,
	0, 0, 0, 0, 293, 0, 0, 0, 0, 0,
	233, 274, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 324, 336, 353,
	356, 0, 0, 0, 184, 355, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 351, 258, 259, 260, 261, 225, 0,
	201, 354, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	221, 227, 0, 229, 200, 273, 223, 333, 236, 0,
	0, 0, 0, 0, 0, 265, 232, 298, 237, 243,
	286, 332, 271, 291, 198, 323, 299, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	241, 0, 282, 220, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 0, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 308, 0, 0, 339, 340, 341, 325, 0, 212,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 300,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 305, 321, 197, 296,
	334, 202, 303, 192, 269, 292, 0, 0, 189, 319,
	302, 251, 234, 235, 188, 0, 287, 213, 226, 209,
	267, 0, 318, 346, 208, 337, 0, 329, 191, 0,
	328, 266, 315, 320, 252, 246, 190, 317, 250, 245,
	238, 217, 0, 230, 278, 244, 279, 231, 256, 255,
	257, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 239, 0, 0, 0, 347, 0, 290,
	272, 0, 0, 0, 288, 242, 316, 280, 322, 306,
	330, 284, 281, 182, 307, 211, 253, 193, 195, 207,
	214, 216, 218, 219, 262, 263, 275, 295, 309, 310,
	311, 210, 203, 289, 204, 228, 205, 183, 297, 206,
	185, 276, 314, 0, 224, 285, 249, 186, 248, 277,
	313, 312, 194, 338, 344, 345, 349, 0, 350, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 343, 222, 179, 180, 326,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 342, 0, 0, 0, 0, 293, 0, 0, 0,
	0, 0, 233, 274, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 324,
	336, 353, 356, 0, 0, 0, 184, 355, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 351, 258, 259, 260, 261,
	225, 0, 201, 354, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 221, 227, 0, 229, 200, 273, 223, 333,
	236, 0, 0, 0, 0, 0, 0, 265, 232, 298,
	237, 243, 286, 332, 271, 291, 198, 323, 299, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 241, 0, 282, 220, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 0, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 308, 0, 0, 339, 340, 341, 325,
	0, 212, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 300, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 305, 321,
	197, 296, 334, 202, 303, 192, 269, 292, 0, 0,
	189, 319, 302, 251, 234, 235, 188, 0, 287, 213,
	226, 209, 267, 0, 318, 346, 208, 337, 0, 329,
	191, 0, 328, 266, 315, 320, 252, 246, 190, 317,
	250, 245, 238, 217, 0, 230, 278, 244, 279, 231,
	256, 255, 257, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 239, 0, 0, 0, 347,
	0, 290, 272, 0, 0, 0, 288, 242, 316, 280,
	322, 306, 330, 284, 281, 182, 307, 211, 253, 193,
	195, 207, 214, 216, 218, 219, 262, 263, 275, 295,
	309, 310, 311, 210, 203, 289, 204, 228, 205, 183,
	297, 206, 185, 276, 314, 0, 224, 285, 249, 186,
	248, 277, 313, 312, 194, 338, 344, 345, 349, 0,
	350, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 343, 222, 179,
	180, 326, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 342, 0, 0, 0, 0, 293, 0,
	0, 0, 0, 0, 233, 274, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 324, 336, 353, 356, 0, 0, 0, 184, 355,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 351, 258, 259,
	260, 261, 225, 0, 201, 354, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 221, 227, 0, 229, 200, 273,
	223, 333, 236, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 0, 282, 220, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	0, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 308, 0, 0, 339, 340,
	341, 325, 0, 212, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 300, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	305, 321, 197, 296, 334, 202, 303, 192, 269, 292,
	0, 0, 189, 319, 302, 251, 234, 235, 188, 0,
	287, 213, 226, 209, 267, 0, 318, 346, 208, 337,
	0, 329, 191, 0, 328, 266, 315, 320, 252, 246,
	190, 317, 250, 245, 238, 217, 0, 230, 278, 244,
	279, 231, 256, 255, 257, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 239, 0, 0,
	0, 347, 0, 290, 272, 0, 0, 0, 288, 242,
	316, 280, 322, 306, 330, 284, 281, 182, 307, 211,
	253, 193, 195, 207, 214, 216, 218, 219, 262, 263,
	275, 295, 309, 310, 311, 210, 203, 289, 204, 228,
	205, 183, 297, 206, 185, 276, 314, 0, 224, 285,
	249, 186, 248, 277, 313, 312, 194, 338, 344, 345,
	349, 0, 350, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 343,
	222, 179, 180, 326, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 342, 0, 0, 0, 0,
	293, 0, 0, 0, 0, 0, 233, 274, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 324, 336, 353, 356, 0, 0, 0,
	184, 355, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 351,
	258, 259, 260, 261, 225, 0, 201, 354, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 221, 227, 0, 229,
	200, 273, 223, 333, 236, 0, 0, 0, 0, 0,
	0, 265, 232, 298, 237, 243, 286, 332, 271, 291,
	198, 323, 299, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 241, 0, 282, 220,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 0, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 308, 0, 0,
	339, 340, 341, 325, 0, 212, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 300, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 0, 2165,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 305, 321, 197, 296, 334, 202, 303, 192,
	269, 292, 0, 0, 189, 319, 302, 251, 234, 235,
	188, 0, 287, 213, 226, 209, 267, 0, 318, 346,
	208, 337, 0, 329, 191, 0, 328, 266, 315, 320,
	252, 246, 190, 317, 250, 245, 238, 217, 0, 230,
	278, 244, 279, 231, 256, 255, 257, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 239,
	0, 0, 0, 347, 0, 290, 272, 0, 0, 0,
	288, 242, 316, 280, 322, 306, 330, 284, 281, 182,
	307, 211, 253, 193, 195, 207, 214, 216, 218, 219,
	262, 263, 275, 295, 309, 310, 311, 210, 203, 289,
	204, 228, 205, 183, 297, 206, 185, 276, 314, 0,
	224, 285, 249, 186, 248, 277, 313, 312, 194, 338,
	344, 345, 349, 0, 350, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 343, 222, 179, 180, 326, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 342, 0, 0,
	0, 0, 293, 0, 0, 0, 0, 0, 233, 274,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 324, 336, 353, 356, 0,
	0, 0, 184, 355, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 351, 258, 259, 260, 261, 225, 0, 201, 354,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 221, 227,
	0, 229, 200, 273, 223, 333, 236, 0, 0, 0,
	0, 0, 0, 265, 232, 298, 237, 243, 286, 332,
	271, 291, 198, 323, 299, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 241, 0,
	282, 220, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 0, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 308,
	0, 0, 339, 340, 341, 325, 0, 212, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 300, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 1023, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 305, 321, 197, 296, 334, 202,
	303, 192, 269, 292, 0, 0, 189, 319, 302, 251,
	234, 235, 188, 0, 287, 213, 226, 209, 267, 0,
	318, 346, 208, 337, 0, 329, 191, 0, 328, 266,
	315, 320, 252, 246, 190, 317, 250, 245, 238, 217,
	0, 230, 278, 244, 279, 231, 256, 255, 257, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 239, 0, 0, 0, 347, 0, 290, 272, 0,
	0, 0, 288, 242, 316, 280, 322, 306, 330, 284,
	281, 182, 307, 211, 253, 193, 195, 207, 214, 216,
	218, 219, 262, 263, 275, 295, 309, 310, 311, 210,
	203, 289, 204, 228, 205, 183, 297, 206, 185, 276,
	314, 0, 224, 285, 249, 186, 248, 277, 313, 312,
	194, 338, 344, 345, 349, 0, 350, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 343, 222, 179, 180, 326, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 342,
	0, 0, 0, 0, 293, 0, 0, 0, 0, 0,
	233, 274, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 324, 336, 353,
	356, 0, 0, 0, 184, 355, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 351, 258, 259, 260, 261, 225, 0,
	201, 354, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	221, 227, 0, 229, 200, 273, 223, 333, 236, 0,
	0, 0, 0, 0, 0, 265, 232, 298, 237, 243,
	286, 332, 271, 291, 198, 323, 299, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	241, 0, 282, 220, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 0, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 308, 0, 0, 339, 340, 341, 325, 0, 212,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 300,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 305, 321, 197, 296,
	334, 202, 303, 192, 269, 292, 0, 0, 189, 319,
	302, 251, 234, 235, 188, 0, 287, 213, 226, 209,
	267, 0, 318, 346, 208, 337, 0, 329, 191, 0,
	328, 266, 315, 320, 252, 246, 190, 317, 250, 245,
	238, 217, 0, 230, 278, 244, 279, 231, 256, 255,
	257, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 239, 0, 0, 0, 347, 0, 290,
	272, 0, 0, 0, 288, 242, 316, 280, 322, 306,
	330, 284, 281, 182, 307, 211, 253, 193, 195, 207,
	214, 216, 218, 219, 262, 263, 275, 295, 309, 310,
	311, 210, 203, 289, 204, 228, 205, 183, 297, 206,
	185, 276, 314, 0, 224, 285, 249, 186, 248, 277,
	313, 312, 194, 338, 344, 345, 349, 0, 350, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 343, 222, 179, 180, 326,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 342, 0, 0, 0, 0, 293, 0, 0, 0,
	0, 0, 233, 274, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 324,
	336, 353, 356, 0, 0, 0, 184, 355, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 351, 258, 259, 260, 261,
	225, 0, 201, 354, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 221, 227, 0, 229, 200, 273, 223, 333,
	236, 0, 0, 0, 0, 0, 0, 265, 232, 298,
	237, 243, 286, 332, 271, 291, 198, 323, 299, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 241, 0, 282, 220, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 0, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 308, 0, 0, 339, 340, 341, 325,
	0, 212, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 300, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 0, 1835, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 305, 321,
	197, 296, 334, 202, 303, 192, 269, 292, 0, 0,
	189, 319, 302, 251, 234, 235, 188, 0, 287, 213,
	226, 209, 267, 0, 318, 346, 208, 337, 0, 329,
	191, 0, 328, 266, 315, 320, 252, 246, 190, 317,
	250, 245, 238, 217, 0, 230, 278, 244, 279, 231,
	256, 255, 257, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 239, 0, 0, 0, 347,
	0, 290, 272, 0, 0, 0, 288, 242, 316, 280,
	322, 306, 330, 284, 281, 182, 307, 211, 253, 193,
	195, 207, 214, 216, 218, 219, 262, 263, 275, 295,
	309, 310, 311, 210, 203, 289, 204, 228, 205, 183,
	297, 206, 185, 276, 314, 0, 224, 285, 249, 186,
	248, 277, 313, 312, 194, 338, 344, 345, 349, 0,
	350, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 343, 222, 179,
	180, 326, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 342, 0, 0, 0, 0, 293, 0,
	0, 0, 0, 0, 233, 274, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 324, 336, 353, 356, 0, 0, 0, 184, 355,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 351, 258, 259,
	260, 261, 225, 0, 201, 354, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 221, 227, 0, 229, 200, 273,
	223, 333, 236, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 0, 282, 220, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	0, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 0, 0, 339, 340,
	341, 325, 308, 212, 0, 0, 1761, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	300, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 0, 318, 346, 208, 337, 0, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 0, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 347, 0,
	290, 272, 0, 0, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 343, 222, 179, 180,
	326, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 342, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 351, 258, 259, 260,
	261, 225, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 265, 232,
	298, 237, 243, 286, 332, 271, 291, 198, 323, 299,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 241, 0, 282, 220, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 0,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 308, 0, 0, 339, 340, 341,
	325, 0, 212, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 300, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 1023, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 305,
	321, 197, 296, 334, 202, 303, 192, 269, 292, 0,
	0, 189, 319, 302, 251, 234, 235, 188, 0, 287,
	213, 226, 209, 267, 0, 318, 346, 208, 337, 0,
	329, 191, 0, 328, 266, 315, 320, 252, 246, 190,
	317, 250, 245, 238, 217, 0, 230, 278, 244, 279,
	231, 256, 255, 257, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 239, 0, 0, 0,
	347, 0, 290, 272, 0, 0, 0, 288, 242, 316,
	280, 322, 306, 330, 1302, 281, 182, 307, 211, 253,
	193, 195, 207, 214, 216, 218, 219, 262, 263, 275,
	295, 309, 310, 311, 210, 203, 289, 204, 228, 205,
	183, 297, 206, 185, 276, 314, 0, 224, 285, 249,
	186, 248, 277, 313, 312, 194, 338, 344, 345, 349,
	0, 350, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 343, 222,
	179, 180, 326, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 342, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 233, 274, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 324, 336, 353, 356, 0, 0, 0, 184,
	355, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 351, 258,
	259, 260, 261, 225, 0, 201, 354, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 221, 227, 0, 229, 200,
	273, 223, 333, 236, 0, 0, 0, 0, 0, 0,
	265, 232, 298, 237, 243, 286, 332, 271, 291, 198,
	323, 299, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 241, 0, 282, 220, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 0, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 308, 0, 0, 339,
	340, 341, 325, 0, 212, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 300, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 139, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 305, 321, 197, 296, 334, 202, 303, 192, 269,
	292, 0, 0, 189, 319, 302, 251, 234, 235, 188,
	0, 287, 213, 226, 209, 267, 0, 318, 346, 208,
	337, 0, 329, 191, 0, 328, 266, 315, 320, 252,
	246, 190, 317, 250, 245, 238, 217, 0, 230, 278,
	244, 279, 231, 256, 255, 257, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 239, 0,
	0, 0, 347, 0, 290, 272, 0, 0, 0, 288,
	242, 316, 280, 322, 306, 330, 284, 281, 182, 307,
	211, 253, 193, 195, 207, 214, 216, 218, 219, 262,
	263, 275, 295, 309, 310, 311, 210, 203, 289, 204,
	228, 205, 183, 297, 206, 185, 276, 314, 0, 224,
	285, 249, 186, 248, 277, 313, 312, 194, 338, 344,
	345, 349, 0, 350, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	343, 222, 179, 180, 326, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 342, 0, 0, 0,
	0, 293, 0, 0, 0, 0, 0, 233, 274, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 324, 336, 353, 356, 0, 0,
	0, 184, 355, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	351, 258, 259, 260, 261, 225, 0, 201, 354, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 221, 227, 0,
	229, 200, 273, 223, 333, 236, 0, 0, 0, 0,
	0, 0, 265, 232, 298, 237, 243, 286, 332, 271,
	291, 198, 323, 299, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 181, 0, 241, 0, 282,
	220, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 0, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 308, 0,
	0, 339, 340, 341, 325, 0, 212, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 300, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 305, 321, 197, 296, 334, 202, 303,
	192, 269, 292, 0, 0, 189, 319, 302, 251, 234,
	235, 188, 0, 287, 213, 226, 209, 267, 0, 318,
	346, 208, 337, 0, 329, 191, 0, 328, 266, 315,
	320, 252, 246, 190, 317, 250, 245, 238, 217, 0,
	230, 278, 244, 279, 231, 256, 255, 257, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	239, 0, 0, 0, 347, 0, 290, 272, 0, 0,
	0, 288, 242, 316, 280, 322, 306, 330, 387, 281,
	182, 307, 211, 253, 193, 195, 207, 214, 216, 218,
	219, 262, 263, 275, 295, 309, 310, 311, 210, 203,
	289, 204, 228, 205, 183, 297, 206, 185, 276, 314,
	0, 224, 285, 249, 186, 248, 277, 313, 312, 194,
	338, 344, 345, 349, 0, 350, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 343, 222, 179, 180, 326, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 342, 0,
	0, 0, 0, 293, 0, 0, 0, 0, 0, 233,
	274, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 324, 336, 353, 356,
	0, 0, 0, 184, 355, 0, 0, 0, 0, 0,
	0, 388, 327, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 351, 258, 259, 260, 261, 225, 0, 201,
	354, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 221,
	227, 0, 229, 200, 273, 223, 333, 236, 0, 0,
	0, 0, 0, 0, 265, 232, 298, 237, 243, 286,
	332, 271, 291, 198, 323, 299, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 241,
	0, 282, 220, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 0, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	308, 0, 0, 339, 340, 341, 325, 0, 212, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 300, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 305, 321, 197, 296, 334,
	202, 303, 192, 269, 292, 0, 0, 189, 319, 302,
	251, 234, 235, 188, 0, 287, 213, 226, 209, 267,
	0, 318, 346, 208, 337, 0, 329, 191, 0, 328,
	266, 315, 320, 252, 246, 190, 317, 250, 245, 238,
	217, 0, 230, 278, 244, 279, 231, 256, 255, 257,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 0, 331, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 239, 0, 0, 0, 347, 0, 290, 272,
	0, 0, 0, 288, 242, 316, 280, 322, 306, 330,
	284, 281, 182, 307, 211, 253, 193, 195, 207, 214,
	216, 218, 219, 262, 263, 275, 295, 309, 310, 311,
	210, 203, 289, 204, 228, 205, 183, 297, 206, 185,
	276, 314, 0, 224, 285, 249, 186, 248, 277, 313,
	312, 194, 338, 344, 345, 349, 0, 350, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 343, 222, 179, 180, 326, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	342, 0, 0, 0, 0, 293, 0, 0, 0, 0,
	0, 233, 274, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 324, 336,
	353, 356, 0, 0, 0, 184, 355, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 351, 258, 259, 260, 261, 225,
	0, 201, 354, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 221, 227, 0, 229, 200, 273, 223, 333, 236,
	0, 0, 0, 0, 0, 0, 265, 232, 298, 237,
	243, 286, 332, 271, 291, 198, 323, 299, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 241, 0, 282, 220, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 0, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 308, 0, 0, 339, 340, 341, 325, 0,
	212, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	215, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	300, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 0, 318, 346, 208, 337, 0, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 0, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 347, 0,
	290, 272, 0, 0, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 343, 222, 179, 180,
	326, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 342, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 351, 258, 259, 260,
	261, 225, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 265, 232,
	298, 237, 243, 286, 332, 271, 291, 198, 323, 299,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 241, 0, 282, 220, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 0,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 308, 0, 0, 339, 340, 341,
	325, 0, 212, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 300, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 305,
	321, 197, 296, 334, 202, 303, 192, 269, 292, 0,
	0, 189, 319, 302, 251, 234, 235, 188, 0, 287,
	213, 226, 209, 267, 0, 318, 346, 208, 337, 0,
	329, 191, 0, 328, 266, 315, 320, 252, 246, 190,
	317, 250, 245, 238, 217, 0, 230, 278, 244, 279,
	231, 256, 255, 257, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 239, 0, 0, 0,
	347, 0, 290, 272, 0, 0, 0, 288, 242, 316,
	280, 322, 306, 330, 284, 281, 182, 307, 211, 253,
	193, 195, 207, 214, 216, 218, 219, 262, 263, 275,
	295, 309, 310, 311, 210, 203, 289, 204, 228, 205,
	183, 297, 206, 185, 276, 314, 0, 224, 285, 249,
	186, 248, 277, 313, 312, 194, 338, 344, 345, 349,
	0, 350, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 343, 222,
	179, 180, 326, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 342, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 233, 274, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 324, 336, 353, 356, 0, 0, 0, 184,
	355, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 351, 258,
	259, 260, 261, 225, 0, 201, 354, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 221, 227, 0, 229, 200,
	273, 223, 333, 236, 0, 0, 0, 0, 0, 0,
	265, 232, 298, 237, 243, 286, 332, 271, 291, 198,
	323, 299, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 241, 0, 282, 220, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 0, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 308, 0, 0, 339,
	340, 341, 325, 0, 212, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 300, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 139, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 305, 321, 197, 296, 334, 202, 303, 192, 269,
	292, 0, 0, 189, 319, 302, 251, 234, 235, 188,
	0, 287, 213, 226, 209, 267, 0, 318, 346, 208,
	337, 0, 329, 191, 0, 328, 266, 315, 320, 252,
	246, 190, 317, 250, 245, 238, 217, 0, 230, 278,
	244, 279, 231, 256, 255, 257, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 239, 0,
	0, 0, 347, 0, 290, 272, 0, 0, 0, 288,
	242, 316, 280, 322, 306, 330, 284, 281, 182, 307,
	211, 253, 193, 195, 427, 214, 216, 218, 219, 262,
	263, 275, 295, 309, 310, 311, 210, 203, 289, 204,
	228, 205, 183, 297, 206, 185, 276, 314, 0, 224,
	285, 249, 186, 248, 277, 313, 312, 194, 338, 344,
	345, 349, 0, 350, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	343, 222, 179, 180, 326, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 342, 0, 0, 0,
	0, 293, 0, 0, 0, 0, 0, 233, 274, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 324, 336, 353, 356, 0, 0,
	0, 184, 355, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	351, 258, 259, 260, 261, 225, 0, 201, 354, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 221, 227, 0,
	229, 200, 273, 223, 333, 236, 0, 0, 0, 0,
	0, 0, 265, 232, 298, 237, 243, 286, 332, 271,
	291, 198, 323, 299, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 241, 0, 282,
	220, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 0, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 308, 0,
	0, 339, 340, 341, 325, 0, 212, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 215, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 300, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 698, 699, 700,
	1807, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 305, 321, 197, 296, 334, 202, 303,
	192, 269, 292, 0, 0, 189, 319, 302, 251, 234,
	235, 188, 0, 287, 213, 226, 209, 267, 0, 318,
	346, 208, 337, 0, 329, 191, 0, 328, 266, 315,
	320, 252, 246, 190, 317, 250, 245, 238, 217, 0,
	230, 278, 244, 279, 231, 256, 255, 257, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	239, 0, 0, 0, 347, 0, 290, 272, 0, 0,
	0, 288, 242, 316, 280, 322, 306, 330, 284, 281,
	182, 307, 211, 253, 193, 195, 207, 214, 216, 218,
	219, 262, 263, 275, 295, 309, 310, 311, 210, 203,
	289, 204, 228, 205, 183, 297, 206, 185, 276, 314,
	0, 224, 285, 249, 186, 248, 277, 313, 312, 194,
	338, 344, 345, 349, 0, 350, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 343, 222, 179, 180, 326, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 342, 0,
	0, 0, 0, 293, 0, 0, 0, 0, 0, 233,
	274, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 324, 336, 353, 356,
	0, 0, 0, 184, 355, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 351, 258, 259, 260, 261, 225, 0, 201,
	354, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 221,
	227, 0, 229, 200, 273, 223, 333, 236, 0, 0,
	0, 0, 0, 0, 265, 232, 298, 237, 243, 286,
	332, 271, 291, 198, 323, 299, 247, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 300, 254, 181, 0, 241,
	0, 282, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 698, 699, 700, 1807,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 340, 341, 325, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 305, 321, 197, 296, 334, 202, 303, 192,
	269, 292, 0, 0, 189, 319, 302, 251, 234, 235,
	188, 0, 287, 213, 226, 209, 267, 0, 318, 346,
	208, 337, 0, 329, 191, 0, 328, 266, 315, 320,
	252, 246, 190, 317, 250, 245, 238, 217, 0, 230,
	278, 244, 279, 231, 256, 255, 257, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 239,
	0, 0, 0, 347, 0, 290, 272, 0, 0, 0,
	288, 242, 316, 280, 322, 306, 330, 284, 281, 182,
	307, 211, 253, 193, 195, 207, 214, 216, 218, 219,
	262, 263, 275, 295, 309, 310, 311, 210, 203, 289,
	204, 228, 205, 183, 297, 206, 185, 276, 314, 0,
	224, 285, 249, 186, 248, 277, 313, 312, 194, 338,
	344, 345, 349, 0, 350, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 343, 222, 179, 180, 326, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 342, 0, 0,
	0, 0, 293, 0, 0, 0, 0, 0, 233, 274,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 324, 336, 353, 356, 0,
	0, 0, 184, 355, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 351, 258, 259, 260, 261, 225, 0, 201, 354,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 221, 227,
	0, 229, 200, 273, 223, 333, 236, 0, 0, 0,
	0, 0, 0, 265, 232, 298, 237, 243, 286, 332,
	271, 291, 198, 323, 299, 247, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 300, 254, 181, 0, 241, 0,
	282, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 698, 699, 700, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 340, 341, 325, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 305, 321, 197, 296, 334, 202, 303, 192, 269,
	292, 0, 0, 189, 319, 302, 251, 234, 235, 188,
	0, 287, 213, 226, 209, 267, 0, 318, 346, 208,
	337, 0, 329, 191, 0, 328, 266, 315, 320, 252,
	246, 190, 317, 250, 245, 238, 217, 0, 230, 278,
	244, 279, 231, 256, 255, 257, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 239, 0,
	0, 0, 347, 0, 290, 272, 0, 0, 0, 288,
	242, 316, 280, 322, 306, 330, 284, 281, 182, 307,
	211, 253, 193, 195, 207, 214, 216, 218, 219, 262,
	263, 275, 295, 309, 310, 311, 210, 203, 289, 204,
	228, 205, 183, 297, 206, 185, 276, 314, 0, 224,
	285, 249, 186, 248, 277, 313, 312, 194, 338, 344,
	345, 349, 0, 350, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	343, 222, 179, 180, 326, 131, 268, 38, 121, 101,
	0, 0, 0, 0, 0, 264, 342, 0, 0, 0,
	0, 293, 0, 0, 0, 126, 0, 233, 274, 0,
	294, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 90, 0, 301, 324, 336, 353, 356, 0, 0,
	0, 184, 355, 0, 0, 0, 76, 0, 0, 0,
	327, 0, 128, 0, 335, 0, 0, 0, 0, 0,
	351, 258, 259, 260, 261, 225, 0, 201, 354, 283,
	0, 0, 0, 0, 777, 778, 779, 776, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 221, 227, 0,
	229, 200, 273, 223, 333, 236, 0, 0, 0, 886,
	0, 0, 265, 232, 298, 237, 243, 286, 332, 271,
	291, 198, 323, 299, 247, 0, 0, 0, 0, 0,
	122, 123, 0, 124, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1184,
	0, 0, 0, 0, 0, 181, 0, 241, 0, 282,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 120,
	129, 0, 74, 0, 0, 0, 0, 0, 0, 874,
	886, 339, 340, 341, 325, 0, 212, 0, 0, 119,
	113, 112, 0, 0, 0, 0, 44, 894, 898, 900,
	902, 904, 905, 907, 0, 911, 908, 909, 910, 0,
	0, 889, 890, 891, 892, 872, 873, 895, 0, 875,
	0, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 887, 893, 0, 0, 0, 0, 0, 0, 0,
	897, 899, 901, 903, 906, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 116, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 888, 1177, 0, 0,
	874, 1179, 1176, 1178, 1182, 1183, 0, 2367, 0, 1181,
	0, 84, 0, 0, 0, 118, 0, 85, 894, 898,
	900, 902, 904, 905, 907, 2367, 911, 908, 909, 910,
	0, 0, 889, 890, 891, 892, 872, 873, 895, 0,
	875, 1758, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 887, 893, 0, 0, 0, 0, 0, 1758,
	0, 897, 899, 901, 903, 906, 0, 0, 0, 0,
	86, 0, 0, 0, 0, 0, 0, 0, 2349, 87,
	37, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2349, 888, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1895, 1896, 0,
	0, 0, 0, 0, 0, 39, 0, 0, 0, 0,
	0, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1174, 1175, 1187, 1188, 1189, 1190, 1191, 1192, 1185, 1186,
	0, 0, 0, 2450, 0, 0, 0, 407, 102, 406,
	413, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 0, 412, 416, 0, 0, 398, 407,
	0, 406, 413, 403, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 410, 411, 0, 412, 416, 0, 0,
	398, 0, 0, 0, 0, 0, 88, 89, 93, 0,
	421, 0, 0, 2353, 0, 0, 0, 425, 0, 0,
	426, 0, 0, 0, 2357, 0, 0, 0, 0, 0,
	0, 2353, 0, 0, 0, 0, 0, 0, 0, 0,
	896, 0, 2357, 0, 2346, 0, 0, 0, 2348, 2350,
	2352, 0, 2354, 2355, 2356, 2358, 2359, 2360, 2362, 2363,
	2364, 2365, 2346, 0, 0, 0, 2348, 2350, 2352, 0,
	2354, 2355, 2356, 2358, 2359, 2360, 2362, 2363, 2364, 2365,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2368, 0, 0, 0, 0, 0,
	407, 0, 406, 413, 403, 0, 0, 0, 0, 0,
	0, 0, 2368, 0, 410, 411, 0, 412, 416, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	2366, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 896, 0, 0, 0, 0, 0, 2345, 2366, 0,
	399, 401, 400, 0, 0, 0, 0, 0, 0, 405,
	425, 0, 0, 426, 0, 2345, 0, 0, 0, 0,
	0, 409, 399, 401, 400, 0, 2361, 0, 424, 0,
	0, 405, 0, 2351, 0, 402, 0, 0, 0, 393,
	0, 0, 0, 409, 2361, 0, 0, 0, 0, 0,
	424, 2351, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 404, 408, 414,
	0, 415, 417, 0, 0, 418, 419, 420, 0, 0,
	422, 423, 0, 399, 401, 400, 0, 0, 0, 404,
	408, 414, 405, 415, 417, 0, 0, 418, 419, 420,
	0, 0, 422, 423, 409, 0, 0, 0, 0, 0,
	0, 424, 0, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 408, 414, 0, 415, 417, 0, 0, 418, 419,
	420, 0, 0, 422, 423,
}

var yyPact = [...]int{
	29035, -1000, -289, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -198, 26391, 26391,
	-1000, -1000, 2020, -1000, 25889, 10317, 26893, 199, 192, 26893,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 439, -1000, 25387, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 402, 29497, 27395, 285, 7797, 26893,
	-270, -1000, 2369, -135, -1000, -1000, -1000, -1000, -1000, -1000,
	1078, 476, 24885, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1304,
	164, 476, 608, 613, 754, 754, 11823, 2369, 247, 266,
	-1000, 900, 29035, 28735, 1548, 366, 26893, -1000, 1038, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 366,
	-1000, -1000, -1000, 2369, 2369, -1000, 26893, 26893, -5, 1136,
	-1000, 263, 251, 278, 1036, -1000, -1000, -1000, -1000, -1000,
	2332, -1000, 26893, 26893, 2021, 26893, -1000, 1418, 307, 29640,
	2127, 908, 517, 2037, -1000, -1000, 1993, -1000, 90, 167,
	152, 287, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 122,
	-1000, 2226, -1000, -1000, 87, -1000, -1000, 74, -1000, -1000,
	-1000, -65, -1000, -1000, -1000, -1000, -1000, -144, -1000, -1000,
	-144, 644, 1515, 7797, -1000, 1454, -1000, 3261, -1000, -1000,
	-1000, -1000, 5278, 9303, 9303, 9303, 9303, -1000, -1000, 1808,
	7797, 1989, 1802, 1987, -1000, -1000, -1000, -1000, 1031, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1544, 8801, -1000, 1986, 1962, 1961, 1957, 1940, 1939,
	1932, 1929, 1926, 1923, 1690, 1918, 1543, 1542, 1916, 1915,
	1913, 1537, 1690, 1690, 1907, 1900, 1893, 1890, 1889, 1887,
	1886, 1877, 1876, 1872, 1868, 1861, 1857, 1831, 1830, 1829,
	1826, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 275, -1000, 1023, 944, -1000, 1825,
	2133, 2249, 1720, 2311, 2236, 2233, 2196, 2191, 1386, -1000,
	-1000, 26893, 26893, 60, 392, 392, 392, 426, 392, 437,
	435, -1000, -1000, -1000, -1000, -1000, -1000, 523, -1000, -1000,
	-1000, -1000, 883, 26893, -1000, 1744, 1092, 2246, 326, 322,
	240, -1000, 1182, 1182, 1182, 1092, 271, 332, 2249, 2249,
	-57, -106, 1092, 1092, -106, 1092, 85, -1000, -1000, -1000,
	1182, 315, 1182, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2208, 2203, -188, 402, 402, 411, -1000, -153, -1000, -1000,
	632, -1000, 580, -1000, 1418, 304, 301, 890, 1181, -1000,
	1123, 26893, 26893, 26893, 1123, 1123, 14838, 14336, -1000, 2249,
	1720, -1000, 1664, 1855, 1663, 1720, 402, 402, 402, 402,
	402, 402, 402, 26893, 26893, 6784, 6784, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 281, -1000, -1000, -1000, -1000,
	-1000, 2139, 243, 1824, -1000, 26893, 256, 2249, 2133, 2249,
	-1000, -1000, 1018, 1380, 1527, -1000, -1000, 263, 1097, -1000,
	713, -1000, -1000, -1000, -1000, 26893, 270, -1000, -1000, 1505,
	1821, -1000, 358, 855, 978, -1000, 153, 29519, 22368, 1418,
	22368, 26893, -1000, -1000, -1000, -1000, -1000, -1000, -80, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 100, -1000, 100, 7797, 7797, 7797, 7797, 7797,
	-1000, 453, 8299, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	9303, 9303, 9303, 9303, 9303, 9303, 9303, 9303, 9303, 9303,
	9303, 9303, 1806, 1204, 9303, 9303, 9303, 1855, 2232, 885,
	174, -1000, -1000, -1000, -1000, -1000, 1145, 1515, 7797, 7797,
	7797, 26893, -1000, 29034, 7797, 7797, 11469, 7797, 2189, 3771,
	26893, 7797, -1000, 1661, 1653, -1000, -1000, 1325, 7797, -1000,
	-1000, 7797, 9303, 7797, -1000, -1000, -1000, 249, 2189, 2189,
	7797, 7797, 2189, 2189, 2189, 1148, 2189, 2189, 2189, 2189,
	2189, 2189, 2189, 2189, 26893, 2110, 58, -1000, -1000, -1000,
	1705, -1000, 1756, 1756, 1705, 1705, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1785, 1820, -1000, -1000, 1749,
	1749, 1749, 1705, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1761, 1761,
	1776, 1761, 26893, 2249, -270, 6282, -1000, -275, 2133, 7797,
	-1000, -1000, 7797, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1525, 2185, -1000, 1818, 1015, 424, 392, -1000, 26893,
	1168, 22368, 1418, 1427, 26893, 392, 392, 411, -1000, 26893,
	883, 2183, 26893, 2320, 9303, 24383, 1182, 1092, -1000, 26893,
	-1000, -1000, -1000, 1182, 26893, 1182, 2320, 1182, -1000, -1000,
	-1000, 1092, 1092, -1000, -1000, -1000, -1000, 1182, 1182, -1000,
	-1000, -85, 2320, 2320, -99, -1000, 26893, 26893, 392, 26893,
	-1000, 26893, -1000, -1000, 422, 26893, 22368, 20862, -1000, -124,
	599, 583, 591, -1000, -1000, 354, 451, 13834, 323, 22368,
	4775, -1000, -1000, 1123, 1123, 1123, 4775, 4775, 1024, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2133, -1000, -1000, -1000,
	-1000, -1000, 26893, 22368, 1418, 26893, 26893, 26893, 28735, -1000,
	1817, 836, -1000, -1000, 11321, 1002, 836, 1524, 26893, 1523,
	2036, 2086, -1000, 1815, 12829, 26893, -1000, -1000, -271, -1000,
	12326, 26893, 2133, -1000, 2133, 2813, -1000, 2238, -1000, 263,
	169, -1000, -1000, -1000, -1000, -1000, -1000, 974, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 882, -1000, 26893,
	-1000, -1000, 153, 22368, 1115, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 125, -1000, -1000, 163, -1000, 420, 28, 1090,
	-1000, -1000, 66, 156, 473, 66, 1515, -1000, 1175, 1175,
	1188, -1000, 518, -1000, -1000, -1000, -1000, 1808, -1000, -1000,
	-1000, 2075, 2124, -1000, 1067, 1067, 1051, 1051, 1051, 1051,
	1051, 1222, 1222, -1000, -1000, -1000, 5278, 1806, 9303, 9303,
	9303, 379, 3177, 3540, -1000, 7797, 1187, -1000, 7797, 1599,
	2212, 910, 971, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1642, 644, 1641, 1634, 2331, 1640, 7797,
	-1000, -1000, 1502, 7295, -1000, -1000, -1000, 1637, 967, 1635,
	-1000, -1000, -1000, 1630, 768, 1629, 1716, 1627, 857, 7797,
	7797, 1084, 1076, 7797, 7797, 7797, 7797, 1626, 7797, 7797,
	7797, 7797, 7797, 7797, 7797, 7797, -1000, 7797, 52, -1000,
	-1000, -1000, -1000, 1371, -1000, 1370, -1000, -1000, -1000, 1518,
	1518, -1000, 1368, -1000, -1000, -1000, -1000, 1367, -1000, -1000,
	1364, -1000, -1000, -1000, -1000, 1072, -1000, 1515, -1000, 1517,
	-1000, 977, 833, -1000, 1285, -1000, -1000, 26893, 9805, 26893,
	392, 26893, 48, -1000, 2117, 1013, -1000, 28, 687, 2019,
	2105, 26893, 26893, 23881, -1000, 1805, 1071, -1000, -1000, 7797,
	-1000, 2003, 1418, 26893, 2320, -1000, -1000, -1000, -1000, 28735,
	-1000, -1000, -1000, 26893, 2320, 2320, 1092, 1182, 1182, -1000,
	-1000, 1182, -1000, 962, -1000, 26893, -1000, -1000, 402, 47,
	1013, 2296, 886, -1000, -1000, -1000, -1000, 27897, 27897, 13332,
	27897, -1000, 1101, -1000, -1000, 596, 560, 550, -1000, -1000,
	416, -1000, -1000, 687, -1000, -1000, -1000, 1804, 1135, -1000,
	-1000, 1802, -1000, 4775, 4775, 4775, -1000, -1000, 16846, -1000,
	-1000, 756, 687, 2035, 752, -1000, 752, -1000, 9805, 2320,
	6784, -1000, 20862, -1000, -1000, 23372, -1000, 22870, 2320, -279,
	946, -118, -1000, 2114, -271, 26893, 26893, 1066, 127, -1000,
	1064, -1000, 650, -1000, 1800, -1000, 1049, 2084, 657, -1000,
	1129, -1000, -1000, -1000, 939, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -7, -1000, -1000, 26893, 1505,
	1021, 1115, 695, -1000, 414, 938, 927, -1000, 22368, 98,
	22368, -1000, 22368, -1000, -1000, 242, -1000, 26893, 2131, -1000,
	-1000, -1000, 1464, -297, 2128, -1000, -1000, -1000, -1000, -1000,
	1020, -1000, 379, 3177, 1954, -1000, 9303, 9303, 2198, 1139,
	-1000, 7797, 1275, 29119, -1000, 1416, 15842, 26893, -1000, -1000,
	7797, 7797, -1000, 2194, -1000, 7797, 7797, 1494, -1000, 26893,
	-1000, -1000, -1000, 15842, -1000, 9303, -1000, 7797, 145, 2163,
	-58, -58, 2113, 2096, 2067, 1011, -58, 2028, 1959, 1911,
	1788, 1727, 1714, 1683, 1646, 1515, -1000, -1000, 1614, 1613,
	1008, -1000, 1007, 1612, 997, 996, 6282, -1000, -118, 7797,
	7797, 7797, 2093, -1000, -1000, 64, 1604, 706, -1000, -1000,
	-1000, 29220, 1756, 1705, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1785, -1000, 1749, 1749, 1749, 1705, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1761, 1761,
	1776, 1761, -1000, 26893, 1760, -52, 1109, -1000, 421, 22368,
	298, -1000, 2034, 313, -1000, 2105, -1000, 648, -1000, 1759,
	1758, 26893, 771, -1000, 925, 29035, -1000, 26893, 1515, -1000,
	1418, -1000, 1092, -1000, -1000, 2320, 1010, -1000, -1000, 2320,
	1092, 1092, 1182, 26893, -1000, 26893, -52, 1109, 421, 26893,
	20862, 20862, 20862, 20862, -1000, 2051, 2049, -1000, 2070, 2053,
	2088, 26893, 20862, 1744, -1000, 28316, -1000, -1000, -1000, -1000,
	-1000, 1855, 995, 2313, 555, 7797, -1000, -1000, -1000, 534,
	22368, 1498, 323, -1000, -1000, -1000, -1000, -1000, 26893, 26893,
	1602, 2318, -1000, 700, -1000, -1000, 919, -1000, 2318, -1000,
	1352, 1496, -40, -33, 1208, 650, 657, 958, -1000, 127,
	26893, 2080, 1757, -1000, 26893, -271, 6282, 245, -271, 26893,
	6282, 2813, 1346, -1000, -1000, -1000, 2325, 22368, 1418, 1075,
	1114, -1000, 86, -1000, 118, 348, 1492, -1000, 429, 99,
	-1000, 1126, 1464, 428, -1000, -1000, 9303, -1000, -1000, -1000,
	-1000, 1515, 7797, 1597, -1000, 521, 521, 1595, -1000, 1705,
	1756, -1000, 1705, 1749, 1705, 521, 521, 1594, -1000, 1376,
	1609, -1000, 1593, 1576, 7797, -1000, 1586, 3149, 830, 1585,
	1469, -58, -1000, 1747, -1000, -58, -58, -58, -58, -1000,
	-58, -58, -58, -58, -58, -58, -58, -58, -1000, -1000,
	-1000, 1467, -1000, -1000, -1000, 1343, -1000, 1340, -1000, -40,
	1515, 1515, -1000, -1000, 2103, 1465, 447, 9805, 2091, 1744,
	10819, 1388, -1000, -1000, 21866, -1000, 336, -1000, -1000, -1000,
	444, 186, 1329, 317, -1000, 1552, 26893, -1000, -1000, -1000,
	-1000, -1000, 1109, 1109, 1109, 10819, 10819, 366, 724, 915,
	20862, 26893, -1000, 20360, 1584, -1000, 687, 2320, -1000, 26893,
	-1000, 2320, 2320, 1092, -1000, 1744, 1388, 21866, 336, 952,
	-1000, 1125, 2002, 2033, 2002, -1000, -1000, -1000, -1000, 2032,
	-1000, 1973, -1000, -1000, 952, -1000, -1000, -1000, -1000, -1000,
	555, -1000, 2235, 582, 582, 582, 1582, -1000, 695, 1578,
	-1000, -1000, -1000, -1000, -1000, 2315, 2310, 21364, 2315, -1000,
	-279, -277, -13, 2307, 2299, 2349, 248, 26893, 244, -1000,
	-271, 26893, -1000, -1000, 1577, 694, -271, -1000, 650, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1418, -1000, 115, -1000,
	-1000, -1000, -1000, -1000, -1000, 7, -1000, 26893, -1000, 1464,
	1462, 93, 26893, -1000, 1515, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7797, -1000, -1000, -1000, 1566, -1000, -1000, 7797, -58, -1000,
	-1000, 363, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1573, 1567, -277, -1000, -1000,
	-1000, 29220, -1000, 1192, 2181, 1562, 693, -1000, -1000, -1000,
	29220, 829, -1000, 26893, 1207, 582, 392, 582, 1202, 1743,
	-1000, -1000, -1000, 1461, 21, -1000, -1000, -1000, 1458, 1453,
	1326, -1000, -1000, 1347, 911, 39, -1000, -1000, -1000, -1000,
	-1000, -1000, 1742, 15842, 16344, 1451, 1560, 1559, 27897, 20862,
	20360, 803, -1000, 914, -1000, -1000, -1000, 2320, -1000, -1000,
	2320, 2145, -1000, 21, -1000, 2297, 26893, 6282, -1000, -1000,
	7797, 1741, -1000, 7797, -1000, -1000, -1000, -1000, -1000, 1733,
	2156, -1000, -1000, -1000, -1000, -1000, -1000, 7797, 7797, -1000,
	-1000, -1000, -279, 1449, -1000, 2292, 1448, 1409, 26893, -1000,
	-1000, -271, -1000, 650, 950, -1000, 650, 687, -1000, -1000,
	127, -1000, -1000, -1000, -99, 1546, -1000, 1511, -1000, 2297,
	-1000, 2290, -1000, -1000, -279, -212, -1000, -1000, 248, 29351,
	10819, 1407, -1000, -1000, 26893, 26893, -1000, 26893, 26893, 392,
	7797, -1000, -1000, 228, -1000, -1000, 134, -1000, -1000, 1344,
	359, -1000, 18854, -1000, -1000, -1000, -1000, -1000, 100, 29351,
	2320, 803, 914, -1000, -1000, 1074, -1000, -1000, 248, -1000,
	2249, -1000, -1000, 1515, 26893, 1515, 19858, -1000, 2289, 2281,
	1515, 644, -281, -1000, 1447, -27, -1000, -1000, 657, 650,
	-1000, -99, -1000, -46, -17, -1000, -1000, 94, 7797, -281,
	26893, -1000, 362, 29369, -1000, 1109, 1109, 758, 1109, 1109,
	1109, 1109, 283, 269, 1109, 1109, 1109, 1109, 1109, 1109,
	1109, 1109, 1109, 1109, 1109, 1109, 1109, 1109, 1732, -1000,
	-1000, 1407, -1000, -1000, 1220, 9303, -1000, -1000, 1445, 16344,
	506, 535, 1722, -1000, 254, 2346, -1000, 1200, 1197, -1000,
	26893, -1000, 1718, 1996, 214, 1712, -1000, 1711, 1710, 26893,
	1387, 339, 1441, -1000, -1000, 126, -1000, -1000, 906, -1000,
	1705, 7797, -1000, -99, 362, 2297, -1000, -1000, -1000, 901,
	875, -1000, -1000, -1000, -1000, -1000, 1703, -1000, 2279, -1000,
	405, -51, -17, -1000, 2278, -36, 2276, 2275, 1555, -1000,
	3269, -1000, -1000, -1000, 644, -1000, 2144, -1000, 217, 2274,
	29351, -1000, 1323, 1322, 1109, 1109, 1317, 1440, 1439, 1437,
	1109, 1109, 1316, 1432, 28316, 1294, 1281, 1260, 1342, 1431,
	501, 1311, 1293, 1284, 26893, 1702, 1403, -1000, -1000, 3177,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1259, 1700, -107, -1000, -1000, 1696, 18854, 280, 280,
	18854, 18854, 18854, 1694, 459, -1000, 6, -1000, -1000, -1000,
	18854, 2119, 1324, -1000, 217, 2249, -1000, -1000, 19356, 26893,
	1409, 1691, 1257, -13, 2272, -1000, 1409, 2261, 1409, 1409,
	-1000, -1000, 4273, -272, -56, 268, 1430, -1000, 2254, 314,
	-1000, -1000, -1000, 15842, 15842, -1000, -1000, -1000, -1000, 1421,
	1414, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 291, 26893, 873, -1000, 1122, 1520, 7797,
	1690, -199, 18854, 871, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 870, 860, 843, 18854, -1000, -1000, -1000, 246, -1000,
	168, -1000, -1000, 2119, -1000, -1000, -1000, -1000, 842, -1000,
	-1000, 2199, 15340, -42, -1000, 1413, -1000, 1409, -1000, -1000,
	1178, -1000, -1000, -1000, -1000, -1000, -1000, 18352, 232, 255,
	237, -1000, 406, -1000, -1000, -1000, -1000, -1000, -1000, 311,
	828, -1000, 1403, 1401, -1000, 1264, -1000, 2030, -1000, 62,
	824, -1000, -1000, -1000, -1000, 802, -1000, -1000, 1109, 1399,
	178, -1000, -1000, -1000, -1000, 26893, -1000, 26893, -1000, 801,
	-1000, -1000, -1000, 897, -1000, -1000, -1000, -1000, 4273, -1000,
	26893, 230, 1234, 9303, 1681, 9303, 1680, 238, 1678, -1000,
	-1000, -1000, -1000, -1000, 459, -1000, 1914, 1719, 2330, -1000,
	-1000, -1000, -1000, 168, 168, 168, 168, 83, 1232, -1000,
	1427, -1000, 620, -1000, 1106, -1000, 17850, 26893, -1000, 795,
	1676, 2253, -1000, 2651, 26893, 2371, 26893, 1675, 1104, 9303,
	-1000, -1000, 2344, -1000, 2340, 500, 500, -1000, -1000, -1000,
	26893, 5780, -1000, 894, -1000, -1000, 351, 234, -1000, 792,
	-1000, 781, 17348, 1229, 1920, -1000, -1000, -1000, 1269, 261,
	-1000, -1000, -1000, 1515, 26893, 780, -1000, 1549, 220, -1000,
	-1000, -1000, 778, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	351, 2076, -1000, 1228, -1000, -1000, 1296, 502, -1000, -1000,
	1296, 223, -1000, 316, 1673, -1000, -1000, 744, -1000, 1457,
	547, 7797, -1000, 223, 29351, -1000, 7797, 727, -1000, 29351,
	684, -1000, -1000,
}

var yyPgo = [...]int{
	0, 134, 2752, 224, 176, 168, 221, 2750, 2748, 2168,
	2165, 2747, 2746, 2745, 2744, 2743, 2742, 2741, 2740, 2737,
	2730, 2729, 2724, 2723, 2722, 2721, 2720, 2714, 2712, 2711,
	2710, 217, 2709, 2708, 2707, 2706, 2705, 2704, 2703, 2702,
	2700, 2699, 2698, 2697, 2696, 2694, 2691, 2690, 2689, 2687,
	2686, 2685, 2684, 2683, 2682, 2680, 2679, 156, 2677, 2140,
	2672, 2671, 2670, 2669, 2668, 191, 2665, 2664, 2663, 2662,
	2661, 2660, 2659, 2658, 2655, 2654, 2652, 2651, 2650, 2649,
	2648, 184, 2647, 2646, 161, 2645, 2644, 2642, 2641, 213,
	195, 62, 2640, 55, 123, 166, 225, 117, 226, 220,
	152, 143, 73, 2638, 2170, 2637, 155, 203, 126, 25,
	2636, 144, 2635, 139, 51, 52, 215, 115, 56, 97,
	101, 2634, 196, 63, 89, 95, 2633, 2632, 223, 153,
	2631, 107, 2630, 2626, 2625, 2624, 181, 104, 2623, 61,
	2622, 85, 36, 100, 28, 2621, 2620, 2619, 84, 2617,
	2616, 2615, 2612, 151, 2610, 125, 48, 2609, 2607, 2605,
	58, 2604, 32, 2602, 43, 2601, 2600, 2599, 2598, 64,
	2597, 2596, 12, 17, 19, 2594, 20, 1, 2593, 197,
	136, 93, 113, 2592, 397, 2591, 2590, 2589, 130, 2588,
	392, 2587, 2586, 2585, 2584, 11, 2582, 188, 44, 2581,
	82, 106, 2580, 54, 167, 171, 2579, 2578, 111, 70,
	98, 109, 2572, 2571, 71, 193, 15, 29, 0, 175,
	41, 2570, 2569, 2567, 222, 2566, 208, 170, 206, 133,
	231, 135, 2563, 2561, 49, 2558, 128, 80, 108, 9,
	2552, 178, 2551, 202, 148, 2550, 186, 2549, 129, 3,
	112, 2548, 2547, 27, 251, 2543, 2542, 2540, 165, 2539,
	2538, 68, 138, 2536, 2533, 2532, 23, 2530, 30, 21,
	2529, 86, 2528, 209, 180, 140, 116, 147, 145, 120,
	199, 205, 65, 131, 1175, 114, 88, 18, 2527, 200,
	2523, 218, 201, 2522, 164, 2518, 216, 357, 190, 2517,
	150, 7, 53, 31, 2516, 8, 2515, 83, 2514, 2513,
	22, 2512, 26, 2510, 2509, 2508, 2507, 6, 2505, 2504,
	2500, 2, 4, 2499, 5, 183, 59, 122, 2485, 121,
	198, 2484, 2482, 74, 2481, 2480, 194, 2479, 1199, 2478,
	2477, 2476, 2474, 2473, 2472, 2451, 66, 37, 2446, 2443,
	2441, 2440, 69, 119, 2436, 292, 189, 2435, 38, 146,
	2434, 35, 2433, 33, 2431, 105, 2429, 14, 154, 2428,
	2425, 16, 2424, 2422, 10, 13, 2419, 2418, 60, 2417,
	42, 34, 72, 78, 2415, 24, 67, 110, 2414, 2412,
	212, 211, 182, 2411, 141, 207, 228, 2408, 192, 2407,
	2406, 2405, 2404, 2403, 219, 2401, 1186, 2399, 2398, 214,
	57, 91, 99, 2397, 2396, 2395, 79, 132, 102, 96,
	172, 2394, 158, 2393, 2390, 94, 2389, 2383, 2382, 2381,
	2379, 2374, 2365, 210, 159, 2364,
}

//line mysql_sql.y:8377
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 431, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 87, 429, 429, 429, 430, 430,
	85, 85, 85, 74, 73, 86, 377, 377, 376, 376,
	375, 375, 374, 374, 374, 373, 373, 373, 372, 372,
	371, 371, 370, 370, 368, 368, 369, 367, 366, 366,
	366, 364, 364, 362, 362, 363, 363, 357, 357, 360,
	360, 358, 358, 358, 358, 361, 356, 356, 356, 355,
	355, 72, 72, 72, 286, 286, 71, 71, 300, 300,
	300, 300, 300, 298, 298, 298, 298, 298, 298, 297,
	297, 296, 296, 301, 301, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 66, 66, 66, 66, 69,
	69, 69, 70, 295, 295, 295, 67, 68, 68, 285,
	285, 290, 290, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 294, 294, 294, 292, 292,
	291, 291, 293, 293, 60, 60, 60, 63, 62, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 61, 61,
	61, 61, 61, 61, 58, 58, 58, 58, 58, 57,
	57, 59, 59, 283, 283, 282, 77, 77, 77, 77,
	77, 77, 77, 76, 76, 79, 79, 78, 80, 65,
	65, 65, 65, 65, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 401, 401, 401, 403, 403, 222, 223,
	432, 225, 221, 221, 221, 397, 397, 398, 399, 400,
	400, 400, 75, 7, 7, 7, 56, 54, 415, 415,
	55, 422, 422, 336, 336, 236, 236, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 339, 340, 232, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 38, 37, 37,
	37, 272, 272, 36, 433, 433, 205, 205, 45, 46,
	47, 48, 49, 50, 35, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 53, 53, 351, 351, 435, 435,
	435, 51, 52, 335, 335, 335, 43, 42, 41, 40,
	40, 34, 34, 33, 33, 39, 229, 229, 231, 231,
	227, 434, 434, 312, 312, 230, 230, 32, 32, 32,
	228, 228, 204, 226, 226, 226, 8, 8, 6, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 18, 20,
	280, 280, 277, 19, 14, 13, 16, 12, 15, 17,
	5, 5, 5, 5, 9, 9, 10, 101, 101, 143,
	143, 410, 410, 406, 406, 407, 407, 407, 408, 408,
	409, 409, 81, 345, 345, 345, 345, 345, 345, 4,
	123, 123, 124, 124, 344, 344, 344, 344, 344, 344,
	344, 428, 428, 386, 386, 386, 387, 122, 122, 117,
	117, 346, 346, 250, 388, 388, 354, 354, 353, 353,
	352, 352, 120, 120, 121, 121, 104, 104, 90, 90,
	359, 359, 359, 359, 365, 365, 333, 333, 169, 169,
	198, 198, 199, 199, 94, 94, 95, 95, 95, 95,
	95, 95, 394, 394, 396, 396, 395, 119, 119, 115,
	115, 116, 116, 116, 114, 114, 113, 112, 112, 111,
	109, 109, 109, 110, 110, 110, 97, 97, 97, 96,
	96, 96, 96, 96, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 98, 98, 402, 402,
	402, 337, 337, 337, 342, 342, 181, 181, 182, 182,
	180, 180, 99, 99, 100, 100, 100, 100, 179, 179,
	178, 102, 102, 108, 107, 107, 103, 103, 103, 103,
	189, 189, 188, 188, 188, 188, 84, 88, 88, 89,
	127, 127, 187, 186, 186, 186, 126, 126, 125, 125,
	118, 118, 106, 106, 106, 106, 185, 105, 183, 427,
	427, 426, 426, 425, 423, 423, 423, 424, 424, 424,
	424, 379, 379, 379, 379, 379, 214, 214, 214, 220,
	220, 213, 213, 213, 213, 213, 224, 219, 219, 215,
	215, 216, 216, 216, 3, 3, 3, 3, 24, 24,
	24, 24, 24, 24, 30, 135, 136, 29, 128, 128,
	129, 129, 130, 130, 131, 132, 132, 132, 134, 133,
	28, 404, 404, 21, 411, 414, 412, 412, 416, 416,
	416, 417, 417, 417, 418, 418, 22, 413, 419, 419,
	419, 281, 281, 278, 279, 279, 276, 275, 275, 275,
	421, 421, 420, 420, 420, 217, 217, 23, 271, 271,
	273, 274, 274, 265, 265, 265, 265, 27, 269, 269,
	270, 270, 270, 270, 270, 266, 266, 268, 268, 264,
	264, 264, 264, 264, 26, 263, 263, 261, 261, 259,
	259, 260, 260, 258, 258, 258, 262, 262, 25, 25,
	25, 92, 91, 91, 91, 201, 201, 200, 200, 93,
	338, 338, 302, 302, 303, 303, 303, 306, 306, 318,
	318, 319, 319, 317, 317, 324, 324, 323, 323, 322,
	322, 321, 321, 320, 320, 320, 320, 315, 315, 314,
	314, 304, 304, 304, 304, 304, 305, 305, 305, 313,
	313, 316, 316, 160, 160, 161, 161, 161, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 384, 384, 385,
	163, 163, 163, 167, 167, 167, 167, 167, 167, 162,
	162, 164, 164, 144, 144, 142, 142, 137, 137, 138,
	138, 139, 139, 140, 140, 141, 141, 141, 141, 141,
	141, 288, 288, 382, 382, 383, 383, 378, 378, 378,
	381, 381, 381, 381, 381, 380, 380, 145, 196, 196,
	196, 218, 218, 218, 195, 195, 195, 159, 159, 158,
	158, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 287, 287, 233, 233,
	234, 234, 176, 175, 175, 175, 175, 175, 173, 174,
	172, 172, 172, 172, 172, 171, 171, 170, 170, 170,
	267, 267, 168, 168, 166, 166, 166, 165, 165, 165,
	325, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 242, 242, 247, 247, 393,
	393, 392, 146, 146, 146, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 155, 155, 155, 310, 310, 310,
	310, 310, 311, 311, 311, 308, 308, 309, 309, 251,
	252, 252, 343, 343, 307, 307, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 350, 350, 350, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 405, 405,
	405, 389, 389, 389, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 193, 193, 193, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 253, 253,
	254, 254, 347, 347, 347, 347, 347, 347, 348, 348,
	349, 349, 349, 349, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 240, 190, 190, 190, 255, 248, 248,
	249, 249, 243, 243, 243, 243, 243, 243, 243, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 244,
	244, 246, 246, 257, 257, 257, 256, 256, 256, 256,
	256, 256, 256, 157, 157, 157, 157, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 148, 148,
	148, 148, 152, 152, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 153, 153,
	153, 153, 151, 151, 151, 151, 151, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 82, 83, 83, 150, 197, 197, 326,
	326, 329, 329, 327, 327, 328, 330, 330, 330, 331,
	331, 331, 332, 332, 332, 334, 334, 203, 203, 203,
	210, 210, 202, 202, 211, 211, 212, 212, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 9, 10, 2, 0, 2, 1, 3,
	3, 3, 1, 3, 5, 0, 2, 3, 1, 3,
	1, 1, 1, 3, 1, 1, 1, 1, 0, 3,
	3, 0, 3, 0, 3, 0, 3, 0, 2, 1,
	2, 3, 4, 3, 3, 1, 0, 1, 1, 0,
	1, 8, 5, 7, 0, 3, 8, 5, 1, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 4, 1, 3, 1, 2, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 2, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 4, 6, 1, 1, 1, 2, 4, 6, 1,
	4, 1, 3, 3, 4, 4, 4, 3, 3, 2,
	4, 4, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 2, 2, 0,
	1, 4, 2, 4, 1, 5, 3, 2, 1, 2,
	2, 4, 4, 5, 2, 1, 3, 4, 4, 1,
	2, 9, 7, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 2, 3, 4, 7, 2, 3,
	3, 4, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 2, 1, 1,
	1, 1, 6, 1, 1, 1, 9, 7, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 2, 5,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 3,
	2, 4, 4, 4, 4, 1, 1, 1, 3, 2,
	3, 1, 1, 1, 6, 8, 0, 1, 1, 1,
	1, 5, 5, 0, 1, 1, 3, 3, 3, 6,
	7, 4, 4, 7, 8, 3, 0, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 3, 1, 4, 6, 4, 4, 4, 3, 6,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	0, 4, 1, 3, 3, 1, 5, 6, 5, 5,
	3, 0, 5, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 4, 3, 4, 5,
	4, 5, 2, 3, 1, 3, 6, 0, 3, 0,
	1, 2, 4, 4, 0, 1, 3, 1, 3, 3,
	0, 1, 1, 0, 2, 2, 3, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 7, 1, 1, 12, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	9, 0, 1, 7, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 0, 2, 7, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 0, 1, 1, 1, 11, 0, 2,
	3, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 5, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 11, 9,
	11, 2, 2, 4, 5, 1, 3, 0, 3, 5,
	0, 1, 0, 6, 0, 3, 5, 0, 4, 0,
	3, 1, 3, 4, 5, 0, 3, 1, 3, 2,
	3, 1, 2, 0, 4, 6, 5, 0, 2, 0,
	2, 4, 5, 4, 5, 1, 5, 6, 5, 0,
	3, 0, 1, 0, 1, 1, 3, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 4, 1, 3, 3,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 2, 1, 7, 7, 7, 7, 8,
	5, 0, 1, 0, 1, 1, 1, 1, 3, 3,
	1, 1, 1, 1, 1, 0, 1, 3, 1, 3,
	5, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 2, 2,
	2, 1, 5, 6, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 4, 6,
	6, 1, 1, 1, 1, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 5, 0, 1, 3,
	0, 1, 0, 2, 0, 6, 7, 6, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 4, 6, 6, 7, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 8, 4, 2, 3, 2,
	4, 6, 2, 2, 4, 6, 4, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 0, 1,
	1, 3, 3, 3, 3, 3, 2, 1, 1, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 1,
	3, 4, 4, 5, 3, 4, 5, 6, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -431, -2, -1, -3, -85, -4, -81, -5, -6,
	-8, -64, -76, -78, -80, -79, -31, -7, -75, -57,
	-58, -60, -66, -71, -72, -73, -74, -86, -82, -83,
	-84, -94, -87, -24, -23, -22, -21, 395, 12, 440,
	-9, -10, -394, -11, 231, -221, -222, -223, -225, -432,
	-32, -33, -34, -40, -41, -42, -43, -51, -52, -53,
	-35, -36, -37, -38, -45, -46, -47, -48, -49, -50,
	-39, -55, -54, -56, 207, -59, 61, -61, -62, -63,
	-67, -68, -69, -70, 326, 332, 385, 394, 521, 522,
	46, -95, -97, 523, -25, -26, -27, -28, -29, -30,
	203, 14, 473, -12, -15, -13, -16, -14, -19, -20,
	-18, -17, 226, 225, 37, 289, 290, 291, 330, 224,
	204, 13, 135, 136, 138, 139, 30, -96, 67, 205,
	-98, 10, 525, 433, 524, -104, 38, -142, -218, 70,
	-206, -209, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 443, 307,
	308, 470, 243, 267, 356, 270, 277, 135, 154, 148,
	176, 168, 143, 247, 282, 248, 77, 138, 426, 87,
	406, 382, 141, 262, 264, 266, 269, 249, 164, 159,
	261, 245, 521, 157, 250, 39, 251, 181, 252, 253,
	475, 402, 306, 408, 274, 380, 158, 403, 265, 405,
	183, 187, 418, 332, 152, 153, 410, 420, 180, 223,
	42, 472, 235, 421, 185, 179, 175, 429, 278, 276,
	178, 151, 174, 246, 50, 189, 188, 190, 376, 377,
	378, 379, 254, 255, 320, 417, 171, 160, 311, 144,
	22, 424, 230, 407, 333, 256, 271, 279, 184, 186,
	237, 242, 474, 384, 241, 275, 422, 156, 234, 263,
	229, 425, 145, 326, 335, 257, 139, 268, 419, 428,
	49, 348, 150, 142, 220, 136, 239, 244, 11, 258,
	259, 260, 281, 280, 272, 172, 236, 177, 162, 149,
	173, 137, 238, 427, 349, 519, 309, 365, 170, 167,
	240, 213, 423, 409, 140, 369, 350, 165, 283, 516,
	517, 518, 321, 305, 284, 285, 163, 227, 401, 286,
	288, 375, 298, 351, 383, 357, 352, 196, 292, -104,
	-59, -10, -9, -96, -97, -142, 211, -226, 23, 380,
	-65, 381, 207, 67, -218, -5, -4, -81, -57, -94,
	-224, -218, 289, 289, -224, 211, -218, 241, 364, -336,
	216, -297, -271, 242, -296, -273, -299, -274, 31, 203,
	205, 204, 238, 14, 330, 212, 12, 10, 331, 224,
	24, 25, 27, 13, 332, 334, 28, 335, 338, 339,
	340, 41, 343, 344, 231, 70, 73, 249, -136, -218,
	249, -249, -243, 94, 232, -245, -238, -239, -241, -374,
	-368, -237, 67, 119, 120, 127, 95, -240, -325, 35,
	97, 480, 130, 441, -191, -192, -193, -194, -218, -369,
	-367, 73, 78, 81, 84, 85, 83, 82, 161, 80,
	74, 131, 132, -97, 70, -389, 488, -207, 509, 508,
	46, -341, -349, 210, -347, 166, 227, 162, 12, 125,
	375, 163, 485, 505, 443, 489, 512, 482, 483, 477,
	478, 479, 481, 490, 492, 504, -350, 500, 510, 511,
	498, 72, 71, 503, 502, 491, 486, 487, 493, 476,
	484, 494, 495, 501, 506, 507, 314, 87, 315, 316,
	433, 310, 317, 216, 380, 55, 318, 319, 320, 321,
	322, 440, 323, 56, 324, 313, 231, 365, 325, 165,
	182, 445, 444, 446, 437, 434, 432, 435, 436, 438,
	439, 496, 497, 499, -293, -291, -218, -88, -89, 514,
	-113, -114, -184, 19, 6, 7, 8, 9, -429, 382,
	474, 292, 327, -338, 307, 365, 241, -265, -263, 286,
	282, 341, 221, 220, 88, 433, 210, -406, -407, 200,
	201, 202, -396, 466, -395, -218, 316, 26, 211, 327,
	412, 413, 414, 415, 416, -44, -351, -335, 409, 408,
	-230, 407, 400, 411, 402, 308, 203, 467, -203, 351,
	383, 237, 430, 431, 328, 384, 418, 419, 403, 87,
	169, 166, -338, 307, 365, -406, 140, 137, -284, 140,
	93, 145, 144, -284, 241, 364, 40, -290, 375, -289,
	-291, 418, 419, 429, 71, 72, 417, -203, 87, -114,
	-184, -113, -95, -97, -84, -394, 307, 365, 241, 212,
	211, 213, 433, 289, 327, -337, -402, 31, -342, 197,
	198, 199, 32, 33, -1, -219, -216, -209, 70, 71,
	72, 73, -120, 233, -142, 133, -120, -114, -113, -114,
	-142, -195, -218, 382, 103, -65, -65, 381, -397, -398,
	-399, -401, 207, 381, 380, 133, 15, -224, -224, 65,
	-142, -273, 241, -297, -271, 35, 64, 134, 214, 134,
	64, 67, 328, 307, 365, 329, 433, 211, 341, 213,
	241, 342, 307, 365, 211, 213, 433, 241, 307, 211,
	213, 365, 241, 342, 400, 401, 213, 26, 333, 336,
	337, 401, -355, 429, -355, 134, 93, 90, 91, 92,
	-243, 110, -256, 103, 104, 105, 106, 107, 108, 109,
	116, 115, 126, 119, 120, 121, 122, 123, 124, 125,
	117, 118, 113, 94, 111, 112, 96, -97, -243, -249,
	46, -241, -241, -241, -241, -325, -247, -243, 67, 67,
	67, 133, 73, -243, 67, 67, 67, 67, 67, 67,
	67, 67, -348, 67, 67, -253, -254, 67, 67, 73,
	73, 67, 67, 67, 73, -254, -254, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 134, -148, -152, -149, -151, -150,
	-154, -153, 166, 167, 130, 170, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 30, 182, 227, 162,
	163, 164, 165, 183, 148, 168, 471, 191, 149, 192,
	150, 193, 151, 194, 152, 153, 195, 154, 157, 158,
	159, 156, 133, -114, 134, 67, -90, 38, -116, 21,
	-98, -97, 20, 31, 32, 31, 32, 31, 32, 31,
	32, 78, -135, -218, -128, -218, -404, 211, 466, -261,
	216, -261, -261, 212, -261, 211, 211, -408, 147, 134,
	-396, -119, 67, -229, 111, 23, 239, 239, 276, -433,
	-434, 15, 113, -227, -434, -227, -229, -435, 212, 410,
	42, 240, 239, -115, -116, -115, 404, 401, -312, 405,
	406, -230, -229, -229, -230, -229, 211, 213, 433, -433,
	239, -433, 30, 30, -404, -336, -336, -409, 215, 422,
	473, 143, 144, 145, -273, 241, 241, 134, 103, 23,
	-292, 103, 114, -291, -291, -291, -292, -292, -162, 40,
	-217, 130, -218, 73, -162, 40, -115, -98, -97, 68,
	68, 68, -336, -336, -336, -336, -336, -336, -336, -224,
	-128, -99, -100, 121, -243, -218, -99, 38, 401, 38,
	-344, -123, -94, 308, 67, 67, -218, -345, 46, -94,
	67, 30, -115, -90, -116, 133, 78, 73, -65, 68,
	134, -400, 84, 85, -403, 180, 172, -218, -77, 73,
	-3, -4, -5, -6, -31, -57, -94, -370, -368, 67,
	31, 374, 64, 15, -298, 211, 433, 327, 237, 213,
	307, -296, -280, -277, -275, -217, -273, -276, -275, -301,
	-195, 401, -91, 386, 288, -91, -243, -243, -243, -243,
	-243, 83, 94, 305, 84, 85, -238, -257, 31, 284,
	285, -239, -239, -239, -239, -239, -239, -239, -239, -239,
	-239, -239, -239, -246, -255, -325, 67, 113, 111, 112,
	96, -241, -239, -239, 68, 134, -393, -392, 98, -243,
	-243, -243, -218, -390, -391, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 318, 313, 319, 317,
	310, 325, 320, 321, 165, 464, 465, 458, 459, 460,
	461, 462, 463, -248, -249, -248, -243, -390, -248, -190,
	32, 31, -243, -405, 303, 302, 304, -117, -218, -248,
	68, 68, 68, 78, -249, -248, -239, -248, -391, -190,
	-190, -249, -249, -190, -190, -190, -190, 121, -190, -190,
	-190, -190, -190, -190, -190, -190, -291, 40, -332, 349,
	348, -326, -328, 67, -327, 67, -327, -326, -326, 67,
	67, -329, 67, -329, -329, -326, -330, 67, -330, -331,
	67, -330, -218, -115, -89, -353, -352, -243, 40, 515,
	-90, -243, -112, -111, -243, -430, 73, 34, 67, 133,
	213, -261, -411, -218, 94, -281, -278, -275, -271, -216,
	-218, -261, -261, -409, -395, 34, -118, -218, -180, 16,
	-241, -275, 241, -433, -229, -205, -204, -218, -231, -434,
	-226, -231, -180, -434, -229, -229, -231, -227, 401, -180,
	-180, -312, -228, -218, -228, -261, -205, -205, 213, -411,
	-281, -107, -102, -106, -103, -108, -183, -185, -105, 67,
	-142, -97, -218, 423, 424, 141, 144, 143, 31, 374,
	-295, 374, 31, -271, -289, -285, 73, 375, -276, -294,
	64, 130, -352, -292, -292, -292, -294, -294, 129, -90,
	-411, -280, -271, -218, -144, -142, -144, -219, 67, -179,
	134, -178, 15, -213, -218, 34, 73, 133, -179, 73,
	-144, 73, -428, 64, 46, 30, 67, -122, 68, -117,
	-121, -218, -346, -250, -388, 514, -122, 68, -386, -387,
	-117, -90, -90, -211, -212, -202, -208, -215, -216, -209,
	208, 31, 93, 34, 36, 314, 346, 96, 130, 20,
	97, 166, 129, 316, 441, 315, 203, 59, 444, 446,
	445, 434, 432, 367, 371, 373, 370, 433, 400, 40,
	14, 37, 225, 32, 33, 123, 205, 100, 101, 228,
	35, 226, 85, 44, 23, 62, 15, 17, 18, 317,
	366, 216, 215, 113, 386, 212, 57, 12, 132, 38,
	110, 368, 53, 89, 45, 55, 111, 21, 435, 436,
	41, 385, 394, 469, 232, 125, 318, 319, 60, 94,
	374, 83, 43, 64, 90, 19, 58, 112, 206, 440,
	56, 372, 322, 324, 334, 466, 323, 210, 411, 10,
	313, 442, 30, 224, 54, 211, 99, 214, 84, 231,
	6, 88, 13, 61, 65, 437, 438, 439, 46, 98,
	16, 325, 473, 387, 388, 389, 390, 391, 392, 393,
	191, 192, 193, 194, 195, 273, 219, 217, 221, 222,
	514, 515, 197, 198, 302, 304, 169, 200, 201, 202,
	233, 147, 7, 353, 354, 355, 358, 359, 360, 361,
	362, 363, 364, 522, 395, 396, 397, 398, 399, 412,
	413, 414, 415, 416, 209, 23, -65, -398, 133, 134,
	-118, -298, -279, -276, -300, 121, 70, -286, 134, 473,
	526, 71, 214, -421, -420, 366, 68, 134, -356, 215,
	440, 73, 527, 196, -356, 83, 305, 84, 85, -325,
	-249, -246, -241, -239, -239, -244, 228, 93, -243, -242,
	-392, 100, -243, 34, 68, 134, 65, 133, 68, 68,
	15, 15, 68, -243, 68, 15, 15, -243, 68, 133,
	68, 68, 68, 65, 68, 134, 68, 134, -249, -243,
	68, 68, -243, -243, -243, -249, 68, -243, -243, -243,
	-243, -243, -243, -243, -243, -243, -334, 350, 78, 78,
	-197, 73, -197, 78, 78, 78, 134, 68, 73, 134,
	22, 134, -109, 36, 37, -136, -129, -130, -131, -132,
	-148, -195, 167, 170, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 227, 162, 163, 164, 165, 183,
	148, 168, 149, 150, 151, 152, 153, 154, 157, 158,
	159, 156, -218, -261, -142, -414, 353, 35, -422, 134,
	40, -420, -264, 65, -259, -260, -258, -262, 40, -142,
	-142, 15, -101, -143, -218, 67, 68, 134, -243, -272,
	65, -274, -205, -180, -219, -142, -218, -180, -180, -229,
	-231, -231, -227, 133, -204, -336, -415, 353, -422, 30,
	-186, -187, -188, -189, 53, 57, 59, 54, 55, 56,
	60, 30, 134, -214, -220, 34, -215, 73, -216, -209,
	-214, -97, -102, -107, -214, 67, 142, 145, 145, 144,
	214, 67, 103, -294, -294, -294, 40, -217, 64, 134,
	-129, -180, -100, -102, -218, 73, -218, 121, -180, -169,
	517, 38, -359, 405, 39, -346, -386, -124, -411, 68,
	134, -123, 308, 68, 134, 134, 67, 68, 46, 134,
	103, 133, 382, -218, -368, 68, -300, 134, 214, 133,
	133, -277, 332, -217, -279, 20, 473, -195, 38, -201,
	-200, 73, 527, 38, 68, -244, 93, -241, -238, 68,
	101, -243, 99, -146, -148, 348, 349, -147, -153, 130,
	166, 227, 165, 164, 162, 348, 349, -162, -218, -243,
	-243, 68, -243, -243, 15, -218, -162, -239, -243, -343,
	442, 68, -307, 396, -307, 68, 68, 68, 68, -307,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 134, 68, 68, 68, 134, 68, 134, -352, -359,
	-243, -243, -111, -110, 43, 340, 68, 134, -148, -142,
	67, -417, 407, 355, -210, 103, -236, -235, 309, 41,
	-339, 375, 361, 362, -278, 241, 64, 297, 298, 299,
	300, -258, -203, 129, 252, 67, 67, -142, -101, -218,
	15, 134, -410, 133, -1, -218, -271, -229, -180, -434,
	-180, -229, -229, -231, -218, -142, -417, -210, -236, -283,
	-282, -195, -106, -106, -106, -106, 53, 53, 53, 58,
	53, 58, 53, -188, -283, -108, -119, -220, 68, -427,
	-426, -425, -423, 61, 215, 62, -248, 145, -279, -232,
	73, -285, -142, -142, 68, -182, 17, 133, -182, 78,
	73, -365, 392, 387, 389, 89, 68, 134, -123, -117,
	46, 67, -218, -250, -354, -353, 46, -94, -346, -387,
	-352, -211, -208, -216, -209, 78, 15, -276, -271, 121,
	121, 70, 333, -286, 73, 354, 73, 211, 528, 134,
	103, -201, 211, -238, -243, 68, -155, 153, 152, -155,
	68, -326, -327, -326, -329, -326, -155, -155, 68, 68,
	23, 68, 68, 68, -243, 68, 68, 134, 68, 73,
	-307, 67, -307, -307, -307, -307, -307, -307, -307, -307,
	-307, -307, -307, -307, 73, 78, 78, -365, 44, 45,
	73, 209, -131, 40, -119, -137, -138, -139, -145, -140,
	-195, -234, -141, 219, 217, 221, -383, 88, 222, 273,
	89, 212, -418, 77, -412, 73, -218, -419, 77, 356,
	132, 311, 40, 357, 358, 372, 306, 78, 78, 363,
	-413, 70, -142, -210, -210, -210, -137, -137, -120, 65,
	133, -102, -143, -218, 121, 68, -180, -218, -180, -180,
	-229, -119, -418, -412, -419, -180, 134, 103, -126, -125,
	64, 65, -127, 64, -125, 53, 53, -180, -425, -424,
	23, -383, -383, -383, 68, 68, -181, 18, 20, 121,
	-181, -169, -333, 516, -363, 387, 20, 20, 13, -94,
	-411, 46, -94, -346, -124, 68, -346, -271, -286, 375,
	-142, -200, 73, 528, -142, -243, 68, -243, -307, -252,
	-251, 233, 68, 68, -333, -133, -148, -237, 34, 68,
	134, -148, -141, -218, 89, -382, -383, -261, -382, 89,
	67, 73, -416, 366, 73, 73, 78, 40, 78, 132,
	359, -340, 67, -162, -164, -217, 130, 73, 68, 68,
	-214, -102, -218, -180, -410, 133, -180, -180, 34, -416,
	-114, -282, -352, -243, 67, -243, 67, 53, 19, 17,
	-243, -249, -169, 73, 20, 73, -361, 73, -386, -346,
	68, -123, -93, -357, -312, 68, 68, -114, 20, -169,
	472, -94, -160, -161, -177, 346, 243, -262, 247, 77,
	248, 382, 249, 212, 251, 252, 253, 223, 254, 255,
	256, 375, 257, 258, 259, 260, 329, 6, 293, -139,
	-159, -158, -156, 83, 94, 40, 346, -157, 77, 129,
	266, 244, 267, -176, -233, 64, 352, 217, 88, 89,
	334, -234, -378, -380, -218, -380, -218, -378, -378, -261,
	-243, 20, 473, 310, 40, 78, 40, 360, -266, -268,
	-195, 67, -92, -91, -160, -180, -180, -94, -115, -118,
	-379, -218, 217, 20, 20, -198, 518, 73, 389, -93,
	-364, 392, -360, -358, 387, 388, 389, 390, -309, -308,
	-311, 393, 275, 399, -249, -198, -134, -218, -302, 233,
	134, -177, -210, -210, -203, 129, -210, -210, -210, -210,
	250, 250, -210, -210, -210, -210, -210, -210, -210, -210,
	-210, -210, -210, -210, -210, -210, 67, -156, 83, -239,
	73, -164, -165, 40, 265, 261, -166, 40, 245, 246,
	-168, 67, 273, 13, 89, 89, -142, 67, 65, 283,
	67, 67, 67, -380, 68, 73, 354, 73, 310, 68,
	134, -326, -243, -93, -302, -114, 68, 68, 134, 67,
	20, -366, 215, -362, 391, -358, 20, 389, 20, 20,
	68, -310, 96, 359, 363, -243, 34, -303, 282, 20,
	-177, 78, 78, -210, -210, 78, 73, 73, 73, -210,
	-210, 78, 73, -220, 78, 78, 78, 78, 40, 73,
	-167, 40, 261, 265, 262, 263, 264, 78, 40, 78,
	40, 78, 40, -218, 67, -384, -385, 73, 78, 67,
	-347, -267, 67, -266, -381, 297, 298, 299, 301, 300,
	-381, -266, -266, -266, 67, -288, -287, 274, 94, 375,
	-269, -268, -109, 68, -303, -115, -218, 217, -199, -218,
	-361, -373, 67, 78, -363, 20, -361, 20, -361, -361,
	-310, 514, 397, 398, 397, 398, 73, 20, -304, 275,
	276, -305, -316, 278, -162, -162, 73, 73, -163, 244,
	-144, 68, 134, 103, 68, -243, -253, -171, -170, 469,
	-266, 68, 68, 68, 68, -266, 274, -270, 223, 77,
	473, 295, 296, -109, 68, 134, -377, 30, 68, -372,
	-371, -196, -367, -218, 392, 393, 73, -361, 93, -195,
	67, -314, 279, 67, -312, 67, -312, 89, 298, 245,
	246, 68, -385, 73, 68, -175, -173, -174, 64, 403,
	271, 272, 68, -269, -269, -269, -269, 68, -210, 73,
	294, -218, -376, -375, -374, 68, 134, 133, -310, -301,
	-306, 280, 78, -239, 67, -239, 67, -313, 277, 67,
	-287, -174, 64, -173, 64, 14, 13, -176, 78, -216,
	134, 103, -371, -218, 68, -318, 67, 20, 68, -301,
	68, -301, 67, 103, -239, -172, 268, 269, 30, 144,
	-172, -375, 40, -243, 133, -319, -317, 233, -305, 68,
	68, 68, -301, 78, 68, 83, 40, 270, -218, 68,
	134, 70, -315, 281, 68, -317, -320, 46, 78, -324,
	-321, 67, -177, 235, 113, -324, -177, -323, -322, 280,
	236, 67, 68, 134, 70, 232, 67, -249, -322, -321,
	-249, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 664, 665, 666, 667, 0, 0, 0,
	430, 431, 0, 408, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 320, 321, 322, 323, 324, 325,
	326, 327, 328, 329, 330, 331, 332, 333, 334, 335,
	336, 283, 284, 285, 0, 229, 225, 204, 205, 206,
	165, 166, 167, 168, 293, 0, 0, 0, 0, 0,
	0, 514, -2, 35, 668, 669, 670, 671, 672, 673,
	-2, 443, 0, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 272, 273, 274, 268, 269, 271, 270, -2,
	780, 443, 218, 0, 209, 209, 0, 534, 0, 0,
	549, 571, 33, 0, 0, 492, 0, 497, 875, 911,
	912, 913, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 492,
	230, 432, 433, 534, 534, 406, 0, 254, 0, 1539,
	258, 0, 0, 0, 403, 249, 250, 251, 252, 253,
	0, 656, 0, 0, 245, 0, 224, 1598, 0, 0,
	0, 0, 0, 0, 109, 728, 111, 730, 115, 122,
	0, 0, 127, 128, 131, 132, 133, 134, 135, 0,
	139, 0, 141, 144, 0, 146, 147, 0, 150, 151,
	152, 0, 162, 163, 164, 731, 732, -2, 45, 676,
	89, 1283, 1180, 0, 1187, 1188, 1199, 1208, 983, 984,
	985, 986, 0, 0, 0, 0, 0, 993, 994, 0,
	1007, 1687, 0, 0, 1001, 1002, 1003, 1004, 52, 64,
	65, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 0, 1153, 970, 911, 0, 1695, 0, 1715, 1714,
	0, 0, 1138, 0, 1128, 0, -2, -2, 0, 0,
	1665, -2, 1692, 1711, 1719, 1696, 1718, 1689, 1690, 1684,
	1685, 1686, 1688, 1697, 1699, 1710, 0, 1706, 1716, 1717,
	0, 66, 67, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1144, -2, 1146, 1147,
	1149, 1150, 1151, 1152, -2, 1155, 1156, 1157, -2, -2,
	1160, 1161, 1162, 1163, 1164, 1165, 1168, -2, 1170, -2,
	1172, 1140, 1141, 1142, 1143, 1132, 1133, 1134, 1135, 1136,
	1137, -2, -2, -2, 0, 202, 200, 534, 607, 0,
	-2, 0, 0, 0, 554, 557, 560, 563, 0, 36,
	37, 0, 0, 691, 757, 757, 757, 0, 757, 0,
	0, 781, 734, 735, 736, 755, 756, 448, 444, 445,
	446, 447, 522, 0, 524, 527, 386, 338, 0, 0,
	0, 350, 344, 0, 0, 386, 0, 0, 529, 529,
	0, 395, 386, 386, -2, 386, 0, 355, 356, 357,
	344, 0, 344, 361, 362, 363, 374, 375, 396, 1307,
	0, 0, 691, 293, 293, 450, 219, 220, 208, 210,
	0, 214, 0, 207, 1598, 0, 0, 176, 1665, 181,
	0, 1546, 1612, 1561, 0, 0, 1579, 0, -2, 529,
	0, 535, 0, 534, 0, 0, 293, 293, 293, 293,
	293, 293, 293, 0, 0, 0, 0, 572, 573, 568,
	569, 570, 574, 575, 3, 0, 657, 658, 661, 662,
	663, 0, 460, 0, 496, 0, 0, 529, -2, 0,
	407, 255, 914, 0, 0, 259, 260, 0, 0, 275,
	0, 278, 263, 264, 265, 0, 0, 247, 248, 0,
	0, 226, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 119, 116, 123, 126, 136, 143, 0, 155,
	157, 160, 117, 124, 129, 130, 137, 158, 118, 120,
	121, 125, 159, 161, 138, 142, 156, 140, 145, 148,
	149, 154, 0, 90, 0, 0, 0, 0, 0, 0,
	1186, 0, 0, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1180, 0,
	0, 989, 990, 991, 992, 995, 0, 1008, 0, 0,
	0, 0, 1237, 0, 1178, 1178, 0, 1178, 1174, 0,
	0, 1178, 1117, 0, 0, 1119, 1129, 0, 0, 1122,
	1123, 1178, 0, 1178, 1127, 1113, 1114, 0, 1174, 1174,
	0, 0, 1174, 1174, 1174, 1174, 1174, 1174, 1174, 1174,
	1174, 1174, 1174, 1174, 0, 1284, 1302, 1239, 1240, 1241,
	1289, 1243, 1293, 1293, 1289, 1289, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 0, 0, 1282, 1262, 1291,
	1291, 1291, 1289, 1286, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1296, 1296,
	1299, 1296, 0, 529, 0, 0, 517, 0, 498, 0,
	551, 553, 0, 555, 556, 558, 559, 561, 562, 564,
	565, 38, 0, 675, 0, 678, 0, 757, 692, 0,
	0, 0, 0, 0, 0, 757, 757, 450, 449, 0,
	523, 0, 0, 580, 0, 0, 344, 386, 349, 346,
	345, 391, 392, 388, 0, 388, 580, 0, 368, 369,
	370, 386, 386, 376, 530, 377, 378, 388, 0, 393,
	394, 0, 580, 580, 0, 385, 0, 0, 757, 346,
	359, 346, 1308, 1309, 0, 0, 0, 0, 451, 0,
	0, 212, 0, 217, 169, 0, 0, 0, 0, 0,
	0, 198, 199, 0, 0, 0, 0, 0, 189, 192,
	869, 870, 725, 726, 193, 194, 498, 550, 552, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 428,
	0, 588, 582, 584, 651, 52, 588, 0, 0, 0,
	471, 0, 465, 0, 0, 0, 876, 452, 484, 454,
	0, 473, 498, 520, 498, 0, 256, 0, 261, 0,
	0, 277, 279, 280, 281, 266, 267, 404, 243, 244,
	236, 237, 238, 239, 240, 241, 242, 246, 62, 0,
	227, 228, 0, 0, 0, 103, 104, 105, 106, 107,
	108, 110, 94, 420, 422, 717, 729, 0, 720, 0,
	113, 153, 86, 0, 0, 86, 1181, 1182, 1183, 1184,
	1185, 1189, 0, 1191, 1193, 1195, 1197, 0, 1213, -2,
	-2, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 1200, 1211, 1212, 0, 0, 0, 0,
	0, 1209, 1204, 0, 987, 0, 1005, 1009, 0, 0,
	0, 0, 53, 1173, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 0, 1179, 0, 1180, 0, 0, 0,
	1175, 1176, 0, 0, 1078, 1079, 1080, 0, 479, 0,
	1139, 1118, 1130, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 1305, 1303,
	1304, 1242, 1290, 0, 1267, 0, 1268, 1269, 1270, 0,
	0, 1263, 0, 1264, 1265, 1266, 1258, 0, 1259, 1260,
	0, 1261, 201, 606, 608, 0, 488, 490, 491, 0,
	518, 531, 536, 537, 540, 34, 39, 0, 680, 0,
	757, 0, 0, 694, 0, 291, 711, 0, 727, 749,
	-2, 0, 0, 0, 525, 0, 0, 620, 337, 0,
	387, 341, 1598, 346, 580, 351, 347, 402, 352, 0,
	390, 353, 354, 0, 580, 580, 386, 388, 388, 381,
	382, 0, 397, 400, 398, 0, 358, 360, 293, 288,
	291, 593, 0, 594, 595, 591, 622, 646, 646, 0,
	646, 626, 875, 221, 222, 0, 0, 216, 170, 171,
	0, 173, 174, 175, 182, 177, 179, 0, 0, 183,
	195, 196, 197, 0, 0, 0, 187, 188, 0, 516,
	418, 419, 423, 0, 425, 873, 426, 427, 680, 580,
	0, 589, 0, 585, 652, 0, 654, 0, 580, 508,
	0, 500, 459, 0, 484, 473, 0, 0, 460, 477,
	0, 494, 453, 481, 0, 485, 0, 0, 458, 474,
	0, 519, 521, 915, 0, 1314, -2, 1316, -2, -2,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 0, 262, 276, 0, 0,
	0, 0, 97, 714, 0, 98, 102, 92, 0, 0,
	0, 719, 0, 716, 721, 0, 112, 0, 0, 87,
	88, 772, 777, 0, 0, 1190, 1192, 1194, 1196, 1198,
	0, 1201, 1209, 1205, 0, 1202, 0, 0, 1181, 0,
	1010, 0, 0, 0, 998, 0, 0, 0, 1066, 1067,
	0, 0, 1071, 0, 1073, 0, 0, 0, 1077, 0,
	1116, 1131, 1120, 0, 1124, 0, 1126, 0, 1042, 0,
	1044, 1044, 0, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 1238, 1306, 0, 0,
	0, 1287, 0, 0, 0, 0, 0, 609, 500, 0,
	0, 0, 543, 541, 542, 0, 0, 681, 682, 684,
	685, 0, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1531, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 679, 0, 0, 701, 1310, 758, 295, 0,
	0, 713, 0, 0, 754, -2, 761, 0, 767, 0,
	0, 0, 0, 437, 441, 33, 528, 0, 581, 339,
	0, 340, 386, 348, 389, 580, 875, 371, 372, 580,
	386, 386, 388, 0, 399, 0, 701, 1310, 295, 0,
	0, 0, 0, 0, 613, 0, 0, 612, 0, 0,
	0, 0, 0, 527, 647, 0, 649, 650, 659, 660,
	624, -2, 0, 593, 629, 1178, 223, 211, 213, 0,
	0, 0, 0, 184, 185, 186, 190, 191, 0, 0,
	0, 578, 583, 590, 653, 655, 53, 586, 578, 40,
	0, 0, 504, 0, 0, 464, 470, 0, 462, 460,
	0, 0, 0, 493, 0, 484, 486, 0, 484, 0,
	0, 0, 0, 405, 63, 282, 0, 0, 0, 0,
	0, 421, 0, 718, 94, 0, 0, 114, 0, 0,
	775, 0, 777, 0, 1177, 1203, 0, 1210, 1206, 988,
	996, 1006, 0, 0, 1012, 1024, 1024, 0, 1015, 1289,
	1293, 1018, 1289, 1291, 1289, 1024, 1024, 0, 54, 0,
	0, 1072, 0, 0, 0, 480, 0, 0, 0, 0,
	0, 1044, 1048, 0, 1049, 1044, 1044, 1044, 1044, 1054,
	1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1295, 1294,
	1280, 0, 1281, 1292, 1297, 0, 1300, 0, 489, 504,
	532, 533, 538, 539, 0, 0, 0, 0, 686, 527,
	877, 704, 702, 703, 0, 1311, 708, 296, 297, 298,
	299, 0, 0, 0, 712, 0, 0, 750, 751, 752,
	753, 762, 1310, 1310, 1310, 877, 877, 492, 0, -2,
	0, 0, 439, 0, 0, 621, 342, 580, 364, 0,
	379, 580, 580, 386, 401, 527, 704, 0, 708, 580,
	233, 0, 616, 610, 0, 599, 614, 615, 602, 0,
	604, 0, 600, 601, 580, 592, 623, 648, 625, 628,
	630, 631, 637, 0, 0, 0, 0, 215, 172, 0,
	315, 178, 424, 874, 429, 576, 0, 0, 576, 509,
	508, 506, 75, 0, 0, 0, 461, 0, 0, 478,
	484, 0, 495, 482, 0, 487, 484, 457, 456, 475,
	476, 916, 1315, 1312, 1313, 257, 0, 715, 94, 99,
	100, 101, 95, 93, 722, 0, 724, 0, 773, 777,
	0, 0, 0, 1207, 1011, 997, 1013, 1025, 1026, 1014,
	999, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1000, 1068,
	0, 1070, 1074, 1075, 0, 1121, 1125, 0, 1044, 1043,
	1047, 1040, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1288, 0, 0, 506, 544, 545,
	674, 0, 683, 0, 0, 0, 878, 879, 881, 882,
	0, 0, 884, 940, 0, 893, 757, 893, 0, 0,
	895, 896, 693, 0, 0, 696, 697, 706, 0, 0,
	0, 301, 302, 0, 0, 0, 314, 310, 311, 312,
	292, 707, 0, 0, 0, 0, 0, 0, 646, 0,
	0, 580, 438, 441, 442, 526, 343, 580, 383, 380,
	580, 0, 287, 0, 290, 534, 0, 0, 596, 617,
	0, 0, 597, 0, 598, 603, 605, 232, 632, 0,
	0, 634, 635, 636, 627, 180, 566, 0, 0, 587,
	567, 41, 508, 0, 505, 0, 0, 0, 473, 466,
	463, 484, 469, 468, 0, 483, 455, 96, 91, 723,
	460, 776, 778, 774, 77, 0, 1076, 0, 1046, 534,
	1041, 0, 1298, 1301, 508, 0, 689, 687, 0, -2,
	0, -2, 883, 941, 905, 905, 894, 905, 905, 757,
	0, 705, 695, 0, 709, 710, 0, 303, 304, 0,
	307, 313, 0, 763, 764, 871, 872, 765, 0, -2,
	580, 580, -2, 435, 440, 0, 365, 384, 0, 289,
	529, 234, 235, 618, 0, 611, 641, 638, 0, 0,
	577, 579, 510, 507, 0, 501, 503, 85, 472, 467,
	461, 77, 43, 71, 0, 1069, 1115, 1037, 0, 510,
	0, 690, 782, -2, 825, 1310, 1310, 0, 1310, 1310,
	1310, 1310, 0, 0, 1310, 1310, 1310, 1310, 1310, 1310,
	1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310, 0, 880,
	907, -2, 919, 921, 0, 0, 924, 925, 0, 0,
	0, 0, 962, 931, 0, 0, 935, 0, 1225, 1226,
	0, 939, 0, 897, 906, 0, 906, 0, 0, 905,
	0, 0, 0, 300, 305, 0, 308, 309, 0, 745,
	1289, 0, 769, 77, 782, 534, 436, 286, 231, 0,
	0, 642, 644, 639, 640, 42, 0, 76, 0, 44,
	68, 73, 78, 79, 0, 0, 0, 0, 0, 1038,
	0, 1032, 1033, 1034, 1039, 499, 0, 688, 784, 0,
	766, 827, 0, 0, 1310, 1310, 0, 0, 0, 0,
	1310, 1310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 920, 922, 923,
	926, 927, 928, 967, 968, 969, 929, 964, 965, 966,
	930, 0, 0, 0, 1223, 1224, 960, 0, 0, 0,
	0, 0, 0, 0, 891, 698, 0, 700, 306, 738,
	0, 540, 0, 771, 784, 529, 619, 633, 0, 0,
	0, 55, 0, 75, 0, 80, 0, 0, 0, 0,
	1045, 1035, 0, 0, 0, 0, 0, 768, 0, 821,
	826, 828, 829, 0, 0, 832, 833, 834, 835, 0,
	0, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 863, 864, 865, 866, 867, 868, 848, 849, 850,
	851, 852, 853, 860, 0, 0, 857, 0, 0, 0,
	1128, 955, 0, 0, 898, 900, 901, 902, 903, 904,
	899, 0, 0, 0, 0, 890, 892, 936, 0, 699,
	737, 746, 747, 540, 770, 434, 643, 645, 0, 512,
	502, 46, 0, 0, 72, 0, 81, 0, 83, 84,
	0, 1027, 1028, 1030, 1029, 1031, 677, 0, 809, 0,
	0, 815, 0, 822, 830, 831, 836, 837, 854, 0,
	0, 856, 0, 0, 963, 0, 934, 943, 956, 0,
	0, 738, 738, 738, 738, 0, 937, 739, 1310, 0,
	0, 743, 744, 748, 511, 0, 779, 0, 56, 0,
	58, 60, 61, 908, 69, 70, 74, 82, 0, 785,
	0, 787, 0, 0, 0, 0, 0, 819, 0, 861,
	862, 855, 858, 859, 932, 942, 944, 945, 0, 957,
	958, 959, 961, 885, 886, 887, 888, 0, 0, 741,
	0, 513, 47, 48, 0, 57, 0, 0, 1036, 0,
	789, 0, 810, 0, 0, 0, 0, 0, 0, 0,
	933, 946, 0, 947, 0, 0, 0, 889, 740, 742,
	0, 0, 59, 909, 786, 783, 0, 821, 811, 0,
	813, 0, 0, 0, 0, 948, 950, 951, 0, 0,
	949, 49, 50, 51, 0, 0, 791, 0, 807, 812,
	814, 816, 0, 820, 818, 952, 954, 953, 910, 790,
	0, 803, 788, 0, 817, 792, -2, 0, 808, 793,
	-2, 0, 801, 0, 0, 794, 802, 0, 797, 0,
	0, 0, 796, 0, -2, 804, 0, 0, 798, -2,
	0, 806, 805,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 525,
	104, 103, 105, 3, 526, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 527, 115, 528, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:621
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:627
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:662
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:667
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:673
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:693
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:699
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:706
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:714
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:720
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:729
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:738
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:748
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:769
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:794
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:805
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:811
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:815
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:821
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:828
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:837
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:841
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:845
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:854
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:858
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:864
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:873
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:884
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:888
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:894
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:898
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:904
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:908
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:914
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:938
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:957
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:961
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:965
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:970
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:982
		{
			yyVAL.str = ""
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:986
		{
			yyVAL.str = yyDollar[3].str
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:991
		{
			yyVAL.str = "\n"
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:995
		{
			yyVAL.str = yyDollar[3].str
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1004
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1028
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1032
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1038
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1044
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1062
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1079
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1102
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1106
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1110
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1115
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1119
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1125
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1138
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1149
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1166
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1176
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1189
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1202
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1208
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1214
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1221
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1229
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1238
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1242
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1246
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1250
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1254
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1258
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1265
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1269
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1275
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1282
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1291
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1295
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1389
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1393
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1397
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1401
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1405
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1409
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1417
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1421
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1425
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1429
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1453
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1457
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1461
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1465
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1469
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1473
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1477
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1481
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1485
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1489
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1493
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1497
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1509
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1523
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1532
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1562
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1570
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1582
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1586
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1593
		{
			yyVAL.str = yyDollar[3].str
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1599
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1603
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1609
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1626
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1634
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1642
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1665
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1688
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1695
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1702
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1710
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1717
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1724
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1741
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1747
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1751
		{
			yyVAL.str = yyDollar[1].str
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1758
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1764
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1768
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1779
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1785
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1794
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1798
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1806
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1810
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1814
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1818
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1822
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1832
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1836
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1840
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1850
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1856
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1869
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1876
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1893
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1900
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1926
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1944
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1960
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1964
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1970
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1976
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1986
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1992
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1996
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2000
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2004
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2008
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2012
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2020
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2028
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2038
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2079
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2083
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2089
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2095
		{
			yyVAL.str = yyDollar[1].str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2100
		{
			yyVAL.str = "true"
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2101
		{
			yyVAL.str = "false"
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2102
		{
			yyVAL.str = yyDollar[1].str
		}
	case 282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2107
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2119
		{
			yyLOCAL = &tree.AlterView{
				Name:      yyDollar[6].tableNameUnion(),
				ColNames:  yyDollar[7].identifierListUnion(),
				AsSource:  yyDollar[9].selectUnion(),
				Temporary: yyDollar[2].boolValUnion(),
				IfExists:  yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2142
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2148
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2159
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2179
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2183
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2192
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2208
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2212
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2216
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2244
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2248
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2264
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2274
		{
			yyVAL.item = nil
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2279
		{
			yyVAL.item = nil
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2320
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].str)}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2337
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2348
		{
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2352
		{
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2357
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2372
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2378
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2384
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2390
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2396
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2405
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2409
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2413
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2417
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2421
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2425
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2429
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2433
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2437
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2450
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2460
		{
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2462
		{
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2481
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2490
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2494
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2498
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2510
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2522
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2544
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2548
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2554
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2566
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2580
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2589
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2594
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2598
		{
			yyVAL.str = yyDollar[2].str
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2604
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2617
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2621
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2627
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2632
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2636
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2642
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2646
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2655
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2659
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2663
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2669
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2673
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2693
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2702
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2711
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2715
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2721
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2730
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2739
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2749
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2755
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2761
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2767
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2773
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2784
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2789
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2796
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2812
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2825
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2836
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2840
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2846
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2851
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2858
		{
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2860
		{
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2863
		{
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2872
		{
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2876
		{
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2881
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2890
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2897
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2903
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2911
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2918
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2925
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2945
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2958
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2964
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2968
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2974
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2982
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2988
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2995
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3004
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3012
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3020
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3044
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3063
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3067
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3071
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3077
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3086
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3090
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3096
		{
			yyVAL.str = yyDollar[1].str
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3100
		{
			yyVAL.str = yyDollar[3].str
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3106
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3110
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3116
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3121
		{
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3125
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3132
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3136
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3143
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3152
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3158
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3162
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3168
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3172
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3177
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3194
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3201
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3208
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3226
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3245
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3251
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3258
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3262
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3275
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3279
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3284
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3288
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3295
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3300
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3313
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3317
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3321
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3325
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3346
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3355
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3359
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3365
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3377
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3386
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3392
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3396
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3405
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3409
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3415
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3421
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3425
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3431
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3436
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3440
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3444
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3449
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3453
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3457
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3463
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3467
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3471
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3485
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3489
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3499
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3509
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3519
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3547
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3556
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3564
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3572
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3580
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3588
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3596
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3604
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3612
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3620
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3630
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3641
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3659
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3663
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3667
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3680
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3689
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3698
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3704
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3708
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3714
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3718
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3722
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3726
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3731
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3739
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3745
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3753
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3761
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3771
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3777
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3786
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3795
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3804
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3814
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3818
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3828
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3832
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3836
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3840
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3846
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3856
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3860
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3866
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3872
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3876
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3882
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3888
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3892
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3896
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3906
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3912
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3916
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3922
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3926
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3932
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3936
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3946
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3959
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3965
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3971
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3984
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3995
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4002
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4006
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4012
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4022
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4026
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4030
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4035
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4039
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4043
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4047
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4056
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4060
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4064
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4068
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4073
		{
			yyVAL.str = ""
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4077
		{
			yyVAL.str = yyDollar[1].str
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4081
		{
			yyVAL.str = yyDollar[2].str
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4090
		{
			yyVAL.str = ""
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4094
		{
			yyVAL.str = yyDollar[1].str
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4098
		{
			yyVAL.str = yyDollar[2].str
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4102
		{
			yyVAL.str = yyDollar[1].str
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4106
		{
			yyVAL.str = yyDollar[2].str
		}
	case 674:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4152
		{
			yyVAL.str = yyDollar[1].str
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4158
		{
			yyVAL.str = yyDollar[1].str
		}
	case 677:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4165
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4177
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4182
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4188
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4195
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4199
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4205
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4211
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4215
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4219
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4225
		{
			yyVAL.str = yyDollar[1].str
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4231
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4237
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[6].tableNameUnion(),
				ColNames:    yyDollar[7].identifierListUnion(),
				AsSource:    yyDollar[9].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4248
		{
		}
	case 693:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4253
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4265
		{
			yyVAL.str = yyDollar[1].str
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4271
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4281
		{
			yyVAL.str = yyDollar[1].str
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4285
		{
			yyVAL.str = yyDollar[1].str
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4291
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4298
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4304
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4312
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4318
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4325
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4333
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4339
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4348
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4360
		{
			yyVAL.str = yyDollar[1].str
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4365
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4371
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4379
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4485
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4489
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4495
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4505
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4509
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4515
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4525
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4533
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4542
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4555
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4561
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4583
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4587
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4593
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4610
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4614
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4618
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4622
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4628
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4651
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4673
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4677
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4681
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4685
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4689
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4695
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4699
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4705
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4710
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4715
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4719
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4723
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4727
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4731
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4737
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4751
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4755
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4764
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4770
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4774
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4780
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4784
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4788
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4793
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4797
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4803
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4815
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4824
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4837
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4844
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4852
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4858
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4867
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4871
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4876
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4880
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4887
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4898
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4902
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4911
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4925
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4932
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4943
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4956
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4962
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4966
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4972
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4981
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4995
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5001
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5005
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5011
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5018
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5027
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5031
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5040
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5045
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5049
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5054
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5058
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5068
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5072
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5083
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5091
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5099
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5107
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5118
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5127
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5137
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5147
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5151
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5156
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5160
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5169
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5175
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5179
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5183
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5189
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5193
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5197
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5201
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5205
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5209
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5213
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5217
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5221
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5225
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5229
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5233
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5237
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5241
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5245
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5253
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5257
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5261
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5265
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5269
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5273
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5277
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5281
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5285
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5289
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5293
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5297
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5301
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5308
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5312
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5318
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5323
		{
			yyVAL.str = ""
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5327
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5331
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5337
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5341
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5345
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5349
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5353
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5357
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5371
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5375
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5384
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5389
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5395
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5402
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5406
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5416
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5422
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5432
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5438
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5447
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5456
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5479
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5488
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5498
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5506
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5512
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5516
		{
			yyVAL.str = yyDollar[1].str
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5526
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5532
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5538
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5552
		{
			yyVAL.str = ""
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5559
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5565
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5569
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5573
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5584
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5588
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5592
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5601
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5607
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5611
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5617
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5621
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5625
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5629
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5633
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5637
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5641
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5645
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5649
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5653
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5657
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5661
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5665
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5669
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5682
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5688
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5692
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5697
		{
			yyVAL.str = ""
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5701
		{
			yyVAL.str = yyDollar[1].str
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5707
		{
			yyVAL.str = ""
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5711
		{
			yyVAL.str = yyDollar[2].str
		}
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5717
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5729
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5736
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5743
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5750
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5757
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5766
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5772
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5778
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5782
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5786
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5790
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5794
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5799
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5806
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5810
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5814
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5819
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5823
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5828
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5832
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5848
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5854
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5858
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5862
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5866
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5870
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5874
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5878
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5882
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5886
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5890
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5894
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5898
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5902
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5908
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5912
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5916
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5920
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5924
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5928
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5932
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5936
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5940
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5944
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5948
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5952
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5957
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5965
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5969
		{
			locale := ""
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: "BINARY",
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			})
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5981
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5985
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5994
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5998
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6002
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6006
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6011
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6015
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6024
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6030
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6034
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6040
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6050
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6067
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6084
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6097
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6122
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6136
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6151
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6166
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6183
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6198
		{
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6204
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6208
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6212
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6218
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6222
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6230
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6234
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6238
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6244
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6251
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6264
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6271
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6280
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6285
		{
			yyVAL.str = ","
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6289
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6298
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6308
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[7].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6319
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6329
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6338
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6347
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6357
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6367
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6377
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6387
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6397
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6407
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6417
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6427
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6437
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6447
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6457
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6467
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6484
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6492
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6500
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6508
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6516
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6525
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6533
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6542
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6550
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6558
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6567
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6576
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6598
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6634
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6646
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6658
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6668
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6676
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6683
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6690
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6702
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6710
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6721
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6730
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6739
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6747
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6757
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6765
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6779
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6789
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6808
		{
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6810
		{
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6851
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6861
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6865
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6875
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6884
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6890
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6894
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6901
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6905
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6909
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6917
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6921
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6925
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6929
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6935
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6939
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6947
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6951
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6955
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6959
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6963
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6967
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6971
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6979
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6983
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6987
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6991
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6995
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6999
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7003
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7007
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7017
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7023
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7027
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7034
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7038
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7042
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7048
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7052
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7056
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7060
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7064
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7068
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7072
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7078
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7082
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7086
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7090
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7096
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7100
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7113
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7118
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7122
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7126
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7130
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7134
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7138
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7152
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7156
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7163
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7174
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7179
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7185
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7197
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7221
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7234
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7247
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7260
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7273
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7286
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7299
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7312
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7325
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7338
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7351
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7366
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7389
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7423
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7471
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7488
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7500
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7520
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7540
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7560
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7576
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7589
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7602
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7615
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7628
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7640
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7652
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7664
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7676
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7688
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7700
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7712
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7724
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7736
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7749
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7762
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7777
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7785
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7794
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7804
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7827
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7832
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7838
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7845
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7849
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7854
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7858
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7864
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7870
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7877
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7884
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7893
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7900
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7907
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7916
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7920
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7924
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7930
		{
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7932
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7942
		{
			yyVAL.str = ""
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7946
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

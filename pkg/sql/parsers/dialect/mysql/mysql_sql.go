// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const ZONEMAP = 57660
const LEADING = 57661
const BOTH = 57662
const TRAILING = 57663
const UNKNOWN = 57664
const EXPIRE = 57665
const ACCOUNT = 57666
const ACCOUNTS = 57667
const UNLOCK = 57668
const DAY = 57669
const NEVER = 57670
const PUMP = 57671
const MYSQL_COMPATIBILITY_MODE = 57672
const MODIFY = 57673
const CHANGE = 57674
const SECOND = 57675
const ASCII = 57676
const COALESCE = 57677
const COLLATION = 57678
const HOUR = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MONTH = 57682
const QUARTER = 57683
const REPEAT = 57684
const REVERSE = 57685
const ROW_COUNT = 57686
const WEEK = 57687
const REVOKE = 57688
const FUNCTION = 57689
const PRIVILEGES = 57690
const TABLESPACE = 57691
const EXECUTE = 57692
const SUPER = 57693
const GRANT = 57694
const OPTION = 57695
const REFERENCES = 57696
const REPLICATION = 57697
const SLAVE = 57698
const CLIENT = 57699
const USAGE = 57700
const RELOAD = 57701
const FILE = 57702
const TEMPORARY = 57703
const ROUTINE = 57704
const EVENT = 57705
const SHUTDOWN = 57706
const NULLX = 57707
const AUTO_INCREMENT = 57708
const APPROXNUM = 57709
const SIGNED = 57710
const UNSIGNED = 57711
const ZEROFILL = 57712
const ENGINES = 57713
const LOW_CARDINALITY = 57714
const AUTOEXTEND_SIZE = 57715
const ADMIN_NAME = 57716
const RANDOM = 57717
const SUSPEND = 57718
const ATTRIBUTE = 57719
const HISTORY = 57720
const REUSE = 57721
const CURRENT = 57722
const OPTIONAL = 57723
const FAILED_LOGIN_ATTEMPTS = 57724
const PASSWORD_LOCK_TIME = 57725
const UNBOUNDED = 57726
const SECONDARY = 57727
const RESTRICTED = 57728
const USER = 57729
const IDENTIFIED = 57730
const CIPHER = 57731
const ISSUER = 57732
const X509 = 57733
const SUBJECT = 57734
const SAN = 57735
const REQUIRE = 57736
const SSL = 57737
const NONE = 57738
const PASSWORD = 57739
const SHARED = 57740
const EXCLUSIVE = 57741
const MAX_QUERIES_PER_HOUR = 57742
const MAX_UPDATES_PER_HOUR = 57743
const MAX_CONNECTIONS_PER_HOUR = 57744
const MAX_USER_CONNECTIONS = 57745
const FORMAT = 57746
const VERBOSE = 57747
const CONNECTION = 57748
const TRIGGERS = 57749
const PROFILES = 57750
const LOAD = 57751
const INLINE = 57752
const INFILE = 57753
const TERMINATED = 57754
const OPTIONALLY = 57755
const ENCLOSED = 57756
const ESCAPED = 57757
const STARTING = 57758
const LINES = 57759
const ROWS = 57760
const IMPORT = 57761
const DISCARD = 57762
const MODUMP = 57763
const OVER = 57764
const PRECEDING = 57765
const FOLLOWING = 57766
const GROUPS = 57767
const DATABASES = 57768
const TABLES = 57769
const SEQUENCES = 57770
const EXTENDED = 57771
const FULL = 57772
const PROCESSLIST = 57773
const FIELDS = 57774
const COLUMNS = 57775
const OPEN = 57776
const ERRORS = 57777
const WARNINGS = 57778
const INDEXES = 57779
const SCHEMAS = 57780
const NODE = 57781
const LOCKS = 57782
const ROLES = 57783
const TABLE_NUMBER = 57784
const COLUMN_NUMBER = 57785
const TABLE_VALUES = 57786
const TABLE_SIZE = 57787
const NAMES = 57788
const GLOBAL = 57789
const PERSIST = 57790
const SESSION = 57791
const ISOLATION = 57792
const LEVEL = 57793
const READ = 57794
const WRITE = 57795
const ONLY = 57796
const REPEATABLE = 57797
const COMMITTED = 57798
const UNCOMMITTED = 57799
const SERIALIZABLE = 57800
const LOCAL = 57801
const EVENTS = 57802
const PLUGINS = 57803
const CURRENT_TIMESTAMP = 57804
const DATABASE = 57805
const CURRENT_TIME = 57806
const LOCALTIME = 57807
const LOCALTIMESTAMP = 57808
const UTC_DATE = 57809
const UTC_TIME = 57810
const UTC_TIMESTAMP = 57811
const REPLACE = 57812
const CONVERT = 57813
const SEPARATOR = 57814
const TIMESTAMPDIFF = 57815
const CURRENT_DATE = 57816
const CURRENT_USER = 57817
const CURRENT_ROLE = 57818
const SECOND_MICROSECOND = 57819
const MINUTE_MICROSECOND = 57820
const MINUTE_SECOND = 57821
const HOUR_MICROSECOND = 57822
const HOUR_SECOND = 57823
const HOUR_MINUTE = 57824
const DAY_MICROSECOND = 57825
const DAY_SECOND = 57826
const DAY_MINUTE = 57827
const DAY_HOUR = 57828
const YEAR_MONTH = 57829
const SQL_TSI_HOUR = 57830
const SQL_TSI_DAY = 57831
const SQL_TSI_WEEK = 57832
const SQL_TSI_MONTH = 57833
const SQL_TSI_QUARTER = 57834
const SQL_TSI_YEAR = 57835
const SQL_TSI_SECOND = 57836
const SQL_TSI_MINUTE = 57837
const RECURSIVE = 57838
const CONFIG = 57839
const DRAINER = 57840
const SOURCE = 57841
const STREAM = 57842
const HEADERS = 57843
const CONNECTOR = 57844
const MATCH = 57845
const AGAINST = 57846
const BOOLEAN = 57847
const LANGUAGE = 57848
const WITH = 57849
const QUERY = 57850
const EXPANSION = 57851
const WITHOUT = 57852
const VALIDATION = 57853
const ADDDATE = 57854
const BIT_AND = 57855
const BIT_OR = 57856
const BIT_XOR = 57857
const CAST = 57858
const COUNT = 57859
const APPROX_COUNT = 57860
const APPROX_COUNT_DISTINCT = 57861
const APPROX_PERCENTILE = 57862
const CURDATE = 57863
const CURTIME = 57864
const DATE_ADD = 57865
const DATE_SUB = 57866
const EXTRACT = 57867
const GROUP_CONCAT = 57868
const MAX = 57869
const MID = 57870
const MIN = 57871
const NOW = 57872
const POSITION = 57873
const SESSION_USER = 57874
const STD = 57875
const STDDEV = 57876
const MEDIAN = 57877
const STDDEV_POP = 57878
const STDDEV_SAMP = 57879
const SUBDATE = 57880
const SUBSTR = 57881
const SUBSTRING = 57882
const SUM = 57883
const SYSDATE = 57884
const SYSTEM_USER = 57885
const TRANSLATE = 57886
const TRIM = 57887
const VARIANCE = 57888
const VAR_POP = 57889
const VAR_SAMP = 57890
const AVG = 57891
const RANK = 57892
const ROW_NUMBER = 57893
const DENSE_RANK = 57894
const BIT_CAST = 57895
const NEXTVAL = 57896
const SETVAL = 57897
const CURRVAL = 57898
const LASTVAL = 57899
const ARROW = 57900
const ROW = 57901
const OUTFILE = 57902
const HEADER = 57903
const MAX_FILE_SIZE = 57904
const FORCE_QUOTE = 57905
const PARALLEL = 57906
const UNUSED = 57907
const BINDINGS = 57908
const DO = 57909
const DECLARE = 57910
const LOOP = 57911
const WHILE = 57912
const LEAVE = 57913
const ITERATE = 57914
const UNTIL = 57915
const CALL = 57916
const SPBEGIN = 57917
const BACKEND = 57918
const SERVERS = 57919
const KILL = 57920
const BACKUP = 57921
const FILESYSTEM = 57922
const QUERY_RESULT = 57923

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10430

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 116,
	21, 700,
	-2, 681,
	-1, 133,
	235, 1037,
	237, 956,
	-2, 997,
	-1, 156,
	42, 519,
	237, 519,
	264, 526,
	265, 526,
	454, 519,
	-2, 552,
	-1, 192,
	602, 1753,
	-2, 435,
	-1, 529,
	316, 133,
	427, 133,
	428, 133,
	-2, 1663,
	-1, 593,
	81, 1458,
	-2, 1807,
	-1, 594,
	81, 1476,
	-2, 1778,
	-1, 598,
	81, 1477,
	-2, 1806,
	-1, 624,
	81, 1388,
	-2, 1875,
	-1, 625,
	81, 1389,
	-2, 1874,
	-1, 626,
	81, 1390,
	-2, 1864,
	-1, 627,
	81, 1838,
	-2, 1859,
	-1, 628,
	81, 1839,
	-2, 1860,
	-1, 629,
	81, 1840,
	-2, 1866,
	-1, 630,
	81, 1841,
	-2, 1848,
	-1, 631,
	81, 1842,
	-2, 1857,
	-1, 632,
	81, 1843,
	-2, 1867,
	-1, 633,
	81, 1844,
	-2, 1868,
	-1, 634,
	81, 1845,
	-2, 1873,
	-1, 635,
	81, 1846,
	-2, 1878,
	-1, 636,
	81, 1847,
	-2, 1879,
	-1, 638,
	81, 1455,
	-2, 1651,
	-1, 642,
	81, 1460,
	-2, 1664,
	-1, 645,
	81, 1464,
	-2, 1682,
	-1, 649,
	81, 1468,
	-2, 1724,
	-1, 650,
	81, 1469,
	-2, 1802,
	-1, 658,
	81, 1479,
	-2, 1787,
	-1, 659,
	81, 1480,
	-2, 1831,
	-1, 660,
	81, 1481,
	-2, 1797,
	-1, 661,
	81, 1482,
	-2, 1821,
	-1, 672,
	81, 1366,
	-2, 1869,
	-1, 673,
	81, 1367,
	-2, 1870,
	-1, 674,
	81, 1368,
	-2, 1871,
	-1, 678,
	21, 701,
	-2, 664,
	-1, 758,
	449, 552,
	450, 552,
	-2, 520,
	-1, 803,
	122, 1651,
	133, 1651,
	153, 1651,
	-2, 1626,
	-1, 909,
	21, 701,
	-2, 664,
	-1, 1009,
	21, 700,
	-2, 1263,
	-1, 1385,
	81, 1526,
	-2, 1804,
	-1, 1386,
	81, 1527,
	-2, 1805,
	-1, 1525,
	82, 847,
	-2, 853,
	-1, 1910,
	82, 1612,
	154, 1612,
	-2, 1789,
	-1, 1911,
	82, 1612,
	154, 1612,
	-2, 1788,
	-1, 1912,
	82, 1588,
	154, 1588,
	-2, 1775,
	-1, 1913,
	82, 1589,
	154, 1589,
	-2, 1780,
	-1, 1914,
	82, 1590,
	154, 1590,
	-2, 1712,
	-1, 1915,
	82, 1591,
	154, 1591,
	-2, 1706,
	-1, 1916,
	82, 1592,
	154, 1592,
	-2, 1642,
	-1, 1917,
	82, 1593,
	154, 1593,
	-2, 1777,
	-1, 1918,
	82, 1594,
	154, 1594,
	-2, 1710,
	-1, 1919,
	82, 1595,
	154, 1595,
	-2, 1705,
	-1, 1920,
	82, 1596,
	154, 1596,
	-2, 1696,
	-1, 1921,
	82, 1612,
	154, 1612,
	-2, 1697,
	-1, 1922,
	82, 1612,
	154, 1612,
	-2, 1698,
	-1, 1924,
	82, 1601,
	154, 1601,
	-2, 1821,
	-1, 1925,
	82, 1579,
	154, 1579,
	-2, 1807,
	-1, 1926,
	82, 1610,
	154, 1610,
	-2, 1778,
	-1, 1927,
	82, 1610,
	154, 1610,
	-2, 1806,
	-1, 1928,
	82, 1610,
	154, 1610,
	-2, 1665,
	-1, 1929,
	82, 1608,
	154, 1608,
	-2, 1797,
	-1, 1930,
	82, 1605,
	154, 1605,
	-2, 1687,
	-1, 1931,
	81, 1560,
	82, 1560,
	154, 1560,
	385, 1560,
	386, 1560,
	387, 1560,
	-2, 1641,
	-1, 1932,
	81, 1561,
	82, 1561,
	154, 1561,
	385, 1561,
	386, 1561,
	387, 1561,
	-2, 1643,
	-1, 1933,
	81, 1564,
	82, 1564,
	154, 1564,
	385, 1564,
	386, 1564,
	387, 1564,
	-2, 1779,
	-1, 1934,
	81, 1566,
	82, 1566,
	154, 1566,
	385, 1566,
	386, 1566,
	387, 1566,
	-2, 1762,
	-1, 1935,
	81, 1568,
	82, 1568,
	154, 1568,
	385, 1568,
	386, 1568,
	387, 1568,
	-2, 1711,
	-1, 1936,
	81, 1570,
	82, 1570,
	154, 1570,
	385, 1570,
	386, 1570,
	387, 1570,
	-2, 1692,
	-1, 1937,
	81, 1571,
	82, 1571,
	154, 1571,
	385, 1571,
	386, 1571,
	387, 1571,
	-2, 1693,
	-1, 1938,
	81, 1573,
	82, 1573,
	154, 1573,
	385, 1573,
	386, 1573,
	387, 1573,
	-2, 1640,
	-1, 1939,
	82, 1615,
	154, 1615,
	385, 1615,
	386, 1615,
	387, 1615,
	-2, 1670,
	-1, 1940,
	82, 1615,
	154, 1615,
	385, 1615,
	386, 1615,
	387, 1615,
	-2, 1683,
	-1, 1941,
	82, 1618,
	154, 1618,
	385, 1618,
	386, 1618,
	387, 1618,
	-2, 1666,
	-1, 1942,
	82, 1618,
	154, 1618,
	385, 1618,
	386, 1618,
	387, 1618,
	-2, 1727,
	-1, 1943,
	82, 1615,
	154, 1615,
	385, 1615,
	386, 1615,
	387, 1615,
	-2, 1747,
	-1, 1961,
	105, 991,
	149, 991,
	188, 991,
	191, 991,
	277, 991,
	-2, 984,
	-1, 2099,
	21, 700,
	-2, 794,
	-1, 2301,
	105, 991,
	149, 991,
	188, 991,
	191, 991,
	277, 991,
	-2, 985,
	-1, 2317,
	79, 610,
	154, 610,
	-2, 1150,
	-1, 2657,
	191, 991,
	301, 1231,
	-2, 1203,
	-1, 2798,
	105, 991,
	149, 991,
	188, 991,
	191, 991,
	-2, 1093,
	-1, 2800,
	105, 991,
	149, 991,
	188, 991,
	191, 991,
	-2, 1093,
	-1, 2810,
	79, 610,
	154, 610,
	-2, 1151,
	-1, 2819,
	191, 991,
	301, 1231,
	-2, 1204,
	-1, 2946,
	105, 991,
	149, 991,
	188, 991,
	191, 991,
	-2, 1094,
	-1, 3318,
	82, 1055,
	154, 1055,
	-2, 991,
	-1, 3322,
	82, 1055,
	154, 1055,
	-2, 991,
	-1, 3336,
	82, 1059,
	154, 1059,
	-2, 991,
	-1, 3341,
	82, 1060,
	154, 1060,
	-2, 991,
}

const yyPrivate = 57344

const yyLast = 38783

var yyAct = [...]int{
	560, 3322, 1606, 3321, 3330, 3301, 183, 1365, 538, 3193,
	540, 3254, 562, 533, 3219, 3272, 3201, 2675, 3202, 2899,
	2894, 3111, 548, 1885, 2987, 3125, 2833, 3102, 1042, 1361,
	2738, 1162, 1222, 3129, 2936, 2937, 2934, 3022, 590, 2739,
	445, 3060, 1303, 679, 2897, 542, 1293, 2273, 2770, 3012,
	452, 802, 457, 457, 2786, 3112, 3114, 2941, 457, 473,
	482, 1559, 2952, 482, 2820, 2320, 2945, 2589, 1368, 2889,
	2001, 2913, 2434, 1695, 2948, 2435, 2617, 1692, 2775, 2357,
	2417, 2672, 2661, 2337, 2801, 1660, 168, 2654, 2736, 2306,
	2093, 1789, 2427, 2724, 2456, 2587, 2707, 2004, 2430, 2433,
	2292, 2598, 2601, 487, 2596, 2660, 2634, 1971, 2590, 903,
	1758, 2302, 1906, 531, 1898, 2493, 1215, 2077, 1889, 1707,
	1888, 1505, 1766, 1759, 1785, 537, 1282, 1767, 1732, 55,
	1908, 2141, 493, 1688, 2476, 2531, 734, 808, 1663, 1135,
	1661, 2082, 2094, 1289, 2281, 2276, 2339, 2002, 1302, 1598,
	1114, 1297, 1588, 1784, 2312, 6, 532, 179, 8, 1536,
	445, 178, 7, 1561, 1970, 1513, 855, 539, 2204, 2158,
	1818, 1359, 451, 1294, 1231, 2121, 1786, 1952, 1256, 541,
	1904, 1201, 115, 183, 1364, 183, 2592, 846, 847, 1967,
	796, 1151, 2591, 1570, 840, 841, 1796, 2234, 530, 845,
	1415, 1399, 2235, 1350, 35, 549, 806, 920, 765, 1137,
	469, 1997, 1263, 1358, 26, 1748, 1571, 15, 1081, 1722,
	1765, 795, 1170, 2101, 1762, 14, 733, 1200, 1535, 466,
	444, 1198, 13, 676, 1421, 1422, 1255, 532, 32, 23,
	16, 10, 1668, 169, 1147, 1163, 481, 162, 495, 496,
	165, 731, 711, 1107, 678, 715, 1793, 843, 3054, 753,
	2260, 1043, 1803, 2789, 2731, 2193, 2147, 2145, 2144, 842,
	2260, 844, 2142, 478, 2260, 1518, 474, 839, 1270, 1266,
	838, 839, 167, 1098, 477, 453, 1183, 839, 1268, 2823,
	2887, 476, 2489, 812, 456, 456, 2487, 475, 1737, 3018,
	464, 3013, 2031, 462, 978, 979, 980, 977, 2890, 485,
	2737, 1509, 1037, 3116, 36, 1761, 677, 1171, 978, 979,
	980, 977, 2039, 837, 3184, 8, 3071, 2835, 687, 7,
	2923, 1099, 166, 51, 158, 134, 166, 2187, 2274, 166,
	2826, 166, 51, 158, 134, 2272, 809, 166, 941, 2914,
	2821, 166, 166, 2179, 1317, 2843, 2844, 1310, 166, 166,
	1543, 2822, 166, 51, 158, 134, 1790, 2912, 811, 3148,
	3072, 1111, 1531, 479, 667, 491, 666, 668, 669, 2555,
	670, 671, 827, 1127, 1314, 492, 1100, 1307, 1956, 1801,
	1351, 784, 3043, 1355, 2119, 2508, 975, 1705, 2827, 2501,
	114, 163, 2120, 2463, 2464, 1316, 114, 1335, 1309, 1179,
	163, 956, 1180, 1202, 957, 1204, 163, 1354, 2462, 2107,
	163, 163, 2106, 1673, 1674, 2108, 1672, 163, 163, 2159,
	688, 163, 1519, 1520, 680, 1166, 774, 2278, 1159, 1165,
	1168, 1169, 959, 1584, 3237, 1367, 949, 2279, 973, 951,
	3235, 1168, 1169, 968, 805, 804, 457, 3205, 3206, 2908,
	3119, 3179, 3118, 3178, 3117, 3177, 457, 913, 3119, 3118,
	3117, 1876, 3223, 3224, 2740, 3020, 2494, 952, 3104, 3104,
	2495, 3183, 2496, 3107, 482, 482, 3016, 457, 1371, 2740,
	2174, 2842, 914, 2005, 1805, 2277, 1356, 3122, 1182, 3023,
	3024, 3025, 3026, 1683, 923, 2373, 908, 910, 2749, 1689,
	1679, 1346, 2776, 1797, 2783, 1269, 1267, 954, 2831, 1353,
	2602, 2928, 2071, 822, 818, 813, 817, 820, 1950, 1745,
	2263, 2284, 722, 780, 778, 2845, 779, 3181, 2610, 2519,
	2828, 2832, 2830, 2829, 1276, 1275, 2184, 133, 981, 164,
	912, 825, 945, 971, 972, 816, 526, 1010, 970, 528,
	2421, 2037, 3186, 3187, 527, 1019, 944, 2888, 907, 156,
	2612, 923, 961, 2488, 849, 962, 2074, 947, 2837, 2838,
	955, 3049, 1456, 2521, 2073, 3052, 1011, 2925, 1026, 950,
	953, 2907, 913, 2607, 2608, 2078, 3239, 807, 2909, 1370,
	1369, 909, 812, 964, 3230, 3204, 823, 2626, 2606, 2609,
	2673, 2674, 3076, 826, 3068, 946, 1377, 1380, 1381, 2857,
	2845, 3140, 785, 936, 2635, 3135, 2313, 1378, 484, 483,
	814, 2426, 2824, 1157, 1958, 1352, 1802, 1046, 2836, 781,
	3331, 3130, 1703, 1704, 1807, 1809, 1810, 3315, 1192, 1113,
	1112, 3263, 2850, 824, 1181, 809, 958, 3195, 966, 967,
	1097, 2988, 2989, 2990, 2992, 2991, 3234, 2296, 2297, 2298,
	2299, 3035, 3270, 812, 3036, 1047, 1146, 811, 960, 2677,
	2860, 916, 917, 3121, 2978, 478, 478, 3295, 474, 474,
	2048, 948, 2047, 815, 925, 924, 477, 477, 905, 1105,
	452, 1108, 783, 476, 476, 3053, 2967, 2752, 911, 475,
	475, 457, 1013, 1014, 1015, 1016, 965, 2525, 1791, 1078,
	2604, 2259, 2290, 1791, 2123, 2900, 809, 3038, 927, 932,
	929, 930, 2973, 734, 3191, 3192, 1791, 3195, 933, 2068,
	2069, 963, 1211, 1210, 839, 3332, 839, 839, 811, 1161,
	1160, 839, 934, 3302, 3070, 480, 1017, 3185, 3037, 839,
	839, 925, 924, 1144, 724, 1143, 725, 2841, 3077, 821,
	3069, 1142, 918, 1167, 1792, 1804, 480, 3326, 782, 2007,
	2143, 457, 3061, 1194, 1164, 479, 479, 904, 2274, 445,
	445, 2572, 2007, 2010, 1271, 2802, 2000, 3338, 445, 445,
	1819, 2885, 1226, 1226, 1115, 457, 819, 677, 1120, 3044,
	491, 490, 1168, 1169, 3275, 2669, 52, 3101, 1168, 1169,
	1199, 3240, 2180, 2603, 482, 1108, 452, 2840, 2111, 1259,
	1259, 1224, 1224, 2283, 2924, 1228, 1690, 52, 1233, 2020,
	183, 2188, 1258, 1258, 135, 2000, 2022, 2017, 135, 445,
	1158, 135, 941, 135, 1379, 1116, 1117, 1118, 1119, 135,
	1121, 1055, 1056, 135, 135, 1126, 2473, 2474, 2035, 2676,
	135, 135, 1106, 1794, 135, 2613, 935, 2524, 2374, 2929,
	2375, 2376, 1808, 2458, 2460, 1682, 3050, 1125, 2522, 2287,
	2288, 1124, 1680, 1347, 1123, 2010, 486, 807, 2582, 1806,
	1301, 1277, 1304, 2021, 2286, 3325, 2980, 1312, 2673, 2674,
	2371, 2533, 2532, 2605, 1132, 2006, 1220, 1221, 1894, 1893,
	2008, 2670, 2262, 2011, 1892, 1083, 1103, 1333, 2006, 2000,
	2005, 1085, 2003, 2008, 728, 729, 730, 940, 1153, 1154,
	1318, 1226, 1522, 1226, 913, 1523, 1140, 1109, 678, 1891,
	3276, 1145, 2969, 1122, 1328, 1329, 2968, 1110, 1155, 1101,
	1102, 1521, 2974, 2975, 690, 2060, 1173, 1174, 691, 1176,
	1177, 1178, 3031, 3337, 2009, 2953, 3113, 2401, 1851, 1206,
	1208, 1850, 726, 1280, 1134, 1283, 1284, 2009, 1218, 1219,
	1372, 1373, 1374, 1375, 1376, 3278, 1285, 1286, 1251, 1193,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1184, 1185, 723, 1172, 1410, 1411, 1175, 976,
	1291, 1292, 2704, 1190, 1420, 2011, 3035, 1366, 3344, 3036,
	2392, 2393, 1348, 812, 1417, 1418, 1419, 812, 1469, 1272,
	1209, 1562, 1453, 941, 3030, 1562, 1332, 1232, 2459, 1299,
	1463, 694, 2016, 976, 1331, 2161, 2014, 2700, 1234, 3343,
	462, 1478, 1148, 1152, 1152, 1152, 1260, 1363, 2767, 1296,
	1249, 1244, 1300, 1901, 2318, 1459, 1460, 1461, 1250, 2091,
	3273, 3274, 3038, 1261, 3299, 1148, 1148, 3334, 1475, 2751,
	3316, 1476, 3311, 1879, 1507, 3258, 1902, 1903, 1511, 3305,
	976, 1514, 693, 2179, 1485, 1486, 696, 695, 939, 1382,
	1503, 1344, 3304, 3037, 681, 1533, 2679, 1226, 1538, 1539,
	2671, 1541, 1542, 2092, 2268, 1360, 2265, 457, 1319, 1324,
	1226, 976, 3282, 478, 734, 2640, 474, 1560, 830, 835,
	836, 786, 1226, 1341, 477, 3256, 1338, 678, 1194, 3213,
	1883, 476, 2391, 473, 1506, 2166, 1320, 475, 3207, 3335,
	3158, 1337, 1799, 2123, 3312, 1468, 1954, 775, 1340, 1339,
	1336, 1799, 1583, 1408, 1409, 775, 1451, 1452, 2092, 1455,
	1589, 1589, 2704, 1194, 1799, 1194, 1194, 1470, 1357, 457,
	457, 1362, 1533, 1533, 1790, 1587, 1226, 1657, 1658, 1670,
	1477, 3095, 1479, 2092, 1799, 978, 979, 980, 977, 1401,
	2319, 2034, 2319, 445, 1532, 1226, 3094, 3257, 1308, 2624,
	938, 3214, 1315, 2402, 2404, 2405, 2406, 2403, 3090, 1507,
	3057, 3089, 3057, 479, 1507, 1507, 978, 979, 980, 977,
	457, 1533, 1226, 1342, 1712, 1671, 457, 457, 1716, 1717,
	777, 2553, 1540, 776, 1720, 1721, 1995, 976, 777, 1727,
	1528, 776, 1529, 1530, 1454, 1608, 183, 1149, 1725, 183,
	183, 3088, 183, 3096, 1544, 1545, 1546, 3087, 1735, 1884,
	1953, 1738, 1882, 1855, 1741, 3056, 681, 1743, 1975, 2918,
	2864, 1652, 1653, 1480, 1781, 2688, 939, 1701, 1698, 1699,
	3057, 1537, 1510, 3057, 1349, 1133, 1563, 1564, 1413, 1212,
	1469, 1469, 1769, 1504, 1552, 2813, 2627, 1469, 1469, 1576,
	2641, 2478, 1776, 1676, 2321, 1678, 1565, 3031, 832, 833,
	834, 3032, 1591, 1590, 1582, 1696, 1697, 1585, 1586, 1691,
	1709, 2182, 2453, 3057, 1684, 2241, 1560, 2625, 2233, 3057,
	1226, 1788, 1736, 1568, 1569, 1739, 1740, 3057, 1742, 1581,
	1557, 2919, 2123, 1556, 2211, 1714, 1715, 2689, 2194, 1547,
	1578, 1579, 2181, 2173, 1572, 1711, 1574, 1575, 1593, 1594,
	1537, 1830, 1573, 1150, 1991, 2177, 2170, 1567, 2628, 1580,
	2168, 2163, 898, 894, 895, 896, 897, 2156, 2216, 1592,
	2215, 2214, 2212, 1846, 906, 2154, 1723, 1782, 1831, 2152,
	978, 979, 980, 977, 2092, 1816, 1817, 976, 2150, 1974,
	976, 1880, 1659, 1861, 1656, 1770, 1360, 1822, 1860, 1079,
	1826, 1595, 1596, 1675, 1685, 1677, 1780, 1764, 1730, 812,
	976, 2782, 941, 1849, 1764, 1812, 812, 1840, 1839, 1527,
	1838, 1798, 1706, 1321, 1023, 1710, 1829, 1975, 2164, 926,
	1148, 2645, 2169, 2164, 906, 901, 2213, 899, 3001, 2157,
	1837, 2862, 1325, 1700, 1577, 1733, 2103, 2155, 1844, 993,
	1731, 2151, 1708, 2636, 2516, 1152, 1216, 2142, 1708, 1708,
	2151, 1975, 809, 1879, 3291, 976, 1857, 1217, 3136, 809,
	976, 1862, 1863, 1864, 1750, 1214, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 811, 976, 2954, 2805, 2803, 976,
	976, 811, 976, 1799, 1856, 531, 1858, 913, 1944, 457,
	457, 457, 812, 1865, 1779, 692, 1778, 1774, 1773, 1775,
	478, 1771, 3137, 474, 1326, 457, 457, 457, 906, 1458,
	1457, 477, 1783, 1458, 1457, 1149, 3279, 1972, 476, 2637,
	2955, 2806, 2804, 2032, 475, 1138, 1407, 1979, 1194, 1139,
	3055, 3027, 1814, 1815, 1734, 2971, 1976, 2970, 1984, 2788,
	1820, 2705, 1404, 1406, 1403, 809, 1405, 2698, 2693, 1811,
	1188, 1189, 1194, 1191, 2690, 1195, 1196, 1197, 2619, 2217,
	2218, 2423, 2294, 2638, 1213, 1813, 2027, 811, 2261, 1401,
	1909, 2192, 2167, 2113, 1129, 1824, 994, 995, 996, 997,
	998, 999, 1000, 993, 1128, 1239, 1240, 1241, 1242, 1243,
	915, 1245, 1246, 1247, 1248, 2729, 2201, 1416, 1253, 1254,
	479, 1481, 1482, 1483, 2136, 2480, 1487, 1488, 1489, 1490,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 697, 1491,
	2033, 980, 977, 1484, 563, 573, 2096, 2096, 1670, 2096,
	1416, 1150, 1825, 564, 1534, 572, 565, 569, 568, 566,
	567, 3176, 1948, 978, 979, 980, 977, 445, 445, 1264,
	1507, 1734, 1507, 977, 2732, 913, 978, 979, 980, 977,
	2983, 1226, 457, 1875, 1877, 1878, 2982, 2146, 2497, 2363,
	1507, 1507, 2362, 2345, 457, 978, 979, 980, 977, 913,
	452, 2343, 3294, 1895, 1259, 2962, 1670, 1473, 570, 2131,
	2117, 2133, 1981, 1982, 1955, 183, 1994, 1258, 2931, 2932,
	1046, 1474, 1985, 1986, 996, 997, 998, 999, 1000, 993,
	2926, 3320, 3308, 2100, 2109, 3264, 2110, 2098, 3259, 2102,
	571, 1980, 984, 985, 986, 987, 988, 989, 990, 982,
	3197, 1945, 1946, 1947, 2114, 2115, 3167, 3138, 1047, 1990,
	2780, 2175, 2413, 3293, 1788, 1993, 1999, 1964, 1965, 1966,
	1987, 1226, 1998, 1226, 3080, 1226, 1025, 812, 2411, 2409,
	913, 3073, 1909, 2398, 1988, 2293, 2927, 1989, 1992, 1024,
	3014, 2130, 2012, 2013, 2787, 2018, 978, 979, 980, 977,
	1983, 2137, 2185, 2957, 2956, 2730, 978, 979, 980, 977,
	2428, 1226, 2220, 2125, 2075, 2203, 2781, 2807, 2412, 2202,
	2779, 2611, 978, 979, 980, 977, 2512, 2227, 2221, 2222,
	809, 2138, 1226, 2104, 2410, 2408, 2224, 2225, 2492, 2397,
	1224, 3198, 2229, 2219, 978, 979, 980, 977, 2491, 2230,
	2396, 2395, 811, 1265, 2394, 3229, 2118, 1206, 1208, 2386,
	2380, 1224, 2379, 2189, 2228, 1842, 2128, 978, 979, 980,
	977, 2378, 2127, 1507, 2377, 2135, 2254, 2255, 1514, 2126,
	2231, 913, 2129, 1753, 1752, 1152, 1001, 1002, 994, 995,
	996, 997, 998, 999, 1000, 993, 2038, 1751, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2191, 1747, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 1746, 2061,
	2062, 2063, 2064, 2065, 1232, 2066, 2546, 2199, 2186, 457,
	2172, 1841, 1322, 2252, 1226, 1096, 1708, 2291, 2205, 2205,
	2178, 2176, 2183, 1533, 2307, 978, 979, 980, 977, 2597,
	2317, 1886, 1887, 1264, 3128, 1360, 2323, 978, 979, 980,
	977, 2902, 2895, 2226, 2266, 2195, 2196, 2198, 3225, 3180,
	3124, 526, 2332, 2935, 528, 3110, 2210, 2208, 913, 527,
	978, 979, 980, 977, 3099, 2545, 2342, 978, 979, 980,
	977, 3084, 3079, 913, 913, 913, 1589, 3078, 3051, 913,
	3015, 2353, 2354, 2355, 913, 2964, 2359, 2360, 2944, 2361,
	2930, 978, 979, 980, 977, 2893, 2303, 2891, 1284, 2871,
	2269, 2868, 2866, 978, 979, 980, 977, 2418, 1285, 1286,
	2256, 2253, 2096, 2778, 3145, 2777, 1713, 2774, 2236, 2237,
	2757, 2901, 2304, 2699, 2242, 2695, 2414, 2686, 2685, 2620,
	1608, 1291, 1292, 2579, 445, 978, 979, 980, 977, 1533,
	913, 1670, 1670, 1670, 1670, 2270, 2271, 978, 979, 980,
	977, 2578, 913, 1670, 1299, 2577, 2096, 2348, 2349, 2314,
	1890, 2340, 2352, 575, 116, 2340, 2336, 2358, 2526, 116,
	2523, 2324, 1226, 2289, 1296, 2490, 2467, 1300, 2407, 2399,
	2389, 2347, 2387, 2383, 457, 457, 2382, 2381, 1881, 2322,
	1755, 8, 623, 622, 2316, 7, 1749, 1517, 1537, 183,
	1516, 1323, 1054, 1050, 183, 2335, 1049, 2326, 2333, 2338,
	1834, 2328, 3333, 902, 2344, 2341, 2484, 689, 2486, 463,
	2854, 3141, 116, 2436, 2449, 1469, 3028, 1469, 2351, 2922,
	2507, 2800, 2799, 2798, 2511, 2436, 1507, 2766, 2756, 2744,
	1226, 1507, 166, 2518, 158, 134, 978, 979, 980, 977,
	2325, 2275, 2735, 2734, 2388, 2723, 2722, 2646, 2329, 2330,
	992, 991, 1001, 1002, 994, 995, 996, 997, 998, 999,
	1000, 993, 2315, 2331, 2551, 2544, 2419, 2529, 2536, 1853,
	2424, 2437, 2438, 2439, 2440, 2481, 2535, 2530, 2754, 2475,
	2485, 2450, 2448, 2451, 2267, 2264, 1506, 678, 2452, 2153,
	2550, 2506, 978, 979, 980, 977, 2149, 2468, 2148, 1866,
	1859, 163, 2461, 2280, 978, 979, 980, 977, 1828, 1854,
	1852, 2539, 1848, 2541, 2422, 2465, 1847, 810, 2482, 913,
	2479, 116, 2483, 913, 1845, 1836, 2504, 1833, 2520, 2549,
	1832, 2600, 2510, 1754, 2500, 2498, 116, 1502, 116, 2505,
	1501, 2615, 2503, 812, 1500, 1472, 457, 1471, 2548, 1462,
	812, 1238, 2327, 166, 2514, 978, 979, 980, 977, 1236,
	913, 913, 913, 2515, 2527, 3290, 3284, 3271, 3268, 1670,
	1972, 3266, 2644, 2528, 978, 979, 980, 977, 2648, 3245,
	3309, 3166, 978, 979, 980, 977, 2369, 2370, 2537, 2538,
	2659, 1044, 2662, 2534, 2662, 2662, 3097, 3086, 3081, 913,
	2384, 2385, 1909, 2542, 2543, 2623, 1279, 2996, 2981, 2540,
	2666, 2977, 2879, 2681, 2877, 2852, 2470, 2471, 2851, 2573,
	1226, 1226, 163, 2678, 2420, 2848, 2303, 2847, 2790, 2576,
	2580, 2583, 2680, 992, 991, 1001, 1002, 994, 995, 996,
	997, 998, 999, 1000, 993, 1827, 2595, 2581, 2594, 1224,
	1224, 1290, 2682, 2683, 2642, 2631, 2632, 2633, 1281, 2616,
	1136, 2415, 2346, 2622, 2311, 2310, 457, 2309, 1295, 1298,
	1287, 2600, 2658, 2251, 2162, 2639, 2547, 2643, 2112, 2067,
	2556, 2557, 1533, 1533, 2250, 2667, 2558, 2559, 2560, 2561,
	2652, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2663,
	2664, 1973, 978, 979, 980, 977, 1963, 2668, 1402, 163,
	978, 979, 980, 977, 812, 1718, 1526, 1525, 2657, 978,
	979, 980, 977, 1345, 1311, 1288, 1080, 1077, 2502, 2220,
	1004, 1076, 1008, 1075, 1074, 2509, 1073, 1072, 2733, 2647,
	2249, 1071, 1070, 2649, 2650, 1069, 2665, 1068, 1005, 1007,
	1003, 1067, 1006, 992, 991, 1001, 1002, 994, 995, 996,
	997, 998, 999, 1000, 993, 1066, 978, 979, 980, 977,
	2248, 1065, 2692, 1064, 2691, 457, 2697, 2696, 3288, 1063,
	2701, 2702, 1062, 1061, 1060, 2687, 2712, 2247, 2621, 2694,
	1059, 2651, 2246, 1058, 1057, 1053, 978, 979, 980, 977,
	2716, 2245, 1052, 1051, 1048, 1041, 2719, 2720, 2721, 1040,
	2753, 1038, 1037, 978, 979, 980, 977, 2755, 978, 979,
	980, 977, 1036, 2728, 116, 116, 810, 978, 979, 980,
	977, 992, 991, 1001, 1002, 994, 995, 996, 997, 998,
	999, 1000, 993, 3157, 2244, 2771, 913, 1035, 2703, 1034,
	1033, 682, 683, 684, 685, 2243, 681, 2748, 3155, 2240,
	2629, 2630, 2745, 2715, 2758, 1032, 1031, 1030, 1029, 2746,
	978, 979, 980, 977, 2239, 1028, 1027, 2794, 1022, 2307,
	2763, 978, 979, 980, 977, 978, 979, 980, 977, 1021,
	2096, 1670, 2810, 1020, 3153, 2238, 2747, 1009, 943, 2653,
	978, 979, 980, 977, 3243, 2232, 900, 913, 1708, 3151,
	2223, 2849, 2760, 1978, 2708, 2709, 2659, 2200, 1960, 931,
	913, 978, 979, 980, 977, 2796, 2797, 1237, 3203, 2711,
	913, 978, 979, 980, 977, 1226, 978, 979, 980, 977,
	2295, 2773, 2124, 978, 979, 980, 977, 1757, 942, 2445,
	2447, 1533, 2088, 2089, 2446, 913, 2443, 1412, 1507, 2785,
	2812, 2444, 2714, 2762, 1224, 812, 812, 2863, 2795, 1507,
	2881, 2713, 2876, 812, 2442, 2878, 2809, 2882, 2846, 2441,
	2808, 183, 2839, 978, 979, 980, 977, 2816, 3319, 2883,
	2817, 2171, 2165, 1130, 913, 1554, 1555, 2873, 2853, 1549,
	1550, 1551, 2858, 2856, 101, 54, 2855, 53, 2618, 2861,
	2655, 2258, 2656, 2358, 2036, 454, 2859, 2750, 913, 2884,
	2865, 2867, 2869, 1644, 2870, 2584, 2880, 2190, 2365, 2875,
	2874, 2574, 2575, 1273, 1086, 2366, 2367, 2368, 2436, 2160,
	1082, 913, 1226, 1226, 1886, 1887, 1951, 1305, 1719, 937,
	2872, 2947, 2910, 2947, 3120, 969, 2811, 2593, 2586, 2585,
	459, 460, 2814, 461, 2916, 2815, 2896, 2886, 458, 2334,
	1968, 1224, 2942, 1558, 2940, 1524, 3216, 2436, 1226, 3083,
	2911, 2684, 2963, 1458, 1457, 2917, 2076, 2915, 2084, 2087,
	2088, 2089, 2085, 2072, 2086, 2090, 457, 1655, 913, 913,
	1094, 1095, 913, 913, 1092, 1093, 1187, 2942, 1090, 1091,
	1088, 1089, 1186, 2718, 2122, 1777, 2999, 2951, 2950, 1141,
	1084, 3285, 2998, 3189, 2938, 2993, 2812, 3173, 1560, 2960,
	3006, 3171, 2985, 2986, 2961, 2965, 2994, 2995, 3010, 3011,
	2846, 3131, 3109, 3108, 2839, 3106, 3098, 1562, 3009, 3008,
	2764, 2765, 2892, 2759, 2742, 3003, 2741, 2079, 2768, 2726,
	2023, 1235, 1087, 3041, 2725, 2477, 463, 3247, 3246, 3246,
	2771, 2513, 1962, 1835, 928, 3002, 2791, 2792, 2793, 3034,
	3247, 2938, 2938, 2979, 2743, 2938, 2938, 2469, 681, 3004,
	170, 3, 1156, 116, 2084, 2087, 2088, 2089, 2085, 3063,
	2086, 2090, 62, 3059, 2903, 682, 683, 684, 685, 2,
	681, 3039, 3029, 3033, 1203, 2105, 3046, 3047, 3045, 1702,
	3048, 1230, 2958, 2959, 1, 1515, 686, 2454, 2455, 2717,
	2457, 3286, 1795, 2425, 2070, 3058, 1949, 1442, 2614, 1131,
	727, 1464, 1330, 3066, 829, 3065, 922, 913, 1327, 921,
	3064, 1226, 3074, 919, 1414, 577, 1760, 116, 2416, 2390,
	3005, 116, 3215, 3253, 3165, 3218, 1343, 561, 3082, 3100,
	3019, 3169, 116, 3021, 2898, 1800, 974, 2499, 749, 614,
	1224, 3091, 116, 3092, 992, 991, 1001, 1002, 994, 995,
	996, 997, 998, 999, 1000, 993, 588, 1039, 1313, 1306,
	2554, 831, 1026, 3115, 587, 2784, 2285, 2472, 913, 3105,
	3103, 3067, 828, 750, 1744, 3132, 3017, 1274, 1278, 3075,
	3329, 3318, 3300, 3283, 2920, 2921, 3194, 3314, 3233, 3269,
	2938, 2906, 3127, 2904, 2905, 3262, 3190, 913, 2984, 497,
	1681, 3123, 443, 3126, 1226, 3142, 793, 3160, 3163, 2997,
	3134, 1756, 498, 1977, 3182, 3085, 3139, 708, 1959, 709,
	702, 3143, 2301, 3150, 3152, 3154, 3156, 2300, 1383, 3164,
	983, 3149, 1400, 1224, 2570, 2571, 3159, 3172, 1018, 3174,
	3175, 3170, 536, 3168, 1226, 1823, 2282, 2834, 2466, 61,
	60, 2938, 59, 58, 1438, 3199, 1726, 191, 579, 190,
	1435, 2933, 3188, 3162, 1437, 1434, 1436, 1440, 1441, 3220,
	559, 558, 1439, 1224, 557, 3000, 3196, 3222, 556, 555,
	2938, 2083, 2081, 2080, 1665, 1664, 3208, 1724, 3209, 3221,
	3210, 2356, 3211, 2350, 2019, 3212, 2024, 1597, 3200, 3146,
	913, 3147, 2976, 2400, 3226, 1548, 2015, 1614, 3227, 3115,
	991, 1001, 1002, 994, 995, 996, 997, 998, 999, 1000,
	993, 3236, 3238, 2372, 1611, 3252, 3241, 1610, 2364, 3244,
	3242, 2972, 2966, 1641, 2305, 2769, 2946, 3255, 2818, 2819,
	2825, 3260, 854, 913, 3248, 3249, 3250, 3251, 850, 852,
	3261, 853, 851, 2209, 3265, 1996, 3267, 2588, 1900, 1899,
	1897, 1896, 1104, 3040, 2761, 1907, 1905, 2710, 3222, 3281,
	2706, 1768, 1512, 3277, 2257, 1666, 1662, 913, 1961, 913,
	3221, 3042, 3280, 3231, 3287, 1553, 3289, 701, 1957, 98,
	3292, 148, 48, 89, 88, 97, 146, 47, 175, 3255,
	3296, 913, 174, 3298, 177, 3303, 176, 173, 3307, 2139,
	3310, 2552, 1669, 3313, 3093, 1445, 1446, 1447, 1448, 1449,
	1450, 1443, 1444, 2140, 172, 1262, 1366, 171, 3317, 2949,
	675, 3324, 38, 37, 33, 3328, 3327, 12, 11, 34,
	21, 22, 3336, 20, 1334, 19, 25, 31, 3341, 3324,
	3340, 30, 109, 108, 3328, 29, 107, 106, 105, 104,
	1366, 103, 1366, 28, 992, 991, 1001, 1002, 994, 995,
	996, 997, 998, 999, 1000, 993, 2197, 3133, 18, 116,
	42, 41, 116, 116, 1366, 116, 3339, 40, 9, 96,
	94, 3342, 27, 95, 92, 93, 3144, 90, 73, 72,
	992, 991, 1001, 1002, 994, 995, 996, 997, 998, 999,
	1000, 993, 71, 86, 85, 84, 83, 82, 81, 595,
	79, 80, 748, 810, 70, 1821, 69, 68, 337, 67,
	810, 66, 91, 77, 87, 78, 76, 75, 74, 116,
	65, 550, 64, 63, 132, 280, 131, 129, 307, 992,
	991, 1001, 1002, 994, 995, 996, 997, 998, 999, 1000,
	993, 438, 130, 439, 128, 127, 586, 126, 125, 366,
	321, 124, 123, 43, 44, 646, 654, 45, 46, 142,
	141, 143, 145, 147, 144, 139, 137, 543, 140, 138,
	576, 623, 622, 563, 573, 136, 3228, 257, 189, 440,
	56, 441, 564, 99, 572, 565, 569, 568, 566, 567,
	17, 638, 24, 4, 0, 0, 1009, 0, 534, 547,
	0, 551, 992, 991, 1001, 1002, 994, 995, 996, 997,
	998, 999, 1000, 993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 545, 0, 0, 0,
	0, 596, 0, 546, 0, 0, 591, 570, 574, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 571,
	594, 598, 274, 660, 592, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	661, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 397, 0, 0, 644, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 593, 0,
	357, 339, 657, 535, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 1466, 1465, 1467, 409, 287, 240, 241, 449,
	642, 335, 0, 0, 0, 0, 656, 637, 639, 640,
	643, 647, 648, 649, 650, 651, 653, 655, 659, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	597, 0, 0, 325, 326, 327, 328, 645, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 667, 641, 666, 668, 669,
	665, 670, 671, 652, 554, 872, 601, 663, 662, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 630, 607, 608, 609, 552,
	610, 604, 605, 606, 631, 599, 627, 628, 578, 602,
	611, 626, 612, 629, 632, 633, 672, 673, 618, 674,
	615, 634, 625, 624, 613, 600, 635, 636, 585, 580,
	616, 617, 603, 619, 620, 621, 553, 581, 582, 583,
	584, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 0, 872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 880, 884, 886, 888, 890,
	891, 893, 0, 898, 894, 895, 896, 897, 0, 875,
	876, 877, 878, 856, 857, 881, 0, 859, 0, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 871, 873,
	869, 870, 879, 0, 0, 0, 0, 0, 0, 0,
	883, 885, 887, 889, 892, 0, 0, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 858, 0, 0, 0, 848, 874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 880, 884, 886, 888, 890, 891, 893, 0,
	898, 894, 895, 896, 897, 0, 875, 876, 877, 878,
	856, 857, 881, 0, 859, 0, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 871, 873, 869, 870, 879,
	0, 0, 0, 0, 0, 0, 0, 883, 885, 887,
	889, 892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 1669, 1669, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2206, 2207, 116, 0, 0, 0, 0, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 550, 0, 0, 0, 280, 1508, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 586, 0, 0, 366,
	321, 0, 0, 0, 0, 646, 654, 882, 0, 0,
	0, 0, 0, 0, 1693, 0, 0, 543, 0, 0,
	576, 623, 622, 563, 573, 0, 0, 257, 189, 440,
	0, 441, 564, 0, 572, 565, 569, 568, 566, 567,
	0, 638, 0, 0, 0, 0, 0, 0, 534, 547,
	0, 551, 1669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 544, 545, 0, 0, 0,
	0, 596, 0, 546, 0, 0, 1694, 570, 574, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 882, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 571,
	594, 598, 274, 660, 592, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	661, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 397, 0, 0, 644, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 593, 0,
	357, 339, 657, 535, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	642, 335, 0, 0, 0, 0, 656, 637, 639, 640,
	643, 647, 648, 649, 650, 651, 653, 655, 659, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 116,
	116, 367, 390, 402, 419, 422, 0, 116, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	597, 0, 0, 325, 326, 327, 328, 645, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 667, 641, 666, 668, 669,
	665, 670, 671, 652, 554, 0, 601, 663, 662, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 116, 630, 607, 608, 609, 552,
	610, 604, 605, 606, 631, 599, 627, 628, 578, 602,
	611, 626, 612, 629, 632, 633, 672, 673, 618, 674,
	615, 634, 625, 624, 613, 600, 635, 636, 585, 580,
	616, 617, 603, 619, 620, 621, 553, 581, 582, 583,
	584, 166, 595, 0, 405, 406, 407, 428, 391, 0,
	446, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 550, 0, 0, 0, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 439, 0, 0, 1012,
	0, 0, 366, 321, 0, 0, 0, 0, 646, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 0, 576, 623, 622, 563, 573, 0, 0,
	257, 189, 440, 0, 441, 564, 0, 572, 565, 569,
	568, 566, 567, 0, 638, 0, 0, 0, 0, 0,
	0, 534, 547, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 545,
	0, 0, 0, 0, 596, 0, 546, 0, 0, 591,
	570, 574, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 571, 594, 598, 274, 660, 592, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 661, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 0, 0, 0, 397, 0, 0,
	644, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 593, 0, 357, 339, 657, 535, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 642, 335, 0, 0, 0, 0, 656,
	637, 639, 640, 643, 647, 648, 649, 650, 651, 653,
	655, 659, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 658, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 597, 0, 0, 325, 326, 327, 328,
	645, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 667, 641,
	666, 668, 669, 665, 670, 671, 652, 554, 0, 601,
	663, 662, 664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 135, 349, 285, 0, 0, 630, 607,
	608, 609, 552, 610, 604, 605, 606, 631, 599, 627,
	628, 578, 602, 611, 626, 612, 629, 632, 633, 672,
	673, 618, 674, 615, 634, 625, 624, 613, 600, 635,
	636, 585, 580, 616, 617, 603, 619, 620, 621, 553,
	581, 582, 583, 584, 0, 595, 0, 405, 406, 407,
	428, 391, 0, 446, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 550, 0, 0,
	0, 280, 3297, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 439,
	0, 0, 586, 0, 0, 366, 321, 0, 0, 0,
	0, 646, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 0, 0, 576, 623, 622, 563,
	573, 0, 0, 257, 189, 440, 0, 441, 564, 0,
	572, 565, 569, 568, 566, 567, 0, 638, 0, 0,
	0, 0, 0, 0, 534, 547, 0, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 545, 0, 0, 0, 0, 596, 0, 546,
	0, 0, 591, 570, 574, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 571, 594, 598, 274, 660,
	592, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 661, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 589, 0, 0, 0,
	397, 0, 0, 644, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 593, 0, 357, 339, 657, 535,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 642, 335, 0, 0,
	0, 0, 656, 637, 639, 640, 643, 647, 648, 649,
	650, 651, 653, 655, 659, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 597, 0, 0, 325,
	326, 327, 328, 645, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 667, 641, 666, 668, 669, 665, 670, 671, 652,
	554, 0, 601, 663, 662, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 630, 607, 608, 609, 552, 610, 604, 605, 606,
	631, 599, 627, 628, 578, 602, 611, 626, 612, 629,
	632, 633, 672, 673, 618, 674, 615, 634, 625, 624,
	613, 600, 635, 636, 585, 580, 616, 617, 603, 619,
	620, 621, 553, 581, 582, 583, 584, 0, 595, 0,
	405, 406, 407, 428, 391, 0, 446, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	550, 0, 0, 0, 280, 1508, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	438, 0, 439, 0, 0, 586, 0, 0, 366, 321,
	0, 0, 0, 0, 646, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 0, 0, 576,
	623, 622, 563, 573, 0, 0, 257, 189, 440, 0,
	441, 564, 0, 572, 565, 569, 568, 566, 567, 0,
	638, 0, 0, 0, 0, 0, 0, 534, 547, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 544, 545, 0, 0, 0, 0,
	596, 0, 546, 0, 0, 591, 570, 574, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 571, 594,
	598, 274, 660, 592, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 661,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 589,
	0, 0, 0, 397, 0, 0, 644, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 593, 0, 357,
	339, 657, 535, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 642,
	335, 0, 0, 0, 0, 656, 637, 639, 640, 643,
	647, 648, 649, 650, 651, 653, 655, 659, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 597,
	0, 0, 325, 326, 327, 328, 645, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 667, 641, 666, 668, 669, 665,
	670, 671, 652, 554, 0, 601, 663, 662, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 630, 607, 608, 609, 552, 610,
	604, 605, 606, 631, 599, 627, 628, 578, 602, 611,
	626, 612, 629, 632, 633, 672, 673, 618, 674, 615,
	634, 625, 624, 613, 600, 635, 636, 585, 580, 616,
	617, 603, 619, 620, 621, 553, 581, 582, 583, 584,
	0, 595, 0, 405, 406, 407, 428, 391, 0, 446,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 550, 0, 0, 0, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 439, 0, 0, 586, 0,
	0, 366, 321, 0, 0, 0, 0, 646, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 576, 623, 622, 563, 573, 0, 0, 257,
	189, 440, 0, 441, 564, 0, 572, 565, 569, 568,
	566, 567, 0, 638, 0, 0, 0, 0, 0, 0,
	534, 547, 0, 551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 545, 1257,
	0, 0, 0, 596, 0, 546, 0, 0, 591, 570,
	574, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 571, 594, 598, 274, 660, 592, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 661, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 0, 0, 0, 397, 0, 0, 644,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	593, 0, 357, 339, 657, 535, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 642, 335, 0, 0, 0, 0, 656, 637,
	639, 640, 643, 647, 648, 649, 650, 651, 653, 655,
	659, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 658, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 597, 0, 0, 325, 326, 327, 328, 645,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 667, 641, 666,
	668, 669, 665, 670, 671, 652, 554, 0, 601, 663,
	662, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 630, 607, 608,
	609, 552, 610, 604, 605, 606, 631, 599, 627, 628,
	578, 602, 611, 626, 612, 629, 632, 633, 672, 673,
	618, 674, 615, 634, 625, 624, 613, 600, 635, 636,
	585, 580, 616, 617, 603, 619, 620, 621, 553, 581,
	582, 583, 584, 0, 0, 0, 405, 406, 407, 428,
	391, 595, 446, 0, 1843, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 450, 442, 0, 0, 0, 0,
	0, 0, 0, 550, 0, 0, 0, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 439, 0, 0, 586, 0,
	0, 366, 321, 0, 0, 0, 0, 646, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 576, 623, 622, 563, 573, 0, 0, 257,
	189, 440, 0, 441, 564, 0, 572, 565, 569, 568,
	566, 567, 0, 638, 0, 0, 0, 0, 0, 0,
	534, 547, 0, 551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 545, 0,
	0, 0, 0, 596, 0, 546, 0, 0, 591, 570,
	574, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 571, 594, 598, 274, 660, 592, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 661, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 0, 0, 0, 397, 0, 0, 644,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	593, 0, 357, 339, 657, 535, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 642, 335, 0, 0, 0, 0, 656, 637,
	639, 640, 643, 647, 648, 649, 650, 651, 653, 655,
	659, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 658, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 597, 0, 0, 325, 326, 327, 328, 645,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 667, 641, 666,
	668, 669, 665, 670, 671, 652, 554, 0, 601, 663,
	662, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 630, 607, 608,
	609, 552, 610, 604, 605, 606, 631, 599, 627, 628,
	578, 602, 611, 626, 612, 629, 632, 633, 672, 673,
	618, 674, 615, 634, 625, 624, 613, 600, 635, 636,
	585, 580, 616, 617, 603, 619, 620, 621, 553, 581,
	582, 583, 584, 0, 595, 0, 405, 406, 407, 428,
	391, 0, 446, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 550, 0, 0, 0,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 439, 0,
	0, 586, 0, 0, 366, 321, 0, 0, 0, 0,
	646, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 576, 623, 622, 563, 573,
	0, 0, 257, 189, 440, 0, 441, 564, 0, 572,
	565, 569, 568, 566, 567, 0, 638, 0, 0, 0,
	0, 0, 0, 534, 547, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	544, 545, 0, 0, 0, 0, 596, 0, 546, 0,
	0, 591, 570, 574, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 571, 594, 598, 274, 660, 592,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 661, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 0, 0, 397,
	0, 0, 644, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 593, 0, 357, 339, 657, 535, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 642, 335, 0, 0, 0,
	0, 656, 637, 639, 640, 643, 647, 648, 649, 650,
	651, 653, 655, 659, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 597, 0, 0, 325, 326,
	327, 328, 645, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	667, 641, 666, 668, 669, 665, 670, 671, 652, 554,
	0, 601, 663, 662, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	630, 607, 608, 609, 552, 610, 604, 605, 606, 631,
	599, 627, 628, 578, 602, 611, 626, 612, 629, 632,
	633, 672, 673, 618, 674, 615, 634, 625, 624, 613,
	600, 635, 636, 585, 580, 616, 617, 603, 619, 620,
	621, 553, 581, 582, 583, 584, 0, 595, 0, 405,
	406, 407, 428, 391, 0, 446, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 1384, 0, 450, 442, 550,
	0, 0, 0, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 439, 0, 0, 586, 0, 0, 366, 321, 0,
	0, 0, 0, 646, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 576, 623,
	622, 563, 573, 0, 0, 257, 189, 440, 0, 441,
	564, 0, 572, 565, 569, 568, 566, 567, 0, 638,
	0, 0, 0, 0, 0, 0, 0, 547, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 545, 0, 0, 0, 0, 596,
	0, 546, 0, 0, 591, 570, 574, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 571, 594, 598,
	274, 660, 592, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 661, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 589, 0,
	0, 0, 397, 0, 0, 644, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 593, 0, 357, 339,
	657, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 1385, 1386, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 642, 335,
	0, 0, 0, 0, 656, 637, 639, 640, 643, 647,
	648, 649, 650, 651, 653, 655, 659, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 658, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 597, 0,
	0, 325, 326, 327, 328, 645, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 667, 641, 666, 668, 669, 665, 670,
	671, 652, 554, 0, 601, 663, 662, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 630, 607, 608, 609, 552, 610, 604,
	605, 606, 631, 599, 627, 628, 578, 602, 611, 626,
	612, 629, 632, 633, 672, 673, 618, 674, 615, 634,
	625, 624, 613, 600, 635, 636, 585, 580, 616, 617,
	603, 619, 620, 621, 553, 581, 582, 583, 584, 0,
	595, 0, 405, 406, 407, 428, 391, 0, 446, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 550, 0, 0, 0, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 439, 0, 0, 586, 0, 0,
	366, 321, 0, 0, 0, 0, 646, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 623, 622, 563, 573, 0, 0, 257, 189,
	440, 0, 441, 564, 0, 572, 565, 569, 568, 566,
	567, 0, 638, 0, 0, 0, 0, 0, 0, 534,
	547, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 544, 545, 0, 0,
	0, 0, 596, 0, 546, 0, 0, 591, 570, 574,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	571, 594, 598, 274, 660, 592, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 661, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 589, 0, 0, 0, 397, 0, 0, 644, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 593,
	0, 357, 339, 657, 535, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 642, 335, 0, 0, 0, 0, 656, 637, 639,
	640, 643, 647, 648, 649, 650, 651, 653, 655, 659,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 658, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 597, 0, 0, 325, 326, 327, 328, 645, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 667, 641, 666, 668,
	669, 665, 670, 671, 652, 554, 0, 601, 663, 662,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 630, 607, 608, 609,
	552, 610, 604, 605, 606, 631, 599, 627, 628, 578,
	602, 611, 626, 612, 629, 632, 633, 672, 673, 618,
	674, 615, 634, 625, 624, 613, 600, 635, 636, 585,
	580, 616, 617, 603, 619, 620, 621, 553, 581, 582,
	583, 584, 0, 595, 0, 405, 406, 407, 428, 391,
	0, 446, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 550, 0, 0, 0, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 439, 0, 0,
	586, 0, 0, 366, 321, 0, 0, 0, 0, 646,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 0, 0, 576, 623, 622, 563, 573, 0,
	0, 257, 189, 440, 0, 441, 564, 0, 572, 565,
	569, 568, 566, 567, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 547, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	545, 0, 0, 0, 0, 596, 0, 546, 0, 0,
	591, 570, 574, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 571, 594, 598, 274, 660, 592, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 661, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 0, 0, 0, 397, 0,
	0, 644, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 593, 0, 357, 339, 657, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 642, 335, 0, 0, 0, 0,
	656, 637, 639, 640, 643, 647, 648, 649, 650, 651,
	653, 655, 659, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 597, 0, 0, 325, 326, 327,
	328, 645, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 667,
	641, 666, 668, 669, 665, 670, 671, 652, 554, 0,
	601, 663, 662, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 630,
	607, 608, 609, 552, 610, 604, 605, 606, 631, 599,
	627, 628, 578, 602, 611, 626, 612, 629, 632, 633,
	672, 673, 618, 674, 615, 634, 625, 624, 613, 600,
	635, 636, 585, 580, 616, 617, 603, 619, 620, 621,
	553, 581, 582, 583, 584, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 166, 51, 158, 134, 0,
	0, 0, 0, 0, 0, 337, 450, 442, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	151, 0, 280, 0, 160, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	439, 0, 0, 114, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 163, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	133, 157, 164, 0, 100, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 181, 0, 0, 0, 370, 0,
	0, 306, 156, 150, 149, 413, 0, 357, 339, 57,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	152, 153, 154, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 392, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 184, 0, 0, 437, 192, 0, 0, 0,
	155, 0, 193, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 135, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 0, 0, 239, 234, 235, 236, 237, 0, 0,
	0, 405, 406, 407, 428, 391, 337, 194, 39, 182,
	185, 187, 186, 0, 49, 5, 0, 0, 117, 195,
	442, 0, 0, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1045, 0, 0, 188, 0,
	0, 563, 573, 0, 0, 257, 189, 440, 0, 441,
	564, 0, 572, 565, 569, 568, 566, 567, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 571, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 0, 0, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 0,
	0, 0, 166, 51, 158, 134, 0, 0, 0, 0,
	450, 442, 337, 467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 468, 470, 262, 420, 350, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 135, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 872, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 858, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 1931, 1933, 1934, 1935,
	1936, 1937, 1938, 0, 1943, 1939, 1940, 1941, 1942, 0,
	1926, 1927, 1928, 1929, 856, 1910, 1932, 0, 1911, 333,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1923,
	1924, 1921, 1922, 1930, 345, 311, 346, 296, 323, 322,
	324, 883, 885, 887, 889, 892, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 1925, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 882, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 2007, 2010,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2011,
	397, 0, 0, 0, 2006, 0, 2005, 370, 2003, 2008,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 2009, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	0, 0, 239, 234, 235, 236, 237, 337, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 0, 0, 1728,
	0, 0, 0, 0, 280, 0, 0, 307, 450, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 1729, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 978, 979, 980, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 0, 337, 0, 239, 234, 235, 236, 237,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 792, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 799, 800, 0, 0,
	0, 0, 257, 189, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	787, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 777,
	395, 252, 776, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 790, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 791, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 794, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 801, 788, 797, 789, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 337,
	0, 239, 234, 235, 236, 237, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2025, 397, 0, 0, 0, 2030,
	2028, 0, 370, 0, 2029, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 0, 0, 239, 234, 235,
	236, 237, 166, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 0, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 439, 0, 0,
	114, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 1772, 0, 188, 0, 0, 0, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 135, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 0, 0,
	239, 234, 235, 236, 237, 166, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	0, 0, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	439, 0, 0, 114, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 1763, 0, 188, 0, 0,
	0, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 135, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 0, 0, 239, 234, 235, 236, 237, 166, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 0, 0, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 114, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	135, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 799, 800, 0,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	777, 395, 252, 776, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 801, 1686, 797, 1687, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 2429,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 2432, 0, 0,
	2431, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 1229, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 1227, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1225, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 337, 0, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	1223, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 1227, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1225, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3217, 0,
	188, 623, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 1227,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1225, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 1227, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2943, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 0, 0, 239, 234,
	235, 236, 237, 337, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 0, 0, 2095, 0, 0, 0, 0,
	280, 0, 0, 307, 450, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 2097, 0,
	0, 0, 257, 189, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 337,
	0, 239, 234, 235, 236, 237, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 2116, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 1227, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 337, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3306, 0, 188, 0, 0,
	0, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 337, 0, 239, 234, 235, 236, 237, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 623, 0, 0, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3232, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 0, 337, 0, 239, 234, 235, 236, 237,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 257, 189, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 3161, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 337,
	0, 239, 234, 235, 236, 237, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2939, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 337, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	2772, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 337, 0, 239, 234, 235, 236, 237, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 3007, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 0, 337, 0, 239, 234, 235, 236, 237,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 257, 189, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 337,
	0, 239, 234, 235, 236, 237, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 2308, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 337, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 337, 0, 239, 234, 235, 236, 237, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 2599, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 0, 337, 0, 239, 234, 235, 236, 237,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 1227, 0,
	0, 0, 257, 189, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 337,
	0, 239, 234, 235, 236, 237, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 2097, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 337, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 337, 0, 239, 234, 235, 236, 237, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 2132, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 0, 0, 1969, 239, 234, 235, 236, 237,
	337, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	307, 450, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 1654, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 337, 0, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 1227, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 1566, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 1252, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 488, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	489, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 0, 337, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 455,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 257, 189, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 337,
	0, 239, 234, 235, 236, 237, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 337, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 1207, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 337, 0, 239, 234, 235, 236, 237, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 1205, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 529,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 166, 51, 158, 134, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 159, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 160, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 775, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 102, 308, 0,
	349, 285, 0, 163, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 0, 0, 0, 239, 234, 235, 236, 237,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	166, 51, 158, 134, 0, 0, 777, 0, 0, 776,
	0, 450, 442, 0, 0, 0, 0, 0, 159, 119,
	120, 0, 121, 122, 0, 151, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 762, 0, 0, 114, 0,
	0, 0, 0, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	740, 0, 0, 1442, 0, 0, 0, 0, 0, 133,
	157, 164, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 150, 149, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 761, 760, 119, 120, 0, 121, 122,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 735, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 154, 739, 770, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 157, 164, 0, 100,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 155,
	0, 111, 0, 0, 0, 0, 0, 156, 150, 149,
	1438, 0, 767, 771, 57, 0, 1435, 0, 0, 0,
	1437, 1434, 1436, 1440, 1441, 0, 0, 1642, 1439, 0,
	0, 756, 1604, 754, 758, 774, 0, 0, 0, 755,
	752, 751, 0, 757, 742, 743, 741, 744, 745, 746,
	747, 0, 772, 0, 773, 0, 0, 0, 112, 0,
	0, 1644, 1613, 0, 0, 768, 769, 0, 0, 0,
	50, 1645, 1646, 0, 0, 152, 153, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 161, 764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 0, 0, 52,
	0, 110, 0, 0, 0, 155, 0, 111, 0, 0,
	978, 979, 980, 977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1445, 1446, 1447, 1448, 1449, 1450, 1443, 1444, 1635,
	0, 763, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1442,
	0, 0, 0, 0, 0, 0, 113, 39, 0, 0,
	0, 0, 0, 49, 5, 0, 0, 117, 118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 0, 1603,
	1605, 1602, 0, 1599, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 1617,
	1651, 0, 0, 1618, 1620, 1622, 0, 1624, 1625, 1626,
	1630, 1631, 1632, 1634, 1637, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 1627, 1636, 1628, 0, 0, 872,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 39, 0, 0, 0, 0, 1643, 49,
	0, 0, 0, 117, 118, 0, 724, 0, 725, 0,
	0, 1642, 0, 0, 0, 0, 1438, 0, 0, 1600,
	1601, 0, 1435, 0, 0, 0, 1437, 1434, 1436, 1440,
	1441, 0, 0, 0, 1439, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 706, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 1616, 0, 0, 719, 0, 716,
	0, 1615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 3323, 0, 0, 858,
	0, 0, 0, 0, 1621, 0, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1648, 1647, 880,
	884, 886, 888, 890, 891, 893, 0, 898, 894, 895,
	896, 897, 0, 875, 876, 877, 878, 856, 857, 881,
	0, 859, 0, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 871, 873, 869, 870, 879, 0, 0, 0,
	0, 0, 0, 0, 883, 885, 887, 889, 892, 1609,
	0, 0, 0, 1635, 0, 0, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1445, 1446, 1447,
	1448, 1449, 1450, 1443, 1444, 721, 0, 714, 0, 0,
	0, 874, 0, 0, 0, 1650, 718, 717, 1649, 0,
	0, 0, 0, 0, 0, 0, 1642, 0, 0, 0,
	0, 0, 0, 699, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 723, 0, 0, 0,
	0, 713, 0, 0, 0, 712, 0, 0, 1642, 0,
	0, 698, 0, 1617, 1651, 705, 0, 1618, 1620, 1622,
	0, 1624, 1625, 1626, 1630, 1631, 1632, 1634, 1637, 1638,
	1639, 1619, 703, 0, 0, 0, 0, 0, 1627, 1636,
	1628, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 1643, 508, 507, 514, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 512, 0, 513, 517,
	0, 0, 499, 1619, 3062, 704, 0, 0, 1635, 0,
	0, 0, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 0, 508, 507,
	514, 504, 0, 0, 0, 0, 0, 0, 1616, 0,
	511, 512, 0, 513, 517, 1615, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 522, 528, 0,
	0, 0, 0, 527, 0, 0, 0, 0, 0, 1633,
	1635, 0, 0, 508, 507, 514, 504, 0, 1621, 0,
	0, 720, 0, 0, 0, 511, 512, 1623, 513, 517,
	0, 0, 499, 0, 0, 0, 0, 0, 1629, 0,
	526, 0, 522, 528, 0, 0, 0, 0, 527, 0,
	0, 882, 0, 0, 0, 0, 0, 0, 1617, 1651,
	710, 0, 1618, 1620, 1622, 0, 1624, 1625, 1626, 1630,
	1631, 1632, 1634, 1637, 1638, 1639, 0, 0, 0, 0,
	0, 0, 0, 1627, 1636, 1628, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	1617, 1651, 0, 0, 1618, 1620, 1622, 0, 1624, 1625,
	1626, 1630, 1631, 1632, 1634, 1637, 1638, 1639, 500, 502,
	501, 0, 0, 0, 0, 1627, 1636, 1628, 506, 0,
	0, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 0, 1616, 503, 0, 0, 0, 494, 1643,
	1615, 0, 0, 500, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1633, 510, 0, 0, 0, 0,
	0, 0, 525, 1621, 0, 0, 0, 0, 1640, 503,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 502,
	501, 0, 0, 0, 0, 1616, 0, 0, 506, 0,
	0, 0, 1615, 0, 0, 0, 0, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 0, 0, 503, 0, 1633, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 0, 0, 505, 509,
	515, 0, 516, 518, 0, 0, 519, 520, 521, 0,
	0, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 505, 509, 515, 0, 516, 518, 0,
	0, 519, 520, 521, 0, 0, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 505, 509,
	515, 0, 516, 518, 0, 0, 519, 520, 521, 0,
	0, 523, 524,
}

var yyPact = [...]int{
	37272, -1000, -1000, -1000, -317, 9953, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35187,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35187,
	-313, 34641, 34641, -1000, -1000, 2170, -1000, 34094, 11090, 35187,
	312, 311, 35187, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	661, -1000, 33548, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	569, 38311, 36825, 7691, -260, -1000, 2949, -95, 2070, 802,
	809, 940, 940, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 37941, 710, 33002, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 37228, 298, 710, 13281,
	11, 10, 2949, 346, 289, -1000, 1107, 37398, 161, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7691, 7691, 9953, -345, 9953, 7691, 35187, 35187, -1000, -1000,
	-1000, -1000, 569, 38311, 7691, 2070, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 10, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3952, -1000, 1314, -1000, -1000, -1000, -1000,
	-1000, 2575, 1312, 2066, 529, 35187, -1000, 1311, 529, -1000,
	-1000, -1000, 2949, 2949, -1000, 35187, 35187, 69, 1508, -1000,
	329, 350, 340, 1306, -1000, -1000, -1000, -1000, -1000, -1000,
	454, 2908, -1000, 35187, 35187, 2590, 35187, -1000, 1907, 486,
	38356, 2764, 1142, 698, 2620, -1000, -1000, 2567, -1000, 201,
	211, 176, 337, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	215, -1000, 2779, -1000, -1000, 188, -1000, -1000, 180, -1000,
	-1000, -1000, 4, -1000, -1000, -1000, -1000, -1000, -1000, -80,
	-1000, -1000, 865, 1607, 7691, -1000, 1640, -1000, 2368, -1000,
	-1000, -1000, -1000, 4869, 9380, 9380, 9380, 9380, -1000, -1000,
	2378, 7691, 2562, 2558, 2547, -1000, -1000, -1000, -1000, -1000,
	1301, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1709, -1000, -1000, -1000, 8817, -1000, 2545, 2544, 2537, 2536,
	2535, 2534, 2519, 2518, 2516, 2491, 2481, 2480, 2478, 2474,
	2260, 10514, 2473, 2059, 2056, 2472, 2471, 2464, 2055, 2260,
	2260, 2463, 2462, 2459, 2453, 2452, 2451, 2448, 2442, 2440,
	2434, 2420, 2416, 2414, 2411, 2410, 2406, 2405, 2403, 2402,
	2400, 2396, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1275, -1000, 2395, 2752, 2849,
	2291, 2892, 2829, 2827, 2823, 2819, 1859, -1000, -1000, 63,
	-1000, -138, -1000, -1000, 794, -1000, 759, -1000, 35187, 35187,
	35187, 709, 133, 563, 563, 563, 563, 563, 571, 563,
	35187, 659, 656, 652, 563, -1000, -104, -1000, -1000, -1000,
	-1000, -1000, -1000, 1502, 1492, 2685, 745, -1000, -1000, -1000,
	-1000, 1151, 35187, -1000, 2329, 1435, 1435, 2846, 507, 501,
	499, 1435, 372, -1000, 1539, 1539, 1539, 1539, 1435, 396,
	485, 2849, 2849, -9, 1539, -11, 1435, 1435, -11, 1435,
	1435, 1435, 174, -308, -1000, -1000, -1000, 1539, 1539, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2832, 2826, 569, 569,
	35187, 134, 35187, 569, 569, 569, 580, -54, 36279, 35733,
	1907, 477, 476, 1155, 1482, -1000, 1364, 35187, 35187, 1364,
	1364, 17700, 17154, -1000, 35187, -1000, 2849, 2291, -1000, 2227,
	2595, 2219, 2291, 569, 569, 569, 569, 569, 154, 569,
	569, 569, 569, 35187, 35187, 32456, 569, 569, 6558, 6558,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9953,
	1857, 1756, 160, -71, -312, 210, -1000, -1000, 35187, 2743,
	159, -1000, -1000, -1000, 2275, -1000, 2327, 2327, 2327, 2327,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2327,
	2327, 2339, 2394, -1000, -1000, 2320, 2320, 2320, 2275, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2337, 2337, 2338, 2338, 2337, 35187,
	7691, 35187, 2759, 327, 2393, -1000, 35187, 324, 2849, 2752,
	2849, -1000, -1000, 1300, 1856, 2054, -1000, -1000, 329, 1390,
	-1000, 852, -1000, -1000, -1000, -1000, 35187, -80, 320, -1000,
	-1000, 2047, 2392, -1000, 480, 954, 1288, -1000, 155, 38401,
	28081, 1907, 28081, 35187, -1000, -1000, -1000, -1000, -1000, -1000,
	1, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 172, -1000, 7691, 7691, 7691, 7691,
	7691, -1000, 515, 8254, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 9380, 9380, 9380, 9380, 9380, 9380, 9380, 9380, 9380,
	9380, 9380, 9380, 2377, 1452, 9380, 9380, 9380, 9380, 2595,
	2625, 1154, 231, -1000, -1000, -1000, -1000, -1000, 1521, 1607,
	7691, 7691, 7691, 35187, -1000, -1000, 37662, 7691, 7691, 37306,
	7691, 2802, 7691, 7691, 7691, 2217, 3396, 35187, 7691, -1000,
	2215, 2213, -1000, -1000, 1645, 7691, -1000, -1000, 7691, -1000,
	-1000, 7691, 9380, 7691, -1000, -1000, -1000, 2800, 2802, 2802,
	1522, 7691, 7691, 2802, 2802, 2802, 1518, 2802, 2802, 2802,
	2802, 2802, 2802, 2802, 2802, 2212, 2208, 2205, 2849, -260,
	5995, -1000, -266, 2752, 7691, -1000, -1000, 7691, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2053, 2050, -325, -38,
	798, 776, 780, -1000, 2791, -1000, 2386, 2385, 1296, 563,
	-1000, 563, 563, -145, 35187, 1562, 28081, 35187, 35187, 1907,
	35187, 35187, -164, 563, 563, 563, 35187, -1000, 2697, 28081,
	2690, 580, -1000, 35187, 1151, 2789, 35187, 2880, 9380, 9380,
	-1000, 31910, 1539, 1435, 1435, -1000, -1000, 35187, -1000, -1000,
	-1000, 1539, 35187, 1539, 1539, 2880, 1539, -1000, -1000, -1000,
	1435, 1435, -1000, -1000, -1000, -1000, 1539, 1539, -1000, -1000,
	2880, 35187, -1, 2880, 2880, 2, -1000, -1000, -1000, 35187,
	35187, 563, 35187, -1000, 35187, 35187, -1000, -1000, 35187, 35187,
	37661, 35187, 31364, 2817, -1000, 28081, 35187, 35187, 25351, -1000,
	1091, -1000, -42, -1000, -47, -54, 1364, -54, 1364, -1000,
	479, 472, 16062, 422, 28081, 4306, -1000, -1000, 1364, 1364,
	4306, 4306, 1324, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1143, -1000, 173, 2752, -1000, -1000, -1000, -1000, -1000, 35187,
	35187, 28081, 1907, 35187, 569, 35187, 35187, 35187, 35187, -1000,
	2384, -1000, 2763, 35187, 35187, 1252, -1000, -1000, 12735, 1285,
	1252, -1000, 1573, -1000, 7691, 9953, -288, 7691, 9953, 9953,
	7691, 9953, -1000, 7691, 142, -1000, -1000, -1000, -1000, 1842,
	-1000, 1830, -1000, -1000, -1000, -1000, -1000, 2049, 2049, -1000,
	1821, -1000, -1000, -1000, -1000, 1808, -1000, -1000, 1807, -1000,
	-1000, -1000, 2201, 865, -1000, 2043, 2619, -261, -1000, 14953,
	35187, 35187, -1000, -1000, -261, -1000, 14390, 35187, 2752, -1000,
	2752, 35187, -1000, 2842, -1000, 329, 273, -1000, -1000, -1000,
	-1000, -1000, -1000, 1283, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1140, -1000, 35187, -1000, -1000, 155, 28081,
	29173, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 212, -1000,
	-1000, 171, -1000, 634, 108, 1369, -1000, -1000, 149, 175,
	73, 679, 1607, -1000, 1551, 1551, 1582, -1000, 543, -1000,
	-1000, -1000, -1000, 2378, -1000, -1000, -1000, 1769, 3064, -1000,
	1603, 1603, 1333, 1333, 1333, 1333, 1333, 1477, 1477, -1000,
	-1000, -1000, 4869, 2377, 9380, 9380, 9380, 9380, 547, 547,
	3377, 3304, -1000, 7691, 1554, -1000, 7691, 2361, 2224, 1302,
	1255, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2198, 2195, 2134, 2907, 2193, 7691, -1000, -1000, 1368,
	1366, 1365, -1000, 1869, 7128, -1000, -1000, -1000, 2192, 1250,
	2184, -1000, -1000, -1000, 2180, 1361, 899, 2178, 2065, 2177,
	1129, 7691, 7691, 7691, 2168, 1346, 1341, 7691, 7691, 7691,
	7691, 2167, 7691, 7691, 7691, 7691, 7691, 7691, 7691, 7691,
	32, 32, 32, -1000, -1000, 1339, -1000, 1607, -1000, 2041,
	-1000, 1128, 1125, -1000, 1935, -1000, -1000, -1000, 2013, -1000,
	-1000, 785, 757, 752, 35187, 941, 11636, 35187, 35187, 35187,
	35187, 563, 137, -1000, 2761, 1126, -1000, 108, -92, 318,
	889, 2589, 2906, 2375, 35187, 35187, 35187, 2786, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 30818, -1000, 2370, 1337,
	-1000, -1000, 7691, -1000, -1000, 2584, 35187, 35187, 2880, 2880,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 35187, 2880, 2880,
	1435, 1539, -1000, -1000, 1539, -1000, -1000, 1539, -1000, 1231,
	-1000, 35187, -1000, -1000, -1000, 2786, 2329, 1102, -1000, 686,
	553, 553, 813, 602, 2890, 13827, -1000, 1441, 1062, 629,
	2722, 195, -1000, 1441, -206, 1441, 1441, 1441, 1441, 1441,
	1441, 1441, 417, 415, 1441, 1441, 1441, 1441, 1441, 1441,
	1441, 1441, 1441, 1441, 1441, 806, 1441, 1441, 1441, 1441,
	1441, -1000, 1441, 2348, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 469, 131, 2813, 237, 229, 1126, 2806, 254, 2877,
	1049, -1000, -1000, -1000, -1000, 19891, 19891, 15516, 19891, -1000,
	1395, -54, -50, -1000, -1000, 1091, 4306, 1091, 4306, -1000,
	-1000, 589, -1000, -1000, 889, -1000, 35187, 35187, -1000, -1000,
	2347, 1491, -1000, -1000, 10514, -1000, 4306, 4306, -1000, -1000,
	20437, 35187, -1000, -82, -1000, -68, 2841, 1009, -1000, -1000,
	1040, 889, 2614, 35187, 1009, 1009, -1000, -1000, 11636, 35187,
	-1000, -1000, 2880, 6558, -1000, 25351, -1000, -1000, 30265, -1000,
	29719, 2880, 1525, -1000, 9953, 1734, 152, -1000, 196, -322,
	148, 1588, 147, 1607, -1000, -1000, 2166, 2164, 1336, -1000,
	1327, 2157, 1323, 1315, -1000, -20, -1000, 2750, 901, -1000,
	2343, -1000, 1309, 2682, -1000, 1001, -1000, 1490, 1308, -1000,
	901, 1304, 2681, 1001, 2841, -1000, 1220, 67, -1000, -1000,
	35187, 2047, 1303, 29173, 949, -1000, 583, 1219, 1188, -1000,
	28081, 177, 28081, -1000, 28081, -1000, -1000, 317, -1000, 35187,
	2739, -1000, -1000, -1000, 2013, 1489, -335, -1000, -1000, -1000,
	-1000, -1000, 1286, -1000, 547, 547, 3377, 3255, -1000, 9380,
	-1000, 9380, 2585, 1517, -1000, 7691, 1718, 3855, 3855, 1214,
	18792, 35187, -1000, -1000, 7691, 7691, -1000, 2578, -1000, -1000,
	-1000, -1000, 7691, 7691, 1967, -1000, 35187, -1000, -1000, -1000,
	-1000, 18792, -1000, 9380, -1000, 7691, 1103, 2573, 1266, 32,
	32, 32, 2563, 2542, 2527, 1263, 32, 2523, 2512, 2469,
	2460, 2455, 2438, 2408, 2352, -1000, 2342, -1000, -1000, 5995,
	-1000, -20, 7691, 7691, 7691, 2718, -1000, -1000, 120, -1000,
	1486, -1000, -1000, -1000, 755, 153, 2153, 972, -1000, -1000,
	35187, -1000, -1000, -1000, 2152, 970, -1000, -1000, -1000, 37929,
	2327, 2327, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2327, 2327, 2339, -1000, -1000, 2320, 2320, 2320, 2275,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2337,
	2337, 2338, 2338, 2337, -1000, 2329, 2329, 264, 35187, 44,
	1441, -1000, 490, 28081, 456, -1000, 35187, 1711, 1480, 2612,
	336, 2733, 35187, 25897, 2336, 2334, 2333, 305, 37929, 35187,
	1058, -1000, 1171, 37398, -1000, 35187, 1607, -1000, 1907, -1000,
	1435, -1000, -1000, 2880, 1251, -1000, -1000, 2880, 1435, 1435,
	1539, 35187, -1000, 305, 2785, 37661, -1000, 35187, -1000, -1000,
	-1000, 673, -1000, 788, 563, 35187, 1614, 788, 1606, 2331,
	-1000, -1000, 35187, 35187, 35187, 35187, -1000, -1000, 35187, -1000,
	35187, 35187, 35187, 35187, -1000, 35187, 35187, -1000, 35187, 1605,
	1602, 2738, -1000, 1441, 1441, 719, -1000, -1000, 465, -1000,
	1798, 1795, 1786, 1784, 2040, 2039, 2036, 1441, 1441, 1783,
	2035, 28627, 2033, 986, 1778, 1775, 1774, 1763, 2032, 937,
	-1000, 2031, 1759, 1758, 1742, 35187, 2330, 1960, -1000, -1000,
	44, 1441, 213, 35187, 1479, 490, 315, 1739, 16608, 35187,
	25351, 25351, 25351, 25351, -1000, 2662, 2657, -1000, 2639, 2632,
	2633, 35187, 25351, 2329, -1000, 28627, -1000, -1000, -1000, 2595,
	1260, 2771, 808, 7691, -1000, -1000, -51, -70, -1000, -1000,
	-1000, 28081, 2029, 422, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2923, 35187, 35187, 570, 2147, -1000, 2897, -1000,
	969, -1000, -1000, 1168, -1000, 2897, 1530, -318, 9953, 1456,
	1367, -1000, 7691, 9953, 7691, -290, 214, -295, -1000, -1000,
	-1000, 2028, -1000, -1000, -1000, 1772, -1000, 1762, 42, 51,
	1601, -261, 5995, 339, 35187, -261, 35187, 5995, -1000, 35187,
	335, -261, -1000, 35187, 1750, -1000, -1000, -1000, 2905, 28081,
	1907, 1343, 27535, -1000, 169, -1000, 199, 496, 2023, -1000,
	642, 116, 2021, 2013, -1000, -1000, -1000, 9380, -1000, -1000,
	-1000, -1000, 1607, 7691, 2145, -1000, 737, 737, 2144, 2136,
	-1000, 2327, 2327, -1000, 2275, 2320, 2275, 737, 737, 2133,
	-1000, 1923, 2344, -1000, 2216, 2197, 7691, -1000, 2132, 3219,
	1097, -110, 32, 32, -1000, -1000, -1000, -1000, 32, 32,
	32, 32, -1000, 32, 32, 32, 32, 32, 32, 32,
	32, 533, -1000, 42, 1607, 1607, -1000, -1000, 2737, -1000,
	2013, 2008, -1000, 2004, 1986, 941, 37929, 665, 11636, 2735,
	2775, 2774, 12182, 2773, 2317, 2315, 1878, -1000, -1000, -1000,
	26989, 429, -1000, -1000, -1000, 568, 198, 1745, 474, -1000,
	35187, 254, 2707, 1476, 1982, 35187, -1000, -1000, -1000, -1000,
	-1000, 2733, -1000, 1070, 283, 1234, -1000, 1441, 1441, 12182,
	12182, 12182, 301, 1463, -1000, 529, 1056, 1167, 25351, 35187,
	-1000, 24805, 2115, -1000, 889, 2880, -1000, 35187, -1000, 2880,
	2880, 1435, -1000, 301, 347, -1000, 2716, 37929, -1000, 35187,
	-1000, 35187, -1000, 35187, 35187, 563, 7691, 2716, 35187, 576,
	-1000, -1000, 891, 281, 567, 567, 962, -1000, 2758, -1000,
	-1000, -1000, 35187, -1000, -1000, -1000, -1000, -1000, -1000, 18792,
	18792, 2801, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1981, 1980, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 35187, 1213, -1000, 1472, 1878,
	26989, 1466, 1364, 1978, 429, 1711, 1465, -1000, 1976, -1000,
	903, 35187, 35187, -1000, 1028, -1000, 1459, 2586, 2601, 2586,
	-1000, -1000, -1000, -1000, 2654, -1000, 2645, -1000, -1000, 1028,
	-1000, -1000, -1000, -1000, -1000, 808, -1000, 2840, 788, 788,
	788, 2114, -1000, -1000, -1000, 949, 2113, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2895, 2889, 26443, 2895,
	-1000, -318, 1516, -1000, 1708, 145, 1575, 35187, -1000, -1000,
	-1000, 2111, 2110, -268, 60, 2886, 2884, 2920, -1000, 2097,
	939, -261, -1000, -1000, 901, -1000, -1000, -1000, -261, -1000,
	901, -1000, -1000, 1907, -1000, 194, -1000, -1000, -1000, -1000,
	-1000, -1000, 94, -1000, 35187, -1000, 935, 106, -1000, 1607,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7691, -1000, -1000, -1000,
	2146, -1000, -1000, 7691, 2096, 1973, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2927, -1000, 2883, -268, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37929, -1000, 1577, 347, 347, 2095, 914, -1000,
	-1000, -1000, -1000, 347, 23713, 12182, -1000, 1970, 107, -1000,
	-1000, -1000, 1968, 1966, 1744, -1000, -1000, 1740, 1289, 117,
	-1000, -1000, -1000, -1000, -1000, -1000, 1739, 1723, 1457, -337,
	-1000, 2297, -1000, 1441, 1441, 1441, 35187, -1000, 25897, 1577,
	1577, 2091, 2090, 2089, 538, 1422, 1421, -1000, 1741, 19891,
	25351, 24805, 1024, -1000, 1162, -1000, -1000, -1000, 2880, -1000,
	-1000, 2880, 538, -1000, -1000, -1000, 35187, 249, 2296, -1000,
	2294, 2582, 341, 2287, 2284, 35187, 2078, -1000, 2716, 35187,
	579, 2726, -1000, -1000, -1000, -1000, -1000, 378, -1000, 35187,
	-1000, -1000, 1322, -1000, 18792, -1000, -1000, 1208, -1000, 1960,
	1955, -1000, 107, 1954, 4306, -1000, -1000, 2707, 1952, -1000,
	35187, 903, 903, 2927, 35187, 5995, -1000, -1000, 7691, 2283,
	-1000, 7691, -1000, -1000, -1000, -1000, -1000, 2281, 2709, -1000,
	-1000, -1000, -1000, -1000, -1000, 7691, 7691, -1000, -1000, 560,
	9953, -297, 208, -1000, -1000, -1000, -271, 1950, -1000, -1000,
	2882, 1948, 1895, 35187, -1000, 901, 901, 889, -1000, -1000,
	2, 451, -1000, 1979, -1000, 1899, 32, -1000, 156, 7691,
	-271, -156, -1000, -1000, -175, -175, -186, 12182, -1000, 1207,
	-1000, 1441, 1441, 2087, -1000, -1000, 310, -1000, -1000, 243,
	-1000, -1000, 1710, 481, -1000, -1000, -1000, 1943, 1636, 1906,
	23167, 18792, 19338, 1941, -1000, -1000, -1000, -1000, 38252, 172,
	38252, 817, 1420, -1000, 1728, -1000, 1727, -1000, 2880, 1024,
	1162, -1000, -1000, 1320, -1000, -1000, 817, -1000, -1000, 249,
	-1000, -1000, 1624, 9380, -1000, -1000, 1938, 19338, 666, 1455,
	1453, 692, 2280, -1000, 383, 2919, -1000, -1000, -1000, 715,
	2277, -1000, 1599, 1593, -1000, 35187, -1000, 23167, 23167, 330,
	330, 23167, 23167, 2276, 567, -1000, -1000, 9380, -1000, -1000,
	-1000, -1000, 1441, 1319, -1000, -1000, -1000, -1000, -1000, -1000,
	1723, -1000, -1000, 2849, -1000, -1000, 1607, 35187, 1607, 24259,
	-1000, 2879, 2878, 1607, 865, -1000, -318, 35187, 35187, -279,
	1714, -1000, 1933, 55, -1000, -1000, 868, -282, 41, 70,
	1449, -1000, -1000, -1000, 2084, -1000, 930, -1000, -1000, -1000,
	865, -279, 35187, -1000, 333, -1000, -1000, -1000, -1000, 23713,
	1577, 1577, -186, 494, 1931, -1000, -1000, 241, -1000, -1000,
	-1000, -1000, -1000, 104, -1000, 1448, 1203, -1000, 2275, 7691,
	-1000, -1000, -1000, -1000, -1000, 524, 38190, -1000, 1062, -1000,
	2, 524, 448, 230, -1000, 1705, -1000, -1000, 2927, -1000,
	446, -1000, -1000, 3377, -1000, -1000, -1000, -1000, -1000, -1000,
	1930, 1925, -1000, -1000, -1000, -1000, -1000, 1698, 2267, -105,
	2799, 1924, -1000, -1000, 2266, 1195, 1189, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1149, 1146, 23167, -1000, -1000, 3377,
	18792, 1441, -1000, -1000, 1134, 1119, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2265, -1000, -1000, 2876, -1000, 1917, 577,
	45, 70, -1000, 2875, 52, 2873, 2872, 1908, -1000, -1000,
	575, -263, 30, 29, 28, -1000, -1000, -1000, 7691, -1000,
	2770, -1000, 382, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	83, -1000, -1000, -1000, 1906, 1903, -1000, 23167, 2758, 1892,
	331, 2871, 38252, -1000, 1441, -1000, 331, -1000, 303, -1000,
	1402, -1000, 1681, -1000, 2849, -1000, 299, -1000, -1000, -1000,
	2079, 7691, 2260, 1441, 1972, -151, 23167, 2580, 2565, 2529,
	2514, 1078, -1000, 18792, -1000, -1000, 22621, 35187, 1895, -1000,
	2250, 1680, 60, 46, 2861, -1000, 1895, 2857, 1895, 1895,
	-1000, 1570, -1000, 24, 22, 20, -1000, -1000, -1000, -1000,
	1902, 167, -1000, -1000, -1000, 233, -1000, -1000, 2758, -1000,
	2853, 431, -1000, 18792, -1000, -1000, -1000, 1674, -1000, -1000,
	-1000, -1000, 1779, -1000, 35187, -1000, 2600, -1000, 158, 1076,
	233, 330, 233, 330, 233, 330, 233, 330, 164, -1000,
	-1000, -1000, 1067, -1000, -1000, 2796, 18246, 38, -1000, -1000,
	-1000, 1901, -1000, 1895, -1000, -1000, 575, -1000, -1000, -1000,
	-1000, -1000, -1000, 1441, 1788, 276, -1000, -1000, -1000, 22075,
	359, 369, 363, -1000, 489, -1000, -1000, -1000, 567, -1000,
	-1000, 2576, 2251, 2903, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 35187, -1000, 35187, -1000, 1063, -1000,
	-1000, -1000, 942, -1000, -1000, -1000, -1000, -1000, 1662, -1000,
	35187, -1000, 35187, 343, 1659, 9380, 2240, 9380, 2237, 367,
	2236, -1000, -1000, 2916, -1000, 2904, 784, 784, 233, 233,
	233, 233, -1000, 841, -1000, 1434, -1000, 21529, 35187, -1000,
	-1000, 1050, 2235, 2851, -1000, 2899, 35187, 2446, 35187, 2234,
	1372, 9380, -1000, -1000, -1000, 1682, 389, -1000, 35187, 5432,
	-1000, 931, -1000, -1000, 495, 351, -1000, 1030, -1000, 1017,
	20983, 1656, 2248, -1000, -1000, -1000, -1000, -1000, 1607, 35187,
	1010, -1000, 35187, 338, -1000, -1000, -1000, 1008, -1000, -1000,
	-1000, -1000, 495, 2678, -1000, 1655, -1000, -1000, 37995, 645,
	-1000, -1000, 37995, 332, -1000, 484, 2071, -1000, -1000, 1005,
	-1000, 35187, 716, 7691, -1000, 332, 38252, -1000, 7691, 977,
	-1000, 38252, 946, -1000, -1000,
}

var yyPgo = [...]int{
	0, 155, 2940, 243, 161, 3503, 86, 241, 232, 217,
	240, 3502, 3500, 3493, 2757, 2755, 3490, 3485, 3479, 3478,
	3476, 3475, 3475, 3474, 3473, 3472, 3471, 3470, 3469, 3468,
	3467, 3464, 3463, 3462, 3461, 3458, 3457, 3455, 3454, 3452,
	3437, 3436, 3434, 239, 3433, 3432, 3430, 3428, 3427, 3426,
	3425, 3424, 3423, 3422, 3421, 3419, 3417, 3416, 3414, 3412,
	3411, 3410, 3408, 3407, 3406, 3405, 3404, 3403, 3402, 3389,
	3388, 3387, 3385, 3384, 3383, 214, 3382, 2754, 3380, 3379,
	3378, 3377, 3371, 3370, 3368, 210, 3353, 3351, 3349, 3348,
	3347, 3346, 3345, 3343, 3342, 3341, 3337, 238, 3336, 3335,
	3334, 3333, 3331, 3330, 225, 3329, 157, 204, 3328, 3327,
	3324, 3323, 3322, 3320, 233, 218, 68, 3319, 44, 3317,
	212, 3315, 128, 3314, 131, 3313, 3299, 3297, 3296, 3294,
	3292, 3288, 3287, 3286, 3285, 3284, 3283, 3282, 3281, 3279,
	3278, 92, 3277, 255, 3275, 71, 3271, 3268, 117, 314,
	182, 247, 2103, 250, 236, 178, 164, 85, 3266, 2765,
	3265, 140, 223, 138, 23, 3264, 165, 3262, 137, 43,
	31, 245, 127, 61, 139, 109, 3261, 224, 98, 96,
	3260, 3257, 175, 253, 180, 3256, 112, 3255, 3254, 3253,
	3252, 198, 172, 3251, 3250, 114, 3249, 3248, 95, 3247,
	67, 192, 147, 186, 3245, 242, 107, 119, 108, 168,
	3243, 130, 3242, 3241, 3239, 3238, 166, 3232, 189, 135,
	64, 3230, 3229, 3228, 66, 3226, 47, 3225, 3224, 32,
	3223, 57, 3222, 3221, 3218, 3217, 3214, 3213, 3197, 3196,
	3195, 3193, 3192, 69, 3191, 3189, 15, 16, 18, 3188,
	26, 3187, 149, 3186, 3184, 3183, 87, 79, 3181, 81,
	2, 48, 89, 3177, 219, 163, 93, 134, 3175, 434,
	3174, 3173, 3172, 141, 3171, 582, 3169, 3168, 3164, 3161,
	3160, 83, 3159, 215, 49, 3153, 118, 120, 3151, 36,
	51, 216, 193, 3149, 3148, 3147, 302, 211, 90, 29,
	0, 3146, 142, 3143, 3142, 3140, 246, 3139, 229, 191,
	152, 209, 259, 222, 3138, 3137, 70, 3136, 144, 45,
	56, 125, 8, 22, 167, 3135, 13, 170, 3132, 201,
	3128, 148, 42, 123, 3125, 3124, 28, 261, 3122, 3120,
	3118, 111, 3117, 3112, 150, 74, 3110, 3109, 3108, 3107,
	34, 3105, 35, 25, 3104, 132, 3103, 249, 3102, 184,
	124, 171, 159, 153, 213, 228, 75, 72, 3101, 1535,
	133, 91, 17, 3099, 221, 3096, 190, 116, 3092, 77,
	3090, 248, 385, 203, 3089, 176, 7, 41, 33, 3086,
	9, 3085, 197, 202, 3084, 3083, 21, 55, 3081, 19,
	3079, 3078, 3077, 3076, 5, 3073, 3072, 3071, 1, 4,
	3070, 3, 205, 154, 106, 84, 62, 3069, 46, 126,
	3068, 143, 173, 151, 3067, 88, 3066, 3064, 3063, 811,
	3062, 252, 3061, 3057, 3056, 3055, 3054, 3051, 3050, 3049,
	3048, 110, 38, 3047, 3046, 3029, 3028, 73, 121, 3027,
	3026, 3025, 3024, 37, 169, 3023, 20, 3021, 30, 27,
	39, 3020, 115, 3019, 12, 179, 3017, 3016, 14, 3015,
	3014, 10, 11, 3013, 3012, 105, 3010, 82, 24, 146,
	97, 3009, 3008, 80, 220, 122, 3006, 3005, 234, 235,
	200, 3004, 129, 226, 251, 3003, 207, 2999, 2998, 2996,
	2994, 2992, 2991, 982, 2990, 2989, 231, 65, 99, 101,
	2988, 2986, 2984, 78, 145, 104, 102, 54, 76, 2983,
	100, 196, 2982, 177, 2980, 2979, 94, 2978, 2977, 2976,
	2975, 2974, 174, 2971, 2969, 181, 227, 2965, 2964, 2959,
	2952, 244, 317, 2942,
}

//line mysql_sql.y:10430
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 531, 539, 539, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 112, 112, 111, 529, 529, 529, 530,
	530, 108, 129, 128, 131, 131, 130, 130, 127, 127,
	123, 126, 126, 125, 125, 124, 119, 121, 121, 120,
	122, 122, 109, 97, 110, 474, 474, 473, 473, 472,
	472, 426, 426, 471, 471, 471, 470, 470, 470, 469,
	469, 468, 468, 467, 467, 465, 465, 466, 464, 463,
	463, 463, 461, 461, 461, 457, 457, 459, 458, 458,
	460, 452, 452, 455, 455, 453, 453, 453, 453, 456,
	451, 451, 451, 450, 450, 96, 96, 96, 371, 371,
	95, 95, 385, 385, 385, 385, 385, 383, 383, 383,
	383, 383, 383, 382, 382, 381, 381, 386, 386, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 86,
	86, 86, 86, 86, 91, 91, 91, 536, 536, 535,
	535, 537, 537, 537, 537, 538, 538, 89, 89, 89,
	90, 380, 380, 380, 87, 88, 88, 370, 370, 375,
	375, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 379, 379, 379, 377, 377, 376,
	376, 378, 378, 80, 80, 80, 83, 82, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 81, 81, 81,
	81, 81, 81, 76, 76, 76, 76, 76, 75, 75,
	77, 77, 367, 367, 366, 92, 92, 93, 533, 533,
	532, 534, 534, 534, 534, 94, 100, 100, 100, 100,
	100, 100, 100, 99, 99, 102, 102, 101, 103, 85,
	85, 85, 85, 85, 85, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 499, 499, 499, 501, 501, 304,
	305, 540, 307, 303, 303, 303, 495, 495, 496, 497,
	498, 498, 498, 98, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 74, 79, 251, 251, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 239,
	239, 239, 234, 234, 234, 234, 235, 235, 236, 236,
	237, 237, 237, 237, 238, 238, 297, 297, 256, 256,
	256, 258, 258, 257, 255, 253, 253, 253, 253, 253,
	253, 254, 254, 254, 259, 259, 72, 78, 78, 78,
	512, 512, 73, 523, 523, 429, 429, 318, 318, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 434, 435, 314, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 50, 53, 49,
	49, 49, 356, 356, 48, 541, 541, 292, 292, 61,
	60, 52, 62, 63, 64, 65, 66, 67, 47, 59,
	59, 59, 59, 59, 59, 59, 59, 70, 70, 446,
	446, 543, 543, 543, 68, 69, 428, 428, 428, 58,
	57, 56, 55, 54, 54, 46, 46, 45, 45, 51,
	135, 136, 311, 311, 311, 313, 313, 309, 542, 542,
	399, 399, 312, 312, 44, 44, 44, 44, 71, 310,
	310, 291, 308, 308, 308, 12, 12, 10, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 25, 26, 28, 364, 364, 361, 27, 19, 18,
	18, 22, 21, 17, 17, 20, 23, 24, 24, 9,
	9, 9, 9, 14, 14, 15, 156, 156, 206, 206,
	507, 507, 503, 503, 504, 504, 504, 505, 505, 506,
	506, 104, 440, 440, 440, 440, 440, 440, 8, 178,
	178, 439, 439, 439, 439, 439, 439, 368, 368, 484,
	484, 484, 485, 177, 177, 172, 172, 441, 441, 333,
	486, 486, 449, 449, 448, 448, 447, 447, 175, 175,
	176, 176, 159, 159, 115, 115, 454, 454, 454, 454,
	462, 462, 425, 425, 243, 243, 284, 284, 285, 285,
	149, 149, 150, 150, 150, 150, 150, 150, 492, 492,
	494, 494, 493, 174, 174, 170, 170, 171, 171, 171,
	169, 169, 168, 167, 167, 166, 164, 164, 164, 165,
	165, 165, 182, 182, 152, 152, 152, 151, 151, 151,
	151, 151, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 153, 153, 500, 500, 500, 430,
	430, 430, 437, 437, 266, 266, 267, 267, 265, 265,
	154, 154, 155, 155, 155, 155, 264, 264, 263, 157,
	157, 163, 162, 162, 158, 158, 158, 158, 274, 274,
	273, 273, 273, 273, 107, 113, 113, 114, 181, 181,
	272, 271, 271, 271, 180, 180, 179, 179, 173, 173,
	161, 161, 161, 161, 270, 160, 268, 528, 528, 527,
	527, 526, 524, 524, 524, 525, 525, 525, 525, 476,
	476, 476, 476, 476, 298, 298, 298, 302, 302, 301,
	301, 301, 301, 301, 306, 7, 7, 7, 7, 7,
	7, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 38, 190, 191, 39, 192, 192, 193, 193, 194,
	194, 195, 196, 197, 197, 197, 197, 37, 183, 183,
	184, 184, 185, 185, 186, 187, 187, 187, 189, 188,
	36, 36, 29, 142, 142, 143, 143, 143, 145, 145,
	240, 240, 240, 144, 144, 146, 146, 146, 508, 511,
	509, 509, 513, 513, 513, 514, 514, 514, 514, 515,
	515, 30, 132, 137, 518, 518, 518, 517, 517, 519,
	519, 520, 520, 288, 288, 289, 289, 140, 141, 141,
	139, 134, 148, 148, 148, 148, 148, 133, 138, 510,
	516, 516, 516, 365, 365, 362, 363, 363, 360, 359,
	359, 359, 522, 522, 521, 521, 521, 299, 299, 31,
	355, 355, 357, 358, 358, 358, 349, 349, 349, 349,
	35, 353, 353, 354, 354, 354, 354, 354, 350, 350,
	352, 352, 348, 348, 348, 348, 348, 34, 147, 147,
	347, 347, 344, 344, 342, 342, 343, 343, 341, 341,
	341, 345, 345, 42, 41, 41, 41, 346, 346, 33,
	33, 33, 117, 116, 116, 116, 116, 287, 287, 286,
	286, 118, 40, 218, 218, 413, 413, 413, 413, 413,
	432, 432, 432, 414, 414, 414, 415, 415, 415, 417,
	417, 417, 416, 416, 416, 416, 416, 431, 431, 433,
	433, 433, 387, 387, 388, 388, 388, 391, 391, 405,
	405, 406, 406, 404, 404, 411, 411, 410, 410, 409,
	409, 408, 408, 407, 407, 407, 407, 402, 402, 401,
	401, 389, 389, 389, 389, 389, 390, 390, 390, 400,
	400, 403, 403, 228, 228, 262, 262, 226, 226, 227,
	227, 261, 261, 224, 224, 225, 225, 225, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 482, 482, 483, 230, 230, 241, 241,
	241, 241, 241, 241, 229, 229, 231, 231, 207, 207,
	205, 205, 198, 198, 199, 199, 200, 200, 200, 204,
	204, 203, 203, 203, 203, 201, 201, 202, 202, 202,
	202, 202, 202, 373, 373, 479, 479, 480, 480, 475,
	475, 475, 478, 478, 478, 478, 478, 481, 481, 481,
	477, 477, 208, 282, 282, 282, 300, 300, 300, 300,
	281, 281, 281, 223, 223, 222, 222, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 372,
	372, 315, 315, 316, 316, 250, 249, 249, 249, 249,
	249, 247, 248, 246, 246, 246, 246, 246, 245, 245,
	244, 244, 244, 351, 351, 242, 242, 233, 233, 233,
	232, 232, 232, 412, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 280,
	280, 280, 325, 325, 330, 330, 491, 491, 490, 209,
	209, 209, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 219, 219, 219, 396, 396, 396, 396, 397, 397,
	397, 397, 398, 398, 398, 394, 394, 395, 395, 334,
	335, 335, 438, 438, 392, 392, 393, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 445, 445, 445, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 502, 502, 502, 487, 487,
	487, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	278, 278, 278, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 336, 336,
	337, 337, 442, 442, 442, 442, 442, 442, 443, 443,
	444, 444, 444, 444, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 323, 275, 275, 275, 338, 331, 331,
	332, 332, 326, 326, 326, 326, 326, 326, 326, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 327, 327, 329, 329, 340, 340, 340, 339, 339,
	339, 339, 339, 339, 339, 221, 221, 221, 221, 320,
	320, 320, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 211, 211, 211, 211, 215, 215,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 216, 216, 216, 216, 216, 214,
	214, 214, 214, 214, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 105, 106, 106, 213, 283, 283, 418, 418,
	421, 421, 419, 419, 420, 422, 422, 422, 423, 423,
	423, 424, 424, 424, 427, 427, 290, 290, 290, 296,
	296, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 2,
	5, 5, 0, 2, 7, 0, 1, 0, 1, 5,
	5, 3, 3, 2, 4, 4, 4, 4, 4, 1,
	1, 1, 3, 3, 1, 1, 1, 6, 8, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 4, 1, 3, 1, 4, 6, 6,
	4, 4, 4, 4, 4, 3, 6, 3, 5, 1,
	1, 2, 2, 11, 8, 9, 1, 3, 2, 4,
	0, 2, 0, 1, 1, 1, 1, 0, 1, 0,
	1, 4, 2, 1, 5, 4, 4, 2, 5, 1,
	3, 2, 1, 5, 4, 4, 2, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 5, 3, 4, 6, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 0, 2, 3, 3, 3, 1, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 7, 7, 1, 1, 1, 0,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 2,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 4, 1, 3, 4, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 12, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	9, 9, 7, 1, 2, 3, 3, 3, 0, 4,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 4,
	1, 1, 3, 4, 3, 0, 1, 1, 1, 0,
	2, 7, 8, 8, 0, 3, 3, 0, 2, 0,
	3, 0, 5, 1, 3, 0, 3, 3, 0, 2,
	9, 6, 0, 2, 2, 3, 3, 4, 4, 1,
	0, 2, 2, 1, 3, 2, 1, 3, 2, 1,
	3, 2, 0, 1, 3, 4, 3, 1, 1, 4,
	1, 3, 1, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 6, 0, 4,
	1, 1, 0, 3, 0, 1, 1, 2, 4, 4,
	4, 0, 1, 7, 9, 10, 8, 0, 2, 11,
	9, 11, 2, 2, 8, 4, 5, 1, 3, 0,
	3, 5, 10, 0, 2, 0, 3, 2, 4, 3,
	0, 2, 1, 0, 2, 3, 0, 2, 3, 0,
	2, 1, 0, 3, 2, 4, 3, 0, 1, 0,
	1, 1, 0, 6, 0, 3, 5, 0, 4, 0,
	3, 1, 3, 4, 5, 0, 3, 1, 3, 2,
	3, 1, 2, 0, 4, 6, 5, 0, 2, 0,
	2, 4, 5, 4, 5, 1, 5, 6, 5, 0,
	3, 0, 1, 1, 3, 3, 3, 0, 4, 1,
	3, 3, 3, 0, 1, 1, 3, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 5, 4, 1, 3, 3, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 1, 1,
	1, 7, 9, 7, 9, 2, 1, 7, 9, 7,
	9, 8, 5, 0, 1, 0, 1, 1, 1, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 3, 3, 2, 2, 1,
	5, 6, 4, 1, 1, 1, 5, 4, 1, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 6, 1, 1, 1, 1, 1, 4,
	4, 4, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 1, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 5, 0, 1, 3,
	0, 1, 0, 2, 0, 1, 6, 8, 6, 6,
	5, 5, 5, 6, 6, 6, 6, 5, 6, 6,
	6, 6, 6, 6, 6, 6, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 4, 4, 4, 3,
	4, 6, 6, 7, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 8, 4, 2, 3, 2, 4, 2, 2,
	4, 6, 2, 2, 4, 6, 4, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 0, 1,
	1, 3, 3, 3, 3, 3, 2, 1, 1, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 1,
	3, 4, 4, 5, 4, 5, 3, 4, 5, 6,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -531, -539, -2, -5, 592, -1, -4, -106, -80,
	-7, -108, -109, -8, -104, -9, -10, -12, -84, -99,
	-101, -103, -102, -43, -11, -98, -75, -76, -86, -92,
	-95, -96, -97, -110, -105, -107, -149, -111, -112, 585,
	-81, -82, -83, -32, -31, -30, -29, -132, -137, 591,
	438, 13, 487, -14, -15, -492, -16, 256, -303, -304,
	-305, -307, -540, -44, -45, -46, -54, -55, -56, -57,
	-58, -68, -69, -70, -47, -48, -49, -52, -50, -61,
	-60, -62, -63, -64, -65, -66, -67, -51, -135, -136,
	-71, -53, -73, -72, -78, -74, -79, -134, -139, -13,
	231, -77, 75, -87, -88, -89, -90, -91, -93, -94,
	363, 369, 426, 584, 60, -150, -152, 595, 596, 157,
	158, 160, 161, -33, -34, -35, -36, -37, -38, -40,
	-39, -41, -42, 227, 15, 524, -17, -20, -18, -21,
	-19, -27, -28, -26, -23, -25, -133, -24, -138, 251,
	250, 37, 317, 318, 319, 367, 249, 228, 14, 30,
	41, 343, -151, 81, 229, -153, 12, 599, -6, -3,
	-2, -119, -123, -127, -130, -131, -128, -129, -4, -106,
	115, 241, 586, -300, 359, 587, 589, 588, 84, 92,
	-293, -295, 363, 369, 584, 596, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 490, 571, 572, 573, 574, 518, 570,
	341, 342, 521, 268, 292, 394, 298, 305, 157, 176,
	170, 198, 190, 165, 272, 310, 273, 91, 160, 473,
	105, 450, 423, 163, 287, 289, 291, 519, 294, 293,
	295, 297, 274, 344, 186, 181, 286, 270, 179, 275,
	39, 276, 203, 277, 278, 526, 446, 340, 452, 302,
	421, 180, 447, 290, 449, 207, 211, 464, 465, 174,
	175, 454, 467, 202, 205, 206, 248, 42, 523, 260,
	468, 209, 201, 197, 476, 306, 304, 200, 173, 196,
	271, 64, 213, 212, 214, 417, 418, 419, 420, 279,
	280, 357, 463, 193, 182, 345, 166, 22, 471, 255,
	451, 370, 281, 299, 307, 208, 210, 262, 267, 525,
	425, 266, 303, 469, 178, 259, 288, 254, 472, 167,
	372, 282, 161, 296, 466, 475, 63, 385, 172, 164,
	245, 158, 264, 269, 283, 284, 285, 516, 309, 308,
	300, 194, 261, 199, 184, 171, 195, 159, 263, 474,
	386, 582, 343, 404, 192, 189, 265, 238, 470, 453,
	162, 408, 387, 187, 311, 578, 579, 580, 358, 339,
	312, 313, 185, 252, 444, 445, 316, 414, 332, 388,
	424, 395, 389, 220, 320, 456, 458, 204, 581, 321,
	322, 323, 448, 324, 325, 326, 327, 362, 55, 57,
	93, 95, 597, -378, -376, -300, 584, 369, 363, 343,
	596, -192, -300, 598, -159, 38, -205, -300, -159, -77,
	-15, -14, -151, -152, -205, 235, -308, 23, 421, -85,
	422, 231, 81, -300, -9, -97, -8, -104, -75, -149,
	426, -306, -300, 317, 317, -306, 235, -300, 266, 402,
	-429, 241, -382, -355, 267, -381, -357, -384, -358, 31,
	227, 229, 228, 263, 15, 367, 237, 13, 12, 368,
	249, 24, 25, 27, 14, 369, 371, 28, 372, 375,
	376, 377, 41, 380, 381, 256, 84, 92, 87, 274,
	-191, -300, -332, -326, 112, 257, -328, -321, -322, -324,
	-471, -465, -319, 81, 139, 140, 147, 113, -323, -412,
	35, 115, 533, 570, 488, -276, -277, -278, -279, -280,
	-300, -466, -464, 87, 96, 99, 102, 103, 101, 100,
	151, 183, 98, 88, 152, -152, 84, -487, 542, -294,
	563, 571, 572, 573, 574, 562, 60, -436, -444, 234,
	-442, 150, 188, 252, 184, 13, 145, 414, 185, 539,
	559, 490, 543, 566, 535, 536, 537, 530, 531, 532,
	534, 544, 546, 558, -445, 554, 564, 565, 552, 567,
	568, 569, 86, 85, 557, 556, 545, 540, 541, 547,
	529, 538, 548, 549, 555, 560, 561, 351, 105, 352,
	353, 480, 344, 354, 241, 421, 69, 355, 356, 357,
	358, 359, 487, 360, 70, 361, 350, 256, 404, 362,
	187, 204, 492, 491, 493, 484, 481, 479, 482, 483,
	485, 486, 550, 551, 553, -113, -114, 576, -168, -169,
	-269, 11, 6, 7, 8, 9, -529, 423, 525, 87,
	162, 159, -369, 162, 111, 167, 166, -369, 320, 262,
	364, -142, -346, 341, 404, 324, 93, 266, -349, -347,
	519, -431, 314, 310, 236, -143, 108, 246, 245, 106,
	480, 234, 378, 305, 55, 57, -503, -504, 224, 225,
	226, -494, 513, -493, -300, 353, 95, 26, 235, 364,
	262, 458, 456, 457, 459, 460, 461, 462, -59, -446,
	-428, 453, 452, -312, 445, 451, 443, 455, 446, 342,
	326, 325, 227, 593, 514, -290, 388, 424, 477, 478,
	365, 425, 464, 466, 447, 105, 191, 188, 236, 238,
	235, 341, 480, 404, 93, 324, -503, 159, 464, 466,
	266, 402, 40, -375, 414, -374, -376, 465, 476, 85,
	86, 463, -290, 105, 444, 444, -169, -269, -168, -150,
	-152, -107, -492, 236, 341, 404, 266, 237, 235, 517,
	238, 480, 234, 317, 364, 262, 324, 93, -430, -500,
	31, -437, 221, 222, 223, 32, 33, -1, 119, 599,
	-326, -326, -6, 602, -6, -326, -300, -300, 154, -211,
	-215, -212, -214, -213, -217, -216, 188, 189, 150, 192,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 205,
	206, 203, 30, 204, 252, 184, 185, 186, 187, 207,
	170, 190, 522, 215, 171, 216, 172, 217, 173, 218,
	174, 175, 219, 176, 179, 180, 181, 182, 178, 153,
	81, 153, 87, -175, 258, -205, 153, -175, -169, -168,
	-169, -205, -281, -300, 423, 122, -85, -85, 422, -495,
	-496, -497, -499, 231, 422, 421, 153, 274, 16, -306,
	-306, 79, -205, -357, 266, -382, -355, 35, 78, 154,
	239, 154, 78, 81, 365, 341, 404, 366, 480, 235,
	378, 238, 266, 379, 341, 404, 235, 238, 480, 266,
	341, 235, 238, 404, 266, 379, 443, 444, 238, 26,
	370, 373, 374, 444, -450, 476, 154, 111, 108, 109,
	110, -326, 129, -339, 122, 123, 124, 125, 126, 127,
	128, 136, 135, 146, 139, 140, 141, 142, 143, 144,
	145, 137, 138, 132, 112, 130, 134, 131, 114, -152,
	-326, -332, 60, -324, -324, -324, -324, -412, -330, -326,
	81, 81, 81, 153, 100, 87, -326, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, -443,
	81, 81, -336, -337, 81, 81, -319, -281, 81, 87,
	87, 81, 81, 81, 87, -337, -337, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, -169, 154,
	81, -115, 38, -171, 21, -153, -152, 20, 31, 32,
	31, 32, 31, 32, 31, 32, 96, 597, 220, 469,
	524, 165, 166, 167, -190, -300, -192, -183, -300, 238,
	-143, 238, 517, 516, -344, 241, -344, -344, -344, -344,
	237, -344, -205, 235, 235, 235, -344, 487, 122, 122,
	58, -505, 169, 154, -494, -174, 81, -311, 130, 134,
	-311, 23, 264, 264, 264, -311, 304, -541, -542, 16,
	132, -309, -542, -309, -309, -311, -543, 237, 454, 42,
	265, 264, -170, -171, -170, 448, 444, -399, 449, 450,
	-313, -542, -312, -311, -311, -312, -311, -311, -311, 235,
	238, 480, 324, 594, -541, -541, 30, 30, -429, -429,
	-205, -429, 514, -291, -300, -429, -429, -429, -506, 240,
	-536, -535, 467, -538, 469, 159, -376, 159, -376, -357,
	266, 266, 154, 122, 23, -377, 122, 133, -376, -376,
	-377, -377, -229, 40, -299, 150, -300, 87, -229, 40,
	-533, -532, -205, -170, -153, -152, 82, 82, 82, -429,
	-429, -429, -429, -429, -431, -429, -429, -429, -429, -306,
	-183, -192, 241, -429, -429, -154, -155, 141, -326, -300,
	-154, -3, -121, -120, 116, 117, 119, 587, 359, 586,
	590, 584, -376, 40, -424, 386, 385, -418, -420, 81,
	-419, 81, -419, -419, -419, -419, -419, 81, 81, -421,
	81, -421, -421, -418, -422, 81, -422, -423, 81, -423,
	-422, -300, -331, -332, -300, 38, -439, 60, -149, 81,
	30, 81, -300, -440, 60, -149, 81, 30, -170, -115,
	-171, 153, 96, 87, -85, 82, 154, -498, 102, 103,
	-501, 202, 194, -300, -100, 87, -7, -8, -9, -10,
	-43, -75, -149, -467, -465, 81, 31, 413, 78, 16,
	-383, 235, 480, 364, 262, 238, 341, -381, -364, -361,
	-359, -299, -357, -360, -359, -386, -281, 444, -116, 428,
	427, 316, -326, -326, -326, -326, -326, 101, 112, 339,
	102, 103, -321, -340, 31, 312, 313, -322, -322, -322,
	-322, -322, -322, -322, -322, -322, -322, -322, -322, -329,
	-338, -412, 81, 132, 130, 134, 131, 114, -324, -324,
	-322, -322, 82, 154, -491, -490, 116, -326, -326, -326,
	-300, -488, -489, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 355, 350, 356, 354, 344, 362,
	357, 358, 187, 511, 512, 505, 506, 507, 508, 509,
	510, -331, -331, -326, -488, -331, -275, 32, 31, -332,
	-332, -332, 82, -326, -502, 337, 336, 338, -172, -300,
	-331, 82, 82, 82, 96, -332, -332, -331, -322, -331,
	-489, -275, -275, -275, 141, -332, -332, -275, -275, -275,
	-275, 141, -275, -275, -275, -275, -275, -275, -275, -275,
	82, 82, 82, -170, -114, -448, -447, -326, 40, 577,
	-115, -326, -167, -166, -326, -530, 87, 87, 600, 470,
	471, 163, 166, 165, 34, 81, 81, 153, -344, -344,
	-344, 517, -508, -300, 112, -365, -362, -359, -300, -300,
	-355, -300, -300, 524, -344, -344, -344, -205, -240, 52,
	53, 54, -359, -144, 55, 56, -506, -493, 34, -173,
	-300, -265, 17, -324, -324, -359, 266, -541, -311, -311,
	-292, -291, -313, -308, -313, -313, -265, -542, -311, -311,
	-313, -309, -265, -300, 444, -265, -265, -399, -310, -300,
	-310, -344, -291, -292, -292, -205, -205, -251, -252, 232,
	348, 349, 230, 228, 11, 229, -260, 305, -345, 488,
	-235, -236, 76, 41, -238, 390, 383, 268, 272, 91,
	273, 423, 274, 237, 276, 277, 278, 293, 295, 248,
	279, 280, 281, 414, 282, 158, 294, 283, 284, 285,
	366, -230, 6, 327, 40, 50, 51, 437, 436, 527,
	524, 269, -508, -508, 30, 30, -365, -300, -300, -162,
	-157, -161, -158, -163, -268, -270, -160, 81, -205, -152,
	-300, 154, 468, 470, 471, -536, -377, -536, -377, 31,
	413, -380, 413, 31, -355, -374, 464, 466, -370, 87,
	414, -360, -379, 78, 150, -447, -377, -377, -379, -379,
	149, 154, -534, 469, 470, 224, -115, -207, -205, -508,
	-364, -355, -300, -429, -207, -207, -300, -300, 81, 35,
	-300, -300, -264, 154, -263, 16, -301, -300, 34, 87,
	153, -264, -122, -120, 118, -326, -6, 586, -326, -6,
	-6, -326, -6, -326, -427, 387, 96, 96, -283, 87,
	-283, 96, 96, 96, 82, 87, -368, 78, -441, -333,
	-486, 576, -177, 82, -172, -484, -485, -172, -176, -300,
	-441, -177, 82, -484, -115, -115, -300, 23, -85, -496,
	153, 154, -173, -383, -363, -360, -385, 141, -300, -371,
	154, 524, 603, 85, 239, -522, -521, 405, 82, 154,
	-451, 240, 487, 87, 600, 421, 220, 101, 339, 102,
	103, -412, -332, -329, -324, -324, -322, -322, -327, 253,
	-327, 111, -326, -325, -490, 118, -326, 34, 34, 154,
	79, 153, 82, 82, 16, 16, 82, -326, 82, 82,
	82, 82, 16, 16, -326, 82, 153, 82, 82, 82,
	82, 79, 82, 154, 82, 154, -332, -326, -332, 82,
	82, 82, -326, -326, -326, -332, 82, -326, -326, -326,
	-326, -326, -326, -326, -326, -393, 439, -393, -393, 154,
	82, 87, 154, 22, 154, -164, 36, 37, -287, -286,
	87, 164, 167, 167, 166, -191, -193, -194, -195, -196,
	-197, 132, 155, 156, -184, -185, -186, -187, -211, -281,
	189, 192, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 205, 206, 203, 204, 252, 184, 185, 186, 187,
	207, 170, 190, 171, 172, 173, 174, 175, 176, 179,
	180, 181, 182, 178, -300, -205, -205, -205, -344, -511,
	391, 35, -523, 154, 40, -521, 480, -140, 316, -348,
	79, -147, 16, 81, -205, -205, -205, -218, 34, 16,
	-156, -206, -300, 81, 82, 154, -326, -356, 79, -300,
	-292, -265, -265, -205, -300, -265, -265, -311, -313, -313,
	-309, 153, -291, -218, -174, 154, -204, -297, -201, -203,
	243, -316, -202, 246, -480, 244, 242, 106, 247, 301,
	107, 237, -297, -297, 243, -239, 239, 34, -297, -254,
	237, 301, 244, 20, -253, 237, 107, -300, 243, 247,
	242, -296, 122, -290, 149, 239, 42, 366, -296, 528,
	-296, -296, -296, -296, -296, -296, -296, 275, 275, -296,
	-296, -296, -296, -296, -296, -296, -296, -296, -296, -296,
	159, -296, -296, -296, -296, -296, -296, 81, 270, 271,
	-512, 391, 30, 347, 347, -523, 30, -148, 341, 30,
	-271, -272, -273, -274, 67, 71, 73, 68, 69, 70,
	74, 30, 154, -298, -302, 34, -300, 87, -298, -152,
	-157, -162, -298, 81, -535, -537, 472, 469, 475, -379,
	-379, 239, 81, 122, -379, -379, 40, -299, -532, 476,
	470, -182, 23, 154, 78, -207, -184, -192, -265, -155,
	-157, -300, 87, -300, 141, -265, 119, -6, 117, -126,
	-125, -124, 120, 584, 590, 119, 119, 119, 82, 82,
	82, 154, 82, 82, 82, 154, 82, 154, -454, 449,
	39, 154, 81, 82, 154, 60, 154, 122, 82, 154,
	82, 60, -182, 153, 423, -300, -465, 82, -385, 154,
	239, 153, 153, -361, 369, -299, -363, 20, 524, -281,
	38, -287, 122, 600, 82, -327, -327, 111, -324, -321,
	82, 119, -326, 117, -209, -211, 385, 386, -209, -210,
	-216, 150, 188, 252, 187, 186, 184, 385, 386, -229,
	-300, -326, -326, 82, -326, -326, 16, -300, -229, -322,
	-326, -169, 82, 82, -392, -393, -392, -392, 82, 82,
	82, 82, -392, 82, 82, 82, 82, 82, 82, 82,
	82, 81, -447, -454, -326, -326, -166, -165, 43, 601,
	154, 122, 167, 377, 82, 154, -281, 82, 154, -211,
	-174, -174, 81, -226, 524, -205, -514, 451, 393, 403,
	-296, -318, -317, 343, 41, -434, 414, 399, 400, -362,
	266, -300, -520, 94, 122, 78, 331, 332, 333, 334,
	-342, -343, -341, -345, -508, -228, -262, -300, 87, 81,
	81, 81, -413, 321, -211, -205, -156, -300, 16, 154,
	-507, 153, -1, -300, -355, -311, -265, -542, -265, -311,
	-311, -313, -300, -413, 34, -252, -208, -281, -202, -479,
	-480, -344, -300, 107, -479, 107, 81, -208, -281, -281,
	-255, -310, -281, -300, -300, -300, -258, -257, -281, -300,
	-300, -300, 107, 107, -234, 40, 47, 48, 49, -296,
	-296, 191, -237, 40, 413, 415, 416, 96, 96, 96,
	96, 87, 87, 87, -296, -296, 96, 87, -302, 87,
	-481, 166, 44, 45, 96, 96, 96, 96, 40, 87,
	-241, 40, 286, 290, 287, 288, 289, 87, 96, 40,
	96, 40, 96, 40, -300, 81, -482, -483, 87, -514,
	-296, 347, -376, 122, -318, -519, 316, -141, 91, 31,
	-178, 232, 229, -508, -367, -366, -281, -161, -161, -161,
	-161, 67, 67, 67, 72, 67, 72, 67, -273, -367,
	-163, -174, -302, 82, -528, -527, -526, -524, 75, 240,
	76, -331, 469, 473, 474, -363, -314, 87, -370, 14,
	-205, -205, -433, 296, 297, 82, -267, 18, 153, -267,
	115, -6, -122, -124, -326, -6, -326, 586, 359, 587,
	87, 96, 96, -462, 434, 429, 431, 107, -333, -449,
	-448, 60, -149, -172, -441, -485, -447, -300, 60, -149,
	-441, -300, 96, 16, -360, -355, 141, 141, -300, 370,
	-371, 87, 392, 87, 235, 601, 87, -287, -321, -326,
	82, -219, 175, 174, -219, 82, 82, -419, -419, -418,
	-421, -418, -219, -219, 82, 82, 23, 82, 82, 82,
	-326, 82, 82, 154, -438, 489, -392, -392, -392, -392,
	-392, -392, -392, -392, -392, -392, -392, -392, -392, -392,
	-335, -334, 258, -462, 44, 45, -286, 87, 87, 87,
	-195, -211, 233, -186, 40, 34, 34, -198, -199, -200,
	-208, -201, -203, 34, 81, 81, -515, 91, -509, 87,
	-300, -516, 91, 394, 152, 345, 40, 395, 396, 411,
	340, 96, 96, 401, -510, -300, -148, -518, 51, 122,
	87, -205, -341, -290, 149, 277, 324, 82, 154, -296,
	-296, -198, -198, -198, -414, 323, 20, 96, 140, -175,
	79, 153, -157, -206, -300, 141, 82, -265, -300, -265,
	-265, -311, -414, -149, -256, 44, 46, -211, -477, -300,
	-475, -477, -300, -475, -475, -344, -326, -256, -208, 239,
	30, 229, -259, 329, 330, -372, 302, 112, -372, 154,
	-164, -300, -229, -229, 30, 87, 87, -207, 82, 154,
	122, -515, -509, 122, -377, 87, -516, -520, 122, 87,
	154, -178, -178, -265, 154, 122, -180, -179, 78, 79,
	-181, 78, -179, 67, 67, -265, -526, -525, 23, -480,
	-480, -480, 82, 82, -266, 19, 20, 141, -266, 119,
	117, 119, 119, -300, 82, 82, -425, 578, -458, -460,
	429, 20, 20, 14, 82, -441, -441, -355, -371, 414,
	-205, 154, 601, -326, 82, -326, 82, 87, -169, 20,
	-425, -188, -211, -319, -149, -149, 82, 154, -149, -227,
	-261, -300, 87, -198, 87, -513, 405, 87, 87, 96,
	40, 96, 152, 397, -435, -141, -517, 91, 122, 600,
	81, -296, -296, -296, -300, -262, -319, -319, 82, 82,
	82, -415, 257, 96, 140, 96, 140, 96, -298, -157,
	-300, -265, -507, 153, -265, -265, -415, -281, -223, -222,
	-220, 101, 112, 40, 383, -221, 91, 149, 291, 294,
	293, 269, 292, -250, -315, 78, 389, 329, 330, -345,
	578, 518, 242, 106, 107, 371, -316, 81, 81, 79,
	311, 81, 81, -477, 82, -256, -281, 40, -259, 40,
	302, -257, 149, -229, 82, -483, 87, -513, 87, -379,
	-518, 87, -508, -169, -366, -447, -326, 81, -326, 81,
	67, 11, 18, -326, -332, 241, -6, 587, 359, -243,
	579, 87, 20, 87, -456, 87, -367, -118, -452, -399,
	274, 82, 82, -392, -395, -394, -398, 435, 303, 442,
	-332, -243, 523, -145, 524, -145, -226, -200, 82, 154,
	-296, -296, 82, 20, 524, 344, 40, 96, 40, 398,
	87, 102, 103, -288, -289, 87, -350, -352, -281, 81,
	-229, -231, -299, 150, 87, -224, -225, -260, -345, -117,
	-116, -224, -416, 158, 96, 140, 96, 96, -265, -265,
	-416, -220, 101, -322, 87, -231, -232, 40, 290, 286,
	122, 122, -233, 40, 270, 271, -242, 81, 301, 14,
	191, 81, 107, 107, -205, -350, -350, -478, 331, 332,
	333, 335, 334, -478, -350, -350, 81, -373, -372, -322,
	-296, 149, -517, -170, -173, -476, -300, 242, 20, 20,
	-300, -300, -284, 580, 96, 87, 431, -426, 581, -461,
	434, -455, -453, 429, 430, 431, 432, 122, 82, -397,
	114, 397, 401, -320, -323, 96, 99, 183, 152, -284,
	-189, -300, -146, 59, 476, -261, -319, -319, -226, 87,
	392, 87, 344, 601, 154, 122, 82, 154, -418, -326,
	-387, 258, 154, -260, -290, -118, -387, -432, 166, 322,
	524, 96, 140, 96, -169, -417, 166, 322, 87, 87,
	96, 81, -442, 30, 87, -351, 81, 82, 82, 82,
	82, -350, -229, -296, 82, 82, 154, 81, 20, 87,
	-463, 240, -459, -460, 433, -453, 20, 431, 20, 20,
	87, -396, -397, 401, -320, -323, 576, 440, 440, 440,
	34, 301, 414, -289, 87, -353, -352, -164, 82, -388,
	310, 20, -260, -296, -388, 322, 96, 140, 96, -170,
	322, 82, -326, -336, -296, 82, -245, -244, 520, -350,
	-353, 79, -353, 79, -353, 79, -353, 79, 82, -229,
	-300, 242, -285, -300, -456, -470, 81, 96, -458, -457,
	-459, 20, -456, 20, -456, -456, 111, 441, 441, 441,
	87, 370, -354, 248, 91, 524, 329, 330, -164, 20,
	-389, 303, 304, -390, -403, 306, -229, 96, 82, -300,
	-249, -247, -248, 78, 447, 299, 300, 82, -478, -478,
	-478, -478, -250, 82, 154, -474, 30, 82, -469, -468,
	-282, -464, -300, 434, 435, 87, -456, -396, -296, 87,
	328, -281, 81, -401, 307, 81, -399, 81, -399, 107,
	332, -372, -248, 78, -247, 78, 15, 14, -353, -353,
	-353, -353, -300, -473, -472, -471, 82, 154, 153, 96,
	-300, -386, -391, 308, 96, -322, 81, -322, 81, -400,
	305, 81, -246, 296, 297, 30, 166, -246, 154, 122,
	-468, -300, 82, -405, 81, 20, 82, -386, 82, -386,
	81, 122, -322, 101, 40, 298, -472, 40, -326, 153,
	-406, -404, 258, -390, 82, 82, 82, -386, 96, 82,
	-300, 82, 154, -300, -402, 309, 82, -404, -407, 60,
	96, -411, -408, 81, -260, 260, 132, -411, -260, -410,
	-409, 308, 261, 81, 82, 154, -300, 257, 81, -332,
	-409, -408, -332, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 825, 826, 827, 828, 829, 830, 0,
	0, 0, 0, 599, 600, 0, 567, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 288, 284, 209, 210, 211, 212, 213, 295, 296,
	435, 0, 0, 0, 0, 680, -2, 56, 0, 277,
	0, 268, 268, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, -2, 612, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 343,
	344, 345, 339, 340, 342, 341, -2, 0, 612, 0,
	0, 0, 700, 0, 0, 717, 739, 23, 0, 7,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	0, 0, 19, 0, 19, 0, 0, 0, 1196, 1197,
	1198, 1199, -2, 1691, 1669, 1836, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1837, 0, 261, 259, 1669, 1691, 1753, 1786,
	1836, 0, 845, 0, 658, 0, 663, 1150, 658, 289,
	601, 602, 700, 700, 565, 0, 325, 0, 1682, 329,
	0, 0, 0, 562, 319, 320, 321, 322, 323, 324,
	0, 0, 824, 0, 0, 315, 0, 283, 1744, 0,
	0, 0, 0, 0, 0, 153, 950, 155, 952, 159,
	166, 0, 0, 171, 172, 175, 176, 177, 178, 179,
	0, 183, 0, 185, 188, 0, 190, 191, 0, 194,
	195, 196, 0, 206, 207, 208, 953, 954, 955, -2,
	84, 843, 1602, 1490, 0, 1497, 1498, 1509, 1520, 1276,
	1277, 1278, 1279, 0, 0, 0, 0, 0, 1286, 1287,
	0, 1304, 1852, 1891, 0, 1294, 1295, 1296, 1297, 1298,
	93, 105, 106, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	0, 1550, 1551, 1552, 1463, 1263, 1196, 0, 1861, 0,
	1881, 1886, 1887, 1888, 1889, 1880, 0, 0, 1448, 0,
	1438, 0, 0, -2, -2, 0, 0, 1811, -2, 1858,
	1877, 1885, 1862, 1884, 1854, 1855, 1856, 1849, 1850, 1851,
	1853, 1863, 1865, 1876, 0, 1872, 1882, 1883, 0, 0,
	0, 0, 107, 108, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1454, -2, 1456,
	1457, 1459, -2, 1461, 1462, -2, 1465, 1466, 1467, -2,
	-2, 1470, 1471, 1472, 1473, 1474, 1475, 1478, -2, -2,
	-2, -2, 1450, 1451, 1452, 1453, 1442, 1443, 1444, 1445,
	1446, 1447, -2, -2, -2, 700, 775, 0, -2, 0,
	0, 0, 722, 725, 728, 731, 0, 57, 58, 0,
	278, 279, 267, 269, 0, 273, 0, 266, 0, 0,
	0, 0, 0, 982, 982, 982, 982, 982, 0, 982,
	0, 0, 0, 0, 982, 873, 0, 957, 958, 959,
	980, 981, 1038, 0, 0, 0, 617, 613, 614, 615,
	616, 688, 0, 690, 693, 542, 542, 489, 0, 0,
	0, 542, 0, 503, 495, 0, 0, 0, 542, 0,
	0, 695, 695, 0, 545, 552, 542, 542, -2, 542,
	542, 542, 0, 0, 509, 510, 511, 495, 495, 514,
	515, 516, 527, 528, 553, 1626, 0, 0, 435, 435,
	0, 435, 0, 435, 435, 435, 619, 1781, 1689, 1758,
	1744, 0, 0, 234, 1811, 239, 0, 1690, 1707, 0,
	0, 1725, 0, -2, 0, 305, 695, 0, 701, 0,
	700, 0, 0, 435, 435, 435, 435, 435, 1037, 435,
	435, 435, 435, 0, 0, 0, 435, 435, 0, 0,
	740, 741, 736, 737, 738, 742, 743, 5, 6, 19,
	0, 0, 0, 0, 0, 0, 63, 62, 0, 1603,
	1621, 1555, 1556, 1557, 1608, 1559, 1612, 1612, 1612, 1612,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1612,
	1612, 0, 0, 1601, 1579, 1610, 1610, 1610, 1608, 1605,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1615, 1615, 1618, 1618, 1615, 0,
	1488, 0, 0, 0, 0, 662, 0, 0, 695, -2,
	0, 566, 326, 1200, 0, 0, 330, 331, 0, 0,
	346, 0, 349, 334, 335, 336, 0, 133, 0, 317,
	318, 0, 0, 285, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 163, 160, 167, 170, 180, 187,
	0, 199, 201, 204, 161, 168, 173, 174, 181, 202,
	162, 164, 165, 169, 203, 205, 182, 186, 200, 184,
	189, 192, 193, 198, 0, 134, 0, 0, 0, 0,
	0, 1496, 0, 0, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	1490, 0, 0, 1282, 1283, 1284, 1285, 1288, 0, 1305,
	0, 0, 0, 0, 1549, 1553, 0, 1488, 1488, 0,
	1488, 1484, 0, 0, 0, 0, 0, 0, 1488, 1424,
	0, 0, 1426, 1439, 0, 0, 1428, 1429, 0, 1432,
	1433, 1488, 0, 1488, 1437, 1420, 1421, 0, 1484, 1484,
	1484, 0, 0, 1484, 1484, 1484, 1484, 1484, 1484, 1484,
	1484, 1484, 1484, 1484, 1484, 0, 0, 0, 695, 0,
	0, 683, 0, 664, 0, 719, 721, 0, 723, 724,
	726, 727, 729, 730, 732, 733, 59, 0, 0, 0,
	0, 271, 0, 276, 0, 842, 0, 0, 858, 982,
	874, 982, 982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 982, 982, 982, 0, 998, 0, 0,
	0, 619, 618, 0, 689, 0, 0, 748, 0, 0,
	488, 0, 495, 542, 542, 501, 502, 497, 496, 548,
	549, 545, 0, 545, 545, 748, 0, 521, 522, 523,
	542, 542, 529, 696, 530, 531, 545, 0, 550, 551,
	748, 0, 0, 748, 748, 0, 539, 540, 541, 0,
	0, 982, 0, 558, 497, 497, 1627, 1628, 0, 0,
	991, 0, 0, 0, 561, 0, 0, 0, 0, 620,
	214, 217, 0, 220, 0, 1781, 0, 1781, 0, 227,
	0, 0, 0, 0, 0, 0, 257, 258, 0, 0,
	0, 0, 248, 251, 1144, 1145, 947, 948, 252, 253,
	297, 298, 0, 664, 718, 720, 714, 715, 716, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 595,
	0, 597, 0, 0, 0, 756, 750, 752, 819, 93,
	756, 8, 80, 77, 0, 19, 0, 0, 19, 19,
	0, 19, 262, 0, 1624, 1622, 1623, 1558, 1609, 0,
	1584, 0, 1585, 1586, 1587, 1597, 1598, 0, 0, 1580,
	0, 1581, 1582, 1583, 1574, 0, 1575, 1576, 0, 1577,
	1578, 260, 0, 1489, 846, 0, 637, 650, 632, 0,
	639, 0, 1151, 621, 650, 623, 0, 639, 664, 686,
	664, 0, 327, 0, 332, 0, 0, 348, 350, 351,
	352, 337, 338, 563, 313, 314, 306, 307, 308, 309,
	310, 311, 312, 316, 103, 0, 286, 287, 0, 0,
	0, 147, 148, 149, 150, 151, 152, 154, 138, 584,
	586, 939, 951, 0, 942, 0, 157, 197, 130, 0,
	0, 0, 1491, 1492, 1493, 1494, 1495, 1499, 0, 1501,
	1503, 1505, 1507, 0, 1525, -2, -2, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1510,
	1523, 1524, 0, 0, 0, 0, 0, 0, 1521, 1521,
	1516, 0, 1280, 0, 1302, 1306, 0, 0, 0, 0,
	94, 1483, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 0, 0, 1490, 0, 0, 0, 1485, 1486, 0,
	0, 0, 1379, 0, 0, 1385, 1386, 1387, 0, 645,
	0, 1449, 1425, 1440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 774, 776, 0, 654, 656, 657, 0,
	684, 697, 702, 703, 706, 55, 60, 53, 1009, 280,
	281, 0, 0, 275, 0, -2, 860, 0, 0, 0,
	0, 982, 0, 888, 0, 433, 933, 0, 0, 0,
	949, 972, 978, 0, 0, 0, 0, 1013, 875, 880,
	881, 882, 876, 877, 883, 884, 0, 691, 0, 0,
	788, 487, 0, 543, 544, 492, 1744, 497, 748, 748,
	504, 498, 505, 547, 506, 507, 508, 0, 748, 748,
	542, 545, 532, 546, 545, 535, 536, 0, 554, 559,
	555, 0, 557, 512, 513, 1013, 693, 364, 365, 406,
	406, 406, 389, 406, 0, 0, 377, 1629, 0, 0,
	0, 0, 386, 1629, 0, 1629, 1629, 1629, 1629, 1629,
	1629, 1629, 0, 0, 1629, 1629, 1629, 1629, 1629, 1629,
	1629, 1629, 1629, 1629, 1629, 0, 1629, 1629, 1629, 1629,
	1629, 1130, 1629, 0, 992, 396, 397, 398, 399, 404,
	405, 0, 430, 0, 0, 0, 433, 0, 922, 761,
	0, 762, 763, 759, 790, 814, 814, 0, 814, 794,
	1150, 0, 0, 225, 226, 215, 0, 216, 0, 228,
	229, 0, 231, 232, 233, 240, 1689, 1758, 235, 237,
	0, 0, 241, 254, 255, 256, 0, 0, 246, 247,
	0, 0, 300, 301, 303, 0, 712, 581, 1148, 582,
	583, 587, 0, 0, 590, 592, 593, 594, 860, 0,
	927, 928, 748, 0, 757, 0, 753, 820, 0, 822,
	0, 748, 0, 78, 19, 0, 71, 68, 0, 0,
	0, 0, 0, 1604, 1554, 1625, 0, 0, 0, 1606,
	0, 0, 0, 0, 61, 666, 628, 0, 631, 647,
	0, 651, 0, 0, 643, 636, 640, 0, 0, 660,
	622, 0, 0, 627, 712, 687, 1201, 0, 333, 347,
	0, 0, 0, 0, 141, 936, 0, 142, 146, 136,
	0, 0, 0, 941, 0, 938, 943, 0, 156, 0,
	0, 131, 132, 1003, 1009, 0, 0, 1500, 1502, 1504,
	1506, 1508, 0, 1511, 1521, 1521, 1517, 0, 1512, 0,
	1514, 0, 1491, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 1369, 1370, 0, 0, 1374, 0, 1376, 1377,
	1378, 1380, 0, 0, 0, 1384, 0, 1423, 1441, 1427,
	1430, 0, 1434, 0, 1436, 0, 700, 0, 0, 1344,
	1344, 1344, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 0, 1300, 1301, 0,
	777, 666, 0, 0, 0, 709, 707, 708, 0, 1007,
	0, 282, 270, 272, 0, 0, 0, 848, 849, 851,
	0, 854, 855, 856, 0, 861, 862, 864, 865, 0,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1674, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 859, 693, 693, 1087, 0, 895,
	1629, 983, 437, 0, 0, 935, 0, 911, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 1015, 0, 0,
	0, 606, 610, 23, 694, 0, 749, 490, 0, 491,
	542, 499, 500, 748, 1150, 524, 525, 748, 542, 542,
	545, 0, 556, 1015, 0, 991, 367, 0, 1159, 1160,
	407, 0, 1166, 1175, 982, 1233, 0, 1175, 0, 0,
	1177, 1178, 0, 0, 0, 0, 390, 391, 0, 376,
	0, 0, 0, 0, 375, 0, 0, 417, 0, 0,
	0, 0, 1630, 1629, 1629, 0, 384, 385, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 1629, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 0, 0, 0, 0, 1136, 1137,
	895, 1629, 0, 0, 0, 437, 909, 918, 0, 0,
	0, 0, 0, 0, 781, 0, 0, 780, 0, 0,
	0, 0, 0, 693, 815, 0, 817, 818, 792, -2,
	0, 761, 797, 1488, 218, 219, 0, 0, 224, 242,
	244, 0, 0, 0, 243, 245, 249, 250, 299, 302,
	304, 682, 0, 0, 0, 1039, 0, 598, 746, 751,
	758, 821, 823, 94, 754, 746, 0, 81, 19, 80,
	72, 73, 0, 19, 0, 0, 0, 0, 1614, 1613,
	1599, 0, 1600, 1611, 1616, 0, 1619, 0, 670, 0,
	0, 650, 652, 0, 0, 650, 0, 0, 659, 0,
	0, 650, 685, 0, 0, 564, 104, 353, 0, 0,
	0, 0, 0, 585, 0, 940, 138, 0, 0, 158,
	0, 0, 0, 1009, 1487, 1513, 1515, 0, 1522, 1518,
	1281, 1289, 1303, 0, 0, 1309, 1321, 1321, 0, 0,
	1312, 1612, 1612, 1315, 1608, 1610, 1608, 1321, 1321, 0,
	95, 0, 0, 1375, 0, 0, 0, 646, 0, 0,
	0, 1342, 1344, 1344, 1350, 1345, 1351, 1352, 1344, 1344,
	1344, 1344, 1357, 1344, 1344, 1344, 1344, 1344, 1344, 1344,
	1344, 1340, 655, 670, 698, 699, 704, 705, 0, 54,
	1009, 0, 274, 0, 0, 853, 0, 0, 0, 866,
	0, 0, 1152, 0, 0, 0, 899, 896, 897, 898,
	0, 930, 438, 439, 440, 441, 0, 0, 0, 934,
	0, 922, 904, 0, 0, 0, 973, 974, 975, 976,
	977, -2, 986, 0, 0, 0, 1083, 1629, 1629, 1152,
	1152, 1152, 1023, 0, 1014, 658, 0, -2, 0, 0,
	608, 0, 0, 789, 493, 748, 517, 0, 533, 748,
	748, 542, 560, 1023, 0, 366, 408, 0, 1165, 1190,
	1176, 1190, 1234, 1190, 1190, 982, 0, 408, 0, 0,
	378, 414, 0, 0, 0, 0, 374, 411, 706, 415,
	416, 418, 0, 420, 380, 392, 393, 394, 395, 0,
	0, 0, 387, 400, 401, 402, 403, 1098, 1099, 1100,
	1103, 1104, 1105, 1106, 0, 0, 1109, 1110, 1111, 1112,
	1113, 1187, 1188, 1189, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1138, 1139, 1140, 1141, 1142, 1143, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 0, 0, 1133, 0, 899,
	0, 0, 0, 0, 930, 911, 0, 921, 0, 923,
	924, 0, 0, 629, 748, 292, 0, 784, 778, 0,
	767, 782, 783, 770, 0, 772, 0, 768, 769, 748,
	760, 791, 816, 793, 796, 798, 799, 805, 0, 0,
	0, 0, 221, 222, 223, 230, 0, 457, 236, 713,
	1149, 588, 589, 1040, 1041, 596, 744, 0, 0, 744,
	76, 79, 0, 74, 0, 0, 0, 0, 66, 64,
	1607, 0, 0, 672, 118, 0, 0, 0, 648, 0,
	653, 650, 635, 644, 634, 641, 642, 661, 650, 626,
	625, 1202, 328, 0, 937, 138, 143, 144, 145, 139,
	137, 944, 0, 946, 0, 1005, 0, 0, 1519, 1308,
	1290, 1310, 1322, 1323, 1311, 1291, 1292, 1313, 1314, 1316,
	1317, 1318, 1319, 1320, 1293, 1371, 0, 1373, 1381, 1382,
	0, 1431, 1435, 0, 0, 0, 1348, 1349, 1353, 1354,
	1355, 1356, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	700, 1341, 0, 672, 710, 711, 1008, 1010, 841, 844,
	850, 852, 0, 863, 0, 0, 0, 0, 1153, 1154,
	1156, 1157, 1158, 0, 0, 1152, 872, 0, 0, 890,
	891, 901, 0, 0, 0, 443, 444, 0, 0, 0,
	456, 452, 453, 454, 434, 929, 918, 907, 0, 0,
	917, 0, 987, 1629, 1629, 1629, 0, 993, 0, 0,
	0, 0, 0, 0, 1026, 0, 0, 1017, 0, 814,
	0, 0, 748, 607, 610, 611, 692, 494, 748, 537,
	534, 748, 1026, 363, 379, 409, 0, -2, 0, 1191,
	0, 1179, 1191, 0, 0, 1190, 0, 368, 408, 0,
	0, 0, 421, 424, 425, 422, 1229, 0, 423, 0,
	413, 419, 1101, 1102, 0, 1107, 1108, 0, 1132, 0,
	0, 426, 0, 0, 0, 427, 432, 904, 0, 919,
	0, 925, 926, 700, 0, 0, 764, 785, 0, 0,
	765, 0, 766, 771, 773, 291, 800, 0, 0, 802,
	803, 804, 795, 238, 734, 0, 0, 755, 735, 0,
	19, 0, 0, 69, 1617, 1620, 674, 0, 671, 119,
	0, 0, 0, 0, 649, 633, 624, 140, 135, 945,
	121, 0, 1006, 0, 1383, 0, 1344, 1343, 1337, 0,
	674, 0, 869, 867, 878, 878, 1087, 0, 996, 0,
	1089, 1629, 1629, 0, 900, 889, 0, 931, 932, 0,
	445, 446, 0, 449, 455, 902, 903, 0, 0, 915,
	0, 0, 0, 0, 979, 1084, 1085, 1086, -2, 0,
	-2, 1032, 0, 1024, 0, 1016, 0, 1019, 748, 748,
	-2, 604, 609, 0, 518, 538, 1032, 410, 1192, -2,
	1205, 1207, 0, 992, 1210, 1211, 0, 0, 0, 0,
	0, 0, 1255, 1219, 0, 0, 1223, 1224, 1225, 0,
	0, 1228, 0, 1537, 1538, 0, 1232, 0, 0, 0,
	0, 0, 0, 0, 1173, 369, 370, 0, 372, 373,
	1230, 412, 1629, 382, 1131, 1134, 1135, 431, 428, 429,
	907, 910, 630, 695, 293, 294, 786, 0, 779, 809,
	806, 0, 0, 745, 747, 70, 75, 0, 0, 676,
	0, 673, 0, 667, 669, 129, 638, 91, 112, 0,
	0, 1372, 1422, 1347, 0, 1338, 0, 1332, 1333, 1334,
	1339, 676, 0, 870, 885, 871, 994, 1155, 1088, 0,
	0, 0, 1087, 0, 0, 442, 447, 0, 450, 451,
	908, 905, 906, 0, 913, 0, 0, 968, 1608, 0,
	988, 989, 1146, 1147, 990, 1042, -2, 1095, 0, 1000,
	121, 1042, 1020, 0, 1027, 0, 1025, 1018, 700, 605,
	1029, 1206, 1208, 1209, 1212, 1213, 1214, 1260, 1261, 1262,
	0, 0, 1217, 1257, 1258, 1259, 1218, 0, 0, 0,
	0, 0, 1535, 1536, 1253, 0, 0, 1180, 1182, 1183,
	1184, 1185, 1186, 1181, 0, 0, 0, 1172, 1174, 371,
	0, 1629, 920, 290, 0, 0, 810, 812, 807, 808,
	65, 67, 82, 0, 675, 120, 0, 83, 0, 109,
	0, 122, 123, 0, 0, 0, 0, 0, 1346, 1335,
	0, 0, 0, 0, 0, 1539, 1540, 1541, 0, 665,
	0, 868, 0, 886, 887, 1090, 1091, 1092, 995, 892,
	0, 894, 448, 912, 915, 0, 961, 0, 706, 0,
	1044, 0, 991, 1097, 1629, 1002, 1044, 1012, 0, 1022,
	0, 1034, 0, 1028, 695, 362, 0, 1031, 1215, 1216,
	0, 0, 1438, 1629, 0, 1248, 0, 961, 961, 961,
	961, 0, 381, 0, 787, 801, 0, 0, 0, 92,
	96, 0, 118, 115, 0, 124, 0, 0, 0, 0,
	1004, 0, 1324, 0, 0, 0, 1328, 1329, 1330, 1331,
	0, 0, 893, 914, 916, 960, 969, 970, 706, 999,
	0, 1081, 1096, 0, 1001, 1021, 1033, 0, 1036, 603,
	1030, 1256, 0, 1222, 0, 1227, 1236, 1249, 0, 0,
	1161, 0, 1163, 0, 1167, 0, 1169, 0, 0, 383,
	811, 813, 0, 678, 668, 85, 0, 0, 113, 114,
	116, 0, 125, 0, 127, 128, 0, 1325, 1326, 1327,
	857, 879, 962, 1629, 0, 0, 966, 967, 971, 0,
	1069, 0, 0, 1075, 0, 1082, 1101, 1035, 1220, 1226,
	1235, 1237, 1238, 0, 1250, 1251, 1252, 1254, 961, 961,
	961, 961, 1171, 677, 0, 1011, 0, 97, 0, 99,
	101, 102, 1193, 110, 111, 117, 126, 1336, 0, 964,
	0, 1045, 0, 1047, 0, 0, 0, 0, 0, 1079,
	0, 1221, 1239, 0, 1240, 0, 0, 0, 1162, 1164,
	1168, 1170, 679, 86, 87, 0, 98, 0, 0, 963,
	965, 0, 1049, 0, 1070, 0, 0, 0, 0, 0,
	0, 0, 1241, 1243, 1244, 0, 0, 1242, 0, 0,
	100, 1194, 1046, 1043, 0, 1081, 1071, 0, 1073, 0,
	0, 0, 0, 1245, 1247, 1246, 88, 89, 90, 0,
	0, 1051, 0, 1067, 1072, 1074, 1076, 0, 1080, 1078,
	1195, 1050, 0, 1063, 1048, 0, 1077, 1052, -2, 0,
	1068, 1053, -2, 0, 1061, 0, 0, 1054, 1062, 0,
	1057, 0, 0, 0, 1056, 0, -2, 1064, 0, 0,
	1058, -2, 0, 1066, 1065,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 602, 599,
	123, 122, 124, 3, 603, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 600, 135, 601, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:753
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:760
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:766
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:774
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:780
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:784
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:799
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:803
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:814
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:818
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:850
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:858
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:866
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:876
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:896
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:902
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:909
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:917
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:923
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:932
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:942
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:950
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:958
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:966
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:976
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:984
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:994
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1001
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1010
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1024
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1030
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1034
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1040
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1049
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1059
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1063
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1069
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1078
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1082
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1088
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1109
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1122
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1129
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1133
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1139
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1143
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1149
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1156
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1168
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1182
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1186
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1190
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1195
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1199
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1203
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1209
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1218
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1229
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1233
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1239
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1243
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1249
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1253
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1259
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1283
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1302
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1306
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1310
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1319
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1326
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1334
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1341
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1346
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1353
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1362
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1386
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1390
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1396
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1402
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1420
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1437
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1460
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1464
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1468
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1473
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1477
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1483
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1496
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1507
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1520
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1524
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1534
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1547
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1560
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1572
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1579
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1587
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1596
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1600
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1604
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1608
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1612
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1616
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1623
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1627
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1633
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1640
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1649
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1653
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1811
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1815
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1819
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1823
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1827
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1835
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1839
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1843
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1847
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1851
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1855
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1868
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1892
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1896
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1902
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1909
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1917
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1921
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1925
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1929
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1935
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1939
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1945
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1952
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1959
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1968
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1998
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2002
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2006
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2012
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2018
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2022
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2029
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2035
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2039
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2045
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2053
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2062
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2071
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2079
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2087
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2110
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2133
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2140
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2147
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2155
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2169
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2178
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2182
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2186
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2192
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2196
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2202
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2206
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2212
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2216
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2227
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2233
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2238
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2242
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2246
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2250
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2254
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2258
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2262
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2266
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2270
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2276
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2280
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2284
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2288
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2298
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2304
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2331
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2341
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2348
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2359
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2370
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2374
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2380
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2390
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2396
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2400
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2406
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2412
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2416
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2420
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2424
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2430
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2442
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2452
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2462
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2485
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2495
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2499
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2507
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2511
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2519
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2527
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2578
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2582
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2588
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2594
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2599
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2600
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2601
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2606
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2623
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2639
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2650
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2659
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2663
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2669
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2676
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2685
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2695
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2704
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2714
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2724
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2741
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2745
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2749
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2753
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2757
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2766
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2772
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2776
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2784
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2788
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2792
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2796
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2800
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2805
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2836
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2840
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2845
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2851
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2857
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2866
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2870
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2876
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2891
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2898
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2905
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2912
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2919
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2926
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2934
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2941
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2957
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2961
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2980
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2988
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2996
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3009
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3015
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3026
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3041
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3046
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3050
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3059
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3075
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3083
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3091
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3103
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3127
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3131
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3135
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3141
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3146
		{
			yyVAL.item = nil
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3186
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3192
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3200
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3204
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3208
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3221
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3227
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3232
		{
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3236
		{
		}
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3251
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3261
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3269
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3293
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3299
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3305
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3322
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3334
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3338
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3342
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3355
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3365
		{
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3367
		{
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3376
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3386
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3395
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3399
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3403
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3409
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3415
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3427
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3436
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3446
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3458
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3462
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3468
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3494
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3500
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3507
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3516
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3520
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3525
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3529
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3535
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3548
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3552
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3558
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3563
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3567
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3571
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3583
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3587
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3593
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3599
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3603
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3607
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3613
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3617
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3641
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3650
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3659
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3668
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3672
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3678
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3696
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3706
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3710
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3716
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3722
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3728
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3732
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3738
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3744
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3753
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3760
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3771
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3776
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3783
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3799
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3812
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3823
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3827
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3833
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3838
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3845
		{
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3847
		{
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3850
		{
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3859
		{
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3863
		{
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3868
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3877
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3884
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3890
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3898
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3905
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3912
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3932
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3942
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3946
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3952
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3959
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3965
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3973
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3980
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3987
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4006
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4010
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4015
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4019
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4023
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4029
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4038
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4042
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4048
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4052
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4058
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4062
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4068
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4073
		{
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4084
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4088
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4095
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4104
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4110
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4114
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4120
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4124
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4129
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4133
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4146
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4153
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4160
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4178
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4197
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4203
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4210
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4214
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4227
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4231
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4236
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4240
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4247
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4252
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4259
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4265
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4269
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4273
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4277
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4281
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4285
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4291
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4298
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4307
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4311
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4317
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4325
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4329
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4338
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4344
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4348
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4352
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4361
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4367
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4373
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4377
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4383
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4388
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4392
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4396
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4409
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4418
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4426
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4430
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4434
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4448
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4452
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4462
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4472
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4482
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4494
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4502
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4510
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4519
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4527
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4535
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4543
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4551
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4559
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4567
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4583
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4593
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4604
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4618
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4622
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4626
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4631
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4635
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4639
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4648
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4652
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4657
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4661
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4670
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4676
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4680
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4686
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4690
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4695
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4699
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4704
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4712
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4718
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4726
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4734
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4744
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4750
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4759
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4768
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4777
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4787
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4791
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4801
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4805
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4809
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4813
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4819
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4829
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4833
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4839
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4849
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4855
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4861
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4865
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4869
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4875
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4879
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4885
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4889
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4895
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4899
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4905
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4909
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4919
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4932
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4944
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4957
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4975
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4979
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4985
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4995
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4999
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5003
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5008
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5012
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5016
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5020
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5029
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5033
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5037
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5041
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5046
		{
			yyVAL.str = ""
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5050
		{
			yyVAL.str = yyDollar[1].str
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5054
		{
			yyVAL.str = yyDollar[2].str
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5060
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5066
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5070
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5074
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5078
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5082
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5088
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 841:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5124
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5134
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5140
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 844:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5146
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5156
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5161
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5167
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5174
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5178
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5184
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5190
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5195
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5199
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5203
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5207
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5214
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5226
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5231
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5237
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5244
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5248
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5254
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5260
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5264
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5268
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5274
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5280
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5286
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5295
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5307
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5319
		{
			yyVAL.str = yyDollar[1].str
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5323
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5329
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5333
		{
			yyVAL.str = "DEFINER = "
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5337
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5342
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5346
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5360
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5368
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5374
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5384
		{
			yyVAL.str = yyDollar[1].str
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5388
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5394
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5401
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5407
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5415
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5421
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5428
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5435
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5443
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5449
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5458
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5470
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5482
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5494
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5500
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5507
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5515
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5521
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5529
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5535
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5543
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5549
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5558
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5562
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5567
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5571
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5578
		{
			yyVAL.str = yyDollar[3].str
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5583
		{
			yyVAL.str = ""
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5587
		{
			yyVAL.str = yyDollar[2].str
		}
	case 920:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5593
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5607
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5621
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5627
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5633
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5639
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5648
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5657
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5666
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5671
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5677
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5685
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5791
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5795
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5801
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5811
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5815
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5821
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5831
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5835
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5839
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5844
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5848
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5854
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5861
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5867
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5876
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5883
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5892
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5896
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5902
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5916
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5920
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5924
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5929
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5933
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5937
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5941
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5947
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5970
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5992
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5996
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6000
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6004
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6008
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6014
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6018
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6024
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6029
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6034
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6038
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6042
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6046
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6050
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6056
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6071
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6081
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6085
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6094
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6100
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6104
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6110
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6114
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6118
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6123
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6127
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6133
		{
			yyLOCAL = &tree.CreateConnector{
				ConnectorName: yyDollar[3].tableNameUnion(),
				Options:       yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6142
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6153
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6164
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6175
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6179
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6185
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6197
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6206
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6219
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6226
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6236
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6246
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6254
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6265
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6269
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6274
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6278
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6285
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6296
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6309
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6323
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6327
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6331
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6338
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6345
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6352
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6359
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6363
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6367
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6375
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6382
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6393
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6400
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6411
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6417
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6423
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6427
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6434
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6441
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6448
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6455
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6459
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6468
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6472
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6481
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6491
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6495
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6502
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6509
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6513
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6522
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6526
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6532
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6536
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6542
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6551
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6565
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6571
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6575
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6581
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6588
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6597
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6601
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6610
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6615
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6619
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6624
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6628
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6638
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6642
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6653
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6661
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6669
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6677
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6688
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6697
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6707
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6717
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6721
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6726
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6730
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6736
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6740
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6746
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6750
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6759
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6765
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6769
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6775
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6779
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6784
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6788
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6794
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6798
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6802
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6808
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6812
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6816
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6820
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6824
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6828
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6832
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6837
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6841
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6845
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6849
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6853
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6857
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6861
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6865
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6873
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6877
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6881
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6885
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6889
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6893
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6897
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6901
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6905
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6909
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6913
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6917
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6921
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6925
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6929
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6933
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6937
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6941
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6945
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6951
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6955
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6961
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6967
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6971
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6977
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6981
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6985
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6989
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6993
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6997
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7011
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7015
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7024
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7029
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7035
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7042
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7046
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7052
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7056
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7060
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7066
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7070
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7076
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7085
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7094
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7117
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7142
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7156
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7162
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7171
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7180
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7189
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7198
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7208
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7216
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7222
		{
			yyVAL.str = ""
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7226
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7236
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7242
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7248
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7267
		{
			yyVAL.str = ""
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7271
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7277
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7283
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7287
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7291
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7297
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7301
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7305
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7309
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7315
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7319
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7323
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7332
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7338
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7342
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7348
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7352
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7356
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7360
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7364
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7368
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7373
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7377
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7389
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7393
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7397
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7401
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7405
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7409
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7422
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7426
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7430
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7438
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7442
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7448
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7452
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7457
		{
			yyVAL.str = ""
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7461
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7467
		{
			yyVAL.str = ""
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7471
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1235:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7477
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7489
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7496
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7503
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7510
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7517
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7526
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7532
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7538
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7542
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7546
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7550
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7554
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7559
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7566
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7570
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7574
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7583
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7588
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7592
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7608
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7614
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7618
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7622
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7626
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7630
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7634
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7638
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7642
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7646
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7650
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7654
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7658
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7662
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7668
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7672
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7676
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7680
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7684
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7688
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7692
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7696
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7700
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7704
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7708
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7712
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7717
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7725
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7729
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7733
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7737
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7746
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7750
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7754
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7758
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7762
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7768
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7776
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7784
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7797
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7806
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7812
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7816
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7822
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7831
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7843
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7860
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7877
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7890
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7903
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7915
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7929
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7944
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7959
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7976
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7991
		{
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7998
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8002
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8006
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8012
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8016
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8020
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8024
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8030
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8034
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8038
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8044
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8052
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8066
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8073
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8078
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8082
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8087
		{
			yyVAL.str = ","
		}
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8091
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8103
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8129
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8140
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8150
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8160
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8170
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8179
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8188
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8198
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8208
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8218
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8228
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8238
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8248
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8258
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8268
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8278
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8288
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8298
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8308
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8327
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8335
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8343
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8351
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8359
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8369
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8377
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8386
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8394
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8402
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8410
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8418
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8429
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8439
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8451
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8462
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8484
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8520
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8532
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8544
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8555
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8563
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8570
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8577
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8589
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8597
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8607
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8617
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8625
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8636
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8645
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8654
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8662
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8672
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8680
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8694
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8704
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8723
		{
		}
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8725
		{
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8766
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8777
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8781
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8785
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8791
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8800
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8806
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8810
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8817
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8821
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8825
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8833
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8837
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8841
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8845
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8851
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8855
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8859
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8863
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8867
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8871
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8875
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8879
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8883
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8887
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8895
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8899
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8903
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8907
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8911
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8915
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8919
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8923
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8927
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8931
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8941
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8947
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8951
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8958
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8962
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8966
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8972
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8976
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8980
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8984
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8988
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8992
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8996
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9002
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9006
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9010
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9014
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9020
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9033
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9038
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9044
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9048
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9061
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9066
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9070
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9074
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9078
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9082
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9089
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9093
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9107
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9111
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9118
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9129
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9134
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9140
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9152
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9164
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9176
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9189
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9202
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9215
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9228
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9241
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9254
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9267
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9280
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9293
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9306
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9321
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9348
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9390
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9426
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9462
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9479
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9491
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9511
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9531
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9551
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9567
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9580
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9593
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9606
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9619
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9631
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9643
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9655
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9667
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9679
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9691
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9703
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9715
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9727
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9740
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9753
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9766
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9779
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9794
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9802
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9811
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9821
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9844
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9849
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9855
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9862
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9866
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9871
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9875
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9881
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9887
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9894
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9901
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9910
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9917
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9924
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9933
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9937
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9941
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9947
		{
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9949
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9959
		{
			yyVAL.str = ""
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9963
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

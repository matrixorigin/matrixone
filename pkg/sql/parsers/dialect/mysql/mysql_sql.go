// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const MODIFY = 57671
const CHANGE = 57672
const SECOND = 57673
const ASCII = 57674
const COALESCE = 57675
const COLLATION = 57676
const HOUR = 57677
const MICROSECOND = 57678
const MINUTE = 57679
const MONTH = 57680
const QUARTER = 57681
const REPEAT = 57682
const REVERSE = 57683
const ROW_COUNT = 57684
const WEEK = 57685
const REVOKE = 57686
const FUNCTION = 57687
const PRIVILEGES = 57688
const TABLESPACE = 57689
const EXECUTE = 57690
const SUPER = 57691
const GRANT = 57692
const OPTION = 57693
const REFERENCES = 57694
const REPLICATION = 57695
const SLAVE = 57696
const CLIENT = 57697
const USAGE = 57698
const RELOAD = 57699
const FILE = 57700
const TEMPORARY = 57701
const ROUTINE = 57702
const EVENT = 57703
const SHUTDOWN = 57704
const NULLX = 57705
const AUTO_INCREMENT = 57706
const APPROXNUM = 57707
const SIGNED = 57708
const UNSIGNED = 57709
const ZEROFILL = 57710
const ENGINES = 57711
const LOW_CARDINALITY = 57712
const AUTOEXTEND_SIZE = 57713
const ADMIN_NAME = 57714
const RANDOM = 57715
const SUSPEND = 57716
const ATTRIBUTE = 57717
const HISTORY = 57718
const REUSE = 57719
const CURRENT = 57720
const OPTIONAL = 57721
const FAILED_LOGIN_ATTEMPTS = 57722
const PASSWORD_LOCK_TIME = 57723
const UNBOUNDED = 57724
const SECONDARY = 57725
const RESTRICTED = 57726
const USER = 57727
const IDENTIFIED = 57728
const CIPHER = 57729
const ISSUER = 57730
const X509 = 57731
const SUBJECT = 57732
const SAN = 57733
const REQUIRE = 57734
const SSL = 57735
const NONE = 57736
const PASSWORD = 57737
const SHARED = 57738
const EXCLUSIVE = 57739
const MAX_QUERIES_PER_HOUR = 57740
const MAX_UPDATES_PER_HOUR = 57741
const MAX_CONNECTIONS_PER_HOUR = 57742
const MAX_USER_CONNECTIONS = 57743
const FORMAT = 57744
const VERBOSE = 57745
const CONNECTION = 57746
const TRIGGERS = 57747
const PROFILES = 57748
const LOAD = 57749
const INFILE = 57750
const TERMINATED = 57751
const OPTIONALLY = 57752
const ENCLOSED = 57753
const ESCAPED = 57754
const STARTING = 57755
const LINES = 57756
const ROWS = 57757
const IMPORT = 57758
const DISCARD = 57759
const MODUMP = 57760
const OVER = 57761
const PRECEDING = 57762
const FOLLOWING = 57763
const GROUPS = 57764
const DATABASES = 57765
const TABLES = 57766
const SEQUENCES = 57767
const EXTENDED = 57768
const FULL = 57769
const PROCESSLIST = 57770
const FIELDS = 57771
const COLUMNS = 57772
const OPEN = 57773
const ERRORS = 57774
const WARNINGS = 57775
const INDEXES = 57776
const SCHEMAS = 57777
const NODE = 57778
const LOCKS = 57779
const ROLES = 57780
const TABLE_NUMBER = 57781
const COLUMN_NUMBER = 57782
const TABLE_VALUES = 57783
const TABLE_SIZE = 57784
const NAMES = 57785
const GLOBAL = 57786
const PERSIST = 57787
const SESSION = 57788
const ISOLATION = 57789
const LEVEL = 57790
const READ = 57791
const WRITE = 57792
const ONLY = 57793
const REPEATABLE = 57794
const COMMITTED = 57795
const UNCOMMITTED = 57796
const SERIALIZABLE = 57797
const LOCAL = 57798
const EVENTS = 57799
const PLUGINS = 57800
const CURRENT_TIMESTAMP = 57801
const DATABASE = 57802
const CURRENT_TIME = 57803
const LOCALTIME = 57804
const LOCALTIMESTAMP = 57805
const UTC_DATE = 57806
const UTC_TIME = 57807
const UTC_TIMESTAMP = 57808
const REPLACE = 57809
const CONVERT = 57810
const SEPARATOR = 57811
const TIMESTAMPDIFF = 57812
const CURRENT_DATE = 57813
const CURRENT_USER = 57814
const CURRENT_ROLE = 57815
const SECOND_MICROSECOND = 57816
const MINUTE_MICROSECOND = 57817
const MINUTE_SECOND = 57818
const HOUR_MICROSECOND = 57819
const HOUR_SECOND = 57820
const HOUR_MINUTE = 57821
const DAY_MICROSECOND = 57822
const DAY_SECOND = 57823
const DAY_MINUTE = 57824
const DAY_HOUR = 57825
const YEAR_MONTH = 57826
const SQL_TSI_HOUR = 57827
const SQL_TSI_DAY = 57828
const SQL_TSI_WEEK = 57829
const SQL_TSI_MONTH = 57830
const SQL_TSI_QUARTER = 57831
const SQL_TSI_YEAR = 57832
const SQL_TSI_SECOND = 57833
const SQL_TSI_MINUTE = 57834
const RECURSIVE = 57835
const CONFIG = 57836
const DRAINER = 57837
const SOURCE = 57838
const STREAM = 57839
const HEADERS = 57840
const CONNECTOR = 57841
const MATCH = 57842
const AGAINST = 57843
const BOOLEAN = 57844
const LANGUAGE = 57845
const WITH = 57846
const QUERY = 57847
const EXPANSION = 57848
const WITHOUT = 57849
const VALIDATION = 57850
const ADDDATE = 57851
const BIT_AND = 57852
const BIT_OR = 57853
const BIT_XOR = 57854
const CAST = 57855
const COUNT = 57856
const APPROX_COUNT = 57857
const APPROX_COUNT_DISTINCT = 57858
const APPROX_PERCENTILE = 57859
const CURDATE = 57860
const CURTIME = 57861
const DATE_ADD = 57862
const DATE_SUB = 57863
const EXTRACT = 57864
const GROUP_CONCAT = 57865
const MAX = 57866
const MID = 57867
const MIN = 57868
const NOW = 57869
const POSITION = 57870
const SESSION_USER = 57871
const STD = 57872
const STDDEV = 57873
const MEDIAN = 57874
const STDDEV_POP = 57875
const STDDEV_SAMP = 57876
const SUBDATE = 57877
const SUBSTR = 57878
const SUBSTRING = 57879
const SUM = 57880
const SYSDATE = 57881
const SYSTEM_USER = 57882
const TRANSLATE = 57883
const TRIM = 57884
const VARIANCE = 57885
const VAR_POP = 57886
const VAR_SAMP = 57887
const AVG = 57888
const RANK = 57889
const ROW_NUMBER = 57890
const DENSE_RANK = 57891
const NEXTVAL = 57892
const SETVAL = 57893
const CURRVAL = 57894
const LASTVAL = 57895
const ARROW = 57896
const ROW = 57897
const OUTFILE = 57898
const HEADER = 57899
const MAX_FILE_SIZE = 57900
const FORCE_QUOTE = 57901
const PARALLEL = 57902
const UNUSED = 57903
const BINDINGS = 57904
const DO = 57905
const DECLARE = 57906
const LOOP = 57907
const WHILE = 57908
const LEAVE = 57909
const ITERATE = 57910
const UNTIL = 57911
const CALL = 57912
const SPBEGIN = 57913
const BACKEND = 57914
const SERVERS = 57915
const KILL = 57916
const BACKUP = 57917
const FILESYSTEM = 57918
const QUERY_RESULT = 57919

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10356

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 115,
	21, 698,
	-2, 679,
	-1, 132,
	233, 1032,
	235, 955,
	-2, 996,
	-1, 155,
	42, 517,
	235, 517,
	262, 524,
	263, 524,
	451, 517,
	-2, 550,
	-1, 191,
	598, 1743,
	-2, 433,
	-1, 525,
	314, 133,
	425, 133,
	-2, 1655,
	-1, 588,
	81, 1452,
	-2, 1797,
	-1, 589,
	81, 1470,
	-2, 1768,
	-1, 593,
	81, 1471,
	-2, 1796,
	-1, 619,
	81, 1382,
	-2, 1865,
	-1, 620,
	81, 1383,
	-2, 1864,
	-1, 621,
	81, 1384,
	-2, 1854,
	-1, 622,
	81, 1828,
	-2, 1849,
	-1, 623,
	81, 1829,
	-2, 1850,
	-1, 624,
	81, 1830,
	-2, 1856,
	-1, 625,
	81, 1831,
	-2, 1838,
	-1, 626,
	81, 1832,
	-2, 1847,
	-1, 627,
	81, 1833,
	-2, 1857,
	-1, 628,
	81, 1834,
	-2, 1858,
	-1, 629,
	81, 1835,
	-2, 1863,
	-1, 630,
	81, 1836,
	-2, 1868,
	-1, 631,
	81, 1837,
	-2, 1869,
	-1, 633,
	81, 1449,
	-2, 1643,
	-1, 637,
	81, 1454,
	-2, 1656,
	-1, 640,
	81, 1458,
	-2, 1674,
	-1, 644,
	81, 1462,
	-2, 1714,
	-1, 645,
	81, 1463,
	-2, 1792,
	-1, 653,
	81, 1473,
	-2, 1777,
	-1, 654,
	81, 1474,
	-2, 1821,
	-1, 655,
	81, 1475,
	-2, 1787,
	-1, 656,
	81, 1476,
	-2, 1811,
	-1, 667,
	81, 1360,
	-2, 1859,
	-1, 668,
	81, 1361,
	-2, 1860,
	-1, 669,
	81, 1362,
	-2, 1861,
	-1, 673,
	21, 699,
	-2, 662,
	-1, 754,
	446, 550,
	447, 550,
	-2, 518,
	-1, 798,
	122, 1643,
	133, 1643,
	153, 1643,
	-2, 1618,
	-1, 902,
	21, 699,
	-2, 662,
	-1, 1002,
	21, 698,
	-2, 1258,
	-1, 1120,
	513, 997,
	514, 997,
	-2, 873,
	-1, 1374,
	81, 1520,
	-2, 1794,
	-1, 1375,
	81, 1521,
	-2, 1795,
	-1, 1513,
	82, 845,
	-2, 851,
	-1, 1896,
	82, 1604,
	154, 1604,
	-2, 1779,
	-1, 1897,
	82, 1604,
	154, 1604,
	-2, 1778,
	-1, 1898,
	82, 1582,
	154, 1582,
	-2, 1765,
	-1, 1899,
	82, 1583,
	154, 1583,
	-2, 1770,
	-1, 1900,
	82, 1584,
	154, 1584,
	-2, 1702,
	-1, 1901,
	82, 1585,
	154, 1585,
	-2, 1696,
	-1, 1902,
	82, 1586,
	154, 1586,
	-2, 1634,
	-1, 1903,
	82, 1587,
	154, 1587,
	-2, 1767,
	-1, 1904,
	82, 1588,
	154, 1588,
	-2, 1700,
	-1, 1905,
	82, 1589,
	154, 1589,
	-2, 1695,
	-1, 1906,
	82, 1590,
	154, 1590,
	-2, 1688,
	-1, 1908,
	82, 1593,
	154, 1593,
	-2, 1811,
	-1, 1909,
	82, 1573,
	154, 1573,
	-2, 1797,
	-1, 1910,
	82, 1602,
	154, 1602,
	-2, 1768,
	-1, 1911,
	82, 1602,
	154, 1602,
	-2, 1796,
	-1, 1912,
	82, 1602,
	154, 1602,
	-2, 1657,
	-1, 1913,
	82, 1600,
	154, 1600,
	-2, 1787,
	-1, 1914,
	82, 1597,
	154, 1597,
	-2, 1679,
	-1, 1915,
	81, 1554,
	82, 1554,
	154, 1554,
	383, 1554,
	384, 1554,
	385, 1554,
	-2, 1633,
	-1, 1916,
	81, 1555,
	82, 1555,
	154, 1555,
	383, 1555,
	384, 1555,
	385, 1555,
	-2, 1635,
	-1, 1917,
	81, 1558,
	82, 1558,
	154, 1558,
	383, 1558,
	384, 1558,
	385, 1558,
	-2, 1769,
	-1, 1918,
	81, 1560,
	82, 1560,
	154, 1560,
	383, 1560,
	384, 1560,
	385, 1560,
	-2, 1752,
	-1, 1919,
	81, 1562,
	82, 1562,
	154, 1562,
	383, 1562,
	384, 1562,
	385, 1562,
	-2, 1701,
	-1, 1920,
	81, 1564,
	82, 1564,
	154, 1564,
	383, 1564,
	384, 1564,
	385, 1564,
	-2, 1684,
	-1, 1921,
	81, 1565,
	82, 1565,
	154, 1565,
	383, 1565,
	384, 1565,
	385, 1565,
	-2, 1685,
	-1, 1922,
	81, 1567,
	82, 1567,
	154, 1567,
	383, 1567,
	384, 1567,
	385, 1567,
	-2, 1632,
	-1, 1923,
	82, 1607,
	154, 1607,
	383, 1607,
	384, 1607,
	385, 1607,
	-2, 1662,
	-1, 1924,
	82, 1607,
	154, 1607,
	383, 1607,
	384, 1607,
	385, 1607,
	-2, 1675,
	-1, 1925,
	82, 1610,
	154, 1610,
	383, 1610,
	384, 1610,
	385, 1610,
	-2, 1658,
	-1, 1926,
	82, 1610,
	154, 1610,
	383, 1610,
	384, 1610,
	385, 1610,
	-2, 1717,
	-1, 1927,
	82, 1607,
	154, 1607,
	383, 1607,
	384, 1607,
	385, 1607,
	-2, 1737,
	-1, 1943,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	275, 990,
	-2, 983,
	-1, 2082,
	21, 698,
	-2, 792,
	-1, 2278,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	275, 990,
	-2, 984,
	-1, 2298,
	79, 608,
	154, 608,
	-2, 1145,
	-1, 2634,
	191, 990,
	299, 1226,
	-2, 1198,
	-1, 2775,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	-2, 1088,
	-1, 2777,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	-2, 1088,
	-1, 2787,
	79, 608,
	154, 608,
	-2, 1146,
	-1, 2795,
	191, 990,
	299, 1226,
	-2, 1199,
	-1, 2922,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	-2, 1089,
	-1, 3284,
	82, 1050,
	154, 1050,
	-2, 990,
	-1, 3288,
	82, 1050,
	154, 1050,
	-2, 990,
	-1, 3302,
	82, 1054,
	154, 1054,
	-2, 990,
	-1, 3307,
	82, 1055,
	154, 1055,
	-2, 990,
}

const yyPrivate = 57344

const yyLast = 38378

var yyAct = [...]int{
	555, 1594, 3288, 3287, 3296, 3267, 182, 1293, 1355, 534,
	3159, 536, 557, 3220, 529, 3185, 3238, 3167, 2652, 3168,
	544, 2870, 3079, 1871, 2962, 3093, 2809, 1034, 3071, 1351,
	2875, 1214, 2715, 3097, 2905, 2906, 2903, 2997, 585, 2716,
	441, 3032, 797, 674, 2873, 2287, 2771, 1283, 2987, 3080,
	448, 3082, 453, 453, 538, 1548, 2755, 2910, 453, 469,
	478, 1155, 2301, 478, 1984, 1358, 2921, 2602, 2865, 2741,
	167, 2796, 2414, 2415, 2924, 1683, 1680, 2586, 2397, 2744,
	2337, 2649, 2631, 1648, 2407, 2283, 2713, 2076, 2413, 489,
	2701, 2638, 1777, 1746, 1987, 2436, 2684, 2410, 2269, 2567,
	1695, 2570, 483, 2565, 2637, 2603, 2279, 2060, 1892, 2473,
	1884, 1773, 527, 1875, 2510, 1755, 2317, 1955, 1207, 1894,
	528, 1493, 533, 2600, 36, 896, 1754, 1747, 2124, 1772,
	2456, 1720, 1874, 1676, 1651, 730, 2077, 803, 1279, 1128,
	2065, 1649, 2258, 2319, 2253, 791, 1577, 1985, 6, 1586,
	1954, 1163, 178, 8, 177, 7, 1523, 1501, 2141, 441,
	1287, 850, 1248, 1349, 1805, 1774, 1890, 1223, 1104, 447,
	537, 1284, 2104, 1292, 1193, 1980, 114, 2215, 2605, 1934,
	2604, 35, 182, 475, 182, 440, 841, 842, 1784, 1560,
	526, 1559, 1404, 1388, 835, 836, 2216, 1144, 761, 840,
	1340, 528, 26, 913, 545, 801, 15, 1750, 1736, 13,
	1255, 1753, 1130, 14, 1348, 1710, 790, 32, 1164, 1073,
	2084, 465, 1522, 1190, 535, 462, 1192, 1274, 1140, 1410,
	1409, 671, 729, 492, 491, 23, 16, 1354, 10, 168,
	1156, 1247, 707, 727, 1099, 1550, 477, 161, 1781, 164,
	711, 838, 837, 673, 839, 3022, 2241, 2241, 2241, 1035,
	749, 474, 1791, 2758, 2175, 470, 2127, 1506, 472, 2708,
	2130, 2128, 473, 1262, 834, 834, 471, 166, 1090, 449,
	1176, 1260, 834, 2863, 2469, 2125, 2467, 1725, 1258, 2993,
	2988, 2866, 2714, 833, 1497, 1029, 3084, 1749, 672, 1430,
	165, 2014, 3150, 458, 2022, 971, 972, 973, 970, 481,
	2288, 682, 3043, 55, 2799, 832, 2892, 2170, 2742, 8,
	934, 7, 165, 51, 157, 133, 733, 165, 1091, 971,
	972, 973, 970, 2286, 1530, 2162, 2887, 165, 1778, 804,
	165, 165, 165, 3115, 806, 1115, 1114, 1532, 113, 2533,
	165, 1517, 2811, 487, 488, 1307, 3044, 662, 1300, 661,
	663, 664, 1120, 665, 666, 2802, 1938, 2890, 2102, 162,
	968, 165, 51, 157, 133, 2797, 1789, 2443, 2444, 2103,
	2819, 2820, 1693, 1092, 2442, 1304, 2798, 1660, 1297, 2488,
	2481, 162, 1661, 1662, 770, 732, 162, 1325, 113, 675,
	165, 51, 157, 133, 949, 771, 1306, 950, 3087, 1299,
	162, 162, 683, 2142, 2090, 1341, 1573, 2089, 1345, 162,
	2091, 1357, 1172, 2803, 942, 1173, 1194, 944, 1196, 779,
	1507, 1508, 961, 2255, 966, 952, 1152, 3203, 800, 3201,
	162, 1159, 1344, 2256, 2883, 1158, 1161, 1162, 1161, 1162,
	799, 3086, 453, 3085, 1426, 945, 1862, 3149, 3087, 3146,
	1423, 2995, 453, 906, 1425, 1422, 1424, 1428, 1429, 162,
	3086, 3145, 1427, 3085, 3144, 2717, 807, 3189, 3190, 3073,
	478, 478, 2474, 453, 3171, 3172, 3073, 2475, 773, 2476,
	2254, 772, 2998, 2999, 3000, 3001, 3076, 2991, 2717, 2157,
	916, 907, 901, 903, 2353, 1677, 1261, 1259, 3090, 2726,
	947, 1175, 1667, 2745, 2818, 2579, 1988, 916, 1785, 1360,
	2581, 1346, 1336, 2752, 2054, 758, 2897, 1733, 2261, 1933,
	938, 2571, 718, 734, 3017, 132, 2244, 163, 3152, 3153,
	3089, 2807, 1268, 1267, 1343, 974, 2401, 1004, 2821, 964,
	965, 2499, 2167, 2501, 1003, 940, 963, 155, 2020, 844,
	736, 802, 1012, 2804, 2808, 2806, 2805, 943, 946, 775,
	2576, 2577, 774, 948, 2864, 2882, 929, 2468, 937, 905,
	900, 2057, 2884, 2056, 1018, 2575, 2578, 906, 3020, 2894,
	2061, 475, 475, 939, 2650, 2651, 1671, 902, 1794, 1796,
	1797, 2813, 2814, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1433, 1434, 1435, 1436, 1437, 1438,
	1431, 1432, 1790, 757, 756, 1184, 1691, 1692, 3196, 1150,
	1359, 3170, 2273, 2274, 2275, 2276, 959, 960, 3205, 2833,
	755, 1038, 2595, 2821, 2613, 804, 3103, 480, 951, 522,
	806, 731, 524, 1089, 3040, 2800, 2294, 523, 780, 1342,
	479, 2812, 735, 766, 2406, 1940, 1174, 3281, 941, 474,
	474, 2826, 3098, 470, 470, 776, 472, 472, 3297, 3229,
	473, 473, 3200, 3161, 471, 471, 762, 1779, 909, 910,
	918, 917, 3236, 1139, 1097, 448, 1100, 2573, 3021, 2728,
	2505, 2240, 1779, 1039, 2836, 1779, 453, 918, 917, 2963,
	2964, 2965, 2967, 2966, 1070, 2654, 804, 2031, 926, 3016,
	2953, 806, 763, 767, 3261, 2106, 922, 923, 2003, 730,
	3157, 3158, 3151, 3161, 1983, 2005, 2030, 3042, 778, 920,
	752, 2267, 750, 754, 770, 834, 834, 834, 751, 748,
	747, 1010, 753, 738, 739, 737, 740, 741, 742, 743,
	834, 768, 1780, 769, 834, 1006, 1007, 1008, 1009, 834,
	2942, 1792, 1203, 2288, 764, 765, 453, 2126, 1186, 911,
	1160, 2891, 807, 476, 441, 441, 672, 2051, 2052, 2817,
	1202, 927, 2004, 441, 441, 1154, 1153, 1218, 1218, 486,
	453, 1263, 1161, 1162, 1161, 1162, 3241, 3298, 3041, 134,
	1157, 760, 476, 777, 1137, 1136, 1135, 2893, 2171, 478,
	1100, 448, 3292, 2582, 1251, 1251, 1216, 1216, 2260, 1220,
	1678, 134, 2572, 3268, 1795, 182, 134, 3018, 1250, 1250,
	3033, 928, 897, 52, 441, 1151, 134, 2550, 2816, 134,
	134, 134, 1656, 807, 1047, 1048, 2502, 2948, 802, 134,
	2779, 3206, 1806, 1225, 1098, 2453, 2454, 1106, 1107, 1108,
	1109, 1110, 52, 1112, 1983, 2354, 3304, 2355, 2356, 1119,
	134, 2000, 2898, 1990, 2264, 2265, 2438, 2440, 2574, 759,
	2861, 1105, 1668, 1291, 487, 1294, 3070, 1269, 1191, 2263,
	1302, 2646, 1337, 2653, 452, 452, 1366, 1369, 1370, 134,
	460, 2163, 2094, 1212, 1213, 1075, 2018, 1367, 1782, 1111,
	1323, 720, 2504, 721, 1118, 1077, 2650, 2651, 1117, 1198,
	1200, 1993, 1116, 482, 1218, 2560, 1218, 906, 1210, 1211,
	1146, 1147, 3242, 673, 1793, 1133, 2243, 1102, 3291, 2955,
	1138, 3009, 2647, 2351, 3010, 1125, 934, 1148, 1878, 1141,
	1145, 1145, 1145, 1308, 1095, 1166, 1167, 1185, 1169, 1170,
	1171, 1509, 1127, 1510, 1103, 1511, 1670, 724, 725, 726,
	2512, 2511, 1141, 1141, 1361, 1362, 1363, 1364, 1365, 1264,
	1243, 1877, 1177, 1178, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 685, 3012, 1281, 1282,
	1399, 1400, 1165, 2043, 2944, 1168, 1408, 1989, 2943, 1201,
	686, 1298, 1991, 2929, 3009, 1305, 3310, 3010, 1406, 1407,
	1457, 3309, 1447, 1448, 1449, 1441, 475, 954, 3011, 933,
	955, 689, 3004, 1451, 722, 1463, 1332, 1353, 1464, 2439,
	3303, 1289, 1226, 1356, 1466, 458, 1236, 1880, 1879, 1994,
	1286, 1473, 1474, 1290, 1242, 1241, 1252, 3300, 957, 3244,
	3239, 3240, 1318, 1319, 1253, 3282, 1992, 1093, 1094, 1272,
	3012, 1275, 1276, 3277, 1999, 2949, 2950, 1495, 1997, 2372,
	2373, 1499, 688, 1887, 1502, 1334, 691, 690, 969, 1371,
	969, 2681, 1101, 969, 1936, 453, 2074, 1521, 1218, 1525,
	1526, 3011, 1528, 1529, 474, 3271, 1888, 1889, 470, 1551,
	453, 472, 1309, 1218, 1331, 473, 771, 730, 1328, 471,
	1549, 1327, 1491, 1314, 934, 1218, 3270, 2144, 2618, 3301,
	673, 1186, 1368, 953, 1310, 1456, 469, 1787, 1494, 2648,
	2677, 971, 972, 973, 970, 3278, 2381, 1330, 1329, 3248,
	1326, 2768, 676, 3222, 1322, 1572, 1865, 1347, 1352, 719,
	2017, 1350, 1321, 1578, 1578, 3265, 1186, 771, 1186, 1186,
	1837, 958, 453, 1836, 1521, 1521, 2162, 1787, 1218, 1645,
	1646, 1658, 1338, 1439, 1440, 1520, 1443, 2531, 2656, 1576,
	1527, 1390, 781, 3179, 1458, 441, 956, 1218, 1787, 773,
	807, 2371, 772, 2300, 807, 1551, 3173, 1465, 1935, 1467,
	3125, 2593, 1495, 1397, 1398, 3064, 3224, 1495, 1495, 2075,
	2075, 1787, 453, 1521, 1218, 3223, 1700, 3063, 453, 453,
	1704, 1705, 825, 830, 831, 2249, 1708, 1709, 1990, 1993,
	3005, 1715, 1442, 3059, 3081, 969, 2075, 1596, 182, 2299,
	773, 182, 182, 772, 182, 3058, 2246, 2149, 932, 2106,
	1516, 1723, 1640, 1641, 1726, 3180, 676, 1729, 1778, 1468,
	1731, 3057, 1659, 1531, 1978, 1533, 1534, 1535, 3025, 1686,
	1687, 3056, 3025, 1672, 1870, 1498, 1561, 3065, 1563, 1564,
	1457, 1457, 1757, 1492, 898, 969, 3024, 1457, 1457, 1959,
	1841, 1569, 1764, 2916, 904, 1769, 2840, 1664, 1679, 1666,
	1579, 1697, 1713, 3005, 1699, 3025, 1689, 3006, 1724, 1684,
	1685, 1727, 1728, 1142, 1730, 925, 1549, 3025, 1702, 1703,
	1218, 1776, 2665, 1580, 2596, 1524, 2433, 2594, 1545, 1557,
	1558, 2222, 2681, 3025, 1141, 2214, 1552, 1553, 1570, 1546,
	1541, 2176, 1126, 3025, 1556, 1581, 1567, 1568, 1566, 1582,
	1583, 1562, 1554, 1402, 2160, 1869, 1204, 1994, 3025, 1145,
	2153, 2790, 1989, 1983, 1988, 2917, 1986, 1991, 2106, 1444,
	931, 1770, 2619, 1339, 1565, 2458, 2751, 2300, 1758, 1799,
	2382, 2384, 2385, 2386, 2383, 1803, 1804, 1816, 2151, 1571,
	1644, 1647, 1574, 1575, 2666, 1752, 2597, 1809, 2075, 1071,
	1813, 1673, 1752, 969, 1663, 1524, 1665, 969, 2302, 2165,
	827, 828, 829, 969, 1430, 2164, 971, 972, 973, 970,
	475, 1992, 558, 568, 2156, 1694, 1959, 1975, 1698, 1143,
	1832, 559, 2147, 567, 560, 564, 563, 561, 562, 1823,
	1711, 971, 972, 973, 970, 1721, 932, 1830, 1719, 2146,
	899, 1350, 2139, 2137, 1817, 2135, 804, 1842, 2133, 1844,
	2152, 806, 1815, 804, 1768, 1843, 1851, 1738, 806, 1958,
	1848, 1849, 1850, 1866, 1718, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1847, 1515, 1311, 565, 1868, 2976, 1015,
	1846, 1835, 1826, 527, 1759, 906, 1928, 453, 474, 1761,
	1767, 1825, 470, 919, 899, 472, 1824, 894, 1762, 473,
	1763, 934, 453, 471, 453, 453, 453, 1766, 566, 1771,
	2125, 2147, 892, 2838, 2140, 2138, 1956, 2134, 1688, 986,
	2134, 1786, 1315, 2086, 2614, 2623, 1963, 1186, 1113, 2496,
	3104, 1959, 3257, 1807, 3245, 1865, 1960, 1968, 804, 2015,
	1446, 1445, 1142, 806, 1181, 969, 1183, 1798, 1187, 1188,
	1189, 1186, 969, 969, 969, 2930, 1800, 1131, 2782, 1426,
	3023, 1132, 2706, 969, 2010, 1423, 1811, 1390, 969, 1425,
	1422, 1424, 1428, 1429, 3105, 1206, 2192, 1427, 1231, 1232,
	1233, 1234, 1235, 807, 1237, 1238, 1239, 1240, 1801, 1802,
	807, 1245, 1246, 1787, 1316, 899, 2183, 2780, 1182, 2931,
	2615, 1895, 2783, 2946, 891, 887, 888, 889, 890, 2016,
	2197, 2945, 2196, 2195, 2193, 989, 990, 991, 992, 993,
	986, 2757, 1224, 687, 2079, 2079, 1658, 2079, 1930, 985,
	984, 994, 995, 987, 988, 989, 990, 991, 992, 993,
	986, 2781, 2682, 1208, 2616, 441, 441, 2675, 1839, 1495,
	1479, 1495, 2670, 906, 1209, 1861, 1863, 1864, 1143, 1218,
	453, 987, 988, 989, 990, 991, 992, 993, 986, 1495,
	1495, 1947, 453, 1881, 1205, 807, 2194, 906, 448, 1446,
	1445, 2667, 1251, 1937, 1658, 2588, 2403, 2114, 2100, 2116,
	2271, 2242, 1972, 182, 1977, 1973, 1250, 994, 995, 987,
	988, 989, 990, 991, 992, 993, 986, 1038, 2150, 2083,
	2096, 2092, 2081, 2093, 2085, 1122, 1121, 908, 1964, 1433,
	1434, 1435, 1436, 1437, 1438, 1431, 1432, 2119, 1722, 1405,
	1396, 2097, 2098, 2460, 1995, 1996, 1982, 2001, 1981, 2158,
	1976, 1405, 1776, 1812, 1974, 692, 1393, 1395, 1392, 1218,
	1394, 1218, 1971, 1218, 1256, 1519, 1722, 3143, 906, 971,
	972, 973, 970, 2120, 970, 1145, 2958, 2113, 2957, 1039,
	2709, 2477, 2108, 1965, 1966, 971, 972, 973, 970, 2343,
	2168, 973, 970, 1969, 1970, 2342, 2129, 1218, 2201, 1472,
	1198, 1200, 2325, 1895, 2058, 2323, 2937, 2184, 971, 972,
	973, 970, 804, 2208, 2087, 2202, 2203, 806, 1218, 2198,
	2199, 2900, 2901, 2205, 2206, 1017, 1216, 3286, 2200, 2210,
	971, 972, 973, 970, 2270, 3274, 2211, 2101, 1016, 2707,
	971, 972, 973, 970, 2179, 1461, 3230, 1216, 1256, 2209,
	3225, 3163, 3260, 2109, 2112, 3134, 3106, 2110, 3049, 1462,
	1495, 3045, 2895, 2235, 2236, 1502, 2212, 906, 985, 984,
	994, 995, 987, 988, 989, 990, 991, 992, 993, 986,
	2989, 2933, 2932, 2021, 2172, 2023, 2024, 2025, 2026, 2027,
	2028, 2029, 2169, 2784, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2174, 2044, 2045, 2046, 2047,
	2048, 2181, 2049, 3259, 2187, 2155, 1218, 2161, 2896, 2268,
	2159, 2233, 2166, 2748, 2749, 1521, 2284, 2580, 453, 971,
	972, 973, 970, 2492, 2298, 2393, 2111, 1518, 2185, 2472,
	2304, 971, 972, 973, 970, 2118, 2177, 2178, 2471, 807,
	2121, 2391, 1536, 2524, 2376, 2375, 2313, 2191, 2374, 2366,
	2360, 906, 2359, 2358, 3275, 971, 972, 973, 970, 2322,
	2357, 1741, 1740, 3164, 1257, 1739, 906, 906, 906, 1578,
	2750, 1735, 906, 2247, 2333, 2334, 2335, 906, 1734, 2339,
	2340, 2392, 2341, 1312, 2389, 2250, 1350, 2378, 2280, 971,
	972, 973, 970, 1088, 2217, 2218, 2234, 2390, 2237, 2756,
	2223, 2180, 2523, 2281, 1584, 2079, 1701, 985, 984, 994,
	995, 987, 988, 989, 990, 991, 992, 993, 986, 2394,
	1281, 1282, 2305, 1596, 2408, 2566, 3195, 441, 971, 972,
	973, 970, 1521, 906, 1658, 1658, 1658, 1658, 2871, 2251,
	2388, 3191, 2295, 2377, 522, 906, 1658, 524, 3147, 2079,
	3092, 2320, 523, 2904, 1696, 2320, 2316, 1289, 1828, 3068,
	1696, 1696, 2266, 3053, 3048, 1218, 1286, 3047, 3019, 1290,
	2990, 2327, 2939, 2913, 2297, 2899, 2303, 453, 453, 3096,
	8, 2869, 7, 2328, 2329, 2867, 2847, 2844, 2332, 1814,
	2842, 2398, 182, 2338, 2747, 1276, 2312, 182, 2315, 2746,
	2743, 2733, 2318, 2676, 2324, 971, 972, 973, 970, 2207,
	2464, 2877, 2466, 2672, 2663, 2331, 3124, 2429, 1457, 2662,
	1457, 2589, 2557, 2487, 1827, 2556, 2321, 2491, 2555, 3299,
	1495, 1876, 2503, 1218, 2470, 1495, 2498, 971, 972, 973,
	970, 2368, 3112, 1524, 2447, 2387, 2379, 2306, 2369, 2416,
	971, 972, 973, 970, 2367, 2310, 2311, 2308, 2363, 2362,
	2361, 2416, 2461, 971, 972, 973, 970, 2465, 2399, 1867,
	2508, 2404, 2402, 618, 617, 2417, 2418, 2419, 2420, 1743,
	2430, 2876, 1737, 2307, 2428, 2432, 2431, 2309, 1505, 1504,
	673, 1494, 2528, 1313, 2445, 1046, 2486, 1042, 1041, 895,
	2448, 971, 972, 973, 970, 2257, 684, 971, 972, 973,
	970, 3108, 2484, 2517, 3002, 2519, 2920, 2777, 2490, 2459,
	906, 2776, 2463, 2495, 2462, 2775, 2767, 2732, 2569, 2721,
	2441, 2712, 2500, 2483, 1872, 1873, 2711, 2480, 2584, 2830,
	2700, 2482, 2478, 453, 2494, 2699, 2485, 2624, 2489, 977,
	978, 979, 980, 981, 982, 983, 975, 906, 2529, 2522,
	2514, 906, 906, 906, 2509, 971, 972, 973, 970, 2455,
	1658, 1956, 2507, 2622, 2513, 2248, 2245, 2136, 2506, 2626,
	3122, 2132, 2131, 2520, 2521, 570, 115, 1852, 2349, 2350,
	2636, 115, 2639, 2592, 2639, 2639, 1845, 1840, 1838, 906,
	1834, 1820, 2364, 2365, 1833, 2518, 971, 972, 973, 970,
	1831, 2643, 1822, 2658, 2551, 1819, 1818, 1742, 1490, 1489,
	1218, 1218, 1488, 2280, 2655, 2554, 2400, 2558, 2561, 1460,
	1459, 165, 2657, 157, 133, 1450, 1895, 2559, 1230, 1929,
	1228, 459, 3256, 3250, 115, 165, 2585, 2564, 3237, 1216,
	1216, 2659, 2660, 2620, 1946, 2591, 1948, 1949, 1950, 3234,
	3232, 2534, 2535, 3133, 1036, 3066, 453, 2536, 2537, 2538,
	2539, 2569, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2644, 2635, 1521, 1521, 2609, 2610, 2611, 3055, 2621, 1967,
	2515, 2516, 2617, 971, 972, 973, 970, 3050, 2640, 2641,
	162, 1271, 2971, 2956, 2645, 2730, 2952, 2634, 2855, 2630,
	1469, 1470, 1471, 2527, 162, 1475, 1476, 1477, 1478, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 2853, 2828, 2201,
	807, 971, 972, 973, 970, 2827, 2824, 807, 2710, 971,
	972, 973, 970, 2823, 2759, 2608, 2607, 1280, 805, 1273,
	1129, 2395, 115, 984, 994, 995, 987, 988, 989, 990,
	991, 992, 993, 986, 2642, 2326, 2664, 115, 2292, 115,
	2669, 2526, 2291, 2668, 2674, 453, 2673, 2290, 1285, 2678,
	2679, 1288, 1277, 2232, 2145, 2095, 2689, 677, 678, 679,
	680, 2671, 676, 2050, 1957, 2629, 1945, 971, 972, 973,
	970, 2693, 2525, 2696, 2697, 2698, 2231, 1391, 162, 2729,
	3120, 2230, 1224, 1706, 3118, 2229, 2731, 1514, 1513, 1335,
	2705, 2228, 2625, 1301, 1696, 1278, 2627, 2628, 971, 972,
	973, 970, 971, 972, 973, 970, 807, 971, 972, 973,
	970, 971, 972, 973, 970, 2722, 2227, 971, 972, 973,
	970, 1072, 2723, 2724, 2226, 1069, 2598, 2599, 2725, 1068,
	1067, 1066, 2734, 1229, 2825, 2225, 2763, 1065, 2284, 1064,
	1063, 1062, 971, 972, 973, 970, 1061, 1060, 2772, 906,
	971, 972, 973, 970, 1059, 1058, 1057, 2739, 2079, 1658,
	2787, 971, 972, 973, 970, 1056, 1055, 1054, 807, 1053,
	1052, 1051, 1050, 1049, 906, 1045, 1962, 2224, 2736, 1044,
	1043, 1040, 1033, 2636, 3211, 2221, 1032, 906, 1030, 1029,
	1028, 1027, 1026, 2765, 2766, 1025, 1024, 906, 1023, 1022,
	2680, 1021, 1218, 971, 972, 973, 970, 1020, 1019, 1014,
	2754, 971, 972, 973, 970, 2692, 1013, 936, 1521, 893,
	2738, 1942, 906, 2764, 3209, 2789, 1495, 2220, 2740, 2685,
	2686, 1216, 924, 2839, 3169, 2688, 2272, 1495, 2107, 2822,
	2852, 1745, 2786, 2854, 935, 2785, 2691, 2690, 182, 2815,
	2422, 2860, 2219, 971, 972, 973, 970, 2859, 2425, 2857,
	2423, 906, 2421, 2426, 2849, 2424, 2858, 3285, 2831, 2834,
	2154, 2769, 2774, 2427, 2829, 2071, 2072, 2837, 971, 972,
	973, 970, 2148, 2885, 2587, 2841, 1123, 100, 2845, 2843,
	2793, 54, 2846, 1543, 1544, 2850, 2552, 2553, 2851, 2213,
	906, 1218, 1218, 2832, 53, 2632, 2848, 2633, 2204, 906,
	1538, 1539, 1540, 2338, 450, 2856, 2239, 2923, 2862, 2923,
	2019, 2835, 115, 115, 805, 971, 972, 973, 970, 2182,
	1216, 2911, 2909, 2872, 971, 972, 973, 970, 2416, 1632,
	2289, 2562, 1265, 455, 1218, 2886, 2296, 456, 822, 2938,
	2888, 2143, 1401, 2914, 2173, 971, 972, 973, 970, 1074,
	457, 1931, 453, 2345, 906, 906, 1295, 454, 906, 906,
	2346, 2347, 2348, 2911, 1872, 1873, 2915, 2416, 971, 972,
	973, 970, 2926, 2974, 2927, 1707, 2062, 930, 3088, 2973,
	2789, 2968, 2606, 2563, 1549, 1002, 2981, 2314, 2960, 2961,
	2822, 2940, 2969, 2970, 2985, 2986, 2788, 2936, 2252, 1952,
	2815, 1547, 2791, 1512, 3182, 2792, 2907, 807, 1446, 1445,
	1086, 1087, 3052, 2067, 2070, 2071, 2072, 2068, 3015, 2069,
	2073, 1084, 1085, 2661, 2760, 2761, 2762, 1082, 1083, 1080,
	1081, 2059, 3008, 2977, 2055, 1643, 1180, 1179, 962, 2979,
	2878, 2978, 2695, 2105, 1765, 1134, 1076, 3251, 2772, 3155,
	807, 3140, 3138, 3027, 3035, 3099, 3078, 3077, 3075, 3067,
	2984, 3003, 2983, 3007, 2868, 3013, 2735, 2719, 2718, 2703,
	2907, 2907, 2006, 1079, 2907, 2907, 2702, 817, 813, 808,
	812, 815, 2457, 1551, 2493, 3026, 3213, 3212, 3212, 2450,
	2451, 1944, 1821, 921, 3028, 3213, 3031, 3036, 2954, 3038,
	2720, 3037, 906, 3029, 3030, 820, 1218, 2449, 3046, 811,
	2067, 2070, 2071, 2072, 2068, 3254, 2069, 2073, 676, 1149,
	997, 1078, 1001, 3051, 677, 678, 679, 680, 62, 676,
	169, 3, 2, 1195, 2088, 1216, 3060, 3061, 998, 1000,
	996, 1690, 999, 985, 984, 994, 995, 987, 988, 989,
	990, 991, 992, 993, 986, 3083, 906, 1018, 1222, 1,
	818, 2934, 2935, 1503, 3074, 3072, 3100, 821, 985, 984,
	994, 995, 987, 988, 989, 990, 991, 992, 993, 986,
	3095, 681, 2434, 2435, 809, 2694, 906, 2437, 1783, 3091,
	2405, 3094, 2053, 1218, 1932, 3109, 3127, 3130, 2583, 1124,
	723, 1452, 3102, 1320, 2918, 2919, 824, 819, 915, 3110,
	1317, 914, 3117, 3119, 3121, 3123, 912, 1403, 2907, 3131,
	3116, 572, 1216, 1748, 3126, 2396, 2370, 3139, 2980, 3141,
	3142, 3137, 1218, 3181, 3135, 3219, 3132, 3184, 3107, 1333,
	556, 3069, 3165, 2994, 3136, 2996, 2874, 810, 1227, 1788,
	3154, 967, 2479, 459, 745, 2590, 609, 583, 1031, 1303,
	1296, 1216, 2532, 3162, 3188, 826, 582, 2753, 2262, 2452,
	2975, 3039, 2907, 3174, 823, 3175, 3187, 3176, 746, 3177,
	115, 1732, 3178, 2992, 1266, 1270, 906, 2928, 2778, 2612,
	2293, 3295, 3192, 3284, 3083, 3266, 3193, 3249, 3160, 3280,
	3199, 3235, 2907, 2881, 2879, 2880, 3228, 3156, 493, 1669,
	439, 3218, 788, 3207, 2972, 1744, 3210, 3208, 3202, 3204,
	494, 1961, 816, 3148, 3221, 3054, 703, 3226, 1941, 906,
	3214, 3215, 3216, 3217, 704, 706, 2278, 3227, 2277, 1372,
	976, 3231, 115, 3233, 1389, 2548, 115, 2549, 1011, 532,
	1810, 2259, 2810, 2446, 3188, 3247, 61, 115, 60, 814,
	3243, 59, 58, 906, 1714, 906, 3187, 115, 865, 3246,
	190, 3253, 574, 3255, 189, 2902, 3129, 3258, 1696, 3186,
	554, 553, 552, 551, 550, 2066, 3221, 906, 3262, 2064,
	3264, 2063, 3269, 1653, 1652, 3273, 3276, 1712, 2336, 3279,
	2330, 2002, 3197, 3252, 2007, 1585, 3166, 3113, 3062, 3114,
	2951, 2380, 1537, 1998, 3283, 1602, 3290, 2352, 1599, 1598,
	3294, 2344, 3293, 2947, 2941, 1629, 2282, 2770, 3302, 2922,
	2794, 2795, 2801, 1951, 3290, 3307, 3306, 3305, 2530, 3294,
	849, 845, 3308, 847, 848, 1356, 846, 2190, 2186, 1979,
	2601, 1886, 1885, 1883, 865, 1882, 985, 984, 994, 995,
	987, 988, 989, 990, 991, 992, 993, 986, 3101, 1096,
	3014, 2737, 1893, 1891, 2687, 2683, 1756, 1500, 2238, 1356,
	1654, 1356, 1650, 1943, 3111, 2889, 1542, 2727, 853, 696,
	1939, 985, 984, 994, 995, 987, 988, 989, 990, 991,
	992, 993, 986, 1356, 98, 147, 48, 89, 873, 877,
	879, 881, 883, 884, 886, 88, 891, 887, 888, 889,
	890, 97, 868, 869, 870, 871, 851, 852, 874, 145,
	854, 47, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 866, 872, 174, 173, 176, 175, 172, 2122,
	2123, 876, 878, 880, 882, 885, 985, 984, 994, 995,
	987, 988, 989, 990, 991, 992, 993, 986, 171, 1254,
	170, 2925, 670, 38, 853, 37, 33, 12, 843, 11,
	34, 3194, 21, 22, 20, 1324, 19, 25, 867, 31,
	30, 108, 107, 29, 873, 877, 879, 881, 883, 884,
	886, 106, 891, 887, 888, 889, 890, 105, 868, 869,
	870, 871, 851, 852, 874, 104, 854, 103, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 866, 872,
	1808, 102, 28, 18, 42, 41, 1657, 876, 878, 880,
	882, 885, 40, 9, 96, 94, 27, 95, 92, 93,
	90, 73, 72, 71, 985, 984, 994, 995, 987, 988,
	989, 990, 991, 992, 993, 986, 86, 85, 84, 83,
	82, 81, 79, 80, 867, 744, 70, 69, 68, 67,
	66, 91, 77, 87, 78, 76, 75, 74, 65, 64,
	63, 131, 130, 128, 129, 127, 126, 125, 124, 123,
	122, 43, 44, 115, 45, 46, 115, 115, 141, 115,
	140, 142, 144, 146, 143, 138, 136, 139, 137, 135,
	56, 2188, 2189, 17, 24, 4, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 0, 805, 0, 0, 0, 0,
	333, 0, 805, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 546, 0, 0, 0, 278, 0, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 0, 435, 0, 0, 581, 0,
	0, 362, 317, 0, 0, 0, 0, 641, 649, 0,
	0, 0, 0, 0, 2959, 0, 0, 0, 0, 539,
	0, 0, 571, 618, 617, 558, 568, 0, 0, 255,
	188, 436, 0, 437, 559, 0, 567, 560, 564, 563,
	561, 562, 0, 633, 0, 0, 0, 1002, 0, 0,
	530, 543, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 541, 0,
	0, 0, 0, 591, 0, 542, 0, 0, 586, 565,
	569, 0, 0, 0, 0, 246, 367, 383, 256, 358,
	396, 261, 365, 251, 332, 355, 0, 0, 248, 381,
	364, 314, 297, 298, 247, 0, 350, 276, 289, 273,
	330, 566, 589, 593, 272, 655, 587, 391, 250, 0,
	390, 329, 377, 382, 315, 309, 249, 379, 313, 308,
	301, 280, 656, 293, 341, 307, 342, 294, 319, 318,
	320, 0, 0, 875, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	584, 0, 0, 0, 393, 0, 0, 639, 0, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 588, 0,
	353, 335, 652, 531, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 241, 369, 275, 316, 252, 254,
	270, 277, 279, 281, 282, 325, 326, 338, 357, 370,
	371, 372, 274, 262, 352, 263, 291, 264, 242, 267,
	266, 268, 359, 269, 244, 339, 376, 0, 287, 348,
	312, 245, 311, 340, 375, 374, 253, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 1454, 1453, 1455, 405, 285, 238, 239, 445,
	637, 331, 0, 0, 0, 0, 651, 632, 634, 635,
	638, 642, 643, 644, 645, 646, 648, 650, 654, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 2082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	243, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	592, 0, 0, 321, 322, 323, 324, 640, 0, 260,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 410,
	411, 284, 290, 428, 292, 259, 336, 286, 395, 299,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 295,
	296, 360, 300, 306, 349, 394, 334, 354, 257, 385,
	361, 310, 0, 0, 662, 636, 661, 663, 664, 660,
	665, 666, 647, 549, 0, 596, 658, 657, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 237, 265, 0, 240, 0, 304, 0,
	345, 283, 0, 0, 625, 602, 603, 604, 548, 605,
	599, 600, 601, 626, 594, 622, 623, 573, 597, 606,
	621, 607, 624, 627, 628, 667, 668, 613, 669, 610,
	629, 620, 619, 608, 595, 630, 631, 580, 575, 611,
	612, 598, 614, 615, 616, 576, 577, 578, 579, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 165,
	51, 157, 133, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 165, 51, 157, 133, 158, 0, 0,
	0, 0, 0, 865, 150, 0, 0, 0, 159, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 159, 0, 0, 0, 0, 113, 0, 0,
	0, 504, 503, 510, 500, 0, 0, 0, 0, 0,
	0, 113, 101, 507, 508, 0, 509, 513, 162, 0,
	495, 0, 0, 0, 0, 0, 101, 0, 0, 0,
	518, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 504, 503,
	510, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 508, 0, 509, 513, 0, 0, 495, 0, 0,
	0, 0, 0, 522, 0, 0, 524, 518, 0, 0,
	0, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 853, 118, 119, 0, 120, 121, 0,
	971, 972, 973, 970, 0, 0, 0, 0, 118, 119,
	0, 120, 121, 873, 877, 879, 881, 883, 884, 886,
	0, 891, 887, 888, 889, 890, 0, 868, 869, 870,
	871, 851, 852, 874, 0, 854, 0, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 866, 872, 1657,
	1657, 1657, 1657, 0, 0, 0, 876, 878, 880, 882,
	885, 1657, 132, 156, 163, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 156, 163, 1430,
	99, 0, 0, 0, 155, 149, 148, 0, 0, 0,
	0, 57, 0, 867, 0, 0, 0, 0, 155, 149,
	148, 0, 0, 0, 0, 57, 0, 115, 0, 0,
	0, 0, 115, 0, 496, 498, 497, 0, 0, 0,
	0, 0, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 506, 0, 0, 115,
	0, 0, 0, 521, 0, 0, 0, 0, 0, 0,
	499, 0, 151, 152, 153, 0, 0, 0, 0, 0,
	0, 496, 498, 497, 0, 0, 151, 152, 153, 0,
	0, 502, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	521, 0, 160, 0, 0, 0, 0, 499, 109, 0,
	0, 0, 154, 0, 110, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 154, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1426, 0, 0, 0, 115, 0,
	1423, 0, 0, 0, 1425, 1422, 1424, 1428, 1429, 0,
	0, 0, 1427, 0, 501, 505, 511, 0, 512, 514,
	0, 111, 515, 516, 517, 0, 0, 519, 520, 0,
	0, 0, 50, 0, 0, 111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 501, 505, 511, 0, 512, 514, 0, 0, 515,
	516, 517, 0, 0, 519, 520, 0, 0, 0, 0,
	0, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1433, 1434, 1435, 1436, 1437, 1438,
	1431, 1432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 39, 0,
	0, 0, 0, 0, 49, 5, 0, 0, 116, 117,
	0, 112, 39, 0, 0, 0, 0, 0, 49, 0,
	0, 0, 116, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 0, 0, 278, 1496, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 0, 435, 0, 0, 581, 0, 0, 362, 317,
	0, 0, 0, 0, 641, 649, 0, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 539, 0, 0, 571,
	618, 617, 558, 568, 0, 0, 255, 188, 436, 115,
	437, 559, 0, 567, 560, 564, 563, 561, 562, 0,
	633, 0, 0, 0, 0, 0, 0, 530, 543, 0,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 540, 541, 0, 0, 0, 0,
	591, 0, 542, 0, 1657, 1682, 565, 569, 0, 0,
	0, 0, 246, 367, 383, 256, 358, 396, 261, 365,
	251, 332, 355, 0, 0, 248, 381, 364, 314, 297,
	298, 247, 0, 350, 276, 289, 273, 330, 566, 589,
	593, 272, 655, 587, 391, 250, 0, 390, 329, 377,
	382, 315, 309, 249, 379, 313, 308, 301, 280, 656,
	293, 341, 307, 342, 294, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 584, 0, 0,
	0, 393, 0, 115, 639, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 588, 0, 353, 335, 652,
	531, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 241, 369, 275, 316, 252, 254, 270, 277, 279,
	281, 282, 325, 326, 338, 357, 370, 371, 372, 274,
	262, 352, 263, 291, 264, 242, 267, 266, 268, 359,
	269, 244, 339, 376, 0, 287, 348, 312, 245, 311,
	340, 375, 374, 253, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 285, 238, 239, 445, 637, 331, 0,
	0, 0, 0, 651, 632, 634, 635, 638, 642, 643,
	644, 645, 646, 648, 650, 654, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 243, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 592, 0, 0,
	321, 322, 323, 324, 640, 0, 260, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 259, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 257, 385, 361, 310, 0,
	0, 662, 636, 661, 663, 664, 660, 665, 666, 647,
	549, 0, 596, 658, 657, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 265, 0, 240, 0, 304, 0, 345, 283, 0,
	0, 625, 602, 603, 604, 548, 605, 599, 600, 601,
	626, 594, 622, 623, 573, 597, 606, 621, 607, 624,
	627, 628, 667, 668, 613, 669, 610, 629, 620, 619,
	608, 595, 630, 631, 580, 575, 611, 612, 598, 614,
	615, 616, 576, 577, 578, 579, 165, 590, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 546,
	0, 0, 0, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 1005, 0, 0, 362, 317, 0,
	0, 0, 0, 641, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 571, 618,
	617, 558, 568, 0, 0, 255, 188, 436, 0, 437,
	559, 0, 567, 560, 564, 563, 561, 562, 0, 633,
	0, 0, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 541, 0, 0, 0, 0, 591,
	0, 542, 0, 0, 586, 565, 569, 0, 0, 0,
	0, 246, 367, 383, 256, 358, 396, 261, 365, 251,
	332, 355, 0, 0, 248, 381, 364, 314, 297, 298,
	247, 0, 350, 276, 289, 273, 330, 566, 589, 593,
	272, 655, 587, 391, 250, 0, 390, 329, 377, 382,
	315, 309, 249, 379, 313, 308, 301, 280, 656, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 0, 0, 0,
	393, 0, 0, 639, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 588, 0, 353, 335, 652, 531,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	241, 369, 275, 316, 252, 254, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 262,
	352, 263, 291, 264, 242, 267, 266, 268, 359, 269,
	244, 339, 376, 0, 287, 348, 312, 245, 311, 340,
	375, 374, 253, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 238, 239, 445, 637, 331, 0, 0,
	0, 0, 651, 632, 634, 635, 638, 642, 643, 644,
	645, 646, 648, 650, 654, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 243, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 592, 0, 0, 321,
	322, 323, 324, 640, 0, 260, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 284, 290, 428,
	292, 259, 336, 286, 395, 299, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 295, 296, 360, 300, 306,
	349, 394, 334, 354, 257, 385, 361, 310, 0, 0,
	662, 636, 661, 663, 664, 660, 665, 666, 647, 549,
	0, 596, 658, 657, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 237,
	265, 0, 240, 0, 304, 134, 345, 283, 0, 0,
	625, 602, 603, 604, 548, 605, 599, 600, 601, 626,
	594, 622, 623, 573, 597, 606, 621, 607, 624, 627,
	628, 667, 668, 613, 669, 610, 629, 620, 619, 608,
	595, 630, 631, 580, 575, 611, 612, 598, 614, 615,
	616, 576, 577, 578, 579, 0, 590, 0, 401, 402,
	403, 424, 387, 0, 442, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 546, 0,
	0, 0, 278, 3263, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 0,
	435, 0, 0, 581, 0, 0, 362, 317, 0, 0,
	0, 0, 641, 649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 539, 0, 0, 571, 618, 617,
	558, 568, 0, 0, 255, 188, 436, 0, 437, 559,
	0, 567, 560, 564, 563, 561, 562, 0, 633, 0,
	0, 0, 0, 0, 0, 530, 543, 0, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 541, 0, 0, 0, 0, 591, 0,
	542, 0, 0, 586, 565, 569, 0, 0, 0, 0,
	246, 367, 383, 256, 358, 396, 261, 365, 251, 332,
	355, 0, 0, 248, 381, 364, 314, 297, 298, 247,
	0, 350, 276, 289, 273, 330, 566, 589, 593, 272,
	655, 587, 391, 250, 0, 390, 329, 377, 382, 315,
	309, 249, 379, 313, 308, 301, 280, 656, 293, 341,
	307, 342, 294, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 584, 0, 0, 0, 393,
	0, 0, 639, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 588, 0, 353, 335, 652, 531, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 241,
	369, 275, 316, 252, 254, 270, 277, 279, 281, 282,
	325, 326, 338, 357, 370, 371, 372, 274, 262, 352,
	263, 291, 264, 242, 267, 266, 268, 359, 269, 244,
	339, 376, 0, 287, 348, 312, 245, 311, 340, 375,
	374, 253, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 285, 238, 239, 445, 637, 331, 0, 0, 0,
	0, 651, 632, 634, 635, 638, 642, 643, 644, 645,
	646, 648, 650, 654, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 243, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 592, 0, 0, 321, 322,
	323, 324, 640, 0, 260, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 284, 290, 428, 292,
	259, 336, 286, 395, 299, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 295, 296, 360, 300, 306, 349,
	394, 334, 354, 257, 385, 361, 310, 0, 0, 662,
	636, 661, 663, 664, 660, 665, 666, 647, 549, 0,
	596, 658, 657, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 237, 265,
	0, 240, 0, 304, 0, 345, 283, 0, 0, 625,
	602, 603, 604, 548, 605, 599, 600, 601, 626, 594,
	622, 623, 573, 597, 606, 621, 607, 624, 627, 628,
	667, 668, 613, 669, 610, 629, 620, 619, 608, 595,
	630, 631, 580, 575, 611, 612, 598, 614, 615, 616,
	576, 577, 578, 579, 0, 590, 0, 401, 402, 403,
	424, 387, 0, 442, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 446, 438, 546, 0, 0,
	0, 278, 1496, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 0, 435,
	0, 0, 581, 0, 0, 362, 317, 0, 0, 0,
	0, 641, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 539, 0, 0, 571, 618, 617, 558,
	568, 0, 0, 255, 188, 436, 0, 437, 559, 0,
	567, 560, 564, 563, 561, 562, 0, 633, 0, 0,
	0, 0, 0, 0, 530, 543, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 541, 0, 0, 0, 0, 591, 0, 542,
	0, 0, 586, 565, 569, 0, 0, 0, 0, 246,
	367, 383, 256, 358, 396, 261, 365, 251, 332, 355,
	0, 0, 248, 381, 364, 314, 297, 298, 247, 0,
	350, 276, 289, 273, 330, 566, 589, 593, 272, 655,
	587, 391, 250, 0, 390, 329, 377, 382, 315, 309,
	249, 379, 313, 308, 301, 280, 656, 293, 341, 307,
	342, 294, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 0, 0, 0, 393, 0,
	0, 639, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 588, 0, 353, 335, 652, 531, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 241, 369,
	275, 316, 252, 254, 270, 277, 279, 281, 282, 325,
	326, 338, 357, 370, 371, 372, 274, 262, 352, 263,
	291, 264, 242, 267, 266, 268, 359, 269, 244, 339,
	376, 0, 287, 348, 312, 245, 311, 340, 375, 374,
	253, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	285, 238, 239, 445, 637, 331, 0, 0, 0, 0,
	651, 632, 634, 635, 638, 642, 643, 644, 645, 646,
	648, 650, 654, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 243, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 653, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 592, 0, 0, 321, 322, 323,
	324, 640, 0, 260, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 259,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 257, 385, 361, 310, 0, 0, 662, 636,
	661, 663, 664, 660, 665, 666, 647, 549, 0, 596,
	658, 657, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 265, 0,
	240, 0, 304, 0, 345, 283, 0, 0, 625, 602,
	603, 604, 548, 605, 599, 600, 601, 626, 594, 622,
	623, 573, 597, 606, 621, 607, 624, 627, 628, 667,
	668, 613, 669, 610, 629, 620, 619, 608, 595, 630,
	631, 580, 575, 611, 612, 598, 614, 615, 616, 576,
	577, 578, 579, 0, 590, 0, 401, 402, 403, 424,
	387, 0, 442, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 546, 0, 0, 0,
	278, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 581, 0, 0, 362, 317, 0, 0, 0, 0,
	641, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 571, 618, 617, 558, 568,
	0, 0, 255, 188, 436, 0, 437, 559, 0, 567,
	560, 564, 563, 561, 562, 0, 633, 0, 0, 0,
	0, 0, 0, 530, 543, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 541, 1249, 0, 0, 0, 591, 0, 542, 0,
	0, 586, 565, 569, 0, 0, 0, 0, 246, 367,
	383, 256, 358, 396, 261, 365, 251, 332, 355, 0,
	0, 248, 381, 364, 314, 297, 298, 247, 0, 350,
	276, 289, 273, 330, 566, 589, 593, 272, 655, 587,
	391, 250, 0, 390, 329, 377, 382, 315, 309, 249,
	379, 313, 308, 301, 280, 656, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 0, 0, 0, 393, 0, 0,
	639, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 588, 0, 353, 335, 652, 531, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 241, 369, 275,
	316, 252, 254, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 262, 352, 263, 291,
	264, 242, 267, 266, 268, 359, 269, 244, 339, 376,
	0, 287, 348, 312, 245, 311, 340, 375, 374, 253,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	238, 239, 445, 637, 331, 0, 0, 0, 0, 651,
	632, 634, 635, 638, 642, 643, 644, 645, 646, 648,
	650, 654, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 243, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 592, 0, 0, 321, 322, 323, 324,
	640, 0, 260, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 284, 290, 428, 292, 259, 336,
	286, 395, 299, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 295, 296, 360, 300, 306, 349, 394, 334,
	354, 257, 385, 361, 310, 0, 0, 662, 636, 661,
	663, 664, 660, 665, 666, 647, 549, 0, 596, 658,
	657, 659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 237, 265, 0, 240,
	0, 304, 0, 345, 283, 0, 0, 625, 602, 603,
	604, 548, 605, 599, 600, 601, 626, 594, 622, 623,
	573, 597, 606, 621, 607, 624, 627, 628, 667, 668,
	613, 669, 610, 629, 620, 619, 608, 595, 630, 631,
	580, 575, 611, 612, 598, 614, 615, 616, 576, 577,
	578, 579, 0, 0, 0, 401, 402, 403, 424, 387,
	590, 442, 0, 1829, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 446, 438, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 278, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 434, 0, 435, 0, 0, 581, 0, 0,
	362, 317, 0, 0, 0, 0, 641, 649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 539, 0,
	0, 571, 618, 617, 558, 568, 0, 0, 255, 188,
	436, 0, 437, 559, 0, 567, 560, 564, 563, 561,
	562, 0, 633, 0, 0, 0, 0, 0, 0, 530,
	543, 0, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 541, 0, 0,
	0, 0, 591, 0, 542, 0, 0, 586, 565, 569,
	0, 0, 0, 0, 246, 367, 383, 256, 358, 396,
	261, 365, 251, 332, 355, 0, 0, 248, 381, 364,
	314, 297, 298, 247, 0, 350, 276, 289, 273, 330,
	566, 589, 593, 272, 655, 587, 391, 250, 0, 390,
	329, 377, 382, 315, 309, 249, 379, 313, 308, 301,
	280, 656, 293, 341, 307, 342, 294, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 584,
	0, 0, 0, 393, 0, 0, 639, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 588, 0, 353,
	335, 652, 531, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 241, 369, 275, 316, 252, 254, 270,
	277, 279, 281, 282, 325, 326, 338, 357, 370, 371,
	372, 274, 262, 352, 263, 291, 264, 242, 267, 266,
	268, 359, 269, 244, 339, 376, 0, 287, 348, 312,
	245, 311, 340, 375, 374, 253, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 285, 238, 239, 445, 637,
	331, 0, 0, 0, 0, 651, 632, 634, 635, 638,
	642, 643, 644, 645, 646, 648, 650, 654, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 243,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 653,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 592,
	0, 0, 321, 322, 323, 324, 640, 0, 260, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	284, 290, 428, 292, 259, 336, 286, 395, 299, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 295, 296,
	360, 300, 306, 349, 394, 334, 354, 257, 385, 361,
	310, 0, 0, 662, 636, 661, 663, 664, 660, 665,
	666, 647, 549, 0, 596, 658, 657, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 237, 265, 0, 240, 0, 304, 0, 345,
	283, 0, 0, 625, 602, 603, 604, 548, 605, 599,
	600, 601, 626, 594, 622, 623, 573, 597, 606, 621,
	607, 624, 627, 628, 667, 668, 613, 669, 610, 629,
	620, 619, 608, 595, 630, 631, 580, 575, 611, 612,
	598, 614, 615, 616, 576, 577, 578, 579, 0, 590,
	0, 401, 402, 403, 424, 387, 0, 442, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 446,
	438, 546, 0, 0, 0, 278, 0, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 0, 435, 0, 0, 581, 0, 0, 362,
	317, 0, 0, 0, 0, 641, 649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 539, 0, 0,
	571, 618, 617, 558, 568, 0, 0, 255, 188, 436,
	0, 437, 559, 0, 567, 560, 564, 563, 561, 562,
	0, 633, 0, 0, 0, 0, 0, 0, 530, 543,
	0, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 541, 0, 0, 0,
	0, 591, 0, 542, 0, 0, 586, 565, 569, 0,
	0, 0, 0, 246, 367, 383, 256, 358, 396, 261,
	365, 251, 332, 355, 0, 0, 248, 381, 364, 314,
	297, 298, 247, 0, 350, 276, 289, 273, 330, 566,
	589, 593, 272, 655, 587, 391, 250, 0, 390, 329,
	377, 382, 315, 309, 249, 379, 313, 308, 301, 280,
	656, 293, 341, 307, 342, 294, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 0,
	0, 0, 393, 0, 0, 639, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 588, 0, 353, 335,
	652, 531, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 241, 369, 275, 316, 252, 254, 270, 277,
	279, 281, 282, 325, 326, 338, 357, 370, 371, 372,
	274, 262, 352, 263, 291, 264, 242, 267, 266, 268,
	359, 269, 244, 339, 376, 0, 287, 348, 312, 245,
	311, 340, 375, 374, 253, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 285, 238, 239, 445, 637, 331,
	0, 0, 0, 0, 651, 632, 634, 635, 638, 642,
	643, 644, 645, 646, 648, 650, 654, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 243, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 592, 0,
	0, 321, 322, 323, 324, 640, 0, 260, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 259, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 295, 296, 360,
	300, 306, 349, 394, 334, 354, 257, 385, 361, 310,
	0, 0, 662, 636, 661, 663, 664, 660, 665, 666,
	647, 549, 0, 596, 658, 657, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 237, 265, 0, 240, 0, 304, 0, 345, 283,
	0, 0, 625, 602, 603, 604, 548, 605, 599, 600,
	601, 626, 594, 622, 623, 573, 597, 606, 621, 607,
	624, 627, 628, 667, 668, 613, 669, 610, 629, 620,
	619, 608, 595, 630, 631, 580, 575, 611, 612, 598,
	614, 615, 616, 576, 577, 578, 579, 0, 590, 0,
	401, 402, 403, 424, 387, 0, 442, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 1373, 0, 446, 438,
	546, 0, 0, 0, 278, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 0, 435, 0, 0, 581, 0, 0, 362, 317,
	0, 0, 0, 0, 641, 649, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 539, 0, 0, 571,
	618, 617, 558, 568, 0, 0, 255, 188, 436, 0,
	437, 559, 0, 567, 560, 564, 563, 561, 562, 0,
	633, 0, 0, 0, 0, 0, 0, 0, 543, 0,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 541, 0, 0, 0, 0,
	591, 0, 542, 0, 0, 586, 565, 569, 0, 0,
	0, 0, 246, 367, 383, 256, 358, 396, 261, 365,
	251, 332, 355, 0, 0, 248, 381, 364, 314, 297,
	298, 247, 0, 350, 276, 289, 273, 330, 566, 589,
	593, 272, 655, 587, 391, 250, 0, 390, 329, 377,
	382, 315, 309, 249, 379, 313, 308, 301, 280, 656,
	293, 341, 307, 342, 294, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 584, 0, 0,
	0, 393, 0, 0, 639, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 588, 0, 353, 335, 652,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 241, 369, 275, 316, 252, 254, 270, 277, 279,
	281, 282, 325, 326, 338, 357, 370, 371, 372, 274,
	262, 352, 263, 291, 264, 242, 267, 266, 268, 359,
	269, 244, 339, 376, 0, 287, 348, 312, 245, 311,
	340, 375, 374, 253, 400, 1374, 1375, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 285, 238, 239, 445, 637, 331, 0,
	0, 0, 0, 651, 632, 634, 635, 638, 642, 643,
	644, 645, 646, 648, 650, 654, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 243, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 592, 0, 0,
	321, 322, 323, 324, 640, 0, 260, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 259, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 257, 385, 361, 310, 0,
	0, 662, 636, 661, 663, 664, 660, 665, 666, 647,
	549, 0, 596, 658, 657, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 265, 0, 240, 0, 304, 0, 345, 283, 0,
	0, 625, 602, 603, 604, 548, 605, 599, 600, 601,
	626, 594, 622, 623, 573, 597, 606, 621, 607, 624,
	627, 628, 667, 668, 613, 669, 610, 629, 620, 619,
	608, 595, 630, 631, 580, 575, 611, 612, 598, 614,
	615, 616, 576, 577, 578, 579, 0, 590, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 546,
	0, 0, 0, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 581, 0, 0, 362, 317, 0,
	0, 0, 0, 641, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 571, 618,
	617, 558, 568, 0, 0, 255, 188, 436, 0, 437,
	559, 0, 567, 560, 564, 563, 561, 562, 0, 633,
	0, 0, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 541, 0, 0, 0, 0, 591,
	0, 542, 0, 0, 586, 565, 569, 0, 0, 0,
	0, 246, 367, 383, 256, 358, 396, 261, 365, 251,
	332, 355, 0, 0, 248, 381, 364, 314, 297, 298,
	247, 0, 350, 276, 289, 273, 330, 566, 589, 593,
	272, 655, 587, 391, 250, 0, 390, 329, 377, 382,
	315, 309, 249, 379, 313, 308, 301, 280, 656, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 0, 0, 0,
	393, 0, 0, 639, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 588, 0, 353, 335, 652, 531,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	241, 369, 275, 316, 252, 254, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 262,
	352, 263, 291, 264, 242, 267, 266, 268, 359, 269,
	244, 339, 376, 0, 287, 348, 312, 245, 311, 340,
	375, 374, 253, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 238, 239, 445, 637, 331, 0, 0,
	0, 0, 651, 632, 634, 635, 638, 642, 643, 644,
	645, 646, 648, 650, 654, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 243, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 592, 0, 0, 321,
	322, 323, 324, 640, 0, 260, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 284, 290, 428,
	292, 259, 336, 286, 395, 299, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 295, 296, 360, 300, 306,
	349, 394, 334, 354, 257, 385, 361, 310, 0, 0,
	662, 636, 661, 663, 664, 660, 665, 666, 647, 549,
	0, 596, 658, 657, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 237,
	265, 0, 240, 0, 304, 0, 345, 283, 0, 0,
	625, 602, 603, 604, 548, 605, 599, 600, 601, 626,
	594, 622, 623, 573, 597, 606, 621, 607, 624, 627,
	628, 667, 668, 613, 669, 610, 629, 620, 619, 608,
	595, 630, 631, 580, 575, 611, 612, 598, 614, 615,
	616, 576, 577, 578, 579, 0, 590, 0, 401, 402,
	403, 424, 387, 0, 442, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 546, 0,
	0, 0, 278, 0, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 0,
	435, 0, 0, 581, 0, 0, 362, 317, 0, 0,
	0, 0, 641, 649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 539, 0, 0, 571, 618, 617,
	558, 568, 0, 0, 255, 188, 436, 0, 437, 559,
	0, 567, 560, 564, 563, 561, 562, 0, 633, 0,
	0, 0, 0, 0, 0, 0, 543, 0, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 541, 0, 0, 0, 0, 591, 0,
	542, 0, 0, 586, 565, 569, 0, 0, 0, 0,
	246, 367, 383, 256, 358, 396, 261, 365, 251, 332,
	355, 0, 0, 248, 381, 364, 314, 297, 298, 247,
	0, 350, 276, 289, 273, 330, 566, 589, 593, 272,
	655, 587, 391, 250, 0, 390, 329, 377, 382, 315,
	309, 249, 379, 313, 308, 301, 280, 656, 293, 341,
	307, 342, 294, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 584, 0, 0, 0, 393,
	0, 0, 639, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 588, 0, 353, 335, 652, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 241,
	369, 275, 316, 252, 254, 270, 277, 279, 281, 282,
	325, 326, 338, 357, 370, 371, 372, 274, 262, 352,
	263, 291, 264, 242, 267, 266, 268, 359, 269, 244,
	339, 376, 0, 287, 348, 312, 245, 311, 340, 375,
	374, 253, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 285, 238, 239, 445, 637, 331, 0, 0, 0,
	0, 651, 632, 634, 635, 638, 642, 643, 644, 645,
	646, 648, 650, 654, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 243, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 592, 0, 0, 321, 322,
	323, 324, 640, 0, 260, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 284, 290, 428, 292,
	259, 336, 286, 395, 299, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 295, 296, 360, 300, 306, 349,
	394, 334, 354, 257, 385, 361, 310, 0, 0, 662,
	636, 661, 663, 664, 660, 665, 666, 647, 549, 0,
	596, 658, 657, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 237, 265,
	0, 240, 0, 304, 0, 345, 283, 0, 0, 625,
	602, 603, 604, 548, 605, 599, 600, 601, 626, 594,
	622, 623, 573, 597, 606, 621, 607, 624, 627, 628,
	667, 668, 613, 669, 610, 629, 620, 619, 608, 595,
	630, 631, 580, 575, 611, 612, 598, 614, 615, 616,
	576, 577, 578, 579, 0, 0, 0, 401, 402, 403,
	424, 387, 0, 442, 165, 51, 157, 133, 0, 0,
	0, 0, 0, 0, 333, 446, 438, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 150,
	0, 278, 0, 159, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 0, 435,
	0, 0, 113, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 0, 0,
	0, 0, 0, 162, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 255, 188, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	367, 383, 256, 358, 396, 261, 365, 251, 332, 355,
	0, 0, 248, 381, 364, 314, 297, 298, 247, 0,
	350, 276, 289, 273, 330, 0, 380, 408, 272, 399,
	0, 391, 250, 0, 390, 329, 377, 382, 315, 309,
	249, 379, 313, 308, 301, 280, 423, 293, 341, 307,
	342, 294, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 132, 156, 163,
	0, 99, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 180, 0, 0, 0, 366, 0, 0, 302, 155,
	149, 148, 409, 0, 353, 335, 57, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 241, 369,
	275, 316, 252, 254, 270, 277, 279, 281, 282, 325,
	326, 338, 357, 370, 371, 372, 274, 262, 352, 263,
	291, 264, 242, 267, 266, 268, 359, 269, 244, 339,
	376, 0, 287, 348, 312, 245, 311, 340, 375, 374,
	253, 400, 406, 407, 0, 0, 412, 151, 152, 153,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	285, 238, 239, 388, 271, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 183,
	0, 0, 433, 191, 0, 0, 0, 154, 0, 192,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 243, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 288, 0, 260, 416, 346, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 259,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 257, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 265, 0,
	240, 0, 304, 134, 345, 283, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 0, 0, 233,
	234, 235, 236, 0, 0, 0, 401, 402, 403, 424,
	387, 333, 193, 39, 181, 184, 186, 185, 0, 49,
	5, 0, 0, 116, 194, 438, 0, 0, 278, 0,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1037, 0, 0, 187, 0, 0, 558, 568, 0, 0,
	255, 188, 436, 0, 437, 559, 0, 567, 560, 564,
	563, 561, 562, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 246, 367, 383, 256,
	358, 396, 261, 365, 251, 332, 355, 0, 0, 248,
	381, 364, 314, 297, 298, 247, 0, 350, 276, 289,
	273, 330, 566, 380, 408, 272, 399, 0, 391, 250,
	0, 390, 329, 377, 382, 315, 309, 249, 379, 313,
	308, 301, 280, 423, 293, 341, 307, 342, 294, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 241, 369, 275, 316, 252,
	254, 270, 277, 279, 281, 282, 325, 326, 338, 357,
	370, 371, 372, 274, 262, 352, 263, 291, 264, 242,
	267, 266, 268, 359, 269, 244, 339, 376, 0, 287,
	348, 312, 245, 311, 340, 375, 374, 253, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 285, 238, 239,
	445, 271, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 243, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 288, 0,
	260, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 284, 290, 428, 292, 259, 336, 286, 395,
	299, 0, 421, 0, 422, 0, 0, 0, 0, 328,
	295, 296, 360, 300, 306, 349, 394, 334, 354, 257,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 237, 265, 0, 240, 0, 304,
	0, 345, 283, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 0, 233, 234, 235, 236,
	0, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	0, 0, 0, 165, 51, 157, 133, 0, 0, 0,
	0, 446, 438, 333, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 255, 188, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 367,
	383, 256, 358, 396, 261, 365, 251, 332, 355, 0,
	0, 248, 381, 364, 314, 297, 298, 247, 0, 350,
	276, 289, 273, 330, 0, 380, 408, 272, 399, 0,
	391, 250, 0, 390, 329, 377, 382, 315, 309, 249,
	379, 313, 308, 301, 280, 423, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 241, 369, 275,
	316, 252, 254, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 262, 352, 263, 291,
	264, 242, 267, 266, 268, 359, 269, 244, 339, 376,
	0, 287, 348, 312, 245, 311, 340, 375, 374, 253,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	238, 239, 445, 271, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 243, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	464, 466, 260, 416, 346, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 284, 290, 428, 292, 259, 336,
	286, 395, 299, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 295, 296, 360, 300, 306, 349, 394, 334,
	354, 257, 385, 361, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 237, 265, 0, 240,
	0, 304, 134, 345, 283, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 333, 0, 0, 233, 234,
	235, 236, 0, 865, 0, 401, 402, 403, 424, 387,
	0, 442, 278, 0, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 446, 438, 0, 0, 0, 434, 0,
	435, 0, 0, 0, 0, 0, 362, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 255, 188, 436, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 853, 0, 0, 0, 0, 0, 0,
	246, 367, 383, 256, 358, 396, 261, 365, 251, 332,
	355, 0, 0, 1915, 1917, 1918, 1919, 1920, 1921, 1922,
	0, 1927, 1923, 1924, 1925, 1926, 0, 1910, 1911, 1912,
	1913, 851, 1896, 1916, 0, 1897, 329, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1914, 341,
	307, 342, 294, 319, 318, 320, 876, 878, 880, 882,
	885, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 1909, 0, 353, 335, 0, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 241,
	369, 275, 316, 252, 254, 270, 277, 279, 281, 282,
	325, 326, 338, 357, 370, 371, 372, 274, 262, 352,
	263, 291, 264, 242, 267, 266, 268, 359, 269, 244,
	339, 376, 0, 287, 348, 312, 245, 311, 340, 375,
	374, 253, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 285, 238, 239, 445, 271, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	0, 0, 0, 433, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 243, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 413, 0, 0, 321, 322,
	323, 324, 288, 0, 260, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 284, 290, 428, 292,
	259, 336, 286, 395, 299, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 295, 296, 360, 300, 306, 349,
	394, 334, 354, 257, 385, 361, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 237, 265,
	0, 240, 875, 304, 0, 345, 283, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 333, 0, 0,
	233, 234, 235, 236, 0, 0, 0, 401, 402, 403,
	424, 387, 0, 442, 278, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 446, 438, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 255, 188, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 1990, 1993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 367, 383, 256, 358, 396, 261, 365,
	251, 332, 355, 0, 0, 248, 381, 364, 314, 297,
	298, 247, 0, 350, 276, 289, 273, 330, 0, 380,
	408, 272, 399, 0, 391, 250, 0, 390, 329, 377,
	382, 315, 309, 249, 379, 313, 308, 301, 280, 423,
	293, 341, 307, 342, 294, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1994, 393, 0, 0, 0, 1989, 0, 1988, 366, 1986,
	1991, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 241, 369, 275, 316, 252, 254, 270, 277, 279,
	281, 282, 325, 326, 338, 357, 370, 371, 372, 274,
	262, 352, 263, 291, 264, 242, 267, 266, 268, 359,
	269, 244, 339, 376, 1992, 287, 348, 312, 245, 311,
	340, 375, 374, 253, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 285, 238, 239, 445, 271, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 243, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 288, 0, 260, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 259, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 257, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 265, 0, 240, 0, 304, 0, 345, 283, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 0, 233, 234, 235, 236, 333, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 0, 0, 1716, 0,
	0, 0, 0, 278, 0, 0, 303, 446, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 1717, 0, 0, 0, 255, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 971, 972, 973, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 367, 383, 256, 358, 396, 261, 365, 251,
	332, 355, 0, 0, 248, 381, 364, 314, 297, 298,
	247, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 250, 0, 390, 329, 377, 382,
	315, 309, 249, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	241, 369, 275, 316, 252, 254, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 262,
	352, 263, 291, 264, 242, 267, 266, 268, 359, 269,
	244, 339, 376, 0, 287, 348, 312, 245, 311, 340,
	375, 374, 253, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 238, 239, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 243, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 260, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 284, 290, 428,
	292, 259, 336, 286, 395, 299, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 295, 296, 360, 300, 306,
	349, 394, 334, 354, 257, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 237,
	265, 0, 240, 0, 304, 0, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 333, 0,
	0, 233, 234, 235, 236, 0, 0, 0, 401, 402,
	403, 424, 387, 0, 442, 278, 787, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 434, 0, 435, 0, 0, 0, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 794, 795, 0, 0, 0, 0, 255, 188, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 367, 782, 256, 358, 396, 261,
	365, 251, 332, 355, 0, 0, 248, 381, 364, 314,
	297, 298, 247, 0, 350, 276, 289, 273, 330, 0,
	380, 408, 272, 399, 773, 391, 250, 772, 390, 329,
	377, 382, 315, 309, 249, 379, 313, 308, 301, 280,
	423, 293, 341, 307, 342, 294, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	785, 344, 241, 369, 275, 316, 252, 254, 270, 277,
	279, 281, 282, 325, 326, 338, 357, 370, 371, 372,
	274, 262, 352, 263, 291, 264, 242, 267, 266, 268,
	359, 269, 244, 339, 376, 0, 287, 348, 312, 245,
	311, 340, 375, 374, 253, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 285, 238, 239, 445, 271, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 243, 417,
	0, 0, 0, 0, 0, 0, 786, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 789, 0,
	0, 321, 322, 323, 324, 288, 0, 260, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 259, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 796, 783, 792, 784,
	300, 306, 349, 394, 334, 354, 257, 385, 361, 793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 237, 265, 0, 240, 0, 304, 0, 345, 283,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	333, 0, 0, 233, 234, 235, 236, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 278, 0, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 255,
	188, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 2009, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 367, 383, 256, 358,
	396, 261, 365, 251, 332, 355, 0, 0, 248, 381,
	364, 314, 297, 298, 247, 0, 350, 276, 289, 273,
	330, 0, 380, 408, 272, 399, 0, 391, 250, 0,
	390, 329, 377, 382, 315, 309, 249, 379, 313, 308,
	301, 280, 423, 293, 341, 307, 342, 294, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 393, 0, 0, 0, 2013, 2011,
	0, 366, 0, 2012, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 241, 369, 275, 316, 252, 254,
	270, 277, 279, 281, 282, 325, 326, 338, 357, 370,
	371, 372, 274, 262, 352, 263, 291, 264, 242, 267,
	266, 268, 359, 269, 244, 339, 376, 0, 287, 348,
	312, 245, 311, 340, 375, 374, 253, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 285, 238, 239, 445,
	271, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	243, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 288, 0, 260,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 284, 290, 428, 292, 259, 336, 286, 395, 299,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 295,
	296, 360, 300, 306, 349, 394, 334, 354, 257, 385,
	361, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 237, 265, 0, 240, 0, 304, 0,
	345, 283, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 233, 234, 235, 236, 165,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 0, 278, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 434, 0, 435, 0, 0, 113, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 1760,
	0, 187, 0, 0, 0, 0, 0, 0, 255, 188,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 367, 383, 256, 358, 396,
	261, 365, 251, 332, 355, 0, 0, 248, 381, 364,
	314, 297, 298, 247, 0, 350, 276, 289, 273, 330,
	0, 380, 408, 272, 399, 0, 391, 250, 0, 390,
	329, 377, 382, 315, 309, 249, 379, 313, 308, 301,
	280, 423, 293, 341, 307, 342, 294, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 241, 369, 275, 316, 252, 254, 270,
	277, 279, 281, 282, 325, 326, 338, 357, 370, 371,
	372, 274, 262, 352, 263, 291, 264, 242, 267, 266,
	268, 359, 269, 244, 339, 376, 0, 287, 348, 312,
	245, 311, 340, 375, 374, 253, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 285, 238, 239, 445, 271,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 243,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 288, 0, 260, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	284, 290, 428, 292, 259, 336, 286, 395, 299, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 295, 296,
	360, 300, 306, 349, 394, 334, 354, 257, 385, 361,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 237, 265, 0, 240, 0, 304, 134, 345,
	283, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 0, 233, 234, 235, 236, 165, 0,
	0, 401, 402, 403, 424, 387, 0, 442, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 446,
	438, 0, 0, 0, 0, 278, 0, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 0, 435, 0, 0, 113, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 1751, 0,
	187, 0, 0, 0, 0, 0, 0, 255, 188, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 367, 383, 256, 358, 396, 261,
	365, 251, 332, 355, 0, 0, 248, 381, 364, 314,
	297, 298, 247, 0, 350, 276, 289, 273, 330, 0,
	380, 408, 272, 399, 0, 391, 250, 0, 390, 329,
	377, 382, 315, 309, 249, 379, 313, 308, 301, 280,
	423, 293, 341, 307, 342, 294, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 241, 369, 275, 316, 252, 254, 270, 277,
	279, 281, 282, 325, 326, 338, 357, 370, 371, 372,
	274, 262, 352, 263, 291, 264, 242, 267, 266, 268,
	359, 269, 244, 339, 376, 0, 287, 348, 312, 245,
	311, 340, 375, 374, 253, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 285, 238, 239, 445, 271, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 243, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 288, 0, 260, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 259, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 295, 296, 360,
	300, 306, 349, 394, 334, 354, 257, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 237, 265, 0, 240, 0, 304, 134, 345, 283,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 0, 0, 233, 234, 235, 236, 165, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 0, 278, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 0, 435, 0, 0, 113, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 255, 188, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 367, 383, 256, 358, 396, 261, 365,
	251, 332, 355, 0, 0, 248, 381, 364, 314, 297,
	298, 247, 0, 350, 276, 289, 273, 330, 0, 380,
	408, 272, 399, 0, 391, 250, 0, 390, 329, 377,
	382, 315, 309, 249, 379, 313, 308, 301, 280, 423,
	293, 341, 307, 342, 294, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 241, 369, 275, 316, 252, 254, 270, 277, 279,
	281, 282, 325, 326, 338, 357, 370, 371, 372, 274,
	262, 352, 263, 291, 264, 242, 267, 266, 268, 359,
	269, 244, 339, 376, 0, 287, 348, 312, 245, 311,
	340, 375, 374, 253, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 285, 238, 239, 445, 271, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 243, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 288, 0, 260, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 259, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 257, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 265, 0, 240, 0, 304, 134, 345, 283, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 333,
	0, 0, 233, 234, 235, 236, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 278, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 794, 795, 0, 0, 0, 0, 255, 188,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 367, 383, 256, 358, 396,
	261, 365, 251, 332, 355, 0, 0, 248, 381, 364,
	314, 297, 298, 247, 0, 350, 276, 289, 273, 330,
	0, 380, 408, 272, 399, 773, 391, 250, 772, 390,
	329, 377, 382, 315, 309, 249, 379, 313, 308, 301,
	280, 423, 293, 341, 307, 342, 294, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 241, 369, 275, 316, 252, 254, 270,
	277, 279, 281, 282, 325, 326, 338, 357, 370, 371,
	372, 274, 262, 352, 263, 291, 264, 242, 267, 266,
	268, 359, 269, 244, 339, 376, 0, 287, 348, 312,
	245, 311, 340, 375, 374, 253, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 285, 238, 239, 445, 271,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 243,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 288, 0, 260, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	284, 290, 428, 292, 259, 336, 286, 395, 299, 0,
	421, 0, 422, 0, 0, 0, 0, 796, 1674, 792,
	1675, 300, 306, 349, 394, 334, 354, 257, 385, 361,
	793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 237, 265, 0, 240, 0, 304, 0, 345,
	283, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 333, 0, 0, 233, 234, 235, 236, 0, 0,
	2409, 401, 402, 403, 424, 387, 0, 442, 278, 0,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 446,
	438, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	255, 188, 436, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 367, 383, 256,
	358, 396, 261, 365, 251, 332, 355, 0, 0, 248,
	381, 364, 314, 297, 298, 247, 0, 350, 276, 289,
	273, 330, 0, 380, 408, 272, 399, 0, 391, 250,
	0, 390, 329, 377, 382, 315, 309, 249, 379, 313,
	308, 301, 280, 423, 293, 341, 307, 342, 294, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 2412, 0, 0, 2411,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 241, 369, 275, 316, 252,
	254, 270, 277, 279, 281, 282, 325, 326, 338, 357,
	370, 371, 372, 274, 262, 352, 263, 291, 264, 242,
	267, 266, 268, 359, 269, 244, 339, 376, 0, 287,
	348, 312, 245, 311, 340, 375, 374, 253, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 285, 238, 239,
	445, 271, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 243, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 288, 0,
	260, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 284, 290, 428, 292, 259, 336, 286, 395,
	299, 0, 421, 0, 422, 0, 0, 0, 0, 328,
	295, 296, 360, 300, 306, 349, 394, 334, 354, 257,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 237, 265, 0, 240, 0, 304,
	0, 345, 283, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 333, 0, 0, 233, 234, 235, 236,
	0, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	278, 1221, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 446, 438, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 1219, 0,
	0, 0, 255, 188, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1217, 0, 0, 0, 0, 0, 0, 246, 367,
	383, 256, 358, 396, 261, 365, 251, 332, 355, 0,
	0, 248, 381, 364, 314, 297, 298, 247, 0, 350,
	276, 289, 273, 330, 0, 380, 408, 272, 399, 0,
	391, 250, 0, 390, 329, 377, 382, 315, 309, 249,
	379, 313, 308, 301, 280, 423, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 241, 369, 275,
	316, 252, 254, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 262, 352, 263, 291,
	264, 242, 267, 266, 268, 359, 269, 244, 339, 376,
	0, 287, 348, 312, 245, 311, 340, 375, 374, 253,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	238, 239, 445, 271, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 243, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	288, 0, 260, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 284, 290, 428, 292, 259, 336,
	286, 395, 299, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 295, 296, 360, 300, 306, 349, 394, 334,
	354, 257, 385, 361, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 237, 265, 0, 240,
	0, 304, 0, 345, 283, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 333, 0, 0, 233, 234,
	235, 236, 0, 0, 0, 401, 402, 403, 424, 387,
	0, 442, 278, 1215, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 446, 438, 0, 0, 0, 434, 0,
	435, 0, 0, 0, 0, 0, 362, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	1219, 0, 0, 0, 255, 188, 436, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 0, 0, 0, 0, 0, 0,
	246, 367, 383, 256, 358, 396, 261, 365, 251, 332,
	355, 0, 0, 248, 381, 364, 314, 297, 298, 247,
	0, 350, 276, 289, 273, 330, 0, 380, 408, 272,
	399, 0, 391, 250, 0, 390, 329, 377, 382, 315,
	309, 249, 379, 313, 308, 301, 280, 423, 293, 341,
	307, 342, 294, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 409, 0, 353, 335, 0, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 241,
	369, 275, 316, 252, 254, 270, 277, 279, 281, 282,
	325, 326, 338, 357, 370, 371, 372, 274, 262, 352,
	263, 291, 264, 242, 267, 266, 268, 359, 269, 244,
	339, 376, 0, 287, 348, 312, 245, 311, 340, 375,
	374, 253, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 285, 238, 239, 445, 271, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	0, 0, 0, 433, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 243, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 413, 0, 0, 321, 322,
	323, 324, 288, 0, 260, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 284, 290, 428, 292,
	259, 336, 286, 395, 299, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 295, 296, 360, 300, 306, 349,
	394, 334, 354, 257, 385, 361, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 237, 265,
	0, 240, 0, 304, 0, 345, 283, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 333, 0, 0,
	233, 234, 235, 236, 0, 0, 0, 401, 402, 403,
	424, 387, 0, 442, 278, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 446, 438, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3183, 0, 187,
	618, 0, 0, 0, 0, 0, 255, 188, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 367, 383, 256, 358, 396, 261, 365,
	251, 332, 355, 0, 0, 248, 381, 364, 314, 297,
	298, 247, 0, 350, 276, 289, 273, 330, 0, 380,
	408, 272, 399, 0, 391, 250, 0, 390, 329, 377,
	382, 315, 309, 249, 379, 313, 308, 301, 280, 423,
	293, 341, 307, 342, 294, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 241, 369, 275, 316, 252, 254, 270, 277, 279,
	281, 282, 325, 326, 338, 357, 370, 371, 372, 274,
	262, 352, 263, 291, 264, 242, 267, 266, 268, 359,
	269, 244, 339, 376, 0, 287, 348, 312, 245, 311,
	340, 375, 374, 253, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 285, 238, 239, 445, 271, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 243, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 288, 0, 260, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 259, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 257, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 265, 0, 240, 0, 304, 0, 345, 283, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 333,
	0, 0, 233, 234, 235, 236, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 278, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 1219, 0, 0, 0, 255, 188,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 246, 367, 383, 256, 358, 396,
	261, 365, 251, 332, 355, 0, 0, 248, 381, 364,
	314, 297, 298, 247, 0, 350, 276, 289, 273, 330,
	0, 380, 408, 272, 399, 0, 391, 250, 0, 390,
	329, 377, 382, 315, 309, 249, 379, 313, 308, 301,
	280, 423, 293, 341, 307, 342, 294, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 241, 369, 275, 316, 252, 254, 270,
	277, 279, 281, 282, 325, 326, 338, 357, 370, 371,
	372, 274, 262, 352, 263, 291, 264, 242, 267, 266,
	268, 359, 269, 244, 339, 376, 0, 287, 348, 312,
	245, 311, 340, 375, 374, 253, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 285, 238, 239, 445, 271,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 243,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 288, 0, 260, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	284, 290, 428, 292, 259, 336, 286, 395, 299, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 295, 296,
	360, 300, 306, 349, 394, 334, 354, 257, 385, 361,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 237, 265, 0, 240, 0, 304, 0, 345,
	283, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 333, 0, 0, 233, 234, 235, 236, 0, 0,
	0, 401, 402, 403, 424, 387, 0, 442, 278, 0,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 446,
	438, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 1219, 0, 0, 0,
	255, 188, 436, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2912,
	0, 0, 0, 0, 0, 0, 246, 367, 383, 256,
	358, 396, 261, 365, 251, 332, 355, 0, 0, 248,
	381, 364, 314, 297, 298, 247, 0, 350, 276, 289,
	273, 330, 0, 380, 408, 272, 399, 0, 391, 250,
	0, 390, 329, 377, 382, 315, 309, 249, 379, 313,
	308, 301, 280, 423, 293, 341, 307, 342, 294, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 241, 369, 275, 316, 252,
	254, 270, 277, 279, 281, 282, 325, 326, 338, 357,
	370, 371, 372, 274, 262, 352, 263, 291, 264, 242,
	267, 266, 268, 359, 269, 244, 339, 376, 0, 287,
	348, 312, 245, 311, 340, 375, 374, 253, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 285, 238, 239,
	445, 271, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 243, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 288, 0,
	260, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 284, 290, 428, 292, 259, 336, 286, 395,
	299, 0, 421, 0, 422, 0, 0, 0, 0, 328,
	295, 296, 360, 300, 306, 349, 394, 334, 354, 257,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 237, 265, 0, 240, 0, 304,
	0, 345, 283, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 0, 233, 234, 235, 236,
	333, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	0, 0, 2078, 0, 0, 0, 0, 278, 0, 0,
	303, 446, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 2080, 0, 0, 0, 255,
	188, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 367, 383, 256, 358,
	396, 261, 365, 251, 332, 355, 0, 0, 248, 381,
	364, 314, 297, 298, 247, 0, 350, 276, 289, 273,
	330, 0, 380, 408, 272, 399, 0, 391, 250, 0,
	390, 329, 377, 382, 315, 309, 249, 379, 313, 308,
	301, 280, 423, 293, 341, 307, 342, 294, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 241, 369, 275, 316, 252, 254,
	270, 277, 279, 281, 282, 325, 326, 338, 357, 370,
	371, 372, 274, 262, 352, 263, 291, 264, 242, 267,
	266, 268, 359, 269, 244, 339, 376, 0, 287, 348,
	312, 245, 311, 340, 375, 374, 253, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 285, 238, 239, 445,
	271, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	243, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 288, 0, 260,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 284, 290, 428, 292, 259, 336, 286, 395, 299,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 295,
	296, 360, 300, 306, 349, 394, 334, 354, 257, 385,
	361, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 237, 265, 0, 240, 0, 304, 0,
	345, 283, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 333, 0, 0, 233, 234, 235, 236, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 278,
	2099, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 1219, 0, 0,
	0, 255, 188, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 367, 383,
	256, 358, 396, 261, 365, 251, 332, 355, 0, 0,
	248, 381, 364, 314, 297, 298, 247, 0, 350, 276,
	289, 273, 330, 0, 380, 408, 272, 399, 0, 391,
	250, 0, 390, 329, 377, 382, 315, 309, 249, 379,
	313, 308, 301, 280, 423, 293, 341, 307, 342, 294,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 241, 369, 275, 316,
	252, 254, 270, 277, 279, 281, 282, 325, 326, 338,
	357, 370, 371, 372, 274, 262, 352, 263, 291, 264,
	242, 267, 266, 268, 359, 269, 244, 339, 376, 0,
	287, 348, 312, 245, 311, 340, 375, 374, 253, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 285, 238,
	239, 445, 271, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 243, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 288,
	0, 260, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 284, 290, 428, 292, 259, 336, 286,
	395, 299, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 295, 296, 360, 300, 306, 349, 394, 334, 354,
	257, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 237, 265, 0, 240, 0,
	304, 0, 345, 283, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 333, 0, 0, 233, 234, 235,
	236, 0, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 278, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 446, 438, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3272, 0, 187, 0, 0, 0,
	0, 0, 0, 255, 188, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	367, 383, 256, 358, 396, 261, 365, 251, 332, 355,
	0, 0, 248, 381, 364, 314, 297, 298, 247, 0,
	350, 276, 289, 273, 330, 0, 380, 408, 272, 399,
	0, 391, 250, 0, 390, 329, 377, 382, 315, 309,
	249, 379, 313, 308, 301, 280, 423, 293, 341, 307,
	342, 294, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 241, 369,
	275, 316, 252, 254, 270, 277, 279, 281, 282, 325,
	326, 338, 357, 370, 371, 372, 274, 262, 352, 263,
	291, 264, 242, 267, 266, 268, 359, 269, 244, 339,
	376, 0, 287, 348, 312, 245, 311, 340, 375, 374,
	253, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	285, 238, 239, 445, 271, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 243, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 288, 0, 260, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 259,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 257, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 265, 0,
	240, 0, 304, 0, 345, 283, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 333, 0, 0, 233,
	234, 235, 236, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 618,
	0, 0, 0, 0, 0, 255, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 367, 383, 256, 358, 396, 261, 365, 251,
	332, 355, 0, 0, 248, 381, 364, 314, 297, 298,
	247, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 250, 0, 390, 329, 377, 382,
	315, 309, 249, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	241, 369, 275, 316, 252, 254, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 262,
	352, 263, 291, 264, 242, 267, 266, 268, 359, 269,
	244, 339, 376, 0, 287, 348, 312, 245, 311, 340,
	375, 374, 253, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 238, 239, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 243, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 260, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 284, 290, 428,
	292, 259, 336, 286, 395, 299, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 295, 296, 360, 300, 306,
	349, 394, 334, 354, 257, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 237,
	265, 0, 240, 0, 304, 0, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 333, 0,
	0, 233, 234, 235, 236, 0, 0, 0, 401, 402,
	403, 424, 387, 0, 442, 278, 0, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 434, 0, 435, 0, 0, 0, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3198, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 255, 188, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 367, 383, 256, 358, 396, 261,
	365, 251, 332, 355, 0, 0, 248, 381, 364, 314,
	297, 298, 247, 0, 350, 276, 289, 273, 330, 0,
	380, 408, 272, 399, 0, 391, 250, 0, 390, 329,
	377, 382, 315, 309, 249, 379, 313, 308, 301, 280,
	423, 293, 341, 307, 342, 294, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 241, 369, 275, 316, 252, 254, 270, 277,
	279, 281, 282, 325, 326, 338, 357, 370, 371, 372,
	274, 262, 352, 263, 291, 264, 242, 267, 266, 268,
	359, 269, 244, 339, 376, 0, 287, 348, 312, 245,
	311, 340, 375, 374, 253, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 285, 238, 239, 445, 271, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 243, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 288, 0, 260, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 259, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 295, 296, 360,
	300, 306, 349, 394, 334, 354, 257, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 237, 265, 0, 240, 0, 304, 0, 345, 283,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	333, 0, 0, 233, 234, 235, 236, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 278, 0, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 255,
	188, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 367, 383, 256, 358,
	396, 261, 365, 251, 332, 355, 0, 0, 248, 381,
	364, 314, 297, 298, 247, 0, 350, 276, 289, 273,
	330, 0, 380, 408, 272, 399, 0, 391, 250, 0,
	390, 329, 377, 382, 315, 309, 249, 379, 313, 308,
	301, 280, 423, 293, 341, 307, 342, 294, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 3128, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 241, 369, 275, 316, 252, 254,
	270, 277, 279, 281, 282, 325, 326, 338, 357, 370,
	371, 372, 274, 262, 352, 263, 291, 264, 242, 267,
	266, 268, 359, 269, 244, 339, 376, 0, 287, 348,
	312, 245, 311, 340, 375, 374, 253, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 285, 238, 239, 445,
	271, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	243, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 288, 0, 260,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 284, 290, 428, 292, 259, 336, 286, 395, 299,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 295,
	296, 360, 300, 306, 349, 394, 334, 354, 257, 385,
	361, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 237, 265, 0, 240, 0, 304, 0,
	345, 283, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 333, 0, 0, 233, 234, 235, 236, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 278,
	0, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2908, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 255, 188, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 367, 383,
	256, 358, 396, 261, 365, 251, 332, 355, 0, 0,
	248, 381, 364, 314, 297, 298, 247, 0, 350, 276,
	289, 273, 330, 0, 380, 408, 272, 399, 0, 391,
	250, 0, 390, 329, 377, 382, 315, 309, 249, 379,
	313, 308, 301, 280, 423, 293, 341, 307, 342, 294,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 241, 369, 275, 316,
	252, 254, 270, 277, 279, 281, 282, 325, 326, 338,
	357, 370, 371, 372, 274, 262, 352, 263, 291, 264,
	242, 267, 266, 268, 359, 269, 244, 339, 376, 0,
	287, 348, 312, 245, 311, 340, 375, 374, 253, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 285, 238,
	239, 445, 271, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 243, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 288,
	0, 260, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 284, 290, 428, 292, 259, 336, 286,
	395, 299, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 295, 296, 360, 300, 306, 349, 394, 334, 354,
	257, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 237, 265, 0, 240, 0,
	304, 0, 345, 283, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 333, 0, 0, 233, 234, 235,
	236, 0, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 278, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 446, 438, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 2773,
	0, 0, 0, 255, 188, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	367, 383, 256, 358, 396, 261, 365, 251, 332, 355,
	0, 0, 248, 381, 364, 314, 297, 298, 247, 0,
	350, 276, 289, 273, 330, 0, 380, 408, 272, 399,
	0, 391, 250, 0, 390, 329, 377, 382, 315, 309,
	249, 379, 313, 308, 301, 280, 423, 293, 341, 307,
	342, 294, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 241, 369,
	275, 316, 252, 254, 270, 277, 279, 281, 282, 325,
	326, 338, 357, 370, 371, 372, 274, 262, 352, 263,
	291, 264, 242, 267, 266, 268, 359, 269, 244, 339,
	376, 0, 287, 348, 312, 245, 311, 340, 375, 374,
	253, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	285, 238, 239, 445, 271, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 243, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 288, 0, 260, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 259,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 257, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 265, 0,
	240, 0, 304, 0, 345, 283, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 333, 0, 0, 233,
	234, 235, 236, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 255, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 367, 383, 256, 358, 396, 261, 365, 251,
	332, 355, 0, 0, 248, 381, 364, 314, 297, 298,
	247, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 250, 0, 390, 329, 377, 382,
	315, 309, 249, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 2982, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	241, 369, 275, 316, 252, 254, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 262,
	352, 263, 291, 264, 242, 267, 266, 268, 359, 269,
	244, 339, 376, 0, 287, 348, 312, 245, 311, 340,
	375, 374, 253, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 238, 239, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 243, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 260, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 284, 290, 428,
	292, 259, 336, 286, 395, 299, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 295, 296, 360, 300, 306,
	349, 394, 334, 354, 257, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 237,
	265, 0, 240, 0, 304, 0, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 333, 0,
	0, 233, 234, 235, 236, 0, 0, 0, 401, 402,
	403, 424, 387, 0, 442, 278, 0, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 434, 0, 435, 0, 0, 0, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 255, 188, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 367, 383, 256, 358, 396, 261,
	365, 251, 332, 355, 0, 0, 248, 381, 364, 314,
	297, 298, 247, 0, 350, 276, 289, 273, 330, 0,
	380, 408, 272, 399, 0, 391, 250, 0, 390, 329,
	377, 382, 315, 309, 249, 379, 313, 308, 301, 280,
	423, 293, 341, 307, 342, 294, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 241, 369, 275, 316, 252, 254, 270, 277,
	279, 281, 282, 325, 326, 338, 357, 370, 371, 372,
	274, 262, 352, 263, 291, 264, 242, 267, 266, 268,
	359, 269, 244, 339, 376, 0, 287, 348, 312, 245,
	311, 340, 375, 374, 253, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 285, 238, 239, 445, 271, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 243, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 288, 0, 260, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 259, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 295, 296, 360,
	300, 306, 349, 394, 334, 354, 257, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 237, 265, 0, 240, 0, 304, 0, 345, 283,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	333, 0, 0, 233, 234, 235, 236, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 278, 0, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 255,
	188, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 367, 383, 256, 358,
	396, 261, 365, 251, 332, 355, 0, 0, 248, 381,
	364, 314, 297, 298, 247, 0, 350, 276, 289, 273,
	330, 0, 380, 408, 272, 399, 0, 391, 250, 0,
	390, 329, 377, 382, 315, 309, 249, 379, 313, 308,
	301, 280, 423, 293, 341, 307, 342, 294, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 241, 369, 275, 316, 252, 254,
	270, 277, 279, 281, 282, 325, 326, 338, 357, 370,
	371, 372, 274, 262, 352, 263, 291, 264, 242, 267,
	266, 268, 359, 269, 244, 339, 376, 0, 287, 348,
	312, 245, 311, 340, 375, 374, 253, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 285, 238, 239, 445,
	271, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	243, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 288, 0, 260,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 284, 290, 428, 292, 259, 336, 286, 395, 299,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 295,
	296, 360, 300, 306, 349, 394, 334, 354, 257, 385,
	361, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 237, 265, 0, 240, 0, 304, 0,
	345, 283, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 333, 0, 0, 233, 234, 235, 236, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 278,
	0, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 2285, 0, 0,
	0, 255, 188, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 367, 383,
	256, 358, 396, 261, 365, 251, 332, 355, 0, 0,
	248, 381, 364, 314, 297, 298, 247, 0, 350, 276,
	289, 273, 330, 0, 380, 408, 272, 399, 0, 391,
	250, 0, 390, 329, 377, 382, 315, 309, 249, 379,
	313, 308, 301, 280, 423, 293, 341, 307, 342, 294,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 241, 369, 275, 316,
	252, 254, 270, 277, 279, 281, 282, 325, 326, 338,
	357, 370, 371, 372, 274, 262, 352, 263, 291, 264,
	242, 267, 266, 268, 359, 269, 244, 339, 376, 0,
	287, 348, 312, 245, 311, 340, 375, 374, 253, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 285, 238,
	239, 445, 271, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 243, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 288,
	0, 260, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 284, 290, 428, 292, 259, 336, 286,
	395, 299, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 295, 296, 360, 300, 306, 349, 394, 334, 354,
	257, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 237, 265, 0, 240, 0,
	304, 0, 345, 283, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 333, 0, 0, 233, 234, 235,
	236, 0, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 278, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 446, 438, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 255, 188, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	367, 383, 256, 358, 396, 261, 365, 251, 332, 355,
	0, 0, 248, 381, 364, 314, 297, 298, 247, 0,
	350, 276, 289, 273, 330, 0, 380, 408, 272, 399,
	0, 391, 250, 0, 390, 329, 377, 382, 315, 309,
	249, 379, 313, 308, 301, 280, 423, 293, 341, 307,
	342, 294, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 241, 369,
	275, 316, 252, 254, 270, 277, 279, 281, 282, 325,
	326, 338, 357, 370, 371, 372, 274, 262, 352, 263,
	291, 264, 242, 267, 266, 268, 359, 269, 244, 339,
	376, 0, 287, 348, 312, 245, 311, 340, 375, 374,
	253, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	285, 238, 239, 445, 271, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 243, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 288, 0, 260, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 259,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 257, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 265, 0,
	240, 0, 304, 0, 345, 283, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 333, 0, 0, 233,
	234, 235, 236, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 2568, 0, 0, 0, 255, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 367, 383, 256, 358, 396, 261, 365, 251,
	332, 355, 0, 0, 248, 381, 364, 314, 297, 298,
	247, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 250, 0, 390, 329, 377, 382,
	315, 309, 249, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	241, 369, 275, 316, 252, 254, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 262,
	352, 263, 291, 264, 242, 267, 266, 268, 359, 269,
	244, 339, 376, 0, 287, 348, 312, 245, 311, 340,
	375, 374, 253, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 238, 239, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 243, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 260, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 284, 290, 428,
	292, 259, 336, 286, 395, 299, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 295, 296, 360, 300, 306,
	349, 394, 334, 354, 257, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 237,
	265, 0, 240, 0, 304, 0, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 333, 0,
	0, 233, 234, 235, 236, 0, 0, 0, 401, 402,
	403, 424, 387, 0, 442, 278, 0, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 434, 0, 435, 0, 0, 0, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 255, 188, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 367, 383, 256, 358, 396, 261,
	365, 251, 332, 355, 0, 0, 248, 381, 364, 314,
	297, 298, 247, 0, 350, 276, 289, 273, 330, 0,
	380, 408, 272, 399, 0, 391, 250, 0, 390, 329,
	377, 382, 315, 309, 249, 379, 313, 308, 301, 280,
	423, 293, 341, 307, 342, 294, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 241, 369, 275, 316, 252, 254, 270, 277,
	279, 281, 282, 325, 326, 338, 357, 370, 371, 372,
	274, 262, 352, 263, 291, 264, 242, 267, 266, 268,
	359, 269, 244, 339, 376, 0, 287, 348, 312, 245,
	311, 340, 375, 374, 253, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 285, 238, 239, 445, 271, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 243, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 288, 0, 260, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 259, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 295, 296, 360,
	300, 306, 349, 394, 334, 354, 257, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 237, 265, 0, 240, 0, 304, 0, 345, 283,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	333, 0, 0, 233, 234, 235, 236, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 278, 0, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1219, 0, 0, 0, 255,
	188, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 367, 383, 256, 358,
	396, 261, 365, 251, 332, 355, 0, 0, 248, 381,
	364, 314, 297, 298, 247, 0, 350, 276, 289, 273,
	330, 0, 380, 408, 272, 399, 0, 391, 250, 0,
	390, 329, 377, 382, 315, 309, 249, 379, 313, 308,
	301, 280, 423, 293, 341, 307, 342, 294, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 241, 369, 275, 316, 252, 254,
	270, 277, 279, 281, 282, 325, 326, 338, 357, 370,
	371, 372, 274, 262, 352, 263, 291, 264, 242, 267,
	266, 268, 359, 269, 244, 339, 376, 0, 287, 348,
	312, 245, 311, 340, 375, 374, 253, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 285, 238, 239, 445,
	271, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	243, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 288, 0, 260,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 284, 290, 428, 292, 259, 336, 286, 395, 299,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 295,
	296, 360, 300, 306, 349, 394, 334, 354, 257, 385,
	361, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 237, 265, 0, 240, 0, 304, 0,
	345, 283, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 333, 0, 0, 233, 234, 235, 236, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 278,
	0, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 2080, 0, 0,
	0, 255, 188, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 367, 383,
	256, 358, 396, 261, 365, 251, 332, 355, 0, 0,
	248, 381, 364, 314, 297, 298, 247, 0, 350, 276,
	289, 273, 330, 0, 380, 408, 272, 399, 0, 391,
	250, 0, 390, 329, 377, 382, 315, 309, 249, 379,
	313, 308, 301, 280, 423, 293, 341, 307, 342, 294,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 241, 369, 275, 316,
	252, 254, 270, 277, 279, 281, 282, 325, 326, 338,
	357, 370, 371, 372, 274, 262, 352, 263, 291, 264,
	242, 267, 266, 268, 359, 269, 244, 339, 376, 0,
	287, 348, 312, 245, 311, 340, 375, 374, 253, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 285, 238,
	239, 445, 271, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 243, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 288,
	0, 260, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 284, 290, 428, 292, 259, 336, 286,
	395, 299, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 295, 296, 360, 300, 306, 349, 394, 334, 354,
	257, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 237, 265, 0, 240, 0,
	304, 0, 345, 283, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 333, 0, 0, 233, 234, 235,
	236, 0, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 278, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 446, 438, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 255, 188, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	367, 383, 256, 358, 396, 261, 365, 251, 332, 355,
	0, 0, 248, 381, 364, 314, 297, 298, 247, 0,
	350, 276, 289, 273, 330, 0, 380, 408, 272, 399,
	0, 391, 250, 0, 390, 329, 377, 382, 315, 309,
	249, 379, 313, 308, 301, 280, 423, 293, 341, 307,
	342, 294, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 241, 369,
	275, 316, 252, 254, 270, 277, 279, 281, 282, 325,
	326, 338, 357, 370, 371, 372, 274, 262, 352, 263,
	291, 264, 242, 267, 266, 268, 359, 269, 244, 339,
	376, 0, 287, 348, 312, 245, 311, 340, 375, 374,
	253, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	285, 238, 239, 445, 271, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 243, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 288, 0, 260, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 259,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 257, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 265, 0,
	240, 0, 304, 0, 345, 283, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 333, 0, 0, 233,
	234, 235, 236, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 255, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 367, 383, 256, 358, 396, 261, 365, 251,
	332, 355, 0, 0, 248, 381, 364, 314, 297, 298,
	247, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 250, 0, 390, 329, 377, 382,
	315, 309, 249, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	241, 369, 275, 316, 252, 254, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 262,
	352, 263, 291, 264, 242, 267, 266, 268, 359, 269,
	244, 339, 376, 0, 287, 348, 312, 245, 311, 340,
	375, 374, 253, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 238, 239, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 243, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 260, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 284, 290, 428,
	292, 259, 336, 286, 395, 299, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 295, 296, 360, 300, 306,
	349, 394, 334, 354, 257, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 237,
	265, 0, 240, 0, 304, 0, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 333, 0,
	0, 233, 234, 235, 236, 0, 0, 0, 401, 402,
	403, 424, 387, 0, 442, 278, 0, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 434, 0, 435, 0, 0, 0, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 2115, 0, 0, 0, 255, 188, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 367, 383, 256, 358, 396, 261,
	365, 251, 332, 355, 0, 0, 248, 381, 364, 314,
	297, 298, 247, 0, 350, 276, 289, 273, 330, 0,
	380, 408, 272, 399, 0, 391, 250, 0, 390, 329,
	377, 382, 315, 309, 249, 379, 313, 308, 301, 280,
	423, 293, 341, 307, 342, 294, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 241, 369, 275, 316, 252, 254, 270, 277,
	279, 281, 282, 325, 326, 338, 357, 370, 371, 372,
	274, 262, 352, 263, 291, 264, 242, 267, 266, 268,
	359, 269, 244, 339, 376, 0, 287, 348, 312, 245,
	311, 340, 375, 374, 253, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 285, 238, 239, 445, 271, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 243, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 288, 0, 260, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 259, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 295, 296, 360,
	300, 306, 349, 394, 334, 354, 257, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 237, 265, 0, 240, 0, 304, 0, 345, 283,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 1953, 0, 233, 234, 235, 236, 333, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 303, 446, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 255, 188, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 367, 383, 256, 358, 396, 261, 365,
	251, 332, 355, 0, 0, 248, 381, 364, 314, 297,
	298, 247, 0, 350, 276, 289, 273, 330, 0, 380,
	408, 272, 399, 0, 391, 250, 0, 390, 329, 377,
	382, 315, 309, 249, 379, 313, 308, 301, 280, 423,
	293, 341, 307, 342, 294, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 241, 369, 275, 316, 252, 254, 270, 277, 279,
	281, 282, 325, 326, 338, 357, 370, 371, 372, 274,
	262, 352, 263, 291, 264, 242, 267, 266, 268, 359,
	269, 244, 339, 376, 0, 287, 348, 312, 245, 311,
	340, 375, 374, 253, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 285, 238, 239, 445, 271, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 243, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 288, 0, 260, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 259, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 257, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 265, 0, 240, 0, 304, 0, 345, 283, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 333,
	0, 0, 233, 234, 235, 236, 0, 1642, 0, 401,
	402, 403, 424, 387, 0, 442, 278, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 255, 188,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 367, 383, 256, 358, 396,
	261, 365, 251, 332, 355, 0, 0, 248, 381, 364,
	314, 297, 298, 247, 0, 350, 276, 289, 273, 330,
	0, 380, 408, 272, 399, 0, 391, 250, 0, 390,
	329, 377, 382, 315, 309, 249, 379, 313, 308, 301,
	280, 423, 293, 341, 307, 342, 294, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 241, 369, 275, 316, 252, 254, 270,
	277, 279, 281, 282, 325, 326, 338, 357, 370, 371,
	372, 274, 262, 352, 263, 291, 264, 242, 267, 266,
	268, 359, 269, 244, 339, 376, 0, 287, 348, 312,
	245, 311, 340, 375, 374, 253, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 285, 238, 239, 445, 271,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 243,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 288, 0, 260, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	284, 290, 428, 292, 259, 336, 286, 395, 299, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 295, 296,
	360, 300, 306, 349, 394, 334, 354, 257, 385, 361,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 237, 265, 0, 240, 0, 304, 0, 345,
	283, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 333, 0, 0, 233, 234, 235, 236, 0, 0,
	0, 401, 402, 403, 424, 387, 0, 442, 278, 0,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 446,
	438, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 1219, 0, 0, 0,
	255, 188, 436, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 367, 383, 256,
	358, 396, 261, 365, 251, 332, 355, 0, 0, 248,
	381, 364, 314, 297, 298, 247, 0, 350, 276, 289,
	273, 330, 0, 380, 408, 272, 399, 0, 391, 250,
	0, 390, 329, 377, 382, 315, 309, 249, 379, 313,
	308, 301, 280, 423, 293, 341, 307, 342, 294, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 1555, 344, 241, 369, 275, 316, 252,
	254, 270, 277, 279, 281, 282, 325, 326, 338, 357,
	370, 371, 372, 274, 262, 352, 263, 291, 264, 242,
	267, 266, 268, 359, 269, 244, 339, 376, 0, 287,
	348, 312, 245, 311, 340, 375, 374, 253, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 285, 238, 239,
	445, 271, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 243, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 288, 0,
	260, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 284, 290, 428, 292, 259, 336, 286, 395,
	299, 0, 421, 0, 422, 0, 0, 0, 0, 328,
	295, 296, 360, 300, 306, 349, 394, 334, 354, 257,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 237, 265, 0, 240, 0, 304,
	0, 345, 283, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 333, 0, 0, 233, 234, 235, 236,
	0, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	278, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 446, 438, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 255, 188, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 367,
	383, 256, 358, 396, 261, 365, 251, 332, 355, 0,
	0, 248, 381, 364, 314, 297, 298, 247, 0, 350,
	276, 289, 273, 330, 0, 380, 408, 272, 399, 0,
	391, 250, 0, 390, 329, 377, 382, 315, 309, 249,
	379, 313, 308, 301, 280, 423, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	1244, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 241, 369, 275,
	316, 252, 254, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 262, 352, 263, 291,
	264, 242, 267, 266, 268, 359, 269, 244, 339, 376,
	0, 287, 348, 312, 245, 311, 340, 375, 374, 253,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	238, 239, 445, 271, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 243, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	288, 0, 260, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 284, 290, 428, 292, 259, 336,
	286, 395, 299, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 295, 296, 360, 300, 306, 349, 394, 334,
	354, 257, 385, 361, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 237, 265, 0, 240,
	0, 304, 0, 345, 283, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 333, 0, 0, 233, 234,
	235, 236, 0, 0, 0, 401, 402, 403, 424, 387,
	0, 442, 278, 0, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 446, 438, 0, 0, 0, 434, 0,
	435, 0, 0, 0, 0, 0, 362, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 255, 188, 436, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 367, 383, 256, 358, 396, 261, 365, 251, 332,
	355, 0, 0, 248, 381, 364, 314, 297, 298, 247,
	0, 350, 276, 289, 273, 330, 0, 380, 408, 272,
	399, 0, 391, 250, 0, 390, 329, 377, 382, 315,
	309, 249, 379, 313, 308, 301, 280, 423, 293, 341,
	307, 342, 294, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 409, 0, 353, 335, 0, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 241,
	369, 275, 316, 252, 254, 270, 277, 279, 281, 282,
	325, 326, 338, 357, 370, 371, 372, 274, 262, 352,
	263, 291, 264, 242, 267, 266, 268, 359, 269, 244,
	339, 376, 0, 287, 348, 312, 245, 311, 340, 375,
	374, 253, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 285, 238, 239, 445, 271, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	0, 0, 0, 433, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 243, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 413, 0, 0, 321, 322,
	323, 324, 288, 0, 260, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 284, 290, 428, 292,
	259, 336, 286, 395, 299, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 295, 296, 360, 300, 306, 349,
	394, 334, 354, 257, 385, 361, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 373, 0, 237, 265,
	0, 240, 0, 304, 0, 345, 283, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 333, 0, 0,
	233, 234, 235, 236, 0, 0, 0, 401, 402, 403,
	424, 387, 0, 442, 278, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 446, 438, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 255, 188, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 367, 383, 256, 358, 396, 261, 365,
	251, 332, 355, 0, 0, 248, 381, 364, 314, 297,
	298, 247, 0, 350, 276, 289, 273, 330, 0, 380,
	408, 272, 399, 0, 391, 250, 0, 390, 329, 377,
	382, 315, 309, 249, 379, 313, 308, 301, 280, 423,
	293, 341, 307, 342, 294, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 484,
	344, 241, 369, 275, 316, 252, 254, 270, 277, 279,
	281, 282, 325, 326, 338, 357, 370, 371, 372, 274,
	262, 352, 263, 291, 264, 242, 267, 266, 268, 359,
	269, 244, 339, 376, 0, 287, 348, 312, 245, 311,
	340, 375, 374, 253, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 285, 238, 239, 445, 271, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 243, 417, 0,
	0, 0, 0, 0, 0, 485, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 288, 0, 260, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 259, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 257, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 265, 0, 240, 0, 304, 0, 345, 283, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 333,
	0, 0, 233, 234, 235, 236, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 278, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 255, 188,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 367, 383, 256, 358, 396,
	261, 365, 251, 332, 355, 0, 0, 248, 381, 364,
	314, 297, 298, 247, 0, 350, 276, 289, 273, 330,
	0, 380, 408, 272, 399, 0, 391, 250, 0, 390,
	329, 377, 382, 315, 309, 249, 379, 313, 308, 301,
	280, 423, 293, 341, 307, 342, 294, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 241, 369, 275, 316, 252, 254, 270,
	277, 279, 281, 282, 325, 326, 338, 357, 370, 371,
	372, 274, 262, 352, 263, 291, 264, 242, 267, 266,
	268, 359, 269, 244, 339, 376, 0, 287, 348, 312,
	245, 311, 340, 375, 374, 253, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 285, 238, 239, 445, 271,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 243,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 288, 0, 260, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	284, 290, 428, 292, 259, 336, 286, 395, 299, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 295, 296,
	360, 300, 306, 349, 394, 334, 354, 257, 385, 361,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 237, 265, 0, 240, 0, 304, 0, 345,
	283, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 333, 0, 233, 234, 235, 236, 0, 0,
	0, 401, 402, 403, 424, 387, 0, 442, 451, 278,
	0, 0, 303, 0, 0, 0, 0, 0, 0, 446,
	438, 0, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 255, 188, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 367, 383,
	256, 358, 396, 261, 365, 251, 332, 355, 0, 0,
	248, 381, 364, 314, 297, 298, 247, 0, 350, 276,
	289, 273, 330, 0, 380, 408, 272, 399, 0, 391,
	250, 0, 390, 329, 377, 382, 315, 309, 249, 379,
	313, 308, 301, 280, 423, 293, 341, 307, 342, 294,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 241, 369, 275, 316,
	252, 254, 270, 277, 279, 281, 282, 325, 326, 338,
	357, 370, 371, 372, 274, 262, 352, 263, 291, 264,
	242, 267, 266, 268, 359, 269, 244, 339, 376, 0,
	287, 348, 312, 245, 311, 340, 375, 374, 253, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 285, 238,
	239, 445, 271, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 243, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 288,
	0, 260, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 284, 290, 428, 292, 259, 336, 286,
	395, 299, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 295, 296, 360, 300, 306, 349, 394, 334, 354,
	257, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 237, 265, 0, 240, 0,
	304, 0, 345, 283, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 333, 0, 0, 233, 234, 235,
	236, 0, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 278, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 446, 438, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 255, 188, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	367, 383, 256, 358, 396, 261, 365, 251, 332, 355,
	0, 0, 248, 381, 364, 314, 297, 298, 247, 0,
	350, 276, 289, 273, 330, 0, 380, 408, 272, 399,
	0, 391, 250, 0, 390, 329, 377, 382, 315, 309,
	249, 379, 313, 308, 301, 280, 423, 293, 341, 307,
	342, 294, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 241, 369,
	275, 316, 252, 254, 270, 277, 279, 281, 282, 325,
	326, 338, 357, 370, 371, 372, 274, 262, 352, 263,
	291, 264, 242, 267, 266, 268, 359, 269, 244, 339,
	376, 0, 287, 348, 312, 245, 311, 340, 375, 374,
	253, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	285, 238, 239, 445, 271, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 243, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 288, 0, 260, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 259,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 257, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 265, 0,
	240, 0, 304, 0, 345, 283, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 333, 0, 0, 233,
	234, 235, 236, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 255, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 367, 1199, 256, 358, 396, 261, 365, 251,
	332, 355, 0, 0, 248, 381, 364, 314, 297, 298,
	247, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 250, 0, 390, 329, 377, 382,
	315, 309, 249, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	241, 369, 275, 316, 252, 254, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 262,
	352, 263, 291, 264, 242, 267, 266, 268, 359, 269,
	244, 339, 376, 0, 287, 348, 312, 245, 311, 340,
	375, 374, 253, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 238, 239, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 243, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 260, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 284, 290, 428,
	292, 259, 336, 286, 395, 299, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 295, 296, 360, 300, 306,
	349, 394, 334, 354, 257, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 237,
	265, 0, 240, 0, 304, 0, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 333, 0,
	0, 233, 234, 235, 236, 0, 0, 0, 401, 402,
	403, 424, 387, 0, 442, 278, 0, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 434, 0, 435, 0, 0, 0, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 255, 188, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 367, 1197, 256, 358, 396, 261,
	365, 251, 332, 355, 0, 0, 248, 381, 364, 314,
	297, 298, 247, 0, 350, 276, 289, 273, 330, 0,
	380, 408, 272, 399, 0, 391, 250, 0, 390, 329,
	377, 382, 315, 309, 249, 379, 313, 308, 301, 280,
	423, 293, 341, 307, 342, 294, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 241, 369, 275, 316, 252, 254, 270, 277,
	279, 281, 282, 325, 326, 338, 357, 370, 371, 372,
	274, 262, 352, 263, 291, 264, 242, 267, 266, 268,
	359, 269, 244, 339, 376, 0, 287, 348, 312, 245,
	311, 340, 375, 374, 253, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 285, 238, 239, 445, 271, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 243, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 288, 0, 260, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 259, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 295, 296, 360,
	300, 306, 349, 394, 334, 354, 257, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 237, 265, 0, 240, 0, 304, 0, 345, 283,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	333, 0, 0, 233, 234, 235, 236, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 278, 0, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 255,
	188, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 367, 383, 256, 358,
	396, 261, 365, 251, 332, 355, 0, 0, 248, 381,
	364, 314, 297, 298, 247, 0, 350, 276, 289, 273,
	330, 0, 380, 408, 272, 399, 0, 391, 250, 0,
	390, 329, 377, 382, 315, 309, 249, 379, 313, 308,
	301, 280, 423, 293, 341, 307, 342, 294, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 241, 369, 275, 316, 252, 254,
	525, 277, 279, 281, 282, 325, 326, 338, 357, 370,
	371, 372, 274, 262, 352, 263, 291, 264, 242, 267,
	266, 268, 359, 269, 244, 339, 376, 0, 287, 348,
	312, 245, 311, 340, 375, 374, 253, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 285, 238, 239, 445,
	271, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	243, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 288, 0, 260,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 0, 721, 0, 410,
	411, 284, 290, 428, 292, 259, 336, 286, 395, 299,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 295,
	296, 360, 300, 306, 349, 394, 334, 354, 257, 385,
	361, 310, 0, 701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 714, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 237, 265, 0, 240, 0, 304, 0,
	345, 283, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 1630, 233, 234, 235, 236, 1592,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 0, 0, 0, 1632, 1601,
	0, 0, 1630, 0, 0, 0, 0, 0, 1633, 1634,
	0, 0, 716, 0, 710, 0, 697, 0, 0, 0,
	0, 0, 0, 713, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1600, 0, 1632, 0, 0, 0,
	694, 0, 0, 0, 702, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3289, 0, 0,
	0, 0, 0, 719, 0, 0, 0, 1607, 709, 0,
	0, 0, 708, 0, 0, 0, 0, 0, 693, 0,
	0, 0, 700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 718, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 699, 0, 1591, 1593, 1590, 0, 1587, 0,
	0, 0, 0, 1611, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1605, 1639, 1630, 0, 1606, 1608,
	1610, 1611, 1612, 1613, 1614, 1618, 1619, 1620, 1622, 1625,
	1626, 1627, 1617, 0, 0, 0, 1607, 0, 0, 1615,
	1624, 1616, 0, 0, 0, 0, 0, 715, 0, 0,
	1632, 1595, 1605, 1639, 0, 0, 1606, 1608, 1610, 0,
	1612, 1613, 1614, 1618, 1619, 1620, 1622, 1625, 1626, 1627,
	0, 0, 0, 1631, 0, 0, 0, 1615, 1624, 1616,
	0, 0, 0, 0, 0, 0, 705, 0, 0, 0,
	0, 0, 0, 0, 1588, 1589, 0, 0, 0, 3034,
	0, 1607, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 1631, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1604,
	504, 503, 510, 500, 0, 0, 1603, 0, 0, 0,
	0, 0, 507, 508, 0, 509, 513, 0, 0, 495,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	1621, 0, 0, 0, 0, 0, 0, 1604, 1623, 1609,
	0, 0, 0, 0, 1603, 0, 0, 0, 0, 0,
	1611, 1636, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 0, 0, 0, 0, 0, 0, 1621, 0,
	0, 0, 522, 0, 0, 524, 0, 1609, 0, 0,
	523, 1605, 1639, 0, 0, 1606, 1608, 1610, 0, 1612,
	1613, 1614, 1618, 1619, 1620, 1622, 1625, 1626, 1627, 0,
	0, 0, 0, 1597, 0, 0, 1615, 1624, 1616, 0,
	0, 0, 0, 0, 0, 1611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	1631, 0, 1637, 0, 0, 0, 1605, 1639, 0, 0,
	1606, 1608, 1610, 0, 1612, 1613, 1614, 1618, 1619, 1620,
	1622, 1625, 1626, 1627, 0, 0, 0, 0, 0, 0,
	0, 1615, 1624, 1616, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 1603, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 496, 498, 497, 0, 0, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 0, 506, 1609, 0, 0, 0,
	0, 0, 521, 0, 1628, 0, 0, 0, 0, 499,
	0, 0, 0, 490, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 0, 0, 0, 0, 0, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 505, 511, 0, 512, 514, 0,
	0, 515, 516, 517, 0, 0, 519, 520,
}

var yyPact = [...]int{
	4167, -1000, -1000, -1000, -318, 10392, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35442,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35442,
	-315, 34900, 34900, -1000, -1000, 2349, -1000, 34357, 11521, 35442,
	345, 332, 35442, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 700,
	-1000, 33815, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 655,
	37998, 37068, 8146, -274, -1000, 2988, -110, 2149, 844, 861,
	930, 930, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37450, 755, 33273, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 300, 336, 755, 13696, 9,
	-3, 2988, 338, 2715, -1000, 1211, 4181, 174, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8146,
	8146, 10392, -347, 10392, 8146, 35442, 35442, -1000, -1000, -1000,
	-1000, 655, 37998, 8146, 2149, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -3, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3294,
	-1000, 1389, -1000, -1000, -1000, -1000, -1000, 2598, 1374, 2142,
	586, 35442, -1000, 1371, 586, -1000, -1000, -1000, 2988, 2988,
	-1000, 35442, 35442, 80, 1625, -1000, 388, 359, 288, 1370,
	-1000, -1000, -1000, -1000, -1000, -1000, 467, 2947, -1000, 35442,
	35442, 2613, 35442, -1000, 1990, 527, 4219, 2812, 1312, 802,
	2626, -1000, -1000, 2596, -1000, 215, 191, 171, 804, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 196, -1000, 2882, -1000,
	-1000, 188, -1000, -1000, 178, -1000, -1000, -1000, -7, -1000,
	-1000, -1000, -1000, -1000, -1000, -103, -1000, -1000, 946, 1720,
	8146, -1000, 2157, -1000, 2878, -1000, -1000, -1000, -1000, 5344,
	9823, 9823, 9823, 9823, -1000, -1000, 2457, 8146, 2595, 2588,
	-1000, -1000, -1000, -1000, -1000, 1356, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1758, -1000, -1000, -1000, 9264,
	-1000, 2587, 2586, 2580, 2578, 2577, 2575, 2574, 2571, 2570,
	2569, 2568, 2567, 2565, 2561, 2313, 10949, 2560, 2141, 2140,
	2559, 2558, 2554, 2138, 2313, 2313, 2552, 2551, 2550, 2549,
	2548, 2546, 2545, 2544, 2535, 2534, 2533, 2526, 2525, 2520,
	2519, 2518, 2516, 2510, 2509, 2508, 2504, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1265, -1000, 2500, 2781, 2895, 2363, 2923, 2868, 2866, 2860,
	2849, 1927, -1000, -1000, 60, -1000, -138, -1000, -1000, 912,
	-1000, 797, -1000, 35442, 35442, 35442, 866, 652, 652, 652,
	652, 652, 652, 684, 652, 35442, -168, 699, 695, 691,
	652, -1000, -1000, -1000, -1000, -1000, -1000, -122, -1000, 1624,
	1623, 2688, 786, -1000, -1000, -1000, -1000, 1208, 35442, -1000,
	2399, 1457, 1457, 2892, 554, 553, 552, 1457, 391, -1000,
	1556, 1556, 1556, 1556, 1457, 394, 533, 2895, 2895, 0,
	1556, -50, 1457, 1457, -50, 1457, 1457, 1457, 189, -310,
	-1000, -1000, -1000, 1556, 1556, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2877, 2876, 655, 35442, 114, 35442, 655, 655,
	655, 660, -38, 36526, 35984, 1990, 526, 508, 1222, 1582,
	-1000, 1551, 35442, 35442, 1551, 1551, 18083, 17541, -1000, 35442,
	-1000, 2895, 2363, -1000, 2288, 2511, 2286, 2363, 655, 655,
	655, 655, 655, 156, 655, 655, 655, 655, 35442, 35442,
	32731, 655, 655, 7021, 7021, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 10392, 1752, 1877, 169, -76, -313,
	221, -1000, -1000, 35442, 2762, 159, -1000, -1000, -1000, 2350,
	-1000, 2398, 2398, 2398, 2398, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2431, 2474, -1000, -1000, 2396, 2396,
	2396, 2350, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2427, 2427, 2430,
	2430, 2427, 35442, 8146, 35442, 2788, 328, 2472, -1000, 35442,
	325, 2895, 2781, 2895, -1000, -1000, 1352, 1917, 2136, -1000,
	-1000, 388, 1470, -1000, 970, -1000, -1000, -1000, -1000, 35442,
	-103, 310, -1000, -1000, 2118, 2468, -1000, 491, 1114, 1377,
	-1000, 182, 4266, 28388, 1990, 28388, 35442, -1000, -1000, -1000,
	-1000, -1000, -1000, -20, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 205, -1000, 8146,
	8146, 8146, 8146, 8146, -1000, 805, 8705, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 9823, 9823, 9823, 9823, 9823, 9823,
	9823, 9823, 9823, 9823, 9823, 9823, 2456, 1646, 9823, 9823,
	9823, 9823, 2511, 2730, 1219, 214, -1000, -1000, -1000, -1000,
	-1000, 1643, 1720, 8146, 8146, 35442, -1000, -1000, 4222, 8146,
	8146, 112, 8146, 2847, 8146, 8146, 8146, 2283, 3598, 35442,
	8146, -1000, 2278, 2277, -1000, -1000, 1783, 8146, -1000, -1000,
	8146, -1000, -1000, 8146, 9823, 8146, -1000, -1000, -1000, 1247,
	2847, 2847, 1678, 8146, 8146, 2847, 2847, 2847, 1539, 2847,
	2847, 2847, 2847, 2847, 2847, 2847, 2847, 2270, 2267, 2266,
	2895, -274, 6462, -1000, -279, 2781, 8146, -1000, -1000, 8146,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2132, 2131,
	-329, -37, 808, 807, 810, -1000, 2839, -1000, 2467, 2466,
	1351, 652, -1000, -133, 35442, 1673, 35442, 28388, 35442, 35442,
	1990, 35442, 35442, -187, 652, -167, 652, 652, 652, 35442,
	-1000, 2718, 28388, 2698, 660, -1000, 35442, 1208, 2837, 35442,
	2936, 9823, 9823, -1000, 32189, 1556, 1457, 1457, -1000, -1000,
	35442, -1000, -1000, -1000, 1556, 35442, 1556, 1556, 2936, 1556,
	-1000, -1000, -1000, 1457, 1457, -1000, -1000, -1000, -1000, 1556,
	1556, -1000, -1000, 2936, 35442, -25, 2936, 2936, 2, -1000,
	-1000, -1000, 35442, 35442, 652, 35442, -1000, 35442, 35442, -1000,
	-1000, 35442, 37628, 35442, 31647, 2875, -1000, 28388, 35442, 35442,
	25678, -1000, 1128, -1000, -78, -1000, -75, -38, 1551, -38,
	1551, -1000, 481, 565, 16457, 418, 28388, 4785, -1000, -1000,
	1551, 1551, 4785, 4785, 1399, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1172, -1000, 160, 2781, -1000, -1000, -1000, -1000,
	-1000, 35442, 35442, 28388, 1990, 35442, 655, 35442, 35442, 35442,
	35442, -1000, 2462, -1000, 2810, 35442, 35442, 1306, -1000, -1000,
	13154, 1341, 1306, -1000, 1668, -1000, 8146, 10392, -295, 8146,
	10392, 10392, 8146, 10392, -1000, 8146, 142, -1000, -1000, -1000,
	-1000, 1912, -1000, 1905, -1000, -1000, -1000, 2125, 2125, -1000,
	1899, -1000, -1000, -1000, -1000, 1896, -1000, -1000, 1895, -1000,
	-1000, -1000, 2265, 946, -1000, 2122, 2623, -275, -1000, 15356,
	35442, 35442, -1000, -1000, -275, -1000, 14797, 35442, 2781, -1000,
	2781, 35442, -1000, 2891, -1000, 388, 271, -1000, -1000, -1000,
	-1000, -1000, -1000, 1331, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1161, -1000, 35442, -1000, -1000, 182, 28388,
	29472, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 184, -1000,
	-1000, 163, -1000, 681, 115, 1469, -1000, -1000, 138, 175,
	726, 1720, -1000, 1701, 1701, 1683, -1000, 497, -1000, -1000,
	-1000, -1000, 2457, -1000, -1000, -1000, 1590, 2347, -1000, 1504,
	1504, 1403, 1403, 1403, 1403, 1403, 1552, 1552, -1000, -1000,
	-1000, 5344, 2456, 9823, 9823, 9823, 9823, 611, 611, 3291,
	3389, -1000, 8146, 1655, -1000, 8146, 2085, 1328, 1321, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2264,
	2263, 2315, 2946, 2260, 8146, -1000, -1000, 1444, 1439, 1430,
	-1000, 2072, 7587, -1000, -1000, -1000, 2258, 1297, 2252, -1000,
	-1000, -1000, 2248, 1429, 1101, 2246, 1524, 2245, 1156, 8146,
	8146, 8146, 2244, 1428, 1421, 8146, 8146, 8146, 8146, 2235,
	8146, 8146, 8146, 8146, 8146, 8146, 8146, 8146, 20, 20,
	20, -1000, -1000, 1411, -1000, 1720, -1000, 2112, -1000, 1353,
	1140, -1000, 2228, -1000, -1000, -1000, 2074, -1000, -1000, 827,
	791, 891, 35442, 961, 12063, 35442, 35442, -1000, 2399, 2786,
	140, -1000, 1064, -1000, 115, -111, 351, 980, 2602, 2945,
	2445, 35442, 652, 35442, 35442, 35442, 2835, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 31105, -1000, 2443, 1407, -1000,
	-1000, 8146, -1000, -1000, 2557, 35442, 35442, 2936, 2936, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 35442, 2936, 2936, 1457,
	1556, -1000, -1000, 1556, -1000, -1000, 1556, -1000, 1294, -1000,
	35442, -1000, -1000, -1000, 2399, 1130, -1000, 1142, 633, 633,
	847, 493, 2922, 14238, -1000, 1447, 1021, 679, 2738, 194,
	-1000, 1447, -221, 1447, 1447, 1447, 1447, 1447, 1447, 1447,
	463, 444, 1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447,
	1447, 1447, 1447, 854, 1447, 1447, 1447, 1447, 1447, -1000,
	1447, 2442, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 519,
	135, 2874, 238, 236, 1064, 2871, 251, 2816, 1076, -1000,
	-1000, -1000, -1000, 20258, 20258, 15915, 20258, -1000, 1472, -38,
	-52, -1000, -1000, 1128, 4785, 1128, 4785, -1000, -1000, 675,
	-1000, -1000, 980, -1000, 35442, 35442, -1000, -1000, 2434, 1618,
	-1000, -1000, 10949, -1000, 4785, 4785, -1000, -1000, 20800, 35442,
	-1000, -105, -1000, -88, 2890, 1115, -1000, -1000, 1124, 980,
	2620, 35442, 1115, 1115, -1000, -1000, 12063, 35442, -1000, -1000,
	2936, 7021, -1000, 25678, -1000, -1000, 30556, -1000, 30014, 2936,
	1638, -1000, 10392, 1853, 165, -1000, 197, -320, 152, 1697,
	151, 1720, -1000, -1000, 2230, 2229, 1396, -1000, 1393, 2225,
	1391, 1390, -1000, -33, -1000, 2772, 983, -1000, 2433, -1000,
	1387, 2682, -1000, 1113, -1000, 1616, 1326, -1000, 983, 1298,
	2670, 1113, 2890, -1000, 1291, 78, -1000, -1000, 35442, 2118,
	1292, 29472, 1032, -1000, 674, 1282, 1276, -1000, 28388, 185,
	28388, -1000, 28388, -1000, -1000, 297, -1000, 35442, 2776, -1000,
	-1000, -1000, 2074, -332, -1000, -1000, -1000, -1000, -1000, 1279,
	-1000, 611, 611, 3291, 1753, -1000, 9823, -1000, 9823, 2707,
	1507, -1000, 8146, 1841, 3208, 1456, 19167, 35442, -1000, -1000,
	8146, 8146, -1000, 2686, -1000, -1000, -1000, -1000, 8146, 8146,
	2123, -1000, 35442, -1000, -1000, -1000, -1000, 19167, -1000, 9823,
	-1000, 8146, 1151, 2677, 1273, 20, 20, 20, 2630, 2605,
	2563, 1269, 20, 2555, 2513, 2502, 2494, 2469, 2463, 2459,
	2454, -1000, 2432, -1000, -1000, 6462, -1000, -33, 8146, 8146,
	8146, 2733, -1000, -1000, 104, -1000, 1599, -1000, -1000, -1000,
	779, 161, 2224, 1112, -1000, -1000, 35442, -1000, -1000, -1000,
	2223, 1091, -1000, -1000, -1000, 4173, 2398, 2398, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2431, -1000, -1000,
	2396, 2396, 2396, 2350, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2427, 2427, 2430, 2430, 2427, -1000, 2399,
	2834, -1000, 42, 1447, 487, 28388, 477, -1000, 35442, 1760,
	1598, 2618, 303, 2759, 35442, 26220, 252, 35442, 2426, 2421,
	2417, 337, 4173, 35442, 1243, -1000, 1275, 4181, -1000, 35442,
	1720, -1000, 1990, -1000, 1457, -1000, -1000, 2936, 1317, -1000,
	-1000, 2936, 1457, 1457, 1556, 35442, -1000, 2823, 37628, -1000,
	35442, -1000, -1000, -1000, 777, -1000, 824, 652, 35442, 1718,
	824, 1715, 2414, -1000, -1000, 35442, 35442, 35442, 35442, -1000,
	-1000, 35442, -1000, 35442, 35442, 35442, 35442, -1000, 35442, 35442,
	-1000, 35442, 1708, 1702, 2783, -1000, 1447, 1447, 762, -1000,
	-1000, 464, -1000, 1894, 1887, 1886, 1884, 2103, 2102, 2101,
	1447, 1447, 1883, 2097, 28930, 2091, 1045, 1882, 1879, 1878,
	1977, 2089, 1116, -1000, 2088, 1974, 1931, 1915, 35442, 2400,
	2034, -1000, -1000, 42, 1447, 201, 35442, 1594, 487, 350,
	1963, 16999, 35442, 25678, 25678, 25678, 25678, -1000, 2655, 2643,
	-1000, 2653, 2651, 2666, 35442, 25678, 2399, -1000, 28930, -1000,
	-1000, -1000, 2511, 1264, 2913, 811, 8146, -1000, -1000, -82,
	-93, -1000, -1000, -1000, 28388, 2087, 418, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2963, 35442, 35442, 571, 2217,
	-1000, 2934, -1000, 1075, -1000, -1000, 1242, -1000, 2934, 1648,
	-321, 10392, 1640, 1420, -1000, 8146, 10392, 8146, -296, 220,
	-299, -1000, -1000, -1000, 2077, -1000, -1000, -1000, 1872, -1000,
	1863, 51, 61, 1694, -275, 6462, 330, 35442, -275, 35442,
	6462, -1000, 35442, 329, -275, -1000, 35442, 1857, -1000, -1000,
	-1000, 2938, 28388, 1990, 1418, 27846, -1000, 183, -1000, 181,
	466, 2075, -1000, 689, 103, 2074, -1000, -1000, -1000, 9823,
	-1000, -1000, -1000, -1000, 1720, 8146, 2212, -1000, 806, 806,
	2208, -1000, 2398, 2398, -1000, 2350, 2396, 2350, 806, 806,
	2207, -1000, 1950, 2450, -1000, 2419, 2361, 8146, -1000, 2206,
	3226, 1043, -137, 20, 20, -1000, -1000, -1000, -1000, 20,
	20, 20, 20, -1000, 20, 20, 20, 20, 20, 20,
	20, 20, 591, -1000, 51, 1720, 1720, -1000, -1000, 2712,
	-1000, 2074, 2071, -1000, 2068, 2065, 961, 4173, 704, 12063,
	2761, 2819, 315, 1964, -1000, -1000, -1000, 27304, 440, -1000,
	-1000, -1000, 545, 177, 1851, 424, -1000, 35442, 251, 2693,
	1593, 2064, 35442, -1000, -1000, -1000, -1000, -1000, 2759, -1000,
	1072, 320, 1262, -1000, 1447, 1447, 12605, 2818, 2395, 2394,
	12605, 12605, 12605, 323, 1534, -1000, 586, 1059, 1239, 25678,
	35442, -1000, 25136, 2195, -1000, 980, 2936, -1000, 35442, -1000,
	2936, 2936, 1457, -1000, 315, -1000, 2721, 4173, -1000, 35442,
	-1000, 35442, -1000, 35442, 35442, 652, 8146, 2721, 35442, 664,
	-1000, -1000, 922, 267, 603, 603, 1044, -1000, 2798, -1000,
	-1000, -1000, 35442, -1000, -1000, -1000, -1000, -1000, -1000, 19167,
	19167, 2863, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2062, 2057, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 35442, 1260, -1000, 1589, 1964,
	27304, 1560, 1551, 2056, 440, 1760, 1555, -1000, 2046, -1000,
	996, 35442, 35442, -1000, 1198, -1000, 1550, 2611, 2617, 2611,
	-1000, -1000, -1000, -1000, 2640, -1000, 2639, -1000, -1000, 1198,
	-1000, -1000, -1000, -1000, -1000, 811, -1000, 2889, 824, 824,
	824, 2193, -1000, -1000, -1000, 1032, 2188, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2927, 2919, 26762, 2927,
	-1000, -321, 1473, -1000, 1742, 150, 1681, 35442, -1000, -1000,
	-1000, 2184, 2179, -282, 72, 2918, 2917, 2956, -1000, 2177,
	1012, -275, -1000, -1000, 983, -1000, -1000, -1000, -275, -1000,
	983, -1000, -1000, 1990, -1000, 166, -1000, -1000, -1000, -1000,
	-1000, -1000, 97, -1000, 35442, -1000, 102, -1000, 1720, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 8146, -1000, -1000, -1000, 2353, -1000,
	-1000, 8146, 2175, 2044, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2977, -1000,
	2916, -282, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4173, -1000, 1355, 315, -203, -1000, 2043, 110, -1000, -1000,
	-1000, 2042, 2037, 1847, -1000, -1000, 1904, 1244, 128, -1000,
	-1000, -1000, -1000, -1000, -1000, 1963, 1938, 1529, -333, -1000,
	2393, -1000, 1447, 1447, 1447, 35442, -1000, 26220, 1355, 1355,
	2174, 1007, -1000, -1000, -1000, -1000, 315, 24052, 12605, 2173,
	2169, 2165, 605, 1531, 1492, -1000, 1817, 20258, 25678, 25136,
	1102, -1000, 1228, -1000, -1000, -1000, 2936, -1000, -1000, 2936,
	-1000, -1000, -1000, 35442, 274, 2392, -1000, 2385, 2515, 362,
	2384, 2377, 35442, 2187, -1000, 2721, 35442, 599, 2741, -1000,
	-1000, -1000, -1000, -1000, 404, -1000, 35442, -1000, -1000, 1394,
	-1000, 19167, -1000, -1000, 1234, -1000, 2034, 2033, -1000, 110,
	2030, 4785, -1000, -1000, 2693, 2029, -1000, 35442, 996, 996,
	2977, 35442, 6462, -1000, -1000, 8146, 2376, -1000, 8146, -1000,
	-1000, -1000, -1000, -1000, 2357, 2708, -1000, -1000, -1000, -1000,
	-1000, -1000, 8146, 8146, -1000, -1000, 651, 10392, -300, 217,
	-1000, -1000, -1000, -284, 2028, -1000, -1000, 2914, 2024, 1981,
	35442, -1000, 983, 983, 980, -1000, -1000, 2, -1000, 2129,
	-1000, 2059, 20, -1000, 143, 8146, -284, -184, -1000, -1000,
	-203, -1000, 308, -1000, -1000, 296, -1000, -1000, 247, -1000,
	-1000, 1842, 486, -1000, -1000, -1000, 2018, 1739, 1996, 23510,
	19167, 19709, 2016, -1000, -1000, -1000, -1000, -211, 12605, -1000,
	1231, -1000, 1447, 1447, 2164, 37890, 205, 37890, 865, 1489,
	-1000, 1806, -1000, 1805, -1000, 2936, 1102, 1228, -1000, -1000,
	1414, -1000, -1000, -1000, -1000, 274, -1000, -1000, 1725, 9823,
	-1000, -1000, 2015, 19709, 730, 1519, 1511, 817, 2355, -1000,
	421, 2954, -1000, -1000, -1000, 758, 2352, -1000, 1691, 1689,
	-1000, 35442, -1000, 23510, 23510, 380, 380, 23510, 23510, 2351,
	603, -1000, -1000, 9823, -1000, -1000, -1000, -1000, 1447, 1359,
	-1000, -1000, -1000, -1000, -1000, -1000, 1938, -1000, -1000, 2895,
	-1000, -1000, 1720, 35442, 1720, 24594, -1000, 2912, 2910, 1720,
	946, -1000, -321, 35442, 35442, -286, 1804, -1000, 2013, 69,
	-1000, -1000, 947, -288, 30, 66, -1000, -1000, -1000, 2162,
	-1000, 928, -1000, -1000, -1000, 946, -286, 35442, -1000, 420,
	-1000, -1000, 447, 2011, -1000, -1000, 246, -1000, -1000, -1000,
	-1000, -1000, 101, -1000, 1468, 1224, -1000, 2350, 8146, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 24052, 1355, 1355,
	-211, 584, 37825, -1000, 1021, -1000, 2, 584, 488, 216,
	-1000, 1785, -1000, -1000, 2977, -1000, -1000, -1000, 3291, -1000,
	-1000, -1000, -1000, -1000, -1000, 2010, 2007, -1000, -1000, -1000,
	-1000, -1000, 1782, 2346, -119, 2852, 2006, -1000, -1000, 2336,
	1209, 1199, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1183,
	1171, 23510, -1000, -1000, 3291, 19167, 1447, -1000, -1000, 1155,
	1143, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2314, -1000,
	-1000, 2909, -1000, 2002, 658, 49, 66, -1000, 2908, 68,
	2907, 2906, -1000, -1000, 855, -276, 16, 14, -29, -1000,
	-1000, -1000, 8146, -1000, 2814, -1000, 172, -1000, 96, -1000,
	-1000, -1000, 1996, 1993, -1000, 23510, 2798, 2027, -1000, -1000,
	-1000, -1000, 364, 2905, 37890, -1000, 1447, -1000, 364, -1000,
	326, -1000, 1464, -1000, 1780, -1000, 2895, -1000, -1000, 2159,
	8146, 2313, 1447, 2090, -174, 23510, 2465, 2461, 2231, 2067,
	1138, -1000, 19167, -1000, -1000, 22968, 35442, 1981, -1000, 2312,
	1779, 72, 56, 2902, -1000, 1981, 2901, 1981, 1981, 1676,
	-1000, 36, 33, 21, -1000, -1000, -1000, -1000, 1991, -1000,
	-1000, -1000, -1000, 211, -1000, -1000, 2798, -1000, 2899, 429,
	-1000, 19167, -1000, -1000, -1000, 1775, -1000, -1000, -1000, 1911,
	-1000, 35442, -1000, 2616, -1000, 187, 1134, 211, 380, 211,
	380, 211, 380, 211, 380, 179, -1000, -1000, -1000, 1121,
	-1000, -1000, 2844, 18625, 46, -1000, -1000, -1000, 1984, -1000,
	1981, -1000, -1000, 855, -1000, -1000, -1000, -1000, -1000, 1447,
	1969, 302, -1000, -1000, -1000, 22426, 377, 358, 356, -1000,
	531, -1000, -1000, -1000, 603, -1000, -1000, 2606, 2566, 2942,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	35442, -1000, 35442, -1000, 1081, -1000, -1000, -1000, 1073, -1000,
	-1000, -1000, -1000, -1000, 1774, -1000, 35442, -1000, 35442, 373,
	1770, 9823, 2309, 9823, 2308, 389, 2297, -1000, -1000, 2951,
	-1000, 2943, 776, 776, 211, 211, 211, 211, -1000, 915,
	-1000, 1442, -1000, 21884, 35442, -1000, -1000, 1077, 2292, 2897,
	-1000, 3191, 35442, 2903, 35442, 2291, 1440, 9823, -1000, -1000,
	-1000, 1832, 428, -1000, 35442, 5903, -1000, 1022, -1000, -1000,
	577, 379, -1000, 1054, -1000, 1033, 21342, 1759, 1902, -1000,
	-1000, -1000, -1000, -1000, 1720, 35442, 1001, -1000, 35442, 360,
	-1000, -1000, -1000, 993, -1000, -1000, -1000, -1000, 577, 2667,
	-1000, 1751, -1000, -1000, 37666, 690, -1000, -1000, 37666, 372,
	-1000, 548, 2078, -1000, -1000, 985, -1000, 35442, 795, 8146,
	-1000, 372, 37890, -1000, 8146, 949, -1000, 37890, 944, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 148, 3000, 239, 154, 3595, 70, 238, 209, 206,
	236, 3594, 3593, 2764, 2751, 3590, 3589, 3588, 3587, 3586,
	3585, 3585, 3584, 3583, 3582, 3581, 3580, 3578, 3575, 3574,
	3572, 3571, 3570, 3569, 3568, 3567, 3566, 3565, 3564, 3563,
	3562, 3561, 235, 3560, 3559, 3558, 3557, 3556, 3555, 3554,
	3553, 3552, 3551, 3550, 3549, 3548, 3547, 3546, 3545, 3543,
	3542, 3541, 3540, 3539, 3538, 3537, 3536, 3523, 3522, 3521,
	3520, 3519, 3518, 3517, 202, 3516, 2747, 3515, 3514, 3513,
	3512, 3505, 3504, 3503, 221, 3502, 3501, 3487, 3485, 3477,
	3471, 3463, 3462, 3461, 3460, 3459, 217, 3457, 3456, 3455,
	3454, 3453, 3452, 213, 3450, 152, 181, 3449, 3447, 3446,
	3445, 3443, 3442, 231, 219, 65, 3441, 44, 3440, 210,
	3439, 131, 3438, 128, 3420, 3419, 3418, 3417, 3416, 3415,
	3414, 3401, 3399, 3391, 3385, 3377, 3376, 3375, 3374, 3360,
	84, 3359, 250, 3356, 69, 3355, 3353, 107, 124, 176,
	247, 2315, 249, 241, 162, 150, 83, 3352, 2774, 3350,
	141, 220, 134, 23, 3348, 157, 3347, 137, 43, 61,
	240, 115, 55, 139, 125, 3346, 207, 97, 96, 3345,
	3344, 172, 244, 166, 3343, 108, 3342, 3341, 3340, 3339,
	190, 169, 3325, 3323, 110, 3322, 3321, 123, 3320, 67,
	180, 147, 178, 3319, 852, 117, 100, 105, 3318, 3317,
	119, 3316, 3314, 3313, 3311, 161, 3310, 3303, 114, 71,
	3302, 3301, 3300, 66, 3299, 45, 3297, 3296, 31, 3295,
	57, 3294, 3293, 3291, 3289, 3288, 3287, 3285, 3283, 3282,
	3281, 3280, 68, 3279, 3277, 16, 17, 19, 3276, 26,
	3275, 149, 3274, 3271, 3270, 82, 80, 3268, 81, 1,
	46, 85, 3267, 215, 245, 90, 130, 3264, 399, 3263,
	3261, 3259, 140, 3255, 1389, 3254, 3253, 3252, 3251, 3250,
	116, 3249, 208, 48, 3246, 113, 132, 3245, 36, 42,
	189, 191, 3244, 3242, 3240, 301, 175, 87, 29, 0,
	3234, 136, 3232, 3231, 3228, 246, 3226, 225, 197, 146,
	212, 260, 151, 3223, 3222, 64, 3221, 142, 54, 51,
	122, 9, 20, 224, 3220, 14, 164, 3219, 193, 3218,
	173, 7, 127, 3217, 3215, 27, 259, 3214, 3210, 3209,
	106, 3208, 3206, 168, 74, 3205, 3204, 3198, 3196, 34,
	3195, 35, 25, 3193, 89, 3191, 233, 3190, 237, 111,
	163, 156, 129, 214, 222, 73, 72, 3185, 1653, 133,
	92, 18, 3184, 216, 3182, 145, 118, 3180, 76, 3179,
	234, 354, 200, 3178, 165, 8, 41, 33, 3177, 10,
	3176, 177, 196, 3175, 3174, 22, 49, 3173, 30, 3171,
	3170, 3169, 3168, 5, 3167, 3165, 3163, 2, 4, 3161,
	3, 204, 3160, 3159, 3158, 3157, 47, 227, 3155, 138,
	171, 160, 3154, 86, 3153, 3151, 3148, 799, 3144, 242,
	3141, 3139, 3138, 3137, 3136, 3135, 3132, 3130, 3129, 93,
	38, 3128, 3127, 3126, 3124, 75, 121, 3122, 3121, 3119,
	3116, 37, 158, 3115, 21, 3114, 32, 28, 39, 3113,
	109, 3111, 12, 170, 3110, 3109, 15, 3107, 3106, 11,
	13, 3105, 3103, 104, 3098, 91, 24, 143, 94, 3096,
	3095, 78, 211, 126, 3093, 3091, 230, 229, 192, 3087,
	313, 232, 243, 3086, 203, 3081, 3080, 3078, 3076, 3073,
	3071, 1044, 3070, 3069, 223, 62, 88, 99, 3068, 3064,
	3062, 79, 144, 103, 101, 56, 77, 3060, 98, 188,
	3058, 179, 3057, 3055, 95, 3053, 3052, 3051, 3033, 3029,
	167, 3028, 3011, 174, 226, 3004, 3003, 3002, 2998, 228,
	218, 2989,
}

//line mysql_sql.y:10356
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 529, 537, 537, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 111, 111, 110, 527, 527, 527, 528,
	528, 107, 128, 127, 130, 130, 129, 129, 126, 126,
	122, 125, 125, 124, 124, 123, 118, 120, 120, 119,
	121, 121, 108, 96, 109, 472, 472, 471, 471, 470,
	470, 424, 424, 469, 469, 469, 468, 468, 468, 467,
	467, 466, 466, 465, 465, 463, 463, 464, 462, 461,
	461, 461, 459, 459, 459, 455, 455, 457, 456, 456,
	458, 450, 450, 453, 453, 451, 451, 451, 451, 454,
	449, 449, 449, 448, 448, 95, 95, 95, 370, 370,
	94, 94, 384, 384, 384, 384, 384, 382, 382, 382,
	382, 382, 382, 381, 381, 380, 380, 385, 385, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 85,
	85, 85, 85, 85, 90, 90, 90, 534, 534, 533,
	533, 535, 535, 535, 535, 536, 536, 88, 88, 88,
	89, 379, 379, 379, 86, 87, 87, 369, 369, 374,
	374, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 378, 378, 378, 376, 376, 375,
	375, 377, 377, 79, 79, 79, 82, 81, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 80, 80, 80,
	80, 80, 80, 75, 75, 75, 75, 75, 74, 74,
	76, 76, 366, 366, 365, 91, 91, 92, 531, 531,
	530, 532, 532, 532, 532, 93, 99, 99, 99, 99,
	99, 99, 99, 98, 98, 101, 101, 100, 102, 84,
	84, 84, 84, 84, 84, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 497, 497, 497, 499, 499, 303,
	304, 538, 306, 302, 302, 302, 493, 493, 494, 495,
	496, 496, 496, 97, 11, 11, 11, 11, 11, 11,
	11, 73, 78, 250, 250, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 238, 238, 238,
	233, 233, 233, 233, 234, 234, 235, 235, 236, 236,
	236, 236, 237, 237, 296, 296, 255, 255, 255, 257,
	257, 256, 254, 252, 252, 252, 252, 252, 252, 253,
	253, 253, 258, 258, 71, 77, 77, 77, 510, 510,
	72, 521, 521, 427, 427, 317, 317, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 432, 433, 313, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 49, 52, 48, 48, 48,
	355, 355, 47, 539, 539, 291, 291, 60, 59, 51,
	61, 62, 63, 64, 65, 66, 46, 58, 58, 58,
	58, 58, 58, 58, 58, 69, 69, 444, 444, 541,
	541, 541, 67, 68, 426, 426, 426, 57, 56, 55,
	54, 53, 53, 45, 45, 44, 44, 50, 134, 135,
	310, 310, 310, 312, 312, 308, 540, 540, 398, 398,
	311, 311, 43, 43, 43, 43, 70, 309, 309, 290,
	307, 307, 307, 12, 12, 10, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 24,
	25, 27, 363, 363, 360, 26, 18, 17, 17, 21,
	20, 16, 16, 19, 22, 23, 23, 9, 9, 9,
	9, 13, 13, 14, 155, 155, 205, 205, 505, 505,
	501, 501, 502, 502, 502, 503, 503, 504, 504, 103,
	438, 438, 438, 438, 438, 438, 8, 177, 177, 437,
	437, 437, 437, 437, 437, 367, 367, 482, 482, 482,
	483, 176, 176, 171, 171, 439, 439, 332, 484, 484,
	447, 447, 446, 446, 445, 445, 174, 174, 175, 175,
	158, 158, 114, 114, 452, 452, 452, 452, 460, 460,
	423, 423, 242, 242, 283, 283, 284, 284, 148, 148,
	149, 149, 149, 149, 149, 149, 490, 490, 492, 492,
	491, 173, 173, 169, 169, 170, 170, 170, 168, 168,
	167, 166, 166, 165, 163, 163, 163, 164, 164, 164,
	181, 181, 151, 151, 151, 150, 150, 150, 150, 150,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 152, 152, 498, 498, 498, 428, 428, 428,
	435, 435, 265, 265, 266, 266, 264, 264, 153, 153,
	154, 154, 154, 154, 263, 263, 262, 156, 156, 162,
	161, 161, 157, 157, 157, 157, 273, 273, 272, 272,
	272, 272, 106, 112, 112, 113, 180, 180, 271, 270,
	270, 270, 179, 179, 178, 178, 172, 172, 160, 160,
	160, 160, 269, 159, 267, 526, 526, 525, 525, 524,
	522, 522, 522, 523, 523, 523, 523, 474, 474, 474,
	474, 474, 297, 297, 297, 301, 301, 300, 300, 300,
	300, 300, 305, 7, 7, 7, 7, 7, 7, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 37,
	189, 190, 38, 191, 191, 192, 192, 193, 193, 194,
	195, 196, 196, 196, 196, 36, 182, 182, 183, 183,
	184, 184, 185, 186, 186, 186, 188, 187, 35, 35,
	28, 141, 141, 142, 142, 142, 142, 144, 144, 239,
	239, 239, 143, 143, 145, 145, 145, 506, 509, 507,
	507, 511, 511, 511, 512, 512, 512, 512, 513, 513,
	29, 131, 136, 516, 516, 516, 515, 515, 517, 517,
	518, 518, 287, 287, 288, 288, 139, 140, 140, 138,
	133, 147, 147, 147, 147, 147, 132, 137, 508, 514,
	514, 514, 364, 364, 361, 362, 362, 359, 358, 358,
	358, 520, 520, 519, 519, 519, 298, 298, 30, 354,
	354, 356, 357, 357, 357, 348, 348, 348, 348, 34,
	352, 352, 353, 353, 353, 353, 353, 349, 349, 351,
	351, 347, 347, 347, 347, 347, 33, 146, 146, 346,
	346, 343, 343, 341, 341, 342, 342, 340, 340, 340,
	344, 344, 41, 40, 40, 40, 345, 345, 32, 32,
	32, 116, 115, 115, 115, 286, 286, 285, 285, 117,
	39, 217, 217, 412, 412, 412, 412, 412, 430, 430,
	430, 413, 413, 413, 414, 414, 414, 415, 415, 415,
	415, 415, 429, 429, 431, 431, 431, 386, 386, 387,
	387, 387, 390, 390, 404, 404, 405, 405, 403, 403,
	410, 410, 409, 409, 408, 408, 407, 407, 406, 406,
	406, 406, 401, 401, 400, 400, 388, 388, 388, 388,
	388, 389, 389, 389, 399, 399, 402, 402, 227, 227,
	261, 261, 225, 225, 226, 226, 260, 260, 223, 223,
	224, 224, 224, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 480, 480,
	481, 229, 229, 240, 240, 240, 240, 240, 240, 228,
	228, 230, 230, 206, 206, 204, 204, 197, 197, 198,
	198, 199, 199, 199, 203, 203, 202, 202, 202, 202,
	200, 200, 201, 201, 201, 201, 201, 201, 372, 372,
	477, 477, 478, 478, 473, 473, 473, 476, 476, 476,
	476, 476, 479, 479, 479, 475, 475, 207, 281, 281,
	281, 299, 299, 299, 299, 280, 280, 280, 222, 222,
	221, 221, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 371, 371, 314, 314, 315, 315,
	249, 248, 248, 248, 248, 248, 246, 247, 245, 245,
	245, 245, 245, 244, 244, 243, 243, 243, 350, 350,
	241, 241, 232, 232, 232, 231, 231, 231, 411, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 279, 279, 279, 324, 324, 329, 329,
	489, 489, 488, 208, 208, 208, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 218, 218, 218, 395, 395,
	395, 395, 396, 396, 396, 396, 397, 397, 397, 393,
	393, 394, 394, 333, 334, 334, 436, 436, 391, 391,
	392, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	443, 443, 443, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 500,
	500, 500, 485, 485, 485, 486, 486, 486, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 277, 277, 277, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 335, 335, 336, 336, 440, 440, 440, 440,
	440, 440, 441, 441, 442, 442, 442, 442, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 322, 274, 274,
	274, 337, 330, 330, 331, 331, 325, 325, 325, 325,
	325, 325, 325, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 326, 326, 328, 328, 339,
	339, 339, 338, 338, 338, 338, 338, 338, 338, 220,
	220, 220, 220, 319, 319, 319, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 210, 210,
	210, 210, 214, 214, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 215, 215,
	215, 215, 215, 213, 213, 213, 213, 213, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 104, 105, 105, 212, 282, 282,
	416, 416, 419, 419, 417, 417, 418, 420, 420, 420,
	421, 421, 421, 422, 422, 422, 425, 425, 289, 289,
	289, 295, 295, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 4, 5, 5, 6,
	5, 5, 3, 2, 2, 1, 3, 4, 3, 7,
	5, 8, 2, 2, 1, 3, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 2, 1,
	3, 2, 1, 2, 2, 1, 2, 3, 2, 3,
	3, 3, 1, 1, 7, 7, 8, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 5, 3,
	3, 2, 4, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	4, 6, 7, 4, 4, 7, 8, 3, 3, 3,
	0, 2, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 4, 3, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 1, 3, 1, 4, 6, 6, 4, 4,
	4, 4, 4, 3, 6, 3, 5, 1, 1, 2,
	2, 11, 8, 9, 1, 3, 2, 4, 0, 2,
	0, 1, 1, 1, 1, 0, 1, 0, 1, 4,
	2, 1, 5, 4, 4, 2, 5, 1, 3, 2,
	1, 5, 4, 4, 2, 0, 5, 0, 1, 3,
	3, 1, 3, 1, 3, 1, 3, 4, 0, 1,
	0, 1, 1, 3, 1, 1, 0, 4, 1, 3,
	2, 1, 0, 8, 0, 4, 7, 4, 0, 2,
	0, 2, 0, 2, 0, 4, 1, 3, 1, 1,
	5, 3, 4, 6, 4, 5, 2, 3, 1, 3,
	6, 0, 3, 0, 1, 2, 4, 4, 0, 1,
	3, 1, 3, 3, 0, 1, 1, 0, 2, 2,
	0, 2, 3, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 4, 4, 3, 2, 2, 2, 3,
	2, 3, 4, 1, 3, 4, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 3,
	2, 3, 1, 4, 3, 0, 1, 1, 2, 5,
	2, 2, 2, 0, 2, 3, 3, 0, 1, 3,
	1, 3, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 1, 7, 1, 3, 0, 1, 1, 3, 1,
	3, 0, 1, 1, 1, 12, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 9, 8,
	7, 1, 2, 2, 3, 3, 3, 0, 4, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 4, 1,
	1, 3, 4, 3, 0, 1, 1, 1, 0, 2,
	7, 8, 8, 0, 3, 3, 0, 2, 0, 3,
	0, 5, 1, 3, 0, 3, 3, 0, 2, 9,
	6, 0, 2, 2, 3, 3, 4, 4, 1, 0,
	2, 2, 1, 3, 2, 1, 3, 2, 1, 3,
	2, 0, 1, 3, 4, 3, 1, 1, 4, 1,
	3, 1, 1, 1, 1, 0, 1, 1, 1, 11,
	0, 2, 3, 2, 3, 1, 1, 1, 3, 3,
	4, 0, 2, 2, 2, 2, 6, 0, 4, 1,
	1, 0, 3, 0, 1, 1, 2, 4, 4, 4,
	0, 1, 7, 9, 10, 8, 0, 2, 11, 9,
	11, 2, 2, 4, 5, 1, 3, 0, 3, 5,
	10, 0, 2, 0, 3, 2, 4, 3, 0, 2,
	1, 0, 2, 3, 0, 2, 3, 0, 3, 2,
	4, 3, 0, 1, 0, 1, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 1, 3,
	3, 3, 0, 4, 1, 3, 3, 3, 0, 1,
	1, 3, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 4, 1, 3,
	3, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 1, 1, 1, 7, 9, 7, 9,
	2, 1, 7, 9, 7, 9, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 3, 1, 3,
	5, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
	3, 3, 2, 2, 1, 5, 6, 4, 1, 1,
	1, 5, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 6, 6, 1, 1,
	1, 1, 1, 4, 4, 4, 0, 2, 0, 1,
	1, 2, 4, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 2,
	5, 0, 1, 3, 0, 1, 0, 2, 0, 1,
	6, 8, 6, 6, 5, 5, 5, 6, 6, 6,
	6, 5, 6, 6, 6, 6, 6, 6, 6, 6,
	1, 1, 1, 4, 4, 6, 8, 6, 4, 5,
	4, 4, 4, 3, 4, 6, 6, 7, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 8, 4, 2, 3,
	2, 4, 2, 2, 4, 6, 2, 2, 4, 6,
	4, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 2, 3, 5, 1, 1, 3,
	0, 1, 0, 3, 0, 3, 3, 0, 3, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -529, -537, -2, -5, 588, -1, -4, -105, -79,
	-7, -107, -108, -8, -103, -9, -10, -12, -83, -98,
	-100, -102, -101, -42, -11, -97, -74, -75, -85, -91,
	-94, -95, -96, -109, -104, -106, -148, -110, -111, 581,
	-80, -81, -82, -31, -30, -29, -28, -131, -136, 587,
	435, 13, 484, -13, -14, -490, -15, 254, -302, -303,
	-304, -306, -538, -43, -44, -45, -53, -54, -55, -56,
	-57, -67, -68, -69, -46, -47, -48, -51, -49, -60,
	-59, -61, -62, -63, -64, -65, -66, -50, -134, -135,
	-70, -52, -72, -71, -77, -73, -78, -133, -138, 229,
	-76, 75, -86, -87, -88, -89, -90, -92, -93, 361,
	367, 424, 580, 60, -149, -151, 591, 592, 157, 158,
	160, 161, -32, -33, -34, -35, -36, -37, -39, -38,
	-40, -41, 225, 15, 521, -16, -19, -17, -20, -18,
	-26, -27, -25, -22, -24, -132, -23, -137, 249, 248,
	37, 315, 316, 317, 365, 247, 226, 14, 30, 41,
	341, -150, 81, 227, -152, 12, 595, -6, -3, -2,
	-118, -122, -126, -129, -130, -127, -128, -4, -105, 115,
	239, 582, -299, 357, 583, 585, 584, 84, 92, -292,
	-294, 361, 367, 580, 592, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 487, 567, 568, 569, 570, 515, 339, 340,
	518, 266, 290, 392, 296, 303, 157, 176, 170, 198,
	190, 165, 270, 308, 271, 91, 160, 470, 105, 447,
	421, 163, 285, 287, 289, 516, 292, 291, 293, 295,
	272, 342, 186, 181, 284, 268, 179, 273, 39, 274,
	203, 275, 276, 523, 443, 338, 449, 300, 419, 180,
	444, 288, 446, 205, 209, 461, 462, 174, 175, 451,
	464, 202, 246, 42, 520, 258, 465, 207, 201, 197,
	473, 304, 302, 200, 173, 196, 269, 64, 211, 210,
	212, 415, 416, 417, 418, 277, 278, 355, 460, 193,
	182, 343, 166, 22, 468, 253, 448, 368, 279, 297,
	305, 206, 208, 260, 265, 522, 423, 264, 301, 466,
	178, 257, 286, 252, 469, 167, 370, 280, 161, 294,
	463, 472, 63, 383, 172, 164, 243, 158, 262, 267,
	281, 282, 283, 513, 307, 306, 298, 194, 259, 199,
	184, 171, 195, 159, 261, 471, 384, 578, 341, 402,
	192, 189, 263, 236, 467, 450, 162, 406, 385, 187,
	309, 574, 575, 576, 356, 337, 310, 311, 185, 250,
	441, 442, 314, 412, 330, 386, 422, 393, 387, 218,
	318, 453, 455, 204, 577, 319, 320, 321, 445, 322,
	323, 324, 325, 360, 55, 57, 93, 95, 593, -377,
	-375, -299, 580, 367, 361, 341, 592, -191, -299, 594,
	-158, 38, -204, -299, -158, -76, -14, -13, -150, -151,
	-204, 233, -307, 23, 419, -84, 420, 229, 81, -299,
	-9, -96, -8, -103, -74, -148, 424, -305, -299, 315,
	315, -305, 233, -299, 264, 400, -427, 239, -381, -354,
	265, -380, -356, -383, -357, 31, 225, 227, 226, 261,
	15, 365, 235, 13, 12, 366, 247, 24, 25, 27,
	14, 367, 369, 28, 370, 373, 374, 375, 41, 378,
	379, 254, 84, 92, 87, 272, -190, -299, -331, -325,
	112, 255, -327, -320, -321, -323, -469, -463, -318, 81,
	139, 140, 147, 113, -322, -411, 35, 115, 530, 485,
	-275, -276, -277, -278, -279, -299, -464, -462, 87, 96,
	99, 102, 103, 101, 100, 151, 183, 98, 88, 152,
	-151, 84, -485, 539, -293, 560, 567, 568, 569, 570,
	559, 60, -434, -442, 232, -440, 150, 188, 250, 184,
	13, 145, 412, 185, 536, 556, 487, 540, 563, 532,
	533, 534, 527, 528, 529, 531, 541, 543, 555, -443,
	551, 561, 562, 549, 564, 565, 566, 86, 85, 554,
	553, 542, 537, 538, 544, 526, 535, 545, 546, 552,
	557, 558, 349, 105, 350, 351, 477, 342, 352, 239,
	419, 69, 353, 354, 355, 356, 357, 484, 358, 70,
	359, 348, 254, 402, 360, 187, 204, 489, 488, 490,
	481, 478, 476, 479, 480, 482, 483, 547, 548, 550,
	-112, -113, 572, -167, -168, -268, 11, 6, 7, 8,
	9, -527, 421, 522, 87, 162, 159, -368, 162, 111,
	167, 166, -368, 318, 260, 362, -141, 236, 339, 402,
	322, 93, 264, -348, -346, 516, -345, -429, 312, 308,
	234, -142, 244, 243, 106, 477, 232, 108, 376, 303,
	55, 57, -501, -502, 222, 223, 224, -492, 510, -491,
	-299, 351, 95, 26, 233, 362, 260, 455, 453, 454,
	456, 457, 458, 459, -58, -444, -426, 450, 449, -311,
	442, 448, 440, 452, 443, 340, 324, 323, 225, 589,
	511, -289, 386, 422, 474, 475, 363, 423, 461, 463,
	444, 105, 191, 188, 236, 233, 339, 477, 402, 93,
	322, -501, 159, 461, 463, 264, 400, 40, -374, 412,
	-373, -375, 462, 473, 85, 86, 460, -289, 105, 441,
	441, -168, -268, -167, -149, -151, -106, -490, 234, 339,
	402, 264, 235, 233, 514, 236, 477, 232, 315, 362,
	260, 322, 93, -428, -498, 31, -435, 219, 220, 221,
	32, 33, -1, 119, 595, -325, -325, -6, 598, -6,
	-325, -299, -299, 154, -210, -214, -211, -213, -212, -216,
	-215, 188, 189, 150, 192, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 30, 204, 250, 184, 185,
	186, 187, 205, 170, 190, 519, 213, 171, 214, 172,
	215, 173, 216, 174, 175, 217, 176, 179, 180, 181,
	182, 178, 153, 81, 153, 87, -174, 256, -204, 153,
	-174, -168, -167, -168, -204, -280, -299, 421, 122, -84,
	-84, 420, -493, -494, -495, -497, 229, 420, 419, 153,
	272, 16, -305, -305, 79, -204, -356, 264, -381, -354,
	35, 78, 154, 237, 154, 78, 81, 363, 339, 402,
	364, 477, 233, 376, 236, 264, 377, 339, 402, 233,
	236, 477, 264, 339, 233, 236, 402, 264, 377, 440,
	441, 236, 26, 368, 371, 372, 441, -448, 473, 154,
	111, 108, 109, 110, -325, 129, -338, 122, 123, 124,
	125, 126, 127, 128, 136, 135, 146, 139, 140, 141,
	142, 143, 144, 145, 137, 138, 132, 112, 130, 134,
	131, 114, -151, -325, -331, 60, -323, -323, -323, -323,
	-411, -329, -325, 81, 81, 153, 100, 87, -325, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, -441, 81, 81, -335, -336, 81, 81, -318, -280,
	81, 87, 87, 81, 81, 81, 87, -336, -336, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	-168, 154, 81, -114, 38, -170, 21, -152, -151, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 96, 593,
	218, 466, 521, 165, 166, 167, -189, -299, -191, -182,
	-299, 236, -142, 108, -343, 239, -343, -343, -343, -343,
	-343, 235, -343, -204, 514, 513, 233, 233, 233, -343,
	484, 122, 122, 58, -503, 169, 154, -492, -173, 81,
	-310, 130, 134, -310, 23, 262, 262, 262, -310, 302,
	-539, -540, 16, 132, -308, -540, -308, -308, -310, -541,
	235, 451, 42, 263, 262, -169, -170, -169, 445, 441,
	-398, 446, 447, -312, -540, -311, -310, -310, -311, -310,
	-310, -310, 233, 236, 477, 322, 590, -539, -539, 30,
	30, -427, -204, -427, 511, -290, -299, -427, -427, -427,
	-504, 238, -534, -533, 464, -536, 466, 159, -375, 159,
	-375, -356, 264, 264, 154, 122, 23, -376, 122, 133,
	-375, -375, -376, -376, -228, 40, -298, 150, -299, 87,
	-228, 40, -531, -530, -204, -169, -152, -151, 82, 82,
	82, -427, -427, -427, -427, -427, -429, -427, -427, -427,
	-427, -305, -182, -191, 239, -427, -427, -153, -154, 141,
	-325, -299, -153, -3, -120, -119, 116, 117, 119, 583,
	357, 582, 586, 580, -375, 40, -422, 384, 383, -416,
	-418, 81, -417, 81, -417, -417, -417, 81, 81, -419,
	81, -419, -419, -416, -420, 81, -420, -421, 81, -421,
	-420, -299, -330, -331, -299, 38, -437, 60, -148, 81,
	30, 81, -299, -438, 60, -148, 81, 30, -169, -114,
	-170, 153, 96, 87, -84, 82, 154, -496, 102, 103,
	-499, 202, 194, -299, -99, 87, -7, -8, -9, -10,
	-42, -74, -148, -465, -463, 81, 31, 411, 78, 16,
	-382, 233, 477, 362, 260, 236, 339, -380, -363, -360,
	-358, -298, -356, -359, -358, -385, -280, 441, -115, 425,
	314, -325, -325, -325, -325, -325, 101, 112, 337, 102,
	103, -320, -339, 31, 310, 311, -321, -321, -321, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -328, -337,
	-411, 81, 132, 130, 134, 131, 114, -323, -323, -321,
	-321, 82, 154, -489, -488, 116, -325, -325, -299, -486,
	-487, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 353, 348, 354, 352, 342, 360, 355, 356,
	187, 508, 509, 502, 503, 504, 505, 506, 507, -330,
	-330, -325, -486, -330, -274, 32, 31, -331, -331, -331,
	82, -325, -500, 335, 334, 336, -171, -299, -330, 82,
	82, 82, 96, -331, -331, -330, -321, -330, -487, -274,
	-274, -274, 141, -331, -331, -274, -274, -274, -274, 141,
	-274, -274, -274, -274, -274, -274, -274, -274, 82, 82,
	82, -169, -113, -446, -445, -325, 40, 573, -114, -325,
	-166, -165, -325, -528, 87, 87, 596, 467, 468, 163,
	166, 165, 34, 81, 81, 153, -343, 484, -204, 112,
	-506, -299, -364, -361, -358, -299, -299, -354, -299, -299,
	521, -343, 514, -343, -343, -343, -204, -239, 52, 53,
	54, -358, -143, 55, 56, -504, -491, 34, -172, -299,
	-264, 17, -323, -323, -358, 264, -539, -310, -310, -291,
	-290, -312, -307, -312, -312, -264, -540, -310, -310, -312,
	-308, -264, -299, 441, -264, -264, -398, -309, -299, -309,
	-343, -290, -291, -291, -204, -250, -251, 230, 346, 347,
	228, 226, 11, 227, -259, 303, -344, 485, -234, -235,
	76, 41, -237, 388, 381, 266, 270, 91, 271, 421,
	272, 235, 274, 275, 276, 291, 293, 246, 277, 278,
	279, 412, 280, 158, 292, 281, 282, 283, 364, -229,
	6, 325, 40, 50, 51, 434, 433, 524, 521, 267,
	-506, -506, 30, 30, -364, -299, -299, -161, -156, -160,
	-157, -162, -267, -269, -159, 81, -204, -151, -299, 154,
	465, 467, 468, -534, -376, -534, -376, 31, 411, -379,
	411, 31, -354, -373, 461, 463, -369, 87, 412, -359,
	-378, 78, 150, -445, -376, -376, -378, -378, 149, 154,
	-532, 466, 467, 222, -114, -206, -204, -506, -363, -354,
	-299, -427, -206, -206, -299, -299, 81, 35, -299, -299,
	-263, 154, -262, 16, -300, -299, 34, 87, 153, -263,
	-121, -119, 118, -325, -6, 582, -325, -6, -6, -325,
	-6, -325, -425, 385, 96, 96, -282, 87, -282, 96,
	96, 96, 82, 87, -367, 78, -439, -332, -484, 572,
	-176, 82, -171, -482, -483, -171, -175, -299, -439, -176,
	82, -482, -114, -114, -299, 23, -84, -494, 153, 154,
	-172, -382, -362, -359, -384, 141, -299, -370, 154, 521,
	599, 85, 237, -520, -519, 403, 82, 154, -449, 238,
	484, 87, 596, 218, 101, 337, 102, 103, -411, -331,
	-328, -323, -323, -321, -321, -326, 251, -326, 111, -325,
	-324, -488, 118, -325, 34, 154, 79, 153, 82, 82,
	16, 16, 82, -325, 82, 82, 82, 82, 16, 16,
	-325, 82, 153, 82, 82, 82, 82, 79, 82, 154,
	82, 154, -331, -325, -331, 82, 82, 82, -325, -325,
	-325, -331, 82, -325, -325, -325, -325, -325, -325, -325,
	-325, -392, 436, -392, -392, 154, 82, 87, 154, 22,
	154, -163, 36, 37, -286, -285, 87, 164, 167, 167,
	166, -190, -192, -193, -194, -195, -196, 132, 155, 156,
	-183, -184, -185, -186, -210, -280, 189, 192, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 250,
	184, 185, 186, 187, 205, 170, 190, 171, 172, 173,
	174, 175, 176, 179, 180, 181, 182, 178, -299, -204,
	-173, 35, -509, 389, -521, 154, 40, -519, 477, -139,
	314, -347, 79, -146, 16, 81, -204, -343, -204, -204,
	-204, -217, 34, 16, -155, -205, -299, 81, 82, 154,
	-325, -355, 79, -299, -291, -264, -264, -204, -299, -264,
	-264, -310, -312, -312, -308, 153, -290, -173, 154, -203,
	-296, -200, -202, 241, -315, -201, 244, -478, 242, 240,
	106, 245, 299, 107, 235, -296, -296, 241, -238, 237,
	34, -296, -253, 235, 299, 242, 20, -252, 235, 107,
	-299, 241, 245, 240, -295, 122, -289, 149, 237, 42,
	364, -295, 525, -295, -295, -295, -295, -295, -295, -295,
	273, 273, -295, -295, -295, -295, -295, -295, -295, -295,
	-295, -295, -295, 159, -295, -295, -295, -295, -295, -295,
	81, 268, 269, -510, 389, 30, 345, 345, -521, 30,
	-147, 339, 30, -270, -271, -272, -273, 67, 71, 73,
	68, 69, 70, 74, 30, 154, -297, -301, 34, -299,
	87, -297, -151, -156, -161, -297, 81, -533, -535, 469,
	466, 472, -378, -378, 237, 81, 122, -378, -378, 40,
	-298, -530, 473, 467, -181, 23, 154, 78, -206, -183,
	-191, -264, -154, -156, -299, 87, -299, 141, -264, 119,
	-6, 117, -125, -124, -123, 120, 580, 586, 119, 119,
	119, 82, 82, 82, 154, 82, 82, 82, 154, 82,
	154, -452, 446, 39, 154, 81, 82, 154, 60, 154,
	122, 82, 154, 82, 60, -181, 153, 421, -299, -463,
	82, -384, 154, 237, 153, 153, -360, 367, -298, -362,
	20, 521, -280, 38, -286, 596, 82, -326, -326, 111,
	-323, -320, 82, 119, -325, 117, -208, -210, 383, 384,
	-209, -215, 150, 188, 250, 187, 186, 184, 383, 384,
	-228, -299, -325, -325, 82, -325, -325, 16, -299, -228,
	-321, -325, -168, 82, 82, -391, -392, -391, -391, 82,
	82, 82, 82, -391, 82, 82, 82, 82, 82, 82,
	82, 82, 81, -445, -452, -325, -325, -165, -164, 43,
	597, 154, 122, 167, 375, 82, 154, -280, 82, 154,
	-210, -173, 34, -512, 448, 391, 401, -295, -317, -316,
	341, 41, -432, 412, 397, 398, -361, 264, -299, -518,
	94, 122, 78, 329, 330, 331, 332, -341, -342, -340,
	-344, -506, -227, -261, -299, 87, 81, -225, 521, -204,
	81, 81, 81, -412, 319, -210, -204, -155, -299, 16,
	154, -505, 153, -1, -299, -354, -310, -264, -540, -264,
	-310, -310, -312, -299, 34, -251, -207, -280, -201, -477,
	-478, -343, -299, 107, -477, 107, 81, -207, -280, -280,
	-254, -309, -280, -299, -299, -299, -257, -256, -280, -299,
	-299, -299, 107, 107, -233, 40, 47, 48, 49, -295,
	-295, 191, -236, 40, 411, 413, 414, 96, 96, 96,
	96, 87, 87, 87, -295, -295, 96, 87, -301, 87,
	-479, 166, 44, 45, 96, 96, 96, 96, 40, 87,
	-240, 40, 284, 288, 285, 286, 287, 87, 96, 40,
	96, 40, 96, 40, -299, 81, -480, -481, 87, -512,
	-295, 345, -375, 122, -317, -517, 314, -140, 91, 31,
	-177, 230, 227, -506, -366, -365, -280, -160, -160, -160,
	-160, 67, 67, 67, 72, 67, 72, 67, -272, -366,
	-162, -173, -301, 82, -526, -525, -524, -522, 75, 238,
	76, -330, 466, 470, 471, -362, -313, 87, -369, 14,
	-204, -204, -431, 294, 295, 82, -266, 18, 153, -266,
	115, -6, -121, -123, -325, -6, -325, 582, 357, 583,
	87, 96, 96, -460, 431, 426, 428, 107, -332, -447,
	-446, 60, -148, -171, -439, -483, -445, -299, 60, -148,
	-439, -299, 96, 16, -359, -354, 141, 141, -299, 368,
	-370, 87, 390, 87, 233, 597, -286, -320, -325, 82,
	-218, 175, 174, -218, 82, -417, -417, -416, -419, -416,
	-218, -218, 82, 82, 23, 82, 82, 82, -325, 82,
	82, 154, -436, 486, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -391, -391, -334, -333,
	256, -460, 44, 45, -285, 87, 87, 87, -194, -210,
	231, -185, 40, 34, -148, -513, 91, -507, 87, -299,
	-514, 91, 392, 152, 343, 40, 393, 394, 409, 338,
	96, 96, 399, -508, -299, -147, -516, 51, 122, 87,
	-204, -340, -289, 149, 275, 322, 82, 154, -295, -295,
	-197, -198, -199, -207, -200, -202, 34, 81, 81, -197,
	-197, -197, -413, 321, 20, 96, 140, -174, 79, 153,
	-156, -205, -299, 141, 82, -264, -299, -264, -264, -310,
	-148, -255, 44, 46, -210, -475, -299, -473, -475, -299,
	-473, -473, -343, -325, -255, -207, 237, 30, 227, -258,
	327, 328, -371, 300, 112, -371, 154, -163, -299, -228,
	-228, 30, 87, 87, -206, 82, 154, 122, -513, -507,
	122, -376, 87, -514, -518, 122, 87, 154, -177, -177,
	-264, 154, 122, -179, -178, 78, 79, -180, 78, -178,
	67, 67, -264, -524, -523, 23, -478, -478, -478, 82,
	82, -265, 19, 20, 141, -265, 119, 117, 119, 119,
	-299, 82, 82, -423, 574, -456, -458, 426, 20, 20,
	14, 82, -439, -439, -354, -370, 412, -204, 597, -325,
	82, -325, 82, 87, -168, 20, -423, -187, -210, -318,
	-148, -144, 521, 87, -511, 403, 87, 87, 96, 40,
	96, 152, 395, -433, -140, -515, 91, 122, 596, 81,
	-295, -295, -295, -299, -261, -318, -318, 82, 154, -148,
	-226, -260, -299, 87, -197, 82, 82, 82, -414, 255,
	96, 140, 96, 140, 96, -297, -156, -299, -264, -505,
	153, -264, -264, -280, -222, -221, -219, 101, 112, 40,
	381, -220, 91, 149, 289, 292, 291, 267, 290, -249,
	-314, 78, 387, 327, 328, -344, 574, 515, 240, 106,
	107, 369, -315, 81, 81, 79, 309, 81, 81, -475,
	82, -255, -280, 40, -258, 40, 300, -256, 149, -228,
	82, -481, 87, -511, 87, -378, -516, 87, -506, -168,
	-365, -445, -325, 81, -325, 81, 67, 11, 18, -325,
	-331, 239, -6, 583, 357, -242, 575, 87, 20, 87,
	-454, 87, -366, -117, -450, -398, 82, 82, -391, -394,
	-393, -397, 432, 301, 439, -331, -242, 520, -144, -145,
	59, 473, 20, 521, 342, 40, 96, 40, 396, 87,
	102, 103, -287, -288, 87, -349, -351, -280, 81, -228,
	-230, -298, 150, 87, -225, -199, 82, 154, -295, -295,
	82, -223, -224, -259, -344, -116, -115, -223, -415, 158,
	96, 140, 96, 96, -264, -264, -219, 101, -321, 87,
	-230, -231, 40, 288, 284, 122, 122, -232, 40, 268,
	269, -241, 81, 299, 14, 191, 81, 107, 107, -204,
	-349, -349, -476, 329, 330, 331, 333, 332, -476, -349,
	-349, 81, -372, -371, -321, -295, 149, -515, -169, -172,
	-474, -299, 240, 20, 20, -299, -299, -283, 576, 96,
	87, 428, -424, 577, -459, 431, -453, -451, 426, 427,
	428, 429, 82, -396, 114, 395, 399, -319, -322, 96,
	99, 183, 152, -283, -188, -299, 299, 87, 390, 87,
	342, 597, 154, 122, 82, 154, -416, -325, -260, -318,
	-318, -225, -386, 256, 154, -259, -289, -117, -386, -430,
	166, 320, 521, 96, 140, 96, -168, 87, 87, 96,
	81, -440, 30, 87, -350, 81, 82, 82, 82, 82,
	-349, -228, -295, 82, 82, 154, 81, 20, 87, -461,
	238, -457, -458, 430, -451, 20, 428, 20, 20, -395,
	-396, 399, -319, -322, 572, 437, 437, 437, 34, 368,
	412, -288, 87, -352, -351, -163, 82, -387, 308, 20,
	-259, -295, -387, 320, 96, 140, 96, -169, 82, -325,
	-335, -295, 82, -244, -243, 517, -349, -352, 79, -352,
	79, -352, 79, -352, 79, 82, -228, -299, 240, -284,
	-299, -454, -468, 81, 96, -456, -455, -457, 20, -454,
	20, -454, -454, 111, 438, 438, 438, 87, -353, 246,
	91, 521, 327, 328, -163, 20, -388, 301, 302, -389,
	-402, 304, -228, 96, 82, -299, -248, -246, -247, 78,
	444, 297, 298, 82, -476, -476, -476, -476, -249, 82,
	154, -472, 30, 82, -467, -466, -281, -462, -299, 431,
	432, 87, -454, -395, -295, 87, 326, -280, 81, -400,
	305, 81, -398, 81, -398, 107, 330, -371, -247, 78,
	-246, 78, 15, 14, -352, -352, -352, -352, -299, -471,
	-470, -469, 82, 154, 153, 96, -299, -385, -390, 306,
	96, -321, 81, -321, 81, -399, 303, 81, -245, 294,
	295, 30, 166, -245, 154, 122, -466, -299, 82, -404,
	81, 20, 82, -385, 82, -385, 81, 122, -321, 101,
	40, 296, -470, 40, -325, 153, -405, -403, 256, -389,
	82, 82, 82, -385, 96, 82, -299, 82, 154, -299,
	-401, 307, 82, -403, -406, 60, 96, -410, -407, 81,
	-259, 258, 132, -410, -259, -409, -408, 306, 259, 81,
	82, 154, -299, 255, 81, -331, -408, -407, -331, 82,
	82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 823, 824, 825, 826, 827, 828, 0,
	0, 0, 0, 597, 598, 0, 565, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 354, 355, 356, 357, 358, 359, 360, 0,
	288, 284, 209, 210, 211, 212, 213, 295, 296, 433,
	0, 0, 0, 0, 678, -2, 56, 0, 277, 0,
	268, 268, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, -2, 610, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 343, 344,
	345, 339, 340, 342, 341, -2, 0, 610, 0, 0,
	0, 698, 0, 0, 715, 737, 23, 0, 7, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	0, 19, 0, 19, 0, 0, 0, 1191, 1192, 1193,
	1194, -2, 1683, 1661, 1826, 1838, 1839, 1840, 1841, 1842,
	1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 0,
	261, 259, 1661, 1683, 1743, 1776, 1826, 0, 843, 0,
	656, 0, 661, 1145, 656, 289, 599, 600, 698, 698,
	563, 0, 325, 0, 1674, 329, 0, 0, 0, 560,
	319, 320, 321, 322, 323, 324, 0, 0, 822, 0,
	0, 315, 0, 283, 1734, 0, 0, 0, 0, 0,
	0, 153, 949, 155, 951, 159, 166, 0, 0, 171,
	172, 175, 176, 177, 178, 179, 0, 183, 0, 185,
	188, 0, 190, 191, 0, 194, 195, 196, 0, 206,
	207, 208, 952, 953, 954, -2, 84, 841, 1594, 1484,
	0, 1491, 1492, 1503, 1514, 1271, 1272, 1273, 1274, 0,
	0, 0, 0, 0, 1281, 1282, 0, 1298, 1842, 0,
	1288, 1289, 1290, 1291, 1292, 93, 105, 106, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 0, 1544, 1545, 1546, 1457,
	1258, 1191, 0, 1851, 0, 1871, 1876, 1877, 1878, 1879,
	1870, 0, 0, 1442, 0, 1432, 0, 0, -2, -2,
	0, 0, 1801, -2, 1848, 1867, 1875, 1852, 1874, 1844,
	1845, 1846, 1839, 1840, 1841, 1843, 1853, 1855, 1866, 0,
	1862, 1872, 1873, 0, 0, 0, 0, 107, 108, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1448, -2, 1450, 1451, 1453, -2, 1455, 1456,
	-2, 1459, 1460, 1461, -2, -2, 1464, 1465, 1466, 1467,
	1468, 1469, 1472, -2, -2, -2, -2, 1444, 1445, 1446,
	1447, 1436, 1437, 1438, 1439, 1440, 1441, -2, -2, -2,
	698, 773, 0, -2, 0, 0, 0, 720, 723, 726,
	729, 0, 57, 58, 0, 278, 279, 267, 269, 0,
	273, 0, 266, 0, 0, 0, 0, 981, 981, 981,
	981, 981, 981, 0, 981, 0, 0, 0, 0, 0,
	981, 871, 956, 957, 958, 979, 980, 0, 1033, 0,
	0, 0, 615, 611, 612, 613, 614, 686, 0, 688,
	691, 540, 540, 487, 0, 0, 0, 540, 0, 501,
	493, 0, 0, 0, 540, 0, 0, 693, 693, 0,
	543, 550, 540, 540, -2, 540, 540, 540, 0, 0,
	507, 508, 509, 493, 493, 512, 513, 514, 525, 526,
	551, 1618, 0, 0, 433, 0, 433, 0, 433, 433,
	433, 617, 1771, 1681, 1748, 1734, 0, 0, 234, 1801,
	239, 0, 1682, 1697, 0, 0, 1715, 0, -2, 0,
	305, 693, 0, 699, 0, 698, 0, 0, 433, 433,
	433, 433, 433, 1032, 433, 433, 433, 433, 0, 0,
	0, 433, 433, 0, 0, 738, 739, 734, 735, 736,
	740, 741, 5, 6, 19, 0, 0, 0, 0, 0,
	0, 63, 62, 0, 1595, 1613, 1549, 1550, 1551, 1600,
	1553, 1604, 1604, 1604, 1604, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 0, 0, 1593, 1573, 1602, 1602,
	1602, 1600, 1597, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1607, 1607, 1610,
	1610, 1607, 0, 1482, 0, 0, 0, 0, 660, 0,
	0, 693, -2, 0, 564, 326, 1195, 0, 0, 330,
	331, 0, 0, 346, 0, 349, 334, 335, 336, 0,
	133, 0, 317, 318, 0, 0, 285, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 163, 160, 167,
	170, 180, 187, 0, 199, 201, 204, 161, 168, 173,
	174, 181, 202, 162, 164, 165, 169, 203, 205, 182,
	186, 200, 184, 189, 192, 193, 198, 0, 134, 0,
	0, 0, 0, 0, 1490, 0, 0, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 1484, 0, 0, 1277, 1278, 1279, 1280,
	1283, 0, 1299, 0, 0, 0, 1543, 1547, 0, 1482,
	1482, 0, 1482, 1478, 0, 0, 0, 0, 0, 0,
	1482, 1418, 0, 0, 1420, 1433, 0, 0, 1422, 1423,
	0, 1426, 1427, 1482, 0, 1482, 1431, 1414, 1415, 0,
	1478, 1478, 1478, 0, 0, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 0, 0, 0,
	693, 0, 0, 681, 0, 662, 0, 717, 719, 0,
	721, 722, 724, 725, 727, 728, 730, 731, 59, 0,
	0, 0, 0, 271, 0, 276, 0, 840, 0, 0,
	856, 981, 872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 981, 0, 981, 981, 981, 0,
	-2, 0, 0, 0, 617, 616, 0, 687, 0, 0,
	746, 0, 0, 486, 0, 493, 540, 540, 499, 500,
	495, 494, 546, 547, 543, 0, 543, 543, 746, 0,
	519, 520, 521, 540, 540, 527, 694, 528, 529, 543,
	0, 548, 549, 746, 0, 0, 746, 746, 0, 537,
	538, 539, 0, 0, 981, 0, 556, 495, 495, 1619,
	1620, 0, 990, 0, 0, 0, 559, 0, 0, 0,
	0, 618, 214, 217, 0, 220, 0, 1771, 0, 1771,
	0, 227, 0, 0, 0, 0, 0, 0, 257, 258,
	0, 0, 0, 0, 248, 251, 1139, 1140, 946, 947,
	252, 253, 297, 298, 0, 662, 716, 718, 712, 713,
	714, 0, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 593, 0, 595, 0, 0, 0, 754, 748, 750,
	817, 93, 754, 8, 80, 77, 0, 19, 0, 0,
	19, 19, 0, 19, 262, 0, 1616, 1614, 1615, 1552,
	1601, 0, 1578, 0, 1579, 1580, 1581, 0, 0, 1574,
	0, 1575, 1576, 1577, 1568, 0, 1569, 1570, 0, 1571,
	1572, 260, 0, 1483, 844, 0, 635, 648, 630, 0,
	637, 0, 1146, 619, 648, 621, 0, 637, 662, 684,
	662, 0, 327, 0, 332, 0, 0, 348, 350, 351,
	352, 337, 338, 561, 313, 314, 306, 307, 308, 309,
	310, 311, 312, 316, 103, 0, 286, 287, 0, 0,
	0, 147, 148, 149, 150, 151, 152, 154, 138, 582,
	584, 938, 950, 0, 941, 0, 157, 197, 130, 0,
	0, 1485, 1486, 1487, 1488, 1489, 1493, 0, 1495, 1497,
	1499, 1501, 0, 1519, -2, -2, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1504, 1517,
	1518, 0, 0, 0, 0, 0, 0, 1515, 1515, 1510,
	0, 1275, 0, 1296, 1300, 0, 0, 0, 94, 1477,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 0,
	0, 1484, 0, 0, 0, 1479, 1480, 0, 0, 0,
	1373, 0, 0, 1379, 1380, 1381, 0, 643, 0, 1443,
	1419, 1434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 772, 774, 0, 652, 654, 655, 0, 682, 695,
	700, 701, 704, 55, 60, 53, 1007, 280, 281, 0,
	0, 275, 0, -2, 858, 0, 0, 873, 691, 0,
	0, 887, 431, 932, 0, 0, 0, 948, 971, 977,
	0, 0, 981, 0, 0, 0, 1011, 874, 879, 880,
	881, 875, 876, 882, 883, 0, 689, 0, 0, 786,
	485, 0, 541, 542, 490, 1734, 495, 746, 746, 502,
	496, 503, 545, 504, 505, 506, 0, 746, 746, 540,
	543, 530, 544, 543, 533, 534, 0, 552, 557, 553,
	0, 555, 510, 511, 691, 362, 363, 404, 404, 404,
	387, 404, 0, 0, 375, 1621, 0, 0, 0, 0,
	384, 1621, 0, 1621, 1621, 1621, 1621, 1621, 1621, 1621,
	0, 0, 1621, 1621, 1621, 1621, 1621, 1621, 1621, 1621,
	1621, 1621, 1621, 0, 1621, 1621, 1621, 1621, 1621, 1125,
	1621, 0, 991, 394, 395, 396, 397, 402, 403, 0,
	428, 0, 0, 0, 431, 0, 921, 759, 0, 760,
	761, 757, 788, 812, 812, 0, 812, 792, 1145, 0,
	0, 225, 226, 215, 0, 216, 0, 228, 229, 0,
	231, 232, 233, 240, 1681, 1748, 235, 237, 0, 0,
	241, 254, 255, 256, 0, 0, 246, 247, 0, 0,
	300, 301, 303, 0, 710, 579, 1143, 580, 581, 585,
	0, 0, 588, 590, 591, 592, 858, 0, 926, 927,
	746, 0, 755, 0, 751, 818, 0, 820, 0, 746,
	0, 78, 19, 0, 71, 68, 0, 0, 0, 0,
	0, 1596, 1548, 1617, 0, 0, 0, 1598, 0, 0,
	0, 0, 61, 664, 626, 0, 629, 645, 0, 649,
	0, 0, 641, 634, 638, 0, 0, 658, 620, 0,
	0, 625, 710, 685, 1196, 0, 333, 347, 0, 0,
	0, 0, 141, 935, 0, 142, 146, 136, 0, 0,
	0, 940, 0, 937, 942, 0, 156, 0, 0, 131,
	132, 1002, 1007, 0, 1494, 1496, 1498, 1500, 1502, 0,
	1505, 1515, 1515, 1511, 0, 1506, 0, 1508, 0, 1485,
	0, 1301, 0, 0, 0, 0, 0, 0, 1363, 1364,
	0, 0, 1368, 0, 1370, 1371, 1372, 1374, 0, 0,
	0, 1378, 0, 1417, 1435, 1421, 1424, 0, 1428, 0,
	1430, 0, 698, 0, 0, 1338, 1338, 1338, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 1293, 0, 1294, 1295, 0, 775, 664, 0, 0,
	0, 707, 705, 706, 0, 1005, 0, 282, 270, 272,
	0, 0, 0, 846, 847, 849, 0, 852, 853, 854,
	0, 859, 860, 862, 863, 0, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1666, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 857, 691,
	0, 982, 894, 1621, 435, 0, 0, 934, 0, 910,
	0, 0, 0, -2, 0, 0, 1082, 0, 0, 0,
	0, 1013, 0, 0, 0, 604, 608, 23, 692, 0,
	747, 488, 0, 489, 540, 497, 498, 746, 1145, 522,
	523, 746, 540, 540, 543, 0, 554, 0, 990, 365,
	0, 1154, 1155, 405, 0, 1161, 1170, 981, 1228, 0,
	1170, 0, 0, 1172, 1173, 0, 0, 0, 0, 388,
	389, 0, 374, 0, 0, 0, 0, 373, 0, 0,
	415, 0, 0, 0, 0, 1622, 1621, 1621, 0, 382,
	383, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	1621, 1621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1116, 0, 0, 0, 0, 0, 0,
	0, 1131, 1132, 894, 1621, 0, 0, 0, 435, 908,
	917, 0, 0, 0, 0, 0, 0, 779, 0, 0,
	778, 0, 0, 0, 0, 0, 691, 813, 0, 815,
	816, 790, -2, 0, 759, 795, 1482, 218, 219, 0,
	0, 224, 242, 244, 0, 0, 0, 243, 245, 249,
	250, 299, 302, 304, 680, 0, 0, 0, 1034, 0,
	596, 744, 749, 756, 819, 821, 94, 752, 744, 0,
	81, 19, 80, 72, 73, 0, 19, 0, 0, 0,
	0, 1606, 1605, 1591, 0, 1592, 1603, 1608, 0, 1611,
	0, 668, 0, 0, 648, 650, 0, 0, 648, 0,
	0, 657, 0, 0, 648, 683, 0, 0, 562, 104,
	353, 0, 0, 0, 0, 0, 583, 0, 939, 138,
	0, 0, 158, 0, 0, 1007, 1481, 1507, 1509, 0,
	1516, 1512, 1276, 1284, 1297, 0, 0, 1303, 1315, 1315,
	0, 1306, 1604, 1604, 1309, 1600, 1602, 1600, 1315, 1315,
	0, 95, 0, 0, 1369, 0, 0, 0, 644, 0,
	0, 0, 1336, 1338, 1338, 1344, 1339, 1345, 1346, 1338,
	1338, 1338, 1338, 1351, 1338, 1338, 1338, 1338, 1338, 1338,
	1338, 1338, 1334, 653, 668, 696, 697, 702, 703, 0,
	54, 1007, 0, 274, 0, 0, 851, 0, 0, 0,
	864, 0, 0, 898, 895, 896, 897, 0, 929, 436,
	437, 438, 439, 0, 0, 0, 933, 0, 921, 903,
	0, 0, 0, 972, 973, 974, 975, 976, -2, 985,
	0, 0, 0, 1078, 1621, 1621, 1147, 0, 0, 0,
	1147, 1147, 1147, 1021, 0, 1012, 656, 0, -2, 0,
	0, 606, 0, 0, 787, 491, 746, 515, 0, 531,
	746, 746, 540, 558, 0, 364, 406, 0, 1160, 1185,
	1171, 1185, 1229, 1185, 1185, 981, 0, 406, 0, 0,
	376, 412, 0, 0, 0, 0, 372, 409, 704, 413,
	414, 416, 0, 418, 378, 390, 391, 392, 393, 0,
	0, 0, 385, 398, 399, 400, 401, 1093, 1094, 1095,
	1098, 1099, 1100, 1101, 0, 0, 1104, 1105, 1106, 1107,
	1108, 1182, 1183, 1184, 1109, 1110, 1111, 1112, 1113, 1114,
	1115, 1133, 1134, 1135, 1136, 1137, 1138, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 0, 0, 1128, 0, 898,
	0, 0, 0, 0, 929, 910, 0, 920, 0, 922,
	923, 0, 0, 627, 746, 292, 0, 782, 776, 0,
	765, 780, 781, 768, 0, 770, 0, 766, 767, 746,
	758, 789, 814, 791, 794, 796, 797, 803, 0, 0,
	0, 0, 221, 222, 223, 230, 0, 455, 236, 711,
	1144, 586, 587, 1035, 1036, 594, 742, 0, 0, 742,
	76, 79, 0, 74, 0, 0, 0, 0, 66, 64,
	1599, 0, 0, 670, 118, 0, 0, 0, 646, 0,
	651, 648, 633, 642, 632, 639, 640, 659, 648, 624,
	623, 1197, 328, 0, 936, 138, 143, 144, 145, 139,
	137, 943, 0, 945, 0, 1003, 0, 1513, 1302, 1285,
	1304, 1316, 1317, 1305, 1286, 1307, 1308, 1310, 1311, 1312,
	1313, 1314, 1287, 1365, 0, 1367, 1375, 1376, 0, 1425,
	1429, 0, 0, 0, 1342, 1343, 1347, 1348, 1349, 1350,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 698, 1335,
	0, 670, 708, 709, 1006, 1008, 839, 842, 848, 850,
	0, 861, 0, 0, 877, 870, 0, 0, 889, 890,
	900, 0, 0, 0, 441, 442, 0, 0, 0, 454,
	450, 451, 452, 432, 928, 917, 906, 0, 0, 916,
	0, 986, 1621, 1621, 1621, 0, 992, 0, 0, 0,
	0, 1148, 1149, 1151, 1152, 1153, 0, 0, 1147, 0,
	0, 0, 1024, 0, 0, 1015, 0, 812, 0, 0,
	746, 605, 608, 609, 690, 492, 746, 535, 532, 746,
	361, 377, 407, 0, -2, 0, 1186, 0, 1174, 1186,
	0, 0, 1185, 0, 366, 406, 0, 0, 0, 419,
	422, 423, 420, 1224, 0, 421, 0, 411, 417, 1096,
	1097, 0, 1102, 1103, 0, 1127, 0, 0, 424, 0,
	0, 0, 425, 430, 903, 0, 918, 0, 924, 925,
	698, 0, 0, 762, 783, 0, 0, 763, 0, 764,
	769, 771, 291, 798, 0, 0, 800, 801, 802, 793,
	238, 732, 0, 0, 753, 733, 0, 19, 0, 0,
	69, 1609, 1612, 672, 0, 669, 119, 0, 0, 0,
	0, 647, 631, 622, 140, 135, 944, 121, 1004, 0,
	1377, 0, 1338, 1337, 1331, 0, 672, 0, 867, 865,
	877, 869, 884, 899, 888, 0, 930, 931, 0, 443,
	444, 0, 447, 453, 901, 902, 0, 0, 914, 0,
	0, 0, 0, 978, 1079, 1080, 1081, 1082, 0, 995,
	0, 1084, 1621, 1621, 0, -2, 0, -2, 1027, 0,
	1022, 0, 1014, 0, 1017, 746, 746, -2, 602, 607,
	0, 516, 536, 408, 1187, -2, 1200, 1202, 0, 991,
	1205, 1206, 0, 0, 0, 0, 0, 0, 1250, 1214,
	0, 0, 1218, 1219, 1220, 0, 0, 1223, 0, 1531,
	1532, 0, 1227, 0, 0, 0, 0, 0, 0, 0,
	1168, 367, 368, 0, 370, 371, 1225, 410, 1621, 380,
	1126, 1129, 1130, 429, 426, 427, 906, 909, 628, 693,
	293, 294, 784, 0, 777, 807, 804, 0, 0, 743,
	745, 70, 75, 0, 0, 674, 0, 671, 0, 665,
	667, 129, 636, 91, 112, 0, 1366, 1416, 1341, 0,
	1332, 0, 1326, 1327, 1328, 1333, 674, 0, 868, 0,
	885, 886, 0, 0, 440, 445, 0, 448, 449, 907,
	904, 905, 0, 912, 0, 0, 967, 1600, 0, 987,
	988, 1141, 1142, 989, 993, 1150, 1083, 0, 0, 0,
	1082, 1037, -2, 1090, 0, 999, 121, 1037, 1018, 0,
	1025, 0, 1023, 1016, 698, 603, 1201, 1203, 1204, 1207,
	1208, 1209, 1255, 1256, 1257, 0, 0, 1212, 1252, 1253,
	1254, 1213, 0, 0, 0, 0, 0, 1529, 1530, 1248,
	0, 0, 1175, 1177, 1178, 1179, 1180, 1181, 1176, 0,
	0, 0, 1167, 1169, 369, 0, 1621, 919, 290, 0,
	0, 808, 810, 805, 806, 65, 67, 82, 0, 673,
	120, 0, 83, 0, 109, 0, 122, 123, 0, 0,
	0, 0, 1340, 1329, 0, 0, 0, 0, 0, 1533,
	1534, 1535, 0, 663, 0, 866, 0, 891, 0, 893,
	446, 911, 914, 0, 960, 0, 704, 0, 1085, 1086,
	1087, 994, 1039, 0, 990, 1092, 1621, 1001, 1039, 1010,
	0, 1020, 0, 1029, 0, 1026, 693, 1210, 1211, 0,
	0, 1432, 1621, 0, 1243, 0, 960, 960, 960, 960,
	0, 379, 0, 785, 799, 0, 0, 0, 92, 96,
	0, 118, 115, 0, 124, 0, 0, 0, 0, 0,
	1318, 0, 0, 0, 1322, 1323, 1324, 1325, 0, 878,
	892, 913, 915, 959, 968, 969, 704, 998, 0, 1076,
	1091, 0, 1000, 1019, 1028, 0, 1031, 601, 1251, 0,
	1217, 0, 1222, 1231, 1244, 0, 0, 1156, 0, 1158,
	0, 1162, 0, 1164, 0, 0, 381, 809, 811, 0,
	676, 666, 85, 0, 0, 113, 114, 116, 0, 125,
	0, 127, 128, 0, 1319, 1320, 1321, 855, 961, 1621,
	0, 0, 965, 966, 970, 0, 1064, 0, 0, 1070,
	0, 1077, 1096, 1030, 1215, 1221, 1230, 1232, 1233, 0,
	1245, 1246, 1247, 1249, 960, 960, 960, 960, 1166, 675,
	0, 1009, 0, 97, 0, 99, 101, 102, 1188, 110,
	111, 117, 126, 1330, 0, 963, 0, 1040, 0, 1042,
	0, 0, 0, 0, 0, 1074, 0, 1216, 1234, 0,
	1235, 0, 0, 0, 1157, 1159, 1163, 1165, 677, 86,
	87, 0, 98, 0, 0, 962, 964, 0, 1044, 0,
	1065, 0, 0, 0, 0, 0, 0, 0, 1236, 1238,
	1239, 0, 0, 1237, 0, 0, 100, 1189, 1041, 1038,
	0, 1076, 1066, 0, 1068, 0, 0, 0, 0, 1240,
	1242, 1241, 88, 89, 90, 0, 0, 1046, 0, 1062,
	1067, 1069, 1071, 0, 1075, 1073, 1190, 1045, 0, 1058,
	1043, 0, 1072, 1047, -2, 0, 1063, 1048, -2, 0,
	1056, 0, 0, 1049, 1057, 0, 1052, 0, 0, 0,
	1051, 0, -2, 1059, 0, 0, 1053, -2, 0, 1061,
	1060,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 598, 595,
	123, 122, 124, 3, 599, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 596, 135, 597, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:751
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:758
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:764
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:772
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:778
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:782
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:797
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:801
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:807
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:812
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:848
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:856
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:874
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:894
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:900
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:907
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:915
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:921
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:930
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:940
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:956
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:982
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:999
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1008
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1022
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1028
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1032
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1038
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1047
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1057
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1061
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1067
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1080
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1086
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1107
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1120
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1131
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1137
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1141
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1147
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1166
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1180
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1184
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1201
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1207
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1216
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1227
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1231
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1237
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1241
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1247
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1251
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1257
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1281
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1300
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1304
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1308
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1317
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1332
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1339
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1344
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1351
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1360
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1384
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1388
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1394
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1400
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1418
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1435
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1458
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1462
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1471
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1475
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1481
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1494
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1505
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1558
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1570
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1577
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1594
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1598
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1602
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1606
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1614
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1621
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1625
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1631
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1638
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1647
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1651
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1866
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1890
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1894
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1900
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1915
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1919
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1923
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1927
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1933
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1937
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1943
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1966
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1996
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2000
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2004
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2010
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2020
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2027
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2033
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2037
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2043
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2069
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2108
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2153
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2167
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2176
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2180
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2184
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2190
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2194
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2200
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2204
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2210
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2214
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2225
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2236
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2240
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2244
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2248
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2252
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2256
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2260
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2264
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2286
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2339
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2357
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2368
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2372
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2378
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2394
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2398
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2410
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2422
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2440
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2460
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2501
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2535
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2576
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2580
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2586
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2592
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2597
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2598
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2599
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2604
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2620
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2631
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2640
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2644
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2650
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2657
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2666
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2676
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2685
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2695
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2705
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2714
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2722
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2726
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2730
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2734
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2738
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2747
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2753
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2757
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2761
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2765
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2769
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2773
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2786
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2817
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2821
		{
			yyVAL.str = string("COLUMN")
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2826
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2832
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2838
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2847
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2851
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2857
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2872
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2886
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2915
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2922
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2938
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2942
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2961
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2977
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2990
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2996
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3007
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3022
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3031
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3040
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3060
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3068
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3072
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3092
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3122
		{
			yyVAL.item = nil
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3127
		{
			yyVAL.item = nil
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3173
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3189
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3202
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3208
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3213
		{
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3217
		{
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3242
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3256
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3262
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3268
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3274
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3280
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3286
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3299
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3303
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3311
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3319
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3346
		{
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3348
		{
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3357
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3367
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3376
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3390
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3396
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3402
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3408
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3417
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3427
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3475
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3488
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3497
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3501
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3506
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3510
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3516
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3529
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3533
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3544
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3548
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3552
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3558
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3564
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3568
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3574
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3580
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3584
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3588
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3594
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3598
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3622
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3631
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3640
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3649
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3653
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3659
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3668
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3697
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3703
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3709
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3713
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3719
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3725
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3734
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3752
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3757
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3764
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3780
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3793
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3804
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3808
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3814
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3819
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3826
		{
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3828
		{
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3831
		{
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3840
		{
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3844
		{
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3849
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3858
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3865
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3871
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3879
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3886
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3893
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3913
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3923
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3927
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3933
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3946
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3954
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3961
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3968
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3987
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3991
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4000
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4004
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4010
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4019
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4023
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4029
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4033
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4039
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4043
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4049
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4054
		{
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4065
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4069
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4076
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4085
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4091
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4095
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4101
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4105
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4114
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4127
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4141
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4159
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4178
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4184
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4191
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4195
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4208
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4212
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4217
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4221
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4228
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4233
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4240
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4246
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4250
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4254
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4258
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4262
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4266
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4272
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4288
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4292
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4298
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4310
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4319
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4325
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4329
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4333
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4338
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4342
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4348
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4354
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4358
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4364
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4369
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4373
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4377
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4382
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4386
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4390
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4399
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4407
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4415
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4429
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4433
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4443
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4453
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4463
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4475
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4483
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4491
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4500
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4516
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4524
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4532
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4540
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4556
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4564
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4585
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4599
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4603
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4607
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4612
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4616
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4620
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4633
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4638
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4642
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4651
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4657
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4661
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4667
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4671
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4676
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4680
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4685
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4693
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4699
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4707
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4715
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4725
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4731
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4740
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4749
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4758
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4768
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4772
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4782
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4786
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4790
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4794
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4800
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4810
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4814
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4820
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4830
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4836
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4842
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4846
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4850
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4860
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4866
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4870
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4876
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4880
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4886
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4890
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4900
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4913
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4919
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4925
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4956
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4960
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4966
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4976
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4980
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4984
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4989
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4993
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4997
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5001
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5010
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5014
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5018
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5022
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5027
		{
			yyVAL.str = ""
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5031
		{
			yyVAL.str = yyDollar[1].str
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5035
		{
			yyVAL.str = yyDollar[2].str
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5041
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5047
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5051
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5055
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5059
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5063
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5069
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 839:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5105
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5115
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5121
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 842:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5127
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5137
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5142
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5148
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5159
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5165
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5171
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5176
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5180
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5184
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5188
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5195
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5207
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5212
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5225
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5229
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5235
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5241
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5245
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5255
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5261
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5267
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5276
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5287
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5299
		{
			yyVAL.str = yyDollar[1].str
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5303
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5309
		{
			yyVAL.str = "OR REPLACE"
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5313
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5317
		{
			yyVAL.str = "DEFINER = "
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5321
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5326
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5330
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5344
		{
			yyVAL.str = ""
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5352
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5368
		{
			yyVAL.str = yyDollar[1].str
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5372
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5378
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5419
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5433
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5442
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5454
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5466
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5478
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5491
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5499
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5505
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5513
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5519
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5527
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5542
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5546
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5551
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5555
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5562
		{
			yyVAL.str = yyDollar[3].str
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5567
		{
			yyVAL.str = ""
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5571
		{
			yyVAL.str = yyDollar[2].str
		}
	case 919:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5577
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5591
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5601
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5605
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5611
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5617
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5623
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5632
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5641
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5650
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5655
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5661
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5669
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5775
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5779
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5785
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5795
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5799
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5805
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5815
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5819
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5823
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5832
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5838
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5845
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5851
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5860
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5867
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5876
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5880
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5886
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5900
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5904
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5908
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5913
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5917
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5921
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5925
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5931
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5954
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5976
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5980
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5984
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5988
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5992
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5998
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6002
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6008
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6013
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6018
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6022
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6026
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6030
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6034
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6040
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6055
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6078
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6084
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6088
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6094
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6098
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6102
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6107
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6111
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6117
		{
			yyLOCAL = &tree.CreateConnector{
				ConnectorName: yyDollar[3].tableNameUnion(),
				Options:       yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6126
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6137
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6148
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6163
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6169
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6181
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6190
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6203
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6210
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6220
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6228
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6239
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6243
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6248
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6252
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6259
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6270
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6283
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6297
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6305
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6312
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6319
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6326
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6333
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6337
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6341
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6349
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6356
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6367
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6374
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6385
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6392
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6399
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6406
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6422
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6426
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6439
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6453
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6460
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6467
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6471
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6480
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6484
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6490
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6494
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6500
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6509
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6523
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6529
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6533
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6539
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6546
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6555
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6559
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6568
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6573
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6577
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6582
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6586
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6596
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6600
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6611
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6619
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6627
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6635
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6646
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6655
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6665
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6675
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6679
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6684
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6688
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6694
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6698
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6704
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6708
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6717
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6723
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6727
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6733
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6737
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6742
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6746
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6752
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6756
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6760
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6766
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6790
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6795
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6799
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6803
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6807
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6811
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6815
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6819
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6823
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6827
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6831
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6835
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6839
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6843
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6847
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6851
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6855
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6859
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6863
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6867
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6871
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6875
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6879
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6883
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6887
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6891
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6895
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6899
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6903
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6909
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6913
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6919
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6925
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6929
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6935
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6939
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6947
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6951
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6955
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6969
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6973
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6982
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6987
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6993
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7000
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7004
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7010
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7014
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7018
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7024
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7028
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7034
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7043
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7052
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7075
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7100
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7114
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7120
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7129
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7138
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7147
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7156
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7166
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7174
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7180
		{
			yyVAL.str = ""
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7184
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7194
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7200
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7206
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7225
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7229
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7235
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7241
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7245
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7249
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7255
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7259
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7263
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7267
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7273
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7277
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7281
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7286
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7290
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7296
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7300
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7306
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7310
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7314
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7318
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7322
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7326
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7331
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7335
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7347
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7351
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7355
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7359
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7363
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7367
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7380
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7384
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7388
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7396
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7400
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7406
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7410
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7415
		{
			yyVAL.str = ""
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7419
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7425
		{
			yyVAL.str = ""
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7429
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1230:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7435
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7447
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7454
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7461
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7468
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7475
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7484
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7490
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7496
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7500
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7504
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7508
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7512
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7517
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7524
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7528
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7532
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7541
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7546
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7550
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7566
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7572
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7576
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7580
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7584
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7588
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7592
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7596
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7604
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7608
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7612
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7616
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7620
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7626
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7630
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7634
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7638
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7642
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7646
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7650
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7654
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7658
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7662
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7666
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7670
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7675
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7683
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7688
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7692
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7701
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7705
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7709
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7713
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7717
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7723
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7731
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7739
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7752
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7757
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7761
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7767
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7771
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7777
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7786
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7798
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7815
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7832
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7845
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7858
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7870
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7884
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7899
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7914
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7931
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7946
		{
		}
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7953
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7957
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7961
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7967
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7971
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7975
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7979
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7985
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7989
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7993
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7999
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8007
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8021
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8028
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8037
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8042
		{
			yyVAL.str = ","
		}
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8046
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8058
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8084
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8095
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8105
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8115
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8125
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8134
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8143
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8153
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8163
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8173
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8183
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8193
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8203
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8213
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8223
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8233
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8243
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8253
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8263
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8282
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8290
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8298
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8306
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8314
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8324
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8332
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8341
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8349
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8357
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8365
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8373
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8384
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8394
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8406
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8417
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8439
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8475
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8487
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8499
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8510
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8518
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8525
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8532
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8544
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8552
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8562
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8572
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8580
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8591
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8600
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8609
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8617
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8627
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8635
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8645
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8649
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8659
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8678
		{
		}
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8680
		{
		}
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8721
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8732
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8736
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8740
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8746
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8755
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8761
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8765
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8772
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8776
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8780
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8788
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8792
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8796
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8800
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8806
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8810
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8814
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8818
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8822
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8826
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8830
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8834
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8838
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8842
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8850
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8854
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8858
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8862
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8866
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8870
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8874
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8878
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8882
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8886
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8892
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8896
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8902
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8906
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8913
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8917
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8921
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8927
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8931
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8935
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8939
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8943
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8947
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8951
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8957
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8961
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8965
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8969
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8975
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8988
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8993
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8999
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9003
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9016
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9021
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9025
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9029
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9033
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9037
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9044
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9048
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9062
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9066
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9073
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9084
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9089
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9095
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9107
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9119
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9131
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9144
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9157
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9170
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9183
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9235
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9248
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9261
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9276
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9303
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9345
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9381
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9417
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9434
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9446
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9466
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9486
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9506
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9522
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9535
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9548
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9561
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9574
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9586
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9598
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9610
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9622
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9634
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9646
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9658
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9670
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9682
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9695
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9708
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9723
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9731
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9740
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9750
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9773
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9778
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9784
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9791
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9795
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9800
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9804
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9810
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9816
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9823
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9830
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9839
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9846
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9853
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9862
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9866
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9870
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9876
		{
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9878
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9888
		{
			yyVAL.str = ""
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9892
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

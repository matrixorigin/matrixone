// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const INDEX = 57539
const VIEW = 57540
const TO = 57541
const IGNORE = 57542
const IF = 57543
const PRIMARY = 57544
const COLUMN = 57545
const CONSTRAINT = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const FOREIGN = 57549
const KEY_BLOCK_SIZE = 57550
const SHOW = 57551
const DESCRIBE = 57552
const EXPLAIN = 57553
const DATE = 57554
const ESCAPE = 57555
const REPAIR = 57556
const OPTIMIZE = 57557
const TRUNCATE = 57558
const MAXVALUE = 57559
const PARTITION = 57560
const REORGANIZE = 57561
const LESS = 57562
const THAN = 57563
const PROCEDURE = 57564
const TRIGGER = 57565
const STATUS = 57566
const VARIABLES = 57567
const ROLE = 57568
const PROXY = 57569
const AVG_ROW_LENGTH = 57570
const STORAGE = 57571
const DISK = 57572
const MEMORY = 57573
const CHECKSUM = 57574
const COMPRESSION = 57575
const DATA = 57576
const DIRECTORY = 57577
const DELAY_KEY_WRITE = 57578
const ENCRYPTION = 57579
const ENGINE = 57580
const MAX_ROWS = 57581
const MIN_ROWS = 57582
const PACK_KEYS = 57583
const ROW_FORMAT = 57584
const STATS_AUTO_RECALC = 57585
const STATS_PERSISTENT = 57586
const STATS_SAMPLE_PAGES = 57587
const DYNAMIC = 57588
const COMPRESSED = 57589
const REDUNDANT = 57590
const COMPACT = 57591
const FIXED = 57592
const COLUMN_FORMAT = 57593
const AUTO_RANDOM = 57594
const RESTRICT = 57595
const CASCADE = 57596
const ACTION = 57597
const PARTIAL = 57598
const SIMPLE = 57599
const CHECK = 57600
const ENFORCED = 57601
const RANGE = 57602
const LIST = 57603
const ALGORITHM = 57604
const LINEAR = 57605
const PARTITIONS = 57606
const SUBPARTITION = 57607
const SUBPARTITIONS = 57608
const CLUSTER = 57609
const TYPE = 57610
const ANY = 57611
const SOME = 57612
const EXTERNAL = 57613
const LOCALFILE = 57614
const URL = 57615
const PREPARE = 57616
const DEALLOCATE = 57617
const RESET = 57618
const EXTENSION = 57619
const PUBLICATION = 57620
const SUBSCRIPTIONS = 57621
const PUBLICATIONS = 57622
const PROPERTIES = 57623
const PARSER = 57624
const VISIBLE = 57625
const INVISIBLE = 57626
const BTREE = 57627
const HASH = 57628
const RTREE = 57629
const BSI = 57630
const ZONEMAP = 57631
const LEADING = 57632
const BOTH = 57633
const TRAILING = 57634
const UNKNOWN = 57635
const EXPIRE = 57636
const ACCOUNT = 57637
const ACCOUNTS = 57638
const UNLOCK = 57639
const DAY = 57640
const NEVER = 57641
const PUMP = 57642
const MYSQL_COMPATBILITY_MODE = 57643
const SECOND = 57644
const ASCII = 57645
const COALESCE = 57646
const COLLATION = 57647
const HOUR = 57648
const MICROSECOND = 57649
const MINUTE = 57650
const MONTH = 57651
const QUARTER = 57652
const REPEAT = 57653
const REVERSE = 57654
const ROW_COUNT = 57655
const WEEK = 57656
const REVOKE = 57657
const FUNCTION = 57658
const PRIVILEGES = 57659
const TABLESPACE = 57660
const EXECUTE = 57661
const SUPER = 57662
const GRANT = 57663
const OPTION = 57664
const REFERENCES = 57665
const REPLICATION = 57666
const SLAVE = 57667
const CLIENT = 57668
const USAGE = 57669
const RELOAD = 57670
const FILE = 57671
const TEMPORARY = 57672
const ROUTINE = 57673
const EVENT = 57674
const SHUTDOWN = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const ENGINES = 57682
const LOW_CARDINALITY = 57683
const ADMIN_NAME = 57684
const RANDOM = 57685
const SUSPEND = 57686
const ATTRIBUTE = 57687
const HISTORY = 57688
const REUSE = 57689
const CURRENT = 57690
const OPTIONAL = 57691
const FAILED_LOGIN_ATTEMPTS = 57692
const PASSWORD_LOCK_TIME = 57693
const UNBOUNDED = 57694
const SECONDARY = 57695
const USER = 57696
const IDENTIFIED = 57697
const CIPHER = 57698
const ISSUER = 57699
const X509 = 57700
const SUBJECT = 57701
const SAN = 57702
const REQUIRE = 57703
const SSL = 57704
const NONE = 57705
const PASSWORD = 57706
const MAX_QUERIES_PER_HOUR = 57707
const MAX_UPDATES_PER_HOUR = 57708
const MAX_CONNECTIONS_PER_HOUR = 57709
const MAX_USER_CONNECTIONS = 57710
const FORMAT = 57711
const VERBOSE = 57712
const CONNECTION = 57713
const TRIGGERS = 57714
const PROFILES = 57715
const LOAD = 57716
const INFILE = 57717
const TERMINATED = 57718
const OPTIONALLY = 57719
const ENCLOSED = 57720
const ESCAPED = 57721
const STARTING = 57722
const LINES = 57723
const ROWS = 57724
const IMPORT = 57725
const MODUMP = 57726
const OVER = 57727
const PRECEDING = 57728
const FOLLOWING = 57729
const GROUPS = 57730
const DATABASES = 57731
const TABLES = 57732
const EXTENDED = 57733
const FULL = 57734
const PROCESSLIST = 57735
const FIELDS = 57736
const COLUMNS = 57737
const OPEN = 57738
const ERRORS = 57739
const WARNINGS = 57740
const INDEXES = 57741
const SCHEMAS = 57742
const NODE = 57743
const LOCKS = 57744
const TABLE_NUMBER = 57745
const COLUMN_NUMBER = 57746
const TABLE_VALUES = 57747
const NAMES = 57748
const GLOBAL = 57749
const SESSION = 57750
const ISOLATION = 57751
const LEVEL = 57752
const READ = 57753
const WRITE = 57754
const ONLY = 57755
const REPEATABLE = 57756
const COMMITTED = 57757
const UNCOMMITTED = 57758
const SERIALIZABLE = 57759
const LOCAL = 57760
const EVENTS = 57761
const PLUGINS = 57762
const CURRENT_TIMESTAMP = 57763
const DATABASE = 57764
const CURRENT_TIME = 57765
const LOCALTIME = 57766
const LOCALTIMESTAMP = 57767
const UTC_DATE = 57768
const UTC_TIME = 57769
const UTC_TIMESTAMP = 57770
const REPLACE = 57771
const CONVERT = 57772
const SEPARATOR = 57773
const TIMESTAMPDIFF = 57774
const CURRENT_DATE = 57775
const CURRENT_USER = 57776
const CURRENT_ROLE = 57777
const SECOND_MICROSECOND = 57778
const MINUTE_MICROSECOND = 57779
const MINUTE_SECOND = 57780
const HOUR_MICROSECOND = 57781
const HOUR_SECOND = 57782
const HOUR_MINUTE = 57783
const DAY_MICROSECOND = 57784
const DAY_SECOND = 57785
const DAY_MINUTE = 57786
const DAY_HOUR = 57787
const YEAR_MONTH = 57788
const SQL_TSI_HOUR = 57789
const SQL_TSI_DAY = 57790
const SQL_TSI_WEEK = 57791
const SQL_TSI_MONTH = 57792
const SQL_TSI_QUARTER = 57793
const SQL_TSI_YEAR = 57794
const SQL_TSI_SECOND = 57795
const SQL_TSI_MINUTE = 57796
const RECURSIVE = 57797
const CONFIG = 57798
const DRAINER = 57799
const MATCH = 57800
const AGAINST = 57801
const BOOLEAN = 57802
const LANGUAGE = 57803
const WITH = 57804
const QUERY = 57805
const EXPANSION = 57806
const ADDDATE = 57807
const BIT_AND = 57808
const BIT_OR = 57809
const BIT_XOR = 57810
const CAST = 57811
const COUNT = 57812
const APPROX_COUNT_DISTINCT = 57813
const APPROX_PERCENTILE = 57814
const CURDATE = 57815
const CURTIME = 57816
const DATE_ADD = 57817
const DATE_SUB = 57818
const EXTRACT = 57819
const GROUP_CONCAT = 57820
const MAX = 57821
const MID = 57822
const MIN = 57823
const NOW = 57824
const POSITION = 57825
const SESSION_USER = 57826
const STD = 57827
const STDDEV = 57828
const MEDIAN = 57829
const STDDEV_POP = 57830
const STDDEV_SAMP = 57831
const SUBDATE = 57832
const SUBSTR = 57833
const SUBSTRING = 57834
const SUM = 57835
const SYSDATE = 57836
const SYSTEM_USER = 57837
const TRANSLATE = 57838
const TRIM = 57839
const VARIANCE = 57840
const VAR_POP = 57841
const VAR_SAMP = 57842
const AVG = 57843
const ARROW = 57844
const ROW = 57845
const OUTFILE = 57846
const HEADER = 57847
const MAX_FILE_SIZE = 57848
const FORCE_QUOTE = 57849
const PARALLEL = 57850
const UNUSED = 57851
const BINDINGS = 57852
const DO = 57853
const DECLARE = 57854
const KILL = 57855
const QUERY_RESULT = 57856

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8743

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 99,
	21, 572,
	-2, 553,
	-1, 107,
	214, 774,
	-2, 823,
	-1, 127,
	42, 397,
	214, 397,
	241, 404,
	242, 404,
	416, 397,
	-2, 429,
	-1, 446,
	290, 93,
	392, 93,
	-2, 1386,
	-1, 504,
	67, 1192,
	-2, 1526,
	-1, 505,
	67, 1210,
	-2, 1497,
	-1, 509,
	67, 1211,
	-2, 1525,
	-1, 531,
	67, 1124,
	-2, 1581,
	-1, 532,
	67, 1125,
	-2, 1580,
	-1, 533,
	67, 1126,
	-2, 1570,
	-1, 534,
	67, 1545,
	-2, 1565,
	-1, 535,
	67, 1546,
	-2, 1566,
	-1, 536,
	67, 1547,
	-2, 1572,
	-1, 537,
	67, 1548,
	-2, 1555,
	-1, 538,
	67, 1549,
	-2, 1563,
	-1, 539,
	67, 1550,
	-2, 1573,
	-1, 540,
	67, 1551,
	-2, 1574,
	-1, 541,
	67, 1552,
	-2, 1579,
	-1, 542,
	67, 1553,
	-2, 1584,
	-1, 543,
	67, 1554,
	-2, 1585,
	-1, 545,
	67, 1189,
	-2, 1378,
	-1, 552,
	67, 1198,
	-2, 1404,
	-1, 556,
	67, 1202,
	-2, 1443,
	-1, 557,
	67, 1203,
	-2, 1521,
	-1, 565,
	67, 1213,
	-2, 1506,
	-1, 567,
	67, 1215,
	-2, 1516,
	-1, 568,
	67, 1216,
	-2, 1539,
	-1, 579,
	67, 1106,
	-2, 1575,
	-1, 580,
	67, 1107,
	-2, 1576,
	-1, 581,
	67, 1108,
	-2, 1577,
	-1, 588,
	21, 573,
	-2, 536,
	-1, 644,
	411, 429,
	412, 429,
	-2, 398,
	-1, 693,
	104, 1378,
	115, 1378,
	135, 1378,
	-2, 1353,
	-1, 731,
	21, 573,
	-2, 536,
	-1, 830,
	21, 572,
	-2, 1014,
	-1, 1164,
	67, 1260,
	-2, 1523,
	-1, 1165,
	67, 1261,
	-2, 1524,
	-1, 1371,
	1, 308,
	68, 308,
	532, 308,
	-2, 809,
	-1, 1610,
	68, 1339,
	136, 1339,
	-2, 1508,
	-1, 1611,
	68, 1339,
	136, 1339,
	-2, 1507,
	-1, 1612,
	68, 1317,
	136, 1317,
	-2, 1494,
	-1, 1613,
	68, 1318,
	136, 1318,
	-2, 1499,
	-1, 1614,
	68, 1319,
	136, 1319,
	-2, 1431,
	-1, 1615,
	68, 1320,
	136, 1320,
	-2, 1425,
	-1, 1616,
	68, 1321,
	136, 1321,
	-2, 1369,
	-1, 1617,
	68, 1322,
	136, 1322,
	-2, 1496,
	-1, 1618,
	68, 1323,
	136, 1323,
	-2, 1429,
	-1, 1619,
	68, 1324,
	136, 1324,
	-2, 1424,
	-1, 1620,
	68, 1325,
	136, 1325,
	-2, 1417,
	-1, 1622,
	68, 1328,
	136, 1328,
	-2, 1539,
	-1, 1623,
	68, 1308,
	136, 1308,
	-2, 1526,
	-1, 1624,
	68, 1337,
	136, 1337,
	-2, 1497,
	-1, 1625,
	68, 1337,
	136, 1337,
	-2, 1525,
	-1, 1626,
	68, 1337,
	136, 1337,
	-2, 1387,
	-1, 1627,
	68, 1335,
	136, 1335,
	-2, 1516,
	-1, 1628,
	68, 1332,
	136, 1332,
	-2, 1409,
	-1, 1629,
	67, 1290,
	68, 1290,
	136, 1290,
	354, 1290,
	355, 1290,
	356, 1290,
	-2, 1368,
	-1, 1630,
	67, 1291,
	68, 1291,
	136, 1291,
	354, 1291,
	355, 1291,
	356, 1291,
	-2, 1370,
	-1, 1631,
	67, 1294,
	68, 1294,
	136, 1294,
	354, 1294,
	355, 1294,
	356, 1294,
	-2, 1498,
	-1, 1632,
	67, 1296,
	68, 1296,
	136, 1296,
	354, 1296,
	355, 1296,
	356, 1296,
	-2, 1481,
	-1, 1633,
	67, 1298,
	68, 1298,
	136, 1298,
	354, 1298,
	355, 1298,
	356, 1298,
	-2, 1430,
	-1, 1634,
	67, 1300,
	68, 1300,
	136, 1300,
	354, 1300,
	355, 1300,
	356, 1300,
	-2, 1413,
	-1, 1635,
	67, 1301,
	68, 1301,
	136, 1301,
	354, 1301,
	355, 1301,
	356, 1301,
	-2, 1414,
	-1, 1636,
	67, 1303,
	68, 1303,
	136, 1303,
	354, 1303,
	355, 1303,
	356, 1303,
	-2, 1367,
	-1, 1637,
	68, 1342,
	136, 1342,
	354, 1342,
	355, 1342,
	356, 1342,
	-2, 1392,
	-1, 1638,
	68, 1342,
	136, 1342,
	354, 1342,
	355, 1342,
	356, 1342,
	-2, 1405,
	-1, 1639,
	68, 1345,
	136, 1345,
	354, 1345,
	355, 1345,
	356, 1345,
	-2, 1388,
	-1, 1640,
	68, 1342,
	136, 1342,
	354, 1342,
	355, 1342,
	356, 1342,
	-2, 1466,
	-1, 1653,
	1, 802,
	68, 802,
	532, 802,
	-2, 809,
	-1, 1759,
	21, 572,
	-2, 664,
	-1, 1931,
	1, 803,
	68, 803,
	532, 803,
	-2, 809,
	-1, 1940,
	65, 477,
	136, 477,
	-2, 918,
	-1, 1957,
	275, 982,
	-2, 961,
	-1, 2201,
	275, 982,
	-2, 962,
	-1, 2332,
	88, 809,
	131, 809,
	168, 809,
	171, 809,
	-2, 866,
	-1, 2335,
	88, 809,
	131, 809,
	168, 809,
	171, 809,
	-2, 866,
	-1, 2338,
	65, 477,
	136, 477,
	-2, 919,
	-1, 2425,
	88, 809,
	131, 809,
	168, 809,
	171, 809,
	-2, 867,
	-1, 2700,
	68, 838,
	136, 838,
	-2, 809,
	-1, 2704,
	68, 838,
	136, 838,
	-2, 809,
	-1, 2718,
	68, 842,
	136, 842,
	-2, 809,
	-1, 2723,
	68, 843,
	136, 843,
	-2, 809,
}

const yyPrivate = 57344

const yyLast = 31686

var yyAct = [...]int{
	475, 1372, 2704, 1230, 2712, 2703, 2679, 457, 2658, 2583,
	2397, 2519, 477, 455, 2557, 1145, 2632, 2466, 2279, 2621,
	2213, 2537, 2419, 2538, 1600, 2513, 2450, 2280, 2526, 2418,
	2530, 2417, 589, 2464, 857, 2485, 1292, 2460, 1334, 2438,
	148, 148, 501, 2424, 997, 1336, 148, 392, 399, 1148,
	1943, 399, 1087, 2183, 1790, 2348, 2021, 2022, 1480, 1434,
	2315, 2008, 2223, 2202, 1687, 1798, 459, 1404, 2277, 1753,
	1608, 2015, 2271, 1831, 1412, 1050, 2043, 2254, 410, 1504,
	2158, 2155, 1799, 404, 1451, 2153, 1660, 725, 1606, 2222,
	2181, 692, 2063, 959, 1830, 448, 1500, 584, 1932, 449,
	1141, 1375, 454, 1872, 1302, 1283, 1487, 2057, 1427, 1692,
	625, 1481, 698, 1754, 147, 147, 974, 1488, 1405, 1914,
	383, 1688, 397, 31, 1407, 1499, 1961, 1742, 3, 1229,
	1910, 1659, 702, 43, 1322, 584, 1310, 1346, 1793, 894,
	1288, 456, 396, 19, 723, 2104, 1139, 148, 1501, 393,
	8, 1078, 1059, 1293, 98, 394, 6, 1532, 976, 458,
	701, 30, 395, 7, 1347, 1486, 1646, 1511, 447, 1588,
	696, 1345, 987, 1194, 1344, 1178, 1130, 466, 1144, 43,
	1604, 388, 742, 1457, 1475, 1042, 1138, 939, 684, 1761,
	1321, 1360, 2425, 624, 385, 1200, 1199, 1029, 412, 586,
	16, 9, 685, 983, 1431, 4, 998, 398, 1077, 957,
	137, 2098, 588, 2098, 622, 413, 1518, 140, 1833, 650,
	1508, 727, 143, 142, 640, 2509, 2461, 1791, 2278, 1306,
	852, 2566, 1483, 587, 858, 597, 762, 141, 1706, 1220,
	141, 1818, 1505, 2410, 141, 2574, 39, 129, 108, 141,
	2409, 39, 129, 108, 381, 141, 141, 1826, 402, 141,
	1097, 1220, 2495, 141, 141, 31, 39, 129, 108, 408,
	2127, 722, 1031, 97, 141, 43, 1094, 574, 1516, 573,
	575, 576, 1650, 577, 578, 19, 1777, 796, 1445, 1415,
	1416, 2287, 8, 699, 138, 2078, 1778, 1096, 6, 583,
	994, 138, 1794, 30, 660, 7, 138, 1115, 1912, 1083,
	97, 2617, 138, 138, 144, 2615, 138, 1003, 1004, 789,
	1090, 138, 409, 1032, 665, 1356, 664, 598, 1012, 2471,
	1013, 138, 1001, 1147, 450, 1000, 1003, 1004, 2541, 2542,
	794, 695, 694, 1131, 777, 1135, 778, 2567, 2568, 2559,
	707, 706, 708, 1873, 770, 2281, 772, 2636, 2637, 2559,
	1911, 2511, 2064, 799, 800, 801, 798, 2562, 2463, 1134,
	2514, 2515, 2516, 2517, 780, 2065, 2281, 2066, 1150, 745,
	705, 1813, 736, 1428, 773, 148, 735, 1216, 1424, 2525,
	2295, 1213, 2316, 2573, 1917, 1215, 1212, 1214, 1218, 1219,
	1512, 399, 399, 1217, 148, 1420, 669, 590, 734, 1216,
	1015, 1126, 2415, 1213, 730, 732, 2477, 1215, 1212, 1214,
	1218, 1219, 2323, 666, 1585, 1217, 1733, 443, 710, 2169,
	445, 2167, 712, 1645, 2091, 444, 745, 2159, 1905, 107,
	2093, 139, 1136, 775, 1277, 1276, 1823, 2220, 791, 703,
	765, 2470, 2012, 766, 792, 793, 1735, 2472, 1803, 733,
	127, 2480, 2412, 1133, 832, 729, 2174, 1738, 2576, 2577,
	711, 2610, 992, 2619, 2540, 2180, 768, 401, 753, 2163,
	1149, 400, 668, 2164, 2165, 2368, 757, 2531, 771, 774,
	782, 2696, 783, 2713, 2645, 731, 2581, 2582, 2166, 2585,
	2652, 2614, 776, 1926, 1927, 1928, 1929, 1517, 704, 2585,
	787, 788, 767, 982, 1443, 1444, 1521, 1523, 1524, 2502,
	785, 2352, 43, 43, 1024, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1223, 1224, 1225, 1226,
	1227, 1228, 1221, 1222, 2361, 697, 699, 2656, 1716, 1715,
	667, 2356, 2237, 1993, 1014, 2452, 747, 746, 1223, 1224,
	1225, 1226, 1227, 1228, 1221, 1222, 1089, 1235, 1017, 1132,
	779, 738, 739, 2161, 2624, 1923, 709, 2374, 2375, 1506,
	769, 1038, 1037, 755, 1506, 1506, 1156, 1159, 1160, 781,
	996, 995, 981, 980, 407, 1533, 2714, 1157, 2680, 2486,
	956, 958, 960, 834, 835, 836, 837, 2720, 750, 751,
	2299, 2307, 2097, 747, 746, 699, 726, 408, 936, 2556,
	1030, 754, 1819, 1700, 625, 786, 740, 2439, 2440, 2441,
	2443, 2442, 1768, 2708, 2045, 2047, 1693, 1696, 1509, 1696,
	965, 2096, 969, 762, 968, 838, 967, 2575, 784, 403,
	1520, 2149, 971, 888, 1418, 1003, 1004, 1419, 1002, 1003,
	1004, 619, 620, 621, 2106, 2105, 148, 1916, 1026, 1767,
	1766, 2049, 1765, 1035, 993, 2569, 2570, 1519, 1084, 1033,
	1034, 1764, 1507, 587, 999, 40, 2620, 584, 584, 584,
	2625, 1429, 1054, 1054, 1417, 148, 961, 962, 963, 964,
	40, 966, 2411, 2478, 671, 672, 109, 2674, 661, 109,
	2187, 399, 958, 109, 1081, 1081, 1827, 2726, 109, 2170,
	1920, 1921, 2160, 761, 109, 109, 1941, 2094, 109, 1092,
	756, 797, 109, 109, 1919, 1337, 2451, 1423, 2416, 1337,
	1022, 1061, 1522, 109, 2354, 868, 869, 1699, 2353, 1113,
	2725, 2178, 1703, 1701, 1421, 2162, 2707, 1702, 2357, 2358,
	1127, 1697, 1054, 1697, 1054, 735, 1690, 1806, 1056, 1060,
	1691, 1694, 2716, 2697, 2719, 1098, 1994, 1996, 1997, 1998,
	1995, 1942, 2692, 2683, 2251, 797, 802, 1146, 663, 697,
	2046, 662, 1052, 1052, 990, 831, 941, 984, 988, 988,
	1648, 1006, 1007, 840, 1009, 1010, 1011, 989, 943, 1108,
	1109, 1460, 1158, 588, 2622, 2623, 591, 984, 797, 984,
	661, 1129, 1695, 2069, 845, 2682, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 973, 1025,
	2717, 1514, 1189, 1190, 1198, 762, 2663, 1942, 1088, 675,
	2693, 1514, 1095, 1244, 2333, 1752, 1016, 1543, 1018, 2251,
	1143, 2660, 1128, 1710, 1250, 1251, 1005, 1561, 1751, 1008,
	1560, 1594, 1122, 43, 2179, 1048, 1049, 1258, 1259, 1253,
	2594, 2548, 43, 799, 800, 801, 798, 1818, 584, 1045,
	1046, 1047, 1121, 1514, 1810, 1036, 1647, 674, 1112, 1118,
	663, 677, 676, 662, 2543, 1117, 1111, 1161, 799, 800,
	801, 798, 1124, 381, 1514, 1062, 1752, 2504, 1074, 1099,
	2503, 1075, 1104, 1082, 2500, 715, 720, 721, 1542, 2661,
	1278, 1907, 1458, 797, 760, 1780, 1299, 1505, 797, 1100,
	1140, 1599, 762, 588, 1565, 1496, 759, 2499, 2595, 2482,
	1120, 1119, 2498, 2125, 1441, 1116, 972, 1192, 985, 1137,
	148, 1039, 1320, 1054, 1324, 2497, 1326, 1327, 1187, 1188,
	1243, 2481, 2482, 625, 1752, 2691, 1335, 1231, 1142, 1234,
	1054, 1300, 2401, 1245, 1026, 2505, 2662, 2322, 1664, 392,
	2376, 814, 2482, 591, 1252, 2341, 1254, 2239, 1303, 478,
	487, 1281, 1180, 1284, 1285, 479, 1792, 486, 480, 484,
	483, 481, 482, 1361, 1361, 2482, 1026, 1026, 760, 1026,
	2482, 2188, 148, 2059, 1320, 1320, 1359, 1944, 1054, 1402,
	1414, 2068, 2040, 2482, 1317, 1896, 1350, 1894, 673, 2482,
	584, 1821, 1054, 1325, 1319, 1233, 1892, 1890, 1080, 1080,
	2069, 1820, 1357, 1358, 1290, 1291, 1878, 986, 1780, 488,
	1834, 1328, 1329, 1330, 1440, 2240, 1255, 1812, 1320, 1054,
	1680, 1450, 148, 148, 1454, 1816, 1808, 1456, 728, 1556,
	1544, 1462, 1495, 1804, 1800, 148, 1295, 1465, 1298, 485,
	1273, 1244, 1479, 717, 718, 719, 1367, 1244, 1244, 2069,
	1752, 1316, 1491, 1897, 1780, 1895, 1398, 1399, 1363, 1598,
	937, 1101, 935, 617, 1891, 1891, 843, 1425, 748, 1338,
	1339, 1663, 1595, 2192, 797, 728, 1335, 1349, 797, 1307,
	1054, 1503, 1151, 1152, 1153, 1154, 1155, 1301, 1430, 1354,
	1343, 1323, 1569, 1664, 1801, 984, 1452, 1452, 1449, 1568,
	1447, 1805, 1801, 1559, 1352, 1353, 1351, 1453, 1340, 1452,
	2088, 1513, 1105, 985, 1497, 2675, 1332, 988, 1331, 1468,
	2672, 1763, 678, 1237, 1236, 1355, 1196, 1197, 799, 800,
	801, 798, 1232, 1348, 1342, 1526, 1238, 1364, 977, 1664,
	1594, 1365, 978, 1366, 1041, 1707, 1043, 1841, 1318, 1530,
	1531, 2252, 2244, 2241, 2099, 1362, 1323, 1044, 1477, 2013,
	797, 1811, 1770, 737, 1477, 1371, 1195, 797, 1401, 1403,
	1195, 797, 1539, 1597, 2607, 1186, 801, 798, 1426, 1514,
	1106, 1435, 1436, 1437, 799, 800, 801, 798, 43, 728,
	1183, 1185, 1182, 670, 1184, 699, 798, 1140, 2364, 1446,
	2363, 699, 2067, 1438, 1439, 1448, 1971, 1970, 1965, 1021,
	1566, 1023, 986, 1027, 1028, 1264, 1466, 1573, 2702, 799,
	800, 801, 798, 1304, 1960, 1040, 2655, 1308, 1843, 2345,
	1311, 1484, 2413, 2320, 2686, 2646, 1489, 1493, 1490, 1494,
	815, 816, 817, 818, 819, 820, 821, 814, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1498, 2004, 1076, 817, 818,
	819, 820, 821, 814, 2002, 448, 735, 1641, 1552, 2641,
	2654, 2414, 2321, 1601, 1602, 1528, 1529, 2598, 1248, 148,
	148, 148, 1661, 2000, 2432, 1990, 699, 2319, 1609, 1249,
	1525, 443, 1668, 1026, 445, 2003, 1534, 2168, 1671, 444,
	2016, 2144, 1673, 2001, 2143, 2084, 2061, 1988, 1527, 1865,
	1180, 2118, 2535, 1987, 1026, 1986, 2518, 1538, 1983, 1977,
	735, 1551, 1999, 1705, 1989, 1974, 1973, 1304, 799, 800,
	801, 798, 2154, 1304, 1304, 799, 800, 801, 798, 1670,
	1593, 1592, 1686, 1591, 799, 800, 801, 798, 1674, 1675,
	1587, 1586, 1102, 1655, 1656, 1657, 2117, 954, 2398, 2638,
	1756, 1756, 1414, 1756, 805, 806, 807, 808, 809, 810,
	811, 803, 2609, 1683, 490, 99, 1672, 2571, 2554, 799,
	800, 801, 798, 2479, 1642, 799, 800, 801, 798, 1256,
	1257, 1054, 148, 1260, 1261, 1262, 1263, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 2462, 735, 1590, 2423, 1081,
	2396, 1414, 2529, 2394, 1785, 2380, 1787, 1709, 382, 2378,
	2009, 99, 2347, 2318, 1244, 1320, 2317, 2314, 1609, 1760,
	1758, 2304, 1762, 1603, 1682, 799, 800, 801, 798, 2298,
	1832, 1649, 2247, 1677, 1678, 2404, 1814, 2245, 2235, 1503,
	2715, 1541, 2234, 1782, 2148, 2142, 1054, 2095, 1054, 2062,
	1054, 2052, 1789, 1676, 1991, 735, 1060, 1669, 799, 800,
	801, 798, 1984, 2403, 988, 1980, 1979, 1536, 1784, 1802,
	1540, 1796, 1679, 1978, 1596, 1681, 1589, 1828, 1469, 530,
	529, 1775, 1467, 1313, 1054, 1859, 799, 800, 801, 798,
	1103, 867, 863, 1850, 862, 844, 724, 1866, 799, 800,
	801, 798, 1054, 700, 2490, 2335, 699, 99, 1736, 2334,
	1550, 2332, 2309, 2308, 1554, 2303, 2291, 1868, 2270, 934,
	931, 932, 933, 2269, 2193, 1855, 2123, 1854, 1853, 1851,
	2116, 2108, 1567, 2103, 1776, 1570, 1571, 1572, 2056, 1870,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1824, 1583,
	1783, 1906, 1845, 1708, 1893, 1711, 1712, 1713, 1714, 1858,
	1889, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1825, 1781, 1867, 1839, 1797,
	1771, 1772, 1773, 2373, 1052, 1888, 1574, 1817, 1054, 1564,
	1852, 1924, 1822, 1562, 1898, 1320, 1815, 1558, 1557, 1940,
	1555, 1549, 1052, 1546, 1545, 1946, 799, 800, 801, 798,
	2301, 1247, 1665, 1874, 1246, 1838, 1066, 141, 1879, 1064,
	1908, 1955, 1849, 2671, 1140, 2665, 1835, 1836, 141, 2653,
	1959, 129, 108, 799, 800, 801, 798, 2650, 2648, 2597,
	1967, 1968, 1969, 2121, 2506, 859, 1972, 822, 823, 815,
	816, 817, 818, 819, 820, 821, 814, 1285, 1949, 1280,
	1756, 2448, 1951, 2590, 2120, 2436, 799, 800, 801, 798,
	2005, 2433, 2387, 1938, 138, 1899, 1902, 1934, 2385, 1320,
	735, 1414, 1414, 1414, 1414, 138, 1947, 799, 800, 801,
	798, 2371, 735, 1414, 2370, 1933, 1756, 1957, 2369, 2366,
	2360, 2327, 2023, 2129, 1289, 1282, 1290, 1291, 2073, 1054,
	1304, 1304, 1304, 2119, 2023, 1856, 1857, 975, 2006, 1966,
	148, 148, 1922, 1937, 1936, 31, 1963, 1935, 1294, 2367,
	1939, 1945, 1295, 1080, 1298, 43, 799, 800, 801, 798,
	1297, 1962, 1244, 1962, 2018, 19, 2074, 1286, 2036, 1958,
	1807, 1244, 8, 2083, 99, 99, 700, 1954, 6, 1054,
	1964, 860, 2090, 30, 1769, 7, 1323, 1731, 1948, 1662,
	1181, 138, 1474, 1985, 1455, 1315, 1952, 1953, 1950, 813,
	812, 822, 823, 815, 816, 817, 818, 819, 820, 821,
	814, 1287, 1125, 2070, 2054, 2055, 2014, 1091, 1563, 2024,
	2025, 2026, 2027, 2010, 938, 886, 885, 1303, 2080, 2039,
	2038, 2082, 588, 884, 1842, 883, 882, 2037, 2035, 2053,
	881, 880, 1860, 1861, 1913, 830, 879, 1863, 1864, 878,
	2111, 877, 2113, 2048, 2050, 876, 875, 2060, 2087, 874,
	1869, 873, 872, 871, 870, 2092, 866, 865, 735, 864,
	861, 856, 2077, 855, 2157, 2086, 853, 2081, 2075, 2071,
	852, 851, 850, 849, 2172, 848, 148, 847, 2100, 1304,
	1609, 2079, 1900, 1901, 1311, 846, 735, 735, 735, 842,
	2101, 841, 1414, 1661, 1887, 2191, 764, 1667, 1975, 1976,
	1652, 2195, 2255, 2256, 1981, 1982, 2109, 2110, 1686, 1686,
	1686, 2224, 2226, 752, 2224, 2224, 2588, 799, 800, 801,
	798, 2231, 2011, 2539, 2258, 2128, 1054, 1054, 1925, 2130,
	2131, 2132, 2133, 1779, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2145, 2107, 2194, 2112, 2150, 1471, 2196, 2197,
	2175, 763, 2114, 2115, 2261, 2032, 2030, 148, 2260, 2189,
	2033, 2031, 2157, 2029, 2028, 944, 2701, 825, 2072, 829,
	1320, 1320, 2221, 1809, 2225, 2177, 2186, 2184, 2185, 2190,
	2176, 1904, 2152, 1933, 826, 828, 824, 145, 827, 813,
	812, 822, 823, 815, 816, 817, 818, 819, 820, 821,
	814, 2232, 2233, 2227, 2228, 2034, 1473, 1748, 1749, 2229,
	1859, 2146, 2147, 1397, 1886, 2151, 2390, 2250, 2389, 1274,
	1320, 81, 1472, 613, 1320, 1885, 1052, 1052, 377, 2199,
	1795, 1452, 2262, 1884, 42, 2248, 2249, 799, 800, 801,
	798, 2238, 1829, 2243, 41, 2246, 2242, 148, 799, 800,
	801, 798, 2388, 940, 2259, 1643, 799, 800, 801, 798,
	1601, 1602, 758, 2198, 1085, 378, 2524, 2276, 1956, 2263,
	1909, 1333, 1063, 592, 593, 594, 595, 382, 379, 1314,
	2629, 2289, 1734, 2275, 1400, 1883, 591, 2292, 380, 2290,
	1237, 1236, 1304, 952, 953, 1020, 1304, 950, 951, 1019,
	99, 790, 2286, 2265, 99, 2266, 2267, 2268, 799, 800,
	801, 798, 948, 949, 2293, 99, 1492, 2294, 946, 947,
	979, 2296, 2297, 942, 99, 1320, 2666, 2604, 2102, 1882,
	2602, 2331, 1547, 2579, 2564, 1065, 2563, 1756, 1414, 2338,
	2561, 2285, 2532, 2288, 2507, 2459, 615, 2458, 2407, 601,
	2122, 2395, 799, 800, 801, 798, 612, 611, 1881, 2283,
	1054, 2282, 2273, 1880, 2310, 2272, 945, 591, 2313, 2346,
	2312, 148, 2058, 1877, 1337, 2592, 2591, 605, 2085, 1654,
	2226, 799, 800, 801, 798, 2339, 799, 800, 801, 798,
	2326, 2342, 2340, 1548, 2343, 2325, 799, 800, 801, 798,
	749, 2591, 735, 2592, 2362, 2337, 2336, 2284, 799, 800,
	801, 798, 991, 1876, 50, 2344, 2221, 1442, 610, 1058,
	1, 1312, 609, 596, 2023, 2041, 2042, 2392, 599, 604,
	2264, 2044, 1510, 2381, 1732, 735, 799, 800, 801, 798,
	1875, 1644, 2372, 2171, 970, 2365, 602, 1871, 618, 1239,
	1110, 2230, 2377, 714, 2379, 744, 1107, 2023, 743, 2382,
	2349, 741, 2383, 799, 800, 801, 798, 600, 1193, 1862,
	799, 800, 801, 798, 492, 1482, 2007, 1840, 735, 1054,
	1054, 616, 2393, 2455, 735, 1191, 2628, 2657, 2406, 2596,
	2631, 2399, 799, 800, 801, 798, 2400, 1123, 476, 2402,
	799, 800, 801, 798, 2555, 603, 1686, 2510, 799, 800,
	801, 798, 2600, 2512, 2465, 2408, 1515, 735, 795, 2076,
	735, 735, 735, 636, 1744, 1747, 1748, 1749, 1745, 2429,
	1746, 1750, 2430, 2431, 2428, 2422, 1335, 2426, 2456, 2340,
	524, 499, 854, 592, 593, 594, 595, 1093, 2437, 1086,
	2126, 2445, 2446, 2447, 2421, 2434, 591, 2405, 2444, 716,
	2476, 2473, 498, 2324, 1918, 1739, 2328, 2329, 2330, 608,
	713, 637, 1584, 614, 2454, 2508, 2453, 1705, 1275, 1052,
	2349, 1296, 1279, 2711, 2700, 2687, 2678, 735, 1744, 1747,
	1748, 1749, 1745, 2664, 1746, 1750, 2474, 2584, 2695, 735,
	2613, 2651, 2469, 2300, 1413, 2467, 2483, 2468, 2644, 2580,
	2302, 414, 2487, 2489, 1422, 2488, 582, 682, 2496, 2492,
	2449, 1470, 415, 1666, 2572, 2435, 606, 1651, 607, 1931,
	2501, 1930, 1162, 735, 813, 812, 822, 823, 815, 816,
	817, 818, 819, 820, 821, 814, 804, 1179, 2205, 2305,
	2306, 839, 453, 1537, 465, 1915, 2549, 2552, 2528, 2214,
	2051, 49, 2527, 48, 47, 700, 46, 1461, 2553, 2533,
	152, 700, 2215, 494, 151, 2551, 2544, 2545, 2546, 2547,
	99, 2633, 2565, 474, 2534, 2208, 473, 472, 2560, 2558,
	471, 1743, 2203, 1741, 1740, 1409, 1408, 2218, 2219, 1459,
	1698, 1368, 2536, 2204, 2578, 2493, 2494, 2359, 1992, 2355,
	2589, 2587, 2586, 2351, 2236, 2200, 2201, 2207, 893, 2593,
	889, 891, 2603, 2601, 2605, 2606, 2599, 892, 890, 1848,
	735, 1844, 1684, 1685, 2182, 955, 2475, 1304, 2311, 2209,
	2384, 1607, 1605, 2386, 2257, 2253, 2627, 2173, 2635, 2616,
	2618, 1478, 2611, 1309, 1903, 1410, 830, 2391, 1406, 1737,
	2634, 2642, 2626, 735, 1653, 2639, 73, 72, 79, 2640,
	119, 37, 2427, 585, 32, 27, 5, 29, 2643, 2647,
	28, 2649, 14, 15, 13, 1146, 1114, 2659, 812, 822,
	823, 815, 816, 817, 818, 819, 820, 821, 814, 735,
	12, 735, 18, 26, 25, 24, 91, 90, 23, 89,
	88, 87, 2635, 2677, 2668, 86, 2670, 2673, 22, 11,
	85, 1146, 735, 1146, 2634, 84, 2681, 2217, 2676, 1689,
	83, 2694, 2659, 2688, 21, 78, 76, 2685, 20, 2669,
	77, 74, 2698, 75, 1146, 60, 59, 58, 70, 69,
	2699, 68, 2706, 67, 2211, 66, 2710, 65, 635, 57,
	2709, 56, 55, 54, 2718, 71, 64, 63, 62, 2721,
	2706, 2723, 2722, 2667, 2724, 2710, 2210, 2212, 61, 53,
	52, 51, 106, 141, 105, 39, 129, 108, 813, 812,
	822, 823, 815, 816, 817, 818, 819, 820, 821, 814,
	104, 103, 102, 134, 101, 2484, 33, 34, 35, 36,
	122, 116, 115, 117, 135, 118, 113, 111, 2491, 97,
	909, 2124, 813, 812, 822, 823, 815, 816, 817, 818,
	819, 820, 821, 814, 82, 114, 112, 110, 44, 10,
	138, 17, 2, 0, 0, 0, 0, 0, 2220, 0,
	0, 0, 0, 0, 2523, 0, 0, 0, 0, 0,
	2206, 0, 2608, 0, 0, 1837, 2216, 0, 0, 0,
	813, 812, 822, 823, 815, 816, 817, 818, 819, 820,
	821, 814, 0, 0, 0, 0, 1759, 909, 813, 812,
	822, 823, 815, 816, 817, 818, 819, 820, 821, 814,
	1535, 0, 0, 0, 0, 2523, 0, 0, 0, 0,
	130, 131, 0, 132, 133, 0, 0, 0, 0, 0,
	0, 0, 897, 813, 812, 822, 823, 815, 816, 817,
	818, 819, 820, 821, 814, 1413, 0, 0, 0, 0,
	917, 921, 923, 925, 927, 928, 930, 0, 934, 931,
	932, 933, 0, 0, 912, 913, 914, 915, 895, 896,
	918, 0, 898, 0, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 910, 916, 0, 0, 107, 128,
	139, 0, 80, 920, 922, 924, 926, 929, 0, 897,
	0, 0, 2523, 887, 0, 0, 0, 0, 0, 127,
	121, 120, 0, 0, 0, 0, 45, 917, 921, 923,
	925, 927, 928, 930, 0, 934, 931, 932, 933, 911,
	0, 912, 913, 914, 915, 895, 896, 918, 0, 898,
	0, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 910, 916, 0, 0, 0, 0, 0, 0, 0,
	920, 922, 924, 926, 929, 0, 0, 0, 0, 0,
	2690, 0, 0, 0, 123, 124, 125, 813, 812, 822,
	823, 815, 816, 817, 818, 819, 820, 821, 814, 0,
	0, 0, 0, 0, 0, 0, 911, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 126,
	0, 93, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 38, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 1413, 1413, 1413, 40,
	0, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 96, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 506, 0, 0,
	0, 0, 0, 0, 919, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 0, 0, 0, 226, 0, 0, 251, 0, 0,
	0, 497, 0, 0, 311, 265, 0, 0, 0, 0,
	553, 561, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 0, 99, 491, 530, 529, 478, 487,
	0, 0, 207, 150, 479, 0, 486, 480, 484, 483,
	481, 482, 0, 545, 0, 0, 0, 0, 0, 0,
	451, 464, 2520, 468, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 0, 0, 461, 462, 0, 0,
	0, 0, 507, 0, 463, 0, 0, 502, 488, 489,
	0, 0, 198, 316, 332, 208, 307, 345, 213, 314,
	203, 280, 303, 0, 0, 200, 330, 313, 262, 245,
	246, 199, 0, 298, 224, 237, 220, 278, 485, 505,
	509, 219, 567, 503, 340, 202, 0, 339, 277, 326,
	331, 263, 257, 201, 328, 261, 256, 249, 228, 568,
	241, 289, 255, 290, 242, 267, 266, 268, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 0, 0,
	342, 0, 0, 551, 0, 0, 0, 315, 0, 0,
	250, 0, 0, 99, 504, 99, 301, 283, 564, 452,
	0, 299, 253, 327, 291, 333, 317, 341, 295, 292,
	193, 318, 222, 264, 204, 206, 218, 225, 227, 229,
	230, 273, 274, 286, 306, 320, 321, 322, 221, 214,
	300, 215, 239, 216, 194, 308, 217, 196, 287, 325,
	0, 235, 296, 260, 197, 259, 288, 324, 323, 205,
	349, 355, 356, 360, 0, 361, 0, 0, 0, 369,
	374, 375, 376, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 354, 233, 190, 191, 337,
	549, 279, 0, 0, 563, 544, 546, 547, 550, 554,
	555, 556, 557, 558, 560, 562, 566, 304, 0, 0,
	0, 0, 0, 244, 285, 0, 305, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 312,
	335, 347, 364, 367, 0, 0, 0, 195, 366, 0,
	2521, 0, 0, 0, 2522, 0, 565, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 508, 269, 270, 271,
	272, 552, 0, 212, 365, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 232, 238, 373, 240, 211, 284, 234,
	344, 247, 0, 370, 0, 0, 0, 0, 276, 243,
	309, 248, 254, 297, 343, 282, 302, 209, 334, 310,
	258, 0, 0, 574, 548, 573, 575, 576, 572, 577,
	578, 559, 470, 0, 512, 570, 569, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 252, 0, 293, 231, 537, 517, 518,
	519, 469, 520, 515, 516, 538, 510, 534, 535, 493,
	513, 521, 533, 522, 536, 539, 540, 579, 580, 528,
	581, 525, 541, 532, 531, 523, 511, 542, 543, 496,
	495, 526, 527, 514, 319, 506, 0, 350, 351, 352,
	372, 336, 0, 223, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 0,
	0, 0, 226, 0, 0, 251, 0, 0, 0, 497,
	0, 0, 311, 265, 0, 0, 0, 0, 553, 561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 0, 0, 491, 530, 529, 478, 487, 0, 0,
	207, 150, 479, 0, 486, 480, 484, 483, 481, 482,
	0, 545, 0, 0, 0, 0, 0, 0, 451, 464,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 461, 462, 0, 0, 0, 0,
	507, 0, 463, 0, 0, 502, 488, 489, 0, 0,
	198, 316, 332, 208, 307, 345, 213, 314, 203, 280,
	303, 0, 0, 200, 330, 313, 262, 245, 246, 199,
	0, 298, 224, 237, 220, 278, 485, 505, 509, 219,
	567, 503, 340, 202, 0, 339, 277, 326, 331, 263,
	257, 201, 328, 261, 256, 249, 228, 568, 241, 289,
	255, 290, 242, 267, 266, 268, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 500, 0, 0, 342, 0,
	0, 551, 0, 0, 0, 315, 0, 0, 250, 0,
	0, 0, 504, 0, 301, 283, 564, 452, 0, 299,
	253, 327, 291, 333, 317, 341, 295, 292, 193, 318,
	222, 264, 204, 206, 218, 225, 227, 229, 230, 273,
	274, 286, 306, 320, 321, 322, 221, 214, 300, 215,
	239, 216, 194, 308, 217, 196, 287, 325, 0, 235,
	296, 260, 197, 259, 288, 324, 323, 205, 349, 355,
	356, 360, 0, 361, 0, 0, 0, 369, 374, 375,
	376, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	1241, 1240, 1242, 354, 233, 190, 191, 337, 549, 279,
	0, 0, 563, 544, 546, 547, 550, 554, 555, 556,
	557, 558, 560, 562, 566, 304, 0, 0, 0, 0,
	0, 244, 285, 0, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 335, 347,
	364, 367, 0, 0, 0, 195, 366, 0, 0, 0,
	0, 0, 0, 0, 565, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 508, 269, 270, 271, 272, 552,
	0, 212, 365, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 232, 238, 373, 240, 211, 284, 234, 344, 247,
	0, 370, 0, 0, 0, 0, 276, 243, 309, 248,
	254, 297, 343, 282, 302, 209, 334, 310, 258, 0,
	0, 574, 548, 573, 575, 576, 572, 577, 578, 559,
	470, 0, 512, 570, 569, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 252, 0, 293, 231, 537, 517, 518, 519, 469,
	520, 515, 516, 538, 510, 534, 535, 493, 513, 521,
	533, 522, 536, 539, 540, 579, 580, 528, 581, 525,
	541, 532, 531, 523, 511, 542, 543, 496, 495, 526,
	527, 514, 319, 506, 0, 350, 351, 352, 372, 336,
	0, 223, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 0, 0, 0,
	226, 0, 0, 251, 0, 0, 0, 497, 0, 0,
	311, 265, 0, 0, 0, 0, 553, 561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 0,
	0, 491, 530, 529, 478, 487, 0, 0, 207, 150,
	479, 0, 486, 480, 484, 483, 481, 482, 0, 545,
	0, 0, 0, 0, 0, 0, 451, 464, 0, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 461, 462, 0, 0, 0, 0, 507, 0,
	463, 0, 0, 502, 488, 489, 0, 0, 198, 316,
	332, 208, 307, 345, 213, 314, 203, 280, 303, 0,
	0, 200, 330, 313, 262, 245, 246, 199, 0, 298,
	224, 237, 220, 278, 485, 505, 509, 219, 567, 503,
	340, 202, 0, 339, 277, 326, 331, 263, 257, 201,
	328, 261, 256, 249, 228, 568, 241, 289, 255, 290,
	242, 267, 266, 268, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 500, 0, 0, 342, 0, 0, 551,
	0, 0, 0, 315, 0, 0, 250, 0, 0, 0,
	504, 0, 301, 283, 564, 452, 0, 299, 253, 327,
	291, 333, 317, 341, 295, 292, 193, 318, 222, 264,
	204, 206, 218, 225, 227, 229, 230, 273, 274, 286,
	306, 320, 321, 322, 221, 214, 300, 215, 239, 216,
	194, 308, 217, 196, 287, 325, 0, 235, 296, 260,
	197, 259, 288, 324, 323, 205, 349, 355, 356, 360,
	0, 361, 0, 0, 0, 369, 374, 375, 376, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 354, 233, 190, 191, 337, 549, 279, 0, 0,
	563, 544, 546, 547, 550, 554, 555, 556, 557, 558,
	560, 562, 566, 304, 0, 0, 0, 0, 0, 244,
	285, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 335, 347, 364, 367,
	0, 0, 0, 195, 366, 0, 2521, 0, 0, 0,
	2522, 0, 565, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 508, 269, 270, 271, 272, 552, 0, 212,
	365, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 232,
	238, 373, 240, 211, 284, 234, 344, 247, 0, 370,
	0, 0, 0, 0, 276, 243, 309, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 258, 0, 0, 574,
	548, 573, 575, 576, 572, 577, 578, 559, 470, 0,
	512, 570, 569, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 252,
	0, 293, 231, 537, 517, 518, 519, 469, 520, 515,
	516, 538, 510, 534, 535, 493, 513, 521, 533, 522,
	536, 539, 540, 579, 580, 528, 581, 525, 541, 532,
	531, 523, 511, 542, 543, 496, 495, 526, 527, 514,
	319, 506, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 0, 0, 0, 226, 1305,
	0, 251, 0, 0, 0, 497, 0, 0, 311, 265,
	0, 0, 0, 0, 553, 561, 0, 0, 0, 0,
	0, 0, 0, 1432, 0, 0, 460, 0, 0, 491,
	530, 529, 478, 487, 0, 0, 207, 150, 479, 0,
	486, 480, 484, 483, 481, 482, 0, 545, 0, 0,
	0, 0, 0, 0, 451, 464, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 462, 0, 0, 0, 0, 507, 0, 463, 0,
	0, 1433, 488, 489, 0, 0, 198, 316, 332, 208,
	307, 345, 213, 314, 203, 280, 303, 0, 0, 200,
	330, 313, 262, 245, 246, 199, 0, 298, 224, 237,
	220, 278, 485, 505, 509, 219, 567, 503, 340, 202,
	0, 339, 277, 326, 331, 263, 257, 201, 328, 261,
	256, 249, 228, 568, 241, 289, 255, 290, 242, 267,
	266, 268, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 342, 0, 0, 551, 0, 0,
	0, 315, 0, 0, 250, 0, 0, 0, 504, 0,
	301, 283, 564, 452, 0, 299, 253, 327, 291, 333,
	317, 341, 295, 292, 193, 318, 222, 264, 204, 206,
	218, 225, 227, 229, 230, 273, 274, 286, 306, 320,
	321, 322, 221, 214, 300, 215, 239, 216, 194, 308,
	217, 196, 287, 325, 0, 235, 296, 260, 197, 259,
	288, 324, 323, 205, 349, 355, 356, 360, 0, 361,
	0, 0, 0, 369, 374, 375, 376, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 354,
	233, 190, 191, 337, 549, 279, 0, 0, 563, 544,
	546, 547, 550, 554, 555, 556, 557, 558, 560, 562,
	566, 304, 0, 0, 0, 0, 0, 244, 285, 0,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 335, 347, 364, 367, 0, 0,
	0, 195, 366, 0, 0, 0, 0, 0, 0, 0,
	565, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	508, 269, 270, 271, 272, 552, 0, 212, 365, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 232, 238, 373,
	240, 211, 284, 234, 344, 247, 0, 370, 0, 0,
	0, 0, 276, 243, 309, 248, 254, 297, 343, 282,
	302, 209, 334, 310, 258, 0, 0, 574, 548, 573,
	575, 576, 572, 577, 578, 559, 470, 0, 512, 570,
	569, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 252, 0, 293,
	231, 537, 517, 518, 519, 469, 520, 515, 516, 538,
	510, 534, 535, 493, 513, 521, 533, 522, 536, 539,
	540, 579, 580, 528, 581, 525, 541, 532, 531, 523,
	511, 542, 543, 496, 495, 526, 527, 514, 141, 319,
	506, 350, 351, 352, 372, 336, 0, 223, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 833, 0, 0, 311, 265, 0,
	0, 0, 0, 553, 561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 0, 0, 491, 530,
	529, 478, 487, 0, 0, 207, 150, 479, 0, 486,
	480, 484, 483, 481, 482, 0, 545, 0, 0, 0,
	0, 0, 0, 451, 464, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	462, 0, 0, 0, 0, 507, 0, 463, 0, 0,
	502, 488, 489, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 485, 505, 509, 219, 567, 503, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 568, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 342, 0, 0, 551, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 504, 0, 301,
	283, 564, 452, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 549, 279, 0, 0, 563, 544, 546,
	547, 550, 554, 555, 556, 557, 558, 560, 562, 566,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 565,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 508,
	269, 270, 271, 272, 552, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 574, 548, 573, 575,
	576, 572, 577, 578, 559, 470, 0, 512, 570, 569,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 109, 293, 231,
	537, 517, 518, 519, 469, 520, 515, 516, 538, 510,
	534, 535, 493, 513, 521, 533, 522, 536, 539, 540,
	579, 580, 528, 581, 525, 541, 532, 531, 523, 511,
	542, 543, 496, 495, 526, 527, 514, 319, 506, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 226, 2689, 0, 251, 0,
	0, 0, 497, 0, 0, 311, 265, 0, 0, 0,
	0, 553, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 0, 0, 491, 530, 529, 478,
	487, 0, 0, 207, 150, 479, 0, 486, 480, 484,
	483, 481, 482, 0, 545, 0, 0, 0, 0, 0,
	0, 451, 464, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 461, 462, 0,
	0, 0, 0, 507, 0, 463, 0, 0, 502, 488,
	489, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 485,
	505, 509, 219, 567, 503, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	568, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 342, 0, 0, 551, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 504, 0, 301, 283, 564,
	452, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 549, 279, 0, 0, 563, 544, 546, 547, 550,
	554, 555, 556, 557, 558, 560, 562, 566, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 565, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 508, 269, 270,
	271, 272, 552, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 574, 548, 573, 575, 576, 572,
	577, 578, 559, 470, 0, 512, 570, 569, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 537, 517,
	518, 519, 469, 520, 515, 516, 538, 510, 534, 535,
	493, 513, 521, 533, 522, 536, 539, 540, 579, 580,
	528, 581, 525, 541, 532, 531, 523, 511, 542, 543,
	496, 495, 526, 527, 514, 319, 506, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 226, 1305, 0, 251, 0, 0, 0,
	497, 0, 0, 311, 265, 0, 0, 0, 0, 553,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 0, 0, 491, 530, 529, 478, 487, 0,
	0, 207, 150, 479, 0, 486, 480, 484, 483, 481,
	482, 0, 545, 0, 0, 0, 0, 0, 0, 451,
	464, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 462, 0, 0, 0,
	0, 507, 0, 463, 0, 0, 502, 488, 489, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 485, 505, 509,
	219, 567, 503, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 568, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 342,
	0, 0, 551, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 504, 0, 301, 283, 564, 452, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 549,
	279, 0, 0, 563, 544, 546, 547, 550, 554, 555,
	556, 557, 558, 560, 562, 566, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 565, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 508, 269, 270, 271, 272,
	552, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 574, 548, 573, 575, 576, 572, 577, 578,
	559, 470, 0, 512, 570, 569, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 537, 517, 518, 519,
	469, 520, 515, 516, 538, 510, 534, 535, 493, 513,
	521, 533, 522, 536, 539, 540, 579, 580, 528, 581,
	525, 541, 532, 531, 523, 511, 542, 543, 496, 495,
	526, 527, 514, 319, 506, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 497, 0,
	0, 311, 265, 0, 0, 0, 0, 553, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	0, 0, 491, 530, 529, 478, 487, 0, 0, 207,
	150, 479, 0, 486, 480, 484, 483, 481, 482, 0,
	545, 0, 0, 0, 0, 0, 0, 451, 464, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 1079, 0, 0, 0, 507,
	0, 463, 0, 0, 502, 488, 489, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 485, 505, 509, 219, 567,
	503, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 568, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 342, 0, 0,
	551, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 504, 0, 301, 283, 564, 452, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 549, 279, 0,
	0, 563, 544, 546, 547, 550, 554, 555, 556, 557,
	558, 560, 562, 566, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 565, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 508, 269, 270, 271, 272, 552, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	574, 548, 573, 575, 576, 572, 577, 578, 559, 470,
	0, 512, 570, 569, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 537, 517, 518, 519, 469, 520,
	515, 516, 538, 510, 534, 535, 493, 513, 521, 533,
	522, 536, 539, 540, 579, 580, 528, 581, 525, 541,
	532, 531, 523, 511, 542, 543, 496, 495, 526, 527,
	514, 0, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 319, 506, 0, 0, 1553, 0, 0, 0, 0,
	0, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 497, 0, 0, 311,
	265, 0, 0, 0, 0, 553, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 0, 0,
	491, 530, 529, 478, 487, 0, 0, 207, 150, 479,
	0, 486, 480, 484, 483, 481, 482, 0, 545, 0,
	0, 0, 0, 0, 0, 451, 464, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 462, 0, 0, 0, 0, 507, 0, 463,
	0, 0, 502, 488, 489, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 485, 505, 509, 219, 567, 503, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 568, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 342, 0, 0, 551, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 504,
	0, 301, 283, 564, 452, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 549, 279, 0, 0, 563,
	544, 546, 547, 550, 554, 555, 556, 557, 558, 560,
	562, 566, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 565, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 508, 269, 270, 271, 272, 552, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 574, 548,
	573, 575, 576, 572, 577, 578, 559, 470, 0, 512,
	570, 569, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 537, 517, 518, 519, 469, 520, 515, 516,
	538, 510, 534, 535, 493, 513, 521, 533, 522, 536,
	539, 540, 579, 580, 528, 581, 525, 541, 532, 531,
	523, 511, 542, 543, 496, 495, 526, 527, 514, 319,
	506, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 497, 0, 0, 311, 265, 0,
	0, 0, 0, 553, 561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 0, 0, 491, 530,
	529, 478, 487, 0, 0, 207, 150, 479, 0, 486,
	480, 484, 483, 481, 482, 0, 545, 0, 0, 0,
	0, 0, 0, 451, 464, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	462, 0, 0, 0, 0, 507, 0, 463, 0, 0,
	502, 488, 489, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 485, 505, 509, 219, 567, 503, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 568, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 342, 0, 0, 551, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 504, 0, 301,
	283, 564, 452, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 549, 279, 0, 0, 563, 544, 546,
	547, 550, 554, 555, 556, 557, 558, 560, 562, 566,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 565,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 508,
	269, 270, 271, 272, 552, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 574, 548, 573, 575,
	576, 572, 577, 578, 559, 470, 0, 512, 570, 569,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	537, 517, 518, 519, 469, 520, 515, 516, 538, 510,
	534, 535, 493, 513, 521, 533, 522, 536, 539, 540,
	579, 580, 528, 581, 525, 541, 532, 531, 523, 511,
	542, 543, 496, 495, 526, 527, 514, 319, 506, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 467, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 497, 0, 0, 311, 265, 0, 0, 0,
	0, 553, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 0, 0, 491, 530, 529, 478,
	487, 0, 0, 207, 150, 479, 0, 486, 480, 484,
	483, 481, 482, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 464, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 461, 462, 0,
	0, 0, 0, 507, 0, 463, 0, 0, 502, 488,
	489, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 485,
	505, 509, 219, 567, 503, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	568, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 342, 0, 0, 551, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 504, 0, 301, 283, 564,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 1164, 1165, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 549, 279, 0, 0, 563, 544, 546, 547, 550,
	554, 555, 556, 557, 558, 560, 562, 566, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 565, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 508, 269, 270,
	271, 272, 552, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 574, 548, 573, 575, 576, 572,
	577, 578, 559, 470, 0, 512, 570, 569, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 537, 517,
	518, 519, 469, 520, 515, 516, 538, 510, 534, 535,
	493, 513, 521, 533, 522, 536, 539, 540, 579, 580,
	528, 581, 525, 541, 532, 531, 523, 511, 542, 543,
	496, 495, 526, 527, 514, 319, 506, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	497, 0, 0, 311, 265, 0, 0, 0, 0, 553,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 530, 529, 478, 487, 0,
	0, 207, 150, 479, 0, 486, 480, 484, 483, 481,
	482, 0, 545, 0, 0, 0, 0, 0, 0, 451,
	464, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 462, 0, 0, 0,
	0, 507, 0, 463, 0, 0, 502, 488, 489, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 485, 505, 509,
	219, 567, 503, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 568, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 342,
	0, 0, 551, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 504, 0, 301, 283, 564, 452, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 549,
	279, 0, 0, 563, 544, 546, 547, 550, 554, 555,
	556, 557, 558, 560, 562, 566, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 565, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 508, 269, 270, 271, 272,
	552, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 574, 548, 573, 575, 576, 572, 577, 578,
	559, 470, 0, 512, 570, 569, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 537, 517, 518, 519,
	469, 520, 515, 516, 538, 510, 534, 535, 493, 513,
	521, 533, 522, 536, 539, 540, 579, 580, 528, 581,
	525, 541, 532, 531, 523, 511, 542, 543, 496, 495,
	526, 527, 514, 319, 506, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 497, 0,
	0, 311, 265, 0, 0, 0, 0, 553, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	0, 0, 491, 530, 529, 478, 487, 0, 0, 207,
	150, 479, 0, 486, 480, 484, 483, 481, 482, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 464, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 0, 0, 0, 0, 507,
	0, 463, 0, 0, 502, 488, 489, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 485, 505, 509, 219, 567,
	503, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 568, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 342, 0, 0,
	551, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 504, 0, 301, 283, 564, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 549, 279, 0,
	0, 563, 544, 546, 547, 550, 554, 555, 556, 557,
	558, 560, 562, 566, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 565, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 508, 269, 270, 271, 272, 552, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	574, 548, 573, 575, 576, 572, 577, 578, 559, 470,
	0, 512, 570, 569, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 537, 517, 518, 519, 469, 520,
	515, 516, 538, 510, 534, 535, 493, 513, 521, 533,
	522, 536, 539, 540, 579, 580, 528, 581, 525, 541,
	532, 531, 523, 511, 542, 543, 496, 495, 526, 527,
	514, 0, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 141, 319, 39, 129, 108, 0, 0, 0, 0,
	0, 0, 0, 281, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	311, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 207, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 316,
	332, 208, 307, 345, 213, 314, 203, 280, 303, 0,
	0, 200, 330, 313, 262, 245, 246, 199, 0, 298,
	224, 237, 220, 278, 0, 329, 357, 219, 348, 0,
	340, 202, 0, 339, 277, 326, 331, 263, 257, 201,
	328, 261, 256, 249, 228, 371, 241, 289, 255, 290,
	242, 267, 266, 268, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 250, 0, 0, 0,
	358, 0, 301, 283, 0, 0, 0, 299, 253, 327,
	291, 333, 317, 341, 295, 292, 193, 318, 222, 264,
	204, 206, 218, 225, 227, 229, 230, 273, 274, 286,
	306, 320, 321, 322, 221, 214, 300, 215, 239, 216,
	194, 308, 217, 196, 287, 325, 0, 235, 296, 260,
	197, 259, 288, 324, 323, 205, 349, 355, 356, 360,
	0, 361, 0, 0, 0, 369, 374, 375, 376, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 354, 233, 190, 191, 337, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 353, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 244,
	285, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 335, 347, 364, 367,
	0, 0, 0, 195, 366, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 362, 269, 270, 271, 272, 387, 389, 212,
	365, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 232,
	238, 373, 240, 211, 284, 234, 344, 247, 0, 370,
	0, 0, 0, 0, 276, 243, 309, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 40, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 252,
	109, 293, 231, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 0, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	319, 0, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 909,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 311, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 0, 0, 0, 0, 0, 207, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 897, 0, 0, 0, 0, 198, 316, 332, 208,
	307, 345, 213, 314, 203, 280, 303, 0, 0, 1629,
	1631, 1632, 1633, 1634, 1635, 1636, 0, 1640, 1637, 1638,
	1639, 278, 0, 1624, 1625, 1626, 1627, 895, 1610, 1630,
	0, 1611, 277, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1628, 289, 255, 290, 242, 267,
	266, 268, 920, 922, 924, 926, 929, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 250, 0, 0, 0, 1623, 0,
	301, 283, 0, 0, 0, 299, 253, 327, 291, 333,
	317, 341, 295, 292, 193, 318, 222, 264, 204, 206,
	218, 225, 227, 229, 230, 273, 274, 286, 306, 320,
	321, 322, 221, 214, 300, 215, 239, 216, 194, 308,
	217, 196, 287, 325, 0, 235, 296, 260, 197, 259,
	288, 324, 323, 205, 349, 355, 356, 360, 0, 361,
	0, 0, 0, 369, 374, 375, 376, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 354,
	233, 190, 191, 337, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 353, 0, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 244, 285, 0,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 335, 347, 364, 367, 0, 0,
	0, 195, 366, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	362, 269, 270, 271, 272, 236, 0, 212, 365, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 232, 238, 373,
	240, 211, 284, 234, 344, 247, 0, 370, 0, 0,
	0, 0, 276, 243, 309, 248, 254, 297, 343, 282,
	302, 209, 334, 310, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 919, 252, 0, 293,
	231, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 0, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 319, 0,
	0, 350, 351, 352, 372, 336, 0, 223, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 311, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 207, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 1693, 1696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 316, 332, 208, 307, 345,
	213, 314, 203, 280, 303, 0, 0, 200, 330, 313,
	262, 245, 246, 199, 0, 298, 224, 237, 220, 278,
	0, 329, 357, 219, 348, 0, 340, 202, 0, 339,
	277, 326, 331, 263, 257, 201, 328, 261, 256, 249,
	228, 371, 241, 289, 255, 290, 242, 267, 266, 268,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 342, 0, 0, 0, 1690, 0, 1689, 315,
	1691, 1694, 250, 0, 0, 0, 358, 0, 301, 283,
	0, 0, 0, 299, 253, 327, 291, 333, 317, 341,
	295, 292, 193, 318, 222, 264, 204, 206, 218, 225,
	227, 229, 230, 273, 274, 286, 306, 320, 321, 322,
	221, 214, 300, 215, 239, 216, 194, 308, 217, 196,
	287, 325, 1695, 235, 296, 260, 197, 259, 288, 324,
	323, 205, 349, 355, 356, 360, 0, 361, 0, 0,
	0, 369, 374, 375, 376, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 354, 233, 190,
	191, 337, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 353, 0, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 244, 285, 0, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 335, 347, 364, 367, 0, 0, 0, 195,
	366, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 362, 269,
	270, 271, 272, 236, 0, 212, 365, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 232, 238, 373, 240, 211,
	284, 234, 344, 247, 0, 370, 0, 0, 0, 0,
	276, 243, 309, 248, 254, 297, 343, 282, 302, 209,
	334, 310, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 252, 0, 293, 231, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 0, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 319, 0, 0, 350,
	351, 352, 372, 336, 0, 223, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1463,
	0, 0, 0, 0, 226, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 311, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 1464, 0,
	0, 0, 207, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 799, 800, 801, 798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 316, 332, 208, 307, 345, 213, 314,
	203, 280, 303, 0, 0, 200, 330, 313, 262, 245,
	246, 199, 0, 298, 224, 237, 220, 278, 0, 329,
	357, 219, 348, 0, 340, 202, 0, 339, 277, 326,
	331, 263, 257, 201, 328, 261, 256, 249, 228, 371,
	241, 289, 255, 290, 242, 267, 266, 268, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	250, 0, 0, 0, 358, 0, 301, 283, 0, 0,
	0, 299, 253, 327, 291, 333, 317, 341, 295, 292,
	193, 318, 222, 264, 204, 206, 218, 225, 227, 229,
	230, 273, 274, 286, 306, 320, 321, 322, 221, 214,
	300, 215, 239, 216, 194, 308, 217, 196, 287, 325,
	0, 235, 296, 260, 197, 259, 288, 324, 323, 205,
	349, 355, 356, 360, 0, 361, 0, 0, 0, 369,
	374, 375, 376, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 354, 233, 190, 191, 337,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 353, 0, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 244, 285, 0, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	335, 347, 364, 367, 0, 0, 0, 195, 366, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 362, 269, 270, 271,
	272, 236, 0, 212, 365, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 232, 238, 373, 240, 211, 284, 234,
	344, 247, 0, 370, 0, 0, 0, 0, 276, 243,
	309, 248, 254, 297, 343, 282, 302, 209, 334, 310,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 252, 0, 293, 231, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 0,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 319, 0, 0, 350, 351, 352,
	372, 336, 0, 223, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 681, 0, 251, 0, 0, 0, 0,
	0, 0, 311, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 689, 690, 0, 0, 0, 0,
	207, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 316, 332, 208, 307, 345, 213, 314, 203, 280,
	303, 0, 0, 200, 330, 313, 262, 245, 246, 199,
	0, 298, 224, 237, 220, 278, 0, 329, 357, 219,
	348, 663, 340, 202, 662, 339, 277, 326, 331, 263,
	257, 201, 328, 261, 256, 249, 228, 371, 241, 289,
	255, 290, 242, 267, 266, 268, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 250, 0,
	0, 0, 358, 0, 301, 283, 0, 0, 0, 299,
	253, 327, 291, 333, 317, 341, 679, 292, 193, 318,
	222, 264, 204, 206, 218, 225, 227, 229, 230, 273,
	274, 286, 306, 320, 321, 322, 221, 214, 300, 215,
	239, 216, 194, 308, 217, 196, 287, 325, 0, 235,
	296, 260, 197, 259, 288, 324, 323, 205, 349, 355,
	356, 360, 0, 361, 0, 0, 0, 369, 374, 375,
	376, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 354, 233, 190, 191, 337, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	353, 0, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 244, 285, 0, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 335, 347,
	364, 367, 0, 0, 0, 195, 366, 0, 0, 0,
	0, 0, 0, 680, 338, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 683, 269, 270, 271, 272, 236,
	0, 212, 365, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 232, 238, 373, 240, 211, 284, 234, 344, 247,
	0, 370, 0, 0, 0, 0, 691, 686, 687, 248,
	254, 297, 343, 282, 302, 209, 334, 310, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 252, 0, 293, 231, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 0, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 141, 319, 0, 350, 351, 352, 372, 336,
	0, 223, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 97, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	1485, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 109, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 141, 319, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 251, 0, 0, 0, 97, 0, 0,
	311, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 1476,
	0, 149, 0, 0, 0, 0, 0, 0, 207, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 316,
	332, 208, 307, 345, 213, 314, 203, 280, 303, 0,
	0, 200, 330, 313, 262, 245, 246, 199, 0, 298,
	224, 237, 220, 278, 0, 329, 357, 219, 348, 0,
	340, 202, 0, 339, 277, 326, 331, 263, 257, 201,
	328, 261, 256, 249, 228, 371, 241, 289, 255, 290,
	242, 267, 266, 268, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 250, 0, 0, 0,
	358, 0, 301, 283, 0, 0, 0, 299, 253, 327,
	291, 333, 317, 341, 295, 292, 193, 318, 222, 264,
	204, 206, 218, 225, 227, 229, 230, 273, 274, 286,
	306, 320, 321, 322, 221, 214, 300, 215, 239, 216,
	194, 308, 217, 196, 287, 325, 0, 235, 296, 260,
	197, 259, 288, 324, 323, 205, 349, 355, 356, 360,
	0, 361, 0, 0, 0, 369, 374, 375, 376, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 354, 233, 190, 191, 337, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 353, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 244,
	285, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 335, 347, 364, 367,
	0, 0, 0, 195, 366, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 362, 269, 270, 271, 272, 236, 0, 212,
	365, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 232,
	238, 373, 240, 211, 284, 234, 344, 247, 0, 370,
	0, 0, 0, 0, 276, 243, 309, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 252,
	109, 293, 231, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 0, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	141, 319, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 97, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 109,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 689,
	690, 0, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 663, 340, 202, 662,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 691, 686, 687, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 2020, 0, 0, 2019, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 1057, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 1055, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 1051, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 1055, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2630, 0,
	149, 530, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 1055, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2350, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 1055,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 1757, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 1774, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 1055, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2684, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 530,
	0, 0, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2612, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 2550, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2420,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 2457,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 2156, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 1055, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 1757,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 1786, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 0,
	0, 0, 350, 351, 352, 372, 336, 319, 223, 0,
	0, 1658, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 1055, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 1341, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 405, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	406, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 446, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1395, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 909,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 1397,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1377, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 897, 661, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 917,
	921, 923, 925, 927, 928, 930, 0, 934, 931, 932,
	933, 0, 0, 912, 913, 914, 915, 895, 896, 918,
	0, 898, 0, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 910, 916, 799, 800, 801, 798, 0,
	0, 0, 920, 922, 924, 926, 929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 663, 0, 0, 662, 1370, 0, 0, 1369,
	0, 0, 0, 1381, 0, 0, 0, 0, 911, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1395, 648,
	0, 0, 0, 0, 1374, 0, 0, 628, 1376, 1378,
	1380, 1220, 1382, 1383, 1384, 1386, 1387, 1388, 1390, 1391,
	1392, 1393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1397, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1396, 0, 2705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 646, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 0, 1395,
	0, 1373, 0, 0, 0, 0, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 629, 656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1389, 0, 0, 1397, 0, 0, 0, 1379, 0, 0,
	0, 651, 0, 0, 0, 0, 0, 0, 0, 1216,
	0, 0, 0, 1213, 1395, 0, 0, 1215, 1212, 1214,
	1218, 1219, 0, 0, 0, 1217, 0, 0, 0, 0,
	1377, 0, 0, 652, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1397, 0,
	642, 0, 644, 660, 0, 0, 1381, 641, 639, 638,
	0, 643, 630, 631, 632, 633, 634, 1385, 658, 659,
	0, 0, 0, 0, 0, 0, 919, 0, 0, 0,
	654, 655, 0, 0, 0, 1377, 0, 1374, 0, 1704,
	0, 1376, 1378, 1380, 0, 1382, 1383, 1384, 1386, 1387,
	1388, 1390, 1391, 1392, 1393, 0, 425, 0, 424, 431,
	421, 0, 0, 0, 0, 0, 0, 649, 0, 0,
	428, 429, 0, 430, 434, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 439, 0, 0,
	1396, 0, 0, 0, 0, 0, 0, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1223, 1224,
	1225, 1226, 1227, 1228, 1221, 1222, 443, 1381, 425, 445,
	424, 431, 421, 0, 444, 0, 0, 1394, 1385, 0,
	0, 0, 428, 429, 0, 430, 434, 0, 0, 416,
	0, 0, 0, 0, 1373, 0, 0, 0, 1374, 439,
	0, 0, 1376, 1378, 1380, 0, 1382, 1383, 1384, 1386,
	1387, 1388, 1390, 1391, 1392, 1393, 0, 0, 0, 0,
	0, 0, 1381, 1389, 0, 0, 0, 0, 443, 0,
	1379, 445, 0, 1385, 0, 0, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1396, 0, 1374, 0, 0, 0, 1376, 1378, 1380,
	0, 1382, 1383, 1384, 1386, 1387, 1388, 1390, 1391, 1392,
	1393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 417, 419, 418, 0, 1373, 1396, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 0, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 1389, 425, 420, 424, 431, 421,
	411, 1379, 0, 1394, 0, 0, 0, 0, 0, 428,
	429, 0, 430, 434, 0, 0, 416, 0, 0, 0,
	1373, 0, 0, 417, 419, 418, 439, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 0, 0, 0, 1389,
	0, 442, 0, 0, 0, 0, 1379, 0, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 422, 426, 432, 0, 433, 435, 0, 0,
	436, 437, 438, 0, 0, 440, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 422, 426, 432, 0, 433, 435,
	0, 0, 436, 437, 438, 0, 0, 440, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 419, 418, 0, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 0, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 422, 426, 432, 0, 433, 435, 0, 0, 436,
	437, 438, 0, 0, 440, 441,
}

var yyPact = [...]int{
	2723, -1000, -309, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -217, 29206,
	29206, -1000, -1000, 1678, -1000, 28698, 9891, 29714, 190, 186,
	29714, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	436, -1000, 28190, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 399, 31106, 30222, 7848, 29714, -287, -1000, 2387,
	-153, -1000, -1000, -1000, -1000, -1000, -1000, 1984, 459, 27682,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 30654, 111, 459,
	562, 566, 755, 755, 11923, -65, -66, 2387, 264, 137,
	-1000, 894, 2723, 29714, 1483, 381, 29714, -1000, 990, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 381, -1000, -1000,
	-1000, 2387, 2387, -1000, 29714, 29714, -6, 1109, -1000, 254,
	239, 227, 983, -1000, -1000, -1000, -1000, -1000, 2235, -1000,
	29714, 29714, 1898, 29714, -1000, 1271, 340, 31168, 2077, 882,
	507, 1937, -1000, -1000, 1879, -1000, 116, 141, 131, 277,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 104, -1000, 2125,
	-1000, -1000, 109, -1000, -1000, 112, -1000, -1000, -1000, -67,
	-1000, -1000, -1000, -1000, -1000, -1000, -148, -1000, -1000, 595,
	1143, 7848, -1000, 1310, -1000, 1922, -1000, -1000, -1000, -1000,
	5298, 9372, 9372, 9372, 9372, -1000, -1000, 1764, 7848, 1874,
	1872, -1000, -1000, -1000, -1000, 981, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1482, 8864,
	-1000, 1868, 1860, 1858, 1856, 1855, 1854, 1853, 1849, 1846,
	1844, 1638, 1754, 1843, 1481, 1479, 1842, 1840, 1839, 1478,
	1638, 1638, 1837, 1836, 1835, 1834, 1832, 1829, 1828, 1824,
	1822, 1819, 1814, 1813, 1809, 1808, 1806, 1799, 1798, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2807, -1000, 977, 974, -1000, 1797, 2065, 2152,
	1667, 2196, 2137, 2131, 2116, 2112, 1328, -1000, -1000, 29714,
	29714, 384, 384, 384, 384, 384, 426, 384, 433, 431,
	429, -1000, -1000, -1000, -1000, -1000, -1000, 503, -1000, -1000,
	-1000, -1000, 820, 29714, -1000, 1710, 1076, 2147, 352, 351,
	235, -1000, 1148, 1148, 1148, 1076, 258, 349, 2152, 2152,
	-75, -105, 1076, 1076, -105, 1076, 1076, 1076, 115, -1000,
	-1000, -1000, 1148, 327, 1148, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2119, 2115, 399, 29714, 51, 29714, 399, 399,
	403, -1000, -156, -1000, -1000, 534, -1000, 526, -1000, 1271,
	339, 338, 825, 1171, -1000, 1092, 29714, 29714, 29714, 1092,
	1092, 15482, 14974, -1000, 29714, -1000, 2152, 1667, -1000, 1611,
	2117, 1608, 1667, 399, 399, 399, 399, 399, 399, 399,
	29714, 29714, 399, 6822, 6822, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 271, 2076, 253, 1790, -1000, 29714, 230,
	2152, 2065, 2152, -1000, -1000, 976, 1323, 1477, -1000, -1000,
	254, 1094, -1000, 724, -1000, -1000, -1000, -1000, 29714, 234,
	-1000, -1000, 1468, 1785, -1000, 380, 798, 806, -1000, 130,
	31335, 24118, 1271, 24118, 29714, -1000, -1000, -1000, -1000, -1000,
	-1000, -74, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 88, -1000, 7848, 7848, 7848,
	7848, 7848, -1000, 502, 8356, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9372, 9372, 9372, 9372, 9372, 9372, 9372, 9372,
	9372, 9372, 9372, 9372, 1763, 1128, 9372, 9372, 9372, 9372,
	2117, 2267, 821, 163, -1000, -1000, -1000, -1000, -1000, 1117,
	1143, 7848, 7848, 29714, -1000, 30704, 7848, 7848, 72, 7848,
	2109, 3773, 29714, 7848, -1000, 1606, 1603, -1000, -1000, 1260,
	7848, 7848, -1000, -1000, 7848, 9372, 7848, -1000, -1000, -1000,
	94, 2109, 2109, 7848, 7848, 2109, 2109, 2109, 1142, 2109,
	2109, 2109, 2109, 2109, 2109, 2109, 2109, 29714, 2029, 90,
	-1000, -1000, -1000, 1652, -1000, 1698, 1698, 1698, 1698, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1740, 1784,
	-1000, -1000, 1697, 1697, 1697, 1652, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1721, 1721, 1733, 1721, 29714, 2152, -287, 6314, -1000,
	-292, 2065, 7848, -1000, -1000, 7848, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1470, 2095, -1000, 1768, 966, 29714,
	1103, 29714, 24118, 29714, 1271, 29714, 29714, 384, 384, 384,
	403, -1000, 29714, 820, 2087, 29714, 2208, 9372, 9372, 27174,
	1148, 1076, -1000, 29714, -1000, -1000, -1000, 1148, 29714, 1148,
	2208, 1148, -1000, -1000, -1000, 1076, 1076, -1000, -1000, -1000,
	-1000, 1148, 1148, -1000, -1000, -82, 2208, 2208, -94, -1000,
	-1000, -1000, 29714, 29714, 384, 29714, 29714, -1000, 29714, -1000,
	-1000, 29714, 30619, 29714, 29714, 2104, -1000, 24118, 29714, 22086,
	-1000, -140, 551, 508, 512, -1000, -1000, 374, 357, 13958,
	310, 24118, 4789, -1000, -1000, 1092, 1092, 1092, 4789, 4789,
	933, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 818, -1000,
	86, 2065, -1000, -1000, -1000, -1000, -1000, 29714, 24118, 1271,
	29714, 29714, 29714, 29714, -1000, 1767, 29714, 796, -1000, -1000,
	11415, 952, 796, 1469, 29714, 1465, 1933, 2026, -1000, 1765,
	12941, 29714, -1000, -1000, -288, -1000, 12432, 29714, 2065, -1000,
	2065, 29714, -1000, 2143, -1000, 254, 170, -1000, -1000, -1000,
	-1000, -1000, -1000, 947, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 809, -1000, 29714, -1000, -1000, 130, 24118,
	25134, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 106, -1000,
	-1000, 149, -1000, 422, 28, 1093, -1000, -1000, 61, 143,
	452, 1143, -1000, 1133, 1133, 1152, -1000, 432, -1000, -1000,
	-1000, -1000, 1764, -1000, -1000, -1000, 1588, 2520, -1000, 1185,
	1185, 863, 863, 863, 863, 863, 1169, 1169, -1000, -1000,
	-1000, 5298, 1763, 9372, 9372, 9372, 9372, 365, 365, 2900,
	2756, -1000, 7848, 1121, -1000, 7848, 1467, 792, 945, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1596,
	595, 1595, 2167, 2228, 1593, 7848, -1000, -1000, 1303, 7340,
	-1000, -1000, -1000, 1592, 944, 1590, -1000, -1000, -1000, 1589,
	1085, 802, 1585, 1722, 1581, 808, 7848, 7848, 1081, 1074,
	7848, 7848, 7848, 7848, 1578, 7848, 7848, 7848, 7848, 7848,
	7848, 7848, 7848, -1000, 7848, 68, -1000, -1000, -1000, -1000,
	1322, -1000, 1321, -1000, -1000, -1000, 1463, 1463, -1000, 1314,
	-1000, -1000, -1000, -1000, 1312, -1000, -1000, 1311, -1000, -1000,
	-1000, -1000, 1054, -1000, 1143, -1000, 1461, -1000, 1087, 805,
	-1000, 1287, -1000, -1000, 29714, 10399, 29714, 1710, 2070, 74,
	-1000, 760, -1000, 28, -157, 709, 1885, 2214, 29714, 29714,
	29714, 26666, -1000, 1762, 1053, -1000, -1000, 7848, -1000, -1000,
	1882, 29714, 29714, 2208, -1000, -1000, -1000, 29714, -1000, -1000,
	-1000, 29714, 2208, 2208, 1076, 1148, 1148, -1000, -1000, 1148,
	-1000, 935, -1000, 29714, -1000, -1000, -1000, 1710, -1000, 10907,
	533, 30963, -1000, 1091, 1091, 732, 1091, 1091, 1091, 1091,
	297, 296, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1091, 1091, 1091, 1091, 1091, 1760, -1000, 67, 2102,
	138, 760, 155, 2385, 838, -1000, -1000, -1000, -1000, 17514,
	17514, 13450, 17514, -1000, 1104, -1000, -1000, 537, 525, 523,
	-1000, -1000, 416, -1000, -1000, 709, -1000, -1000, -1000, 1757,
	1108, -1000, -1000, 1754, -1000, 4789, 4789, 4789, -1000, -1000,
	18022, 29714, -1000, -149, -1000, -133, -1000, -1000, 801, 709,
	1919, 799, -1000, 799, -1000, 10399, -1000, 2208, 6822, -1000,
	22086, -1000, -1000, 26150, -1000, 25642, 2208, -296, 968, -109,
	-1000, 2041, -288, 29714, 29714, 1016, 145, -1000, 1015, -1000,
	631, -1000, 1743, -1000, 1008, 1977, 758, -1000, 1107, -1000,
	-1000, 932, -7, -1000, -1000, 29714, 1468, 1007, 25134, 751,
	-1000, 406, 916, 906, -1000, 24118, 108, 24118, -1000, 24118,
	-1000, -1000, 237, -1000, 29714, 2054, -1000, -1000, -1000, 1417,
	-316, -1000, -1000, -1000, -1000, -1000, 992, -1000, 365, 365,
	2900, 2721, -1000, 9372, -1000, 9372, 2259, 1095, -1000, 7848,
	1178, 2740, 1421, 17006, 29714, -1000, -1000, 7848, 7848, -1000,
	2251, -1000, 7848, 7848, 1344, -1000, 29714, -1000, -1000, -1000,
	-1000, 17006, -1000, 9372, -1000, 7848, 797, 2229, -49, -49,
	2222, 2195, 2155, 988, -49, 2145, 2140, 2111, 2067, 2015,
	2007, 1996, 1876, 1143, -1000, -1000, 1577, 1552, 979, -1000,
	978, 1546, 969, 967, 6314, -1000, -109, 7848, 7848, 7848,
	1988, -1000, -1000, 92, 1543, 795, -1000, -1000, -1000, 30609,
	1698, 1698, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1740, -1000, -1000, 1697, 1697, 1697, 1652, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1721, 1721, 1733,
	1721, -1000, 2086, -1000, -53, 1091, 353, 24118, 332, -1000,
	29714, 1914, 201, 2023, 29714, 1720, 1717, 1716, 29714, 711,
	-1000, 892, 2723, -1000, 29714, 1143, -1000, 1271, -1000, 1076,
	-1000, -1000, 2208, 943, -1000, -1000, 2208, 1076, 1076, 1148,
	29714, -1000, 2084, -1000, -1000, -1000, 30609, 547, -1000, 29714,
	1184, 549, 384, 549, 1168, 1712, -1000, -1000, -1000, 29714,
	29714, 29714, 1167, 1166, 31018, -1000, 1297, -1000, 1296, 1091,
	1091, 1290, 1460, 1453, 1452, 1091, 1091, 1289, 1449, 24626,
	1286, 1284, 1278, 1295, 1441, 513, 1293, 1274, 1266, 29714,
	1711, 1397, -53, 1091, 134, 1105, 353, 1273, 14466, 29714,
	22086, 22086, 22086, 22086, -1000, 1961, 1960, -1000, 1953, 1952,
	2002, 29714, 22086, 1710, -1000, 24626, -1000, -1000, -1000, 2117,
	964, 2321, 573, 7848, -1000, -1000, -1000, 524, 24118, 1438,
	310, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29714,
	29714, 1530, 2205, -1000, 780, -1000, -1000, 888, -1000, 2205,
	-1000, 1277, 1436, -36, -18, 1162, 631, 758, 963, -1000,
	145, 29714, 1972, 1701, -1000, 29714, -288, 6314, 249, -288,
	29714, 6314, 29714, 1276, -1000, -1000, -1000, 2213, 24118, 1271,
	1037, 23610, -1000, 95, -1000, 105, 367, 1434, -1000, 428,
	77, -1000, 1100, 1417, -1000, -1000, -1000, 9372, -1000, -1000,
	-1000, -1000, 1143, 7848, 1525, -1000, 510, 510, 1523, -1000,
	1698, 1698, -1000, 1652, 1697, 1652, 510, 510, 1522, -1000,
	1338, 1705, -1000, 1656, 1635, 7848, -1000, 1518, 2703, 817,
	-178, -49, -1000, 1696, -1000, -49, -49, -49, -49, -1000,
	-49, -49, -49, -49, -49, -49, -49, -49, -1000, -1000,
	-1000, 1432, -1000, -1000, -1000, 1275, -1000, 1272, -1000, -36,
	1143, 1143, -1000, -1000, 2017, 1431, 440, 10399, 2025, 246,
	1305, -1000, -1000, 23102, 360, -1000, -1000, -1000, 439, 120,
	1268, 350, -1000, 29714, 154, 29714, -1000, -1000, -1000, -1000,
	-1000, 2023, -1000, 620, 180, 10907, 10907, 10907, 381, 645,
	886, 22086, 29714, -1000, 21578, 1516, -1000, 709, 2208, -1000,
	29714, -1000, 2208, 2208, 1076, -1000, 246, 2458, -1000, -1000,
	29714, 29714, -1000, 29714, 29714, 384, 7848, -1000, -1000, -1000,
	29714, -1000, -1000, -1000, -1000, 17006, 17006, -1000, -1000, -1000,
	-1000, 1429, 1425, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 306, 29714, 929, -1000, 1099,
	1305, 23102, 1098, 1424, 360, -1000, 1419, -1000, 687, 29714,
	29714, 723, -1000, 1097, 1888, 1910, 1888, -1000, -1000, -1000,
	-1000, 1955, -1000, 1951, -1000, -1000, 723, -1000, -1000, -1000,
	-1000, -1000, 573, -1000, 2130, 549, 549, 549, 1515, -1000,
	751, 1510, -1000, -1000, -1000, -1000, -1000, 2197, 2192, 22594,
	2197, -1000, -296, -294, -17, 2191, 2189, 2244, 246, 29714,
	245, -1000, -288, 29714, -1000, -1000, 1508, 735, -288, -1000,
	631, -1000, -1000, -1000, -1000, 1271, -1000, 100, -1000, -1000,
	-1000, -1000, -1000, -1000, 9, -1000, 29714, -1000, 1417, 1416,
	75, -1000, 1143, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7848, -1000,
	-1000, -1000, 1602, -1000, -1000, 7848, 1507, 1408, -1000, 376,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1505, 1504, -294, -1000, -1000, -1000, 30609,
	-1000, 926, -1000, -1000, 1404, 20, -1000, -1000, -1000, 1403,
	1400, 1258, -1000, -1000, 1243, 853, 57, -1000, -1000, -1000,
	-1000, -1000, -1000, 1273, 29714, 1694, -1000, 1091, 1091, 1091,
	29714, 1503, 718, -1000, 1501, 1497, 17514, 22086, 21578, 719,
	-1000, 860, -1000, -1000, -1000, 2208, -1000, -1000, 2208, -1000,
	-1000, 2458, -1000, -1000, 1195, 9372, -1000, -1000, 1399, 16498,
	481, 511, 1693, -1000, 269, 2241, -1000, 1160, 1158, -1000,
	29714, -1000, 1692, 1724, 200, 1691, -1000, 1687, 1684, 29714,
	1575, -1000, -1000, -1000, -1000, -1000, -1000, 330, 922, -1000,
	1397, 1396, -1000, 20, 1392, -1000, -1000, -1000, 687, 687,
	2198, 29714, 6314, -1000, -1000, 7848, 1671, -1000, 7848, -1000,
	-1000, -1000, -1000, -1000, 1665, 2049, -1000, -1000, -1000, -1000,
	-1000, -1000, 7848, 7848, -1000, -1000, -1000, -296, 1390, -1000,
	-1000, 2181, 1387, 1335, 29714, -1000, -1000, -288, -1000, 631,
	914, -1000, 631, 709, -1000, -1000, 145, -1000, -1000, -1000,
	1455, -1000, 1427, -49, -1000, 2198, -1000, 2178, -1000, -1000,
	-296, -228, -1000, -1000, -1000, -1000, 223, -1000, -1000, 147,
	-1000, -1000, 1242, 372, -1000, -1000, 687, 20562, 17006, 16498,
	1385, -1000, 31018, 10907, 88, 31018, 2208, 719, 860, -1000,
	-1000, 1000, -1000, -1000, -1000, -1000, 2900, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1255, 1664, -161, -1000, -1000, 1658, 20562, 325, 325, 20562,
	20562, 20562, 1654, 460, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2152, -1000, -1000, 1143, 29714, 1143, 21070, -1000, 2177,
	2175, 1143, 595, -298, -1000, 1382, -27, -1000, -1000, 648,
	631, -1000, -94, -1000, -1000, -1000, 52, 7848, -298, 29714,
	343, 1360, -1000, -1000, 146, -1000, -1000, 903, -1000, 1652,
	7848, -1000, -1000, -1000, 364, 30963, -1000, -1000, -94, 364,
	2198, -1000, 1496, 7848, 1638, -213, 20562, 897, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 884, 879, 856, 20562, -1000,
	-1000, -1000, 243, -1000, 852, 849, -1000, -1000, -1000, -1000,
	-1000, 1637, -1000, 2174, -300, -37, -23, 1298, -1000, 3265,
	-1000, -1000, -1000, 595, -1000, 2082, -1000, -1000, 8, -1000,
	-1000, -1000, 20562, 2074, 1394, 203, 2172, -1000, 203, 2152,
	-1000, 1294, -1000, 1909, -1000, 65, 836, -1000, -1000, -1000,
	-1000, 813, -1000, -1000, -1000, 20054, 29714, 1335, -1000, 1355,
	402, -38, -23, -1000, 2170, -28, 2166, 2164, -1000, -1000,
	4281, -289, -56, 272, 1354, -1000, 168, -1000, -1000, 2074,
	-1000, 2163, 219, -1000, -1000, 460, -1000, 1902, 1659, 2212,
	-1000, -1000, -1000, -1000, 168, 168, 168, 168, 107, -1000,
	-1000, 812, -1000, -1000, -1000, 1632, 1248, -17, -48, 2160,
	-1000, 1335, 2157, 1335, 1335, 1130, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1091, 1349, 172, -1000, -1000, -1000, 19546,
	220, 248, 244, -1000, 383, -1000, -1000, -1000, 2240, -1000,
	2237, 544, 544, -1000, -1000, 29714, 2100, 15990, -41, -1000,
	-1000, -1000, 1336, -1000, 1335, -1000, -1000, 4281, 1240, -1000,
	29714, -1000, 29714, 212, 1206, 9372, 1631, 9372, 1630, 221,
	1622, -1000, -1000, -1000, 1236, 275, -1000, -1000, -1000, 29714,
	-1000, 793, -1000, -1000, -1000, 851, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 778, 1618, 2156, -1000, 2655, 29714, 2621,
	29714, 1616, 1066, 9372, -1000, -1000, -1000, 571, -1000, 1061,
	-1000, 19038, 29714, -1000, -1000, 363, 229, -1000, 757, -1000,
	715, 18530, 1205, 2367, 29714, 5806, -1000, 840, 714, -1000,
	29714, 208, -1000, -1000, -1000, 705, -1000, -1000, -1000, -1000,
	1143, 29714, -1000, 363, 1970, -1000, 1189, -1000, -1000, -1000,
	30852, 519, -1000, -1000, 30852, 211, -1000, 358, 1433, -1000,
	-1000, 704, -1000, 29714, 540, 7848, -1000, 211, 31018, -1000,
	7848, 682, -1000, 31018, 649, -1000, -1000,
}

var yyPgo = [...]int{
	0, 128, 2792, 205, 155, 149, 201, 2791, 2789, 2094,
	2084, 2788, 2787, 2786, 2785, 2767, 2766, 2765, 2763, 2762,
	2761, 2759, 2758, 2757, 2756, 2754, 2752, 2751, 2750, 2734,
	2732, 200, 2731, 2730, 2729, 2728, 2718, 2717, 2716, 2715,
	2713, 2712, 2711, 2709, 2708, 2707, 2705, 2703, 2701, 2699,
	2698, 2697, 2696, 2695, 2693, 2691, 2690, 142, 2688, 2071,
	2686, 2685, 2684, 2680, 2675, 2670, 2669, 181, 2668, 2665,
	2661, 2660, 2659, 2658, 2657, 2656, 2655, 2654, 2653, 2652,
	2650, 2636, 2634, 2633, 2632, 162, 2630, 2627, 160, 2626,
	2625, 2624, 2623, 199, 187, 49, 2622, 33, 2621, 2620,
	2618, 2617, 2616, 71, 2614, 2609, 122, 154, 210, 1424,
	217, 208, 151, 131, 67, 2608, 2037, 2605, 118, 189,
	124, 24, 2604, 136, 2603, 112, 32, 44, 206, 117,
	38, 116, 87, 2601, 184, 52, 65, 2597, 77, 2595,
	2594, 209, 180, 2592, 88, 2591, 2588, 2586, 2585, 168,
	90, 2584, 53, 2583, 121, 74, 86, 84, 2582, 2581,
	2579, 70, 2578, 2577, 2571, 2570, 139, 2568, 145, 63,
	2567, 2566, 2565, 43, 192, 75, 2564, 55, 2563, 2559,
	2558, 2557, 54, 2556, 2555, 19, 21, 23, 2552, 20,
	2551, 2550, 1, 2549, 183, 45, 72, 107, 2546, 407,
	2545, 2544, 2543, 127, 2541, 567, 2540, 2537, 2536, 2533,
	22, 2531, 169, 37, 2525, 73, 94, 91, 171, 174,
	2524, 2523, 2520, 238, 69, 100, 0, 2517, 113, 2516,
	2514, 2513, 207, 2511, 194, 172, 191, 158, 224, 137,
	2510, 2509, 64, 2505, 119, 66, 102, 13, 2504, 141,
	2503, 334, 157, 2502, 175, 2501, 129, 3, 111, 2500,
	2499, 34, 234, 2497, 2496, 2482, 98, 2481, 2479, 93,
	101, 2478, 2477, 2476, 31, 2475, 29, 28, 2474, 78,
	2473, 215, 2472, 178, 96, 146, 134, 125, 186, 190,
	57, 56, 2471, 1038, 108, 79, 26, 2470, 188, 2467,
	202, 185, 2466, 204, 2464, 198, 322, 176, 2461, 148,
	15, 35, 30, 2459, 9, 2458, 103, 2457, 2455, 11,
	2452, 17, 2451, 2450, 2448, 2447, 6, 2443, 2436, 2434,
	2, 4, 2433, 5, 177, 36, 105, 2432, 140, 153,
	2431, 2428, 68, 2425, 2422, 2421, 594, 2420, 2419, 2414,
	2413, 2412, 2409, 2400, 2399, 2397, 58, 42, 2392, 2391,
	2390, 2373, 59, 104, 2369, 2368, 2366, 2364, 25, 138,
	2363, 10, 2362, 18, 14, 27, 2357, 92, 2354, 12,
	159, 2348, 2347, 16, 2340, 2339, 7, 8, 2337, 2336,
	89, 2333, 62, 39, 126, 109, 2326, 61, 165, 106,
	2325, 2324, 196, 195, 173, 2318, 132, 193, 214, 2311,
	182, 2308, 2306, 2305, 2303, 2300, 2299, 1113, 2298, 2294,
	197, 50, 82, 81, 2293, 2291, 2284, 60, 130, 85,
	80, 167, 2282, 166, 2281, 2280, 76, 2276, 2275, 2273,
	2271, 2270, 152, 2269, 2267, 2264, 203, 164, 2262,
}

//line mysql_sql.y:8743
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 441, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 91, 439, 439, 439, 440, 440,
	89, 89, 89, 78, 90, 389, 389, 388, 388, 387,
	387, 343, 343, 386, 386, 386, 385, 385, 385, 384,
	384, 383, 383, 382, 382, 380, 380, 381, 379, 378,
	378, 378, 376, 376, 376, 372, 372, 374, 373, 373,
	375, 367, 367, 370, 370, 368, 368, 368, 368, 371,
	366, 366, 366, 365, 365, 77, 77, 77, 295, 295,
	76, 76, 309, 309, 309, 309, 309, 307, 307, 307,
	307, 307, 307, 306, 306, 305, 305, 310, 310, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 68,
	68, 68, 68, 71, 71, 71, 72, 304, 304, 304,
	69, 70, 70, 294, 294, 299, 299, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 303,
	303, 303, 301, 301, 300, 300, 302, 302, 62, 62,
	62, 65, 64, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 63, 63, 63, 63, 63, 63, 58, 58,
	58, 58, 58, 57, 57, 59, 59, 291, 291, 290,
	73, 73, 74, 443, 443, 442, 444, 444, 444, 444,
	75, 81, 81, 81, 81, 81, 81, 81, 80, 80,
	83, 83, 82, 84, 67, 67, 67, 67, 67, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 413, 413,
	413, 415, 415, 230, 231, 445, 233, 229, 229, 229,
	409, 409, 410, 411, 412, 412, 412, 79, 7, 7,
	7, 7, 7, 7, 56, 61, 190, 190, 190, 191,
	191, 191, 191, 191, 54, 60, 60, 426, 426, 55,
	433, 433, 346, 346, 244, 244, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 349, 350, 240, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 38, 37,
	37, 37, 280, 280, 36, 446, 446, 219, 219, 45,
	46, 47, 48, 49, 50, 35, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 53, 53, 361, 361, 448,
	448, 448, 51, 52, 345, 345, 345, 43, 42, 41,
	40, 40, 34, 34, 33, 33, 39, 101, 102, 237,
	237, 237, 239, 239, 235, 447, 447, 321, 321, 238,
	238, 32, 32, 32, 32, 236, 236, 218, 234, 234,
	234, 8, 8, 6, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 18, 20, 288, 288, 285, 19,
	14, 13, 16, 12, 15, 17, 5, 5, 5, 5,
	9, 9, 10, 113, 113, 156, 156, 421, 421, 417,
	417, 418, 418, 418, 419, 419, 420, 420, 85, 355,
	355, 355, 355, 355, 355, 4, 135, 135, 137, 137,
	136, 136, 354, 354, 354, 354, 354, 354, 354, 292,
	292, 398, 398, 398, 399, 134, 134, 129, 129, 356,
	356, 258, 400, 400, 364, 364, 363, 363, 362, 362,
	132, 132, 133, 133, 116, 116, 94, 94, 369, 369,
	369, 369, 377, 377, 342, 342, 182, 182, 213, 213,
	214, 214, 106, 106, 107, 107, 107, 107, 107, 107,
	406, 406, 408, 408, 407, 131, 131, 127, 127, 128,
	128, 128, 126, 126, 125, 124, 124, 123, 121, 121,
	121, 122, 122, 122, 109, 109, 109, 108, 108, 108,
	108, 108, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 110, 110, 414, 414, 414, 347,
	347, 347, 352, 352, 196, 196, 197, 197, 195, 195,
	111, 111, 112, 112, 112, 112, 194, 194, 193, 114,
	114, 120, 119, 119, 115, 115, 115, 115, 204, 204,
	203, 203, 203, 203, 88, 92, 92, 93, 140, 140,
	202, 201, 201, 201, 139, 139, 138, 138, 130, 130,
	118, 118, 118, 118, 200, 117, 198, 438, 438, 437,
	437, 436, 434, 434, 434, 435, 435, 435, 435, 391,
	391, 391, 391, 391, 224, 224, 224, 228, 228, 227,
	227, 227, 227, 227, 232, 3, 3, 3, 3, 3,
	24, 24, 24, 24, 24, 24, 30, 148, 149, 29,
	141, 141, 142, 142, 143, 143, 144, 145, 145, 145,
	147, 146, 28, 21, 422, 425, 423, 423, 427, 427,
	427, 428, 428, 428, 429, 429, 22, 98, 103, 103,
	100, 105, 105, 105, 105, 105, 99, 424, 430, 430,
	430, 289, 289, 286, 287, 287, 284, 283, 283, 283,
	432, 432, 431, 431, 431, 225, 225, 23, 279, 279,
	281, 282, 282, 282, 273, 273, 273, 273, 27, 277,
	277, 278, 278, 278, 278, 278, 274, 274, 276, 276,
	272, 272, 272, 272, 272, 26, 104, 104, 271, 271,
	269, 269, 267, 267, 268, 268, 266, 266, 266, 270,
	270, 25, 25, 25, 96, 95, 95, 95, 216, 216,
	215, 215, 97, 348, 348, 311, 311, 312, 312, 312,
	315, 315, 327, 327, 328, 328, 326, 326, 333, 333,
	332, 332, 331, 331, 330, 330, 329, 329, 329, 329,
	324, 324, 323, 323, 313, 313, 313, 313, 313, 314,
	314, 314, 322, 322, 325, 325, 173, 173, 174, 174,
	174, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	396, 396, 397, 176, 176, 176, 180, 180, 180, 180,
	180, 180, 175, 175, 177, 177, 157, 157, 155, 155,
	150, 150, 151, 151, 152, 152, 153, 153, 154, 154,
	154, 154, 154, 154, 297, 297, 394, 394, 395, 395,
	390, 390, 390, 393, 393, 393, 393, 393, 392, 392,
	158, 211, 211, 211, 226, 226, 226, 226, 210, 210,
	210, 172, 172, 171, 171, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	296, 296, 241, 241, 242, 242, 189, 188, 188, 188,
	188, 188, 186, 187, 185, 185, 185, 185, 185, 184,
	184, 183, 183, 183, 275, 275, 181, 181, 179, 179,
	179, 178, 178, 178, 334, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 250, 250,
	255, 255, 405, 405, 404, 159, 159, 159, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 168, 168, 168,
	319, 319, 319, 319, 319, 320, 320, 320, 317, 317,
	318, 318, 259, 260, 260, 353, 353, 316, 316, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 360, 360, 360, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 416, 416, 416, 401, 401, 401, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 208, 208, 208, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 261, 261, 262, 262, 357, 357, 357, 357,
	357, 357, 358, 358, 359, 359, 359, 359, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 248, 205, 205,
	205, 263, 256, 256, 257, 257, 251, 251, 251, 251,
	251, 251, 251, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 252, 252, 254, 254, 265,
	265, 265, 264, 264, 264, 264, 264, 264, 264, 170,
	170, 170, 170, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 161, 161, 161, 161, 165, 165,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 166, 166, 166, 166, 164, 164,
	164, 164, 164, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 86,
	87, 87, 163, 212, 212, 335, 335, 338, 338, 336,
	336, 337, 339, 339, 339, 340, 340, 340, 341, 341,
	341, 344, 344, 217, 217, 217, 223, 223, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 11, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 7, 4, 2, 2, 1, 2,
	2, 2, 3, 2, 7, 7, 8, 0, 4, 7,
	0, 3, 0, 2, 0, 1, 1, 1, 1, 4,
	2, 2, 3, 3, 4, 5, 3, 4, 4, 2,
	2, 2, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 5, 0, 2, 7, 0, 1, 0, 1, 5,
	3, 2, 4, 4, 4, 4, 1, 1, 1, 3,
	2, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	6, 7, 4, 4, 7, 8, 3, 3, 3, 0,
	2, 2, 0, 2, 2, 1, 1, 1, 1, 0,
	1, 4, 4, 5, 4, 1, 3, 1, 1, 3,
	5, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 6, 1, 1, 2, 2,
	11, 8, 9, 1, 3, 2, 4, 0, 2, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 4, 2,
	1, 5, 4, 4, 2, 5, 0, 4, 0, 2,
	1, 3, 3, 1, 5, 6, 5, 5, 3, 0,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 4, 3, 4, 5, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 3, 0, 1,
	1, 0, 2, 2, 3, 3, 3, 1, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 7, 7, 1, 1, 1, 0,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 2,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 4, 1, 3, 4, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 12,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 4,
	1, 1, 7, 7, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 0, 2, 7, 8, 0, 2,
	6, 0, 2, 2, 3, 3, 4, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 11, 9, 11, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 0, 1, 0, 6, 0, 3, 5,
	0, 4, 0, 3, 1, 3, 4, 5, 0, 3,
	1, 3, 2, 3, 1, 2, 0, 4, 6, 5,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 5,
	6, 5, 0, 3, 0, 1, 0, 1, 1, 3,
	2, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 4,
	1, 3, 3, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 1, 7, 7,
	7, 7, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 0, 1,
	3, 1, 3, 5, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 2, 1, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 5, 6, 4, 1,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 6, 6, 1, 1, 1, 1, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 5,
	0, 1, 3, 0, 1, 0, 2, 0, 6, 8,
	6, 5, 5, 6, 6, 6, 6, 5, 6, 6,
	6, 6, 6, 6, 6, 6, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 4, 6, 2, 2, 4, 6,
	4, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -441, -2, -1, -3, -89, -4, -85, -5, -6,
	-8, -66, -80, -82, -84, -83, -31, -7, -79, -57,
	-58, -62, -68, -73, -76, -77, -78, -90, -86, -87,
	-88, -106, -91, -24, -23, -22, -21, -98, 401, 12,
	446, -9, -10, -406, -11, 233, -229, -230, -231, -233,
	-445, -32, -33, -34, -40, -41, -42, -43, -51, -52,
	-53, -35, -36, -37, -38, -45, -46, -47, -48, -49,
	-50, -39, -101, -102, -55, -54, -60, -56, -61, -100,
	209, -59, 61, -63, -64, -65, -69, -70, -71, -72,
	-74, -75, 332, 338, 391, 528, 529, 46, -107, -109,
	530, -25, -26, -27, -28, -29, -30, 205, 14, 479,
	-12, -15, -13, -16, -14, -19, -20, -18, -17, -99,
	228, 227, 37, 291, 292, 293, 336, 226, 206, 13,
	137, 138, 140, 141, 30, 41, 314, -108, 67, 207,
	-110, 10, 532, 439, 531, -116, 38, -155, -226, 70,
	78, -220, -222, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 449,
	312, 313, 476, 245, 269, 362, 272, 279, 137, 156,
	150, 178, 170, 145, 249, 284, 250, 77, 140, 432,
	88, 412, 388, 143, 264, 266, 268, 271, 251, 166,
	161, 263, 247, 528, 159, 252, 39, 253, 183, 254,
	255, 481, 408, 311, 414, 276, 386, 160, 409, 267,
	411, 185, 189, 424, 338, 154, 155, 416, 426, 182,
	225, 42, 478, 237, 427, 187, 181, 177, 435, 280,
	278, 180, 153, 176, 248, 50, 191, 190, 192, 382,
	383, 384, 385, 256, 257, 326, 423, 173, 162, 316,
	146, 22, 430, 232, 413, 339, 258, 273, 281, 186,
	188, 239, 244, 480, 390, 243, 277, 428, 158, 236,
	265, 231, 431, 147, 332, 341, 259, 141, 270, 425,
	434, 49, 354, 152, 144, 222, 138, 241, 246, 11,
	260, 261, 262, 283, 282, 274, 174, 238, 179, 164,
	151, 175, 139, 240, 433, 355, 526, 314, 371, 172,
	169, 242, 215, 429, 415, 142, 375, 356, 167, 285,
	522, 523, 524, 327, 310, 286, 287, 165, 229, 407,
	288, 290, 381, 303, 357, 389, 363, 358, 198, 294,
	418, 184, 525, 410, 295, 296, 297, -116, -59, -10,
	-9, -108, -109, -155, 213, -234, 23, 386, -67, 387,
	209, 67, -226, -5, -4, -85, -57, -106, -232, -226,
	291, 291, -232, 213, -226, 243, 370, -346, 218, -306,
	-279, 244, -305, -281, -308, -282, 31, 205, 207, 206,
	240, 14, 336, 214, 12, 10, 337, 226, 24, 25,
	27, 13, 338, 340, 28, 341, 344, 345, 346, 41,
	349, 350, 233, 70, 78, 73, 251, -149, -226, -257,
	-251, 95, 234, -253, -246, -247, -249, -386, -380, -245,
	67, 121, 122, 129, 96, -248, -334, 35, 98, 486,
	447, -206, -207, -208, -209, -226, -381, -379, 73, 79,
	82, 85, 86, 84, 83, 163, 81, 74, 133, 134,
	-109, 70, -401, 494, -221, 515, 514, 46, -351, -359,
	212, -357, 132, 168, 229, 164, 12, 127, 381, 165,
	491, 511, 449, 495, 518, 488, 489, 483, 484, 485,
	487, 496, 498, 510, -360, 506, 516, 517, 504, 72,
	71, 509, 508, 497, 492, 493, 499, 482, 490, 500,
	501, 507, 512, 513, 320, 88, 321, 322, 439, 315,
	323, 218, 386, 55, 324, 325, 326, 327, 328, 446,
	329, 56, 330, 319, 233, 371, 331, 167, 184, 451,
	450, 452, 443, 440, 438, 441, 442, 444, 445, 502,
	503, 505, -302, -300, -226, -92, -93, 520, -125, -126,
	-199, 19, 6, 7, 8, 9, -439, 388, 480, 294,
	333, 215, 312, 371, 295, 243, -273, -271, -348, 288,
	284, 223, 222, 89, 439, 212, 347, -417, -418, 202,
	203, 204, -408, 472, -407, -226, 322, 26, 213, 333,
	418, 419, 420, 421, 422, -44, -361, -345, 415, 414,
	-238, 413, 406, 417, 408, 313, 297, 296, 205, 473,
	-217, 357, 389, 239, 436, 437, 334, 390, 424, 425,
	409, 88, 171, 168, 215, 213, 312, 439, 371, 295,
	-417, 142, 139, -293, 142, 94, 147, 146, -293, 243,
	370, 40, -299, 381, -298, -300, 424, 425, 435, 71,
	72, 423, -217, 88, 407, 407, -126, -199, -125, -107,
	-109, -88, -406, 312, 371, 243, 214, 213, 215, 439,
	291, 333, 295, -347, -414, 31, -352, 199, 200, 201,
	32, 33, -1, -226, 73, -132, 235, -155, 135, -132,
	-126, -125, -126, -155, -210, -226, 388, 104, -67, -67,
	387, -409, -410, -411, -413, 209, 387, 386, 135, 15,
	-232, -232, 65, -155, -281, 243, -306, -279, 35, 64,
	136, 216, 136, 64, 67, 334, 312, 371, 335, 439,
	213, 347, 215, 243, 348, 312, 371, 213, 215, 439,
	243, 312, 213, 215, 371, 243, 348, 406, 407, 215,
	26, 339, 342, 343, 407, -365, 435, 136, 94, 91,
	92, 93, -251, 111, -264, 104, 105, 106, 107, 108,
	109, 110, 118, 117, 128, 121, 122, 123, 124, 125,
	126, 127, 119, 120, 114, 95, 112, 116, 113, 97,
	-109, -251, -257, 46, -249, -249, -249, -249, -334, -255,
	-251, 67, 67, 135, 73, -251, 67, 67, 67, 67,
	67, 67, 67, 67, -358, 67, 67, -261, -262, 67,
	67, 67, 73, 73, 67, 67, 67, 73, -262, -262,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 136, -161, -165,
	-162, -164, -163, -167, -166, 168, 169, 132, 172, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 30,
	184, 229, 164, 165, 166, 167, 185, 150, 170, 477,
	193, 151, 194, 152, 195, 153, 196, 154, 155, 197,
	156, 159, 160, 161, 158, 135, -126, 136, 67, -94,
	38, -128, 21, -110, -109, 20, 31, 32, 31, 32,
	31, 32, 31, 32, 79, -148, -226, -141, -226, -269,
	218, -269, -269, -269, -269, 214, -269, 213, 213, 213,
	-419, 149, 136, -408, -131, 67, -237, 112, 116, 23,
	241, 241, 278, -446, -447, 15, 114, -235, -447, -235,
	-237, -448, 214, 416, 42, 242, 241, -127, -128, -127,
	410, 407, -321, 411, 412, -238, -237, -237, -238, -237,
	-237, -237, 213, 215, 439, 295, -446, 241, -446, 30,
	30, -346, -155, -346, 473, -218, -226, -346, -346, -420,
	217, 428, 479, 145, 146, 147, -281, 243, 243, 136,
	104, 23, -301, 104, 115, -300, -300, -300, -301, -301,
	-175, 40, -225, 132, -226, 73, -175, 40, -443, -442,
	-155, -127, -110, -109, 68, 68, 68, -346, -346, -346,
	-346, -346, -346, -346, -232, -141, -346, -111, -112, 123,
	-251, -226, -111, 38, 407, 38, -354, -135, -106, 313,
	67, 67, -226, -355, 46, -106, 67, 30, -127, -94,
	-128, 135, 79, 73, -67, 68, 136, -412, 85, 86,
	-415, 182, 174, -226, -81, 73, -3, -4, -5, -6,
	-31, -57, -106, -382, -380, 67, 31, 380, 64, 15,
	-307, 213, 439, 333, 239, 215, 312, -305, -288, -285,
	-283, -225, -281, -284, -283, -310, -210, 407, -95, 392,
	290, -251, -251, -251, -251, -251, 84, 95, 310, 85,
	86, -246, -265, 31, 286, 287, -247, -247, -247, -247,
	-247, -247, -247, -247, -247, -247, -247, -247, -254, -263,
	-334, 67, 114, 112, 116, 113, 97, -249, -249, -247,
	-247, 68, 136, -405, -404, 99, -251, -251, -226, -402,
	-403, 453, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 324, 319, 325, 323, 315, 331, 326, 327,
	167, 470, 471, 464, 465, 466, 467, 468, 469, -256,
	-257, -256, -251, -402, -256, -205, 32, 31, -251, -416,
	308, 307, 309, -129, -226, -256, 68, 68, 68, 79,
	-257, -257, -256, -247, -256, -403, -205, -205, -257, -257,
	-205, -205, -205, -205, 123, -205, -205, -205, -205, -205,
	-205, -205, -205, -300, 40, -341, 355, 354, -335, -337,
	67, -336, 67, -336, -336, -336, 67, 67, -338, 67,
	-338, -338, -335, -339, 67, -339, -340, 67, -339, -226,
	-127, -93, -363, -362, -251, 40, 521, -94, -251, -124,
	-123, -251, -440, 73, 34, 67, 135, -155, 95, -422,
	-226, -289, -286, -283, -226, -279, -226, -226, -269, -269,
	-269, -420, -407, 34, -130, -226, -195, 16, -249, -249,
	-283, 243, -446, -237, -219, -218, -239, -447, -234, -239,
	-195, -447, -237, -237, -239, -235, 407, -195, -195, -321,
	-236, -226, -236, -269, -218, -219, -219, -155, -190, 210,
	207, -174, -192, 352, 245, -270, 249, 77, 250, 388,
	251, 214, 253, 254, 255, 225, 256, 257, 258, 381,
	259, 260, 261, 262, 335, 6, 298, 40, -422, -422,
	30, -289, -226, -119, -114, -118, -115, -120, -198, -200,
	-117, 67, -155, -109, -226, 429, 430, 143, 146, 145,
	31, 380, -304, 380, 31, -279, -298, -294, 73, 381,
	-284, -303, 64, 132, -362, -301, -301, -301, -303, -303,
	131, 136, -444, 428, 429, 202, -94, -422, -288, -279,
	-226, -157, -155, -157, -226, 67, -226, -194, 136, -193,
	15, -227, -226, 34, 73, 135, -194, 73, -157, 73,
	-292, 64, 46, 30, 67, -134, 68, -129, -133, -226,
	-356, -258, -400, 520, -134, 68, -398, -399, -129, -94,
	-94, -226, 23, -67, -410, 135, 136, -130, -307, -287,
	-284, -309, 123, -226, -295, 136, 479, 533, 71, 216,
	-432, -431, 372, 68, 136, -366, 217, 446, 73, 534,
	198, 84, 310, 85, 86, -334, -257, -254, -249, -249,
	-247, -247, -252, 230, -252, 94, -251, -250, -404, 101,
	-251, 34, 136, 65, 135, 68, 68, 15, 15, 68,
	-251, 68, 15, 15, -251, 68, 135, 68, 68, 68,
	68, 65, 68, 136, 68, 136, -257, -251, 68, 68,
	-251, -251, -251, -257, 68, -251, -251, -251, -251, -251,
	-251, -251, -251, -251, -344, 356, 79, 79, -212, 73,
	-212, 79, 79, 79, 136, 68, 73, 136, 22, 136,
	-121, 36, 37, -149, -142, -143, -144, -145, -161, -210,
	169, 172, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 229, 164, 165, 166, 167, 185, 150,
	170, 151, 152, 153, 154, 155, 156, 159, 160, 161,
	158, -226, -131, 35, -425, 359, -433, 136, 40, -431,
	439, -272, 65, -104, 15, -155, -155, -155, 15, -113,
	-156, -226, 67, 68, 136, -251, -280, 65, -226, -219,
	-195, -226, -155, -226, -195, -195, -237, -239, -239, -235,
	135, -218, -131, -152, -158, -153, -210, -242, -154, 221,
	219, 223, -395, 89, 224, 275, 90, 214, -191, 214,
	90, 220, 224, 219, 136, -192, -223, 104, -223, -217,
	131, -223, -223, -223, -223, 252, 252, -223, -223, -223,
	-223, -223, -223, -223, -223, -223, -223, -223, -223, -223,
	-223, 67, -426, 359, 30, 318, -433, -105, 312, 30,
	-201, -202, -203, -204, 53, 57, 59, 54, 55, 56,
	60, 30, 136, -224, -228, 34, -226, 73, -224, -109,
	-114, -119, -224, 67, 144, 147, 147, 146, 216, 67,
	104, -303, -303, -303, 40, -225, -442, 435, 429, 64,
	136, -142, -195, -112, -114, -226, 73, -226, 123, -195,
	-182, 523, 38, -369, 411, 39, -356, -398, -136, -422,
	68, 136, -135, 313, 68, 136, 136, 67, 68, 46,
	136, 104, 135, 388, -226, -380, 68, -309, 136, 216,
	135, 135, -285, 338, -225, -287, 20, 479, -210, 38,
	-216, -215, 73, 534, 68, -252, -252, 94, -249, -246,
	68, 102, -251, 100, -159, -161, 354, 355, -160, -166,
	132, 168, 229, 167, 166, 164, 354, 355, -175, -226,
	-251, -251, 68, -251, -251, 15, -226, -175, -247, -251,
	-126, 68, -316, 402, -316, 68, 68, 68, 68, -316,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 136, 68, 68, 68, 136, 68, 136, -362, -369,
	-251, -251, -123, -122, 43, 346, 68, 136, -161, 34,
	-428, 413, 361, -223, -244, -243, 314, 41, -349, 381,
	367, 368, -286, 243, -226, 64, 302, 303, 304, 305,
	-267, -268, -266, -270, -422, 67, 67, 67, -155, -113,
	-226, 15, 136, -421, 135, -1, -226, -279, -237, -195,
	-447, -195, -237, -237, -239, -226, 34, -161, -154, -226,
	90, -394, -395, -269, -394, 90, 67, -226, -226, -226,
	90, 90, -192, 79, 79, -223, -223, 79, 73, 73,
	73, -223, -223, 79, 73, -228, 79, 79, 79, 79,
	40, 73, -180, 40, 263, 267, 264, 265, 266, 79,
	40, 79, 40, 79, 40, -226, 67, -396, -397, 73,
	-428, -223, 318, 104, -244, -103, 77, 31, -136, 210,
	207, -291, -290, -210, -118, -118, -118, -118, 53, 53,
	53, 58, 53, 58, 53, -203, -291, -120, -131, -228,
	68, -438, -437, -436, -434, 61, 217, 62, -256, 147,
	-287, -240, 73, -294, -155, -155, 68, -197, 17, 135,
	-197, 79, 73, -377, 398, 393, 395, 90, 68, 136,
	-135, -129, 46, 67, -226, -258, -364, -363, 46, -106,
	-356, -399, -362, -226, 79, 15, -284, -279, 123, 123,
	-226, 339, -295, 73, 360, 73, 213, 535, 136, 104,
	-216, -246, -251, 68, -168, 155, 154, -168, 68, -336,
	-336, -335, -338, -335, -168, -168, 68, 68, 23, 68,
	68, 68, -251, 68, 68, 136, -353, 448, -316, 67,
	-316, -316, -316, -316, -316, -316, -316, -316, -316, -316,
	-316, -316, 73, 79, 79, -377, 44, 45, 73, 211,
	-144, 40, -106, -429, 77, -423, 73, -226, -430, 77,
	362, 134, 316, 40, 363, 364, 378, 311, 79, 79,
	369, -424, -226, -137, 312, -155, -266, -217, 131, 254,
	295, -150, -151, -152, -150, -150, -132, 65, 135, -114,
	-156, -226, 123, 68, -195, -226, -195, -195, -237, -106,
	-172, -171, -169, 84, 95, 40, 352, -170, 77, 131,
	268, 246, 269, -189, -241, 64, 358, 219, 89, 90,
	340, -242, -390, -392, -226, -392, -226, -390, -390, -269,
	-251, -226, -175, -175, 73, 73, -176, 246, -157, 68,
	136, 104, -429, -423, 104, 73, -430, 73, -136, -136,
	-195, 136, 104, -139, -138, 64, 65, -140, 64, -138,
	53, 53, -195, -436, -435, 23, -395, -395, -395, 68,
	68, -196, 18, 20, 123, -196, -182, -342, 522, -373,
	-375, 393, 20, 20, 13, -106, -422, 46, -106, -356,
	-136, 68, -356, -279, -295, 381, -155, -215, 73, 535,
	-251, 68, -251, 68, 73, -260, -259, 235, 68, 68,
	-342, -146, -161, -245, 73, -427, 372, 73, 73, 79,
	40, 79, 134, 365, -350, -103, -136, 67, -223, -223,
	-223, -226, 68, 136, 68, 68, -224, -114, -226, -195,
	-421, 135, -195, -195, -169, 84, -247, 73, -177, -225,
	132, -178, 40, 267, 263, -179, 40, 247, 248, -181,
	67, 275, 13, 90, 90, -155, 67, 65, 285, 67,
	67, 67, -392, 68, 247, 248, 68, -397, 73, -427,
	73, -126, -290, -362, -251, 67, -251, 67, 53, 19,
	17, -251, -257, -182, 73, 20, 73, -371, 73, -291,
	-356, 68, -135, 68, 68, -316, -126, 20, -182, 478,
	20, 479, 315, 40, 79, 40, 366, -274, -276, -210,
	67, -175, -177, 73, -173, -174, -152, -96, -95, -173,
	-195, -195, 79, 67, -357, -275, 67, -274, -393, 302,
	303, 304, 306, 305, -393, -274, -274, -274, 67, -297,
	-296, 276, 95, -127, -130, -391, -226, 219, 20, 20,
	-213, 524, 73, 395, -97, -367, -321, -318, -317, -320,
	399, 277, 405, -257, -213, -147, -226, 73, 360, 73,
	315, 68, 136, -335, -251, -311, 235, -97, -311, -126,
	68, -251, -261, -184, -183, 475, -274, 68, 68, 68,
	68, -274, 276, 68, 68, 136, 67, 20, -343, 525,
	-376, 398, -370, -368, 393, 394, 395, 396, 68, -319,
	97, 365, 369, -251, 34, 381, -277, -276, -121, 68,
	-312, 284, 20, -312, -127, 68, -188, -186, -187, 64,
	409, 273, 274, 68, -277, -277, -277, -277, 68, -226,
	219, -214, -226, -371, 73, -378, 217, -374, -375, 397,
	-368, 20, 395, 20, 20, -319, 520, 403, 404, 403,
	404, 73, -278, 225, 77, 479, 300, 301, -121, 20,
	-313, 277, 278, -314, -325, 280, -296, -187, 64, -186,
	64, 14, 13, -189, 68, 136, -385, 67, 79, -373,
	-372, -374, 20, -371, 20, -371, -371, 94, -223, 73,
	299, -210, 67, -323, 281, 67, -321, 67, -321, 90,
	303, -185, 270, 271, 30, 146, -185, -226, -389, 30,
	68, -384, -383, -211, -379, -226, 398, 399, 73, -371,
	-319, 79, -226, -310, -315, 282, 79, -247, 67, -247,
	67, -322, 279, 67, 84, 40, 272, -388, -387, -386,
	68, 136, 135, 68, -327, 67, 20, 68, -310, 68,
	-310, 67, 104, -247, 136, 104, -383, -226, -328, -326,
	235, -314, 68, 68, 68, -310, 79, 68, -387, 40,
	-251, 135, 68, 136, -226, -324, 283, 68, -226, -326,
	-329, 46, 79, -333, -330, 67, -192, 237, 114, -333,
	-192, -332, -331, 282, 238, 67, 68, 136, -226, 234,
	67, -257, -331, -330, -257, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 695, 696, 697, 698, 699, 0, 0,
	0, 466, 467, 0, 443, 0, 0, 0, 0, 0,
	0, 345, 346, 347, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 298, 299, 300, 301, 302, 303,
	0, 233, 229, 208, 209, 210, 169, 170, 171, 172,
	240, 241, 322, 0, 0, 0, 0, 0, 552, -2,
	35, 700, 701, 702, 703, 704, 705, -2, 479, 0,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	287, 288, 289, 283, 284, 286, 285, -2, 0, 479,
	222, 0, 213, 213, 0, 0, 0, 572, 0, 0,
	587, 609, 33, 0, 0, 530, 0, 535, 918, 954,
	955, 956, 957, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 530, 234, 468,
	469, 572, 572, 441, 0, 269, 0, 1404, 273, 0,
	0, 0, 438, 264, 265, 266, 267, 268, 0, 694,
	0, 0, 260, 0, 228, 1463, 0, 0, 0, 0,
	0, 0, 113, 768, 115, 770, 119, 126, 0, 0,
	131, 132, 135, 136, 137, 138, 139, 0, 143, 0,
	145, 148, 0, 150, 151, 0, 154, 155, 156, 0,
	166, 167, 168, 771, 772, 773, -2, 44, 708, 1329,
	1224, 0, 1231, 1232, 1243, 1254, 1027, 1028, 1029, 1030,
	0, 0, 0, 0, 0, 1037, 1038, 0, 1050, 1559,
	0, 1044, 1045, 1046, 1047, 53, 65, 66, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 0, 1197,
	1014, 954, 0, 1567, 0, 1587, 1586, 0, 0, 1182,
	0, 1172, 0, 0, -2, -2, 0, 0, 1530, -2,
	1564, 1583, 1591, 1568, 1590, 1561, 1562, 1556, 1557, 1558,
	1560, 1569, 1571, 1582, 0, 1578, 1588, 1589, 0, 67,
	68, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1188, -2, 1190, 1191, 1193, 1194,
	1195, 1196, -2, 1199, 1200, 1201, -2, -2, 1204, 1205,
	1206, 1207, 1208, 1209, 1212, -2, 1214, -2, -2, 1184,
	1185, 1186, 1187, 1176, 1177, 1178, 1179, 1180, 1181, -2,
	-2, -2, 0, 206, 204, 572, 645, 0, -2, 0,
	0, 0, 592, 595, 598, 601, 0, 36, 37, 0,
	0, 800, 800, 800, 800, 800, 0, 800, 0, 0,
	0, 775, 776, 777, 798, 799, 824, 484, 480, 481,
	482, 483, 560, 0, 562, 565, 419, 369, 0, 0,
	0, 381, 375, 0, 0, 419, 0, 0, 567, 567,
	0, 429, 419, 419, -2, 419, 419, 419, 0, 386,
	387, 388, 375, 0, 375, 392, 393, 394, 405, 406,
	430, 1353, 0, 0, 322, 0, 322, 0, 322, 322,
	486, 223, 224, 212, 214, 0, 218, 0, 211, 1463,
	0, 0, 180, 1530, 185, 0, 1411, 1477, 1426, 0,
	0, 1444, 0, -2, 0, 250, 567, 0, 573, 0,
	572, 0, 0, 322, 322, 322, 322, 322, 322, 322,
	0, 0, 322, 0, 0, 610, 611, 606, 607, 608,
	612, 613, 3, 0, 0, 496, 0, 534, 0, 0,
	567, -2, 0, 442, 270, 958, 0, 0, 274, 275,
	0, 0, 290, 0, 293, 278, 279, 280, 0, 0,
	262, 263, 0, 0, 230, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 123, 120, 127, 130, 140,
	147, 0, 159, 161, 164, 121, 128, 133, 134, 141,
	162, 122, 124, 125, 129, 163, 165, 142, 146, 160,
	144, 149, 152, 153, 158, 0, 94, 0, 0, 0,
	0, 0, 1230, 0, 0, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1224, 0, 0, 1033, 1034, 1035, 1036, 1039, 0,
	1051, 0, 0, 0, 1283, 0, 1222, 1222, 0, 1222,
	1218, 0, 0, 1222, 1160, 0, 0, 1162, 1173, 0,
	0, 0, 1166, 1167, 1222, 0, 1222, 1171, 1156, 1157,
	0, 1218, 1218, 0, 0, 1218, 1218, 1218, 1218, 1218,
	1218, 1218, 1218, 1218, 1218, 1218, 1218, 0, 1330, 1348,
	1285, 1286, 1287, 1335, 1289, 1339, 1339, 1339, 1339, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 0, 0,
	1328, 1308, 1337, 1337, 1337, 1335, 1332, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1342, 1342, 1345, 1342, 0, 567, 0, 0, 555,
	0, 536, 0, 589, 591, 0, 593, 594, 596, 597,
	599, 600, 602, 603, 38, 0, 707, 0, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 800, 800, 800,
	486, 485, 0, 561, 0, 0, 618, 0, 0, 0,
	375, 419, 380, 377, 376, 425, 426, 422, 0, 422,
	618, 0, 399, 400, 401, 419, 419, 407, 568, 408,
	409, 422, 0, 427, 428, 0, 618, 618, 0, 416,
	417, 418, 0, 0, 800, 0, 377, 390, 377, 1354,
	1355, 0, 809, 0, 0, 0, 437, 0, 0, 0,
	487, 0, 0, 216, 0, 221, 173, 0, 0, 0,
	0, 0, 0, 202, 203, 0, 0, 0, 0, 0,
	193, 196, 912, 913, 765, 766, 197, 198, 242, 243,
	0, 536, 588, 590, 584, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 464, 0, 0, 626, 620, 622,
	689, 53, 626, 0, 0, 0, 509, 0, 503, 0,
	0, 0, 919, 488, 522, 490, 0, 511, 536, 558,
	536, 0, 271, 0, 276, 0, 0, 292, 294, 295,
	296, 281, 282, 439, 258, 259, 251, 252, 253, 254,
	255, 256, 257, 261, 63, 0, 231, 232, 0, 0,
	0, 107, 108, 109, 110, 111, 112, 114, 98, 456,
	458, 757, 769, 0, 760, 0, 117, 157, 90, 0,
	0, 1225, 1226, 1227, 1228, 1229, 1233, 0, 1235, 1237,
	1239, 1241, 0, 1259, -2, -2, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1244, 1257,
	1258, 0, 0, 0, 0, 0, 0, 1255, 1255, 1250,
	0, 1031, 0, 1048, 1052, 0, 0, 0, 54, 1217,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 0,
	1223, 0, 1224, 0, 0, 0, 1219, 1220, 0, 0,
	1121, 1122, 1123, 0, 517, 0, 1183, 1161, 1174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 1351, 1349, 1350, 1288, 1336,
	0, 1313, 0, 1314, 1315, 1316, 0, 0, 1309, 0,
	1310, 1311, 1312, 1304, 0, 1305, 1306, 0, 1307, 205,
	644, 646, 0, 526, 528, 529, 0, 556, 569, 574,
	575, 578, 34, 39, 0, 712, 0, 565, 0, 0,
	724, 320, 751, 0, 0, 767, 790, 796, 0, 0,
	0, 0, 563, 0, 0, 658, 368, 0, 420, 421,
	372, 1463, 377, 618, 382, 378, 383, 0, 424, 384,
	385, 0, 618, 618, 419, 422, 422, 412, 413, 0,
	431, 435, 432, 0, 434, 389, 391, 565, 305, 0,
	0, -2, 868, 1356, 1356, 0, 1356, 1356, 1356, 1356,
	0, 0, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
	1356, 1356, 1356, 1356, 1356, 1356, 0, 810, 317, 0,
	0, 320, 741, 631, 0, 632, 633, 629, 660, 684,
	684, 0, 684, 664, 918, 225, 226, 0, 0, 220,
	174, 175, 0, 177, 178, 179, 186, 181, 183, 0,
	0, 187, 199, 200, 201, 0, 0, 0, 191, 192,
	0, 0, 245, 246, 248, 0, 554, 454, 455, 459,
	0, 461, 916, 462, 463, 712, 746, 618, 0, 627,
	0, 623, 690, 0, 692, 0, 618, 546, 0, 538,
	495, 0, 522, 511, 0, 0, 496, 515, 0, 532,
	489, 519, 0, 523, 0, 0, 494, 512, 0, 557,
	559, 959, 0, 277, 291, 0, 0, 0, 0, 101,
	754, 0, 102, 106, 96, 0, 0, 0, 759, 0,
	756, 761, 0, 116, 0, 0, 91, 92, 815, 820,
	0, 1234, 1236, 1238, 1240, 1242, 0, 1245, 1255, 1255,
	1251, 0, 1246, 0, 1248, 0, 1225, 0, 1053, 0,
	0, 0, 0, 0, 0, 1109, 1110, 0, 0, 1114,
	0, 1116, 0, 0, 0, 1120, 0, 1159, 1175, 1163,
	1164, 0, 1168, 0, 1170, 0, 572, 0, 1087, 1087,
	0, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 1284, 1352, 0, 0, 0, 1333,
	0, 0, 0, 0, 0, 647, 538, 0, 0, 0,
	581, 579, 580, 0, 0, 713, 714, 716, 717, 0,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1396, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 711, 0, 801, 731, 1356, 324, 0, 0, 753,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	473, 477, 33, 566, 0, 619, 370, 0, 371, 419,
	379, 423, 618, 918, 402, 403, 618, 419, 419, 422,
	0, 433, 0, 306, 924, 925, 0, 0, 927, 984,
	0, 936, 800, 936, 0, 0, 938, 939, 307, 0,
	0, 0, 0, 0, 809, 870, 0, 1357, 0, 1356,
	1356, 0, 0, 0, 0, 1356, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 731, 1356, 0, 0, 324, 738, 0, 0,
	0, 0, 0, 0, 651, 0, 0, 650, 0, 0,
	0, 0, 0, 565, 685, 0, 687, 688, 662, -2,
	0, 631, 667, 1222, 227, 215, 217, 0, 0, 0,
	0, 188, 189, 190, 194, 195, 244, 247, 249, 0,
	0, 0, 616, 621, 628, 691, 693, 54, 624, 616,
	40, 0, 0, 542, 0, 0, 502, 508, 0, 500,
	496, 0, 0, 0, 531, 0, 522, 524, 0, 522,
	0, 0, 0, 0, 440, 64, 297, 0, 0, 0,
	0, 0, 457, 0, 758, 98, 0, 0, 118, 0,
	0, 818, 0, 820, 1221, 1247, 1249, 0, 1256, 1252,
	1032, 1040, 1049, 0, 0, 1055, 1067, 1067, 0, 1058,
	1339, 1339, 1061, 1335, 1337, 1335, 1067, 1067, 0, 55,
	0, 0, 1115, 0, 0, 0, 518, 0, 0, 0,
	1085, 1087, 1091, 0, 1092, 1087, 1087, 1087, 1087, 1097,
	1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1341, 1340,
	1326, 0, 1327, 1338, 1343, 0, 1346, 0, 527, 542,
	570, 571, 576, 577, 0, 0, 0, 0, 718, 0,
	734, 732, 733, 0, 748, 325, 326, 327, 328, 0,
	0, 0, 752, 0, 498, 0, 791, 792, 793, 794,
	795, -2, 804, 0, 0, 920, 920, 920, 530, 0,
	-2, 0, 0, 475, 0, 0, 659, 373, 618, 395,
	0, 410, 618, 618, 419, 436, 0, -2, 926, 985,
	948, 948, 937, 948, 948, 800, 0, 309, 310, 311,
	0, 313, 869, 871, 872, 0, 0, 875, 876, 877,
	878, 0, 0, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 906, 907, 908, 909, 910, 911, 891,
	892, 893, 894, 895, 896, 903, 0, 0, 900, 0,
	734, 0, 0, 0, 748, 740, 0, 742, 743, 0,
	0, 618, 237, 0, 654, 648, 0, 637, 652, 653,
	640, 0, 642, 0, 638, 639, 618, 630, 661, 686,
	663, 666, 668, 669, 675, 0, 0, 0, 0, 219,
	176, 0, 344, 182, 460, 917, 465, 614, 0, 0,
	614, 547, 546, 544, 78, 0, 0, 0, 497, 0,
	0, 516, 522, 0, 533, 520, 0, 525, 522, 493,
	492, 513, 514, 960, 272, 0, 755, 98, 103, 104,
	105, 99, 97, 762, 0, 764, 0, 816, 820, 0,
	0, 1253, 1054, 1041, 1056, 1068, 1069, 1057, 1042, 1059,
	1060, 1062, 1063, 1064, 1065, 1066, 1043, 1111, 0, 1113,
	1117, 1118, 0, 1165, 1169, 0, 0, 0, 1090, 1083,
	1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1103,
	1104, 1105, 1334, 0, 0, 544, 582, 583, 706, 0,
	715, 0, 722, 723, 0, 0, 726, 727, 736, 0,
	0, 0, 330, 331, 0, 0, 0, 343, 339, 340,
	341, 321, 747, 738, 0, 0, 805, 1356, 1356, 1356,
	0, 0, 921, 922, 0, 0, 684, 0, 0, 618,
	474, 477, 478, 564, 374, 618, 414, 411, 618, 304,
	950, -2, 963, 965, 0, 0, 968, 969, 0, 0,
	0, 0, 1006, 975, 0, 0, 979, 0, 1271, 1272,
	0, 983, 0, 940, 949, 0, 949, 0, 0, 948,
	0, 312, 873, 874, 879, 880, 897, 0, 0, 899,
	0, 0, 314, 0, 0, 315, 319, 739, 744, 745,
	572, 0, 0, 634, 655, 0, 0, 635, 0, 636,
	641, 643, 236, 670, 0, 0, 672, 673, 674, 665,
	184, 604, 0, 0, 625, 605, 41, 546, 0, 543,
	79, 0, 0, 0, 0, 504, 501, 522, 507, 506,
	0, 521, 491, 100, 95, 763, 496, 819, 821, 817,
	0, 1119, 0, 1087, 1086, 572, 1084, 0, 1344, 1347,
	546, 0, 721, 719, 735, 725, 0, 749, 750, 0,
	332, 333, 0, 336, 342, 737, 499, 0, 0, 0,
	0, 797, -2, 0, 0, -2, 618, 618, -2, 471,
	476, 0, 396, 415, 964, 966, 967, 970, 971, 914,
	915, 972, 1011, 1012, 1013, 973, 1008, 1009, 1010, 974,
	0, 0, 0, 1269, 1270, 1004, 0, 0, 0, 0,
	0, 0, 0, 934, 904, 905, 898, 901, 902, 318,
	316, 567, 238, 239, 656, 0, 649, 679, 676, 0,
	0, 615, 617, 548, 545, 0, 539, 541, 89, 510,
	505, 497, 81, 1112, 1158, 1089, 1080, 0, 548, 0,
	0, 0, 329, 334, 0, 337, 338, 0, 786, 1335,
	0, 806, 807, 808, 825, -2, 923, 812, 81, 825,
	572, 472, 0, 0, 1172, 999, 0, 0, 941, 943,
	944, 945, 946, 947, 942, 0, 0, 0, 0, 933,
	935, 980, 0, 235, 0, 0, 680, 682, 677, 678,
	42, 0, 80, 0, 51, 72, 0, 0, 1081, 0,
	1075, 1076, 1077, 1082, 537, 0, 720, 728, 0, 730,
	335, 779, 0, 578, 0, 827, 0, 814, 827, 567,
	1007, 0, 978, 987, 1000, 0, 0, 779, 779, 779,
	779, 0, 981, 657, 671, 0, 0, 0, 43, 0,
	69, 0, 82, 83, 0, 0, 0, 0, 1088, 1078,
	0, 0, 0, 0, 0, 729, 778, 787, 788, 578,
	811, 0, 864, 813, 470, 976, 986, 988, 989, 0,
	1001, 1002, 1003, 1005, 928, 929, 930, 931, 0, 681,
	683, 0, 550, 540, 52, 56, 0, 78, 75, 0,
	84, 0, 0, 0, 0, 0, 1070, 1071, 1073, 1072,
	1074, 709, 780, 1356, 0, 0, 784, 785, 789, 0,
	852, 0, 0, 858, 0, 865, 977, 990, 0, 991,
	0, 0, 0, 932, 549, 0, 45, 0, 0, 73,
	74, 76, 0, 85, 0, 87, 88, 0, 0, 782,
	0, 828, 0, 830, 0, 0, 0, 0, 0, 862,
	0, 992, 994, 995, 0, 0, 993, 551, 822, 0,
	57, 0, 59, 61, 62, 951, 70, 71, 77, 86,
	1079, 781, 783, 0, 832, 0, 853, 0, 0, 0,
	0, 0, 0, 0, 996, 998, 997, 46, 47, 0,
	58, 0, 0, 829, 826, 0, 864, 854, 0, 856,
	0, 0, 0, 0, 0, 0, 60, 952, 0, 834,
	0, 850, 855, 857, 859, 0, 863, 861, 48, 49,
	50, 0, 833, 0, 846, 831, 0, 860, 953, 835,
	-2, 0, 851, 836, -2, 0, 844, 0, 0, 837,
	845, 0, 840, 0, 0, 0, 839, 0, -2, 847,
	0, 0, 841, -2, 0, 849, 848,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 532,
	105, 104, 106, 3, 533, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 534, 117, 535, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:646
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:652
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:687
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:692
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:698
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:718
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:724
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:731
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:739
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:745
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:754
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:763
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:773
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:795
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:820
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:826
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:830
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:836
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:843
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:851
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:855
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:869
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:873
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:877
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:882
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:890
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:896
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:905
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:916
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:920
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:926
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:930
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:936
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:940
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:946
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:970
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:989
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:993
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:997
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1002
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1006
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1013
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1021
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1028
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1033
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1040
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1049
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1073
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1077
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1083
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1089
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1107
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1124
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1147
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1151
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1155
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1160
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1164
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1170
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1183
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1194
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1207
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1211
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1221
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1234
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1247
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1253
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1259
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1266
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1274
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1283
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1291
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1310
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1314
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1320
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1327
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1336
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1340
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1346
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1350
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1354
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1358
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1402
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1406
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1410
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1414
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1418
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1422
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1426
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1430
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1434
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1438
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1454
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1458
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1462
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1466
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1470
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1474
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1478
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1514
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1518
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1522
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1526
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1530
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1534
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1538
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1542
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1554
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1561
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1568
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1577
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1607
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1611
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1615
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1621
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1627
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1631
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1638
		{
			yyVAL.str = yyDollar[3].str
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1644
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1648
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1654
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1662
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1671
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1679
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1687
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1710
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1733
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1740
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1747
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1755
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1762
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1769
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1778
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1786
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1792
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1796
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1802
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1806
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1812
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1816
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1827
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1833
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1838
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1842
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1846
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1854
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1858
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1862
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1866
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1870
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1876
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1884
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1893
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1898
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1917
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1931
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1941
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1948
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1959
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1970
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1974
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1980
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1990
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1996
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2000
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2006
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2012
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2016
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2020
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2024
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2030
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2042
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2048
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2052
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2058
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2062
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2068
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2074
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2084
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2090
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2094
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2098
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2102
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2106
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2110
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2126
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2136
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2177
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2181
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2187
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2198
		{
			yyVAL.str = "true"
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2199
		{
			yyVAL.str = "false"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2200
		{
			yyVAL.str = yyDollar[1].str
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2205
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.AlterTable{
				Table:   *yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2240
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2247
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2251
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2275
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2298
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2327
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2333
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2359
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2364
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2368
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2377
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2393
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2397
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2401
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2405
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2409
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2413
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2417
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2421
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2425
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2429
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2433
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2437
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2441
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2445
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2449
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2453
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2459
		{
			yyVAL.item = nil
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2464
		{
			yyVAL.item = nil
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2498
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2507
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2511
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2524
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2530
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2535
		{
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2539
		{
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2544
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2553
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2559
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2565
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2571
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2577
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2583
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2592
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2600
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2604
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2608
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2612
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2616
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2620
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2624
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2630
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2637
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2647
		{
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2649
		{
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2658
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2668
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2677
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2681
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2685
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2691
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2697
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2703
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2709
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2719
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2731
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2735
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2741
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2753
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2767
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2773
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2780
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2789
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2793
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2798
		{
			yyVAL.str = ""
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2802
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2808
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2821
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2825
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2831
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2836
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2840
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2844
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2850
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2854
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2860
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2866
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2870
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2874
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2880
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2884
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2905
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2923
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2927
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2933
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2942
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2951
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2961
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2967
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2973
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2979
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2996
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3001
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3008
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3024
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3037
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3048
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3052
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3058
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3063
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3070
		{
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3072
		{
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3075
		{
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3084
		{
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3088
		{
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3093
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3102
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3115
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3123
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3130
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3137
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3157
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3170
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3174
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3178
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3184
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3188
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3194
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3202
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3208
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3215
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3224
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3240
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3260
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3264
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3273
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3277
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3283
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3292
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3296
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3302
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3306
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3312
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3316
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3322
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3327
		{
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3338
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3342
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3358
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3364
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3368
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3374
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3378
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3387
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3407
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3414
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3432
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3451
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3468
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3481
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3485
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3490
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3494
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3501
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3506
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3513
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3519
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3523
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3527
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3535
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3545
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3552
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3561
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3565
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3571
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3583
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3588
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3592
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3598
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3602
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3606
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3615
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3621
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3627
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3631
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3637
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3642
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3646
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3650
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3655
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3659
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3663
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3669
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3673
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3677
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3691
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3695
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3705
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3715
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3725
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3737
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3745
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3753
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3762
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3770
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3778
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3786
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3794
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3802
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3810
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3818
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3826
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3836
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3847
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3861
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3865
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3869
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3874
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3878
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3882
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3891
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3895
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3904
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3909
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3913
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3919
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3923
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3929
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3933
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3938
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3942
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3947
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3955
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3961
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3969
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3977
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3987
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3993
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4002
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4011
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4020
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4030
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4034
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4044
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4048
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4052
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4056
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4062
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4072
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4076
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4082
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4092
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4098
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4104
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4108
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4112
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4122
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4128
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4132
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4138
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4142
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4148
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4152
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4162
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4175
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4181
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4187
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4200
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4218
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4222
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4228
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4238
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4242
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4246
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4251
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4255
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4259
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4263
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4272
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4276
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4280
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4284
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4289
		{
			yyVAL.str = ""
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4293
		{
			yyVAL.str = yyDollar[1].str
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4297
		{
			yyVAL.str = yyDollar[2].str
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4303
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4309
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4313
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4317
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4321
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4325
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4331
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 706:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4362
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4372
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4378
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 709:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4385
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4397
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4402
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4408
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4415
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4419
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4425
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4431
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4435
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4439
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4445
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4451
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4457
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4468
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4480
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4486
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4496
		{
			yyVAL.str = yyDollar[1].str
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4500
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4506
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4513
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4519
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4527
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4533
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4540
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4548
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4554
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4586
		{
			yyVAL.str = ""
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4590
		{
			yyVAL.str = yyDollar[2].str
		}
	case 740:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4596
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4610
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4616
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4622
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4628
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4637
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4646
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4651
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4657
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4665
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4771
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4775
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4781
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4791
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4795
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4801
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4811
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4815
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4819
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4824
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4828
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4834
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4841
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4847
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4856
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4863
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4872
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4876
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4882
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4896
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4900
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4904
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4909
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4913
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4917
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4921
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4927
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4946
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4950
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4972
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4976
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4980
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4984
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4988
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4994
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4998
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5004
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5009
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5014
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5022
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5026
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5030
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5036
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5047
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5051
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5061
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5065
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5070
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5074
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5080
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5084
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5090
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5094
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5098
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5103
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5107
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5113
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5125
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5134
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5147
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5154
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5164
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5172
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5183
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5187
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5192
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5196
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5203
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5214
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5223
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5227
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5241
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5248
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5259
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5272
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5278
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5282
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5288
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5297
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5311
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5317
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5321
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5327
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5334
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5343
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5347
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5356
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5361
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5365
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5370
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5374
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5384
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5388
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5399
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5407
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5415
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5423
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5434
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5443
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5453
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5463
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5467
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5472
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5476
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5481
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5485
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5491
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5495
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5499
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5505
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5509
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5513
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5517
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5521
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5525
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5530
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5534
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5538
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5542
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5546
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5550
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5554
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5558
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5562
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5566
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5570
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5574
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5578
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5582
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5586
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5590
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5594
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5598
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5602
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5606
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5610
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5614
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5618
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5625
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5629
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5635
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5640
		{
			yyVAL.str = ""
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5644
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5648
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5654
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5658
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5662
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5666
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5670
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5692
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5701
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5706
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5712
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5719
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5723
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5729
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5733
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5739
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5751
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5757
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5766
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5775
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5798
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5807
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5817
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5825
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5831
		{
			yyVAL.str = ""
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5835
		{
			yyVAL.str = yyDollar[1].str
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5845
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5851
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5857
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5871
		{
			yyVAL.str = ""
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5875
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5881
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5887
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5891
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5895
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5901
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5905
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5909
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5913
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5919
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5923
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5927
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5932
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5936
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5942
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5946
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5952
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5956
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5960
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5964
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5968
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5972
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5977
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5981
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5985
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5989
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5993
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5997
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6001
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6005
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6018
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6024
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6028
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6033
		{
			yyVAL.str = ""
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6037
		{
			yyVAL.str = yyDollar[1].str
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6043
		{
			yyVAL.str = ""
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6047
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6053
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6065
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6072
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6079
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6086
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6093
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6102
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6108
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6114
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6118
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6122
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6126
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6130
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6135
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6142
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6146
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6150
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6159
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6164
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6168
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6184
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6190
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6194
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6198
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6202
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6206
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6210
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6214
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6218
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6222
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6226
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6230
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6234
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6238
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6244
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6248
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6252
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6256
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6260
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6264
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6268
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6272
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6276
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6280
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6284
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6288
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6293
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6301
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6306
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6310
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6319
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6323
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6327
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6331
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6336
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6340
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6349
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6355
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6359
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6365
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6375
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6392
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6409
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6422
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6435
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6447
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6461
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6476
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6491
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6508
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6523
		{
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6529
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6533
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6537
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6543
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6547
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6555
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6559
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6563
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6569
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6576
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6589
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6596
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6601
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6605
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6610
		{
			yyVAL.str = ","
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6614
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6623
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6633
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6644
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6654
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6663
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6672
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6682
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6692
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6702
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6712
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6722
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6732
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6742
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6752
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6762
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6772
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6782
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6792
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6809
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6817
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6825
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6833
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6841
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6851
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6859
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6868
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6879
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6889
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6901
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6912
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6934
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6970
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6982
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6994
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7005
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7013
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7020
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7027
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7039
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7047
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7055
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7066
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7075
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7084
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7092
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7102
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7110
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7120
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7124
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7134
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7153
		{
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7155
		{
		}
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7196
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7207
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7211
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7221
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7226
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7230
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7236
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7240
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7247
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7251
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7255
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7263
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7267
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7271
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7275
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7281
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7285
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7289
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7293
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7297
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7301
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7305
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7309
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7313
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7317
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7325
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7329
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7333
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7337
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7341
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7345
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7349
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7353
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7357
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7361
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7371
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7377
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7381
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7388
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7392
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7396
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7402
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7406
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7410
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7414
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7418
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7422
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7426
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7432
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7436
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7440
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7444
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7450
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7454
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7467
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7472
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7476
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7480
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7484
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7488
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7492
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7506
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7510
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7517
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7528
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7533
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7539
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7551
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7563
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7575
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7588
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7601
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7614
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7627
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7640
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7653
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7666
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7679
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7692
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7705
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7720
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7743
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7781
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7829
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7846
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7858
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7878
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7898
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7918
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7934
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7947
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7960
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7973
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7986
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7998
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8010
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8022
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8034
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8046
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8058
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8070
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8082
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8094
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8107
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8120
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8135
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8143
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8152
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8162
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8185
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8190
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8196
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8203
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8207
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8212
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8216
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8222
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8228
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8235
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8242
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8251
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default scale for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8258
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8265
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8282
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8288
		{
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8300
		{
			yyVAL.str = ""
		}
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8304
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const MODIFY = 57671
const CHANGE = 57672
const SECOND = 57673
const ASCII = 57674
const COALESCE = 57675
const COLLATION = 57676
const HOUR = 57677
const MICROSECOND = 57678
const MINUTE = 57679
const MONTH = 57680
const QUARTER = 57681
const REPEAT = 57682
const REVERSE = 57683
const ROW_COUNT = 57684
const WEEK = 57685
const REVOKE = 57686
const FUNCTION = 57687
const PRIVILEGES = 57688
const TABLESPACE = 57689
const EXECUTE = 57690
const SUPER = 57691
const GRANT = 57692
const OPTION = 57693
const REFERENCES = 57694
const REPLICATION = 57695
const SLAVE = 57696
const CLIENT = 57697
const USAGE = 57698
const RELOAD = 57699
const FILE = 57700
const TEMPORARY = 57701
const ROUTINE = 57702
const EVENT = 57703
const SHUTDOWN = 57704
const NULLX = 57705
const AUTO_INCREMENT = 57706
const APPROXNUM = 57707
const SIGNED = 57708
const UNSIGNED = 57709
const ZEROFILL = 57710
const ENGINES = 57711
const LOW_CARDINALITY = 57712
const AUTOEXTEND_SIZE = 57713
const ADMIN_NAME = 57714
const RANDOM = 57715
const SUSPEND = 57716
const ATTRIBUTE = 57717
const HISTORY = 57718
const REUSE = 57719
const CURRENT = 57720
const OPTIONAL = 57721
const FAILED_LOGIN_ATTEMPTS = 57722
const PASSWORD_LOCK_TIME = 57723
const UNBOUNDED = 57724
const SECONDARY = 57725
const RESTRICTED = 57726
const USER = 57727
const IDENTIFIED = 57728
const CIPHER = 57729
const ISSUER = 57730
const X509 = 57731
const SUBJECT = 57732
const SAN = 57733
const REQUIRE = 57734
const SSL = 57735
const NONE = 57736
const PASSWORD = 57737
const SHARED = 57738
const EXCLUSIVE = 57739
const MAX_QUERIES_PER_HOUR = 57740
const MAX_UPDATES_PER_HOUR = 57741
const MAX_CONNECTIONS_PER_HOUR = 57742
const MAX_USER_CONNECTIONS = 57743
const FORMAT = 57744
const VERBOSE = 57745
const CONNECTION = 57746
const TRIGGERS = 57747
const PROFILES = 57748
const LOAD = 57749
const INFILE = 57750
const TERMINATED = 57751
const OPTIONALLY = 57752
const ENCLOSED = 57753
const ESCAPED = 57754
const STARTING = 57755
const LINES = 57756
const ROWS = 57757
const IMPORT = 57758
const DISCARD = 57759
const MODUMP = 57760
const OVER = 57761
const PRECEDING = 57762
const FOLLOWING = 57763
const GROUPS = 57764
const DATABASES = 57765
const TABLES = 57766
const SEQUENCES = 57767
const EXTENDED = 57768
const FULL = 57769
const PROCESSLIST = 57770
const FIELDS = 57771
const COLUMNS = 57772
const OPEN = 57773
const ERRORS = 57774
const WARNINGS = 57775
const INDEXES = 57776
const SCHEMAS = 57777
const NODE = 57778
const LOCKS = 57779
const ROLES = 57780
const TABLE_NUMBER = 57781
const COLUMN_NUMBER = 57782
const TABLE_VALUES = 57783
const TABLE_SIZE = 57784
const NAMES = 57785
const GLOBAL = 57786
const PERSIST = 57787
const SESSION = 57788
const ISOLATION = 57789
const LEVEL = 57790
const READ = 57791
const WRITE = 57792
const ONLY = 57793
const REPEATABLE = 57794
const COMMITTED = 57795
const UNCOMMITTED = 57796
const SERIALIZABLE = 57797
const LOCAL = 57798
const EVENTS = 57799
const PLUGINS = 57800
const CURRENT_TIMESTAMP = 57801
const DATABASE = 57802
const CURRENT_TIME = 57803
const LOCALTIME = 57804
const LOCALTIMESTAMP = 57805
const UTC_DATE = 57806
const UTC_TIME = 57807
const UTC_TIMESTAMP = 57808
const REPLACE = 57809
const CONVERT = 57810
const SEPARATOR = 57811
const TIMESTAMPDIFF = 57812
const CURRENT_DATE = 57813
const CURRENT_USER = 57814
const CURRENT_ROLE = 57815
const SECOND_MICROSECOND = 57816
const MINUTE_MICROSECOND = 57817
const MINUTE_SECOND = 57818
const HOUR_MICROSECOND = 57819
const HOUR_SECOND = 57820
const HOUR_MINUTE = 57821
const DAY_MICROSECOND = 57822
const DAY_SECOND = 57823
const DAY_MINUTE = 57824
const DAY_HOUR = 57825
const YEAR_MONTH = 57826
const SQL_TSI_HOUR = 57827
const SQL_TSI_DAY = 57828
const SQL_TSI_WEEK = 57829
const SQL_TSI_MONTH = 57830
const SQL_TSI_QUARTER = 57831
const SQL_TSI_YEAR = 57832
const SQL_TSI_SECOND = 57833
const SQL_TSI_MINUTE = 57834
const RECURSIVE = 57835
const CONFIG = 57836
const DRAINER = 57837
const MATCH = 57838
const AGAINST = 57839
const BOOLEAN = 57840
const LANGUAGE = 57841
const WITH = 57842
const QUERY = 57843
const EXPANSION = 57844
const WITHOUT = 57845
const VALIDATION = 57846
const ADDDATE = 57847
const BIT_AND = 57848
const BIT_OR = 57849
const BIT_XOR = 57850
const CAST = 57851
const COUNT = 57852
const APPROX_COUNT_DISTINCT = 57853
const APPROX_PERCENTILE = 57854
const CURDATE = 57855
const CURTIME = 57856
const DATE_ADD = 57857
const DATE_SUB = 57858
const EXTRACT = 57859
const GROUP_CONCAT = 57860
const MAX = 57861
const MID = 57862
const MIN = 57863
const NOW = 57864
const POSITION = 57865
const SESSION_USER = 57866
const STD = 57867
const STDDEV = 57868
const MEDIAN = 57869
const STDDEV_POP = 57870
const STDDEV_SAMP = 57871
const SUBDATE = 57872
const SUBSTR = 57873
const SUBSTRING = 57874
const SUM = 57875
const SYSDATE = 57876
const SYSTEM_USER = 57877
const TRANSLATE = 57878
const TRIM = 57879
const VARIANCE = 57880
const VAR_POP = 57881
const VAR_SAMP = 57882
const AVG = 57883
const RANK = 57884
const ROW_NUMBER = 57885
const DENSE_RANK = 57886
const NEXTVAL = 57887
const SETVAL = 57888
const CURRVAL = 57889
const LASTVAL = 57890
const ARROW = 57891
const ROW = 57892
const OUTFILE = 57893
const HEADER = 57894
const MAX_FILE_SIZE = 57895
const FORCE_QUOTE = 57896
const PARALLEL = 57897
const UNUSED = 57898
const BINDINGS = 57899
const DO = 57900
const DECLARE = 57901
const LOOP = 57902
const WHILE = 57903
const LEAVE = 57904
const ITERATE = 57905
const UNTIL = 57906
const CALL = 57907
const SPBEGIN = 57908
const BACKEND = 57909
const SERVERS = 57910
const KILL = 57911
const QUERY_RESULT = 57912

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'{'",
	"'}'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10181

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 114,
	21, 693,
	-2, 674,
	-1, 128,
	235, 948,
	-2, 1019,
	-1, 151,
	42, 514,
	235, 514,
	262, 521,
	263, 521,
	451, 514,
	-2, 547,
	-1, 187,
	589, 1715,
	-2, 430,
	-1, 514,
	314, 130,
	425, 130,
	-2, 1627,
	-1, 577,
	81, 1425,
	-2, 1769,
	-1, 578,
	81, 1443,
	-2, 1740,
	-1, 582,
	81, 1444,
	-2, 1768,
	-1, 607,
	81, 1355,
	-2, 1833,
	-1, 608,
	81, 1356,
	-2, 1832,
	-1, 609,
	81, 1357,
	-2, 1822,
	-1, 610,
	81, 1797,
	-2, 1817,
	-1, 611,
	81, 1798,
	-2, 1818,
	-1, 612,
	81, 1799,
	-2, 1824,
	-1, 613,
	81, 1800,
	-2, 1807,
	-1, 614,
	81, 1801,
	-2, 1815,
	-1, 615,
	81, 1802,
	-2, 1825,
	-1, 616,
	81, 1803,
	-2, 1826,
	-1, 617,
	81, 1804,
	-2, 1831,
	-1, 618,
	81, 1805,
	-2, 1836,
	-1, 619,
	81, 1806,
	-2, 1837,
	-1, 621,
	81, 1422,
	-2, 1616,
	-1, 625,
	81, 1427,
	-2, 1628,
	-1, 628,
	81, 1431,
	-2, 1646,
	-1, 632,
	81, 1435,
	-2, 1686,
	-1, 633,
	81, 1436,
	-2, 1764,
	-1, 641,
	81, 1446,
	-2, 1749,
	-1, 642,
	81, 1447,
	-2, 1794,
	-1, 643,
	81, 1448,
	-2, 1759,
	-1, 644,
	81, 1449,
	-2, 1784,
	-1, 655,
	81, 1333,
	-2, 1827,
	-1, 656,
	81, 1334,
	-2, 1828,
	-1, 657,
	81, 1335,
	-2, 1829,
	-1, 661,
	21, 694,
	-2, 657,
	-1, 739,
	446, 547,
	447, 547,
	-2, 515,
	-1, 783,
	122, 1616,
	133, 1616,
	153, 1616,
	-2, 1591,
	-1, 886,
	21, 694,
	-2, 657,
	-1, 986,
	21, 693,
	-2, 1233,
	-1, 1350,
	81, 1493,
	-2, 1766,
	-1, 1351,
	81, 1494,
	-2, 1767,
	-1, 1485,
	82, 838,
	-2, 844,
	-1, 1857,
	82, 1577,
	154, 1577,
	-2, 1751,
	-1, 1858,
	82, 1577,
	154, 1577,
	-2, 1750,
	-1, 1859,
	82, 1555,
	154, 1555,
	-2, 1737,
	-1, 1860,
	82, 1556,
	154, 1556,
	-2, 1742,
	-1, 1861,
	82, 1557,
	154, 1557,
	-2, 1674,
	-1, 1862,
	82, 1558,
	154, 1558,
	-2, 1668,
	-1, 1863,
	82, 1559,
	154, 1559,
	-2, 1607,
	-1, 1864,
	82, 1560,
	154, 1560,
	-2, 1739,
	-1, 1865,
	82, 1561,
	154, 1561,
	-2, 1672,
	-1, 1866,
	82, 1562,
	154, 1562,
	-2, 1667,
	-1, 1867,
	82, 1563,
	154, 1563,
	-2, 1660,
	-1, 1869,
	82, 1566,
	154, 1566,
	-2, 1784,
	-1, 1870,
	82, 1546,
	154, 1546,
	-2, 1769,
	-1, 1871,
	82, 1575,
	154, 1575,
	-2, 1740,
	-1, 1872,
	82, 1575,
	154, 1575,
	-2, 1768,
	-1, 1873,
	82, 1575,
	154, 1575,
	-2, 1629,
	-1, 1874,
	82, 1573,
	154, 1573,
	-2, 1759,
	-1, 1875,
	82, 1570,
	154, 1570,
	-2, 1651,
	-1, 1876,
	81, 1527,
	82, 1527,
	154, 1527,
	383, 1527,
	384, 1527,
	385, 1527,
	-2, 1606,
	-1, 1877,
	81, 1528,
	82, 1528,
	154, 1528,
	383, 1528,
	384, 1528,
	385, 1528,
	-2, 1608,
	-1, 1878,
	81, 1531,
	82, 1531,
	154, 1531,
	383, 1531,
	384, 1531,
	385, 1531,
	-2, 1741,
	-1, 1879,
	81, 1533,
	82, 1533,
	154, 1533,
	383, 1533,
	384, 1533,
	385, 1533,
	-2, 1724,
	-1, 1880,
	81, 1535,
	82, 1535,
	154, 1535,
	383, 1535,
	384, 1535,
	385, 1535,
	-2, 1673,
	-1, 1881,
	81, 1537,
	82, 1537,
	154, 1537,
	383, 1537,
	384, 1537,
	385, 1537,
	-2, 1656,
	-1, 1882,
	81, 1538,
	82, 1538,
	154, 1538,
	383, 1538,
	384, 1538,
	385, 1538,
	-2, 1657,
	-1, 1883,
	81, 1540,
	82, 1540,
	154, 1540,
	383, 1540,
	384, 1540,
	385, 1540,
	-2, 1605,
	-1, 1884,
	82, 1580,
	154, 1580,
	383, 1580,
	384, 1580,
	385, 1580,
	-2, 1634,
	-1, 1885,
	82, 1580,
	154, 1580,
	383, 1580,
	384, 1580,
	385, 1580,
	-2, 1647,
	-1, 1886,
	82, 1583,
	154, 1583,
	383, 1583,
	384, 1583,
	385, 1583,
	-2, 1630,
	-1, 1887,
	82, 1583,
	154, 1583,
	383, 1583,
	384, 1583,
	385, 1583,
	-2, 1689,
	-1, 1888,
	82, 1580,
	154, 1580,
	383, 1580,
	384, 1580,
	385, 1580,
	-2, 1709,
	-1, 1904,
	105, 983,
	149, 983,
	188, 983,
	191, 983,
	275, 983,
	-2, 976,
	-1, 2041,
	21, 693,
	-2, 787,
	-1, 2234,
	105, 983,
	149, 983,
	188, 983,
	191, 983,
	275, 983,
	-2, 977,
	-1, 2246,
	79, 603,
	154, 603,
	-2, 1122,
	-1, 2268,
	191, 983,
	299, 1201,
	-2, 1175,
	-1, 2573,
	191, 983,
	299, 1201,
	-2, 1176,
	-1, 2730,
	105, 983,
	149, 983,
	188, 983,
	191, 983,
	-2, 1065,
	-1, 2733,
	105, 983,
	149, 983,
	188, 983,
	191, 983,
	-2, 1065,
	-1, 2743,
	79, 603,
	154, 603,
	-2, 1123,
	-1, 2864,
	105, 983,
	149, 983,
	188, 983,
	191, 983,
	-2, 1066,
	-1, 3197,
	82, 1037,
	154, 1037,
	-2, 983,
	-1, 3201,
	82, 1037,
	154, 1037,
	-2, 983,
	-1, 3215,
	82, 1041,
	154, 1041,
	-2, 983,
	-1, 3220,
	82, 1042,
	154, 1042,
	-2, 983,
}

const yyPrivate = 57344

const yyLast = 38491

var yyAct = [...]int{
	544, 1269, 3209, 3180, 3200, 3201, 178, 1561, 523, 3082,
	525, 3139, 1331, 546, 3105, 3127, 3033, 2826, 533, 3001,
	2821, 2889, 2587, 1191, 3034, 3015, 1835, 2993, 1327, 2679,
	2618, 3019, 2924, 2857, 2854, 2680, 662, 2955, 2856, 431,
	1018, 1259, 1132, 2824, 782, 2914, 3002, 3004, 1516, 437,
	2721, 442, 442, 574, 1518, 2863, 2249, 442, 458, 467,
	1334, 2816, 467, 2545, 2753, 2707, 2362, 2363, 163, 1650,
	2361, 1647, 2533, 2345, 2710, 2615, 2608, 2602, 1943, 2355,
	2035, 2574, 2665, 1942, 2134, 1615, 527, 1743, 478, 2384,
	2866, 54, 2648, 2225, 2358, 1712, 2677, 1946, 2517, 2514,
	1662, 472, 2512, 2264, 1913, 2235, 880, 1845, 2421, 2019,
	2546, 516, 1739, 517, 1255, 1184, 2601, 2543, 522, 2133,
	1721, 1720, 1713, 1467, 1853, 2083, 2460, 2404, 1855, 1643,
	1686, 715, 2036, 1618, 788, 2214, 2024, 36, 1616, 2209,
	1944, 1738, 1105, 1545, 6, 2270, 1554, 1084, 1475, 1140,
	1912, 1494, 1771, 174, 8, 431, 173, 7, 2100, 1325,
	1740, 1263, 834, 2063, 1224, 526, 436, 776, 1851, 1200,
	113, 1170, 35, 1895, 1954, 1527, 1528, 1380, 178, 1750,
	178, 2548, 825, 826, 1141, 2547, 515, 1260, 454, 1364,
	534, 517, 1316, 897, 786, 464, 746, 1719, 2175, 26,
	2176, 1330, 1702, 1121, 1231, 1676, 430, 15, 1324, 1250,
	1716, 775, 1169, 14, 2043, 451, 714, 1167, 13, 1493,
	659, 32, 1386, 524, 480, 23, 481, 1385, 1133, 692,
	1080, 16, 1223, 734, 157, 164, 160, 10, 712, 466,
	1117, 1747, 1268, 696, 1757, 2724, 821, 2949, 823, 661,
	792, 2454, 2454, 2136, 2672, 475, 2089, 463, 2087, 1056,
	2086, 2084, 1238, 1234, 822, 459, 817, 818, 818, 818,
	162, 462, 438, 1019, 1153, 1236, 461, 2814, 2417, 460,
	2415, 1691, 955, 956, 957, 954, 2920, 2915, 2817, 447,
	2678, 1471, 3006, 1973, 1013, 955, 956, 957, 954, 1715,
	660, 470, 3073, 1981, 670, 161, 161, 816, 50, 153,
	129, 161, 2966, 161, 161, 161, 8, 161, 2843, 7,
	161, 1406, 50, 153, 129, 1283, 2129, 918, 1072, 789,
	2121, 791, 2708, 1276, 1744, 2838, 2976, 2483, 476, 1755,
	1097, 1899, 2061, 161, 952, 50, 153, 129, 1149, 161,
	477, 1150, 2841, 2062, 1317, 1280, 2967, 1321, 806, 933,
	2390, 2436, 934, 1273, 2429, 112, 650, 764, 649, 651,
	652, 1660, 653, 654, 1627, 926, 1282, 158, 928, 1073,
	1129, 1320, 158, 1301, 1275, 158, 158, 2101, 158, 2049,
	936, 158, 2048, 1628, 1629, 2050, 755, 1107, 1171, 112,
	1173, 671, 2391, 2392, 1479, 1480, 929, 2211, 3123, 1138,
	1139, 663, 1541, 945, 158, 3037, 3038, 2212, 1136, 1333,
	158, 3121, 1135, 1138, 1139, 2834, 950, 785, 784, 3009,
	3069, 3008, 3068, 3007, 3067, 3009, 3008, 1152, 3007, 1826,
	2922, 442, 3109, 3110, 2925, 2926, 2927, 2928, 2422, 2681,
	2995, 442, 890, 2995, 2423, 2998, 2424, 3072, 2918, 2681,
	1322, 900, 2116, 891, 2210, 931, 1336, 2301, 1644, 467,
	467, 1638, 442, 3012, 2690, 2217, 1402, 2711, 1751, 2718,
	1634, 922, 1399, 1319, 885, 887, 1401, 1398, 1400, 1404,
	1405, 1312, 2528, 2848, 1403, 1237, 1235, 801, 798, 793,
	797, 799, 1623, 2013, 2944, 1894, 924, 760, 1699, 702,
	759, 1244, 1243, 2518, 2597, 2200, 3011, 938, 927, 930,
	939, 128, 2449, 159, 511, 804, 2526, 513, 932, 796,
	988, 2447, 512, 948, 949, 889, 947, 2126, 3075, 3076,
	2815, 2416, 1979, 151, 923, 921, 2349, 2016, 941, 792,
	884, 2015, 2947, 441, 441, 3116, 2833, 2845, 828, 449,
	2522, 2020, 3036, 2835, 913, 1760, 1762, 1763, 900, 787,
	1420, 2616, 2617, 1127, 3125, 2542, 890, 1335, 2785, 2552,
	802, 2523, 2524, 886, 2963, 1756, 3025, 805, 2229, 2230,
	2231, 2232, 1151, 464, 464, 2354, 765, 2525, 1318, 2242,
	469, 468, 1901, 935, 794, 2890, 2891, 2892, 2894, 2893,
	1161, 2777, 3155, 761, 3210, 1658, 1659, 943, 944, 925,
	792, 3020, 3194, 937, 3148, 3120, 3084, 803, 789, 2788,
	791, 3080, 3081, 1116, 3084, 2943, 1409, 1410, 1411, 1412,
	1413, 1414, 1407, 1408, 893, 894, 2768, 1342, 1345, 1346,
	3159, 902, 901, 2757, 2620, 463, 463, 2936, 1343, 1023,
	2937, 942, 1022, 459, 459, 1990, 705, 795, 706, 462,
	462, 1989, 2520, 1963, 461, 461, 763, 460, 460, 1955,
	1965, 1078, 437, 1081, 2948, 904, 940, 2763, 2694, 2453,
	1745, 2010, 2011, 1745, 3130, 1053, 2223, 1745, 1114, 789,
	910, 791, 3211, 2329, 2936, 1180, 1179, 2937, 906, 907,
	1131, 1130, 2065, 2939, 715, 911, 1113, 1112, 3205, 703,
	3217, 3181, 2931, 818, 2956, 818, 994, 818, 3074, 818,
	895, 881, 818, 2965, 465, 818, 2499, 1964, 2964, 2735,
	1772, 1955, 800, 2812, 2938, 2386, 2388, 1758, 1746, 2085,
	1085, 762, 1137, 990, 991, 992, 993, 465, 902, 901,
	2939, 442, 1239, 1163, 1949, 476, 2842, 2992, 1168, 431,
	431, 918, 2612, 1138, 1139, 2216, 1134, 2122, 431, 431,
	660, 2053, 1195, 1195, 1977, 442, 1138, 1139, 1748, 1128,
	1091, 2938, 2452, 1645, 51, 2529, 1952, 3126, 1960, 1095,
	1094, 1761, 1093, 467, 1081, 437, 1197, 2945, 1227, 1227,
	1193, 1193, 130, 130, 2519, 2844, 471, 51, 130, 178,
	130, 130, 130, 2130, 130, 2450, 912, 130, 431, 1202,
	3131, 2220, 2221, 1086, 1087, 1088, 1089, 1090, 2302, 1092,
	2303, 2304, 2619, 1096, 3204, 2507, 2219, 1082, 1079, 2849,
	130, 1637, 2401, 2402, 917, 756, 130, 1031, 1032, 787,
	1635, 2613, 1759, 2521, 2770, 2616, 2617, 709, 710, 711,
	2299, 1313, 2462, 2461, 1102, 1245, 2199, 1267, 756, 1270,
	809, 814, 815, 1344, 1278, 1839, 2320, 2321, 1841, 1840,
	1076, 1058, 1074, 1075, 3216, 1189, 1190, 2759, 1948, 2540,
	1060, 2758, 1482, 1950, 1299, 1483, 1294, 1295, 2387, 1838,
	1118, 1122, 1122, 1122, 704, 2764, 2765, 1481, 1195, 672,
	1195, 890, 1976, 2872, 1953, 661, 2002, 1083, 1284, 673,
	3223, 1123, 1124, 1118, 1118, 3160, 1175, 1177, 758, 1162,
	1519, 757, 1848, 882, 953, 1187, 1188, 2330, 2332, 2333,
	2334, 2331, 1104, 888, 2645, 2247, 2932, 1951, 3128, 3129,
	3003, 758, 918, 3222, 757, 1849, 1850, 2103, 1257, 1258,
	1142, 1219, 792, 1145, 909, 664, 792, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1154,
	1155, 2557, 3213, 1375, 1376, 1240, 3178, 1178, 1298, 2641,
	1384, 1959, 953, 2932, 1332, 1957, 1297, 2933, 2319, 664,
	1423, 1424, 1425, 2731, 1433, 1158, 676, 1160, 1274, 1164,
	1165, 1166, 1281, 1439, 1203, 2541, 1440, 447, 1213, 3195,
	3190, 1519, 1329, 464, 1218, 953, 1265, 1442, 1447, 1448,
	1829, 1228, 1217, 1308, 2121, 1248, 1679, 1251, 1252, 1208,
	1209, 1210, 1211, 1212, 1229, 1214, 1215, 1216, 2614, 3143,
	1262, 1221, 1222, 1266, 3214, 2034, 2248, 675, 811, 812,
	813, 678, 677, 1803, 1310, 3184, 1802, 3183, 2034, 1347,
	955, 956, 957, 954, 1290, 442, 1833, 1492, 1195, 1496,
	1497, 1119, 1499, 1500, 2248, 463, 1465, 442, 3164, 2205,
	1195, 1753, 3191, 459, 715, 1307, 3141, 1517, 2202, 462,
	953, 3099, 1195, 1304, 461, 1110, 1286, 460, 1163, 1326,
	1115, 661, 3048, 458, 1303, 1468, 2481, 1125, 3039, 2986,
	2985, 1306, 2981, 518, 1432, 1143, 1144, 1305, 1146, 1147,
	1148, 1323, 1540, 1302, 1054, 1328, 1285, 1753, 953, 1753,
	1546, 1546, 2980, 1163, 2979, 1163, 1163, 1491, 2033, 442,
	1782, 1492, 1492, 1544, 2978, 1195, 1612, 1613, 1625, 2645,
	1753, 1366, 955, 956, 957, 954, 2951, 2108, 3142, 1498,
	1533, 2791, 431, 3100, 1195, 1677, 2629, 2381, 2181, 955,
	956, 957, 954, 2137, 2952, 1539, 2119, 2065, 1542, 1543,
	2952, 2987, 1917, 1314, 2952, 915, 1373, 1374, 1120, 442,
	1492, 1195, 1744, 1667, 1897, 442, 1670, 1671, 1832, 1626,
	2112, 1936, 1674, 1675, 2952, 1315, 2952, 1681, 1834, 883,
	1488, 1607, 1608, 1418, 178, 1781, 2952, 178, 178, 1807,
	178, 1501, 1502, 1503, 1735, 1656, 1415, 1416, 2952, 1419,
	1563, 2110, 2105, 2065, 2098, 2096, 1444, 1434, 2630, 2034,
	953, 1653, 1654, 1159, 2094, 953, 1103, 2092, 1917, 1639,
	1441, 1529, 1443, 1531, 1532, 1466, 1433, 1433, 1723, 916,
	1664, 916, 2034, 1433, 1433, 1916, 1537, 1201, 1730, 1495,
	1830, 1631, 2106, 1633, 1547, 1378, 1646, 1118, 1181, 1548,
	1666, 1509, 1690, 1651, 1652, 1693, 1694, 1811, 1696, 819,
	820, 1534, 1517, 1522, 824, 1669, 1195, 1742, 1472, 1513,
	1514, 707, 1122, 2111, 2106, 1810, 2099, 2097, 1896, 1549,
	1550, 1551, 1520, 1521, 2746, 2717, 2093, 1801, 1530, 2093,
	2558, 1538, 968, 978, 979, 971, 972, 973, 974, 975,
	976, 977, 970, 1524, 1792, 1791, 1790, 1917, 1752, 1291,
	1736, 2045, 1829, 2903, 918, 2406, 1495, 792, 2250, 1765,
	2153, 2124, 2123, 970, 792, 2115, 1724, 1933, 2789, 953,
	1769, 1770, 1614, 1798, 1611, 1783, 1734, 1630, 1684, 1632,
	1487, 1287, 999, 1640, 903, 883, 1718, 953, 875, 871,
	872, 873, 874, 1718, 2158, 878, 2157, 2156, 2154, 953,
	876, 1655, 1326, 1422, 1421, 1119, 2553, 3026, 3173, 1665,
	973, 974, 975, 976, 977, 970, 953, 953, 953, 464,
	1753, 1292, 2562, 883, 1685, 1687, 978, 979, 971, 972,
	973, 974, 975, 976, 977, 970, 789, 1808, 791, 2444,
	2873, 2738, 2736, 789, 1815, 791, 1372, 1704, 3161, 792,
	1108, 3027, 1661, 1974, 1109, 1183, 1185, 2950, 2761, 1668,
	2155, 2760, 1369, 1371, 1368, 766, 1370, 1186, 2084, 2723,
	1732, 1727, 2646, 2639, 2634, 516, 1733, 890, 1889, 442,
	2631, 463, 2554, 1725, 2874, 2739, 2737, 2535, 1688, 459,
	2455, 2351, 442, 442, 442, 462, 2227, 1737, 2109, 2055,
	461, 1525, 1526, 460, 1914, 971, 972, 973, 974, 975,
	976, 977, 970, 1453, 1921, 1163, 1099, 1773, 1535, 1536,
	1098, 892, 1120, 2670, 674, 1926, 2555, 2144, 789, 1764,
	791, 2078, 2474, 1381, 1728, 1778, 1729, 1381, 1232, 1163,
	1688, 955, 956, 957, 954, 2408, 890, 1777, 1766, 1366,
	2671, 1969, 547, 557, 1182, 955, 956, 957, 954, 3030,
	1856, 548, 1490, 556, 549, 553, 552, 550, 551, 3066,
	1923, 1924, 957, 954, 954, 2772, 2771, 1489, 2425, 2291,
	1927, 1928, 2290, 1767, 1768, 955, 956, 957, 954, 1504,
	2276, 2473, 2274, 2159, 2160, 1445, 1446, 3158, 1975, 1449,
	1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 2038, 2038, 1625, 2038, 2750, 554, 955, 956, 957,
	954, 2846, 1891, 961, 962, 963, 964, 965, 966, 967,
	959, 3199, 431, 431, 955, 956, 957, 954, 2851, 2852,
	890, 3187, 3149, 958, 679, 2673, 1195, 442, 555, 1001,
	3144, 1552, 987, 1825, 1827, 1828, 1938, 1437, 3157, 442,
	996, 1842, 1000, 890, 437, 1898, 3086, 3057, 1227, 3028,
	1625, 1438, 2968, 2073, 2059, 2075, 2715, 2847, 1930, 178,
	2341, 1931, 1002, 2916, 2881, 1935, 955, 956, 957, 954,
	1922, 2876, 2040, 2051, 2044, 2052, 2226, 2088, 2042, 2875,
	2339, 1663, 2337, 2740, 792, 1836, 1837, 1663, 955, 956,
	957, 954, 2326, 2056, 2057, 1934, 1780, 2146, 2168, 1122,
	2714, 2070, 1956, 1023, 1961, 2117, 1022, 1941, 1742, 2527,
	2077, 1940, 2716, 2440, 2420, 1195, 2340, 1195, 1932, 1195,
	955, 956, 957, 954, 890, 2419, 1856, 2079, 2324, 2080,
	2323, 955, 956, 957, 954, 2072, 2338, 2322, 2336, 2067,
	1233, 955, 956, 957, 954, 2127, 2314, 2308, 2325, 1232,
	2307, 2306, 2305, 1195, 2162, 2017, 1707, 955, 956, 957,
	954, 3018, 1706, 789, 1705, 791, 3188, 1701, 2046, 2169,
	955, 956, 957, 954, 1195, 3115, 2161, 2828, 1700, 1175,
	1177, 1193, 1288, 1071, 2171, 2722, 2822, 955, 956, 957,
	954, 955, 956, 957, 954, 2356, 2060, 2170, 2513, 1794,
	3111, 3070, 1193, 955, 956, 957, 954, 2131, 3014, 2855,
	2069, 2068, 2071, 2990, 2946, 2173, 2917, 2880, 890, 969,
	968, 978, 979, 971, 972, 973, 974, 975, 976, 977,
	970, 2879, 1980, 2862, 1982, 1983, 1984, 1985, 1986, 1987,
	1988, 2850, 2820, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 2818, 2003, 2004, 2005, 2006, 2007,
	2128, 2008, 2114, 2142, 2798, 2795, 1793, 1195, 2120, 2192,
	2224, 2118, 2793, 2346, 2125, 511, 1492, 2752, 513, 2148,
	2827, 2713, 2246, 512, 2712, 2970, 2709, 2699, 2252, 2693,
	2138, 2139, 955, 956, 957, 954, 2135, 2640, 2636, 2627,
	2626, 2203, 2536, 2504, 2261, 1929, 955, 956, 957, 954,
	890, 1226, 1226, 2503, 2152, 2451, 1326, 2418, 2273, 2395,
	2335, 2327, 2317, 2315, 2311, 890, 2310, 890, 890, 1546,
	2309, 1831, 890, 1786, 2284, 2285, 2286, 1709, 2287, 2288,
	1703, 2289, 2781, 606, 605, 2929, 2237, 3212, 1478, 1289,
	2255, 1030, 1026, 2196, 2257, 2206, 1025, 1257, 1258, 879,
	2193, 1890, 2733, 2732, 2038, 2236, 2141, 2730, 955, 956,
	957, 954, 2696, 2698, 1906, 1907, 1908, 2685, 2342, 2253,
	2177, 2676, 2675, 2664, 161, 2182, 431, 153, 129, 2663,
	2563, 1492, 890, 1625, 1625, 1625, 1625, 1563, 955, 956,
	957, 954, 2479, 2207, 890, 1625, 2472, 1925, 2038, 2243,
	2279, 2280, 2464, 2271, 2459, 2283, 2403, 2271, 2222, 1265,
	2267, 2477, 2204, 2201, 1195, 2095, 955, 956, 957, 954,
	2251, 2091, 2245, 2090, 1816, 2278, 442, 442, 1252, 8,
	1806, 2268, 7, 1262, 1804, 1800, 1266, 955, 956, 957,
	954, 178, 2260, 2263, 2269, 158, 178, 1337, 1338, 1339,
	1340, 1341, 2476, 1799, 2272, 2275, 1797, 1788, 1495, 1785,
	2377, 2475, 2282, 1784, 1708, 2364, 1464, 1433, 2190, 1433,
	1463, 2256, 2435, 2189, 1462, 1436, 2439, 2364, 955, 956,
	957, 954, 1195, 1435, 1426, 2446, 2316, 955, 956, 957,
	954, 1382, 1383, 1207, 955, 956, 957, 954, 1417, 955,
	956, 957, 954, 1205, 161, 3172, 1427, 3166, 3156, 2409,
	3153, 3151, 2347, 2352, 2413, 3056, 2988, 1020, 1247, 1201,
	2898, 2365, 2366, 2367, 2368, 2886, 2882, 2806, 2378, 2376,
	2380, 1663, 2804, 2779, 1468, 2778, 661, 2775, 2379, 2434,
	2774, 2767, 2725, 2350, 1256, 2396, 1249, 1106, 2213, 1469,
	3091, 2188, 2343, 1473, 2277, 2393, 1476, 792, 2467, 2240,
	2469, 2239, 2238, 2432, 792, 2407, 890, 1261, 2411, 2438,
	1264, 2443, 2410, 1253, 2516, 158, 2448, 955, 956, 957,
	954, 2191, 2104, 2054, 2531, 2009, 2426, 2431, 2428, 442,
	2433, 1915, 1367, 158, 2442, 2187, 1672, 1486, 1485, 890,
	890, 890, 1311, 2430, 1277, 1254, 1055, 1052, 1625, 1914,
	2437, 2561, 1051, 1050, 1049, 1048, 2456, 2565, 1047, 2457,
	1046, 955, 956, 957, 954, 3047, 2186, 890, 1045, 2297,
	2298, 2600, 2468, 2603, 1044, 2603, 2603, 2463, 1043, 1042,
	890, 2539, 1041, 2312, 2313, 1040, 2470, 2471, 2389, 1856,
	1039, 2622, 955, 956, 957, 954, 1038, 1037, 1195, 1195,
	792, 1036, 2500, 1035, 1034, 1033, 1029, 2348, 1028, 2564,
	2505, 1027, 1024, 2566, 2567, 1017, 1016, 2621, 1469, 1014,
	2254, 2623, 2624, 1469, 1469, 2236, 1193, 1193, 2258, 2259,
	2508, 1013, 2506, 2559, 2532, 1012, 1011, 1010, 1009, 1008,
	2538, 1007, 1006, 1005, 442, 1004, 2511, 2598, 2599, 2516,
	2570, 2556, 1003, 2560, 792, 998, 997, 2549, 2550, 2593,
	1492, 1492, 920, 2465, 2466, 877, 1689, 2185, 3045, 1692,
	3043, 2571, 1695, 2484, 3041, 1697, 2184, 2485, 2486, 2487,
	2488, 2776, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2611, 2604, 2605, 955, 956, 957, 954, 2649, 2650, 2183,
	2569, 1920, 955, 956, 957, 954, 1903, 2162, 2180, 3198,
	908, 3089, 2179, 3035, 2244, 2652, 2674, 2644, 2228, 2066,
	1711, 919, 2655, 2113, 2606, 955, 956, 957, 954, 2654,
	2178, 2809, 2656, 2808, 955, 956, 957, 954, 955, 956,
	957, 954, 2174, 2375, 2628, 2030, 2031, 2638, 2633, 2165,
	2632, 2637, 2370, 442, 2642, 2643, 955, 956, 957, 954,
	2653, 2369, 2373, 2107, 1100, 439, 2635, 2374, 955, 956,
	957, 954, 2534, 2657, 99, 955, 956, 957, 954, 2143,
	53, 2807, 559, 114, 2660, 2661, 2662, 52, 114, 2198,
	2669, 969, 968, 978, 979, 971, 972, 973, 974, 975,
	976, 977, 970, 1978, 2371, 955, 956, 957, 954, 2372,
	1805, 2787, 1775, 1511, 1512, 1779, 1599, 443, 1377, 2509,
	2026, 2029, 2030, 2031, 2027, 2686, 2028, 2032, 1241, 444,
	2688, 2689, 2687, 2021, 2700, 445, 2609, 448, 2610, 2692,
	114, 2102, 446, 2729, 955, 956, 957, 954, 665, 666,
	667, 668, 2132, 2265, 1789, 2266, 1057, 2038, 1625, 2743,
	1892, 664, 1796, 1506, 1507, 1508, 2501, 2502, 2398, 2399,
	2026, 2029, 2030, 2031, 2027, 1271, 2028, 2032, 1673, 914,
	1809, 3010, 1195, 1812, 1813, 1814, 2751, 2510, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 2705, 2702, 442, 1836,
	1837, 2262, 792, 2208, 1910, 1515, 1484, 2600, 2293, 3102,
	2754, 890, 2720, 890, 2744, 2294, 2295, 2296, 2745, 2884,
	2747, 1422, 1421, 2748, 1206, 2625, 1195, 1069, 1070, 1067,
	1068, 1065, 1066, 1063, 1064, 2018, 2704, 2741, 2014, 1610,
	1157, 790, 1492, 2742, 1156, 114, 890, 946, 2706, 2790,
	2659, 2064, 2598, 1918, 1193, 2749, 1731, 1111, 2568, 1059,
	114, 3167, 114, 3078, 2593, 665, 666, 667, 668, 2811,
	3063, 3061, 178, 3021, 3000, 2999, 2997, 2989, 664, 2666,
	2911, 2800, 2910, 2819, 2780, 890, 2701, 2683, 2783, 2786,
	2682, 2667, 1062, 664, 2782, 2405, 2784, 1519, 3093, 3092,
	1126, 2441, 1905, 2836, 2792, 1787, 905, 2796, 2794, 3092,
	3093, 2797, 2799, 2801, 2769, 2684, 2802, 2397, 165, 3,
	61, 2, 1172, 2047, 1657, 1199, 890, 1195, 1195, 2364,
	1, 2537, 890, 1477, 669, 2382, 2383, 2658, 2865, 2385,
	2813, 2865, 1749, 2353, 2012, 1893, 2530, 1101, 708, 1428,
	2860, 2823, 1296, 808, 899, 1193, 2754, 1293, 898, 896,
	1379, 561, 1714, 2344, 2837, 1469, 2318, 1469, 2364, 2907,
	3101, 3138, 2839, 3055, 3104, 890, 890, 1309, 545, 890,
	890, 2991, 2921, 3059, 2923, 1469, 1469, 2825, 1754, 2870,
	951, 2427, 2861, 2869, 2901, 2867, 2877, 2878, 730, 2895,
	2745, 597, 572, 1015, 1279, 1517, 1272, 2908, 2482, 2858,
	810, 1226, 2900, 2887, 2888, 2912, 2913, 2896, 2897, 571,
	2719, 2218, 2400, 2883, 2962, 807, 731, 1698, 2919, 1242,
	1246, 2871, 2734, 2726, 2727, 2728, 2551, 2241, 3208, 2942,
	3197, 3179, 3165, 2905, 3083, 3193, 1663, 3119, 2904, 3154,
	2832, 2935, 2830, 2906, 2831, 3147, 3079, 482, 2858, 2858,
	1636, 429, 2858, 2858, 773, 2899, 1710, 483, 1919, 3071,
	2885, 690, 2958, 1902, 691, 2234, 2233, 1348, 960, 2930,
	2934, 1365, 2497, 2940, 2498, 995, 521, 890, 1776, 2215,
	2588, 2394, 60, 59, 58, 57, 1680, 2829, 186, 890,
	2953, 563, 185, 1195, 2853, 3052, 3106, 543, 2961, 542,
	541, 2959, 2145, 2960, 2969, 540, 539, 2025, 2023, 2022,
	2163, 2164, 1620, 1619, 2972, 2977, 2983, 1678, 2166, 2167,
	2281, 1193, 1962, 1966, 1553, 3032, 2974, 2982, 114, 114,
	790, 2172, 2975, 2766, 2328, 1505, 1958, 1569, 2300, 1566,
	3005, 1565, 2292, 890, 2762, 2691, 2996, 2756, 2994, 1596,
	2864, 2572, 2573, 1469, 2579, 3022, 2194, 2195, 1476, 1909,
	2858, 833, 829, 831, 3031, 832, 830, 2151, 2147, 1937,
	3017, 2544, 2858, 1847, 3013, 1195, 3016, 1846, 3050, 3053,
	1844, 1843, 1077, 3024, 2941, 2703, 1854, 1852, 2651, 2647,
	1722, 1474, 2197, 1621, 3040, 3042, 3044, 3046, 3049, 1617,
	3054, 986, 3029, 1193, 1904, 2840, 1510, 683, 3062, 1900,
	3064, 3065, 3060, 3058, 1195, 97, 143, 47, 88, 87,
	96, 141, 46, 170, 169, 172, 2858, 171, 168, 2081,
	2082, 167, 1230, 166, 2868, 3077, 658, 3085, 37, 33,
	12, 3090, 1193, 11, 34, 21, 22, 3108, 3088, 20,
	1300, 3087, 19, 3094, 25, 3095, 31, 3096, 30, 3097,
	3107, 3098, 107, 106, 29, 105, 104, 103, 102, 890,
	101, 28, 18, 2902, 3112, 3005, 3113, 41, 40, 39,
	9, 95, 93, 27, 94, 91, 92, 89, 3122, 3124,
	2773, 3137, 72, 71, 70, 85, 84, 83, 82, 3132,
	81, 80, 78, 3140, 79, 729, 69, 3145, 68, 890,
	3133, 3134, 3135, 3136, 67, 66, 65, 90, 76, 86,
	3150, 3146, 3152, 77, 75, 74, 73, 955, 956, 957,
	954, 64, 63, 3108, 3163, 62, 1061, 126, 127, 125,
	124, 123, 890, 122, 890, 121, 3107, 3162, 120, 42,
	43, 44, 3117, 45, 3169, 3174, 3171, 137, 136, 138,
	140, 3140, 3175, 890, 142, 139, 134, 3182, 2973, 3189,
	132, 135, 3192, 133, 131, 3186, 55, 17, 24, 4,
	0, 0, 0, 0, 0, 3196, 0, 2984, 0, 0,
	0, 0, 1332, 0, 3170, 3203, 3206, 0, 0, 3207,
	0, 3215, 0, 0, 3218, 0, 1406, 3219, 2412, 3221,
	2414, 3220, 0, 3203, 0, 0, 0, 0, 3207, 0,
	0, 0, 0, 0, 0, 1332, 0, 1332, 1469, 0,
	0, 0, 0, 1469, 0, 0, 0, 0, 0, 0,
	3168, 0, 0, 3023, 0, 0, 1332, 969, 968, 978,
	979, 971, 972, 973, 974, 975, 976, 977, 970, 161,
	1204, 50, 153, 129, 0, 448, 0, 0, 0, 0,
	2458, 849, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	155, 114, 2478, 969, 968, 978, 979, 971, 972, 973,
	974, 975, 976, 977, 970, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 161, 0, 50, 153, 129,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	0, 0, 146, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 3114, 114, 0, 0,
	0, 1402, 0, 0, 0, 112, 0, 1399, 114, 0,
	0, 1401, 1398, 1400, 1404, 1405, 0, 0, 114, 1403,
	100, 0, 1406, 0, 0, 0, 158, 0, 0, 0,
	0, 837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2607, 0, 0, 0, 0, 116, 117, 0, 118,
	119, 857, 861, 863, 865, 867, 868, 870, 0, 875,
	871, 872, 873, 874, 0, 852, 853, 854, 855, 835,
	836, 858, 0, 838, 0, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 850, 856, 0, 0, 0,
	0, 0, 0, 0, 860, 862, 864, 866, 869, 0,
	0, 0, 116, 117, 0, 118, 119, 0, 0, 0,
	0, 0, 0, 0, 128, 152, 159, 0, 98, 969,
	968, 978, 979, 971, 972, 973, 974, 975, 976, 977,
	970, 851, 0, 0, 0, 0, 151, 145, 144, 0,
	0, 0, 0, 56, 0, 0, 0, 0, 0, 0,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1409, 1410, 1411, 1412, 1413, 1414, 1407, 1408, 0,
	128, 152, 159, 0, 98, 0, 0, 1402, 0, 0,
	0, 0, 0, 1399, 2140, 0, 0, 1401, 1398, 1400,
	1404, 1405, 151, 145, 144, 1403, 0, 0, 0, 56,
	0, 0, 0, 0, 147, 148, 149, 0, 969, 968,
	978, 979, 971, 972, 973, 974, 975, 976, 977, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 2695, 0,
	0, 0, 0, 0, 0, 2697, 0, 0, 0, 0,
	108, 0, 0, 0, 150, 0, 109, 0, 0, 0,
	147, 148, 149, 0, 2149, 2150, 0, 0, 0, 981,
	0, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 156, 982, 984, 980,
	0, 983, 969, 968, 978, 979, 971, 972, 973, 974,
	975, 976, 977, 970, 2480, 0, 108, 0, 0, 0,
	150, 0, 109, 110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 0, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1409, 1410, 1411,
	1412, 1413, 1414, 1407, 1408, 0, 114, 0, 0, 114,
	114, 0, 114, 0, 0, 0, 0, 969, 968, 978,
	979, 971, 972, 973, 974, 975, 976, 977, 970, 110,
	0, 0, 0, 51, 0, 0, 0, 0, 0, 0,
	49, 0, 0, 0, 0, 0, 0, 0, 790, 0,
	0, 0, 0, 0, 0, 790, 859, 0, 0, 1469,
	0, 0, 0, 0, 114, 0, 130, 1774, 0, 0,
	1469, 0, 0, 2803, 0, 362, 2805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 0, 51,
	2810, 969, 968, 978, 979, 971, 972, 973, 974, 975,
	976, 977, 970, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 130, 0, 111, 38, 0, 354, 309, 0,
	0, 48, 5, 0, 0, 115, 0, 0, 0, 0,
	986, 0, 0, 0, 0, 1021, 0, 0, 183, 0,
	0, 547, 557, 0, 0, 248, 184, 0, 0, 0,
	548, 0, 556, 549, 553, 552, 550, 551, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 38, 0, 0, 0, 0, 0, 48, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 555, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 2954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 2971, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 1002, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 2041, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 1624, 0, 0, 0, 236, 410, 0, 0,
	0, 114, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	717, 0, 849, 0, 0, 0, 0, 0, 0, 0,
	756, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 3177, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	0, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 758, 0, 0, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 837, 0, 0, 0, 827, 0, 114, 0,
	743, 0, 0, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 857, 861, 863, 865, 867, 868, 870, 0,
	875, 871, 872, 873, 874, 0, 852, 853, 854, 855,
	835, 836, 858, 0, 838, 721, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 850, 856, 0, 0,
	0, 0, 0, 0, 0, 860, 862, 864, 866, 869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 742, 741,
	0, 0, 0, 0, 0, 1624, 1624, 1624, 1624, 0,
	0, 0, 0, 0, 0, 740, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 747, 0, 114, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 0, 0, 114, 0, 748, 752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 735, 739, 755,
	0, 0, 0, 736, 733, 732, 0, 738, 723, 724,
	722, 725, 726, 727, 728, 0, 753, 0, 754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 749,
	750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 745, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 570, 0, 0, 354, 309, 0, 0, 0,
	1624, 629, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 0, 114, 560, 606, 605, 547,
	557, 0, 0, 248, 184, 0, 0, 859, 548, 744,
	556, 549, 553, 552, 550, 551, 0, 621, 0, 0,
	0, 0, 0, 0, 519, 532, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 530, 0, 0, 0, 0, 580, 0, 531,
	0, 0, 575, 554, 558, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 555, 578, 582, 264, 643,
	576, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 644, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 0, 0, 0, 385, 0,
	0, 627, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 577, 0, 345, 327, 640, 520, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 114, 0, 0, 1430, 1429, 1431, 397,
	277, 231, 232, 435, 625, 323, 0, 0, 0, 0,
	639, 620, 622, 623, 626, 630, 631, 632, 633, 634,
	636, 638, 642, 434, 0, 0, 0, 0, 0, 433,
	329, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 355, 378, 390, 408, 411,
	0, 0, 0, 0, 236, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 581, 0, 0, 313, 314, 315,
	316, 628, 0, 253, 409, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 403, 276, 282, 421, 284, 252,
	328, 278, 387, 291, 0, 414, 0, 415, 0, 0,
	0, 0, 320, 287, 288, 352, 292, 298, 341, 386,
	326, 346, 250, 377, 353, 302, 0, 0, 650, 624,
	649, 651, 652, 648, 653, 654, 635, 538, 0, 585,
	646, 645, 647, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 296, 0,
	337, 275, 0, 0, 613, 590, 591, 592, 537, 593,
	588, 589, 614, 583, 610, 611, 562, 586, 594, 609,
	595, 612, 615, 616, 655, 656, 601, 657, 598, 617,
	608, 607, 596, 584, 618, 619, 569, 564, 599, 600,
	587, 602, 603, 604, 565, 566, 567, 568, 362, 579,
	0, 393, 394, 395, 417, 379, 0, 432, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 270, 1470, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 428, 0, 0, 570, 0, 0,
	354, 309, 0, 0, 0, 0, 629, 637, 0, 0,
	0, 0, 0, 0, 0, 1648, 0, 0, 528, 0,
	0, 560, 606, 605, 547, 557, 0, 0, 248, 184,
	0, 0, 0, 548, 0, 556, 549, 553, 552, 550,
	551, 0, 621, 0, 0, 0, 0, 0, 0, 519,
	532, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 0, 0,
	0, 0, 580, 0, 531, 0, 0, 1649, 554, 558,
	0, 0, 0, 0, 239, 359, 375, 249, 350, 388,
	254, 357, 244, 324, 347, 0, 0, 241, 373, 356,
	306, 289, 290, 240, 0, 342, 268, 281, 265, 322,
	555, 578, 582, 264, 643, 576, 383, 243, 0, 382,
	321, 369, 374, 307, 301, 242, 371, 305, 300, 293,
	272, 644, 285, 333, 299, 334, 286, 311, 310, 312,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	0, 0, 0, 385, 0, 0, 627, 0, 0, 0,
	358, 0, 0, 294, 0, 0, 0, 577, 0, 345,
	327, 640, 520, 0, 343, 297, 370, 335, 376, 360,
	384, 339, 336, 234, 361, 267, 308, 245, 247, 262,
	269, 271, 273, 274, 317, 318, 330, 349, 363, 364,
	365, 266, 255, 344, 256, 283, 257, 235, 259, 258,
	260, 351, 261, 237, 331, 368, 0, 279, 340, 304,
	238, 303, 332, 367, 366, 246, 392, 398, 399, 404,
	0, 405, 0, 0, 0, 413, 418, 419, 420, 422,
	423, 424, 425, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 397, 277, 231, 232, 435, 625,
	323, 0, 0, 0, 0, 639, 620, 622, 623, 626,
	630, 631, 632, 633, 634, 636, 638, 642, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 581,
	0, 0, 313, 314, 315, 316, 628, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 650, 624, 649, 651, 652, 648, 653,
	654, 635, 538, 0, 585, 646, 645, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 613,
	590, 591, 592, 537, 593, 588, 589, 614, 583, 610,
	611, 562, 586, 594, 609, 595, 612, 615, 616, 655,
	656, 601, 657, 598, 617, 608, 607, 596, 584, 618,
	619, 569, 564, 599, 600, 587, 602, 603, 604, 565,
	566, 567, 568, 161, 362, 579, 393, 394, 395, 417,
	379, 0, 432, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 270, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	428, 0, 0, 989, 0, 0, 354, 309, 0, 0,
	0, 0, 629, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 0, 0, 560, 606, 605,
	547, 557, 0, 0, 248, 184, 0, 0, 0, 548,
	0, 556, 549, 553, 552, 550, 551, 0, 621, 0,
	0, 0, 0, 0, 0, 519, 532, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 0, 0, 0, 0, 580, 0,
	531, 0, 0, 575, 554, 558, 0, 0, 0, 0,
	239, 359, 375, 249, 350, 388, 254, 357, 244, 324,
	347, 0, 0, 241, 373, 356, 306, 289, 290, 240,
	0, 342, 268, 281, 265, 322, 555, 578, 582, 264,
	643, 576, 383, 243, 0, 382, 321, 369, 374, 307,
	301, 242, 371, 305, 300, 293, 272, 644, 285, 333,
	299, 334, 286, 311, 310, 312, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 573, 0, 0, 0, 385,
	0, 0, 627, 0, 0, 0, 358, 0, 0, 294,
	0, 0, 0, 577, 0, 345, 327, 640, 520, 0,
	343, 297, 370, 335, 376, 360, 384, 339, 336, 234,
	361, 267, 308, 245, 247, 262, 269, 271, 273, 274,
	317, 318, 330, 349, 363, 364, 365, 266, 255, 344,
	256, 283, 257, 235, 259, 258, 260, 351, 261, 237,
	331, 368, 0, 279, 340, 304, 238, 303, 332, 367,
	366, 246, 392, 398, 399, 404, 0, 405, 0, 0,
	0, 413, 418, 419, 420, 422, 423, 424, 425, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	397, 277, 231, 232, 435, 625, 323, 0, 0, 0,
	0, 639, 620, 622, 623, 626, 630, 631, 632, 633,
	634, 636, 638, 642, 434, 0, 0, 0, 0, 0,
	433, 329, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 378, 390, 408,
	411, 0, 0, 0, 0, 236, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 581, 0, 0, 313, 314,
	315, 316, 628, 0, 253, 409, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 276, 282, 421, 284,
	252, 328, 278, 387, 291, 0, 414, 0, 415, 0,
	0, 0, 0, 320, 287, 288, 352, 292, 298, 341,
	386, 326, 346, 250, 377, 353, 302, 0, 0, 650,
	624, 649, 651, 652, 648, 653, 654, 635, 538, 0,
	585, 646, 645, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 296,
	130, 337, 275, 0, 0, 613, 590, 591, 592, 537,
	593, 588, 589, 614, 583, 610, 611, 562, 586, 594,
	609, 595, 612, 615, 616, 655, 656, 601, 657, 598,
	617, 608, 607, 596, 584, 618, 619, 569, 564, 599,
	600, 587, 602, 603, 604, 565, 566, 567, 568, 362,
	579, 0, 393, 394, 395, 417, 379, 0, 432, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 270, 3176, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 428, 0, 0, 570, 0,
	0, 354, 309, 0, 0, 0, 0, 629, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	0, 0, 560, 606, 605, 547, 557, 0, 0, 248,
	184, 0, 0, 0, 548, 0, 556, 549, 553, 552,
	550, 551, 0, 621, 0, 0, 0, 0, 0, 0,
	519, 532, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 0,
	0, 0, 0, 580, 0, 531, 0, 0, 575, 554,
	558, 0, 0, 0, 0, 239, 359, 375, 249, 350,
	388, 254, 357, 244, 324, 347, 0, 0, 241, 373,
	356, 306, 289, 290, 240, 0, 342, 268, 281, 265,
	322, 555, 578, 582, 264, 643, 576, 383, 243, 0,
	382, 321, 369, 374, 307, 301, 242, 371, 305, 300,
	293, 272, 644, 285, 333, 299, 334, 286, 311, 310,
	312, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	573, 0, 0, 0, 385, 0, 0, 627, 0, 0,
	0, 358, 0, 0, 294, 0, 0, 0, 577, 0,
	345, 327, 640, 520, 0, 343, 297, 370, 335, 376,
	360, 384, 339, 336, 234, 361, 267, 308, 245, 247,
	262, 269, 271, 273, 274, 317, 318, 330, 349, 363,
	364, 365, 266, 255, 344, 256, 283, 257, 235, 259,
	258, 260, 351, 261, 237, 331, 368, 0, 279, 340,
	304, 238, 303, 332, 367, 366, 246, 392, 398, 399,
	404, 0, 405, 0, 0, 0, 413, 418, 419, 420,
	422, 423, 424, 425, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 397, 277, 231, 232, 435,
	625, 323, 0, 0, 0, 0, 639, 620, 622, 623,
	626, 630, 631, 632, 633, 634, 636, 638, 642, 434,
	0, 0, 0, 0, 0, 433, 329, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 378, 390, 408, 411, 0, 0, 0, 0,
	236, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	581, 0, 0, 313, 314, 315, 316, 628, 0, 253,
	409, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	403, 276, 282, 421, 284, 252, 328, 278, 387, 291,
	0, 414, 0, 415, 0, 0, 0, 0, 320, 287,
	288, 352, 292, 298, 341, 386, 326, 346, 250, 377,
	353, 302, 0, 0, 650, 624, 649, 651, 652, 648,
	653, 654, 635, 538, 0, 585, 646, 645, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 296, 0, 337, 275, 0, 0,
	613, 590, 591, 592, 537, 593, 588, 589, 614, 583,
	610, 611, 562, 586, 594, 609, 595, 612, 615, 616,
	655, 656, 601, 657, 598, 617, 608, 607, 596, 584,
	618, 619, 569, 564, 599, 600, 587, 602, 603, 604,
	565, 566, 567, 568, 362, 579, 0, 393, 394, 395,
	417, 379, 0, 432, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 270, 1470, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	428, 0, 0, 570, 0, 0, 354, 309, 0, 0,
	0, 0, 629, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 0, 0, 560, 606, 605,
	547, 557, 0, 0, 248, 184, 0, 0, 0, 548,
	0, 556, 549, 553, 552, 550, 551, 0, 621, 0,
	0, 0, 0, 0, 0, 519, 532, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 0, 0, 0, 0, 580, 0,
	531, 0, 0, 575, 554, 558, 0, 0, 0, 0,
	239, 359, 375, 249, 350, 388, 254, 357, 244, 324,
	347, 0, 0, 241, 373, 356, 306, 289, 290, 240,
	0, 342, 268, 281, 265, 322, 555, 578, 582, 264,
	643, 576, 383, 243, 0, 382, 321, 369, 374, 307,
	301, 242, 371, 305, 300, 293, 272, 644, 285, 333,
	299, 334, 286, 311, 310, 312, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 573, 0, 0, 0, 385,
	0, 0, 627, 0, 0, 0, 358, 0, 0, 294,
	0, 0, 0, 577, 0, 345, 327, 640, 520, 0,
	343, 297, 370, 335, 376, 360, 384, 339, 336, 234,
	361, 267, 308, 245, 247, 262, 269, 271, 273, 274,
	317, 318, 330, 349, 363, 364, 365, 266, 255, 344,
	256, 283, 257, 235, 259, 258, 260, 351, 261, 237,
	331, 368, 0, 279, 340, 304, 238, 303, 332, 367,
	366, 246, 392, 398, 399, 404, 0, 405, 0, 0,
	0, 413, 418, 419, 420, 422, 423, 424, 425, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	397, 277, 231, 232, 435, 625, 323, 0, 0, 0,
	0, 639, 620, 622, 623, 626, 630, 631, 632, 633,
	634, 636, 638, 642, 434, 0, 0, 0, 0, 0,
	433, 329, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 378, 390, 408,
	411, 0, 0, 0, 0, 236, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 581, 0, 0, 313, 314,
	315, 316, 628, 0, 253, 409, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 276, 282, 421, 284,
	252, 328, 278, 387, 291, 0, 414, 0, 415, 0,
	0, 0, 0, 320, 287, 288, 352, 292, 298, 341,
	386, 326, 346, 250, 377, 353, 302, 0, 0, 650,
	624, 649, 651, 652, 648, 653, 654, 635, 538, 0,
	585, 646, 645, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 296,
	0, 337, 275, 0, 0, 613, 590, 591, 592, 537,
	593, 588, 589, 614, 583, 610, 611, 562, 586, 594,
	609, 595, 612, 615, 616, 655, 656, 601, 657, 598,
	617, 608, 607, 596, 584, 618, 619, 569, 564, 599,
	600, 587, 602, 603, 604, 565, 566, 567, 568, 362,
	579, 0, 393, 394, 395, 417, 379, 0, 432, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 270, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 428, 0, 0, 570, 0,
	0, 354, 309, 0, 0, 0, 0, 629, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	0, 0, 560, 606, 605, 547, 557, 0, 0, 248,
	184, 0, 0, 0, 548, 0, 556, 549, 553, 552,
	550, 551, 0, 621, 0, 0, 0, 0, 0, 0,
	519, 532, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 1225,
	0, 0, 0, 580, 0, 531, 0, 0, 575, 554,
	558, 0, 0, 0, 0, 239, 359, 375, 249, 350,
	388, 254, 357, 244, 324, 347, 0, 0, 241, 373,
	356, 306, 289, 290, 240, 0, 342, 268, 281, 265,
	322, 555, 578, 582, 264, 643, 576, 383, 243, 0,
	382, 321, 369, 374, 307, 301, 242, 371, 305, 300,
	293, 272, 644, 285, 333, 299, 334, 286, 311, 310,
	312, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	573, 0, 0, 0, 385, 0, 0, 627, 0, 0,
	0, 358, 0, 0, 294, 0, 0, 0, 577, 0,
	345, 327, 640, 520, 0, 343, 297, 370, 335, 376,
	360, 384, 339, 336, 234, 361, 267, 308, 245, 247,
	262, 269, 271, 273, 274, 317, 318, 330, 349, 363,
	364, 365, 266, 255, 344, 256, 283, 257, 235, 259,
	258, 260, 351, 261, 237, 331, 368, 0, 279, 340,
	304, 238, 303, 332, 367, 366, 246, 392, 398, 399,
	404, 0, 405, 0, 0, 0, 413, 418, 419, 420,
	422, 423, 424, 425, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 397, 277, 231, 232, 435,
	625, 323, 0, 0, 0, 0, 639, 620, 622, 623,
	626, 630, 631, 632, 633, 634, 636, 638, 642, 434,
	0, 0, 0, 0, 0, 433, 329, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 378, 390, 408, 411, 0, 0, 0, 0,
	236, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	581, 0, 0, 313, 314, 315, 316, 628, 0, 253,
	409, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	403, 276, 282, 421, 284, 252, 328, 278, 387, 291,
	0, 414, 0, 415, 0, 0, 0, 0, 320, 287,
	288, 352, 292, 298, 341, 386, 326, 346, 250, 377,
	353, 302, 0, 0, 650, 624, 649, 651, 652, 648,
	653, 654, 635, 538, 0, 585, 646, 645, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 296, 0, 337, 275, 0, 0,
	613, 590, 591, 592, 537, 593, 588, 589, 614, 583,
	610, 611, 562, 586, 594, 609, 595, 612, 615, 616,
	655, 656, 601, 657, 598, 617, 608, 607, 596, 584,
	618, 619, 569, 564, 599, 600, 587, 602, 603, 604,
	565, 566, 567, 568, 0, 0, 0, 393, 394, 395,
	417, 379, 0, 432, 362, 579, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 270, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	428, 0, 0, 570, 0, 0, 354, 309, 0, 0,
	0, 0, 629, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 0, 0, 560, 606, 605,
	547, 557, 0, 0, 248, 184, 0, 0, 0, 548,
	0, 556, 549, 553, 552, 550, 551, 0, 621, 0,
	0, 0, 0, 0, 0, 519, 532, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 0, 0, 0, 0, 580, 0,
	531, 0, 0, 575, 554, 558, 0, 0, 0, 0,
	239, 359, 375, 249, 350, 388, 254, 357, 244, 324,
	347, 0, 0, 241, 373, 356, 306, 289, 290, 240,
	0, 342, 268, 281, 265, 322, 555, 578, 582, 264,
	643, 576, 383, 243, 0, 382, 321, 369, 374, 307,
	301, 242, 371, 305, 300, 293, 272, 644, 285, 333,
	299, 334, 286, 311, 310, 312, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 573, 0, 0, 0, 385,
	0, 0, 627, 0, 0, 0, 358, 0, 0, 294,
	0, 0, 0, 577, 0, 345, 327, 640, 520, 0,
	343, 297, 370, 335, 376, 360, 384, 339, 336, 234,
	361, 267, 308, 245, 247, 262, 269, 271, 273, 274,
	317, 318, 330, 349, 363, 364, 365, 266, 255, 344,
	256, 283, 257, 235, 259, 258, 260, 351, 261, 237,
	331, 368, 0, 279, 340, 304, 238, 303, 332, 367,
	366, 246, 392, 398, 399, 404, 0, 405, 0, 0,
	0, 413, 418, 419, 420, 422, 423, 424, 425, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	397, 277, 231, 232, 435, 625, 323, 0, 0, 0,
	0, 639, 620, 622, 623, 626, 630, 631, 632, 633,
	634, 636, 638, 642, 434, 0, 0, 0, 0, 0,
	433, 329, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 378, 390, 408,
	411, 0, 0, 0, 0, 236, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 581, 0, 0, 313, 314,
	315, 316, 628, 0, 253, 409, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 276, 282, 421, 284,
	252, 328, 278, 387, 291, 0, 414, 0, 415, 0,
	0, 0, 0, 320, 287, 288, 352, 292, 298, 341,
	386, 326, 346, 250, 377, 353, 302, 0, 0, 650,
	624, 649, 651, 652, 648, 653, 654, 635, 538, 0,
	585, 646, 645, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 296,
	0, 337, 275, 0, 0, 613, 590, 591, 592, 537,
	593, 588, 589, 614, 583, 610, 611, 562, 586, 594,
	609, 595, 612, 615, 616, 655, 656, 601, 657, 598,
	617, 608, 607, 596, 584, 618, 619, 569, 564, 599,
	600, 587, 602, 603, 604, 565, 566, 567, 568, 362,
	579, 0, 393, 394, 395, 417, 379, 0, 432, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 270, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 428, 0, 0, 570, 0,
	0, 354, 309, 0, 0, 0, 0, 629, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	0, 0, 560, 606, 605, 547, 557, 0, 0, 248,
	184, 0, 0, 0, 548, 0, 556, 549, 553, 552,
	550, 551, 0, 621, 0, 0, 0, 0, 0, 0,
	519, 532, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 0,
	0, 0, 0, 580, 0, 531, 0, 0, 575, 554,
	558, 0, 0, 0, 0, 239, 359, 375, 249, 350,
	388, 254, 357, 244, 324, 347, 0, 0, 241, 373,
	356, 306, 289, 290, 240, 0, 342, 268, 281, 265,
	322, 555, 578, 582, 264, 643, 576, 383, 243, 0,
	382, 321, 369, 374, 307, 301, 242, 371, 305, 300,
	293, 272, 644, 285, 333, 299, 334, 286, 311, 310,
	312, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	573, 0, 0, 0, 385, 0, 0, 627, 0, 0,
	0, 358, 0, 0, 294, 0, 0, 0, 577, 0,
	345, 327, 640, 520, 0, 343, 297, 370, 335, 376,
	360, 384, 339, 336, 234, 361, 267, 308, 245, 247,
	262, 269, 271, 273, 274, 317, 318, 330, 349, 363,
	364, 365, 266, 255, 344, 256, 283, 257, 235, 259,
	258, 260, 351, 261, 237, 331, 368, 0, 279, 340,
	304, 238, 303, 332, 367, 366, 246, 392, 398, 399,
	404, 0, 405, 0, 0, 0, 413, 418, 419, 420,
	422, 423, 424, 425, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 397, 277, 231, 232, 435,
	625, 323, 0, 0, 0, 0, 639, 620, 622, 623,
	626, 630, 631, 632, 633, 634, 636, 638, 642, 434,
	0, 0, 0, 0, 0, 433, 329, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 378, 390, 408, 411, 0, 0, 0, 0,
	236, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	581, 0, 0, 313, 314, 315, 316, 628, 0, 253,
	409, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	403, 276, 282, 421, 284, 252, 328, 278, 387, 291,
	0, 414, 0, 415, 0, 0, 0, 0, 320, 287,
	288, 352, 292, 298, 341, 386, 326, 346, 250, 377,
	353, 302, 0, 0, 650, 624, 649, 651, 652, 648,
	653, 654, 635, 538, 0, 585, 646, 645, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 296, 0, 337, 275, 0, 0,
	613, 590, 591, 592, 537, 593, 588, 589, 614, 583,
	610, 611, 562, 586, 594, 609, 595, 612, 615, 616,
	655, 656, 601, 657, 598, 617, 608, 607, 596, 584,
	618, 619, 569, 564, 599, 600, 587, 602, 603, 604,
	565, 566, 567, 568, 362, 579, 0, 393, 394, 395,
	417, 379, 0, 432, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 0, 0, 0, 535, 0,
	0, 0, 270, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	428, 0, 0, 570, 0, 0, 354, 309, 0, 0,
	0, 0, 629, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 0, 0, 560, 606, 605,
	547, 557, 0, 0, 248, 184, 0, 0, 0, 548,
	0, 556, 549, 553, 552, 550, 551, 0, 621, 0,
	0, 0, 0, 0, 0, 0, 532, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 0, 0, 0, 0, 580, 0,
	531, 0, 0, 575, 554, 558, 0, 0, 0, 0,
	239, 359, 375, 249, 350, 388, 254, 357, 244, 324,
	347, 0, 0, 241, 373, 356, 306, 289, 290, 240,
	0, 342, 268, 281, 265, 322, 555, 578, 582, 264,
	643, 576, 383, 243, 0, 382, 321, 369, 374, 307,
	301, 242, 371, 305, 300, 293, 272, 644, 285, 333,
	299, 334, 286, 311, 310, 312, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 573, 0, 0, 0, 385,
	0, 0, 627, 0, 0, 0, 358, 0, 0, 294,
	0, 0, 0, 577, 0, 345, 327, 640, 0, 0,
	343, 297, 370, 335, 376, 360, 384, 339, 336, 234,
	361, 267, 308, 245, 247, 262, 269, 271, 273, 274,
	317, 318, 330, 349, 363, 364, 365, 266, 255, 344,
	256, 283, 257, 235, 259, 258, 260, 351, 261, 237,
	331, 368, 0, 279, 340, 304, 238, 303, 332, 367,
	366, 246, 392, 1350, 1351, 404, 0, 405, 0, 0,
	0, 413, 418, 419, 420, 422, 423, 424, 425, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	397, 277, 231, 232, 435, 625, 323, 0, 0, 0,
	0, 639, 620, 622, 623, 626, 630, 631, 632, 633,
	634, 636, 638, 642, 434, 0, 0, 0, 0, 0,
	433, 329, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 378, 390, 408,
	411, 0, 0, 0, 0, 236, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 581, 0, 0, 313, 314,
	315, 316, 628, 0, 253, 409, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 276, 282, 421, 284,
	252, 328, 278, 387, 291, 0, 414, 0, 415, 0,
	0, 0, 0, 320, 287, 288, 352, 292, 298, 341,
	386, 326, 346, 250, 377, 353, 302, 0, 0, 650,
	624, 649, 651, 652, 648, 653, 654, 635, 538, 0,
	585, 646, 645, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 296,
	0, 337, 275, 0, 0, 613, 590, 591, 592, 537,
	593, 588, 589, 614, 583, 610, 611, 562, 586, 594,
	609, 595, 612, 615, 616, 655, 656, 601, 657, 598,
	617, 608, 607, 596, 584, 618, 619, 569, 564, 599,
	600, 587, 602, 603, 604, 565, 566, 567, 568, 362,
	579, 0, 393, 394, 395, 417, 379, 0, 432, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 270, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 428, 0, 0, 570, 0,
	0, 354, 309, 0, 0, 0, 0, 629, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 606, 605, 547, 557, 0, 0, 248,
	184, 0, 0, 0, 548, 0, 556, 549, 553, 552,
	550, 551, 0, 621, 0, 0, 0, 0, 0, 0,
	519, 532, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 0,
	0, 0, 0, 580, 0, 531, 0, 0, 575, 554,
	558, 0, 0, 0, 0, 239, 359, 375, 249, 350,
	388, 254, 357, 244, 324, 347, 0, 0, 241, 373,
	356, 306, 289, 290, 240, 0, 342, 268, 281, 265,
	322, 555, 578, 582, 264, 643, 576, 383, 243, 0,
	382, 321, 369, 374, 307, 301, 242, 371, 305, 300,
	293, 272, 644, 285, 333, 299, 334, 286, 311, 310,
	312, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	573, 0, 0, 0, 385, 0, 0, 627, 0, 0,
	0, 358, 0, 0, 294, 0, 0, 0, 577, 0,
	345, 327, 640, 520, 0, 343, 297, 370, 335, 376,
	360, 384, 339, 336, 234, 361, 267, 308, 245, 247,
	262, 269, 271, 273, 274, 317, 318, 330, 349, 363,
	364, 365, 266, 255, 344, 256, 283, 257, 235, 259,
	258, 260, 351, 261, 237, 331, 368, 0, 279, 340,
	304, 238, 303, 332, 367, 366, 246, 392, 398, 399,
	404, 0, 405, 0, 0, 0, 413, 418, 419, 420,
	422, 423, 424, 425, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 397, 277, 231, 232, 435,
	625, 323, 0, 0, 0, 0, 639, 620, 622, 623,
	626, 630, 631, 632, 633, 634, 636, 638, 642, 434,
	0, 0, 0, 0, 0, 433, 329, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 378, 390, 408, 411, 0, 0, 0, 0,
	236, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	581, 0, 0, 313, 314, 315, 316, 628, 0, 253,
	409, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	403, 276, 282, 421, 284, 252, 328, 278, 387, 291,
	0, 414, 0, 415, 0, 0, 0, 0, 320, 287,
	288, 352, 292, 298, 341, 386, 326, 346, 250, 377,
	353, 302, 0, 0, 650, 624, 649, 651, 652, 648,
	653, 654, 635, 538, 0, 585, 646, 645, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 296, 0, 337, 275, 0, 0,
	613, 590, 591, 592, 537, 593, 588, 589, 614, 583,
	610, 611, 562, 586, 594, 609, 595, 612, 615, 616,
	655, 656, 601, 657, 598, 617, 608, 607, 596, 584,
	618, 619, 569, 564, 599, 600, 587, 602, 603, 604,
	565, 566, 567, 568, 362, 579, 0, 393, 394, 395,
	417, 379, 0, 432, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 270, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	428, 0, 0, 570, 0, 0, 354, 309, 0, 0,
	0, 0, 629, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 0, 0, 560, 606, 605,
	547, 557, 0, 0, 248, 184, 0, 0, 0, 548,
	0, 556, 549, 553, 552, 550, 551, 0, 621, 0,
	0, 0, 0, 0, 0, 0, 532, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 0, 0, 0, 0, 580, 0,
	531, 0, 0, 575, 554, 558, 0, 0, 0, 0,
	239, 359, 375, 249, 350, 388, 254, 357, 244, 324,
	347, 0, 0, 241, 373, 356, 306, 289, 290, 240,
	0, 342, 268, 281, 265, 322, 555, 578, 582, 264,
	643, 576, 383, 243, 0, 382, 321, 369, 374, 307,
	301, 242, 371, 305, 300, 293, 272, 644, 285, 333,
	299, 334, 286, 311, 310, 312, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 573, 0, 0, 0, 385,
	0, 0, 627, 0, 0, 0, 358, 0, 0, 294,
	0, 0, 0, 577, 0, 345, 327, 640, 0, 0,
	343, 297, 370, 335, 376, 360, 384, 339, 336, 234,
	361, 267, 308, 245, 247, 262, 269, 271, 273, 274,
	317, 318, 330, 349, 363, 364, 365, 266, 255, 344,
	256, 283, 257, 235, 259, 258, 260, 351, 261, 237,
	331, 368, 0, 279, 340, 304, 238, 303, 332, 367,
	366, 246, 392, 398, 399, 404, 0, 405, 0, 0,
	0, 413, 418, 419, 420, 422, 423, 424, 425, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	397, 277, 231, 232, 435, 625, 323, 0, 0, 0,
	0, 639, 620, 622, 623, 626, 630, 631, 632, 633,
	634, 636, 638, 642, 434, 0, 0, 0, 0, 0,
	433, 329, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 378, 390, 408,
	411, 0, 0, 0, 0, 236, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 581, 0, 0, 313, 314,
	315, 316, 628, 0, 253, 409, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 276, 282, 421, 284,
	252, 328, 278, 387, 291, 0, 414, 0, 415, 0,
	0, 0, 0, 320, 287, 288, 352, 292, 298, 341,
	386, 326, 346, 250, 377, 353, 302, 0, 0, 650,
	624, 649, 651, 652, 648, 653, 654, 635, 538, 0,
	585, 646, 645, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 296,
	0, 337, 275, 0, 0, 613, 590, 591, 592, 537,
	593, 588, 589, 614, 583, 610, 611, 562, 586, 594,
	609, 595, 612, 615, 616, 655, 656, 601, 657, 598,
	617, 608, 607, 596, 584, 618, 619, 569, 564, 599,
	600, 587, 602, 603, 604, 565, 566, 567, 568, 0,
	0, 0, 393, 394, 395, 417, 379, 0, 432, 161,
	362, 50, 153, 129, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 146, 0, 270, 0,
	155, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 112,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	158, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 128, 152, 159, 0, 98, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 176, 0,
	0, 0, 358, 0, 0, 294, 151, 145, 144, 401,
	0, 345, 327, 56, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 147, 148, 149, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	380, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 179, 0, 0, 426,
	187, 0, 0, 0, 150, 0, 188, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 130, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 0, 0, 0, 393, 394,
	395, 417, 379, 0, 189, 38, 177, 180, 182, 181,
	0, 48, 5, 0, 0, 115, 161, 362, 50, 153,
	129, 0, 0, 0, 0, 0, 0, 0, 325, 452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 0, 0, 0, 354,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 248, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 359, 375, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 0,
	372, 400, 264, 391, 0, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	416, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 358,
	0, 0, 294, 0, 0, 0, 401, 0, 345, 327,
	0, 0, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 0, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 263, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 396, 0, 0, 0, 426, 434, 0, 0,
	0, 0, 0, 433, 329, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 355,
	378, 390, 408, 411, 0, 0, 0, 0, 236, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 406, 0,
	0, 313, 314, 315, 316, 453, 455, 253, 409, 338,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 403, 276,
	282, 421, 284, 252, 328, 278, 387, 291, 0, 414,
	0, 415, 0, 0, 0, 0, 320, 287, 288, 352,
	292, 298, 341, 386, 326, 346, 250, 377, 353, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 296, 130, 337, 275, 0, 0, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	0, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 0, 0, 0, 227, 228,
	229, 230, 362, 0, 0, 393, 394, 395, 417, 379,
	0, 432, 0, 325, 0, 0, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 0, 428, 0,
	0, 0, 0, 0, 354, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 248, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 837, 0, 0, 0, 0, 0, 0, 239, 359,
	375, 249, 350, 388, 254, 357, 244, 324, 347, 0,
	0, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 0, 1888,
	1884, 1885, 1886, 1887, 0, 1871, 1872, 1873, 1874, 835,
	1857, 1877, 0, 1858, 321, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1875, 333, 299, 334,
	286, 311, 310, 312, 860, 862, 864, 866, 869, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 0, 358, 0, 0, 294, 0, 0,
	0, 1870, 0, 345, 327, 0, 0, 0, 343, 297,
	370, 335, 376, 360, 384, 339, 336, 234, 361, 267,
	308, 245, 247, 262, 269, 271, 273, 274, 317, 318,
	330, 349, 363, 364, 365, 266, 255, 344, 256, 283,
	257, 235, 259, 258, 260, 351, 261, 237, 331, 368,
	0, 279, 340, 304, 238, 303, 332, 367, 366, 246,
	392, 398, 399, 404, 0, 405, 0, 0, 0, 413,
	418, 419, 420, 422, 423, 424, 425, 0, 0, 0,
	0, 407, 0, 0, 0, 0, 0, 0, 397, 277,
	231, 232, 435, 263, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 396, 0, 0,
	0, 426, 434, 0, 0, 0, 0, 0, 433, 329,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 355, 378, 390, 408, 411, 0,
	0, 0, 0, 236, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 406, 0, 0, 313, 314, 315, 316,
	280, 0, 253, 409, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 276, 282, 421, 284, 252, 328,
	278, 387, 291, 0, 414, 0, 415, 0, 0, 0,
	0, 320, 287, 288, 352, 292, 298, 341, 386, 326,
	346, 250, 377, 353, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 859, 296, 0, 337,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 362, 0, 0,
	393, 394, 395, 417, 379, 0, 432, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 0, 0, 0, 354,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 248, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 1949, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 359, 375, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 0,
	372, 400, 264, 391, 0, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	416, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 385, 0, 0, 0, 1948, 1939, 1947, 358,
	1945, 1950, 294, 0, 0, 0, 401, 0, 345, 327,
	0, 0, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 1951, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 263, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 396, 0, 0, 0, 426, 434, 0, 0,
	0, 0, 0, 433, 329, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 355,
	378, 390, 408, 411, 0, 0, 0, 0, 236, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 406, 0,
	0, 313, 314, 315, 316, 280, 0, 253, 409, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 403, 276,
	282, 421, 284, 252, 328, 278, 387, 291, 0, 414,
	0, 415, 0, 0, 0, 0, 320, 287, 288, 352,
	292, 298, 341, 386, 326, 346, 250, 377, 353, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 296, 0, 337, 275, 0, 0, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	0, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 0, 0, 0, 227, 228,
	229, 230, 362, 0, 0, 393, 394, 395, 417, 379,
	0, 432, 0, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 0, 428, 0,
	0, 0, 0, 0, 354, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 248, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 1949, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 359,
	375, 249, 350, 388, 254, 357, 244, 324, 347, 0,
	0, 241, 373, 356, 306, 289, 290, 240, 0, 342,
	268, 281, 265, 322, 0, 372, 400, 264, 391, 0,
	383, 243, 0, 382, 321, 369, 374, 307, 301, 242,
	371, 305, 300, 293, 272, 416, 285, 333, 299, 334,
	286, 311, 310, 312, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 385, 0, 0,
	0, 1948, 0, 1947, 358, 1945, 1950, 294, 0, 0,
	0, 401, 0, 345, 327, 0, 0, 0, 343, 297,
	370, 335, 376, 360, 384, 339, 336, 234, 361, 267,
	308, 245, 247, 262, 269, 271, 273, 274, 317, 318,
	330, 349, 363, 364, 365, 266, 255, 344, 256, 283,
	257, 235, 259, 258, 260, 351, 261, 237, 331, 368,
	1951, 279, 340, 304, 238, 303, 332, 367, 366, 246,
	392, 398, 399, 404, 0, 405, 0, 0, 0, 413,
	418, 419, 420, 422, 423, 424, 425, 0, 0, 0,
	0, 407, 0, 0, 0, 0, 0, 0, 397, 277,
	231, 232, 435, 263, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 396, 0, 0,
	0, 426, 434, 0, 0, 0, 0, 0, 433, 329,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 355, 378, 390, 408, 411, 0,
	0, 0, 0, 236, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 406, 0, 0, 313, 314, 315, 316,
	280, 0, 253, 409, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 276, 282, 421, 284, 252, 328,
	278, 387, 291, 0, 414, 0, 415, 0, 0, 0,
	0, 320, 287, 288, 352, 292, 298, 341, 386, 326,
	346, 250, 377, 353, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 296, 0, 337,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 362, 0, 0,
	393, 394, 395, 417, 379, 0, 432, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1682, 0, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 0, 0, 0, 354,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 1683, 0, 0, 0, 248, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 955, 956, 957, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 359, 375, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 0,
	372, 400, 264, 391, 0, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	416, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 358,
	0, 0, 294, 0, 0, 0, 401, 0, 345, 327,
	0, 0, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 0, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 263, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 396, 0, 0, 0, 426, 434, 0, 0,
	0, 0, 0, 433, 329, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 355,
	378, 390, 408, 411, 0, 0, 0, 0, 236, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 406, 0,
	0, 313, 314, 315, 316, 280, 0, 253, 409, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 403, 276,
	282, 421, 284, 252, 328, 278, 387, 291, 0, 414,
	0, 415, 0, 0, 0, 0, 320, 287, 288, 352,
	292, 298, 341, 386, 326, 346, 250, 377, 353, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 296, 0, 337, 275, 0, 0, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	0, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 0, 0, 0, 227, 228,
	229, 230, 362, 0, 0, 393, 394, 395, 417, 379,
	0, 432, 0, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 772, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 0, 428, 0,
	0, 0, 0, 0, 354, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 779, 780, 0, 0,
	0, 0, 248, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 359,
	767, 249, 350, 388, 254, 357, 244, 324, 347, 0,
	0, 241, 373, 356, 306, 289, 290, 240, 0, 342,
	268, 281, 265, 322, 0, 372, 400, 264, 391, 758,
	383, 243, 757, 382, 321, 369, 374, 307, 301, 242,
	371, 305, 300, 293, 272, 416, 285, 333, 299, 334,
	286, 311, 310, 312, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 0, 358, 0, 0, 294, 0, 0,
	0, 401, 0, 345, 327, 0, 0, 0, 343, 297,
	370, 335, 376, 360, 384, 770, 336, 234, 361, 267,
	308, 245, 247, 262, 269, 271, 273, 274, 317, 318,
	330, 349, 363, 364, 365, 266, 255, 344, 256, 283,
	257, 235, 259, 258, 260, 351, 261, 237, 331, 368,
	0, 279, 340, 304, 238, 303, 332, 367, 366, 246,
	392, 398, 399, 404, 0, 405, 0, 0, 0, 413,
	418, 419, 420, 422, 423, 424, 425, 0, 0, 0,
	0, 407, 0, 0, 0, 0, 0, 0, 397, 277,
	231, 232, 435, 263, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 396, 0, 0,
	0, 426, 434, 0, 0, 0, 0, 0, 433, 329,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 355, 378, 390, 408, 411, 0,
	0, 0, 0, 236, 410, 0, 0, 0, 0, 0,
	0, 771, 0, 381, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 774, 0, 0, 313, 314, 315, 316,
	280, 0, 253, 409, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 276, 282, 421, 284, 252, 328,
	278, 387, 291, 0, 414, 0, 415, 0, 0, 0,
	0, 781, 768, 777, 769, 292, 298, 341, 386, 326,
	346, 250, 377, 353, 778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 296, 0, 337,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 362, 0, 0,
	393, 394, 395, 417, 379, 0, 432, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 0, 0, 0, 354,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 248, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 359, 375, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 0,
	372, 400, 264, 391, 0, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	416, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 385, 0, 0, 0, 1972, 1970, 0, 358,
	0, 1971, 294, 0, 0, 0, 401, 0, 345, 327,
	0, 0, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 0, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 263, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 396, 0, 0, 0, 426, 434, 0, 0,
	0, 0, 0, 433, 329, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 355,
	378, 390, 408, 411, 0, 0, 0, 0, 236, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 406, 0,
	0, 313, 314, 315, 316, 280, 0, 253, 409, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 403, 276,
	282, 421, 284, 252, 328, 278, 387, 291, 0, 414,
	0, 415, 0, 0, 0, 0, 320, 287, 288, 352,
	292, 298, 341, 386, 326, 346, 250, 377, 353, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 296, 0, 337, 275, 0, 0, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	0, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 0, 0, 0, 227, 228,
	229, 230, 161, 362, 0, 393, 394, 395, 417, 379,
	0, 432, 0, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 112, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 1726, 0, 183, 0, 0, 0,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 396, 0,
	0, 0, 426, 434, 0, 0, 0, 0, 0, 433,
	329, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 355, 378, 390, 408, 411,
	0, 0, 0, 0, 236, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 406, 0, 0, 313, 314, 315,
	316, 280, 0, 253, 409, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 403, 276, 282, 421, 284, 252,
	328, 278, 387, 291, 0, 414, 0, 415, 0, 0,
	0, 0, 320, 287, 288, 352, 292, 298, 341, 386,
	326, 346, 250, 377, 353, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 296, 130,
	337, 275, 0, 0, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 0, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 0, 0, 0, 227, 228, 229, 230, 161, 362,
	0, 393, 394, 395, 417, 379, 0, 432, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 428, 0, 0, 112, 0,
	0, 354, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	1717, 0, 183, 0, 0, 0, 0, 0, 0, 248,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 359, 375, 249, 350,
	388, 254, 357, 244, 324, 347, 0, 0, 241, 373,
	356, 306, 289, 290, 240, 0, 342, 268, 281, 265,
	322, 0, 372, 400, 264, 391, 0, 383, 243, 0,
	382, 321, 369, 374, 307, 301, 242, 371, 305, 300,
	293, 272, 416, 285, 333, 299, 334, 286, 311, 310,
	312, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 358, 0, 0, 294, 0, 0, 0, 401, 0,
	345, 327, 0, 0, 0, 343, 297, 370, 335, 376,
	360, 384, 339, 336, 234, 361, 267, 308, 245, 247,
	262, 269, 271, 273, 274, 317, 318, 330, 349, 363,
	364, 365, 266, 255, 344, 256, 283, 257, 235, 259,
	258, 260, 351, 261, 237, 331, 368, 0, 279, 340,
	304, 238, 303, 332, 367, 366, 246, 392, 398, 399,
	404, 0, 405, 0, 0, 0, 413, 418, 419, 420,
	422, 423, 424, 425, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 397, 277, 231, 232, 435,
	263, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 396, 0, 0, 0, 426, 434,
	0, 0, 0, 0, 0, 433, 329, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 378, 390, 408, 411, 0, 0, 0, 0,
	236, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	406, 0, 0, 313, 314, 315, 316, 280, 0, 253,
	409, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	403, 276, 282, 421, 284, 252, 328, 278, 387, 291,
	0, 414, 0, 415, 0, 0, 0, 0, 320, 287,
	288, 352, 292, 298, 341, 386, 326, 346, 250, 377,
	353, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 296, 130, 337, 275, 0, 0,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 0, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 0, 0, 0,
	227, 228, 229, 230, 161, 362, 0, 393, 394, 395,
	417, 379, 0, 432, 0, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 112, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 130, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 779, 780, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 758, 383, 243,
	757, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 781,
	1641, 777, 1642, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 2357, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 2360, 0, 0, 2359, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 1198,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 1196, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1194,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 1192, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 1196, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1194, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3103, 0, 183, 606, 0, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 1196, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1194, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 1196, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2755,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 2039, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 2058,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 1196, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3185, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 606, 0, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3118, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 3051,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2859, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 2909,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1622, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 2515, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 1196, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 2039, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 2074, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 0, 0, 0, 393, 394,
	395, 417, 379, 362, 432, 0, 0, 1911, 0, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 0, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 396, 0,
	0, 0, 426, 434, 0, 0, 0, 0, 0, 433,
	329, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 355, 378, 390, 408, 411,
	0, 0, 0, 0, 236, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 406, 0, 0, 313, 314, 315,
	316, 280, 0, 253, 409, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 403, 276, 282, 421, 284, 252,
	328, 278, 387, 291, 0, 414, 0, 415, 0, 0,
	0, 0, 320, 287, 288, 352, 292, 298, 341, 386,
	326, 346, 250, 377, 353, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 296, 0,
	337, 275, 0, 0, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 0, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 0, 0, 0, 227, 228, 229, 230, 362, 0,
	0, 393, 394, 395, 417, 379, 0, 432, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 1609, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 428, 0, 0, 0, 0, 0,
	354, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 359, 375, 249, 350, 388,
	254, 357, 244, 324, 347, 0, 0, 241, 373, 356,
	306, 289, 290, 240, 0, 342, 268, 281, 265, 322,
	0, 372, 400, 264, 391, 0, 383, 243, 0, 382,
	321, 369, 374, 307, 301, 242, 371, 305, 300, 293,
	272, 416, 285, 333, 299, 334, 286, 311, 310, 312,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 0,
	358, 0, 0, 294, 0, 0, 0, 401, 0, 345,
	327, 0, 0, 0, 343, 297, 370, 335, 376, 360,
	384, 339, 336, 234, 361, 267, 308, 245, 247, 262,
	269, 271, 273, 274, 317, 318, 330, 349, 363, 364,
	365, 266, 255, 344, 256, 283, 257, 235, 259, 258,
	260, 351, 261, 237, 331, 368, 0, 279, 340, 304,
	238, 303, 332, 367, 366, 246, 392, 398, 399, 404,
	0, 405, 0, 0, 0, 413, 418, 419, 420, 422,
	423, 424, 425, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 397, 277, 231, 232, 435, 263,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 396, 0, 0, 0, 426, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 406,
	0, 0, 313, 314, 315, 316, 280, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 227,
	228, 229, 230, 362, 0, 0, 393, 394, 395, 417,
	379, 0, 432, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 0, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 1196,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 1523, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 396, 0,
	0, 0, 426, 434, 0, 0, 0, 0, 0, 433,
	329, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 355, 378, 390, 408, 411,
	0, 0, 0, 0, 236, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 406, 0, 0, 313, 314, 315,
	316, 280, 0, 253, 409, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 403, 276, 282, 421, 284, 252,
	328, 278, 387, 291, 0, 414, 0, 415, 0, 0,
	0, 0, 320, 287, 288, 352, 292, 298, 341, 386,
	326, 346, 250, 377, 353, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 296, 0,
	337, 275, 0, 0, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 0, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 0, 0, 0, 227, 228, 229, 230, 362, 0,
	0, 393, 394, 395, 417, 379, 0, 432, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 428, 0, 0, 0, 0, 0,
	354, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 359, 375, 249, 350, 388,
	254, 357, 244, 324, 347, 0, 0, 241, 373, 356,
	306, 289, 290, 240, 0, 342, 268, 281, 265, 322,
	0, 372, 400, 264, 391, 0, 383, 243, 0, 382,
	321, 369, 374, 307, 301, 242, 371, 305, 300, 293,
	272, 416, 285, 333, 299, 334, 286, 311, 310, 312,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 1220, 0, 0, 0,
	358, 0, 0, 294, 0, 0, 0, 401, 0, 345,
	327, 0, 0, 0, 343, 297, 370, 335, 376, 360,
	384, 339, 336, 234, 361, 267, 308, 245, 247, 262,
	269, 271, 273, 274, 317, 318, 330, 349, 363, 364,
	365, 266, 255, 344, 256, 283, 257, 235, 259, 258,
	260, 351, 261, 237, 331, 368, 0, 279, 340, 304,
	238, 303, 332, 367, 366, 246, 392, 398, 399, 404,
	0, 405, 0, 0, 0, 413, 418, 419, 420, 422,
	423, 424, 425, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 397, 277, 231, 232, 435, 263,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 396, 0, 0, 0, 426, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 406,
	0, 0, 313, 314, 315, 316, 280, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 227,
	228, 229, 230, 362, 0, 0, 393, 394, 395, 417,
	379, 0, 432, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 0, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 396, 0,
	0, 0, 426, 434, 0, 0, 0, 0, 0, 433,
	329, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 355, 378, 390, 408, 411,
	0, 0, 0, 0, 236, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 406, 0, 0, 313, 314, 315,
	316, 280, 0, 253, 409, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 403, 276, 282, 421, 284, 252,
	328, 278, 387, 291, 0, 414, 0, 415, 0, 0,
	0, 0, 320, 287, 288, 352, 292, 298, 341, 386,
	326, 346, 250, 377, 353, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 233, 0, 296, 0,
	337, 275, 0, 0, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 0, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 0, 0, 0, 227, 228, 229, 230, 362, 0,
	0, 393, 394, 395, 417, 379, 0, 432, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 428, 0, 0, 0, 0, 0,
	354, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 359, 375, 249, 350, 388,
	254, 357, 244, 324, 347, 0, 0, 241, 373, 356,
	306, 289, 290, 240, 0, 342, 268, 281, 265, 322,
	0, 372, 400, 264, 391, 0, 383, 243, 0, 382,
	321, 369, 374, 307, 301, 242, 371, 305, 300, 293,
	272, 416, 285, 333, 299, 334, 286, 311, 310, 312,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 0,
	358, 0, 0, 294, 0, 0, 0, 401, 0, 345,
	327, 0, 0, 0, 343, 297, 370, 335, 376, 360,
	384, 473, 336, 234, 361, 267, 308, 245, 247, 262,
	269, 271, 273, 274, 317, 318, 330, 349, 363, 364,
	365, 266, 255, 344, 256, 283, 257, 235, 259, 258,
	260, 351, 261, 237, 331, 368, 0, 279, 340, 304,
	238, 303, 332, 367, 366, 246, 392, 398, 399, 404,
	0, 405, 0, 0, 0, 413, 418, 419, 420, 422,
	423, 424, 425, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 397, 277, 231, 232, 435, 263,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 396, 0, 0, 0, 426, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 474, 0, 381,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 406,
	0, 0, 313, 314, 315, 316, 280, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 227,
	228, 229, 230, 362, 0, 0, 393, 394, 395, 417,
	379, 0, 432, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 0, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 396, 0,
	0, 0, 426, 434, 0, 0, 0, 0, 0, 433,
	329, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 355, 378, 390, 408, 411,
	0, 0, 0, 0, 236, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 406, 0, 0, 313, 314, 315,
	316, 280, 0, 253, 409, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 403, 276, 282, 421, 284, 252,
	328, 278, 387, 291, 0, 414, 0, 415, 0, 0,
	0, 0, 320, 287, 288, 352, 292, 298, 341, 386,
	326, 346, 250, 377, 353, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 296, 0,
	337, 275, 0, 0, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 0, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 0, 0, 0, 227, 228, 229, 230, 362, 0,
	0, 393, 394, 395, 417, 379, 0, 432, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 440, 270, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 428, 0, 0, 0, 0, 0,
	354, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 359, 375, 249, 350, 388,
	254, 357, 244, 324, 347, 0, 0, 241, 373, 356,
	306, 289, 290, 240, 0, 342, 268, 281, 265, 322,
	0, 372, 400, 264, 391, 0, 383, 243, 0, 382,
	321, 369, 374, 307, 301, 242, 371, 305, 300, 293,
	272, 416, 285, 333, 299, 334, 286, 311, 310, 312,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 0,
	358, 0, 0, 294, 0, 0, 0, 401, 0, 345,
	327, 0, 0, 0, 343, 297, 370, 335, 376, 360,
	384, 339, 336, 234, 361, 267, 308, 245, 247, 262,
	269, 271, 273, 274, 317, 318, 330, 349, 363, 364,
	365, 266, 255, 344, 256, 283, 257, 235, 259, 258,
	260, 351, 261, 237, 331, 368, 0, 279, 340, 304,
	238, 303, 332, 367, 366, 246, 392, 398, 399, 404,
	0, 405, 0, 0, 0, 413, 418, 419, 420, 422,
	423, 424, 425, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 397, 277, 231, 232, 435, 263,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 396, 0, 0, 0, 426, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 406,
	0, 0, 313, 314, 315, 316, 280, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 227,
	228, 229, 230, 362, 0, 0, 393, 394, 395, 417,
	379, 0, 432, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 0, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 396, 0,
	0, 0, 426, 434, 0, 0, 0, 0, 0, 433,
	329, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 355, 378, 390, 408, 411,
	0, 0, 0, 0, 236, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 406, 0, 0, 313, 314, 315,
	316, 280, 0, 253, 409, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 403, 276, 282, 421, 284, 252,
	328, 278, 387, 291, 0, 414, 0, 415, 0, 0,
	0, 0, 320, 287, 288, 352, 292, 298, 341, 386,
	326, 346, 250, 377, 353, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 296, 0,
	337, 275, 0, 0, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 0, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 0, 0, 0, 227, 228, 229, 230, 362, 0,
	0, 393, 394, 395, 417, 379, 0, 432, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 428, 0, 0, 0, 0, 0,
	354, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 359, 1176, 249, 350, 388,
	254, 357, 244, 324, 347, 0, 0, 241, 373, 356,
	306, 289, 290, 240, 0, 342, 268, 281, 265, 322,
	0, 372, 400, 264, 391, 0, 383, 243, 0, 382,
	321, 369, 374, 307, 301, 242, 371, 305, 300, 293,
	272, 416, 285, 333, 299, 334, 286, 311, 310, 312,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 0,
	358, 0, 0, 294, 0, 0, 0, 401, 0, 345,
	327, 0, 0, 0, 343, 297, 370, 335, 376, 360,
	384, 339, 336, 234, 361, 267, 308, 245, 247, 262,
	269, 271, 273, 274, 317, 318, 330, 349, 363, 364,
	365, 266, 255, 344, 256, 283, 257, 235, 259, 258,
	260, 351, 261, 237, 331, 368, 0, 279, 340, 304,
	238, 303, 332, 367, 366, 246, 392, 398, 399, 404,
	0, 405, 0, 0, 0, 413, 418, 419, 420, 422,
	423, 424, 425, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 397, 277, 231, 232, 435, 263,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 396, 0, 0, 0, 426, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 406,
	0, 0, 313, 314, 315, 316, 280, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 227,
	228, 229, 230, 362, 0, 0, 393, 394, 395, 417,
	379, 0, 432, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 0, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	359, 1174, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 396, 0,
	0, 0, 426, 434, 0, 0, 0, 0, 0, 433,
	329, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 355, 378, 390, 408, 411,
	0, 0, 0, 0, 236, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 406, 0, 0, 313, 314, 315,
	316, 280, 0, 253, 409, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 403, 276, 282, 421, 284, 252,
	328, 278, 387, 291, 0, 414, 0, 415, 0, 0,
	0, 0, 320, 287, 288, 352, 292, 298, 341, 386,
	326, 346, 250, 377, 353, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 296, 0,
	337, 275, 0, 0, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 0, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 0, 0, 0, 227, 228, 229, 230, 362, 0,
	0, 393, 394, 395, 417, 379, 0, 432, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 428, 0, 0, 0, 0, 0,
	354, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 359, 375, 249, 350, 388,
	254, 357, 244, 324, 347, 0, 0, 241, 373, 356,
	306, 289, 290, 240, 0, 342, 268, 281, 265, 322,
	0, 372, 400, 264, 391, 0, 383, 243, 0, 382,
	321, 369, 374, 307, 301, 242, 371, 305, 300, 293,
	272, 416, 285, 333, 299, 334, 286, 311, 310, 312,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 0,
	358, 0, 0, 294, 0, 0, 0, 401, 0, 345,
	327, 0, 0, 0, 343, 297, 370, 335, 376, 360,
	384, 339, 336, 234, 361, 267, 308, 245, 247, 514,
	269, 271, 273, 274, 317, 318, 330, 349, 363, 364,
	365, 266, 255, 344, 256, 283, 257, 235, 259, 258,
	260, 351, 261, 237, 331, 368, 0, 279, 340, 304,
	238, 303, 332, 367, 366, 246, 392, 398, 399, 404,
	0, 405, 0, 0, 0, 413, 418, 419, 420, 422,
	423, 424, 425, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 397, 277, 231, 232, 435, 263,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 396, 0, 0, 0, 426, 434, 0,
	0, 0, 0, 0, 433, 329, 1597, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	1599, 1568, 0, 389, 0, 0, 0, 0, 0, 406,
	1600, 1601, 313, 314, 315, 316, 280, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1567, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 1574, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 1590, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 227,
	228, 229, 230, 0, 0, 0, 393, 394, 395, 417,
	379, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1559, 1560, 1558, 0,
	1555, 0, 0, 0, 0, 1578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 1572, 1606, 0, 0,
	1573, 1575, 1577, 0, 1579, 1580, 1581, 1585, 1586, 1587,
	1589, 1592, 1593, 1594, 0, 0, 0, 0, 0, 0,
	0, 1582, 1591, 1583, 0, 849, 0, 0, 1599, 0,
	0, 0, 0, 1562, 0, 0, 0, 705, 0, 706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3202,
	0, 0, 0, 0, 0, 688, 1556, 1557, 0, 1574,
	0, 0, 0, 0, 0, 0, 0, 0, 699, 0,
	703, 0, 0, 0, 1595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1571, 0, 0, 0, 0, 0, 0, 1570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1588, 0, 0, 837, 1590, 0, 0, 0,
	0, 1576, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 1603, 1602, 857, 861, 863, 865, 867,
	868, 870, 0, 875, 871, 872, 873, 874, 0, 852,
	853, 854, 855, 835, 836, 858, 0, 838, 1599, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 850,
	856, 0, 0, 0, 0, 0, 0, 0, 860, 862,
	864, 866, 869, 0, 701, 1564, 695, 0, 684, 0,
	0, 0, 1597, 1578, 0, 698, 697, 0, 0, 0,
	0, 0, 0, 0, 1584, 0, 0, 0, 0, 1574,
	0, 0, 681, 0, 0, 851, 689, 1605, 0, 0,
	1604, 0, 0, 0, 1572, 1606, 1599, 0, 1573, 1575,
	1577, 0, 1579, 1580, 1581, 1585, 1586, 1587, 1589, 1592,
	1593, 1594, 0, 0, 0, 0, 0, 0, 0, 1582,
	1591, 1583, 0, 0, 0, 704, 0, 0, 0, 0,
	694, 0, 0, 0, 693, 0, 0, 0, 0, 0,
	680, 0, 2957, 0, 687, 0, 1590, 1574, 493, 0,
	492, 499, 489, 1598, 0, 0, 0, 0, 0, 0,
	0, 685, 496, 497, 0, 498, 502, 0, 0, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 682, 0, 0, 0, 0, 0,
	0, 0, 1595, 0, 0, 0, 0, 0, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1571,
	0, 0, 0, 0, 1590, 0, 1570, 0, 0, 0,
	0, 0, 511, 1578, 686, 513, 0, 0, 0, 0,
	512, 0, 0, 0, 1584, 0, 0, 0, 0, 0,
	1588, 0, 0, 0, 0, 0, 0, 0, 0, 1576,
	0, 0, 0, 0, 1572, 1606, 0, 0, 1573, 1575,
	1577, 0, 1579, 1580, 1581, 1585, 1586, 1587, 1589, 1592,
	1593, 1594, 0, 0, 0, 0, 0, 0, 0, 1582,
	1591, 1583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1578, 0, 0, 0, 0, 0, 0, 0, 700,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	0, 2577, 1572, 1606, 0, 0, 1573, 1575, 1577, 0,
	1579, 1580, 1581, 1585, 1586, 1587, 1589, 1592, 1593, 1594,
	493, 0, 492, 499, 489, 0, 0, 1582, 1591, 1583,
	859, 0, 1595, 0, 496, 497, 0, 498, 502, 2589,
	0, 484, 0, 485, 487, 486, 0, 0, 0, 1571,
	0, 507, 2580, 491, 0, 0, 1570, 0, 0, 0,
	0, 1598, 2575, 0, 0, 495, 0, 2595, 2596, 0,
	0, 0, 510, 2576, 0, 0, 0, 0, 0, 488,
	1588, 0, 0, 479, 0, 0, 0, 0, 0, 1576,
	0, 0, 0, 0, 511, 0, 0, 513, 0, 0,
	1595, 493, 512, 492, 499, 489, 0, 0, 0, 0,
	2581, 0, 0, 0, 0, 496, 497, 1571, 498, 502,
	0, 0, 484, 0, 1570, 0, 0, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1588, 0,
	0, 0, 0, 0, 0, 0, 0, 1576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 494, 500, 0, 501, 503, 0,
	0, 504, 505, 506, 0, 0, 508, 509, 0, 0,
	0, 2594, 0, 1947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2585, 0,
	0, 0, 0, 0, 0, 485, 487, 486, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	2582, 2586, 2584, 2583, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 510, 0, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2591, 2592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 487, 486, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	2597, 0, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 2578, 0, 0, 510, 0, 0, 2590, 0,
	0, 0, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 494, 500, 0, 501,
	503, 0, 0, 504, 505, 506, 0, 0, 508, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 494, 500, 0,
	501, 503, 0, 0, 504, 505, 506, 0, 0, 508,
	509,
}

var yyPact = [...]int{
	3259, -1000, -1000, -1000, -318, 10789, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35242, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35242, -315,
	34687, 34687, -1000, -1000, 2004, -1000, 34132, 11366, 35242, 286,
	285, 35242, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 583, -1000,
	33577, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 526, 37838,
	36907, 8558, -267, -1000, 2659, -117, 757, 770, 905, 905,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37522, 645,
	33022, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4175, 274, 645, 14141, -13, -14, 2659, 305, 265,
	-1000, 849, 3315, 147, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 8558, 8558, 10789, -325, 10789,
	8558, 35242, 35242, -1000, -1000, -1000, -1000, 526, 37838, 8558,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-14, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4242,
	-1000, 1257, -1000, -1000, -1000, -1000, 2284, 1252, 1902, 475,
	35242, -1000, 1242, 475, -1000, -1000, -1000, 2659, 2659, -1000,
	35242, 35242, 42, 1409, -1000, 333, 310, 339, 1241, -1000,
	-1000, -1000, -1000, -1000, -1000, 413, 2691, -1000, 35242, 35242,
	2331, 35242, -1000, 1821, 451, 38030, 2544, 1127, 617, 2343,
	-1000, -1000, 2281, -1000, 182, 142, 126, 284, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 177, -1000, 2621, -1000, -1000,
	168, -1000, -1000, 162, -1000, -1000, -1000, -15, -1000, -1000,
	-1000, -1000, -1000, -1000, -129, -1000, -1000, 790, 1457, 8558,
	-1000, 1511, -1000, 3527, -1000, -1000, -1000, -1000, 5773, 10223,
	10223, 10223, 10223, -1000, -1000, 2152, 8558, 2275, 2274, -1000,
	-1000, -1000, -1000, -1000, 1239, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1572, -1000, -1000, -1000, 9668, -1000,
	2271, 2264, 2262, 2261, 2260, 2258, 2257, 2256, 2255, 2254,
	2250, 2238, 2235, 2234, 2076, 3774, 2231, 1899, 1895, 2230,
	2227, 2225, 1894, 2076, 2076, 2224, 2223, 2222, 2220, 2216,
	2215, 2209, 2204, 2201, 2198, 2197, 2193, 2187, 2179, 2177,
	2174, 2173, 2172, 2171, 2166, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 990, -1000,
	2165, 2518, 2638, 2134, 2672, 2602, 2600, 2598, 2596, 1717,
	-1000, -1000, -1000, -138, -1000, -1000, 727, -1000, 723, -1000,
	35242, 35242, 35242, 611, 511, 511, 511, 511, 511, 511,
	555, 511, 569, 567, 566, 511, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -144, 1408, 1404, 2406, 705, -1000, -1000,
	-1000, -1000, 1112, 35242, -1000, 2106, 1330, 1330, 2634, 455,
	454, 436, 1330, 331, -1000, 1400, 1400, 1400, 1400, 1330,
	338, 448, 2638, 2638, -23, 1400, -48, 1330, 1330, -48,
	1330, 1330, 1330, 115, -311, -1000, -1000, -1000, 1400, 1400,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2614, 2610, 526,
	35242, 99, 35242, 526, 526, 526, 530, -66, 36352, 35797,
	1821, 442, 441, 1144, 1442, -1000, 1344, 35242, 35242, 1344,
	1344, 18584, 18029, -1000, 35242, -1000, 2638, 2134, -1000, 2061,
	2542, 2051, 2134, 526, 526, 526, 526, 526, 133, 526,
	526, 526, 35242, 35242, 32467, 526, 526, 7438, 7438, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10789, 1663,
	1653, 144, -82, -319, 187, -1000, -1000, 35242, 2488, 128,
	-1000, -1000, -1000, 2077, -1000, 2105, 2105, 2105, 2105, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2132, 2164,
	-1000, -1000, 2103, 2103, 2103, 2077, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2126, 2126, 2129, 2129, 2126, 35242, 8558, 35242, 2537,
	303, 2163, -1000, 35242, 295, 2638, 2518, 2638, -1000, -1000,
	1238, 1716, 1892, -1000, -1000, 333, 1277, -1000, 804, -1000,
	-1000, -1000, -1000, 35242, -129, 296, -1000, -1000, 1888, 2161,
	-1000, 460, 1125, 1210, -1000, 121, 38111, 28019, 1821, 28019,
	35242, -1000, -1000, -1000, -1000, -1000, -1000, -22, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 152, -1000, 8558, 8558, 8558, 8558, 8558, -1000, 546,
	9113, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10223, 10223,
	10223, 10223, 10223, 10223, 10223, 10223, 10223, 10223, 10223, 10223,
	2151, 1342, 10223, 10223, 10223, 10223, 2542, 2436, 1141, 213,
	-1000, -1000, -1000, -1000, -1000, 1431, 1457, 8558, 8558, 35242,
	-1000, -1000, 3029, 8558, 8558, 3205, 8558, 2590, 8558, 8558,
	8558, 2042, 4662, 35242, 8558, -1000, 2041, 2033, -1000, -1000,
	1585, 8558, -1000, -1000, 8558, -1000, -1000, 8558, 10223, 8558,
	-1000, -1000, -1000, 134, 2590, 2590, 8558, 8558, 2590, 2590,
	2590, 1382, 2590, 2590, 2590, 2590, 2590, 2590, 2590, 2590,
	2032, 2028, 2024, 2638, -267, 6883, -1000, -277, 2518, 8558,
	-1000, -1000, 8558, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1891, -63, 754, 736, 740, -1000, 2572, -1000, 2157,
	2156, 1237, 511, -1000, 35242, 1460, 35242, 28019, 35242, 35242,
	1821, 35242, 35242, 511, 511, 511, 35242, -1000, 2511, 28019,
	2458, 530, -1000, 35242, 1112, 2571, 35242, 2681, 10223, 10223,
	-1000, 31912, 1400, 1330, 1330, -1000, -1000, 35242, -1000, -1000,
	-1000, 1400, 35242, 1400, 1400, 2681, 1400, -1000, -1000, -1000,
	1330, 1330, -1000, -1000, -1000, -1000, 1400, 1400, -1000, -1000,
	2681, 35242, -29, 2681, 2681, -37, -1000, -1000, -1000, 35242,
	35242, 511, 35242, -1000, 35242, 35242, -1000, -1000, 35242, 37270,
	35242, 31357, 2609, -1000, 28019, 35242, 35242, 25799, -1000, 1065,
	-1000, -91, -1000, -74, -66, 1344, -66, 1344, -1000, 449,
	440, 16919, 381, 28019, 5217, -1000, -1000, 1344, 1344, 5217,
	5217, 1262, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1091,
	-1000, 149, 2518, -1000, -1000, -1000, -1000, -1000, 35242, 35242,
	28019, 1821, 35242, 526, 35242, 35242, 35242, -1000, 2155, -1000,
	2543, 35242, 35242, 1031, -1000, -1000, 13586, 1235, 1031, -1000,
	1432, -1000, 8558, 10789, -296, 8558, 10789, 10789, 8558, 10789,
	-1000, 8558, 123, -1000, -1000, -1000, -1000, 1712, -1000, 1701,
	-1000, -1000, -1000, 1883, 1883, -1000, 1698, -1000, -1000, -1000,
	-1000, 1696, -1000, -1000, 1690, -1000, -1000, -1000, 2022, 790,
	-1000, 1880, 2342, -268, -1000, 15808, 35242, 35242, -1000, -1000,
	-268, -1000, 15252, 35242, 2518, -1000, 2518, 35242, -1000, 2633,
	-1000, 333, 232, -1000, -1000, -1000, -1000, -1000, -1000, 1233,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1090,
	-1000, 35242, -1000, -1000, 121, 28019, 29129, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 180, -1000, -1000, 156, -1000, 551,
	75, 1276, -1000, -1000, 101, 157, 644, 1457, -1000, 1472,
	1472, 1473, -1000, 464, -1000, -1000, -1000, -1000, 2152, -1000,
	-1000, -1000, 1299, 1206, -1000, 1279, 1279, 1227, 1227, 1227,
	1227, 1227, 1376, 1376, -1000, -1000, -1000, 5773, 2151, 10223,
	10223, 10223, 10223, 489, 489, 3354, 3666, -1000, 8558, 1427,
	-1000, 8558, 1692, 1081, 1232, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2021, 2017, 1948, 2690, 2015,
	8558, -1000, -1000, 1274, 1273, 1272, -1000, 1814, 8003, -1000,
	-1000, -1000, 2014, 1230, 2011, -1000, -1000, -1000, 1993, 1255,
	994, 1992, 2356, 1988, 1085, 8558, 8558, 1243, 1225, 8558,
	8558, 8558, 8558, 1982, 8558, 8558, 8558, 8558, 8558, 8558,
	8558, 8558, 3, 3, 3, -1000, -1000, 1208, -1000, 1457,
	-1000, 1874, -1000, 1064, 1074, -1000, 1679, -1000, -1000, -1000,
	-1000, 745, 718, 722, 35242, 810, 11921, 35242, 35242, 2106,
	2525, 116, -1000, 1174, -1000, 75, -136, 288, 808, 2327,
	2687, 35242, 35242, 35242, 2570, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 30802, -1000, 2150, 1203, -1000, -1000, 8558,
	-1000, -1000, 2322, 35242, 35242, 2681, 2681, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 35242, 2681, 2681, 1330, 1400, -1000,
	-1000, 1400, -1000, -1000, 1400, -1000, 1224, -1000, 35242, -1000,
	-1000, -1000, 2106, 1067, -1000, 12476, 500, 500, 764, 438,
	14696, -1000, 1341, 773, 547, 2461, 178, -1000, 1341, -218,
	1341, 1341, 1341, 1341, 1341, 1341, 1341, 398, 392, 1341,
	1341, 1341, 1341, 1341, 1341, 1341, 1341, 1341, 1341, 1341,
	767, 1341, 1341, 1341, 1341, 1341, -1000, 1341, 2144, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 423, 114, 2608, 206,
	202, 1174, 2605, 222, 2503, 1128, -1000, -1000, -1000, -1000,
	20804, 20804, 16364, 20804, -1000, 1280, -66, -77, -1000, -1000,
	1065, 5217, 1065, 5217, -1000, -1000, 544, -1000, -1000, 808,
	-1000, 35242, 35242, -1000, -1000, 2142, 1387, -1000, -1000, 3774,
	-1000, 5217, 5217, -1000, -1000, 21359, 35242, -1000, -131, -1000,
	-114, 2628, 1043, -1000, -1000, 1058, 808, 2341, 35242, 1043,
	-1000, -1000, 11921, 35242, -1000, -1000, 2681, 7438, -1000, 25799,
	-1000, -1000, 30239, -1000, 29684, 2681, 1422, -1000, 10789, 1642,
	141, -1000, 174, -321, 139, 1588, 137, 1457, -1000, -1000,
	1981, 1979, 1185, -1000, 1182, 1973, 1173, 1172, -1000, -59,
	-1000, 2502, 813, -1000, 2141, -1000, 1170, 2403, -1000, 1023,
	-1000, 1386, 1169, -1000, 813, 1138, 2363, 1023, 2628, -1000,
	1222, 41, -1000, -1000, 35242, 1888, 1114, 29129, 890, -1000,
	540, 1219, 1218, -1000, 28019, 170, 28019, -1000, 28019, -1000,
	-1000, 306, -1000, 35242, 2514, -1000, -1000, -1000, 1839, -337,
	-1000, -1000, -1000, -1000, -1000, 1111, -1000, 489, 489, 3354,
	3443, -1000, 10223, -1000, 10223, 2397, 1418, -1000, 8558, 1610,
	3251, 1220, 19694, 35242, -1000, -1000, 8558, 8558, -1000, 2367,
	-1000, -1000, -1000, -1000, 8558, 8558, 1713, -1000, 35242, -1000,
	-1000, -1000, -1000, 19694, -1000, 10223, -1000, 8558, 956, 2360,
	3, 3, 2348, 2330, 2326, 1106, 3, 2317, 2294, 2285,
	2184, 2153, 2109, 2031, 2026, -1000, 2140, -1000, -1000, 6883,
	-1000, -59, 8558, 8558, 8558, 2446, -1000, -1000, -1000, -1000,
	-1000, 709, 140, 1971, 954, -1000, -1000, 35242, -1000, -1000,
	-1000, 1970, 945, -1000, -1000, -1000, 37535, 2105, 2105, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2132, -1000,
	-1000, 2103, 2103, 2103, 2077, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2126, 2126, 2129, 2129, 2126, -1000,
	2106, 2569, -1000, 16, 1341, 434, 28019, 432, -1000, 35242,
	1612, 1384, 2340, 259, 2476, 35242, 2121, 2120, 2118, 280,
	37535, 35242, 940, -1000, 1215, 3315, -1000, 35242, 1457, -1000,
	1821, -1000, 1330, -1000, -1000, 2681, 1076, -1000, -1000, 2681,
	1330, 1330, 1400, 35242, -1000, 2567, 37270, -1000, 2509, 35242,
	-1000, -1000, 37535, 658, -1000, 689, 511, 35242, 1495, 689,
	1493, 2113, -1000, -1000, 35242, -1000, 35242, 35242, 35242, -1000,
	-1000, 35242, -1000, 35242, 35242, 35242, -1000, 35242, 35242, -1000,
	35242, 1485, 1482, 2568, -1000, 1341, 1341, 679, -1000, -1000,
	427, -1000, 1686, 1685, 1684, 1681, 1873, 1869, 1867, 1341,
	1341, 1680, 1866, 28574, 1865, 842, 1671, 1664, 1662, 1682,
	1864, 663, -1000, 1863, 1672, 1670, 1650, 35242, 2111, 1816,
	-1000, -1000, 16, 1341, 201, 35242, 1379, 434, 281, 1734,
	17474, 35242, 25799, 25799, 25799, 25799, -1000, 2394, 2385, -1000,
	2437, 2395, 2376, 35242, 25799, 2106, -1000, 28574, -1000, -1000,
	-1000, 2542, 1105, 2453, 670, 8558, -1000, -1000, -106, -68,
	-1000, -1000, -1000, 28019, 1862, 381, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2704, 35242, 35242, 558, 1964, -1000,
	2678, -1000, 911, -1000, -1000, 1212, -1000, 2678, 1440, -320,
	10789, 1380, 1358, -1000, 8558, 10789, 8558, -297, 184, -300,
	-1000, -1000, -1000, 1860, -1000, -1000, -1000, 1659, -1000, 1648,
	17, 28, 1481, -268, 6883, 304, 35242, -268, 35242, 6883,
	-1000, 35242, 301, -268, -1000, 35242, 1647, -1000, -1000, -1000,
	2686, 28019, 1821, 1308, 27464, -1000, 163, -1000, 176, 435,
	1858, -1000, 559, 98, -1000, 1378, 1839, -1000, -1000, -1000,
	10223, -1000, -1000, -1000, -1000, 1457, 8558, 1962, -1000, 698,
	698, 1960, -1000, 2105, 2105, -1000, 2077, 2103, 2077, 698,
	698, 1954, -1000, 1519, 2019, -1000, 2010, 1969, 8558, -1000,
	1950, 3592, 972, -149, 3, -1000, -1000, -1000, 3, 3,
	3, 3, -1000, 3, 3, 3, 3, 3, 3, 3,
	3, 480, -1000, 17, 1457, 1457, -1000, -1000, 2522, -1000,
	1856, 1846, 810, 37535, 614, 11921, 2479, 2553, 307, 1737,
	-1000, -1000, -1000, 26909, 422, -1000, -1000, -1000, 520, 188,
	1643, 396, -1000, 35242, 222, 2421, 1375, 1845, 35242, -1000,
	-1000, -1000, -1000, -1000, 2476, -1000, 750, 253, 13031, 13031,
	13031, 258, 1396, -1000, 475, 912, 1187, 25799, 35242, -1000,
	25244, 1938, -1000, 808, 2681, -1000, 35242, -1000, 2681, 2681,
	1330, -1000, 307, -1000, -1000, -1000, 35242, 2509, 37981, -1000,
	35242, -1000, 35242, -1000, 35242, 35242, 511, 8558, 2492, 35242,
	535, -1000, -1000, 831, 244, 542, 542, -1000, -1000, -1000,
	35242, -1000, -1000, -1000, -1000, -1000, -1000, 19694, 19694, 2595,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1843, 1842, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 35242, 1104, -1000, 1368, 1737, 26909, 1362,
	1344, 1841, 422, 1612, 1361, -1000, 1840, -1000, 845, 35242,
	35242, -1000, 1015, -1000, 1360, 2319, 2337, 2319, -1000, -1000,
	-1000, -1000, 2362, -1000, 2355, -1000, -1000, 1015, -1000, -1000,
	-1000, -1000, -1000, 670, -1000, 2627, 689, 689, 689, 1937,
	-1000, -1000, -1000, 890, 1931, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2661, 2671, 26354, 2661, -1000, -320,
	1414, -1000, 1443, 135, 1536, 35242, -1000, -1000, -1000, 1930,
	1929, -279, 33, 2670, 2667, 2702, -1000, 1925, 886, -268,
	-1000, -1000, 813, -1000, -1000, -1000, -268, -1000, 813, -1000,
	-1000, 1821, -1000, 173, -1000, -1000, -1000, -1000, -1000, -1000,
	62, -1000, 35242, -1000, 1839, 1832, 97, -1000, 1457, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 8558, -1000, -1000, -1000, 1920, -1000,
	-1000, 8558, 1921, 1830, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2674, -1000, 2666,
	-279, -1000, -1000, -1000, -1000, -1000, -1000, 37535, -1000, 1475,
	307, -185, -1000, 1829, 74, -1000, -1000, -1000, 1827, 1824,
	1634, -1000, -1000, 1646, 1183, 84, -1000, -1000, -1000, -1000,
	-1000, -1000, 1734, 1724, 1357, -345, -1000, 2101, -1000, 1341,
	1341, 1341, 35242, 1915, 859, -1000, -1000, -1000, -1000, 1911,
	1910, 484, 1356, 1355, -1000, 1617, 20804, 25799, 25244, 924,
	-1000, 1181, -1000, -1000, -1000, 2681, -1000, -1000, 2681, -1000,
	-1000, -1000, -1000, 37981, -1000, -1000, 1524, 10223, -1000, -1000,
	1820, 20249, 613, 1349, 1346, 647, 2100, -1000, 347, 2701,
	-1000, -1000, -1000, 673, 1479, 1478, -1000, 35242, -1000, 2099,
	-1000, 2096, 2302, 302, 2094, 2092, 35242, 1890, -1000, -1000,
	35242, 2492, 35242, 538, 2471, -1000, -1000, -1000, -1000, -1000,
	329, -1000, -1000, 1229, -1000, 19694, -1000, -1000, 1099, -1000,
	1816, 1815, -1000, 74, 1808, 5217, -1000, -1000, 2421, 1807,
	-1000, 35242, 845, 845, 2674, 35242, 6883, -1000, -1000, 8558,
	2091, -1000, 8558, -1000, -1000, -1000, -1000, -1000, 2086, 2414,
	-1000, -1000, -1000, -1000, -1000, -1000, 8558, 8558, -1000, -1000,
	504, 10789, -301, 183, -1000, -1000, -1000, -282, 1797, -1000,
	-1000, 2663, 1785, 1729, 35242, -1000, 813, 813, 808, -1000,
	-1000, -37, -1000, -1000, -1000, 1828, -1000, 1725, 3, -1000,
	124, 8558, -282, -181, -1000, -1000, -185, -1000, 293, -1000,
	-1000, 298, -1000, -1000, 215, -1000, -1000, 1591, 453, -1000,
	-1000, -1000, 1784, 1546, 1752, 24134, 19694, 20249, 1776, -1000,
	37756, 13031, 152, 37756, 765, 1354, -1000, 1613, -1000, 1605,
	-1000, 2681, 924, 1181, -1000, -1000, 1291, -1000, -1000, -1000,
	-1000, 3354, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1774, 1760, -1000, -1000, -1000, -1000, -1000, 1598, 2085, -110,
	2589, -1000, -1000, 2084, 24134, 24134, 276, 276, 24134, 24134,
	2079, 542, -1000, -1000, -1000, 10223, -1000, -1000, -1000, 1341,
	1214, -1000, -1000, -1000, -1000, -1000, -1000, 1724, -1000, -1000,
	2638, -1000, -1000, 1457, 35242, 1457, 24689, -1000, 2662, 2660,
	1457, 790, -1000, -320, 35242, 35242, -284, 1597, -1000, 1759,
	30, -1000, -1000, 800, -286, 9, 18, -1000, -1000, -1000,
	1893, -1000, 608, -1000, -1000, -1000, 790, -284, 35242, -1000,
	336, -1000, -1000, 417, 1757, -1000, -1000, 210, -1000, -1000,
	-1000, -1000, -1000, 93, -1000, 1345, 1094, -1000, 2077, 8558,
	-1000, -1000, -1000, 468, 37688, -1000, 773, -1000, -1000, -37,
	468, 418, 216, -1000, 1586, -1000, -1000, 2674, -1000, -1000,
	-1000, 1833, 8558, 2076, 1341, -177, 24134, 1082, 1072, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1070, 1050, 24134, -1000,
	-1000, 3354, 19694, 1341, -1000, -1000, 1048, 1047, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2075, -1000, -1000, 2657, -1000,
	1756, 529, 23, 18, -1000, 2656, 27, 2655, 2654, -1000,
	-1000, 561, -275, 1, -1, -2, -1000, -1000, -1000, 8558,
	-1000, 2547, -1000, 148, -1000, 61, -1000, -1000, -1000, 1752,
	1751, -1000, 24134, 2563, 1709, 313, 2653, 37756, -1000, 1341,
	-1000, 313, -1000, 266, -1000, 1321, -1000, 1583, -1000, 2638,
	-1000, 1487, -1000, 35242, 2335, -1000, 118, 1046, 2295, 2291,
	2289, 2186, 1040, -1000, 19694, -1000, -1000, 23579, 35242, 1729,
	-1000, 2074, 1581, 33, 20, 2651, -1000, 1729, 2650, 1729,
	1729, 1468, -1000, -4, -6, -8, -1000, -1000, -1000, -1000,
	1744, -1000, -1000, -1000, -1000, 211, -1000, -1000, 2563, -1000,
	2643, 330, -1000, 19694, -1000, -1000, -1000, 1580, -1000, -1000,
	542, -1000, -1000, 2333, 2112, 2685, -1000, -1000, -1000, -1000,
	211, 276, 211, 276, 211, 276, 211, 276, 145, -1000,
	-1000, -1000, 1029, -1000, -1000, 2579, 19139, 11, -1000, -1000,
	-1000, 1743, -1000, 1729, -1000, -1000, 561, -1000, -1000, -1000,
	-1000, -1000, 1341, 1718, 229, -1000, -1000, -1000, 23024, 320,
	340, 327, -1000, 467, -1000, -1000, -1000, -1000, -1000, 2697,
	-1000, 2695, 664, 664, -1000, -1000, -1000, -1000, -1000, -1000,
	35242, -1000, 35242, -1000, 1024, -1000, -1000, -1000, 906, -1000,
	-1000, -1000, -1000, -1000, 1564, -1000, 35242, -1000, 35242, 318,
	1556, 10223, 2070, 10223, 2069, 309, 2067, -1000, -1000, -1000,
	1567, 354, -1000, 211, 211, 211, 211, -1000, 781, -1000,
	1336, -1000, 22469, 35242, -1000, -1000, 1016, 2066, 2641, -1000,
	3168, 35242, 3122, 35242, 2064, 1296, 10223, -1000, -1000, -1000,
	35242, 6328, -1000, 843, -1000, -1000, 465, 322, -1000, 995,
	-1000, 993, 21914, 1555, 1714, -1000, -1000, 1457, 35242, 948,
	-1000, 35242, 315, -1000, -1000, -1000, 947, -1000, -1000, -1000,
	-1000, 465, 2349, -1000, 1545, -1000, -1000, 37528, 586, -1000,
	-1000, 37528, 308, -1000, 443, 1896, -1000, -1000, 910, -1000,
	35242, 639, 8558, -1000, 308, 37756, -1000, 8558, 881, -1000,
	37756, 848, -1000, -1000,
}

var yyPgo = [...]int{
	0, 144, 2718, 235, 156, 3189, 68, 237, 218, 207,
	231, 3188, 3187, 2487, 2480, 3186, 3184, 3183, 3181, 3180,
	3176, 3175, 3174, 3170, 3169, 3168, 3167, 3163, 3161, 3160,
	3159, 3158, 3155, 3153, 3151, 3150, 3149, 3148, 3147, 225,
	3145, 3142, 3141, 3136, 3135, 3134, 3133, 3129, 3128, 3127,
	3126, 3125, 3124, 3118, 3116, 3115, 3114, 3112, 3111, 3110,
	3108, 3107, 3106, 3105, 3104, 3103, 3102, 3097, 3096, 3095,
	3094, 199, 3093, 2474, 3092, 3091, 3090, 3089, 3088, 3087,
	3082, 188, 3081, 3080, 3078, 3077, 3076, 3075, 3074, 3073,
	3072, 3068, 3066, 221, 3064, 3062, 3060, 3059, 3056, 3055,
	213, 3054, 153, 172, 3053, 3050, 3049, 3048, 3046, 220,
	259, 60, 3044, 43, 3043, 204, 3042, 130, 3041, 125,
	3040, 3039, 3038, 3037, 3035, 3034, 3033, 3032, 3031, 3030,
	3029, 3028, 3027, 3026, 3025, 3019, 79, 3017, 243, 3016,
	65, 3015, 3014, 109, 137, 170, 234, 2482, 236, 232,
	164, 150, 85, 3009, 2465, 3003, 138, 214, 133, 26,
	3002, 148, 3001, 134, 36, 42, 228, 120, 48, 142,
	106, 3000, 210, 94, 92, 2999, 2998, 163, 230, 168,
	2997, 124, 2996, 2995, 2994, 2992, 186, 166, 2991, 2990,
	107, 2987, 2983, 117, 2981, 63, 185, 140, 181, 2979,
	502, 104, 100, 110, 2978, 2977, 128, 2976, 2975, 2973,
	2972, 162, 2971, 2969, 126, 81, 2964, 2962, 2961, 55,
	2960, 23, 2959, 64, 2957, 2954, 2952, 2951, 2949, 2948,
	2947, 2946, 2945, 2944, 2943, 61, 2942, 2936, 15, 16,
	24, 2935, 22, 2934, 146, 2933, 2932, 2930, 103, 76,
	75, 7, 2927, 205, 54, 82, 127, 2923, 411, 2922,
	2919, 2918, 136, 2917, 570, 2916, 2915, 2910, 2909, 2907,
	83, 2906, 202, 45, 2905, 84, 119, 2904, 34, 44,
	176, 175, 2902, 2901, 2898, 293, 174, 80, 28, 0,
	2896, 132, 2895, 2894, 2893, 239, 2892, 215, 203, 143,
	397, 233, 149, 2891, 2890, 78, 2889, 135, 86, 47,
	118, 8, 18, 223, 2888, 1133, 152, 2886, 189, 2885,
	242, 1, 122, 2884, 2882, 40, 273, 2881, 2878, 2877,
	105, 2876, 2875, 147, 90, 2874, 2873, 2871, 38, 2870,
	33, 25, 2869, 88, 2868, 226, 2867, 201, 112, 159,
	151, 141, 208, 219, 67, 66, 2866, 1534, 129, 87,
	30, 2865, 211, 2864, 167, 115, 2861, 71, 2860, 224,
	350, 192, 2857, 160, 12, 37, 31, 2856, 9, 2855,
	198, 200, 2854, 2852, 19, 46, 2850, 17, 2849, 2847,
	2845, 2844, 3, 2842, 2841, 2840, 5, 2, 2838, 4,
	190, 2837, 2836, 2832, 2831, 41, 209, 2830, 114, 187,
	161, 2829, 96, 2828, 2827, 2826, 255, 2825, 229, 2824,
	2822, 2821, 2820, 2819, 2810, 2808, 2806, 2804, 95, 53,
	2803, 2802, 2801, 2798, 69, 123, 2791, 2790, 2788, 2787,
	32, 158, 2784, 20, 2783, 29, 27, 35, 2782, 108,
	2781, 13, 165, 2778, 2777, 14, 2774, 2773, 10, 11,
	2771, 2770, 116, 2769, 77, 21, 145, 97, 2766, 2763,
	73, 197, 121, 2762, 2761, 227, 222, 177, 2760, 91,
	216, 238, 2759, 193, 2758, 2757, 2754, 2753, 2752, 2749,
	1321, 2748, 2747, 217, 56, 70, 99, 2746, 2745, 2744,
	74, 139, 102, 98, 50, 72, 2743, 93, 179, 2742,
	173, 2739, 2737, 89, 2736, 2735, 2734, 2733, 2730, 169,
	2725, 2724, 171, 212, 2723, 2722, 2721, 2720, 240, 184,
	2700,
}

//line mysql_sql.y:10181
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 518, 526, 526, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 107, 516, 516, 516, 517, 517, 104, 124,
	123, 126, 126, 125, 125, 122, 122, 118, 121, 121,
	120, 120, 119, 114, 116, 116, 115, 117, 117, 105,
	93, 106, 461, 461, 460, 460, 459, 459, 413, 413,
	458, 458, 458, 457, 457, 457, 456, 456, 455, 455,
	454, 454, 452, 452, 453, 451, 450, 450, 450, 448,
	448, 448, 444, 444, 446, 445, 445, 447, 439, 439,
	442, 442, 440, 440, 440, 440, 443, 438, 438, 438,
	437, 437, 92, 92, 92, 359, 359, 91, 91, 373,
	373, 373, 373, 373, 371, 371, 371, 371, 371, 371,
	370, 370, 369, 369, 374, 374, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 82, 82, 82, 82,
	82, 87, 87, 87, 523, 523, 522, 522, 524, 524,
	524, 524, 525, 525, 85, 85, 85, 86, 368, 368,
	368, 83, 84, 84, 358, 358, 363, 363, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 367, 367, 367, 365, 365, 364, 364, 366, 366,
	76, 76, 76, 79, 78, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 77, 77, 77, 77, 77, 77,
	72, 72, 72, 72, 72, 71, 71, 73, 73, 355,
	355, 354, 88, 88, 89, 520, 520, 519, 521, 521,
	521, 521, 90, 96, 96, 96, 96, 96, 96, 96,
	95, 95, 98, 98, 97, 99, 81, 81, 81, 81,
	81, 81, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 486, 486, 486, 488, 488, 293, 294, 527, 296,
	292, 292, 292, 482, 482, 483, 484, 485, 485, 485,
	94, 11, 11, 11, 11, 11, 11, 11, 70, 75,
	243, 243, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 231, 231, 231, 226, 226, 226,
	226, 227, 227, 228, 228, 229, 229, 229, 229, 230,
	230, 248, 248, 248, 286, 286, 249, 249, 249, 247,
	245, 245, 245, 245, 245, 245, 246, 246, 246, 250,
	250, 68, 74, 74, 74, 499, 499, 69, 510, 510,
	416, 416, 307, 307, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	421, 422, 303, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 46, 49, 45, 45, 45, 344, 344, 44,
	528, 528, 281, 281, 57, 56, 48, 58, 59, 60,
	61, 62, 63, 43, 55, 55, 55, 55, 55, 55,
	55, 55, 66, 66, 433, 433, 530, 530, 530, 64,
	65, 415, 415, 415, 54, 53, 52, 51, 50, 50,
	42, 42, 41, 41, 47, 130, 131, 300, 300, 300,
	302, 302, 298, 529, 529, 387, 387, 301, 301, 40,
	40, 40, 40, 67, 299, 299, 280, 297, 297, 297,
	12, 12, 10, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 23, 24, 26, 352,
	352, 349, 25, 18, 17, 20, 16, 16, 19, 21,
	22, 22, 9, 9, 9, 9, 13, 13, 14, 151,
	151, 201, 201, 494, 494, 490, 490, 491, 491, 491,
	492, 492, 493, 493, 100, 427, 427, 427, 427, 427,
	427, 8, 173, 173, 426, 426, 426, 426, 426, 426,
	356, 356, 471, 471, 471, 472, 172, 172, 167, 167,
	428, 428, 322, 473, 473, 436, 436, 435, 435, 434,
	434, 170, 170, 171, 171, 154, 154, 110, 110, 441,
	441, 441, 441, 449, 449, 412, 412, 235, 235, 273,
	273, 274, 274, 144, 144, 145, 145, 145, 145, 145,
	145, 479, 479, 481, 481, 480, 169, 169, 165, 165,
	166, 166, 166, 164, 164, 163, 162, 162, 161, 159,
	159, 159, 160, 160, 160, 177, 177, 147, 147, 147,
	146, 146, 146, 146, 146, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 148, 148, 487,
	487, 487, 417, 417, 417, 424, 424, 255, 255, 256,
	256, 254, 254, 149, 149, 150, 150, 150, 150, 253,
	253, 252, 152, 152, 158, 157, 157, 153, 153, 153,
	153, 263, 263, 262, 262, 262, 262, 103, 108, 108,
	109, 176, 176, 261, 260, 260, 260, 175, 175, 174,
	174, 168, 168, 156, 156, 156, 156, 259, 155, 257,
	515, 515, 514, 514, 513, 511, 511, 511, 512, 512,
	512, 512, 463, 463, 463, 463, 463, 287, 287, 287,
	291, 291, 290, 290, 290, 290, 290, 295, 7, 7,
	7, 7, 7, 7, 30, 30, 30, 30, 30, 30,
	30, 30, 36, 185, 186, 37, 187, 187, 188, 188,
	189, 189, 190, 191, 192, 192, 192, 192, 35, 178,
	178, 179, 179, 180, 180, 181, 182, 182, 182, 184,
	183, 34, 34, 27, 137, 137, 138, 138, 138, 138,
	140, 140, 232, 232, 232, 139, 139, 141, 141, 141,
	495, 498, 496, 496, 500, 500, 500, 501, 501, 501,
	501, 502, 502, 28, 127, 132, 505, 505, 505, 504,
	504, 506, 506, 507, 507, 277, 277, 278, 278, 135,
	136, 136, 134, 129, 143, 143, 143, 143, 143, 128,
	133, 497, 503, 503, 503, 353, 353, 350, 351, 351,
	348, 347, 347, 347, 509, 509, 508, 508, 508, 288,
	288, 29, 343, 343, 345, 346, 346, 346, 337, 337,
	337, 337, 33, 341, 341, 342, 342, 342, 342, 342,
	338, 338, 340, 340, 336, 336, 336, 336, 336, 32,
	142, 142, 335, 335, 333, 333, 331, 331, 332, 332,
	330, 330, 330, 334, 334, 31, 31, 31, 112, 111,
	111, 111, 276, 276, 275, 275, 113, 38, 213, 213,
	401, 401, 401, 401, 401, 419, 419, 419, 402, 402,
	402, 403, 403, 403, 404, 404, 404, 404, 404, 418,
	418, 420, 420, 420, 375, 375, 376, 376, 376, 379,
	379, 393, 393, 394, 394, 392, 392, 399, 399, 398,
	398, 397, 397, 396, 396, 395, 395, 395, 395, 390,
	390, 389, 389, 377, 377, 377, 377, 377, 378, 378,
	378, 388, 388, 391, 391, 219, 219, 220, 220, 220,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 469, 469, 470, 222, 222,
	233, 233, 233, 233, 233, 233, 221, 221, 223, 223,
	202, 202, 200, 200, 193, 193, 194, 194, 195, 195,
	195, 199, 199, 198, 198, 198, 198, 196, 196, 197,
	197, 197, 197, 197, 197, 361, 361, 466, 466, 467,
	467, 462, 462, 462, 465, 465, 465, 465, 465, 468,
	468, 468, 464, 464, 203, 271, 271, 271, 289, 289,
	289, 289, 270, 270, 270, 218, 218, 217, 217, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 360,
	360, 304, 304, 305, 305, 242, 241, 241, 241, 241,
	241, 239, 240, 238, 238, 238, 238, 238, 237, 237,
	236, 236, 236, 339, 339, 234, 234, 225, 225, 225,
	224, 224, 224, 400, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 269, 269,
	269, 314, 314, 319, 319, 478, 478, 477, 204, 204,
	204, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	214, 214, 214, 384, 384, 384, 384, 385, 385, 385,
	385, 386, 386, 386, 382, 382, 383, 383, 323, 324,
	324, 425, 425, 380, 380, 381, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 432, 432, 432, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 489, 489, 489, 474, 474, 474, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 267, 267, 267,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 325, 325, 326, 326, 429,
	429, 429, 429, 429, 429, 430, 430, 431, 431, 431,
	431, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	312, 264, 264, 264, 327, 320, 320, 321, 321, 315,
	315, 315, 315, 315, 315, 315, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 316, 316,
	318, 318, 329, 329, 329, 328, 328, 328, 328, 328,
	328, 328, 216, 216, 216, 216, 309, 309, 309, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 206, 206, 206, 206, 210, 210, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 211, 211, 211, 211, 211, 209, 209, 209, 209,
	209, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 101, 102, 102,
	208, 272, 272, 405, 405, 408, 408, 406, 406, 407,
	409, 409, 409, 410, 410, 410, 411, 411, 411, 414,
	414, 279, 279, 279, 285, 285, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 1, 7, 4,
	1, 3, 2, 4, 5, 5, 6, 5, 5, 2,
	2, 1, 3, 3, 4, 3, 7, 5, 8, 2,
	2, 1, 3, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 2, 0, 1, 0, 1, 2, 1,
	2, 2, 1, 2, 3, 2, 3, 3, 3, 1,
	1, 7, 7, 8, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 2, 5, 5, 0, 2, 7,
	0, 1, 0, 1, 5, 5, 3, 3, 2, 4,
	4, 4, 4, 4, 1, 1, 1, 3, 3, 1,
	1, 1, 6, 8, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 4, 6, 7,
	4, 4, 7, 8, 3, 3, 3, 0, 2, 2,
	0, 2, 2, 1, 1, 1, 1, 0, 1, 4,
	4, 5, 4, 3, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 4, 1,
	3, 1, 4, 6, 6, 4, 4, 4, 3, 6,
	3, 5, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 5, 1, 3, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 5, 3, 4, 6, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 0, 2, 3, 3, 3,
	1, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 7, 7, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 2, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 4, 4,
	3, 2, 2, 2, 3, 2, 3, 4, 1, 3,
	4, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 3, 2, 3, 1, 4, 3,
	0, 1, 1, 2, 5, 2, 2, 2, 0, 2,
	3, 3, 0, 1, 3, 1, 3, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 1, 7, 1, 3, 0, 1,
	1, 3, 1, 3, 0, 1, 1, 1, 12, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 4, 1,
	1, 9, 8, 7, 1, 2, 2, 3, 3, 3,
	0, 4, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 4, 1, 1, 3, 4, 3, 0, 1, 1,
	1, 0, 2, 7, 8, 8, 0, 3, 3, 0,
	2, 0, 3, 0, 5, 1, 3, 0, 3, 3,
	0, 2, 9, 6, 0, 2, 2, 3, 3, 4,
	4, 1, 0, 2, 2, 1, 3, 2, 1, 3,
	2, 1, 3, 2, 0, 1, 3, 4, 3, 1,
	1, 4, 1, 3, 1, 1, 1, 1, 0, 1,
	1, 1, 11, 0, 2, 3, 2, 3, 1, 1,
	1, 3, 3, 4, 0, 2, 2, 2, 2, 6,
	0, 4, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 11, 9, 11, 2, 2,
	4, 5, 1, 3, 0, 3, 5, 10, 0, 2,
	0, 3, 2, 4, 3, 0, 2, 1, 0, 2,
	3, 0, 2, 3, 0, 3, 2, 4, 3, 0,
	1, 0, 1, 1, 0, 6, 0, 3, 5, 0,
	4, 0, 3, 1, 3, 4, 5, 0, 3, 1,
	3, 2, 3, 1, 2, 0, 4, 6, 5, 0,
	2, 0, 2, 4, 5, 4, 5, 1, 5, 6,
	5, 0, 3, 0, 1, 0, 1, 1, 3, 2,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 5, 4, 1, 3, 3, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	1, 1, 1, 7, 9, 7, 9, 2, 1, 7,
	9, 7, 9, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 3, 3, 2,
	2, 1, 5, 6, 4, 1, 1, 1, 5, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 1, 1, 1, 1, 1, 4, 4,
	4, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 2, 0, 1, 6, 8, 6, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 4, 4, 4, 3, 4, 6, 6,
	7, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 2, 2, 4, 6, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 2, 3, 5,
	1, 1, 3, 0, 1, 0, 3, 0, 3, 3,
	0, 3, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -518, -526, -2, -5, 583, -1, -4, -102, -76,
	-7, -104, -105, -8, -100, -9, -10, -12, -80, -95,
	-97, -99, -98, -39, -11, -94, -71, -72, -82, -88,
	-91, -92, -93, -106, -101, -103, -144, -107, 576, -77,
	-78, -79, -30, -29, -28, -27, -127, -132, 582, 435,
	12, 484, -13, -14, -479, -15, 254, -292, -293, -294,
	-296, -527, -40, -41, -42, -50, -51, -52, -53, -54,
	-64, -65, -66, -43, -44, -45, -48, -46, -57, -56,
	-58, -59, -60, -61, -62, -63, -47, -130, -131, -67,
	-49, -69, -68, -74, -70, -75, -129, -134, 229, -73,
	75, -83, -84, -85, -86, -87, -89, -90, 361, 367,
	424, 575, 60, -145, -147, 586, 157, 158, 160, 161,
	-31, -32, -33, -34, -35, -36, -38, -37, 225, 14,
	517, -16, -19, -17, -20, -18, -25, -26, -24, -21,
	-23, -128, -22, -133, 249, 248, 37, 315, 316, 317,
	365, 247, 226, 13, 30, 41, 341, -146, 81, 227,
	-148, 10, 588, -6, -3, -2, -114, -118, -122, -125,
	-126, -123, -124, -4, -102, 115, 239, 577, -289, 357,
	578, 580, 579, 84, 92, -282, -284, 361, 367, 575,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 487, 562, 563, 564,
	565, 339, 340, 514, 266, 290, 392, 296, 303, 157,
	176, 170, 198, 190, 165, 270, 308, 271, 91, 160,
	470, 105, 447, 421, 163, 285, 287, 289, 292, 291,
	293, 295, 272, 342, 186, 181, 284, 268, 179, 273,
	39, 274, 203, 275, 276, 519, 443, 338, 449, 300,
	419, 180, 444, 288, 446, 205, 209, 461, 462, 174,
	175, 451, 464, 202, 246, 42, 516, 258, 465, 207,
	201, 197, 473, 304, 302, 200, 173, 196, 269, 64,
	211, 210, 212, 415, 416, 417, 418, 277, 278, 355,
	460, 193, 182, 343, 166, 22, 468, 253, 448, 368,
	279, 297, 305, 206, 208, 260, 265, 518, 423, 264,
	301, 466, 178, 257, 286, 252, 469, 167, 370, 280,
	161, 294, 463, 472, 63, 383, 172, 164, 243, 158,
	262, 267, 11, 281, 282, 283, 307, 306, 298, 194,
	259, 199, 184, 171, 195, 159, 261, 471, 384, 573,
	341, 402, 192, 189, 263, 236, 467, 450, 162, 406,
	385, 187, 309, 569, 570, 571, 356, 337, 310, 311,
	185, 250, 441, 442, 312, 314, 412, 330, 386, 422,
	393, 387, 218, 318, 453, 455, 204, 572, 319, 320,
	321, 445, 322, 323, 324, 325, 360, 55, 57, -366,
	-364, -289, 575, 367, 361, 341, -187, -289, 587, -154,
	38, -200, -289, -154, -73, -14, -13, -146, -147, -200,
	233, -297, 23, 419, -81, 420, 229, 81, -289, -9,
	-93, -8, -100, -71, -144, 424, -295, -289, 315, 315,
	-295, 233, -289, 264, 400, -416, 239, -370, -343, 265,
	-369, -345, -372, -346, 31, 225, 227, 226, 261, 14,
	365, 235, 12, 10, 366, 247, 24, 25, 27, 13,
	367, 369, 28, 370, 373, 374, 375, 41, 378, 379,
	254, 84, 92, 87, 272, -186, -289, -321, -315, 112,
	255, -317, -310, -311, -313, -458, -452, -308, 81, 139,
	140, 147, 113, -312, -400, 35, 115, 526, 485, -265,
	-266, -267, -268, -269, -289, -453, -451, 87, 96, 99,
	102, 103, 101, 100, 151, 183, 98, 88, 152, -147,
	84, -474, 534, -283, 555, 562, 563, 564, 565, 554,
	60, -423, -431, 232, -429, 150, 188, 250, 184, 12,
	145, 412, 185, 531, 551, 487, 535, 558, 528, 529,
	523, 524, 525, 527, 536, 538, 550, -432, 546, 556,
	557, 544, 559, 560, 561, 86, 85, 549, 548, 537,
	532, 533, 539, 522, 530, 540, 541, 547, 552, 553,
	349, 105, 350, 351, 477, 342, 352, 239, 419, 69,
	353, 354, 355, 356, 357, 484, 358, 70, 359, 348,
	254, 402, 360, 187, 204, 489, 488, 490, 481, 478,
	476, 479, 480, 482, 483, 542, 543, 545, -108, -109,
	567, -163, -164, -258, 19, 6, 7, 8, 9, -516,
	421, 518, 162, 159, -357, 162, 111, 167, 166, -357,
	318, 260, 362, -137, 236, 339, 402, 322, 93, 264,
	-337, -335, -418, 312, 308, 234, -138, 244, 243, 106,
	477, 232, 376, 108, 303, 55, 57, -490, -491, 222,
	223, 224, -481, 510, -480, -289, 351, 95, 26, 233,
	362, 260, 455, 453, 454, 456, 457, 458, 459, -55,
	-433, -415, 450, 449, -301, 442, 448, 440, 452, 443,
	340, 324, 323, 225, 584, 511, -279, 386, 422, 474,
	475, 363, 423, 461, 463, 444, 105, 191, 188, 236,
	233, 339, 477, 402, 93, 322, -490, 159, 461, 463,
	264, 400, 40, -363, 412, -362, -364, 462, 473, 85,
	86, 460, -279, 105, 441, 441, -164, -258, -163, -145,
	-147, -103, -479, 234, 339, 402, 264, 235, 233, 236,
	477, 232, 315, 362, 260, 322, 93, -417, -487, 31,
	-424, 219, 220, 221, 32, 33, -1, 119, 588, -315,
	-315, -6, 589, -6, -315, -289, -289, 154, -206, -210,
	-207, -209, -208, -212, -211, 188, 189, 150, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 30,
	204, 250, 184, 185, 186, 187, 205, 170, 190, 515,
	213, 171, 214, 172, 215, 173, 216, 174, 175, 217,
	176, 179, 180, 181, 182, 178, 153, 81, 153, 87,
	-170, 256, -200, 153, -170, -164, -163, -164, -200, -270,
	-289, 421, 122, -81, -81, 420, -482, -483, -484, -486,
	229, 420, 419, 153, 272, 15, -295, -295, 79, -200,
	-345, 264, -370, -343, 35, 78, 154, 237, 154, 78,
	81, 363, 339, 402, 364, 477, 233, 376, 236, 264,
	377, 339, 402, 233, 236, 477, 264, 339, 233, 236,
	402, 264, 377, 440, 441, 236, 26, 368, 371, 372,
	441, -437, 473, 154, 111, 108, 109, 110, -315, 129,
	-328, 122, 123, 124, 125, 126, 127, 128, 136, 135,
	146, 139, 140, 141, 142, 143, 144, 145, 137, 138,
	132, 112, 130, 134, 131, 114, -147, -315, -321, 60,
	-313, -313, -313, -313, -400, -319, -315, 81, 81, 153,
	100, 87, -315, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, -430, 81, 81, -325, -326,
	81, 81, -308, -270, 81, 87, 87, 81, 81, 81,
	87, -326, -326, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, -164, 154, 81, -110, 38, -166, 21,
	-148, -147, 20, 31, 32, 31, 32, 31, 32, 31,
	32, 96, 466, 517, 165, 166, 167, -185, -289, -187,
	-178, -289, 236, -138, -333, 239, -333, -333, -333, -333,
	-333, 235, -333, 233, 233, 233, -333, 484, 122, 122,
	58, -492, 169, 154, -481, -169, 81, -300, 130, 134,
	-300, 23, 262, 262, 262, -300, 302, -528, -529, 15,
	132, -298, -529, -298, -298, -300, -530, 235, 451, 42,
	263, 262, -165, -166, -165, 445, 441, -387, 446, 447,
	-302, -529, -301, -300, -300, -301, -300, -300, -300, 233,
	236, 477, 322, 585, -528, -528, 30, 30, -416, -200,
	-416, 511, -280, -289, -416, -416, -416, -493, 238, -523,
	-522, 464, -525, 466, 159, -364, 159, -364, -345, 264,
	264, 154, 122, 23, -365, 122, 133, -364, -364, -365,
	-365, -221, 40, -288, 150, -289, 87, -221, 40, -520,
	-519, -200, -165, -148, -147, 82, 82, 82, -416, -416,
	-416, -416, -416, -418, -416, -416, -416, -295, -178, -187,
	239, -416, -416, -149, -150, 141, -315, -289, -149, -3,
	-116, -115, 116, 117, 119, 578, 357, 577, 581, 575,
	-364, 40, -411, 384, 383, -405, -407, 81, -406, 81,
	-406, -406, -406, 81, 81, -408, 81, -408, -408, -405,
	-409, 81, -409, -410, 81, -410, -409, -289, -320, -321,
	-289, 38, -426, 60, -144, 81, 30, 81, -289, -427,
	60, -144, 81, 30, -165, -110, -166, 153, 96, 87,
	-81, 82, 154, -485, 102, 103, -488, 202, 194, -289,
	-96, 87, -7, -8, -9, -10, -39, -71, -144, -454,
	-452, 81, 31, 411, 78, 15, -371, 233, 477, 362,
	260, 236, 339, -369, -352, -349, -347, -288, -345, -348,
	-347, -374, -270, 441, -111, 425, 314, -315, -315, -315,
	-315, -315, 101, 112, 337, 102, 103, -310, -329, 31,
	310, 311, -311, -311, -311, -311, -311, -311, -311, -311,
	-311, -311, -311, -311, -318, -327, -400, 81, 132, 130,
	134, 131, 114, -313, -313, -311, -311, 82, 154, -478,
	-477, 116, -315, -315, -289, -475, -476, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 353, 348,
	354, 352, 342, 360, 355, 356, 187, 508, 509, 502,
	503, 504, 505, 506, 507, -320, -320, -315, -475, -320,
	-264, 32, 31, -321, -321, -321, 82, -315, -489, 335,
	334, 336, -167, -289, -320, 82, 82, 82, 96, -321,
	-321, -320, -311, -320, -476, -264, -264, -321, -321, -264,
	-264, -264, -264, 141, -264, -264, -264, -264, -264, -264,
	-264, -264, 82, 82, 82, -165, -109, -435, -434, -315,
	40, 568, -110, -315, -162, -161, -315, -517, 87, 467,
	468, 163, 166, 165, 34, 81, 81, 153, -333, -200,
	112, -495, -289, -353, -350, -347, -289, -289, -343, -289,
	-289, -333, -333, -333, -200, -232, 52, 53, 54, -347,
	-139, 55, 56, -493, -480, 34, -168, -289, -254, 16,
	-313, -313, -347, 264, -528, -300, -300, -281, -280, -302,
	-297, -302, -302, -254, -529, -300, -300, -302, -298, -254,
	-289, 441, -254, -254, -387, -299, -289, -299, -333, -280,
	-281, -281, -200, -243, -244, 230, 346, 347, 228, 226,
	227, -251, 303, -334, 485, -227, -228, 76, 41, -230,
	388, 381, 266, 270, 91, 271, 421, 272, 235, 274,
	275, 276, 291, 293, 246, 277, 278, 279, 412, 280,
	158, 292, 281, 282, 283, 364, -222, 6, 325, 40,
	50, 51, 434, 433, 520, 517, 267, -495, -495, 30,
	30, -353, -289, -289, -157, -152, -156, -153, -158, -257,
	-259, -155, 81, -200, -147, -289, 154, 465, 467, 468,
	-523, -365, -523, -365, 31, 411, -368, 411, 31, -343,
	-362, 461, 463, -358, 87, 412, -348, -367, 78, 150,
	-434, -365, -365, -367, -367, 149, 154, -521, 466, 467,
	222, -110, -202, -200, -495, -352, -343, -289, -416, -202,
	-289, -289, 81, 35, -289, -289, -253, 154, -252, 15,
	-290, -289, 34, 87, 153, -253, -117, -115, 118, -315,
	-6, 577, -315, -6, -6, -315, -6, -315, -414, 385,
	96, 96, -272, 87, -272, 96, 96, 96, 82, 87,
	-356, 78, -428, -322, -473, 567, -172, 82, -167, -471,
	-472, -167, -171, -289, -428, -172, 82, -471, -110, -110,
	-289, 23, -81, -483, 153, 154, -168, -371, -351, -348,
	-373, 141, -289, -359, 154, 517, 592, 85, 237, -509,
	-508, 403, 82, 154, -438, 238, 484, 87, 590, 218,
	101, 337, 102, 103, -400, -321, -318, -313, -313, -311,
	-311, -316, 251, -316, 111, -315, -314, -477, 118, -315,
	34, 154, 79, 153, 82, 82, 15, 15, 82, -315,
	82, 82, 82, 82, 15, 15, -315, 82, 153, 82,
	82, 82, 82, 79, 82, 154, 82, 154, -321, -315,
	82, 82, -315, -315, -315, -321, 82, -315, -315, -315,
	-315, -315, -315, -315, -315, -381, 436, -381, -381, 154,
	82, 87, 154, 22, 154, -159, 36, 37, 164, 167,
	167, 166, -186, -188, -189, -190, -191, -192, 132, 155,
	156, -179, -180, -181, -182, -206, -270, 189, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	250, 184, 185, 186, 187, 205, 170, 190, 171, 172,
	173, 174, 175, 176, 179, 180, 181, 182, 178, -289,
	-200, -169, 35, -498, 389, -510, 154, 40, -508, 477,
	-135, 314, -336, 79, -142, 15, -200, -200, -200, -213,
	34, 15, -151, -201, -289, 81, 82, 154, -315, -344,
	79, -289, -281, -254, -254, -200, -289, -254, -254, -300,
	-302, -302, -298, 153, -280, -169, 154, -199, -203, 241,
	-196, -198, -270, -305, -197, 244, -467, 242, 240, 106,
	245, 299, 107, 235, -286, 241, -286, 241, -231, 237,
	34, -286, -246, 235, 299, 242, -245, 235, 107, -289,
	241, 245, 240, -285, 122, -279, 149, 237, 42, 364,
	-285, 521, -285, -285, -285, -285, -285, -285, -285, 273,
	273, -285, -285, -285, -285, -285, -285, -285, -285, -285,
	-285, -285, 159, -285, -285, -285, -285, -285, -285, 81,
	268, 269, -499, 389, 30, 345, 345, -510, 30, -143,
	339, 30, -260, -261, -262, -263, 67, 71, 73, 68,
	69, 70, 74, 30, 154, -287, -291, 34, -289, 87,
	-287, -147, -152, -157, -287, 81, -522, -524, 469, 466,
	472, -367, -367, 237, 81, 122, -367, -367, 40, -288,
	-519, 473, 467, -177, 23, 154, 78, -202, -179, -187,
	-254, -150, -152, -289, 87, -289, 141, -254, 119, -6,
	117, -121, -120, -119, 120, 575, 581, 119, 119, 119,
	82, 82, 82, 154, 82, 82, 82, 154, 82, 154,
	-441, 446, 39, 154, 81, 82, 154, 60, 154, 122,
	82, 154, 82, 60, -177, 153, 421, -289, -452, 82,
	-373, 154, 237, 153, 153, -349, 367, -288, -351, 20,
	517, -270, 38, -276, -275, 87, 590, 82, -316, -316,
	111, -313, -310, 82, 119, -315, 117, -204, -206, 383,
	384, -205, -211, 150, 188, 250, 187, 186, 184, 383,
	384, -221, -289, -315, -315, 82, -315, -315, 15, -289,
	-221, -311, -315, -164, 82, -380, -381, -380, 82, 82,
	82, 82, -380, 82, 82, 82, 82, 82, 82, 82,
	82, 81, -434, -441, -315, -315, -161, -160, 43, 167,
	375, 82, 154, -270, 82, 154, -206, -169, 34, -501,
	448, 391, 401, -285, -307, -306, 341, 41, -421, 412,
	397, 398, -350, 264, -289, -507, 94, 122, 78, 329,
	330, 331, 332, -331, -332, -330, -334, -495, 81, 81,
	81, -401, 319, -206, -200, -151, -289, 15, 154, -494,
	153, -1, -289, -343, -300, -254, -529, -254, -300, -300,
	-302, -289, 34, -244, -248, 44, 46, -203, -206, -197,
	-466, -467, -333, -289, 107, -466, 107, 81, -203, -270,
	-270, -247, -299, -270, -289, -289, -289, -289, -289, -289,
	107, 107, -226, 40, 47, 48, 49, -285, -285, 191,
	-229, 40, 411, 413, 414, 96, 96, 96, 96, 87,
	87, 87, -285, -285, 96, 87, -291, 87, -468, 166,
	44, 45, 96, 96, 96, 96, 40, 87, -233, 40,
	284, 288, 285, 286, 287, 87, 96, 40, 96, 40,
	96, 40, -289, 81, -469, -470, 87, -501, -285, 345,
	-364, 122, -307, -506, 314, -136, 91, 31, -173, 230,
	227, -495, -355, -354, -270, -156, -156, -156, -156, 67,
	67, 67, 72, 67, 72, 67, -262, -355, -158, -169,
	-291, 82, -515, -514, -513, -511, 75, 238, 76, -320,
	466, 470, 471, -351, -303, 87, -358, 13, -200, -200,
	-420, 294, 295, 82, -256, 17, 153, -256, 115, -6,
	-117, -119, -315, -6, -315, 577, 357, 578, 87, 96,
	96, -449, 431, 426, 428, 107, -322, -436, -435, 60,
	-144, -167, -428, -472, -434, -289, 60, -144, -428, -289,
	96, 15, -348, -343, 141, 141, -289, 368, -359, 87,
	390, 87, 233, 591, 154, 122, -276, -310, -315, 82,
	-214, 175, 174, -214, 82, -406, -406, -405, -408, -405,
	-214, -214, 82, 82, 23, 82, 82, 82, -315, 82,
	82, 154, -425, 486, -380, -380, -380, -380, -380, -380,
	-380, -380, -380, -380, -380, -380, -380, -324, -323, 256,
	-449, 44, 45, 87, 87, -190, -206, 231, -181, 40,
	34, -144, -502, 91, -496, 87, -289, -503, 91, 392,
	152, 343, 40, 393, 394, 409, 338, 96, 96, 399,
	-497, -289, -143, -505, 51, 122, 87, -200, -330, -279,
	149, 275, 322, -193, -194, -195, -203, -196, -198, -193,
	-193, -402, 321, 20, 96, 140, -170, 79, 153, -152,
	-201, -289, 141, 82, -254, -289, -254, -254, -300, -144,
	-270, -248, -218, -217, -215, 101, 112, 40, 381, -216,
	91, 149, 289, 292, 291, 267, 290, -242, -304, 78,
	387, 327, 328, -334, 240, 106, 107, 369, -305, -464,
	-289, -462, -464, -289, -462, -462, -333, -315, -249, 44,
	46, -203, 237, 30, 227, -250, 327, 328, -360, 300,
	112, -360, -289, -221, -221, 30, 87, 87, -202, 82,
	154, 122, -502, -496, 122, -365, 87, -503, -507, 122,
	87, 154, -173, -173, -254, 154, 122, -175, -174, 78,
	79, -176, 78, -174, 67, 67, -254, -513, -512, 23,
	-467, -467, -467, 82, 82, -255, 18, 20, 141, -255,
	119, 117, 119, 119, -289, 82, 82, -412, 569, -445,
	-447, 426, 20, 20, 13, 82, -428, -428, -343, -359,
	412, -200, -275, 87, 591, -315, 82, -315, 82, 87,
	-164, 20, -412, -183, -206, -308, -144, -140, 517, 87,
	-500, 403, 87, 87, 96, 40, 96, 152, 395, -422,
	-136, -504, 91, 122, 590, 81, -285, -285, -285, -289,
	82, 154, 82, 82, -403, 255, 96, 140, 96, 140,
	96, -287, -152, -289, -254, -494, 153, -254, -254, -215,
	101, -311, 87, -223, -288, 150, -224, 40, 288, 284,
	122, 122, -225, 40, 268, 269, -234, 81, 299, 13,
	191, 107, 107, -200, 81, 81, 79, 309, 81, 81,
	-464, 82, -270, -249, -270, 40, -250, 40, 300, 149,
	-221, 82, -470, 87, -500, 87, -367, -505, 87, -495,
	-164, -354, -434, -315, 81, -315, 81, 67, 19, 17,
	-315, -321, 239, -6, 578, 357, -235, 570, 87, 20,
	87, -443, 87, -355, -113, -439, -387, 82, 82, -380,
	-383, -382, -386, 432, 301, 439, -321, -235, 516, -140,
	-141, 59, 473, 20, 517, 342, 40, 96, 40, 396,
	87, 102, 103, -277, -278, 87, -338, -340, -270, 81,
	-221, -223, 87, -219, -220, -251, -334, -195, -112, -111,
	-219, -404, 158, 96, 140, 96, 96, -254, -254, 87,
	87, 96, 81, -429, 30, -339, 81, -338, -338, -465,
	329, 330, 331, 333, 332, -465, -338, -338, 81, -361,
	-360, -311, -285, 149, -504, -165, -168, -463, -289, 240,
	20, 20, -289, -289, -273, 571, 96, 87, 428, -413,
	572, -448, 431, -442, -440, 426, 427, 428, 429, 82,
	-385, 114, 395, 399, -309, -312, 96, 99, 183, 152,
	-273, -184, -289, 299, 87, 390, 87, 342, 591, 154,
	122, 82, 154, -405, -315, -375, 256, 154, -251, -279,
	-113, -375, -419, 166, 320, 517, 96, 140, 96, -164,
	82, -315, -325, -285, -237, -236, 513, -338, 82, 82,
	82, 82, -338, -221, -285, 82, 82, 154, 81, 20,
	87, -450, 238, -446, -447, 430, -440, 20, 428, 20,
	20, -384, -385, 399, -309, -312, 567, 437, 437, 437,
	34, 368, 412, -278, 87, -341, -340, -159, 82, -376,
	308, 20, -251, -285, -376, 320, 96, 140, 96, -165,
	82, -289, -241, -239, -240, 78, 444, 297, 298, 82,
	-341, 79, -341, 79, -341, 79, -341, 79, 82, -221,
	-289, 240, -274, -289, -443, -457, 81, 96, -445, -444,
	-446, 20, -443, 20, -443, -443, 111, 438, 438, 438,
	87, -342, 246, 91, 517, 327, 328, -159, 20, -377,
	301, 302, -378, -391, 304, -221, 96, -360, -240, 78,
	-239, 78, 14, 13, -465, -465, -465, -465, -242, 82,
	154, -461, 30, 82, -456, -455, -271, -451, -289, 431,
	432, 87, -443, -384, -285, 87, 326, -270, 81, -389,
	305, 81, -387, 81, -387, 107, 330, -238, 294, 295,
	30, 166, -238, -341, -341, -341, -341, -289, -460, -459,
	-458, 82, 154, 153, 96, -289, -374, -379, 306, 96,
	-311, 81, -311, 81, -388, 303, 81, 101, 40, 296,
	154, 122, -455, -289, 82, -393, 81, 20, 82, -374,
	82, -374, 81, 122, -311, -459, 40, -315, 153, -394,
	-392, 256, -378, 82, 82, 82, -374, 96, 82, -289,
	82, 154, -289, -390, 307, 82, -392, -395, 60, 96,
	-399, -396, 81, -251, 258, 132, -399, -251, -398, -397,
	306, 259, 81, 82, 154, -289, 255, 81, -321, -397,
	-396, -321, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 818, 819, 820, 821, 822, 823, 0, 0,
	0, 0, 592, 593, 0, 562, 0, 0, 0, 0,
	0, 0, 453, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 351, 352, 353, 354, 355, 356, 357, 0, 285,
	281, 206, 207, 208, 209, 210, 292, 293, 430, 0,
	0, 0, 0, 673, -2, 53, 274, 0, 265, 265,
	824, 825, 826, 827, 828, 829, 830, 831, -2, 605,
	0, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 340, 341, 342, 336, 337, 339,
	338, -2, 0, 605, 0, 0, 0, 693, 0, 0,
	710, 732, 23, 0, 7, 9, 10, 11, 12, 13,
	14, 15, 16, 17, 18, 0, 0, 19, 0, 19,
	0, 0, 0, 1168, 1169, 1170, 1171, -2, 1655, 1633,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 0,
	258, 256, 1633, 1655, 1715, 1748, 0, 836, 0, 651,
	0, 656, 1122, 651, 286, 594, 595, 693, 693, 560,
	0, 322, 0, 1646, 326, 0, 0, 0, 557, 316,
	317, 318, 319, 320, 321, 0, 0, 817, 0, 0,
	312, 0, 280, 1706, 0, 0, 0, 0, 0, 0,
	150, 942, 152, 944, 156, 163, 0, 0, 168, 169,
	172, 173, 174, 175, 176, 0, 180, 0, 182, 185,
	0, 187, 188, 0, 191, 192, 193, 0, 203, 204,
	205, 945, 946, 947, -2, 81, 834, 1567, 1457, 0,
	1464, 1465, 1476, 1487, 1246, 1247, 1248, 1249, 0, 0,
	0, 0, 0, 1256, 1257, 0, 1273, 1811, 0, 1263,
	1264, 1265, 1266, 1267, 90, 102, 103, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 0, 1517, 1518, 1519, 1430, 1233,
	1168, 0, 1819, 0, 1839, 1844, 1845, 1846, 1847, 1838,
	0, 0, 1415, 0, 1405, 0, 0, -2, -2, 0,
	0, 1774, -2, 1816, 1835, 1843, 1820, 1842, 1813, 1814,
	1808, 1809, 1810, 1812, 1821, 1823, 1834, 0, 1830, 1840,
	1841, 0, 0, 0, 0, 104, 105, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1421, -2, 1423, 1424, 1426, -2, 1428, 1429, -2, 1432,
	1433, 1434, -2, -2, 1437, 1438, 1439, 1440, 1441, 1442,
	1445, -2, -2, -2, -2, 1417, 1418, 1419, 1420, 1409,
	1410, 1411, 1412, 1413, 1414, -2, -2, -2, 693, 768,
	0, -2, 0, 0, 0, 715, 718, 721, 724, 0,
	54, 55, 275, 276, 264, 266, 0, 270, 0, 263,
	0, 0, 0, 0, 974, 974, 974, 974, 974, 974,
	0, 974, 0, 0, 0, 974, 864, 949, 950, 951,
	972, 973, 1020, 0, 0, 0, 0, 610, 606, 607,
	608, 609, 681, 0, 683, 686, 537, 537, 484, 0,
	0, 0, 537, 0, 498, 490, 0, 0, 0, 537,
	0, 0, 688, 688, 0, 540, 547, 537, 537, -2,
	537, 537, 537, 0, 0, 504, 505, 506, 490, 490,
	509, 510, 511, 522, 523, 548, 1591, 0, 0, 430,
	0, 430, 0, 430, 430, 430, 612, 1743, 1653, 1720,
	1706, 0, 0, 231, 1774, 236, 0, 1654, 1669, 0,
	0, 1687, 0, -2, 0, 302, 688, 0, 694, 0,
	693, 0, 0, 430, 430, 430, 430, 430, 1019, 430,
	430, 430, 0, 0, 0, 430, 430, 0, 0, 733,
	734, 729, 730, 731, 735, 736, 5, 6, 19, 0,
	0, 0, 0, 0, 0, 60, 59, 0, 1568, 1586,
	1522, 1523, 1524, 1573, 1526, 1577, 1577, 1577, 1577, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 0, 0,
	1566, 1546, 1575, 1575, 1575, 1573, 1570, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1580, 1580, 1583, 1583, 1580, 0, 1455, 0, 0,
	0, 0, 655, 0, 0, 688, -2, 0, 561, 323,
	1172, 0, 0, 327, 328, 0, 0, 343, 0, 346,
	331, 332, 333, 0, 130, 0, 314, 315, 0, 0,
	282, 0, 0, 0, 431, 0, 0, 0, 0, 0,
	0, 160, 157, 164, 167, 177, 184, 0, 196, 198,
	201, 158, 165, 170, 171, 178, 199, 159, 161, 162,
	166, 200, 202, 179, 183, 197, 181, 186, 189, 190,
	195, 0, 131, 0, 0, 0, 0, 0, 1463, 0,
	0, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1457, 0, 0,
	1252, 1253, 1254, 1255, 1258, 0, 1274, 0, 0, 0,
	1516, 1520, 0, 1455, 1455, 0, 1455, 1451, 0, 0,
	0, 0, 0, 0, 1455, 1391, 0, 0, 1393, 1406,
	0, 0, 1395, 1396, 0, 1399, 1400, 1455, 0, 1455,
	1404, 1387, 1388, 0, 1451, 1451, 0, 0, 1451, 1451,
	1451, 1451, 1451, 1451, 1451, 1451, 1451, 1451, 1451, 1451,
	0, 0, 0, 688, 0, 0, 676, 0, 657, 0,
	712, 714, 0, 716, 717, 719, 720, 722, 723, 725,
	726, 56, 0, 0, 268, 0, 273, 0, 833, 0,
	0, 849, 974, 865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 974, 974, 974, 0, 866, 0, 0,
	0, 612, 611, 0, 682, 0, 0, 741, 0, 0,
	483, 0, 490, 537, 537, 496, 497, 492, 491, 543,
	544, 540, 0, 540, 540, 741, 0, 516, 517, 518,
	537, 537, 524, 689, 525, 526, 540, 0, 545, 546,
	741, 0, 0, 741, 741, 0, 534, 535, 536, 0,
	0, 974, 0, 553, 492, 492, 1592, 1593, 0, 983,
	0, 0, 0, 556, 0, 0, 0, 0, 613, 211,
	214, 0, 217, 0, 1743, 0, 1743, 0, 224, 0,
	0, 0, 0, 0, 0, 254, 255, 0, 0, 0,
	0, 245, 248, 1116, 1117, 939, 940, 249, 250, 294,
	295, 0, 657, 711, 713, 707, 708, 709, 0, 0,
	0, 0, 0, 430, 0, 0, 0, 588, 0, 590,
	0, 0, 0, 749, 743, 745, 812, 90, 749, 8,
	77, 74, 0, 19, 0, 0, 19, 19, 0, 19,
	259, 0, 1589, 1587, 1588, 1525, 1574, 0, 1551, 0,
	1552, 1553, 1554, 0, 0, 1547, 0, 1548, 1549, 1550,
	1541, 0, 1542, 1543, 0, 1544, 1545, 257, 0, 1456,
	837, 0, 630, 643, 625, 0, 632, 0, 1123, 614,
	643, 616, 0, 632, 657, 679, 657, 0, 324, 0,
	329, 0, 0, 345, 347, 348, 349, 334, 335, 558,
	310, 311, 303, 304, 305, 306, 307, 308, 309, 313,
	100, 0, 283, 284, 0, 0, 0, 144, 145, 146,
	147, 148, 149, 151, 135, 579, 581, 931, 943, 0,
	934, 0, 154, 194, 127, 0, 0, 1458, 1459, 1460,
	1461, 1462, 1466, 0, 1468, 1470, 1472, 1474, 0, 1492,
	-2, -2, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1477, 1490, 1491, 0, 0, 0,
	0, 0, 0, 1488, 1488, 1483, 0, 1250, 0, 1271,
	1275, 0, 0, 0, 91, 1450, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 0, 0, 1457, 0, 0,
	0, 1452, 1453, 0, 0, 0, 1346, 0, 0, 1352,
	1353, 1354, 0, 638, 0, 1416, 1392, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 767, 769, 0, 647, 649,
	650, 0, 677, 690, 695, 696, 699, 52, 57, 277,
	278, 0, 0, 272, 0, -2, 851, 0, 0, 686,
	0, 0, 880, 428, 925, 0, 0, 0, 941, 964,
	970, 0, 0, 0, 998, 867, 872, 873, 874, 868,
	869, 875, 876, 0, 684, 0, 0, 781, 482, 0,
	538, 539, 487, 1706, 492, 741, 741, 499, 493, 500,
	542, 501, 502, 503, 0, 741, 741, 537, 540, 527,
	541, 540, 530, 531, 0, 549, 554, 550, 0, 552,
	507, 508, 686, 359, 360, 0, 404, 404, 384, 404,
	0, 371, 1594, 0, 0, 0, 0, 381, 1594, 0,
	1594, 1594, 1594, 1594, 1594, 1594, 1594, 0, 0, 1594,
	1594, 1594, 1594, 1594, 1594, 1594, 1594, 1594, 1594, 1594,
	0, 1594, 1594, 1594, 1594, 1594, 1102, 1594, 0, 984,
	391, 392, 393, 394, 399, 400, 0, 425, 0, 0,
	0, 428, 0, 914, 754, 0, 755, 756, 752, 783,
	807, 807, 0, 807, 787, 1122, 0, 0, 222, 223,
	212, 0, 213, 0, 225, 226, 0, 228, 229, 230,
	237, 1653, 1720, 232, 234, 0, 0, 238, 251, 252,
	253, 0, 0, 243, 244, 0, 0, 297, 298, 300,
	0, 705, 576, 1120, 577, 578, 582, 0, 0, 585,
	586, 587, 851, 0, 919, 920, 741, 0, 750, 0,
	746, 813, 0, 815, 0, 741, 0, 75, 19, 0,
	68, 65, 0, 0, 0, 0, 0, 1569, 1521, 1590,
	0, 0, 0, 1571, 0, 0, 0, 0, 58, 659,
	621, 0, 624, 640, 0, 644, 0, 0, 636, 629,
	633, 0, 0, 653, 615, 0, 0, 620, 705, 680,
	1173, 0, 330, 344, 0, 0, 0, 0, 138, 928,
	0, 139, 143, 133, 0, 0, 0, 933, 0, 930,
	935, 0, 153, 0, 0, 128, 129, 989, 994, 0,
	1467, 1469, 1471, 1473, 1475, 0, 1478, 1488, 1488, 1484,
	0, 1479, 0, 1481, 0, 1458, 0, 1276, 0, 0,
	0, 0, 0, 0, 1336, 1337, 0, 0, 1341, 0,
	1343, 1344, 1345, 1347, 0, 0, 0, 1351, 0, 1390,
	1408, 1394, 1397, 0, 1401, 0, 1403, 0, 693, 0,
	1313, 1313, 0, 0, 0, 0, 1313, 0, 0, 0,
	0, 0, 0, 0, 0, 1268, 0, 1269, 1270, 0,
	770, 659, 0, 0, 0, 702, 700, 701, 279, 267,
	269, 0, 0, 0, 839, 840, 842, 0, 845, 846,
	847, 0, 852, 853, 855, 856, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1638, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 850,
	686, 0, 975, 887, 1594, 432, 0, 0, 927, 0,
	903, 0, 0, 0, -2, 0, 0, 0, 0, 1000,
	0, 0, 0, 599, 603, 23, 687, 0, 742, 485,
	0, 486, 537, 494, 495, 741, 1122, 519, 520, 741,
	537, 537, 540, 0, 551, 0, 983, 362, 401, 0,
	1131, 1132, 0, 0, 1138, 1147, 974, 1203, 0, 1147,
	0, 0, 1149, 1150, 0, 405, 0, 0, 0, 385,
	386, 0, 370, 0, 0, 0, 369, 0, 0, 412,
	0, 0, 0, 0, 1595, 1594, 1594, 0, 379, 380,
	0, 383, 0, 0, 0, 0, 0, 0, 0, 1594,
	1594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 0, 0, 0, 0, 0,
	1108, 1109, 887, 1594, 0, 0, 0, 432, 901, 910,
	0, 0, 0, 0, 0, 0, 774, 0, 0, 773,
	0, 0, 0, 0, 0, 686, 808, 0, 810, 811,
	785, -2, 0, 754, 790, 1455, 215, 216, 0, 0,
	221, 239, 241, 0, 0, 0, 240, 242, 246, 247,
	296, 299, 301, 675, 0, 0, 0, 1021, 0, 591,
	739, 744, 751, 814, 816, 91, 747, 739, 0, 78,
	19, 77, 69, 70, 0, 19, 0, 0, 0, 0,
	1579, 1578, 1564, 0, 1565, 1576, 1581, 0, 1584, 0,
	663, 0, 0, 643, 645, 0, 0, 643, 0, 0,
	652, 0, 0, 643, 678, 0, 0, 559, 101, 350,
	0, 0, 0, 0, 0, 580, 0, 932, 135, 0,
	0, 155, 0, 0, 992, 0, 994, 1454, 1480, 1482,
	0, 1489, 1485, 1251, 1259, 1272, 0, 0, 1278, 1290,
	1290, 0, 1281, 1577, 1577, 1284, 1573, 1575, 1573, 1290,
	1290, 0, 92, 0, 0, 1342, 0, 0, 0, 639,
	0, 0, 0, 1311, 1313, 1318, 1314, 1319, 1313, 1313,
	1313, 1313, 1324, 1313, 1313, 1313, 1313, 1313, 1313, 1313,
	1313, 1309, 648, 663, 691, 692, 697, 698, 0, 271,
	0, 0, 844, 0, 0, 0, 857, 0, 0, 891,
	888, 889, 890, 0, 922, 433, 434, 435, 436, 0,
	0, 0, 926, 0, 914, 896, 0, 0, 0, 965,
	966, 967, 968, 969, -2, 978, 0, 0, 1124, 1124,
	1124, 1008, 0, 999, 651, 0, -2, 0, 0, 601,
	0, 0, 782, 488, 741, 512, 0, 528, 741, 741,
	537, 555, 0, 361, 373, 402, 0, 401, -2, 1137,
	1162, 1148, 1162, 1204, 1162, 1162, 974, 0, 406, 0,
	0, 372, 409, 0, 0, 0, 0, 410, 411, 413,
	0, 415, 375, 387, 388, 389, 390, 0, 0, 0,
	382, 395, 396, 397, 398, 1070, 1071, 1072, 1075, 1076,
	1077, 1078, 0, 0, 1081, 1082, 1083, 1084, 1085, 1159,
	1160, 1161, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1110,
	1111, 1112, 1113, 1114, 1115, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 0, 0, 1105, 0, 891, 0, 0,
	0, 0, 922, 903, 0, 913, 0, 915, 916, 0,
	0, 622, 741, 289, 0, 777, 771, 0, 760, 775,
	776, 763, 0, 765, 0, 761, 762, 741, 753, 784,
	809, 786, 789, 791, 792, 798, 0, 0, 0, 0,
	218, 219, 220, 227, 0, 452, 233, 706, 1121, 583,
	584, 1022, 1023, 589, 737, 0, 0, 737, 73, 76,
	0, 71, 0, 0, 0, 0, 63, 61, 1572, 0,
	0, 665, 115, 0, 0, 0, 641, 0, 646, 643,
	628, 637, 627, 634, 635, 654, 643, 619, 618, 1174,
	325, 0, 929, 135, 140, 141, 142, 136, 134, 936,
	0, 938, 0, 990, 994, 0, 0, 1486, 1277, 1260,
	1279, 1291, 1292, 1280, 1261, 1282, 1283, 1285, 1286, 1287,
	1288, 1289, 1262, 1338, 0, 1340, 1348, 1349, 0, 1398,
	1402, 0, 0, 0, 1317, 1320, 1321, 1322, 1323, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 693, 1310, 0,
	665, 703, 704, 832, 835, 841, 843, 0, 854, 0,
	0, 870, 863, 0, 0, 882, 883, 893, 0, 0,
	0, 438, 439, 0, 0, 0, 451, 447, 448, 449,
	429, 921, 910, 899, 0, 0, 909, 0, 979, 1594,
	1594, 1594, 0, 0, 1125, 1126, 1128, 1129, 1130, 0,
	0, 1011, 0, 0, 1002, 0, 807, 0, 0, 741,
	600, 603, 604, 685, 489, 741, 532, 529, 741, 358,
	403, 374, 1164, -2, 1177, 1179, 0, 984, 1182, 1183,
	0, 0, 0, 0, 0, 0, 1225, 1191, 0, 0,
	1195, 1196, 1197, 0, 0, 1504, 1505, 0, 1202, 0,
	1163, 0, 1151, 1163, 0, 0, 1162, 0, 363, 407,
	0, 406, 0, 0, 0, 416, 419, 420, 417, 1199,
	0, 418, 414, 1073, 1074, 0, 1079, 1080, 0, 1104,
	0, 0, 421, 0, 0, 0, 422, 427, 896, 0,
	911, 0, 917, 918, 693, 0, 0, 757, 778, 0,
	0, 758, 0, 759, 764, 766, 288, 793, 0, 0,
	795, 796, 797, 788, 235, 727, 0, 0, 748, 728,
	0, 19, 0, 0, 66, 1582, 1585, 667, 0, 664,
	116, 0, 0, 0, 0, 642, 626, 617, 137, 132,
	937, 118, 993, 995, 991, 0, 1350, 0, 1313, 1312,
	1306, 0, 667, 0, 860, 858, 870, 862, 877, 892,
	881, 0, 923, 924, 0, 440, 441, 0, 444, 450,
	894, 895, 0, 0, 907, 0, 0, 0, 0, 971,
	-2, 0, 0, -2, 1014, 0, 1009, 0, 1001, 0,
	1004, 741, 741, -2, 597, 602, 0, 513, 533, 1178,
	1180, 1181, 1184, 1185, 1118, 1119, 1186, 1230, 1231, 1232,
	0, 0, 1189, 1227, 1228, 1229, 1190, 0, 0, 0,
	0, 1502, 1503, 1223, 0, 0, 0, 0, 0, 0,
	0, 1145, 408, 364, 365, 0, 367, 368, 1200, 1594,
	377, 1103, 1106, 1107, 426, 423, 424, 899, 902, 623,
	688, 290, 291, 779, 0, 772, 802, 799, 0, 0,
	738, 740, 67, 72, 0, 0, 669, 0, 666, 0,
	660, 662, 126, 631, 88, 109, 0, 1339, 1389, 1316,
	0, 1307, 0, 1301, 1302, 1303, 1308, 669, 0, 861,
	0, 878, 879, 0, 0, 437, 442, 0, 445, 446,
	900, 897, 898, 0, 905, 0, 0, 960, 1573, 0,
	980, 981, 982, 1024, -2, 1067, 0, 1127, 986, 118,
	1024, 1005, 0, 1012, 0, 1010, 1003, 693, 598, 1187,
	1188, 0, 0, 1405, 1594, 1218, 0, 0, 0, 1152,
	1154, 1155, 1156, 1157, 1158, 1153, 0, 0, 0, 1144,
	1146, 366, 0, 1594, 912, 287, 0, 0, 803, 805,
	800, 801, 62, 64, 79, 0, 668, 117, 0, 80,
	0, 106, 0, 119, 120, 0, 0, 0, 0, 1315,
	1304, 0, 0, 0, 0, 0, 1506, 1507, 1508, 0,
	658, 0, 859, 0, 884, 0, 886, 443, 904, 907,
	0, 953, 0, 699, 0, 1026, 0, 983, 1069, 1594,
	988, 1026, 997, 0, 1007, 0, 1016, 0, 1013, 688,
	1226, 0, 1194, 0, 1206, 1219, 0, 0, 953, 953,
	953, 953, 0, 376, 0, 780, 794, 0, 0, 0,
	89, 93, 0, 115, 112, 0, 121, 0, 0, 0,
	0, 0, 1293, 0, 0, 0, 1297, 1298, 1299, 1300,
	0, 871, 885, 906, 908, 952, 961, 962, 699, 985,
	0, 1063, 1068, 0, 987, 1006, 1015, 0, 1018, 596,
	1192, 1198, 1205, 1207, 1208, 0, 1220, 1221, 1222, 1224,
	1133, 0, 1135, 0, 1139, 0, 1141, 0, 0, 378,
	804, 806, 0, 671, 661, 82, 0, 0, 110, 111,
	113, 0, 122, 0, 124, 125, 0, 1294, 1295, 1296,
	848, 954, 1594, 0, 0, 958, 959, 963, 0, 1051,
	0, 0, 1057, 0, 1064, 1073, 1017, 1193, 1209, 0,
	1210, 0, 0, 0, 953, 953, 953, 953, 1143, 670,
	0, 996, 0, 94, 0, 96, 98, 99, 1165, 107,
	108, 114, 123, 1305, 0, 956, 0, 1027, 0, 1029,
	0, 0, 0, 0, 0, 1061, 0, 1211, 1213, 1214,
	0, 0, 1212, 1134, 1136, 1140, 1142, 672, 83, 84,
	0, 95, 0, 0, 955, 957, 0, 1031, 0, 1052,
	0, 0, 0, 0, 0, 0, 0, 1215, 1217, 1216,
	0, 0, 97, 1166, 1028, 1025, 0, 1063, 1053, 0,
	1055, 0, 0, 0, 0, 85, 86, 87, 0, 0,
	1033, 0, 1049, 1054, 1056, 1058, 0, 1062, 1060, 1167,
	1032, 0, 1045, 1030, 0, 1059, 1034, -2, 0, 1050,
	1035, -2, 0, 1043, 0, 0, 1036, 1044, 0, 1039,
	0, 0, 0, 1038, 0, -2, 1046, 0, 0, 1040,
	-2, 0, 1048, 1047,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 589, 588,
	123, 122, 124, 3, 592, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 590, 135, 591, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:738
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:745
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:751
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:759
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:765
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:769
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:784
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:788
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:794
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:799
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:803
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:835
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:842
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:862
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:868
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:875
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:883
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:889
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:898
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:908
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:916
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:924
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:932
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:942
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:950
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:960
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:967
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:976
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:986
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:990
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:996
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1000
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1006
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1015
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1025
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1029
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1035
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1048
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1054
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1075
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1088
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1095
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1099
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1105
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1109
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1115
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1122
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1130
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1134
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1148
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1152
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1156
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1169
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1175
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1184
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1195
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1199
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1205
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1209
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1215
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1219
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1225
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1249
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1268
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1272
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1276
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1285
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1292
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1300
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1307
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1312
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1319
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1328
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1352
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1356
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1362
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1368
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1386
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1403
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1426
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1430
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1434
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1439
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1443
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1449
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1462
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1473
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1486
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1490
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1500
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1513
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1526
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1553
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1562
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1566
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1570
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1574
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1578
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1582
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1589
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1593
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1599
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1606
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1615
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1619
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1633
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1637
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1641
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1645
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1649
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1653
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1834
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1841
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1848
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1858
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1862
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1868
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1883
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1887
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1895
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1901
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1905
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1918
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1925
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1934
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1964
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1968
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1972
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1978
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1984
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1995
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2001
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2005
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2028
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2037
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2045
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2053
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2076
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2099
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2106
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2113
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2121
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2128
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2135
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2144
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2148
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2152
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2158
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2162
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2168
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2172
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2178
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2182
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2199
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2204
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2208
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2212
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2216
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2220
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2224
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2228
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2232
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2236
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2242
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2246
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2254
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2259
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2264
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2270
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2277
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2283
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2297
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2307
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2336
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2340
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2356
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2362
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2366
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2372
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2378
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2382
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2386
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2390
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2396
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2408
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2424
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2434
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2440
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2451
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2457
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2469
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2477
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2485
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2544
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2548
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2554
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2560
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2565
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2566
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2567
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2572
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2588
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2599
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2608
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2612
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2618
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2625
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2634
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2644
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2653
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2663
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2673
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2682
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2686
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2690
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2694
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2698
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2707
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2716
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2722
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2726
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2730
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2734
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2738
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2742
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2746
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2750
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2755
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2786
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2792
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2798
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2807
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2811
		{
			yyVAL.str = string("COLUMN")
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2816
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2822
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2828
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2838
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2846
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2853
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2860
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2867
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2881
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2896
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2903
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2912
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2916
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2923
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2935
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2951
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2964
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2970
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2981
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2992
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3001
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3005
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3010
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3014
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3030
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3038
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3042
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3046
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3050
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3054
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3058
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3062
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3066
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3074
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3082
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3086
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3096
		{
			yyVAL.item = nil
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3101
		{
			yyVAL.item = nil
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3141
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3155
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3159
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3163
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3172
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3176
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3182
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3187
		{
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3191
		{
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3196
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3206
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3216
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3224
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3230
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3236
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3242
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3248
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3254
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3260
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3269
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3273
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3277
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3285
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3289
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3293
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3297
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3303
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3310
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3320
		{
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3322
		{
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3331
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3341
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3350
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3358
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3364
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3370
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3376
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3382
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3391
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3401
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3413
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3417
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3423
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3435
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3455
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3462
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3467
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3471
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3475
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3480
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3484
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3490
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3503
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3507
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3513
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3518
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3522
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3526
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3532
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3538
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3542
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3548
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3554
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3558
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3562
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3568
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3572
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3596
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3605
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3614
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3623
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3627
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3633
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3642
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3651
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3661
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3667
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3673
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3683
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3689
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3698
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3705
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3716
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3721
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3728
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3744
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3757
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3768
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3772
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3778
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3783
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3790
		{
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3792
		{
		}
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3795
		{
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3804
		{
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3808
		{
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3813
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3822
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3829
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3835
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3843
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3850
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3857
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3877
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3887
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3891
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3897
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3904
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3910
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3918
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3925
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3932
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3951
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3955
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3964
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3968
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3974
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3983
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3987
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3993
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3997
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4003
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4007
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4013
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4018
		{
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4029
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4033
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4040
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4049
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4055
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4059
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4065
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4069
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4078
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4091
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4098
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4105
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4123
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4148
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4159
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4172
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4176
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4181
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4185
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4192
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4197
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4204
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4210
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4214
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4218
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4222
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4226
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4230
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4236
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4243
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4252
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4256
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4262
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4270
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4274
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4279
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4283
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4289
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4306
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4312
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4318
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4322
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4328
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4333
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4337
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4341
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4346
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4350
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4354
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4363
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4371
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4375
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4379
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4393
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4397
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4407
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4417
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4427
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4439
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4447
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4455
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4464
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4472
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4480
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4488
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4496
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4504
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4512
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4520
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4528
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4538
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4549
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4563
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4567
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4571
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4576
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4580
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4584
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4593
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4597
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4606
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4615
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4621
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4625
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4631
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4635
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4640
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4644
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4649
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4657
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4663
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4671
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4679
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4689
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4695
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4713
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4722
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4732
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4736
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4746
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4750
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4754
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4758
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4764
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4774
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4778
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4784
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4794
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4800
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4806
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4810
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4814
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4824
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4830
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4834
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4840
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4844
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4850
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4854
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4864
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4877
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4883
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4889
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4902
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4920
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4924
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4930
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4940
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4944
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4948
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4953
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4957
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4961
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4965
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4970
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4974
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4978
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4982
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4986
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4991
		{
			yyVAL.str = ""
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4995
		{
			yyVAL.str = yyDollar[1].str
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4999
		{
			yyVAL.str = yyDollar[2].str
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5005
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5011
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5015
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5019
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5033
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 832:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5067
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5077
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5083
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 835:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5089
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5099
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5104
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5110
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5117
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5121
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5127
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5138
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5142
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5146
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5150
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5157
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5169
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5174
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5180
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5187
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5191
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5197
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5203
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5207
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5211
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5217
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5223
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5229
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5238
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5249
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5261
		{
			yyVAL.str = yyDollar[1].str
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5265
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5271
		{
			yyVAL.str = "OR REPLACE"
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5275
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5279
		{
			yyVAL.str = "DEFINER = "
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5283
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5288
		{
			yyVAL.str = ""
		}
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5292
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5306
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5314
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5320
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5330
		{
			yyVAL.str = yyDollar[1].str
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5334
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5340
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5347
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5353
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5361
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5367
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5374
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5381
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5389
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5395
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5404
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5416
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5428
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5440
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5446
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5453
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5461
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5467
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5475
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5481
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5489
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5495
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5504
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5508
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5513
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5517
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5524
		{
			yyVAL.str = yyDollar[3].str
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5529
		{
			yyVAL.str = ""
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5533
		{
			yyVAL.str = yyDollar[2].str
		}
	case 912:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5539
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5553
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5563
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5567
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5573
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5579
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5585
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5594
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5603
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5612
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5617
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5623
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5631
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5737
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5741
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5747
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5757
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5761
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5767
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5777
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5781
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5785
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5794
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5800
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5807
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5813
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5822
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5829
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5838
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5842
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5848
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5862
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5866
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5870
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5875
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5879
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5883
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5887
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5893
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5916
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5938
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5942
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5946
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5950
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5954
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5960
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5964
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5970
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5975
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5980
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5984
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5988
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5992
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5996
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6002
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6017
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6031
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6040
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6046
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6050
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6056
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6060
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6064
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6069
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6073
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6079
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6091
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6100
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6113
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6120
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6130
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6138
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6149
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6153
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6158
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6162
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6169
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6180
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6193
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6207
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6215
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6222
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6229
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6236
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6243
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6247
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6251
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6259
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6266
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6273
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6277
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6284
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6291
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6295
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6302
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6309
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6316
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6323
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6327
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6332
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6336
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6340
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6349
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6363
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6370
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6377
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6381
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6394
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6400
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6404
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6410
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6419
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6433
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6439
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6443
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6449
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6456
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6465
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6469
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6474
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6478
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6483
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6487
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6492
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6496
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6506
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6510
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6521
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6529
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6537
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6545
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6556
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6565
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6575
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6585
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6589
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6594
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6598
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6603
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6607
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6613
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6617
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6621
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6627
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6631
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6635
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6639
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6643
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6647
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6651
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6656
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6660
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6664
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6668
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6672
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6676
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6680
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6684
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6688
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6692
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6696
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6700
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6704
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6708
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6712
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6716
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6720
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6724
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6728
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6732
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6736
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6740
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6744
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6748
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6752
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6756
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6760
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6764
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6770
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6774
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6780
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6786
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6790
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6796
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6800
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6804
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6808
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6812
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6816
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6830
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6834
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6843
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6848
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6854
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6861
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6865
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6871
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6875
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6879
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6885
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6889
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6895
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6904
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6913
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6936
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6961
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6975
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6981
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6990
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6999
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7008
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7017
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7027
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7035
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7041
		{
			yyVAL.str = ""
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7045
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7055
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7061
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7067
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7086
		{
			yyVAL.str = ""
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7090
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7096
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7102
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7106
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7110
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7116
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7120
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7124
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7128
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7134
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7138
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7142
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7151
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7157
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7161
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7167
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7171
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7175
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7179
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7183
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7187
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7192
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7196
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7208
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7212
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7216
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7220
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7224
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7228
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7241
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7245
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7249
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7259
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7263
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7268
		{
			yyVAL.str = ""
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7272
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7278
		{
			yyVAL.str = ""
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7282
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7288
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7300
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7307
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7314
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7321
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7328
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7337
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7343
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7349
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7353
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7357
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7361
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7365
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7370
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7377
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7381
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7385
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7394
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7399
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7403
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7419
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7425
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7429
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7433
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7437
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7441
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7445
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7449
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7453
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7457
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7461
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7465
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7469
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7473
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7479
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7483
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7487
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7491
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7495
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7499
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7503
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7507
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7511
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7515
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7519
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7523
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7528
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7536
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7541
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7545
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7554
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7558
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7562
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7566
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7570
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7576
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7584
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7592
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7601
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7605
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7614
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7620
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7624
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7630
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7639
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7651
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7668
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7685
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7698
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7711
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7723
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7737
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7752
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7767
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7784
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7799
		{
		}
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7806
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7810
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7814
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7820
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7824
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7828
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7832
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7838
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7842
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7846
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7852
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7860
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7874
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7881
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7890
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7895
		{
			yyVAL.str = ","
		}
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7899
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7904
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7911
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7937
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7948
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7958
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7967
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7976
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7986
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7996
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8006
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8016
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8026
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8036
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8046
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8056
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8066
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8076
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8086
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8096
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8113
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8121
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8129
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8137
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8145
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8155
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8163
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8172
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8180
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8188
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8196
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8204
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8215
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8225
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8237
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8248
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8270
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8306
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8318
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8330
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8341
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8349
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8356
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8363
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8375
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8383
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8393
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8403
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8411
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8422
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8431
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8440
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8448
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8458
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8466
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8476
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8480
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8490
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8509
		{
		}
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8511
		{
		}
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8552
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8563
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8567
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8571
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8577
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8582
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8586
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8592
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8596
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8603
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8607
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8611
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8619
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8623
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8627
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8631
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8637
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8641
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8645
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8649
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8653
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8657
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8661
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8665
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8669
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8673
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8681
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8685
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8689
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8693
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8697
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8701
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8705
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8709
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8713
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8717
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8727
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8733
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8737
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8744
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8748
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8752
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8758
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8762
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8766
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8770
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8774
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8778
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8782
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8788
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8792
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8796
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8800
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8806
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8819
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8824
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8830
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8834
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8847
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8852
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8856
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8860
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8864
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8868
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8875
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8879
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8893
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8897
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8904
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8915
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8920
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8926
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8938
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8950
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8962
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8975
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8988
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9001
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9014
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9027
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9040
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9053
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9066
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9079
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9092
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9107
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9134
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9176
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9212
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9248
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9265
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9277
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9297
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9317
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9337
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9353
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9366
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9379
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9392
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9405
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9417
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9429
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9441
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9453
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9465
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9477
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9489
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9501
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9513
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9526
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9539
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9554
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9562
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9571
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9581
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9604
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9609
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9615
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9622
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9626
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9631
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9635
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9641
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9647
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9654
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9661
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9670
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9677
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9684
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9697
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9701
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9707
		{
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9709
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9719
		{
			yyVAL.str = ""
		}
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9723
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

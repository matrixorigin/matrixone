// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const SEQUENCE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const CONSTRAINT = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const FOREIGN = 57550
const KEY_BLOCK_SIZE = 57551
const SHOW = 57552
const DESCRIBE = 57553
const EXPLAIN = 57554
const DATE = 57555
const ESCAPE = 57556
const REPAIR = 57557
const OPTIMIZE = 57558
const TRUNCATE = 57559
const MAXVALUE = 57560
const PARTITION = 57561
const REORGANIZE = 57562
const LESS = 57563
const THAN = 57564
const PROCEDURE = 57565
const TRIGGER = 57566
const STATUS = 57567
const VARIABLES = 57568
const ROLE = 57569
const PROXY = 57570
const AVG_ROW_LENGTH = 57571
const STORAGE = 57572
const DISK = 57573
const MEMORY = 57574
const CHECKSUM = 57575
const COMPRESSION = 57576
const DATA = 57577
const DIRECTORY = 57578
const DELAY_KEY_WRITE = 57579
const ENCRYPTION = 57580
const ENGINE = 57581
const MAX_ROWS = 57582
const MIN_ROWS = 57583
const PACK_KEYS = 57584
const ROW_FORMAT = 57585
const STATS_AUTO_RECALC = 57586
const STATS_PERSISTENT = 57587
const STATS_SAMPLE_PAGES = 57588
const DYNAMIC = 57589
const COMPRESSED = 57590
const REDUNDANT = 57591
const COMPACT = 57592
const FIXED = 57593
const COLUMN_FORMAT = 57594
const AUTO_RANDOM = 57595
const RESTRICT = 57596
const CASCADE = 57597
const ACTION = 57598
const PARTIAL = 57599
const SIMPLE = 57600
const CHECK = 57601
const ENFORCED = 57602
const RANGE = 57603
const LIST = 57604
const ALGORITHM = 57605
const LINEAR = 57606
const PARTITIONS = 57607
const SUBPARTITION = 57608
const SUBPARTITIONS = 57609
const CLUSTER = 57610
const TYPE = 57611
const ANY = 57612
const SOME = 57613
const EXTERNAL = 57614
const LOCALFILE = 57615
const URL = 57616
const PREPARE = 57617
const DEALLOCATE = 57618
const RESET = 57619
const EXTENSION = 57620
const INCREMENT = 57621
const CYCLE = 57622
const MINVALUE = 57623
const PUBLICATION = 57624
const SUBSCRIPTIONS = 57625
const PUBLICATIONS = 57626
const PROPERTIES = 57627
const PARSER = 57628
const VISIBLE = 57629
const INVISIBLE = 57630
const BTREE = 57631
const HASH = 57632
const RTREE = 57633
const BSI = 57634
const ZONEMAP = 57635
const LEADING = 57636
const BOTH = 57637
const TRAILING = 57638
const UNKNOWN = 57639
const EXPIRE = 57640
const ACCOUNT = 57641
const ACCOUNTS = 57642
const UNLOCK = 57643
const DAY = 57644
const NEVER = 57645
const PUMP = 57646
const MYSQL_COMPATBILITY_MODE = 57647
const SECOND = 57648
const ASCII = 57649
const COALESCE = 57650
const COLLATION = 57651
const HOUR = 57652
const MICROSECOND = 57653
const MINUTE = 57654
const MONTH = 57655
const QUARTER = 57656
const REPEAT = 57657
const REVERSE = 57658
const ROW_COUNT = 57659
const WEEK = 57660
const REVOKE = 57661
const FUNCTION = 57662
const PRIVILEGES = 57663
const TABLESPACE = 57664
const EXECUTE = 57665
const SUPER = 57666
const GRANT = 57667
const OPTION = 57668
const REFERENCES = 57669
const REPLICATION = 57670
const SLAVE = 57671
const CLIENT = 57672
const USAGE = 57673
const RELOAD = 57674
const FILE = 57675
const TEMPORARY = 57676
const ROUTINE = 57677
const EVENT = 57678
const SHUTDOWN = 57679
const NULLX = 57680
const AUTO_INCREMENT = 57681
const APPROXNUM = 57682
const SIGNED = 57683
const UNSIGNED = 57684
const ZEROFILL = 57685
const ENGINES = 57686
const LOW_CARDINALITY = 57687
const ADMIN_NAME = 57688
const RANDOM = 57689
const SUSPEND = 57690
const ATTRIBUTE = 57691
const HISTORY = 57692
const REUSE = 57693
const CURRENT = 57694
const OPTIONAL = 57695
const FAILED_LOGIN_ATTEMPTS = 57696
const PASSWORD_LOCK_TIME = 57697
const UNBOUNDED = 57698
const SECONDARY = 57699
const USER = 57700
const IDENTIFIED = 57701
const CIPHER = 57702
const ISSUER = 57703
const X509 = 57704
const SUBJECT = 57705
const SAN = 57706
const REQUIRE = 57707
const SSL = 57708
const NONE = 57709
const PASSWORD = 57710
const MAX_QUERIES_PER_HOUR = 57711
const MAX_UPDATES_PER_HOUR = 57712
const MAX_CONNECTIONS_PER_HOUR = 57713
const MAX_USER_CONNECTIONS = 57714
const FORMAT = 57715
const VERBOSE = 57716
const CONNECTION = 57717
const TRIGGERS = 57718
const PROFILES = 57719
const LOAD = 57720
const INFILE = 57721
const TERMINATED = 57722
const OPTIONALLY = 57723
const ENCLOSED = 57724
const ESCAPED = 57725
const STARTING = 57726
const LINES = 57727
const ROWS = 57728
const IMPORT = 57729
const MODUMP = 57730
const OVER = 57731
const PRECEDING = 57732
const FOLLOWING = 57733
const GROUPS = 57734
const DATABASES = 57735
const TABLES = 57736
const SEQUENCES = 57737
const EXTENDED = 57738
const FULL = 57739
const PROCESSLIST = 57740
const FIELDS = 57741
const COLUMNS = 57742
const OPEN = 57743
const ERRORS = 57744
const WARNINGS = 57745
const INDEXES = 57746
const SCHEMAS = 57747
const NODE = 57748
const LOCKS = 57749
const TABLE_NUMBER = 57750
const COLUMN_NUMBER = 57751
const TABLE_VALUES = 57752
const TABLE_SIZE = 57753
const NAMES = 57754
const GLOBAL = 57755
const SESSION = 57756
const ISOLATION = 57757
const LEVEL = 57758
const READ = 57759
const WRITE = 57760
const ONLY = 57761
const REPEATABLE = 57762
const COMMITTED = 57763
const UNCOMMITTED = 57764
const SERIALIZABLE = 57765
const LOCAL = 57766
const EVENTS = 57767
const PLUGINS = 57768
const CURRENT_TIMESTAMP = 57769
const DATABASE = 57770
const CURRENT_TIME = 57771
const LOCALTIME = 57772
const LOCALTIMESTAMP = 57773
const UTC_DATE = 57774
const UTC_TIME = 57775
const UTC_TIMESTAMP = 57776
const REPLACE = 57777
const CONVERT = 57778
const SEPARATOR = 57779
const TIMESTAMPDIFF = 57780
const CURRENT_DATE = 57781
const CURRENT_USER = 57782
const CURRENT_ROLE = 57783
const SECOND_MICROSECOND = 57784
const MINUTE_MICROSECOND = 57785
const MINUTE_SECOND = 57786
const HOUR_MICROSECOND = 57787
const HOUR_SECOND = 57788
const HOUR_MINUTE = 57789
const DAY_MICROSECOND = 57790
const DAY_SECOND = 57791
const DAY_MINUTE = 57792
const DAY_HOUR = 57793
const YEAR_MONTH = 57794
const SQL_TSI_HOUR = 57795
const SQL_TSI_DAY = 57796
const SQL_TSI_WEEK = 57797
const SQL_TSI_MONTH = 57798
const SQL_TSI_QUARTER = 57799
const SQL_TSI_YEAR = 57800
const SQL_TSI_SECOND = 57801
const SQL_TSI_MINUTE = 57802
const RECURSIVE = 57803
const CONFIG = 57804
const DRAINER = 57805
const MATCH = 57806
const AGAINST = 57807
const BOOLEAN = 57808
const LANGUAGE = 57809
const WITH = 57810
const QUERY = 57811
const EXPANSION = 57812
const ADDDATE = 57813
const BIT_AND = 57814
const BIT_OR = 57815
const BIT_XOR = 57816
const CAST = 57817
const COUNT = 57818
const APPROX_COUNT_DISTINCT = 57819
const APPROX_PERCENTILE = 57820
const CURDATE = 57821
const CURTIME = 57822
const DATE_ADD = 57823
const DATE_SUB = 57824
const EXTRACT = 57825
const GROUP_CONCAT = 57826
const MAX = 57827
const MID = 57828
const MIN = 57829
const NOW = 57830
const POSITION = 57831
const SESSION_USER = 57832
const STD = 57833
const STDDEV = 57834
const MEDIAN = 57835
const STDDEV_POP = 57836
const STDDEV_SAMP = 57837
const SUBDATE = 57838
const SUBSTR = 57839
const SUBSTRING = 57840
const SUM = 57841
const SYSDATE = 57842
const SYSTEM_USER = 57843
const TRANSLATE = 57844
const TRIM = 57845
const VARIANCE = 57846
const VAR_POP = 57847
const VAR_SAMP = 57848
const AVG = 57849
const RANK = 57850
const NEXTVAL = 57851
const SETVAL = 57852
const CURRVAL = 57853
const LASTVAL = 57854
const ARROW = 57855
const ROW = 57856
const OUTFILE = 57857
const HEADER = 57858
const MAX_FILE_SIZE = 57859
const FORCE_QUOTE = 57860
const PARALLEL = 57861
const UNUSED = 57862
const BINDINGS = 57863
const DO = 57864
const DECLARE = 57865
const KILL = 57866
const QUERY_RESULT = 57867

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8977

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 101,
	21, 577,
	-2, 558,
	-1, 110,
	215, 780,
	-2, 851,
	-1, 131,
	42, 402,
	215, 402,
	242, 409,
	243, 409,
	421, 402,
	-2, 435,
	-1, 457,
	291, 91,
	396, 91,
	-2, 1421,
	-1, 520,
	67, 1227,
	-2, 1561,
	-1, 521,
	67, 1245,
	-2, 1532,
	-1, 525,
	67, 1246,
	-2, 1560,
	-1, 548,
	67, 1159,
	-2, 1620,
	-1, 549,
	67, 1160,
	-2, 1619,
	-1, 550,
	67, 1161,
	-2, 1609,
	-1, 551,
	67, 1584,
	-2, 1604,
	-1, 552,
	67, 1585,
	-2, 1605,
	-1, 553,
	67, 1586,
	-2, 1611,
	-1, 554,
	67, 1587,
	-2, 1594,
	-1, 555,
	67, 1588,
	-2, 1602,
	-1, 556,
	67, 1589,
	-2, 1612,
	-1, 557,
	67, 1590,
	-2, 1613,
	-1, 558,
	67, 1591,
	-2, 1618,
	-1, 559,
	67, 1592,
	-2, 1623,
	-1, 560,
	67, 1593,
	-2, 1624,
	-1, 562,
	67, 1224,
	-2, 1413,
	-1, 569,
	67, 1233,
	-2, 1439,
	-1, 573,
	67, 1237,
	-2, 1478,
	-1, 574,
	67, 1238,
	-2, 1556,
	-1, 582,
	67, 1248,
	-2, 1541,
	-1, 584,
	67, 1250,
	-2, 1551,
	-1, 585,
	67, 1251,
	-2, 1575,
	-1, 596,
	67, 1137,
	-2, 1614,
	-1, 597,
	67, 1138,
	-2, 1615,
	-1, 598,
	67, 1139,
	-2, 1616,
	-1, 605,
	21, 578,
	-2, 541,
	-1, 664,
	416, 435,
	417, 435,
	-2, 403,
	-1, 713,
	104, 1413,
	115, 1413,
	135, 1413,
	-2, 1388,
	-1, 751,
	21, 578,
	-2, 541,
	-1, 850,
	21, 577,
	-2, 1042,
	-1, 1192,
	67, 1295,
	-2, 1558,
	-1, 1193,
	67, 1296,
	-2, 1559,
	-1, 1408,
	1, 307,
	68, 307,
	543, 307,
	-2, 815,
	-1, 1650,
	68, 1374,
	136, 1374,
	-2, 1543,
	-1, 1651,
	68, 1374,
	136, 1374,
	-2, 1542,
	-1, 1652,
	68, 1352,
	136, 1352,
	-2, 1529,
	-1, 1653,
	68, 1353,
	136, 1353,
	-2, 1534,
	-1, 1654,
	68, 1354,
	136, 1354,
	-2, 1466,
	-1, 1655,
	68, 1355,
	136, 1355,
	-2, 1460,
	-1, 1656,
	68, 1356,
	136, 1356,
	-2, 1404,
	-1, 1657,
	68, 1357,
	136, 1357,
	-2, 1531,
	-1, 1658,
	68, 1358,
	136, 1358,
	-2, 1464,
	-1, 1659,
	68, 1359,
	136, 1359,
	-2, 1459,
	-1, 1660,
	68, 1360,
	136, 1360,
	-2, 1452,
	-1, 1662,
	68, 1363,
	136, 1363,
	-2, 1575,
	-1, 1663,
	68, 1343,
	136, 1343,
	-2, 1561,
	-1, 1664,
	68, 1372,
	136, 1372,
	-2, 1532,
	-1, 1665,
	68, 1372,
	136, 1372,
	-2, 1560,
	-1, 1666,
	68, 1372,
	136, 1372,
	-2, 1422,
	-1, 1667,
	68, 1370,
	136, 1370,
	-2, 1551,
	-1, 1668,
	68, 1367,
	136, 1367,
	-2, 1444,
	-1, 1669,
	67, 1325,
	68, 1325,
	136, 1325,
	358, 1325,
	359, 1325,
	360, 1325,
	-2, 1403,
	-1, 1670,
	67, 1326,
	68, 1326,
	136, 1326,
	358, 1326,
	359, 1326,
	360, 1326,
	-2, 1405,
	-1, 1671,
	67, 1329,
	68, 1329,
	136, 1329,
	358, 1329,
	359, 1329,
	360, 1329,
	-2, 1533,
	-1, 1672,
	67, 1331,
	68, 1331,
	136, 1331,
	358, 1331,
	359, 1331,
	360, 1331,
	-2, 1516,
	-1, 1673,
	67, 1333,
	68, 1333,
	136, 1333,
	358, 1333,
	359, 1333,
	360, 1333,
	-2, 1465,
	-1, 1674,
	67, 1335,
	68, 1335,
	136, 1335,
	358, 1335,
	359, 1335,
	360, 1335,
	-2, 1448,
	-1, 1675,
	67, 1336,
	68, 1336,
	136, 1336,
	358, 1336,
	359, 1336,
	360, 1336,
	-2, 1449,
	-1, 1676,
	67, 1338,
	68, 1338,
	136, 1338,
	358, 1338,
	359, 1338,
	360, 1338,
	-2, 1402,
	-1, 1677,
	68, 1377,
	136, 1377,
	358, 1377,
	359, 1377,
	360, 1377,
	-2, 1427,
	-1, 1678,
	68, 1377,
	136, 1377,
	358, 1377,
	359, 1377,
	360, 1377,
	-2, 1440,
	-1, 1679,
	68, 1380,
	136, 1380,
	358, 1380,
	359, 1380,
	360, 1380,
	-2, 1423,
	-1, 1680,
	68, 1377,
	136, 1377,
	358, 1377,
	359, 1377,
	360, 1377,
	-2, 1501,
	-1, 1693,
	1, 808,
	68, 808,
	543, 808,
	-2, 815,
	-1, 1802,
	21, 577,
	-2, 669,
	-1, 1967,
	1, 809,
	68, 809,
	543, 809,
	-2, 815,
	-1, 1979,
	65, 485,
	136, 485,
	-2, 946,
	-1, 1996,
	276, 1010,
	-2, 989,
	-1, 2245,
	276, 1010,
	-2, 990,
	-1, 2373,
	88, 815,
	131, 815,
	168, 815,
	171, 815,
	-2, 894,
	-1, 2376,
	88, 815,
	131, 815,
	168, 815,
	171, 815,
	-2, 894,
	-1, 2386,
	65, 485,
	136, 485,
	-2, 947,
	-1, 2480,
	88, 815,
	131, 815,
	168, 815,
	171, 815,
	-2, 895,
	-1, 2764,
	68, 866,
	136, 866,
	-2, 815,
	-1, 2768,
	68, 866,
	136, 866,
	-2, 815,
	-1, 2782,
	68, 870,
	136, 870,
	-2, 815,
	-1, 2787,
	68, 871,
	136, 871,
	-2, 815,
}

const yyPrivate = 57344

const yyLast = 31950

var yyAct = [...]int{
	487, 1409, 1258, 2768, 2767, 2747, 2776, 1173, 2706, 2658,
	468, 2698, 489, 2676, 2447, 2537, 2257, 2452, 2617, 2511,
	2618, 1640, 2474, 2586, 1024, 2326, 2602, 2606, 2473, 2531,
	2472, 2327, 2553, 881, 606, 2450, 461, 2521, 1325, 1368,
	151, 151, 2499, 517, 1749, 1982, 151, 403, 410, 2479,
	2396, 410, 1176, 2442, 1169, 2062, 2222, 1079, 1370, 1471,
	2048, 2063, 2356, 2061, 2267, 1728, 2246, 2055, 2058, 1539,
	2324, 1508, 1441, 470, 1796, 2319, 1866, 1449, 421, 1648,
	1733, 466, 2084, 2302, 2197, 415, 2194, 2266, 745, 2192,
	1702, 1968, 1646, 712, 1484, 2220, 1412, 459, 2102, 601,
	460, 1321, 465, 408, 31, 2141, 1517, 1907, 1865, 1516,
	1535, 1509, 2098, 643, 1335, 1797, 1534, 150, 150, 718,
	1464, 1444, 1785, 394, 1442, 1257, 1950, 1946, 2000, 1729,
	721, 30, 3, 407, 19, 1701, 404, 8, 1000, 601,
	1355, 722, 43, 1833, 406, 7, 919, 1536, 1567, 1002,
	151, 1343, 1326, 469, 1316, 1167, 1108, 1033, 984, 405,
	6, 1644, 1088, 1686, 100, 1013, 1546, 1378, 1222, 1032,
	1468, 458, 1628, 1379, 1206, 1908, 716, 477, 1172, 399,
	762, 1515, 964, 704, 467, 1158, 1495, 1512, 43, 1166,
	1354, 1804, 2480, 1396, 396, 1058, 1009, 603, 1228, 423,
	642, 1227, 16, 9, 4, 982, 640, 424, 1107, 141,
	2135, 2135, 1553, 1025, 409, 1868, 659, 144, 1543, 146,
	147, 605, 2527, 2522, 2443, 670, 1071, 747, 2325, 1339,
	876, 2595, 1511, 604, 705, 614, 145, 882, 2561, 934,
	2465, 145, 782, 39, 133, 111, 145, 1853, 145, 1861,
	31, 145, 1540, 392, 145, 145, 39, 133, 111, 145,
	2649, 39, 133, 111, 145, 413, 1125, 2464, 2570, 1060,
	419, 1118, 2117, 145, 2164, 1690, 1821, 30, 1820, 743,
	19, 2562, 1122, 8, 99, 1551, 816, 1115, 43, 1482,
	2694, 7, 1834, 142, 1452, 1453, 1948, 1021, 142, 1248,
	2110, 2692, 680, 1124, 1143, 142, 6, 719, 1117, 99,
	809, 142, 142, 1030, 1031, 145, 142, 39, 133, 111,
	1061, 142, 1041, 420, 1392, 1042, 2621, 2622, 1175, 615,
	142, 814, 1028, 600, 715, 138, 1027, 1030, 1031, 714,
	1622, 922, 126, 2529, 2460, 912, 139, 2596, 2597, 1947,
	591, 99, 590, 592, 593, 2103, 594, 595, 2588, 942,
	946, 948, 950, 952, 953, 955, 84, 959, 956, 957,
	958, 2591, 142, 937, 938, 939, 940, 920, 921, 943,
	2104, 923, 2105, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 935, 941, 2525, 151, 755, 790, 2680,
	2681, 792, 945, 947, 949, 951, 954, 2328, 1044, 2648,
	2328, 2588, 410, 410, 1848, 151, 756, 1159, 1178, 754,
	1163, 502, 101, 728, 723, 727, 729, 750, 752, 793,
	2601, 1465, 685, 607, 765, 684, 110, 2357, 143, 936,
	2337, 1457, 134, 135, 1162, 136, 137, 765, 1154, 1547,
	797, 1244, 2208, 798, 726, 1241, 2470, 2364, 131, 1243,
	1240, 1242, 1246, 1247, 2198, 393, 2620, 1245, 101, 2459,
	1019, 2545, 1625, 753, 852, 2461, 1776, 749, 1685, 1310,
	1309, 800, 819, 820, 821, 818, 802, 2651, 2652, 803,
	1941, 2128, 773, 2532, 2533, 2534, 2535, 777, 2130, 822,
	2264, 786, 731, 2206, 807, 808, 812, 813, 851, 733,
	110, 132, 143, 751, 82, 1263, 860, 805, 689, 1552,
	1164, 1480, 1481, 1177, 788, 811, 724, 1461, 1858, 785,
	1053, 2548, 131, 125, 124, 686, 791, 794, 865, 45,
	418, 1161, 43, 43, 2052, 2687, 1778, 732, 2213, 2467,
	2219, 1781, 1953, 795, 1043, 2203, 2204, 2696, 2202, 2226,
	787, 1184, 1187, 1188, 720, 2610, 454, 719, 101, 456,
	2205, 1975, 1185, 2558, 455, 717, 1556, 1558, 1559, 412,
	758, 759, 2277, 2278, 411, 725, 2416, 2607, 2761, 801,
	2777, 1541, 2715, 2691, 688, 2660, 1541, 127, 128, 129,
	2722, 1541, 1251, 1252, 1253, 1254, 1255, 1256, 1249, 1250,
	2656, 2657, 796, 2660, 1008, 767, 766, 981, 983, 2577,
	2341, 2134, 2409, 140, 774, 806, 770, 771, 767, 766,
	789, 1962, 1963, 1964, 1965, 760, 719, 961, 2726, 1030,
	1031, 94, 643, 2701, 2560, 130, 2513, 95, 804, 1160,
	1030, 1031, 2200, 1759, 1758, 730, 858, 854, 855, 856,
	857, 2284, 2400, 1959, 687, 1067, 2422, 2423, 2650, 2500,
	2501, 2502, 2504, 2503, 1066, 681, 1020, 1029, 775, 913,
	1023, 1022, 799, 1026, 1554, 1046, 151, 1007, 1055, 1006,
	2778, 1542, 944, 2748, 604, 2784, 40, 2772, 2554, 746,
	96, 40, 2180, 2378, 1568, 2466, 1741, 601, 601, 601,
	38, 112, 1083, 1083, 1862, 151, 112, 985, 2217, 419,
	2585, 112, 1059, 112, 2559, 2033, 112, 1854, 1746, 112,
	112, 1811, 410, 983, 112, 1111, 1111, 1544, 990, 112,
	1737, 1090, 776, 1466, 2133, 994, 2209, 2404, 112, 1120,
	993, 2086, 2088, 2199, 782, 683, 992, 40, 682, 2702,
	414, 2188, 2546, 1051, 892, 893, 1081, 1081, 1555, 1141,
	1085, 1110, 1110, 997, 2697, 1126, 1810, 1809, 986, 987,
	988, 989, 1083, 991, 1083, 755, 2471, 995, 2090, 2131,
	112, 1186, 1089, 1808, 1458, 637, 638, 639, 2598, 2599,
	1064, 1155, 2143, 2142, 1017, 1455, 1557, 1174, 1010, 1014,
	1014, 1014, 1035, 1036, 695, 1038, 1039, 1040, 1015, 1016,
	966, 2771, 101, 101, 720, 968, 717, 1456, 2512, 1952,
	1010, 1740, 1010, 1734, 1737, 781, 1744, 1742, 2201, 1807,
	605, 1743, 2218, 1454, 97, 98, 102, 691, 999, 1116,
	1136, 1137, 692, 1123, 1179, 1180, 1181, 1182, 1183, 1062,
	1063, 1054, 694, 2783, 1226, 1738, 697, 696, 2486, 1045,
	693, 1047, 2727, 1150, 1266, 1267, 1268, 1276, 1034, 817,
	1460, 1037, 1956, 1957, 2699, 2700, 2402, 1282, 1283, 1371,
	2401, 2299, 1599, 850, 1171, 1598, 1955, 2790, 1224, 1225,
	1290, 1291, 43, 1149, 1260, 1371, 1146, 1065, 2087, 1688,
	608, 43, 1270, 601, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1152, 1189, 1980, 1145,
	1217, 1218, 392, 2789, 1127, 1091, 1077, 1078, 1105, 1140,
	1132, 1074, 1075, 1076, 1112, 1156, 1104, 1139, 2231, 2034,
	2036, 2037, 2038, 2035, 2295, 2405, 2406, 1311, 2780, 1738,
	1168, 1332, 2762, 817, 1731, 817, 1128, 2757, 1732, 1735,
	605, 1285, 1148, 1147, 1144, 1794, 819, 820, 821, 818,
	1165, 681, 782, 1275, 2751, 151, 1333, 1353, 1083, 1357,
	1170, 1359, 1360, 1259, 1836, 1262, 151, 2750, 2731, 643,
	1337, 817, 1369, 1277, 1341, 1687, 1083, 1344, 698, 1795,
	1055, 2708, 2670, 1638, 1284, 403, 1286, 780, 779, 1981,
	1736, 2162, 1208, 1336, 1753, 2299, 2781, 817, 2628, 969,
	1549, 1215, 1216, 608, 1391, 2758, 2374, 736, 741, 742,
	1323, 1324, 1397, 1397, 1634, 1055, 1055, 1853, 1055, 1981,
	1352, 151, 1549, 1353, 1353, 1395, 2623, 1083, 1439, 1451,
	1578, 683, 1350, 1795, 682, 1549, 1549, 1943, 1358, 601,
	1261, 1083, 1841, 1364, 1822, 1314, 1384, 1317, 1318, 2709,
	2671, 1795, 819, 820, 821, 818, 819, 820, 821, 818,
	780, 1390, 1540, 1287, 1393, 1394, 2550, 151, 1353, 1083,
	2579, 1489, 151, 151, 1492, 1639, 1885, 1494, 1337, 2578,
	1328, 1500, 1331, 1498, 1337, 1337, 1435, 1436, 1276, 1276,
	1519, 1011, 2575, 1603, 2550, 1276, 1276, 1637, 1403, 1531,
	1526, 1577, 959, 956, 957, 958, 1478, 1157, 1890, 1092,
	1889, 1888, 1886, 2574, 393, 998, 1462, 1306, 2573, 1340,
	962, 1361, 1362, 1363, 1369, 2572, 1220, 1377, 1083, 1538,
	1334, 1486, 1068, 2745, 1010, 2549, 1356, 101, 2580, 2424,
	2286, 101, 1386, 1387, 1485, 2081, 1385, 1706, 1488, 1485,
	1485, 1467, 101, 1380, 1374, 1382, 1383, 1014, 1372, 1373,
	2550, 101, 1365, 1532, 1520, 1389, 1490, 1491, 1388, 1366,
	2710, 2389, 1399, 1376, 1887, 738, 739, 740, 1932, 1381,
	1930, 2550, 1561, 1401, 2232, 1402, 2550, 1928, 1400, 1926,
	1012, 2100, 1913, 2550, 1514, 1050, 1869, 1052, 1983, 1056,
	1057, 1514, 2236, 2550, 1496, 1356, 1398, 1822, 2287, 1856,
	1855, 748, 1851, 1795, 1408, 1847, 1845, 1438, 1475, 1476,
	1440, 1843, 1463, 1838, 1705, 1635, 1607, 1571, 782, 1606,
	1575, 1721, 1594, 1579, 1096, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, 1530, 1483, 1106, 43, 1933, 1168, 1931, 1597,
	1503, 1349, 719, 1129, 1588, 1927, 2363, 1927, 1487, 719,
	817, 1604, 1587, 1586, 817, 1565, 1566, 960, 1611, 1504,
	1585, 1472, 1473, 1474, 1548, 1133, 863, 1523, 1592, 1524,
	1706, 1525, 1521, 1528, 1839, 1529, 1806, 768, 635, 1844,
	1477, 1839, 1706, 1634, 817, 748, 1605, 817, 834, 1608,
	1609, 1610, 1891, 1892, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1533, 2125, 1623, 490, 499, 817, 459, 755,
	1681, 491, 817, 498, 492, 496, 495, 493, 494, 2611,
	817, 817, 151, 151, 151, 1569, 1703, 2740, 1560, 2728,
	2487, 1649, 1549, 1134, 719, 1750, 1710, 1055, 837, 838,
	839, 840, 841, 834, 748, 1562, 1714, 2381, 1208, 2379,
	1573, 1265, 1264, 1072, 2227, 1003, 1563, 1564, 2300, 1004,
	1055, 1011, 2612, 1070, 1073, 500, 755, 2291, 1707, 2288,
	1748, 1288, 1289, 2488, 1876, 1292, 1293, 1294, 1295, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 2136, 1727, 2053,
	2382, 1842, 2380, 1813, 757, 497, 1712, 1223, 2645, 1695,
	1696, 1697, 1223, 1351, 1574, 1715, 1716, 1799, 1799, 1451,
	1799, 818, 690, 2228, 821, 818, 1751, 2412, 1754, 1755,
	1756, 1757, 1724, 1713, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1083, 151,
	1450, 1621, 2411, 1296, 1069, 819, 820, 821, 818, 1682,
	2106, 2393, 2010, 1630, 755, 2009, 2229, 1111, 1214, 1451,
	1012, 2004, 1828, 1999, 1830, 2766, 1752, 2155, 2468, 1337,
	1337, 1337, 2361, 1211, 1213, 1210, 1649, 1212, 2754, 1643,
	2725, 1803, 1801, 1689, 1805, 1280, 819, 820, 821, 818,
	2044, 1849, 1818, 1110, 1538, 1878, 1281, 2716, 1717, 720,
	2711, 1083, 1723, 1083, 1711, 1083, 720, 2469, 2661, 2636,
	755, 2362, 2154, 1014, 1825, 101, 1089, 1576, 2613, 1718,
	2042, 1720, 1719, 1832, 2724, 2563, 1641, 1642, 2523, 2043,
	2493, 1827, 1863, 1722, 2490, 819, 820, 821, 818, 1083,
	1894, 2489, 833, 832, 842, 843, 835, 836, 837, 838,
	839, 840, 841, 834, 2383, 1901, 2040, 1859, 2360, 2041,
	1083, 1601, 1779, 835, 836, 837, 838, 839, 840, 841,
	834, 1877, 2207, 719, 819, 820, 821, 818, 2183, 1895,
	1896, 819, 820, 821, 818, 2615, 1590, 1898, 1899, 454,
	2182, 850, 456, 1081, 2121, 2039, 1893, 455, 2030, 1905,
	1904, 1819, 2028, 1814, 1815, 1816, 2027, 2026, 819, 820,
	821, 818, 2023, 1826, 1081, 1824, 1880, 1902, 2017, 2014,
	2013, 1860, 825, 826, 827, 828, 829, 830, 831, 823,
	1633, 1337, 1632, 1874, 1936, 1937, 1344, 2029, 1900, 1589,
	1631, 1852, 1627, 1903, 1626, 1850, 1130, 979, 1083, 2056,
	2193, 1960, 2686, 2448, 1934, 1353, 1857, 2682, 2646, 2583,
	2547, 1979, 819, 820, 821, 818, 2524, 1985, 2478, 2605,
	2446, 2444, 1870, 1871, 2454, 1909, 2428, 2426, 2049, 1168,
	1914, 2395, 1994, 2359, 1884, 2358, 2355, 2346, 2340, 1944,
	1949, 1998, 819, 820, 821, 818, 2453, 819, 820, 821,
	818, 2006, 2007, 2008, 1867, 2294, 2292, 2011, 2282, 2012,
	2281, 2187, 2181, 1873, 819, 820, 821, 818, 1970, 819,
	820, 821, 818, 1799, 2132, 2093, 2031, 1323, 1324, 2024,
	2020, 2019, 1988, 2045, 2018, 1636, 1990, 1629, 1977, 1976,
	1935, 1505, 1353, 755, 1451, 1451, 1451, 1451, 1986, 1346,
	1969, 1938, 547, 546, 2565, 755, 1451, 2015, 2016, 1799,
	1131, 891, 887, 2021, 2022, 2064, 1318, 1996, 31, 886,
	864, 744, 1083, 2001, 2536, 2001, 145, 2064, 2376, 133,
	111, 2051, 2375, 151, 151, 2373, 2350, 2349, 1958, 2666,
	2345, 1328, 2332, 1331, 2318, 30, 1978, 1984, 19, 2317,
	1276, 8, 1276, 2237, 2160, 2116, 43, 1582, 2120, 7,
	2077, 2153, 2145, 2140, 1083, 2097, 1942, 2127, 1997, 1929,
	1925, 1987, 1924, 2003, 6, 1612, 1356, 1602, 1991, 1992,
	1802, 1600, 1989, 142, 1337, 1596, 1595, 1593, 2025, 1337,
	842, 843, 835, 836, 837, 838, 839, 840, 841, 834,
	1993, 1584, 2002, 1581, 1580, 1305, 1279, 1336, 1278, 1269,
	2095, 2096, 2115, 2050, 145, 1095, 2054, 1093, 2065, 2066,
	2067, 2068, 2113, 2779, 2080, 2139, 2076, 2078, 2119, 2739,
	1450, 2733, 605, 819, 820, 821, 818, 2148, 2091, 2150,
	2129, 2723, 2089, 2124, 2094, 2079, 2720, 2159, 2718, 2635,
	2581, 883, 2111, 1313, 755, 2101, 2112, 2509, 2107, 2118,
	2196, 2114, 2109, 2497, 631, 2494, 2436, 2434, 2419, 2418,
	2211, 142, 151, 2417, 2123, 2414, 1649, 2408, 2368, 1322,
	1315, 1001, 755, 755, 755, 2138, 2046, 2137, 2005, 1973,
	1972, 1451, 1703, 2421, 2235, 1971, 1327, 1330, 2144, 1319,
	2239, 2149, 1923, 1837, 1727, 1727, 1727, 2151, 2152, 884,
	2268, 2270, 1812, 2268, 2268, 1774, 819, 820, 821, 818,
	2275, 1704, 1209, 142, 2165, 1493, 1083, 1083, 2166, 2167,
	2168, 2169, 1348, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2343, 1320, 1153, 2184, 1119, 2189, 963, 911, 2214,
	2146, 2147, 2274, 910, 909, 908, 2238, 151, 907, 2191,
	2240, 2241, 2196, 2233, 819, 820, 821, 818, 906, 2215,
	1353, 1353, 2265, 2216, 1969, 2269, 2230, 905, 2223, 2224,
	1081, 1081, 2234, 2279, 2280, 904, 903, 633, 902, 628,
	2158, 618, 609, 610, 611, 612, 901, 900, 630, 629,
	2271, 2272, 899, 898, 897, 608, 896, 895, 894, 2243,
	890, 1894, 889, 819, 820, 821, 818, 2157, 888, 622,
	832, 842, 843, 835, 836, 837, 838, 839, 840, 841,
	834, 2298, 2156, 885, 1485, 880, 101, 879, 2296, 2297,
	819, 820, 821, 818, 151, 877, 2310, 876, 2290, 2293,
	2289, 2285, 875, 2242, 1094, 819, 820, 821, 818, 1922,
	627, 2307, 874, 873, 626, 872, 871, 870, 869, 868,
	616, 1921, 867, 2273, 621, 866, 2311, 2314, 2315, 2316,
	862, 861, 819, 820, 821, 818, 784, 2323, 2303, 2304,
	2415, 619, 2333, 1709, 819, 820, 821, 818, 1692, 2334,
	2309, 772, 2342, 2755, 2336, 2664, 2619, 2306, 1920, 2344,
	1961, 2335, 617, 1919, 1823, 1450, 1450, 1450, 1450, 1507,
	783, 2338, 2339, 2347, 1353, 2308, 634, 1450, 2070, 2069,
	2372, 819, 820, 821, 818, 2073, 819, 820, 821, 818,
	2074, 1799, 1451, 2386, 2249, 2075, 2071, 1791, 1792, 2765,
	620, 2072, 833, 832, 842, 843, 835, 836, 837, 838,
	839, 840, 841, 834, 1083, 2351, 1846, 2439, 2259, 2438,
	101, 2369, 2370, 2371, 2354, 151, 1840, 101, 2353, 2185,
	2186, 2252, 1940, 1434, 2270, 2600, 2190, 1307, 2247, 83,
	2366, 2388, 2367, 2262, 2263, 1835, 42, 1641, 1642, 2248,
	1918, 41, 2387, 2437, 1917, 148, 1353, 1864, 2390, 965,
	755, 2391, 1113, 1916, 2385, 2384, 2673, 1683, 2397, 778,
	632, 2265, 2392, 819, 820, 821, 818, 819, 820, 821,
	818, 1915, 2064, 389, 2441, 2253, 819, 820, 821, 818,
	390, 2394, 755, 2430, 1995, 391, 388, 1337, 2420, 1912,
	2433, 1945, 2413, 2435, 819, 820, 821, 818, 2425, 1777,
	1699, 2462, 1367, 2427, 2064, 1911, 1347, 2440, 1437, 2429,
	2432, 2431, 819, 820, 821, 818, 1910, 101, 1049, 755,
	1083, 1083, 1265, 1264, 1048, 755, 977, 978, 819, 820,
	821, 818, 810, 1906, 975, 976, 2313, 2449, 1527, 819,
	820, 821, 818, 973, 974, 971, 972, 1727, 1005, 608,
	967, 2734, 1450, 2654, 2320, 2463, 819, 820, 821, 818,
	609, 610, 611, 612, 2261, 755, 1730, 101, 755, 755,
	755, 2477, 2642, 608, 1081, 2397, 2484, 2476, 2483, 2640,
	2608, 2481, 2388, 2593, 2737, 1369, 2592, 2517, 2590, 2582,
	2520, 2255, 2519, 2491, 2492, 2498, 1897, 2445, 2506, 2507,
	2508, 2348, 1875, 2455, 2495, 2514, 2330, 2329, 2321, 2505,
	970, 2099, 1371, 2254, 2256, 2544, 2668, 2667, 2667, 819,
	820, 821, 818, 2122, 2515, 819, 820, 821, 818, 1219,
	1694, 1583, 1748, 833, 832, 842, 843, 835, 836, 837,
	838, 839, 840, 841, 834, 2541, 769, 2668, 755, 2410,
	2331, 2542, 819, 820, 821, 818, 1018, 50, 1479, 1087,
	755, 1, 2552, 2551, 1345, 613, 2082, 2556, 1782, 2555,
	2083, 2312, 2085, 1545, 1775, 1684, 2564, 2210, 2571, 2567,
	996, 2566, 636, 1271, 1138, 735, 764, 1135, 2264, 763,
	2576, 1787, 1790, 1791, 1792, 1788, 761, 1789, 1793, 1221,
	2250, 755, 504, 1510, 2594, 2047, 2260, 2516, 2672, 2705,
	2589, 2587, 2634, 2675, 2735, 1787, 1790, 1791, 1792, 1788,
	1151, 1789, 1793, 2604, 488, 2541, 2584, 2528, 2638, 2603,
	2530, 2629, 2632, 2451, 2609, 1550, 815, 2108, 655, 2614,
	540, 515, 878, 1121, 1114, 2163, 737, 2633, 514, 2624,
	2625, 2626, 2627, 2365, 1954, 2641, 2557, 2643, 2644, 625,
	734, 2639, 2637, 833, 832, 842, 843, 835, 836, 837,
	838, 839, 840, 841, 834, 656, 1624, 2653, 2526, 1308,
	1329, 1312, 2485, 2377, 2225, 2662, 2679, 2665, 2663, 1974,
	2775, 2764, 2746, 2732, 2659, 2669, 2760, 2690, 2678, 2161,
	2721, 2458, 2456, 1450, 2457, 755, 2714, 2683, 2655, 425,
	1459, 2684, 599, 702, 2510, 1506, 426, 1708, 2647, 2496,
	623, 1691, 2704, 624, 2693, 2695, 1967, 2688, 1966, 1190,
	2703, 824, 2541, 1207, 2707, 2178, 2179, 859, 2712, 464,
	755, 1572, 476, 2685, 1951, 2258, 2092, 2713, 833, 832,
	842, 843, 835, 836, 837, 838, 839, 840, 841, 834,
	2679, 2730, 1174, 49, 48, 47, 46, 1499, 155, 755,
	506, 755, 2678, 2729, 154, 2631, 2736, 1872, 2738, 2677,
	486, 485, 484, 483, 482, 1786, 2742, 1784, 2707, 1783,
	755, 1174, 1446, 1174, 2749, 1445, 2756, 2753, 1497, 2759,
	833, 832, 842, 843, 835, 836, 837, 838, 839, 840,
	841, 834, 1174, 2276, 2763, 2744, 2770, 1745, 326, 522,
	2774, 1739, 1404, 2773, 2717, 2616, 2719, 2568, 2782, 288,
	2569, 2407, 2785, 2032, 2770, 2403, 2787, 2788, 2786, 2774,
	2399, 2283, 478, 2244, 2245, 2251, 233, 1698, 918, 258,
	914, 916, 917, 513, 915, 2741, 318, 272, 1883, 1879,
	1725, 1726, 570, 578, 2221, 980, 2543, 2352, 1647, 1645,
	2305, 2301, 2212, 1518, 471, 1342, 1939, 503, 547, 546,
	490, 499, 1447, 1443, 214, 153, 491, 1780, 498, 492,
	496, 495, 493, 494, 845, 562, 849, 1693, 75, 74,
	81, 123, 462, 475, 2538, 479, 37, 2482, 602, 32,
	27, 846, 848, 844, 5, 847, 833, 832, 842, 843,
	835, 836, 837, 838, 839, 840, 841, 834, 472, 473,
	29, 28, 14, 15, 523, 13, 474, 1142, 12, 518,
	500, 501, 18, 26, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 25, 24, 207, 337, 320,
	269, 252, 253, 206, 93, 305, 231, 244, 227, 285,
	497, 521, 525, 226, 584, 519, 347, 209, 92, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 585, 248, 296, 262, 297, 249, 274, 273, 275,
	23, 91, 90, 89, 88, 376, 833, 832, 842, 843,
	835, 836, 837, 838, 839, 840, 841, 834, 22, 516,
	11, 87, 86, 349, 85, 21, 568, 80, 78, 20,
	322, 79, 76, 257, 77, 61, 60, 520, 59, 308,
	290, 581, 463, 72, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 71, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 70, 369, 69,
	68, 67, 377, 381, 382, 383, 385, 386, 387, 66,
	654, 58, 57, 56, 371, 55, 54, 73, 65, 64,
	63, 361, 240, 197, 198, 344, 566, 286, 62, 53,
	580, 561, 563, 564, 567, 571, 572, 573, 574, 575,
	577, 579, 583, 311, 52, 51, 109, 108, 107, 251,
	292, 106, 312, 105, 104, 103, 33, 34, 35, 36,
	119, 118, 120, 122, 121, 319, 342, 354, 372, 375,
	116, 114, 117, 202, 374, 115, 2539, 113, 44, 1570,
	2540, 10, 582, 17, 2, 0, 353, 0, 0, 0,
	0, 0, 524, 276, 277, 278, 279, 569, 0, 219,
	373, 301, 833, 832, 842, 843, 835, 836, 837, 838,
	839, 840, 841, 834, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 591, 565, 590, 592, 593, 589, 594, 595, 576,
	481, 0, 528, 587, 586, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 554, 533, 534, 535, 480,
	536, 531, 532, 555, 526, 551, 552, 505, 529, 537,
	550, 538, 553, 556, 557, 596, 597, 544, 598, 541,
	558, 549, 548, 539, 527, 559, 560, 512, 507, 542,
	543, 530, 545, 508, 509, 510, 511, 326, 522, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 513, 0, 0, 318, 272, 0, 0, 0,
	0, 570, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 503, 547, 546, 490,
	499, 0, 0, 214, 153, 491, 0, 498, 492, 496,
	495, 493, 494, 0, 562, 0, 0, 0, 0, 0,
	0, 462, 475, 0, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 473, 0,
	0, 0, 0, 523, 0, 474, 0, 0, 518, 500,
	501, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 497,
	521, 525, 226, 584, 519, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	585, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 349, 0, 0, 568, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 520, 0, 308, 290,
	581, 463, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 1273, 1272, 1274,
	361, 240, 197, 198, 344, 566, 286, 0, 0, 580,
	561, 563, 564, 567, 571, 572, 573, 574, 575, 577,
	579, 583, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 524, 276, 277, 278, 279, 569, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	591, 565, 590, 592, 593, 589, 594, 595, 576, 481,
	0, 528, 587, 586, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 554, 533, 534, 535, 480, 536,
	531, 532, 555, 526, 551, 552, 505, 529, 537, 550,
	538, 553, 556, 557, 596, 597, 544, 598, 541, 558,
	549, 548, 539, 527, 559, 560, 512, 507, 542, 543,
	530, 545, 508, 509, 510, 511, 326, 522, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 513, 0, 0, 318, 272, 0, 0, 0, 0,
	570, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 503, 547, 546, 490, 499,
	0, 0, 214, 153, 491, 0, 498, 492, 496, 495,
	493, 494, 0, 562, 0, 0, 0, 0, 0, 0,
	462, 475, 0, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 473, 0, 0,
	0, 0, 523, 0, 474, 0, 0, 518, 500, 501,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 497, 521,
	525, 226, 584, 519, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 585,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 349, 0, 0, 568, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 520, 0, 308, 290, 581,
	463, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 566, 286, 0, 0, 580, 561,
	563, 564, 567, 571, 572, 573, 574, 575, 577, 579,
	583, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 2539, 0, 0, 0, 2540, 0,
	582, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	524, 276, 277, 278, 279, 569, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 591,
	565, 590, 592, 593, 589, 594, 595, 576, 481, 0,
	528, 587, 586, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 554, 533, 534, 535, 480, 536, 531,
	532, 555, 526, 551, 552, 505, 529, 537, 550, 538,
	553, 556, 557, 596, 597, 544, 598, 541, 558, 549,
	548, 539, 527, 559, 560, 512, 507, 542, 543, 530,
	545, 508, 509, 510, 511, 326, 522, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 0, 233, 1338, 0, 258, 0, 0, 0,
	513, 0, 0, 318, 272, 0, 0, 0, 0, 570,
	578, 0, 0, 0, 0, 0, 0, 0, 1469, 0,
	0, 471, 0, 0, 503, 547, 546, 490, 499, 0,
	0, 214, 153, 491, 0, 498, 492, 496, 495, 493,
	494, 0, 562, 0, 0, 0, 0, 0, 0, 462,
	475, 0, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 473, 0, 0, 0,
	0, 523, 0, 474, 0, 0, 1470, 500, 501, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 497, 521, 525,
	226, 584, 519, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 585, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	349, 0, 0, 568, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 520, 0, 308, 290, 581, 463,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 566, 286, 0, 0, 580, 561, 563,
	564, 567, 571, 572, 573, 574, 575, 577, 579, 583,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 524,
	276, 277, 278, 279, 569, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 591, 565,
	590, 592, 593, 589, 594, 595, 576, 481, 0, 528,
	587, 586, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 554, 533, 534, 535, 480, 536, 531, 532,
	555, 526, 551, 552, 505, 529, 537, 550, 538, 553,
	556, 557, 596, 597, 544, 598, 541, 558, 549, 548,
	539, 527, 559, 560, 512, 507, 542, 543, 530, 545,
	508, 509, 510, 511, 145, 326, 522, 357, 358, 359,
	380, 343, 0, 230, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	853, 0, 0, 318, 272, 0, 0, 0, 0, 570,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 503, 547, 546, 490, 499, 0,
	0, 214, 153, 491, 0, 498, 492, 496, 495, 493,
	494, 0, 562, 0, 0, 0, 0, 0, 0, 462,
	475, 0, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 473, 0, 0, 0,
	0, 523, 0, 474, 0, 0, 518, 500, 501, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 497, 521, 525,
	226, 584, 519, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 585, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	349, 0, 0, 568, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 520, 0, 308, 290, 581, 463,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 566, 286, 0, 0, 580, 561, 563,
	564, 567, 571, 572, 573, 574, 575, 577, 579, 583,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 524,
	276, 277, 278, 279, 569, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 591, 565,
	590, 592, 593, 589, 594, 595, 576, 481, 0, 528,
	587, 586, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 112,
	300, 238, 554, 533, 534, 535, 480, 536, 531, 532,
	555, 526, 551, 552, 505, 529, 537, 550, 538, 553,
	556, 557, 596, 597, 544, 598, 541, 558, 549, 548,
	539, 527, 559, 560, 512, 507, 542, 543, 530, 545,
	508, 509, 510, 511, 326, 522, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 0, 233, 2743, 0, 258, 0, 0, 0, 513,
	0, 0, 318, 272, 0, 0, 0, 0, 570, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 0, 0, 503, 547, 546, 490, 499, 0, 0,
	214, 153, 491, 0, 498, 492, 496, 495, 493, 494,
	0, 562, 0, 0, 0, 0, 0, 0, 462, 475,
	0, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 473, 0, 0, 0, 0,
	523, 0, 474, 0, 0, 518, 500, 501, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 497, 521, 525, 226,
	584, 519, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 585, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 349,
	0, 0, 568, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 520, 0, 308, 290, 581, 463, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 566, 286, 0, 0, 580, 561, 563, 564,
	567, 571, 572, 573, 574, 575, 577, 579, 583, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 524, 276,
	277, 278, 279, 569, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 591, 565, 590,
	592, 593, 589, 594, 595, 576, 481, 0, 528, 587,
	586, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 554, 533, 534, 535, 480, 536, 531, 532, 555,
	526, 551, 552, 505, 529, 537, 550, 538, 553, 556,
	557, 596, 597, 544, 598, 541, 558, 549, 548, 539,
	527, 559, 560, 512, 507, 542, 543, 530, 545, 508,
	509, 510, 511, 326, 522, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	0, 233, 1338, 0, 258, 0, 0, 0, 513, 0,
	0, 318, 272, 0, 0, 0, 0, 570, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 503, 547, 546, 490, 499, 0, 0, 214,
	153, 491, 0, 498, 492, 496, 495, 493, 494, 0,
	562, 0, 0, 0, 0, 0, 0, 462, 475, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 473, 0, 0, 0, 0, 523,
	0, 474, 0, 0, 518, 500, 501, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 497, 521, 525, 226, 584,
	519, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 585, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 349, 0,
	0, 568, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 520, 0, 308, 290, 581, 463, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 566, 286, 0, 0, 580, 561, 563, 564, 567,
	571, 572, 573, 574, 575, 577, 579, 583, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 524, 276, 277,
	278, 279, 569, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 591, 565, 590, 592,
	593, 589, 594, 595, 576, 481, 0, 528, 587, 586,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	554, 533, 534, 535, 480, 536, 531, 532, 555, 526,
	551, 552, 505, 529, 537, 550, 538, 553, 556, 557,
	596, 597, 544, 598, 541, 558, 549, 548, 539, 527,
	559, 560, 512, 507, 542, 543, 530, 545, 508, 509,
	510, 511, 326, 522, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 513, 0, 0,
	318, 272, 0, 0, 0, 0, 570, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	0, 503, 547, 546, 490, 499, 0, 0, 214, 153,
	491, 0, 498, 492, 496, 495, 493, 494, 0, 562,
	0, 0, 0, 0, 0, 0, 462, 475, 0, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 473, 1109, 0, 0, 0, 523, 0,
	474, 0, 0, 518, 500, 501, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 497, 521, 525, 226, 584, 519,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 585, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 349, 0, 0,
	568, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 520, 0, 308, 290, 581, 463, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	566, 286, 0, 0, 580, 561, 563, 564, 567, 571,
	572, 573, 574, 575, 577, 579, 583, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 524, 276, 277, 278,
	279, 569, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 591, 565, 590, 592, 593,
	589, 594, 595, 576, 481, 0, 528, 587, 586, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 554,
	533, 534, 535, 480, 536, 531, 532, 555, 526, 551,
	552, 505, 529, 537, 550, 538, 553, 556, 557, 596,
	597, 544, 598, 541, 558, 549, 548, 539, 527, 559,
	560, 512, 507, 542, 543, 530, 545, 508, 509, 510,
	511, 0, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 326, 522, 0, 0, 1591, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 513, 0, 0, 318,
	272, 0, 0, 0, 0, 570, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 0, 0,
	503, 547, 546, 490, 499, 0, 0, 214, 153, 491,
	0, 498, 492, 496, 495, 493, 494, 0, 562, 0,
	0, 0, 0, 0, 0, 462, 475, 0, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 473, 0, 0, 0, 0, 523, 0, 474,
	0, 0, 518, 500, 501, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 497, 521, 525, 226, 584, 519, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 585, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 349, 0, 0, 568,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	520, 0, 308, 290, 581, 463, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 566,
	286, 0, 0, 580, 561, 563, 564, 567, 571, 572,
	573, 574, 575, 577, 579, 583, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 524, 276, 277, 278, 279,
	569, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 591, 565, 590, 592, 593, 589,
	594, 595, 576, 481, 0, 528, 587, 586, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 554, 533,
	534, 535, 480, 536, 531, 532, 555, 526, 551, 552,
	505, 529, 537, 550, 538, 553, 556, 557, 596, 597,
	544, 598, 541, 558, 549, 548, 539, 527, 559, 560,
	512, 507, 542, 543, 530, 545, 508, 509, 510, 511,
	326, 522, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 513, 0, 0, 318, 272,
	0, 0, 0, 0, 570, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 503,
	547, 546, 490, 499, 0, 0, 214, 153, 491, 0,
	498, 492, 496, 495, 493, 494, 0, 562, 0, 0,
	0, 0, 0, 0, 462, 475, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 473, 0, 0, 0, 0, 523, 0, 474, 0,
	0, 518, 500, 501, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 497, 521, 525, 226, 584, 519, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 585, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 349, 0, 0, 568, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 520,
	0, 308, 290, 581, 463, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 566, 286,
	0, 0, 580, 561, 563, 564, 567, 571, 572, 573,
	574, 575, 577, 579, 583, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 524, 276, 277, 278, 279, 569,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 591, 565, 590, 592, 593, 589, 594,
	595, 576, 481, 0, 528, 587, 586, 588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 554, 533, 534,
	535, 480, 536, 531, 532, 555, 526, 551, 552, 505,
	529, 537, 550, 538, 553, 556, 557, 596, 597, 544,
	598, 541, 558, 549, 548, 539, 527, 559, 560, 512,
	507, 542, 543, 530, 545, 508, 509, 510, 511, 326,
	522, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 1191,
	0, 0, 0, 478, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 513, 0, 0, 318, 272, 0,
	0, 0, 0, 570, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 503, 547,
	546, 490, 499, 0, 0, 214, 153, 491, 0, 498,
	492, 496, 495, 493, 494, 0, 562, 0, 0, 0,
	0, 0, 0, 0, 475, 0, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	473, 0, 0, 0, 0, 523, 0, 474, 0, 0,
	518, 500, 501, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 497, 521, 525, 226, 584, 519, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 585, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 349, 0, 0, 568, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 520, 0,
	308, 290, 581, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 1192, 1193, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 566, 286, 0,
	0, 580, 561, 563, 564, 567, 571, 572, 573, 574,
	575, 577, 579, 583, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 524, 276, 277, 278, 279, 569, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 591, 565, 590, 592, 593, 589, 594, 595,
	576, 481, 0, 528, 587, 586, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 554, 533, 534, 535,
	480, 536, 531, 532, 555, 526, 551, 552, 505, 529,
	537, 550, 538, 553, 556, 557, 596, 597, 544, 598,
	541, 558, 549, 548, 539, 527, 559, 560, 512, 507,
	542, 543, 530, 545, 508, 509, 510, 511, 326, 522,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 513, 0, 0, 318, 272, 0, 0,
	0, 0, 570, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 547, 546,
	490, 499, 0, 0, 214, 153, 491, 0, 498, 492,
	496, 495, 493, 494, 0, 562, 0, 0, 0, 0,
	0, 0, 462, 475, 0, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 473,
	0, 0, 0, 0, 523, 0, 474, 0, 0, 518,
	500, 501, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	497, 521, 525, 226, 584, 519, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 585, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 349, 0, 0, 568, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 520, 0, 308,
	290, 581, 463, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 566, 286, 0, 0,
	580, 561, 563, 564, 567, 571, 572, 573, 574, 575,
	577, 579, 583, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 524, 276, 277, 278, 279, 569, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 591, 565, 590, 592, 593, 589, 594, 595, 576,
	481, 0, 528, 587, 586, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 554, 533, 534, 535, 480,
	536, 531, 532, 555, 526, 551, 552, 505, 529, 537,
	550, 538, 553, 556, 557, 596, 597, 544, 598, 541,
	558, 549, 548, 539, 527, 559, 560, 512, 507, 542,
	543, 530, 545, 508, 509, 510, 511, 326, 522, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 513, 0, 0, 318, 272, 0, 0, 0,
	0, 570, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 503, 547, 546, 490,
	499, 0, 0, 214, 153, 491, 0, 498, 492, 496,
	495, 493, 494, 0, 562, 0, 0, 0, 0, 0,
	0, 0, 475, 0, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 473, 0,
	0, 0, 0, 523, 0, 474, 0, 0, 518, 500,
	501, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 497,
	521, 525, 226, 584, 519, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	585, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 349, 0, 0, 568, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 520, 0, 308, 290,
	581, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 566, 286, 0, 0, 580,
	561, 563, 564, 567, 571, 572, 573, 574, 575, 577,
	579, 583, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 524, 276, 277, 278, 279, 569, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	591, 565, 590, 592, 593, 589, 594, 595, 576, 481,
	0, 528, 587, 586, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 554, 533, 534, 535, 480, 536,
	531, 532, 555, 526, 551, 552, 505, 529, 537, 550,
	538, 553, 556, 557, 596, 597, 544, 598, 541, 558,
	549, 548, 539, 527, 559, 560, 512, 507, 542, 543,
	530, 545, 508, 509, 510, 511, 0, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 145, 326, 39, 133,
	111, 0, 0, 0, 0, 0, 0, 0, 288, 397,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 398, 400, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 40, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 112, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 0, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 934, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 922, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 1669, 1671, 1672, 1673, 1674,
	1675, 1676, 0, 1680, 1677, 1678, 1679, 285, 0, 1664,
	1665, 1666, 1667, 920, 1650, 1670, 0, 1651, 284, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1668, 296, 262, 297, 249, 274, 273, 275, 945, 947,
	949, 951, 954, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 1663, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 944, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	0, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 1734, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	349, 0, 0, 0, 1731, 0, 1730, 322, 1732, 1735,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	1736, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 1502, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 819, 820, 821, 818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 701, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 709, 710, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	683, 347, 209, 682, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 699, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 700, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 703, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 711, 706, 707, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 145, 326, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 99, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	1522, 0, 152, 0, 0, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 112, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 145, 326, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 99, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	1513, 0, 152, 0, 0, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 112, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 145, 326, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 99, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1448,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 112, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 709, 710, 0, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 683,
	347, 209, 682, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	711, 706, 707, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 0, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	2059, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 0, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 1086,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 1084, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 1080, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 1084, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1082, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2674, 0, 152, 547, 0,
	0, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 0, 193, 194, 195, 196, 326, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 1084,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2398, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 0, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 1084, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1082, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	0, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 1800, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 1817, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 1084, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2752, 0, 152, 0, 0, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 547, 0, 0, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 0, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2689, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 0, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 0, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 2630,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2475, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	0, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 2518, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 0, 193, 194, 195, 196, 326, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 0, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1448, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	0, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 2195, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 1084, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 0, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 1800, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 0, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 0, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	1829, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 0, 193, 194, 195, 196, 0, 0, 0,
	357, 358, 359, 380, 343, 326, 230, 0, 0, 1700,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 1084, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 1375, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 416, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 417, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 0, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 0, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 233, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 0, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	0, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 457,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 934, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 934, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 1248, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 0, 193, 194, 195, 196, 922, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 942, 946, 948, 950, 952,
	953, 955, 645, 959, 956, 957, 958, 0, 0, 937,
	938, 939, 940, 920, 921, 943, 0, 923, 0, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 935,
	941, 0, 0, 0, 922, 0, 0, 0, 945, 947,
	949, 951, 954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 942, 946, 948, 950, 952, 953, 955, 0,
	959, 956, 957, 958, 681, 0, 937, 938, 939, 940,
	920, 921, 943, 0, 923, 936, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 935, 941, 0, 0,
	0, 0, 0, 0, 0, 945, 947, 949, 951, 954,
	0, 0, 819, 820, 821, 818, 0, 0, 0, 1244,
	0, 0, 0, 1241, 0, 0, 0, 1243, 1240, 1242,
	1246, 1247, 0, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 683, 0, 0, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1248, 0,
	0, 668, 0, 0, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 1882, 0, 0, 0, 1432, 0,
	0, 0, 0, 0, 0, 0, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1434, 0, 0, 0, 0, 0, 0, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1251, 1252, 1253, 1254, 1255, 1256, 1249, 1250, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 666, 0, 1414,
	0, 0, 1432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 647, 676, 0, 1434, 0, 0, 0,
	1432, 0, 0, 0, 0, 0, 0, 0, 944, 0,
	1244, 0, 0, 0, 1241, 0, 0, 671, 1243, 1240,
	1242, 1246, 1247, 2769, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 1414, 1434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 672,
	677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 944, 662, 0, 660, 664,
	680, 1414, 0, 0, 661, 658, 657, 0, 663, 648,
	649, 650, 651, 652, 653, 0, 678, 679, 1407, 1406,
	0, 0, 1405, 0, 0, 0, 0, 1418, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 1422, 0,
	0, 0, 1432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	1747, 0, 1413, 1415, 1417, 669, 1419, 1420, 1421, 1423,
	1424, 1425, 1427, 1428, 1429, 1430, 1434, 0, 0, 0,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1251, 1252, 1253, 1254, 1255, 1256, 1249, 1250, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1422, 1414, 1433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 1413, 1415, 1417, 1418,
	1419, 1420, 1421, 1423, 1424, 1425, 1427, 1428, 1429, 1430,
	1422, 1431, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	1411, 0, 0, 0, 1413, 1415, 1417, 0, 1419, 1420,
	1421, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1433, 0,
	0, 0, 436, 0, 435, 442, 432, 1426, 0, 0,
	0, 0, 0, 0, 1416, 0, 439, 440, 0, 441,
	445, 0, 0, 427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 0, 1431, 1433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 454, 0, 0, 456, 0, 0, 0, 0,
	455, 0, 1422, 1431, 0, 0, 0, 0, 0, 0,
	0, 1426, 0, 0, 0, 0, 0, 0, 1416, 0,
	1410, 0, 1411, 0, 0, 0, 1413, 1415, 1417, 0,
	1419, 1420, 1421, 1423, 1424, 1425, 1427, 1428, 1429, 1430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1433, 0,
	0, 0, 436, 0, 435, 442, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 439, 440, 0, 441,
	445, 0, 0, 427, 0, 436, 0, 435, 442, 432,
	0, 0, 0, 450, 0, 1431, 0, 0, 0, 439,
	440, 0, 441, 445, 0, 0, 427, 428, 430, 429,
	0, 0, 1410, 0, 0, 0, 450, 434, 0, 0,
	0, 0, 454, 0, 0, 456, 0, 0, 0, 438,
	455, 0, 0, 0, 0, 0, 453, 0, 0, 0,
	0, 1426, 0, 431, 0, 0, 0, 422, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 437, 443, 0, 444, 446, 0, 0,
	447, 448, 449, 0, 0, 451, 452, 428, 430, 429,
	0, 0, 0, 0, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	428, 430, 429, 0, 0, 0, 453, 0, 0, 0,
	434, 0, 0, 431, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 453,
	0, 0, 0, 0, 0, 0, 431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 437, 443, 0, 444, 446, 0, 0,
	447, 448, 449, 0, 0, 451, 452, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 437, 443, 0, 444,
	446, 0, 0, 447, 448, 449, 0, 0, 451, 452,
}

var yyPact = [...]int{
	305, -1000, -324, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -322, 29259,
	29259, -1000, -1000, 1806, -1000, 28740, 9526, 29778, 292, 287,
	29778, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 547, -1000, 28221, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 500, 31422, 30297, 7439, 29778, -298,
	-1000, 2404, -157, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1865, 593, 27702, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 30826, 219, 593, 705, 713, 720, 720, 11602, -72,
	-77, 2404, 263, 210, -1000, 1006, 305, 1738, 463, 29778,
	-1000, 1190, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 463, -1000,
	-1000, -1000, 2404, 2404, -1000, 29778, 29778, 24, 1330, -1000,
	249, 244, 238, 1182, -1000, -1000, -1000, -1000, -1000, 2481,
	-1000, 29778, 29778, 2126, 29778, -1000, 1559, 434, 31572, 2274,
	954, 618, 2146, -1000, -1000, 2109, -1000, 191, 185, 237,
	273, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 94, -1000,
	2356, -1000, -1000, 182, -1000, -1000, 160, -1000, -1000, -1000,
	-80, -1000, -1000, -1000, -1000, -1000, -1000, -155, -1000, -1000,
	743, 1394, 7439, -1000, 1558, -1000, 2749, -1000, -1000, -1000,
	-1000, 4834, 8996, 8996, 8996, 8996, -1000, -1000, 1946, 7439,
	2104, 2103, -1000, -1000, -1000, -1000, -1000, 1171, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1737, 8477, -1000, 2098, 2095, 2092, 2091, 2090, 2089, 2088,
	2086, 2085, 2075, 2070, 2068, 2060, 2058, 1874, 1932, 2056,
	1736, 1729, 2041, 2035, 2033, 1728, 1874, 1874, 2031, 2030,
	2029, 2027, 2026, 2025, 2020, 2019, 2011, 2009, 2008, 2000,
	1991, 1981, 1978, 1977, 1976, 1971, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 209,
	-1000, 1162, 1014, -1000, 1970, 2261, 2379, 1894, 2440, 2364,
	2362, 2353, 2345, 1608, -1000, -1000, 29778, 29778, 498, 498,
	498, 498, 498, 523, 498, 543, 537, 532, 498, -1000,
	-1000, -1000, -1000, -1000, -1000, 624, -1000, -1000, -1000, -1000,
	1009, 29778, -1000, 1904, 1283, 2375, 447, 445, 335, -1000,
	1386, 1386, 1386, 1386, 1283, 255, 438, 2379, 2379, -79,
	1386, -112, 1283, 1283, -112, 1283, 1283, 1283, 109, -1000,
	-1000, -1000, 1386, 443, 1386, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2344, 2338, 500, 29778, 51, 29778, 500, 500,
	504, -1000, -165, -1000, -1000, 714, -1000, 653, -1000, 1559,
	430, 421, 1026, 1380, -1000, 1289, 29778, 29778, 29778, 1289,
	1289, 15238, 14719, -1000, 29778, -1000, 2379, 1894, -1000, 1839,
	2076, 1837, 1894, 500, 500, 500, 500, 500, 500, 500,
	500, 29778, 29778, 500, 6391, 6391, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2264, 241, 1968, -1000, 29778, 236,
	2379, 2261, 2379, -1000, -1000, 1148, 1607, 1727, -1000, -1000,
	249, 1237, -1000, 765, -1000, -1000, -1000, -1000, 29778, 231,
	-1000, -1000, 1721, 1966, -1000, 417, 881, 1122, -1000, 204,
	31595, 24061, 1559, 24061, 29778, -1000, -1000, -1000, -1000, -1000,
	-1000, -83, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 127, -1000, 7439, 7439, 7439,
	7439, 7439, -1000, 477, 7958, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8996, 8996, 8996, 8996, 8996, 8996, 8996, 8996,
	8996, 8996, 8996, 8996, 1945, 1401, 8996, 8996, 8996, 8996,
	2076, 2411, 1020, 163, -1000, -1000, -1000, -1000, -1000, 1338,
	1394, 7439, 7439, 29778, -1000, 30861, 7439, 7439, 30640, 7439,
	2341, 7439, 7439, 7439, 1831, 3276, 29778, 7439, -1000, 1830,
	1828, -1000, -1000, 1457, 7439, 7439, -1000, -1000, 7439, 8996,
	7439, -1000, -1000, -1000, 132, 2341, 2341, 7439, 7439, 2341,
	2341, 2341, 1360, 2341, 2341, 2341, 2341, 2341, 2341, 2341,
	2341, 1827, 29778, 2237, 121, -1000, -1000, -1000, 1876, -1000,
	1903, 1903, 1903, 1903, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1922, 1965, -1000, -1000, 1902, 1902, 1902,
	1876, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1919, 1919, 1920, 1919,
	29778, 2379, -298, 5872, -1000, -303, 2261, 7439, -1000, -1000,
	7439, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1716,
	2322, -1000, 1955, 1146, 29778, 1348, 29778, 24061, 29778, 1559,
	29778, 29778, 498, 498, 498, 29778, 504, -1000, 29778, 1009,
	2318, 29778, 2446, 8996, 8996, 27183, 1386, 1283, -1000, 29778,
	-1000, -1000, -1000, 1386, 29778, 1386, 1386, 2446, 1386, -1000,
	-1000, -1000, 1283, 1283, -1000, -1000, -1000, -1000, 1386, 1386,
	-1000, -1000, 2446, 29778, -87, 2446, 2446, -103, -1000, -1000,
	-1000, 29778, 29778, 498, 29778, 29778, -1000, 29778, -1000, -1000,
	29778, 31052, 29778, 29778, 2328, -1000, 24061, 29778, 21985, -1000,
	-141, 700, 659, 682, -1000, -1000, 410, 496, 13681, 358,
	24061, 4314, -1000, -1000, 1289, 1289, 1289, 4314, 4314, 1189,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1000, -1000, 87,
	2261, -1000, -1000, -1000, -1000, -1000, 29778, 29778, 24061, 1559,
	29778, 29778, 29778, 29778, -1000, 1948, 29778, 1098, -1000, -1000,
	11083, 1145, 1098, 1708, 2145, -299, -1000, 12642, 29778, 29778,
	-1000, -1000, -299, -1000, 12122, 29778, 2261, -1000, 2261, 29778,
	-1000, 2365, -1000, 249, 225, -1000, -1000, -1000, -1000, -1000,
	-1000, 1137, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 993, -1000, 29778, -1000, -1000, 204, 24061, 25099, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 116, -1000, -1000, 147,
	-1000, 520, 73, 1236, -1000, -1000, 67, 139, 570, 1394,
	-1000, 1361, 1361, 1357, -1000, 492, -1000, -1000, -1000, -1000,
	1946, -1000, -1000, -1000, 1761, 1992, -1000, 1255, 1255, 1200,
	1200, 1200, 1200, 1200, 1482, 1482, -1000, -1000, -1000, 4834,
	1945, 8996, 8996, 8996, 8996, 473, 473, 2839, 3035, -1000,
	7439, 1343, -1000, 7439, 1523, 995, 1128, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1826, 743, 1825,
	1832, 2466, 1823, 7439, -1000, -1000, 1225, 1224, 1216, -1000,
	1611, 6920, -1000, -1000, -1000, 1809, 1127, 1808, -1000, -1000,
	-1000, 1807, 1211, 827, 1803, 1465, 1799, 987, 7439, 7439,
	1191, 1188, 7439, 7439, 7439, 7439, 1797, 7439, 7439, 7439,
	7439, 7439, 7439, 7439, 7439, -66, -1000, 7439, 112, -1000,
	-1000, -1000, -1000, 1605, -1000, 1603, -1000, -1000, -1000, 1704,
	1704, -1000, 1601, -1000, -1000, -1000, -1000, 1593, -1000, -1000,
	1591, -1000, -1000, -1000, -1000, 1187, -1000, 1394, -1000, 1702,
	-1000, 991, 969, -1000, 1530, -1000, -1000, 29778, 10045, 29778,
	1904, 2272, 115, -1000, 869, -1000, 73, -170, 846, 2123,
	2465, 29778, 29778, 29778, 2316, 26664, -1000, 1944, 1186, -1000,
	-1000, 7439, -1000, -1000, 2118, 29778, 29778, 2446, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 29778, 2446, 2446, 1283, 1386,
	-1000, -1000, 1386, -1000, -1000, 1386, -1000, 1126, -1000, 29778,
	-1000, -1000, -1000, 1904, -1000, 10564, 616, 513, 31164, -1000,
	1271, 1271, 893, 1271, 1271, 1271, 1271, 401, 400, 1271,
	1271, 1271, 1271, 1271, 1271, 1271, 1271, 1271, 1271, 1271,
	1271, 1271, 1271, 1938, -1000, 113, 2319, 224, 869, 235,
	2488, 945, -1000, -1000, -1000, -1000, 17314, 17314, 13162, 17314,
	-1000, 1249, -1000, -1000, 695, 646, 630, -1000, -1000, 514,
	-1000, -1000, 846, -1000, -1000, -1000, 1935, 1329, -1000, -1000,
	1932, -1000, 4314, 4314, 4314, -1000, -1000, 17833, 29778, -1000,
	-163, -1000, -159, -1000, 938, -1000, -1000, 956, 846, 2140,
	938, 938, -1000, 10045, -1000, 2446, 6391, -1000, 21985, -1000,
	-1000, 26137, -1000, 25618, 2446, -124, -1000, 2246, 858, -1000,
	1926, -1000, 1185, 2220, -1000, 936, -1000, 1327, 1183, -1000,
	858, 1178, 2210, 936, -1000, -1000, 1110, 22, -1000, -1000,
	29778, 1721, 1174, 25099, 911, -1000, 510, 1105, 1104, -1000,
	24061, 186, 24061, -1000, 24061, -1000, -1000, 229, -1000, 29778,
	2259, -1000, -1000, -1000, 1671, -330, -1000, -1000, -1000, -1000,
	-1000, 1158, -1000, 473, 473, 2839, 2633, -1000, 8996, -1000,
	8996, 2384, 1312, -1000, 7439, 1435, 30695, 974, 16795, 29778,
	-1000, -1000, 7439, 7439, -1000, 2378, -1000, -1000, -1000, -1000,
	7439, 7439, 1663, -1000, 29778, -1000, -1000, -1000, -1000, 16795,
	-1000, 8996, -1000, 7439, 891, 2315, -66, -66, 2298, 2287,
	2271, 1154, -66, 2253, 2235, 2226, 2222, 2135, 2130, 2093,
	2081, -1000, 1925, 1394, -1000, -1000, 1794, 1792, 1151, -1000,
	1149, 1791, 1142, 1140, 5872, -1000, -124, 7439, 7439, 7439,
	2229, -1000, -1000, 140, 1788, 931, -1000, -1000, -1000, 30752,
	1903, 1903, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1922, -1000, -1000, 1902, 1902, 1902, 1876, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1919, 1919, 1920,
	1919, -1000, 2307, -1000, -69, 1271, 511, 24061, 419, -1000,
	29778, 2136, 325, 2233, 29778, 1918, 1913, 1912, 275, 30752,
	29778, 913, -1000, 1093, 305, -1000, 29778, 1394, -1000, 1559,
	-1000, 1283, -1000, 2446, 1106, -1000, -1000, 2446, 1283, 1283,
	1386, 29778, -1000, 2300, -1000, -1000, -1000, 30752, 744, -1000,
	29778, 1413, 650, 498, 650, 1411, 1911, -1000, -1000, -1000,
	29778, 29778, 29778, 1405, 1402, -1000, 29778, 31276, -1000, 1581,
	-1000, 1580, 1271, 1271, 1579, 1701, 1698, 1697, 1271, 1271,
	1573, 1696, 24580, 1568, 1567, 1563, 1598, 1693, 685, 1556,
	1520, 1490, 29778, 1909, 1645, -69, 1271, 222, 1325, 511,
	1612, 14200, 29778, 21985, 21985, 21985, 21985, -1000, 2166, 2165,
	-1000, 2183, 2172, 2182, 29778, 21985, 1904, -1000, 24580, -1000,
	-1000, -1000, 2076, 1107, 2512, 690, 7439, -1000, -1000, -1000,
	641, 24061, 1692, 358, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 29778, 29778, 1787, 2444, -1000, 927, -1000, -1000,
	1086, -1000, 2444, -47, -17, 1400, -299, 5872, 254, 29778,
	-299, 29778, 5872, -1000, 29778, 226, -299, 29778, 1555, -1000,
	-1000, -1000, 2458, 24061, 1559, 1220, 23542, -1000, 148, -1000,
	111, 425, 1691, -1000, 531, 75, -1000, 1323, 1671, -1000,
	-1000, -1000, 8996, -1000, -1000, -1000, -1000, 1394, 7439, 1785,
	-1000, 648, 648, 1784, -1000, 1903, 1903, -1000, 1876, 1902,
	1876, 648, 648, 1783, -1000, 1484, 2054, -1000, 2039, 2012,
	7439, -1000, 1776, 2581, 885, -180, -66, -1000, -1000, -1000,
	-66, -66, -66, -66, -1000, -66, -66, -66, -66, -66,
	-66, -66, -66, 466, -1000, -1000, -1000, 1679, -1000, -1000,
	-1000, 1551, -1000, 1539, -1000, -47, 1394, 1394, -1000, -1000,
	2225, 1678, 550, 10045, 2236, 245, 1613, -1000, -1000, 23023,
	387, -1000, -1000, -1000, 518, 188, 1533, 373, -1000, 29778,
	232, 29778, -1000, -1000, -1000, -1000, -1000, 2233, -1000, 587,
	251, 10564, 10564, 10564, 261, 1374, -1000, 463, 883, 1079,
	21985, 29778, -1000, 21466, 1775, -1000, 846, 2446, -1000, 29778,
	-1000, 2446, 2446, 1283, -1000, 245, 2194, -1000, -1000, 29778,
	29778, -1000, 29778, 29778, 498, 7439, -1000, -1000, -1000, 29778,
	-1000, 278, -1000, -1000, -1000, 16795, 16795, -1000, -1000, -1000,
	-1000, 1677, 1675, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 414, 29778, 1102, -1000, 1305,
	1613, 23023, 1303, 1673, 387, -1000, 1672, -1000, 818, 29778,
	29778, -1000, 889, -1000, 1294, 2114, 2133, 2114, -1000, -1000,
	-1000, -1000, 2162, -1000, 2137, -1000, -1000, 889, -1000, -1000,
	-1000, -1000, -1000, 690, -1000, 2363, 650, 650, 650, 1771,
	-1000, 911, 1766, -1000, -1000, -1000, -1000, -1000, 2386, 2438,
	22504, 2386, -305, 13, 2437, 2436, 2487, -1000, 1764, 908,
	-299, -1000, -1000, 858, -1000, -1000, -1000, -299, -1000, 858,
	-1000, -1000, 1559, -1000, 106, -1000, -1000, -1000, -1000, -1000,
	-1000, 55, -1000, 29778, -1000, 1671, 1655, 74, -1000, 1394,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7439, -1000, -1000, -1000, 1963,
	-1000, -1000, 7439, 1762, 1654, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2380, -1000,
	2431, -1000, 1759, 1758, -305, -1000, -1000, -1000, 30752, -1000,
	1272, -1000, -1000, 1653, 61, -1000, -1000, -1000, 1652, 1650,
	1519, -1000, -1000, 1472, 1152, 88, -1000, -1000, -1000, -1000,
	-1000, -1000, 1612, 29778, 1901, -1000, 1271, 1271, 1271, 29778,
	1757, 900, -1000, 1754, 1750, 468, 1310, 1308, -1000, 1515,
	17314, 21985, 21466, 873, -1000, 1066, -1000, -1000, -1000, 2446,
	-1000, -1000, 2446, -1000, -1000, 2194, -1000, -1000, 1407, 8996,
	-1000, -1000, 1648, 16276, 622, 707, 1900, -1000, 346, 2486,
	-1000, 1392, 1367, -1000, 29778, -1000, 1898, 2115, 300, 1896,
	-1000, 1892, 1891, 29778, 1915, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 418, 1101, -1000, 1645, 1644, -1000,
	61, 1643, -1000, -1000, -1000, 29778, 818, 818, 2380, 29778,
	5872, -1000, -1000, 7439, 1890, -1000, 7439, -1000, -1000, -1000,
	-1000, -1000, 1889, 2240, -1000, -1000, -1000, -1000, -1000, -1000,
	7439, 7439, -1000, -1000, -310, 1638, -1000, -1000, 2427, 1637,
	1620, 29778, -1000, 858, 858, 846, -1000, -1000, -103, -1000,
	-1000, -1000, 1668, -1000, 1646, -66, -1000, 66, 7439, -1000,
	-1000, -310, -217, -1000, -1000, -1000, -1000, 220, -1000, -1000,
	230, -1000, -1000, 1468, 416, -1000, -1000, 818, 20428, 16795,
	16276, 1635, -1000, 31276, 10564, 127, 31276, 730, 1291, -1000,
	1502, -1000, 1495, -1000, 2446, 873, 1066, -1000, -1000, 1109,
	-1000, -1000, -1000, -1000, 2839, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1491, 1888,
	-94, -1000, -1000, 1886, 20428, 363, 363, 20428, 20428, 20428,
	1880, 551, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2379, -1000, -1000, 1394, 29778, 1394, 20947, -1000, 2422, 2420,
	1394, 743, -312, 1489, -1000, 1633, -4, -1000, -1000, 755,
	-314, -59, 96, -1000, -1000, -1000, 1746, -1000, 2757, -1000,
	-1000, -1000, 743, -312, 29778, 398, 1627, -1000, -1000, 212,
	-1000, -1000, 1097, -1000, 1876, 7439, -1000, -1000, -1000, 462,
	31164, -1000, -1000, -103, 462, 427, 159, -1000, 1486, -1000,
	-1000, 2380, -1000, 1726, 7439, 1874, -213, 20428, 1087, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1080, 1075, 1054, 20428,
	-1000, -1000, -1000, 342, -1000, 1041, 1032, -1000, -1000, -1000,
	-1000, -1000, 1873, -1000, -1000, 2419, -1000, 1626, 502, 10,
	96, -1000, 2418, -28, 2416, 2413, -1000, -1000, 3795, -300,
	-60, 391, -1000, 2241, -1000, -1000, 45, -1000, -1000, -1000,
	20428, 2251, 1641, 302, 2410, -1000, 302, -1000, 268, -1000,
	1280, -1000, 1479, -1000, 2379, -1000, 1557, -1000, 2132, -1000,
	52, 988, -1000, -1000, -1000, -1000, 960, -1000, -1000, -1000,
	19909, 29778, 1620, -1000, 1872, 1470, 13, -43, 2409, -1000,
	1620, 2402, 1620, 1620, 1344, -1000, -1000, -1000, -1000, -1000,
	1625, -1000, 183, -1000, -1000, 2251, -1000, 2383, 332, -1000,
	-1000, -1000, 1469, -1000, -1000, 551, -1000, 2131, 1765, 2453,
	-1000, -1000, -1000, -1000, 183, 183, 183, 183, 156, -1000,
	-1000, 944, -1000, -1000, 2276, 15757, -3, -1000, -1000, -1000,
	1624, -1000, 1620, -1000, -1000, 3795, -1000, -1000, 1271, 1619,
	242, -1000, -1000, -1000, 19390, 311, 234, 223, -1000, 467,
	-1000, -1000, -1000, -1000, 2484, -1000, 2454, 613, 613, -1000,
	-1000, 29778, -1000, 29778, -1000, 943, -1000, -1000, -1000, 1065,
	-1000, -1000, -1000, -1000, -1000, 1461, -1000, 29778, -1000, 29778,
	309, 1458, 8996, 1871, 8996, 1869, 320, 1864, -1000, -1000,
	-1000, 1480, 365, -1000, -1000, 736, -1000, 1265, -1000, 18871,
	29778, -1000, -1000, 930, 1854, 2381, -1000, 2496, 29778, 2366,
	29778, 1852, 1263, 8996, -1000, -1000, -1000, 29778, 5353, -1000,
	1028, -1000, -1000, 457, 314, -1000, 929, -1000, 916, 18352,
	1439, 2125, -1000, -1000, 1394, 29778, 899, -1000, 29778, 304,
	-1000, -1000, -1000, 894, -1000, -1000, -1000, -1000, 457, 2193,
	-1000, 1426, -1000, -1000, 31126, 583, -1000, -1000, 31126, 307,
	-1000, 451, 1846, -1000, -1000, 890, -1000, 29778, 628, 7439,
	-1000, 307, 31276, -1000, 7439, 865, -1000, 31276, 829, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 132, 3134, 204, 159, 136, 203, 3133, 3131, 2291,
	2286, 3128, 3127, 3125, 3122, 3121, 3120, 3114, 3113, 3112,
	3111, 3110, 3109, 3108, 3107, 3106, 3105, 3104, 3103, 3101,
	3098, 3097, 3096, 202, 3095, 3094, 3079, 3078, 3070, 3069,
	3068, 3067, 3066, 3065, 3063, 3062, 3061, 3060, 3059, 3051,
	3050, 3049, 3047, 3033, 2993, 2988, 2986, 2985, 2984, 2982,
	2981, 133, 2979, 2279, 2978, 2977, 2975, 2974, 2972, 2971,
	2970, 179, 2968, 2954, 2953, 2952, 2951, 2950, 2928, 2914,
	2906, 2905, 2893, 2892, 2888, 2887, 2885, 2883, 2882, 144,
	2881, 2880, 130, 2864, 2860, 2859, 2858, 197, 182, 52,
	2857, 35, 2856, 2851, 2850, 2849, 2848, 67, 2847, 2837,
	103, 164, 209, 421, 217, 208, 156, 135, 72, 2833,
	2295, 2832, 124, 191, 121, 21, 2826, 151, 2825, 119,
	34, 24, 213, 106, 39, 138, 88, 2823, 187, 68,
	2822, 83, 2821, 2820, 205, 161, 2819, 92, 2818, 2817,
	2816, 2815, 171, 95, 2814, 56, 2811, 129, 77, 90,
	94, 2810, 2809, 2808, 79, 2804, 2802, 2801, 2800, 146,
	2798, 2797, 105, 66, 2795, 2794, 2793, 49, 192, 57,
	2791, 50, 2790, 2785, 2783, 2781, 53, 2780, 2777, 11,
	18, 20, 2775, 16, 2772, 2771, 2767, 2763, 1, 2748,
	186, 58, 75, 112, 2745, 433, 2742, 2739, 2737, 122,
	2735, 515, 2734, 2733, 2732, 2731, 2730, 22, 2729, 172,
	37, 2725, 76, 108, 93, 173, 167, 2724, 2720, 2718,
	44, 74, 54, 0, 2717, 115, 2716, 2715, 2714, 214,
	2713, 194, 165, 193, 149, 216, 169, 2696, 2695, 65,
	2694, 126, 73, 102, 81, 2692, 184, 2691, 36, 148,
	2689, 174, 2687, 125, 2, 111, 2686, 2685, 33, 237,
	2683, 2681, 2679, 91, 2678, 2676, 158, 96, 2673, 2671,
	2670, 30, 2669, 28, 26, 2668, 78, 2667, 207, 2666,
	178, 110, 155, 140, 116, 189, 190, 61, 55, 2665,
	870, 120, 69, 19, 2664, 183, 2663, 234, 226, 2662,
	170, 2660, 199, 323, 185, 2659, 147, 7, 32, 27,
	2658, 9, 2656, 107, 175, 2654, 2652, 15, 2651, 17,
	2650, 2647, 2646, 2644, 5, 2643, 2642, 2641, 3, 6,
	2640, 4, 177, 2639, 2634, 2633, 2632, 38, 154, 2631,
	101, 152, 2630, 2629, 70, 2628, 2626, 2625, 540, 2610,
	2609, 2606, 2604, 2603, 2598, 2596, 2595, 2594, 2593, 71,
	43, 2592, 2591, 2590, 2588, 59, 114, 2587, 2586, 2585,
	2583, 29, 143, 2580, 14, 2578, 25, 23, 31, 2577,
	98, 2576, 12, 153, 2574, 2570, 13, 2563, 2562, 10,
	8, 2559, 2558, 87, 2557, 64, 42, 128, 80, 2555,
	60, 181, 109, 2553, 2552, 201, 198, 168, 2549, 141,
	200, 206, 2546, 180, 2539, 2537, 2536, 2535, 2534, 2533,
	1318, 2532, 2530, 195, 45, 63, 86, 2527, 2525, 2524,
	62, 127, 89, 84, 166, 2523, 163, 2522, 2521, 82,
	2520, 2516, 2515, 2514, 2511, 162, 2509, 2508, 2507, 196,
	157, 2506,
}

//line mysql_sql.y:8977
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 454, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 95, 452, 452, 452, 453, 453,
	93, 82, 94, 402, 402, 401, 401, 400, 400, 355,
	355, 399, 399, 399, 398, 398, 398, 397, 397, 396,
	396, 395, 395, 393, 393, 394, 392, 391, 391, 391,
	389, 389, 389, 385, 385, 387, 386, 386, 388, 380,
	380, 383, 383, 381, 381, 381, 381, 384, 379, 379,
	379, 378, 378, 81, 81, 81, 302, 302, 80, 80,
	316, 316, 316, 316, 316, 314, 314, 314, 314, 314,
	314, 313, 313, 312, 312, 317, 317, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 72, 72, 72,
	72, 75, 75, 75, 76, 311, 311, 311, 73, 74,
	74, 301, 301, 306, 306, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 310, 310, 310,
	308, 308, 307, 307, 309, 309, 66, 66, 66, 69,
	68, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	67, 67, 67, 67, 67, 67, 62, 62, 62, 62,
	62, 61, 61, 63, 63, 298, 298, 297, 77, 77,
	78, 456, 456, 455, 457, 457, 457, 457, 79, 85,
	85, 85, 85, 85, 85, 85, 84, 84, 87, 87,
	86, 88, 71, 71, 71, 71, 71, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 426, 426, 426, 428,
	428, 237, 238, 458, 240, 236, 236, 236, 422, 422,
	423, 424, 425, 425, 425, 83, 7, 7, 7, 7,
	7, 7, 60, 65, 194, 194, 194, 194, 195, 195,
	195, 195, 195, 196, 197, 197, 58, 64, 64, 439,
	439, 59, 446, 446, 358, 358, 251, 251, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 362, 363, 247, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 40, 39, 39, 39, 287, 287, 38, 459,
	459, 226, 226, 48, 49, 50, 51, 52, 53, 54,
	37, 47, 47, 47, 47, 47, 47, 47, 47, 47,
	57, 57, 374, 374, 461, 461, 461, 55, 56, 357,
	357, 357, 46, 45, 44, 43, 42, 42, 36, 36,
	35, 35, 41, 105, 106, 244, 244, 244, 246, 246,
	242, 460, 460, 329, 329, 245, 245, 34, 34, 34,
	34, 243, 243, 225, 241, 241, 241, 8, 8, 6,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 18, 19, 21, 295, 295, 292, 20, 14, 13,
	16, 12, 15, 17, 5, 5, 5, 5, 9, 9,
	10, 117, 117, 159, 159, 434, 434, 430, 430, 431,
	431, 431, 432, 432, 433, 433, 89, 368, 368, 368,
	368, 368, 368, 4, 140, 140, 139, 139, 367, 367,
	367, 367, 367, 367, 299, 299, 411, 411, 411, 412,
	138, 138, 133, 133, 369, 369, 265, 413, 413, 377,
	377, 376, 376, 375, 375, 136, 136, 137, 137, 120,
	120, 98, 98, 382, 382, 382, 382, 390, 390, 354,
	354, 186, 186, 220, 220, 221, 221, 110, 110, 111,
	111, 111, 111, 111, 111, 419, 419, 421, 421, 420,
	135, 135, 131, 131, 132, 132, 132, 130, 130, 129,
	128, 128, 127, 125, 125, 125, 126, 126, 126, 113,
	113, 113, 112, 112, 112, 112, 112, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 114,
	114, 427, 427, 427, 359, 359, 359, 365, 365, 202,
	202, 203, 203, 201, 201, 115, 115, 116, 116, 116,
	116, 200, 200, 199, 118, 118, 124, 123, 123, 119,
	119, 119, 119, 210, 210, 209, 209, 209, 209, 92,
	96, 96, 97, 143, 143, 208, 207, 207, 207, 142,
	142, 141, 141, 134, 134, 122, 122, 122, 122, 206,
	121, 204, 451, 451, 450, 450, 449, 447, 447, 447,
	448, 448, 448, 448, 404, 404, 404, 404, 404, 231,
	231, 231, 235, 235, 234, 234, 234, 234, 234, 239,
	3, 3, 3, 3, 3, 25, 25, 25, 25, 25,
	25, 25, 31, 151, 152, 30, 144, 144, 145, 145,
	146, 146, 147, 148, 148, 148, 150, 149, 29, 22,
	435, 438, 436, 436, 440, 440, 440, 441, 441, 441,
	442, 442, 23, 102, 107, 107, 104, 109, 109, 109,
	109, 109, 103, 437, 443, 443, 443, 296, 296, 293,
	294, 294, 291, 290, 290, 290, 445, 445, 444, 444,
	444, 232, 232, 24, 286, 286, 288, 289, 289, 289,
	280, 280, 280, 280, 28, 284, 284, 285, 285, 285,
	285, 285, 281, 281, 283, 283, 279, 279, 279, 279,
	279, 27, 108, 108, 278, 278, 276, 276, 274, 274,
	275, 275, 273, 273, 273, 277, 277, 26, 26, 26,
	100, 99, 99, 99, 223, 223, 222, 222, 101, 32,
	171, 171, 343, 343, 343, 343, 343, 361, 361, 361,
	344, 344, 344, 345, 345, 345, 346, 346, 346, 346,
	346, 360, 360, 318, 318, 319, 319, 319, 322, 322,
	335, 335, 336, 336, 334, 334, 341, 341, 340, 340,
	339, 339, 338, 338, 337, 337, 337, 337, 332, 332,
	331, 331, 320, 320, 320, 320, 320, 321, 321, 321,
	330, 330, 333, 333, 177, 177, 178, 178, 178, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 409, 409,
	410, 180, 180, 180, 184, 184, 184, 184, 184, 184,
	179, 179, 181, 181, 160, 160, 158, 158, 153, 153,
	154, 154, 155, 155, 156, 156, 157, 157, 157, 157,
	157, 157, 304, 304, 407, 407, 408, 408, 403, 403,
	403, 406, 406, 406, 406, 406, 405, 405, 161, 218,
	218, 218, 233, 233, 233, 233, 217, 217, 217, 176,
	176, 175, 175, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 303, 303,
	248, 248, 249, 249, 193, 192, 192, 192, 192, 192,
	190, 191, 189, 189, 189, 189, 189, 188, 188, 187,
	187, 187, 282, 282, 185, 185, 183, 183, 183, 182,
	182, 182, 342, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 216, 257, 257,
	262, 262, 418, 418, 417, 162, 162, 162, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 172, 172, 172,
	327, 327, 327, 327, 327, 328, 328, 328, 325, 325,
	326, 326, 266, 267, 267, 366, 366, 323, 323, 324,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 373, 373, 373,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 429, 429, 429, 414,
	414, 414, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 214, 214, 214, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 268, 268, 269,
	269, 370, 370, 370, 370, 370, 370, 371, 371, 372,
	372, 372, 372, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 255, 211, 211, 211, 270, 263, 263, 264,
	264, 258, 258, 258, 258, 258, 258, 258, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	259, 259, 261, 261, 272, 272, 272, 271, 271, 271,
	271, 271, 271, 271, 174, 174, 174, 174, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 164,
	164, 164, 164, 168, 168, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 169,
	169, 169, 169, 167, 167, 167, 167, 167, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 90, 91, 91, 166, 219, 219,
	347, 347, 350, 350, 348, 348, 349, 351, 351, 351,
	352, 352, 352, 353, 353, 353, 356, 356, 224, 224,
	224, 230, 230, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	10, 10, 2, 0, 2, 1, 3, 3, 3, 0,
	2, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 3, 0, 1, 3, 0, 1, 3, 0,
	2, 1, 2, 3, 4, 3, 3, 1, 0, 1,
	1, 0, 1, 8, 5, 7, 0, 3, 8, 5,
	1, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 4, 1, 3, 1, 2, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 2, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 6, 1, 1, 1, 2, 4,
	6, 1, 4, 1, 3, 3, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 2,
	2, 0, 1, 4, 2, 4, 1, 5, 3, 2,
	1, 2, 2, 4, 4, 5, 2, 1, 3, 4,
	4, 1, 2, 9, 7, 1, 3, 3, 1, 1,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 7, 4, 2, 2, 2, 1, 2, 2,
	2, 3, 2, 3, 1, 1, 7, 7, 8, 0,
	4, 7, 0, 3, 0, 2, 0, 1, 1, 1,
	1, 4, 2, 2, 3, 3, 4, 5, 3, 4,
	4, 2, 2, 2, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 2, 5, 5, 0, 2, 7, 0,
	1, 0, 1, 5, 3, 2, 4, 4, 4, 4,
	4, 1, 1, 1, 3, 2, 3, 1, 1, 1,
	6, 8, 0, 1, 1, 1, 1, 5, 5, 0,
	1, 1, 3, 3, 3, 4, 6, 7, 4, 4,
	7, 8, 3, 3, 3, 0, 2, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	4, 1, 3, 1, 1, 3, 5, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 4, 1, 3, 1, 4, 6, 4,
	4, 4, 3, 6, 1, 1, 2, 2, 11, 8,
	9, 1, 3, 2, 4, 0, 2, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 4, 2, 1, 5,
	4, 4, 2, 5, 0, 2, 1, 3, 2, 1,
	5, 4, 4, 2, 0, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 1, 3, 4, 0, 1, 0,
	1, 1, 3, 1, 1, 0, 4, 1, 3, 2,
	1, 0, 8, 0, 4, 7, 4, 0, 2, 0,
	2, 0, 2, 0, 4, 1, 3, 1, 1, 4,
	3, 4, 5, 4, 5, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 3,
	3, 3, 1, 3, 3, 3, 3, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 7,
	7, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	4, 4, 3, 2, 2, 2, 3, 2, 3, 4,
	1, 3, 4, 0, 2, 1, 1, 2, 2, 0,
	1, 2, 4, 1, 3, 1, 3, 2, 3, 1,
	4, 3, 0, 1, 1, 2, 5, 2, 2, 2,
	0, 2, 3, 3, 0, 1, 3, 1, 3, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 1, 12, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 7, 7,
	1, 4, 1, 1, 3, 4, 3, 0, 1, 1,
	0, 2, 7, 8, 0, 2, 6, 0, 2, 2,
	3, 3, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 6, 0, 4, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 11, 9, 11,
	2, 2, 4, 5, 1, 3, 0, 3, 5, 10,
	0, 2, 0, 3, 2, 4, 3, 0, 2, 1,
	0, 2, 3, 0, 2, 3, 0, 3, 2, 4,
	3, 0, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 0, 1, 1, 3, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 4, 1, 3,
	3, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 1, 7, 7, 7, 7,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 5, 6, 4, 1, 1, 2,
	0, 1, 1, 2, 5, 0, 1, 1, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	2, 2, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 3,
	5, 2, 2, 2, 2, 1, 1, 2, 5, 6,
	6, 6, 1, 1, 1, 1, 1, 4, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 5,
	0, 1, 3, 0, 1, 0, 2, 0, 1, 6,
	8, 6, 5, 5, 6, 6, 6, 6, 5, 6,
	6, 6, 6, 6, 6, 6, 6, 1, 1, 1,
	4, 4, 6, 8, 6, 4, 5, 4, 4, 4,
	3, 4, 6, 6, 7, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 8, 4, 2, 3, 2, 4, 4,
	6, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 2, 3, 5, 1, 1, 3,
	0, 1, 0, 3, 0, 3, 3, 0, 3, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -454, -2, -1, -3, -93, -4, -89, -5, -6,
	-8, -70, -84, -86, -88, -87, -33, -7, -83, -61,
	-62, -66, -72, -77, -80, -81, -82, -94, -90, -91,
	-92, -110, -95, -25, -24, -23, -22, -102, 405, 12,
	452, -9, -10, -419, -11, 234, -236, -237, -238, -240,
	-458, -34, -35, -36, -42, -43, -44, -45, -46, -55,
	-56, -57, -37, -38, -39, -40, -48, -49, -50, -51,
	-52, -53, -54, -41, -105, -106, -59, -58, -64, -60,
	-65, -104, 209, -63, 61, -67, -68, -69, -73, -74,
	-75, -76, -78, -79, 336, 342, 395, 539, 540, 46,
	-111, -113, 541, -26, -27, -28, -29, -30, -31, -32,
	205, 14, 485, -12, -15, -13, -16, -14, -20, -21,
	-19, -17, -18, -103, 229, 228, 37, 292, 293, 294,
	340, 227, 206, 13, 137, 138, 140, 141, 30, 41,
	318, -112, 67, 207, -114, 10, 543, 542, -120, 38,
	-158, -233, 70, 78, -227, -229, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 455, 526, 527, 528, 529, 316, 317, 482,
	246, 270, 366, 273, 280, 137, 156, 150, 178, 170,
	145, 250, 285, 251, 77, 140, 438, 88, 417, 392,
	143, 265, 267, 269, 272, 252, 166, 161, 264, 248,
	539, 159, 253, 39, 254, 183, 255, 256, 487, 413,
	315, 419, 277, 390, 160, 414, 268, 416, 185, 189,
	430, 342, 154, 155, 421, 432, 182, 226, 42, 484,
	238, 433, 187, 181, 177, 441, 281, 279, 180, 153,
	176, 249, 50, 191, 190, 192, 386, 387, 388, 389,
	257, 258, 330, 429, 173, 162, 320, 146, 22, 436,
	233, 418, 343, 259, 274, 282, 186, 188, 240, 245,
	486, 394, 244, 278, 434, 158, 237, 266, 232, 437,
	147, 336, 345, 260, 141, 271, 431, 440, 49, 358,
	152, 144, 223, 138, 242, 247, 11, 261, 262, 263,
	284, 283, 275, 174, 239, 179, 164, 151, 175, 139,
	241, 439, 359, 537, 318, 375, 172, 169, 243, 216,
	435, 420, 142, 379, 360, 167, 286, 533, 534, 535,
	331, 314, 287, 288, 165, 230, 411, 412, 289, 291,
	385, 307, 361, 393, 367, 362, 198, 295, 423, 184,
	536, 296, 297, 298, 415, 299, 300, 301, -120, -63,
	-10, -9, -112, -113, -158, 213, -241, 23, 390, -71,
	391, 209, 67, -233, -5, -4, -89, -61, -110, -239,
	-233, 292, 292, -239, 213, -233, 244, 374, -358, 219,
	-313, -286, 245, -312, -288, -315, -289, 31, 205, 207,
	206, 241, 14, 340, 215, 12, 10, 341, 227, 24,
	25, 27, 13, 342, 344, 28, 345, 348, 349, 350,
	41, 353, 354, 234, 70, 78, 73, 252, -152, -233,
	-264, -258, 95, 235, -260, -253, -254, -256, -399, -393,
	-252, 67, 121, 122, 129, 96, -255, -342, 35, 98,
	492, 453, -212, -213, -214, -215, -216, -233, -394, -392,
	73, 79, 82, 85, 86, 84, 83, 163, 81, 74,
	133, 134, -113, 70, -414, 500, -228, 521, 526, 527,
	528, 529, 520, 46, -364, -372, 212, -370, 132, 168,
	230, 164, 12, 127, 385, 165, 497, 517, 455, 501,
	524, 494, 495, 489, 490, 491, 493, 502, 504, 516,
	-373, 512, 522, 523, 510, 525, 72, 71, 515, 514,
	503, 498, 499, 505, 488, 496, 506, 507, 513, 518,
	519, 324, 88, 325, 326, 445, 319, 327, 219, 390,
	55, 328, 329, 330, 331, 332, 452, 333, 56, 334,
	323, 234, 375, 335, 167, 184, 457, 456, 458, 449,
	446, 444, 447, 448, 450, 451, 508, 509, 511, -309,
	-307, -233, -96, -97, 531, -129, -130, -205, 19, 6,
	7, 8, 9, -452, 392, 486, 295, 337, 216, 316,
	375, 299, 244, -280, -278, -360, 289, 285, 214, 224,
	223, 89, 445, 212, 351, -430, -431, 202, 203, 204,
	-421, 478, -420, -233, 326, 26, 213, 337, 423, 424,
	425, 426, 427, 428, -47, -374, -357, 420, 419, -245,
	412, 418, 410, 422, 413, 317, 301, 300, 205, 479,
	-224, 361, 393, 240, 442, 443, 338, 394, 430, 431,
	414, 88, 171, 168, 216, 213, 316, 445, 375, 299,
	-430, 142, 139, -300, 142, 94, 147, 146, -300, 244,
	374, 40, -306, 385, -305, -307, 430, 431, 441, 71,
	72, 429, -224, 88, 411, 411, -130, -205, -129, -111,
	-113, -92, -419, 214, 316, 375, 244, 215, 213, 216,
	445, 292, 337, 299, -359, -427, 31, -365, 199, 200,
	201, 32, 33, -1, 73, -136, 236, -158, 135, -136,
	-130, -129, -130, -158, -217, -233, 392, 104, -71, -71,
	391, -422, -423, -424, -426, 209, 391, 390, 135, 15,
	-239, -239, 65, -158, -288, 244, -313, -286, 35, 64,
	136, 217, 136, 64, 67, 338, 316, 375, 339, 445,
	213, 351, 216, 244, 352, 316, 375, 213, 216, 445,
	244, 316, 213, 216, 375, 244, 352, 410, 411, 216,
	26, 343, 346, 347, 411, -378, 441, 136, 94, 91,
	92, 93, -258, 111, -271, 104, 105, 106, 107, 108,
	109, 110, 118, 117, 128, 121, 122, 123, 124, 125,
	126, 127, 119, 120, 114, 95, 112, 116, 113, 97,
	-113, -258, -264, 46, -256, -256, -256, -256, -342, -262,
	-258, 67, 67, 135, 73, -258, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, -371, 67,
	67, -268, -269, 67, 67, 67, 73, 73, 67, 67,
	67, 73, -269, -269, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 136, -164, -168, -165, -167, -166, -170, -169,
	168, 169, 132, 172, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 30, 184, 230, 164, 165, 166,
	167, 185, 150, 170, 483, 193, 151, 194, 152, 195,
	153, 196, 154, 155, 197, 156, 159, 160, 161, 158,
	135, -130, 136, 67, -98, 38, -132, 21, -114, -113,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 79,
	-151, -233, -144, -233, -276, 219, -276, -276, -276, -276,
	215, -276, 213, 213, 213, -276, -432, 149, 136, -421,
	-135, 67, -244, 112, 116, 23, 242, 242, 279, -459,
	-460, 15, 114, -242, -460, -242, -242, -244, -461, 215,
	421, 42, 243, 242, -131, -132, -131, 415, 411, -329,
	416, 417, -246, -460, -245, -244, -244, -245, -244, -244,
	-244, 213, 216, 445, 299, -459, 242, -459, 30, 30,
	-358, -158, -358, 479, -225, -233, -358, -358, -433, 218,
	434, 485, 145, 146, 147, -288, 244, 244, 136, 104,
	23, -308, 104, 115, -307, -307, -307, -308, -308, -179,
	40, -232, 132, -233, 73, -179, 40, -456, -455, -158,
	-131, -114, -113, 68, 68, 68, -358, -358, -358, -358,
	-358, -358, -358, -358, -239, -144, -358, -115, -116, 123,
	-258, -233, -115, 38, -367, 46, -110, 67, 30, 67,
	-233, -368, 46, -110, 67, 30, -131, -98, -132, 135,
	79, 73, -71, 68, 136, -425, 85, 86, -428, 182,
	174, -233, -85, 73, -3, -4, -5, -6, -33, -61,
	-110, -395, -393, 67, 31, 384, 64, 15, -314, 213,
	445, 337, 240, 216, 316, -312, -295, -292, -290, -232,
	-288, -291, -290, -317, -217, 411, -99, 396, 291, -258,
	-258, -258, -258, -258, 84, 95, 314, 85, 86, -253,
	-272, 31, 287, 288, -254, -254, -254, -254, -254, -254,
	-254, -254, -254, -254, -254, -254, -261, -270, -342, 67,
	114, 112, 116, 113, 97, -256, -256, -254, -254, 68,
	136, -418, -417, 99, -258, -258, -233, -415, -416, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	328, 323, 329, 327, 319, 335, 330, 331, 167, 476,
	477, 470, 471, 472, 473, 474, 475, -263, -264, -263,
	-258, -415, -263, -211, 32, 31, -264, -264, -264, 68,
	-258, -429, 312, 311, 313, -133, -233, -263, 68, 68,
	68, 79, -264, -264, -263, -254, -263, -416, -211, -211,
	-264, -264, -211, -211, -211, -211, 123, -211, -211, -211,
	-211, -211, -211, -211, -211, 68, -307, 40, -353, 359,
	358, -347, -349, 67, -348, 67, -348, -348, -348, 67,
	67, -350, 67, -350, -350, -347, -351, 67, -351, -352,
	67, -351, -233, -131, -97, -376, -375, -258, 40, 532,
	-98, -258, -128, -127, -258, -453, 73, 34, 67, 135,
	-158, 95, -435, -233, -296, -293, -290, -233, -286, -233,
	-233, -276, -276, -276, -158, -433, -420, 34, -134, -233,
	-201, 16, -256, -256, -290, 244, -459, -244, -226, -225,
	-246, -241, -246, -246, -201, -460, -244, -244, -246, -242,
	-201, -233, 411, -201, -201, -329, -243, -233, -243, -276,
	-225, -226, -226, -158, -194, 210, 207, 206, -178, -198,
	356, 246, -277, 250, 77, 251, 392, 252, 215, 254,
	255, 256, 226, 257, 258, 259, 385, 260, 261, 262,
	263, 339, 6, 302, 40, -435, -435, 30, -296, -233,
	-123, -118, -122, -119, -124, -204, -206, -121, 67, -158,
	-113, -233, 435, 436, 143, 146, 145, 31, 384, -311,
	384, 31, -286, -305, -301, 73, 385, -291, -310, 64,
	132, -375, -308, -308, -308, -310, -310, 131, 136, -457,
	434, 435, 202, -98, -160, -158, -435, -295, -286, -233,
	-160, -160, -233, 67, -233, -200, 136, -199, 15, -234,
	-233, 34, 73, 135, -200, 73, -299, 64, -369, -265,
	-413, 531, -138, 68, -133, -411, -412, -133, -137, -233,
	-369, -138, 68, -411, -98, -98, -233, 23, -71, -423,
	135, 136, -134, -314, -294, -291, -316, 123, -233, -302,
	136, 485, 544, 71, 217, -445, -444, 376, 68, 136,
	-379, 218, 452, 73, 545, 198, 84, 314, 85, 86,
	-342, -264, -261, -256, -256, -254, -254, -259, 231, -259,
	94, -258, -257, -417, 101, -258, 34, 136, 65, 135,
	68, 68, 15, 15, 68, -258, 68, 68, 68, 68,
	15, 15, -258, 68, 135, 68, 68, 68, 68, 65,
	68, 136, 68, 136, -264, -258, 68, 68, -258, -258,
	-258, -264, 68, -258, -258, -258, -258, -258, -258, -258,
	-258, -324, 406, -258, -356, 360, 79, 79, -219, 73,
	-219, 79, 79, 79, 136, 68, 73, 136, 22, 136,
	-125, 36, 37, -152, -145, -146, -147, -148, -164, -217,
	169, 172, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 230, 164, 165, 166, 167, 185, 150,
	170, 151, 152, 153, 154, 155, 156, 159, 160, 161,
	158, -233, -135, 35, -438, 363, -446, 136, 40, -444,
	445, -279, 65, -108, 15, -158, -158, -158, -171, 34,
	15, -117, -159, -233, 67, 68, 136, -258, -287, 65,
	-233, -226, -201, -158, -233, -201, -201, -244, -246, -246,
	-242, 135, -225, -135, -155, -161, -156, -217, -249, -157,
	222, 220, 224, -408, 89, 225, 276, 90, 215, -195,
	215, 90, 221, 225, 220, -196, 215, 136, -198, -230,
	104, -230, -224, 131, -230, -230, -230, -230, 253, 253,
	-230, -230, -230, -230, -230, -230, -230, -230, -230, -230,
	-230, -230, -230, -230, 67, -439, 363, 30, 322, -446,
	-109, 316, 30, -207, -208, -209, -210, 53, 57, 59,
	54, 55, 56, 60, 30, 136, -231, -235, 34, -233,
	73, -231, -113, -118, -123, -231, 67, 144, 147, 147,
	146, 217, 67, 104, -310, -310, -310, 40, -232, -455,
	441, 435, 136, 64, -145, -201, -116, -118, -233, 73,
	-233, 123, -201, -382, 416, 39, 136, 67, 68, 136,
	46, 136, 104, 68, 136, 68, 46, 135, 392, -233,
	-393, 68, -316, 136, 217, 135, 135, -292, 342, -232,
	-294, 20, 485, -217, 38, -223, -222, 73, 545, 68,
	-259, -259, 94, -256, -253, 68, 102, -258, 100, -162,
	-164, 358, 359, -163, -169, 132, 168, 230, 167, 166,
	164, 358, 359, -179, -233, -258, -258, 68, -258, -258,
	15, -233, -179, -254, -258, -130, 68, -323, -324, -323,
	68, 68, 68, 68, -323, 68, 68, 68, 68, 68,
	68, 68, 68, 67, 68, 68, 68, 136, 68, 68,
	68, 136, 68, 136, -375, -382, -258, -258, -127, -126,
	43, 350, 68, 136, -164, 34, -441, 418, 365, -230,
	-251, -250, 318, 41, -362, 385, 371, 372, -293, 244,
	-233, 64, 306, 307, 308, 309, -274, -275, -273, -277,
	-435, 67, 67, 67, -343, 296, -164, -158, -117, -233,
	15, 136, -434, 135, -1, -233, -286, -244, -201, -460,
	-201, -244, -244, -246, -233, 34, -164, -157, -233, 90,
	-407, -408, -276, -407, 90, 67, -233, -233, -233, 90,
	90, -233, -198, 79, 79, -230, -230, 79, 73, 73,
	73, -230, -230, 79, 73, -235, 79, 79, 79, 79,
	40, 73, -184, 40, 264, 268, 265, 266, 267, 79,
	40, 79, 40, 79, 40, -233, 67, -409, -410, 73,
	-441, -230, 322, 104, -251, -107, 77, 31, -139, 210,
	207, -435, -298, -297, -217, -122, -122, -122, -122, 53,
	53, 53, 58, 53, 58, 53, -209, -298, -124, -135,
	-235, 68, -451, -450, -449, -447, 61, 218, 62, -263,
	147, -294, -247, 73, -301, -158, -158, 68, -203, 17,
	135, -203, -390, 402, 397, 399, 90, -265, -377, -376,
	46, -110, -133, -369, -412, -375, -233, 46, -110, -369,
	-233, 79, 15, -291, -286, 123, 123, -233, 343, -302,
	73, 364, 73, 213, 546, 136, 104, -223, -253, -258,
	68, -172, 155, 154, -172, 68, -348, -348, -347, -350,
	-347, -172, -172, 68, 68, 23, 68, 68, 68, -258,
	68, 68, 136, -366, 454, -323, -323, -323, -323, -323,
	-323, -323, -323, -323, -323, -323, -323, -323, -267, -266,
	236, 73, 79, 79, -390, 44, 45, 73, 211, -147,
	40, -110, -442, 77, -436, 73, -233, -443, 77, 366,
	134, 320, 40, 367, 368, 382, 315, 79, 79, 373,
	-437, -233, -140, 316, -158, -273, -224, 131, 255, 299,
	-153, -154, -155, -153, -153, -344, 298, 20, 79, 122,
	-136, 65, 135, -118, -159, -233, 123, 68, -201, -233,
	-201, -201, -244, -110, -176, -175, -173, 84, 95, 40,
	356, -174, 77, 131, 269, 247, 270, -193, -248, 64,
	362, 220, 89, 90, 344, -249, -403, -405, -233, -405,
	-233, -403, -403, -276, -258, -233, -197, 304, 305, -179,
	-179, 73, 73, -180, 247, -160, 68, 136, 104, -442,
	-436, 104, 73, -443, 73, 136, -139, -139, -201, 136,
	104, -142, -141, 64, 65, -143, 64, -141, 53, 53,
	-201, -449, -448, 23, -408, -408, -408, 68, 68, -202,
	18, 20, 123, -202, -354, 533, -386, -388, 397, 20,
	20, 13, 68, -369, -369, -286, -302, 385, -158, -222,
	73, 546, -258, 68, -258, 68, 73, -130, 20, 68,
	68, -354, -149, -164, -252, 73, -440, 376, 73, 73,
	79, 40, 79, 134, 369, -363, -107, -139, 67, -230,
	-230, -230, -233, 68, 136, 68, 68, -345, 235, 79,
	122, 79, 122, 79, -231, -118, -233, -201, -434, 135,
	-201, -201, -173, 84, -254, 73, -181, -232, 132, -182,
	40, 268, 264, -183, 40, 248, 249, -185, 67, 276,
	13, 90, 90, -158, 67, 65, 286, 67, 67, 67,
	-405, 68, 248, 249, 68, -410, 73, -440, 73, -435,
	-130, -297, -375, -258, 67, -258, 67, 53, 19, 17,
	-258, -264, -186, 534, 73, 20, 73, -384, 73, -298,
	-101, -380, -329, 68, 68, -323, -326, -325, -328, 403,
	278, 409, -264, -186, 484, 20, 485, 319, 40, 79,
	40, 370, -281, -283, -217, 67, -179, -181, 73, -177,
	-178, -155, -100, -99, -177, -346, 138, 79, 122, 79,
	79, -201, -201, 79, 67, -370, -282, 67, -281, -406,
	306, 307, 308, 310, 309, -406, -281, -281, -281, 67,
	-304, -303, 277, 95, -131, -134, -404, -233, 220, 20,
	20, -220, 535, 79, 73, 399, -355, 536, -389, 402,
	-383, -381, 397, 398, 399, 400, 68, -327, 97, 369,
	373, -258, -220, -150, -233, 73, 364, 73, 319, 68,
	136, -347, -258, -318, 236, -101, -318, -361, 146, 297,
	485, 79, 122, 79, -130, 68, -258, -268, -188, -187,
	481, -281, 68, 68, 68, 68, -281, 277, 68, 68,
	136, 67, 20, 73, -391, 218, -387, -388, 401, -381,
	20, 399, 20, 20, -327, 531, 407, 408, 407, 408,
	34, 385, -284, -283, -125, 68, -319, 285, 20, -319,
	297, 79, 122, 79, -131, 68, -192, -190, -191, 64,
	414, 274, 275, 68, -284, -284, -284, -284, 68, -233,
	220, -221, -233, -384, -398, 67, 79, -386, -385, -387,
	20, -384, 20, -384, -384, 94, 73, -285, 226, 77,
	485, 304, 305, -125, 20, -320, 278, 279, -321, -333,
	281, 79, -303, -191, 64, -190, 64, 14, 13, -193,
	68, 136, -402, 30, 68, -397, -396, -218, -392, -233,
	402, 403, 73, -384, -327, -230, 73, 303, -217, 67,
	-331, 282, 67, -329, 67, -329, 90, 307, -189, 271,
	272, 30, 146, -189, -233, -401, -400, -399, 68, 136,
	135, 79, -233, -317, -322, 283, 79, -254, 67, -254,
	67, -330, 280, 67, 84, 40, 273, 136, 104, -396,
	-233, 68, -335, 67, 20, 68, -317, 68, -317, 67,
	104, -254, -400, 40, -258, 135, -336, -334, 236, -321,
	68, 68, 68, -317, 79, 68, -233, 68, 136, -233,
	-332, 284, 68, -334, -337, 46, 79, -341, -338, 67,
	-198, 238, 114, -341, -198, -340, -339, 283, 239, 67,
	68, 136, -233, 235, 67, -264, -339, -338, -264, 68,
	68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 700, 701, 702, 703, 704, 0, 0,
	0, 474, 475, 0, 449, 0, 0, 0, 0, 0,
	0, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 296, 297, 298, 299,
	300, 301, 0, 231, 227, 206, 207, 208, 167, 168,
	169, 170, 238, 239, 324, 0, 0, 0, 0, 0,
	557, -2, 35, 705, 706, 707, 708, 709, 710, 711,
	-2, 487, 0, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 285, 286, 287, 281, 282, 284,
	283, -2, 0, 487, 220, 0, 211, 211, 0, 0,
	0, 577, 0, 0, 592, 614, 33, 0, 535, 0,
	540, 946, 982, 983, 984, 985, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 535, 232,
	476, 477, 577, 577, 447, 0, 267, 0, 1439, 271,
	0, 0, 0, 444, 262, 263, 264, 265, 266, 0,
	699, 0, 0, 258, 0, 226, 1498, 0, 0, 0,
	0, 0, 0, 111, 774, 113, 776, 117, 124, 0,
	0, 129, 130, 133, 134, 135, 136, 137, 0, 141,
	0, 143, 146, 0, 148, 149, 0, 152, 153, 154,
	0, 164, 165, 166, 777, 778, 779, -2, 42, 714,
	1364, 1259, 0, 1266, 1267, 1278, 1289, 1055, 1056, 1057,
	1058, 0, 0, 0, 0, 0, 1065, 1066, 0, 1080,
	1598, 0, 1072, 1073, 1074, 1075, 1076, 51, 63, 64,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	0, 1232, 1042, 982, 0, 1606, 0, 1626, 1631, 1632,
	1633, 1634, 1625, 0, 0, 1217, 0, 1207, 0, 0,
	-2, -2, 0, 0, 1566, -2, 1603, 1622, 1630, 1607,
	1629, 1600, 1601, 1595, 1596, 1597, 1599, 1608, 1610, 1621,
	0, 1617, 1627, 1628, 0, 0, 65, 66, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1223, -2, 1225, 1226, 1228, 1229, 1230, 1231, -2,
	1234, 1235, 1236, -2, -2, 1239, 1240, 1241, 1242, 1243,
	1244, 1247, -2, 1249, -2, -2, 1219, 1220, 1221, 1222,
	1211, 1212, 1213, 1214, 1215, 1216, -2, -2, -2, 0,
	204, 202, 577, 650, 0, -2, 0, 0, 0, 597,
	600, 603, 606, 0, 36, 37, 0, 0, 806, 806,
	806, 806, 806, 0, 806, 0, 0, 0, 806, 781,
	782, 783, 804, 805, 852, 492, 488, 489, 490, 491,
	565, 0, 567, 570, 425, 373, 0, 0, 0, 385,
	379, 0, 0, 0, 425, 0, 0, 572, 572, 0,
	428, 435, 425, 425, -2, 425, 425, 425, 0, 391,
	392, 393, 379, 0, 379, 397, 398, 399, 410, 411,
	436, 1388, 0, 0, 324, 0, 324, 0, 324, 324,
	494, 221, 222, 210, 212, 0, 216, 0, 209, 1498,
	0, 0, 178, 1566, 183, 0, 1446, 1512, 1461, 0,
	0, 1479, 0, -2, 0, 248, 572, 0, 578, 0,
	577, 0, 0, 324, 324, 324, 324, 324, 324, 324,
	324, 0, 0, 324, 0, 0, 615, 616, 611, 612,
	613, 617, 618, 3, 0, 0, 0, 539, 0, 0,
	572, -2, 0, 448, 268, 986, 0, 0, 272, 273,
	0, 0, 288, 0, 291, 276, 277, 278, 0, 0,
	260, 261, 0, 0, 228, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 121, 118, 125, 128, 138,
	145, 0, 157, 159, 162, 119, 126, 131, 132, 139,
	160, 120, 122, 123, 127, 161, 163, 140, 144, 158,
	142, 147, 150, 151, 156, 0, 92, 0, 0, 0,
	0, 0, 1265, 0, 0, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1259, 0, 0, 1061, 1062, 1063, 1064, 1067, 0,
	1081, 0, 0, 0, 1318, 0, 1257, 1257, 0, 1257,
	1253, 0, 0, 0, 0, 0, 0, 1257, 1195, 0,
	0, 1197, 1208, 0, 0, 0, 1201, 1202, 1257, 0,
	1257, 1206, 1191, 1192, 0, 1253, 1253, 0, 0, 1253,
	1253, 1253, 1253, 1253, 1253, 1253, 1253, 1253, 1253, 1253,
	1253, 0, 0, 1365, 1383, 1320, 1321, 1322, 1370, 1324,
	1374, 1374, 1374, 1374, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 0, 0, 1363, 1343, 1372, 1372, 1372,
	1370, 1367, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1377, 1377, 1380, 1377,
	0, 572, 0, 0, 560, 0, 541, 0, 594, 596,
	0, 598, 599, 601, 602, 604, 605, 607, 608, 38,
	0, 713, 0, 716, 0, 0, 0, 0, 0, 0,
	0, 0, 806, 806, 806, 0, 494, 493, 0, 566,
	0, 0, 623, 0, 0, 0, 379, 425, 384, 381,
	380, 431, 432, 428, 0, 428, 428, 623, 0, 404,
	405, 406, 425, 425, 412, 573, 413, 414, 428, 0,
	433, 434, 623, 0, 0, 623, 623, 0, 422, 423,
	424, 0, 0, 806, 0, 381, 395, 381, 1389, 1390,
	0, 815, 0, 0, 0, 443, 0, 0, 0, 495,
	0, 0, 214, 0, 219, 171, 0, 0, 0, 0,
	0, 0, 200, 201, 0, 0, 0, 0, 0, 191,
	194, 940, 941, 771, 772, 195, 196, 240, 241, 0,
	541, 593, 595, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 0, 0, 631, 625, 627,
	694, 51, 631, 0, 514, 527, 509, 0, 516, 0,
	947, 496, 527, 498, 0, 516, 541, 563, 541, 0,
	269, 0, 274, 0, 0, 290, 292, 293, 294, 279,
	280, 445, 256, 257, 249, 250, 251, 252, 253, 254,
	255, 259, 61, 0, 229, 230, 0, 0, 0, 105,
	106, 107, 108, 109, 110, 112, 96, 464, 466, 763,
	775, 0, 766, 0, 115, 155, 88, 0, 0, 1260,
	1261, 1262, 1263, 1264, 1268, 0, 1270, 1272, 1274, 1276,
	0, 1294, -2, -2, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1279, 1292, 1293, 0,
	0, 0, 0, 0, 0, 1290, 1290, 1285, 0, 1059,
	0, 1078, 1082, 0, 0, 0, 52, 1252, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 0, 1258, 0,
	1259, 0, 0, 0, 1254, 1255, 0, 0, 0, 1150,
	0, 0, 1156, 1157, 1158, 0, 522, 0, 1218, 1196,
	1209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 1386, 1384,
	1385, 1323, 1371, 0, 1348, 0, 1349, 1350, 1351, 0,
	0, 1344, 0, 1345, 1346, 1347, 1339, 0, 1340, 1341,
	0, 1342, 203, 649, 651, 0, 531, 533, 534, 0,
	561, 574, 579, 580, 583, 34, 39, 0, 718, 0,
	570, 0, 0, 730, 322, 757, 0, 0, 773, 796,
	802, 0, 0, 0, 830, 0, 568, 0, 0, 663,
	372, 0, 426, 427, 376, 1498, 381, 623, 386, 382,
	387, 430, 388, 389, 390, 0, 623, 623, 425, 428,
	415, 429, 428, 418, 419, 0, 437, 441, 438, 0,
	440, 394, 396, 570, 303, 0, 0, 0, -2, 896,
	1391, 1391, 0, 1391, 1391, 1391, 1391, 0, 0, 1391,
	1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391,
	1391, 1391, 1391, 0, 816, 319, 0, 0, 322, 747,
	636, 0, 637, 638, 634, 665, 689, 689, 0, 689,
	669, 946, 223, 224, 0, 0, 218, 172, 173, 0,
	175, 176, 177, 184, 179, 181, 0, 0, 185, 197,
	198, 199, 0, 0, 0, 189, 190, 0, 0, 243,
	244, 246, 0, 559, 461, 944, 462, 463, 467, 0,
	469, 470, 471, 718, 752, 623, 0, 632, 0, 628,
	695, 0, 697, 0, 623, 543, 503, 0, 508, 524,
	0, 528, 0, 0, 520, 513, 517, 0, 0, 537,
	497, 0, 0, 502, 562, 564, 987, 0, 275, 289,
	0, 0, 0, 0, 99, 760, 0, 100, 104, 94,
	0, 0, 0, 765, 0, 762, 767, 0, 114, 0,
	0, 89, 90, 821, 826, 0, 1269, 1271, 1273, 1275,
	1277, 0, 1280, 1290, 1290, 1286, 0, 1281, 0, 1283,
	0, 1260, 0, 1083, 0, 0, 0, 0, 0, 0,
	1140, 1141, 0, 0, 1145, 0, 1147, 1148, 1149, 1151,
	0, 0, 0, 1155, 0, 1194, 1210, 1198, 1199, 0,
	1203, 0, 1205, 0, 577, 0, 1117, 1117, 0, 0,
	0, 0, 1117, 0, 0, 0, 0, 0, 0, 0,
	0, 1077, 0, 1366, 1319, 1387, 0, 0, 0, 1368,
	0, 0, 0, 0, 0, 652, 543, 0, 0, 0,
	586, 584, 585, 0, 0, 719, 720, 722, 723, 0,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1431, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 717, 0, 807, 737, 1391, 326, 0, 0, 759,
	0, 0, 0, -2, 0, 0, 0, 0, 832, 0,
	0, 0, 481, 485, 33, 571, 0, 624, 374, 0,
	375, 425, 383, 623, 946, 407, 408, 623, 425, 425,
	428, 0, 439, 0, 304, 952, 953, 0, 0, 955,
	1012, 0, 964, 806, 964, 0, 0, 966, 967, 305,
	0, 0, 0, 0, 0, 306, 0, 815, 898, 0,
	1392, 0, 1391, 1391, 0, 0, 0, 0, 1391, 1391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 1391, 0, 0, 326,
	744, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	655, 0, 0, 0, 0, 0, 570, 690, 0, 692,
	693, 667, -2, 0, 636, 672, 1257, 225, 213, 215,
	0, 0, 0, 0, 186, 187, 188, 192, 193, 242,
	245, 247, 0, 0, 0, 621, 626, 633, 696, 698,
	52, 629, 621, 547, 0, 0, 527, 529, 0, 0,
	527, 0, 0, 536, 0, 0, 527, 0, 0, 446,
	62, 295, 0, 0, 0, 0, 0, 465, 0, 764,
	96, 0, 0, 116, 0, 0, 824, 0, 826, 1256,
	1282, 1284, 0, 1291, 1287, 1060, 1068, 1079, 0, 0,
	1085, 1097, 1097, 0, 1088, 1374, 1374, 1091, 1370, 1372,
	1370, 1097, 1097, 0, 53, 0, 0, 1146, 0, 0,
	0, 523, 0, 0, 0, 1115, 1117, 1122, 1118, 1123,
	1117, 1117, 1117, 1117, 1128, 1117, 1117, 1117, 1117, 1117,
	1117, 1117, 1117, 1113, 1376, 1375, 1361, 0, 1362, 1373,
	1378, 0, 1381, 0, 532, 547, 575, 576, 581, 582,
	0, 0, 0, 0, 724, 0, 740, 738, 739, 0,
	754, 327, 328, 329, 330, 0, 0, 0, 758, 0,
	504, 0, 797, 798, 799, 800, 801, -2, 810, 0,
	0, 948, 948, 948, 840, 0, 831, 535, 0, -2,
	0, 0, 483, 0, 0, 664, 377, 623, 400, 0,
	416, 623, 623, 425, 442, 0, -2, 954, 1013, 976,
	976, 965, 976, 976, 806, 0, 308, 309, 310, 0,
	312, 0, 897, 899, 900, 0, 0, 903, 904, 905,
	906, 0, 0, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 934, 935, 936, 937, 938, 939, 919,
	920, 921, 922, 923, 924, 931, 0, 0, 928, 0,
	740, 0, 0, 0, 754, 746, 0, 748, 749, 0,
	0, 506, 623, 235, 0, 659, 653, 0, 642, 657,
	658, 645, 0, 647, 0, 643, 644, 623, 635, 666,
	691, 668, 671, 673, 674, 680, 0, 0, 0, 0,
	217, 174, 0, 346, 180, 945, 468, 473, 619, 0,
	0, 619, 549, 76, 0, 0, 0, 525, 0, 530,
	527, 512, 521, 511, 518, 519, 538, 527, 501, 500,
	988, 270, 0, 761, 96, 101, 102, 103, 97, 95,
	768, 0, 770, 0, 822, 826, 0, 0, 1288, 1084,
	1069, 1086, 1098, 1099, 1087, 1070, 1089, 1090, 1092, 1093,
	1094, 1095, 1096, 1071, 1142, 0, 1144, 1152, 1153, 0,
	1200, 1204, 0, 0, 0, 1121, 1124, 1125, 1126, 1127,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 577, 1114,
	0, 1369, 0, 0, 549, 587, 588, 712, 0, 721,
	0, 728, 729, 0, 0, 732, 733, 742, 0, 0,
	0, 332, 333, 0, 0, 0, 345, 341, 342, 343,
	323, 753, 744, 0, 0, 811, 1391, 1391, 1391, 0,
	0, 949, 950, 0, 0, 843, 0, 0, 834, 0,
	689, 0, 0, 623, 482, 485, 486, 569, 378, 623,
	420, 417, 623, 302, 978, -2, 991, 993, 0, 0,
	996, 997, 0, 0, 0, 0, 1034, 1003, 0, 0,
	1007, 0, 1306, 1307, 0, 1011, 0, 968, 977, 0,
	977, 0, 0, 976, 0, 311, 313, 314, 315, 901,
	902, 907, 908, 925, 0, 0, 927, 0, 0, 316,
	0, 0, 317, 321, 745, 0, 750, 751, 577, 0,
	0, 639, 660, 0, 0, 640, 0, 641, 646, 648,
	234, 675, 0, 0, 677, 678, 679, 670, 182, 609,
	0, 0, 630, 610, 551, 0, 548, 77, 0, 0,
	0, 0, 526, 510, 499, 98, 93, 769, 79, 825,
	827, 823, 0, 1154, 0, 1117, 1116, 1110, 0, 1379,
	1382, 551, 0, 727, 725, 741, 731, 0, 755, 756,
	0, 334, 335, 0, 338, 344, 743, 505, 0, 0,
	0, 0, 803, -2, 0, 0, -2, 846, 0, 841,
	0, 833, 0, 836, 623, 623, -2, 479, 484, 0,
	401, 421, 992, 994, 995, 998, 999, 942, 943, 1000,
	1039, 1040, 1041, 1001, 1036, 1037, 1038, 1002, 0, 0,
	0, 1304, 1305, 1032, 0, 0, 0, 0, 0, 0,
	0, 962, 932, 933, 926, 929, 930, 320, 318, 507,
	572, 236, 237, 661, 0, 654, 684, 681, 0, 0,
	620, 622, 553, 0, 550, 0, 544, 546, 87, 515,
	49, 70, 0, 1143, 1193, 1120, 0, 1111, 0, 1105,
	1106, 1107, 1112, 553, 0, 0, 0, 331, 336, 0,
	339, 340, 0, 792, 1370, 0, 812, 813, 814, 853,
	-2, 951, 818, 79, 853, 837, 0, 844, 0, 842,
	835, 577, 480, 0, 0, 1207, 1027, 0, 0, 969,
	971, 972, 973, 974, 975, 970, 0, 0, 0, 0,
	961, 963, 1008, 0, 233, 0, 0, 685, 687, 682,
	683, 40, 0, 552, 78, 0, 41, 0, 67, 0,
	80, 81, 0, 0, 0, 0, 1119, 1108, 0, 0,
	0, 0, 542, 0, 726, 734, 0, 736, 337, 785,
	0, 583, 0, 855, 0, 820, 855, 829, 0, 839,
	0, 848, 0, 845, 572, 1035, 0, 1006, 1015, 1028,
	0, 0, 785, 785, 785, 785, 0, 1009, 662, 676,
	0, 0, 0, 50, 54, 0, 76, 73, 0, 82,
	0, 0, 0, 0, 0, 1100, 1101, 1103, 1102, 1104,
	0, 735, 784, 793, 794, 583, 817, 0, 892, 819,
	838, 847, 0, 850, 478, 1004, 1014, 1016, 1017, 0,
	1029, 1030, 1031, 1033, 956, 957, 958, 959, 0, 686,
	688, 0, 555, 545, 43, 0, 0, 71, 72, 74,
	0, 83, 0, 85, 86, 0, 715, 786, 1391, 0,
	0, 790, 791, 795, 0, 880, 0, 0, 886, 0,
	893, 849, 1005, 1018, 0, 1019, 0, 0, 0, 960,
	554, 0, 828, 0, 55, 0, 57, 59, 60, 979,
	68, 69, 75, 84, 1109, 0, 788, 0, 856, 0,
	858, 0, 0, 0, 0, 0, 890, 0, 1020, 1022,
	1023, 0, 0, 1021, 556, 44, 45, 0, 56, 0,
	0, 787, 789, 0, 860, 0, 881, 0, 0, 0,
	0, 0, 0, 0, 1024, 1026, 1025, 0, 0, 58,
	980, 857, 854, 0, 892, 882, 0, 884, 0, 0,
	0, 0, 46, 47, 48, 0, 0, 862, 0, 878,
	883, 885, 887, 0, 891, 889, 981, 861, 0, 874,
	859, 0, 888, 863, -2, 0, 879, 864, -2, 0,
	872, 0, 0, 865, 873, 0, 868, 0, 0, 0,
	867, 0, -2, 875, 0, 0, 869, -2, 0, 877,
	876,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 543,
	105, 104, 106, 3, 544, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 545, 117, 546, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:662
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:668
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:703
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:708
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:714
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:734
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:740
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:747
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:755
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:761
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:770
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:791
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:811
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:815
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:821
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:825
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:831
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:838
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:846
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:850
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:864
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:868
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:872
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:885
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:891
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:900
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:911
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:915
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:921
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:925
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:931
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:935
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:941
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:965
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:984
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:988
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:992
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1001
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1008
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1016
		{
			yyVAL.str = ""
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1023
		{
			yyVAL.str = yyDollar[3].str
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1028
		{
			yyVAL.str = "\n"
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1035
		{
			yyVAL.str = yyDollar[3].str
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1044
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1068
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1072
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1078
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1084
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1102
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1119
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1142
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1146
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1150
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1155
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1159
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1165
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1178
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1189
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1202
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1206
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1216
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1229
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1242
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1248
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1254
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1261
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1269
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1305
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1309
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1315
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1322
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1331
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1335
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1389
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1393
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1397
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1401
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1405
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1409
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1417
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1421
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1425
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1429
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1453
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1457
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1461
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1465
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1469
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1473
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1477
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1481
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1485
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1489
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1493
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1497
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1501
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1505
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1509
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1513
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1517
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1521
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1525
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1529
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1533
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1537
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1549
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1556
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1572
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1602
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1606
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1616
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1622
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1626
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1633
		{
			yyVAL.str = yyDollar[3].str
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1639
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1643
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1649
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1657
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1666
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1674
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1682
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1705
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1728
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1735
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1742
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1750
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1757
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1764
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1781
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1787
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1791
		{
			yyVAL.str = yyDollar[1].str
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1797
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1801
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1807
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1811
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1822
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1865
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1871
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1883
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1893
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1899
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1906
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1912
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1919
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1926
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1936
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1943
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1965
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1969
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1975
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1985
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1991
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1995
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2001
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2007
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2011
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2015
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2019
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2037
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2043
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2047
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2053
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2057
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2063
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2069
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2079
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2085
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2093
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2097
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2101
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2105
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2113
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2121
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2131
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2172
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2176
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2182
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2188
		{
			yyVAL.str = yyDollar[1].str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2193
		{
			yyVAL.str = "true"
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2194
		{
			yyVAL.str = "false"
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2195
		{
			yyVAL.str = yyDollar[1].str
		}
	case 295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2200
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2215
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2226
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2235
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2242
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2246
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2250
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2267
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2288
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2296
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2305
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2309
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2328
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2345
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2351
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2362
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2377
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2382
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2386
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2391
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2395
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2411
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2415
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2419
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2423
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2431
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2435
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2439
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2447
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2451
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2455
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2459
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2463
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2467
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2471
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2477
		{
			yyVAL.item = nil
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2482
		{
			yyVAL.item = nil
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2518
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2523
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2527
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2544
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2550
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2555
		{
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2559
		{
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2564
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2573
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2579
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2585
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2591
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2597
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2603
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2609
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2618
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2622
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2626
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2630
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2634
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2638
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2642
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2646
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2650
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2656
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2663
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2673
		{
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2675
		{
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2684
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2694
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2703
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2707
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2717
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2723
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2729
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2735
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2744
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2754
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2766
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2770
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2776
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2788
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2802
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2808
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2815
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2824
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2828
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2833
		{
			yyVAL.str = ""
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2837
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2843
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2856
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2860
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2866
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2885
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2889
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2895
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2901
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2905
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2909
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2915
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2919
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2941
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2950
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2959
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2968
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2972
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2978
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2987
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3006
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3012
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3018
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3024
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3030
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3041
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3046
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3053
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3069
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3082
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3093
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3097
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3103
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3108
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3115
		{
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3117
		{
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3120
		{
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3129
		{
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3133
		{
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3138
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3147
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3154
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3160
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3168
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3175
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3182
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3202
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3215
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3221
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3225
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3231
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3244
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3252
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3259
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3266
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3285
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3289
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3298
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3302
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3308
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3317
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3321
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3327
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3331
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3337
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3341
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3347
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3352
		{
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3363
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3367
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3379
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3383
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3389
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3393
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3399
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3403
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3412
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3425
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3432
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3439
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3457
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3476
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3482
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3489
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3493
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3506
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3510
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3515
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3519
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3526
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3531
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3538
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3544
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3548
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3552
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3556
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3560
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3564
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3570
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3586
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3590
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3596
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3604
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3608
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3617
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3623
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3627
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3631
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3640
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3646
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3652
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3656
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3662
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3667
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3671
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3675
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3680
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3684
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3688
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3694
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3698
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3702
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3716
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3730
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3740
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3750
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3762
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3770
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3778
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3787
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3795
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3803
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3811
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3819
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3827
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3835
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3843
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3851
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3861
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3872
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3886
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3890
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3894
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3899
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3903
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3907
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3920
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3929
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3938
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3944
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3948
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3954
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3958
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3963
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3967
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3972
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3980
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3986
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3994
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4002
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4012
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4018
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4027
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4036
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4045
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4055
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4059
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4069
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4073
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4077
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4081
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4087
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4097
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4101
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4107
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4117
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4123
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4129
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4133
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4137
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4147
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4153
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4157
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4163
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4167
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4173
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4177
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4187
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4200
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4206
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4212
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4225
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4243
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4247
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4253
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4263
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4267
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4271
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4276
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4280
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4284
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4288
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4297
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4301
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4305
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4309
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4314
		{
			yyVAL.str = ""
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4318
		{
			yyVAL.str = yyDollar[1].str
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4322
		{
			yyVAL.str = yyDollar[2].str
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4328
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4334
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4338
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4342
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4346
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4350
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4356
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4388
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4398
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4404
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 715:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4423
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4428
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4434
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4441
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4445
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4451
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4457
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4461
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4465
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4471
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4477
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4483
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4494
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4506
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4512
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4522
		{
			yyVAL.str = yyDollar[1].str
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4526
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4532
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4539
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4545
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4553
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4559
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4566
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4574
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4580
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4589
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4612
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4616
		{
			yyVAL.str = yyDollar[2].str
		}
	case 746:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4622
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4636
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4642
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4648
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4654
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4663
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4672
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4677
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4683
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4691
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4797
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4801
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4807
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4817
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4821
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4827
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4837
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4841
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4845
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4854
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4860
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4867
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4873
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4882
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4889
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4898
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4902
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4908
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4922
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4926
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4930
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4935
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4939
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4943
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4947
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4953
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4976
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4998
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5002
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5006
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5010
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5014
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5020
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5024
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5030
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5035
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5040
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5044
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5048
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5052
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5056
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5062
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5073
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5077
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5087
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5091
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5100
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5106
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5110
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5116
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5120
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5124
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5129
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5133
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5139
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5151
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5160
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5173
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5180
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5190
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5198
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5209
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5213
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5218
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5222
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5229
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5240
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5253
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5267
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5275
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5282
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5289
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5296
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5303
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5307
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5311
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5319
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5326
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5337
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5344
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5351
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5355
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5362
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5369
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5376
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5383
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5387
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5396
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5406
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5410
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5417
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5428
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5437
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5441
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5447
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5451
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5457
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5466
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5476
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5480
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5486
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5490
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5496
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5503
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5512
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5516
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5521
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5525
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5530
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5534
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5539
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5543
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5553
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5557
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5568
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5576
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5592
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5603
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5612
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5622
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5632
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5636
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5641
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5645
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5650
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5654
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5660
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5664
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5668
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5678
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5682
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5686
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5690
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5694
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5699
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5703
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5707
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5711
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5715
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5719
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5723
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5727
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5731
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5735
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5739
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5743
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5747
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5751
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5755
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5759
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5763
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5767
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5771
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5775
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5779
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5783
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5787
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5794
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5798
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5804
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5809
		{
			yyVAL.str = ""
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5813
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5817
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5823
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5827
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5831
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5835
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5839
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5843
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5857
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5861
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5870
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5875
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5881
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5888
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5892
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5898
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5902
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5908
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5920
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5926
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5935
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5944
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5967
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5976
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5986
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6000
		{
			yyVAL.str = ""
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6004
		{
			yyVAL.str = yyDollar[1].str
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6014
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6020
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6026
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6040
		{
			yyVAL.str = ""
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6044
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6050
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6056
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6060
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6064
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6070
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6074
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6078
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6082
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6088
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6092
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6096
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6105
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6111
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6115
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6121
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6125
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6129
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6133
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6137
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6141
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6146
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6150
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6154
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6158
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6162
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6166
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6170
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6174
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6187
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6193
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6197
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6202
		{
			yyVAL.str = ""
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6206
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6212
		{
			yyVAL.str = ""
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6216
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6222
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6234
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6241
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6248
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6255
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6262
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6271
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6277
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6283
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6287
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6291
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6295
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6299
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6304
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6311
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6315
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6319
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6328
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6333
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6337
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6353
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6359
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6363
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6367
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6371
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6375
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6379
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6383
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6387
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6391
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6395
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6399
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6403
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6407
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6413
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6417
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6421
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6425
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6429
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6433
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6437
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6441
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6445
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6449
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6453
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6457
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6462
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6470
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6475
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6479
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6488
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6492
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6496
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6500
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6504
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6510
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6523
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6528
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6532
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6538
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6542
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6548
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6558
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6575
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6592
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6605
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6618
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6630
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6644
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6659
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6674
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6691
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6706
		{
		}
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6712
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6716
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6720
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6726
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6730
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6738
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6742
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6746
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6752
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6759
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6768
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6772
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6779
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6784
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6788
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6793
		{
			yyVAL.str = ","
		}
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6797
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6809
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6819
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6830
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6840
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6849
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6858
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6868
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6878
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6888
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6898
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6908
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6918
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6928
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6938
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6948
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6958
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6968
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6978
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6995
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7003
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7011
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7019
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7027
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7037
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7045
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7054
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7062
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7070
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7078
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7086
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7097
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7107
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7119
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7130
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7152
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7188
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7200
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7212
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7223
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7231
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7238
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7245
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7257
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7265
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7273
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7284
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7293
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7302
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7310
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7320
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7328
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7338
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7342
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7348
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7352
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7371
		{
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7373
		{
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7414
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7425
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7429
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7433
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7439
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7444
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7448
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7454
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7458
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7465
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7469
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7473
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7481
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7485
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7489
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7493
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7499
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7503
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7507
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7511
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7515
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7519
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7523
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7527
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7531
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7535
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7543
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7547
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7551
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7555
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7559
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7563
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7567
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7571
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7575
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7579
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7589
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7595
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7599
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7606
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7610
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7614
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7620
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7624
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7628
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7632
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7636
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7640
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7644
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7650
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7654
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7658
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7662
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7668
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7672
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7685
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7690
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7694
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7698
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7702
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7706
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7710
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7724
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7728
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7735
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7746
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7751
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7757
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7769
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7781
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7793
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7806
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7819
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7832
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7845
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7858
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7871
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7884
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7897
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7910
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7923
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7938
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7965
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8007
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8055
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8072
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8084
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8104
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8124
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8144
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8160
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8173
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8186
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8199
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8212
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8224
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8236
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8248
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8260
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8272
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8284
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8296
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8308
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8320
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8333
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8346
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8361
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8369
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8378
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8388
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8411
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8416
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8422
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8429
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8433
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8438
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8442
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8448
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8454
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8461
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8468
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8477
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8484
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8491
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8500
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8504
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8508
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8514
		{
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8526
		{
			yyVAL.str = ""
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8530
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const SQL_SMALL_RESULT = 57521
const SQL_BIG_RESULT = 57522
const SQL_BUFFER_RESULT = 57523
const LOW_PRIORITY = 57524
const HIGH_PRIORITY = 57525
const DELAYED = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const SCHEMA = 57533
const TABLE = 57534
const INDEX = 57535
const VIEW = 57536
const TO = 57537
const IGNORE = 57538
const IF = 57539
const PRIMARY = 57540
const COLUMN = 57541
const CONSTRAINT = 57542
const SPATIAL = 57543
const FULLTEXT = 57544
const FOREIGN = 57545
const KEY_BLOCK_SIZE = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const MAXVALUE = 57555
const PARTITION = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const STATUS = 57562
const VARIABLES = 57563
const ROLE = 57564
const PROXY = 57565
const AVG_ROW_LENGTH = 57566
const STORAGE = 57567
const DISK = 57568
const MEMORY = 57569
const CHECKSUM = 57570
const COMPRESSION = 57571
const DATA = 57572
const DIRECTORY = 57573
const DELAY_KEY_WRITE = 57574
const ENCRYPTION = 57575
const ENGINE = 57576
const MAX_ROWS = 57577
const MIN_ROWS = 57578
const PACK_KEYS = 57579
const ROW_FORMAT = 57580
const STATS_AUTO_RECALC = 57581
const STATS_PERSISTENT = 57582
const STATS_SAMPLE_PAGES = 57583
const DYNAMIC = 57584
const COMPRESSED = 57585
const REDUNDANT = 57586
const COMPACT = 57587
const FIXED = 57588
const COLUMN_FORMAT = 57589
const AUTO_RANDOM = 57590
const RESTRICT = 57591
const CASCADE = 57592
const ACTION = 57593
const PARTIAL = 57594
const SIMPLE = 57595
const CHECK = 57596
const ENFORCED = 57597
const RANGE = 57598
const LIST = 57599
const ALGORITHM = 57600
const LINEAR = 57601
const PARTITIONS = 57602
const SUBPARTITION = 57603
const SUBPARTITIONS = 57604
const TYPE = 57605
const ANY = 57606
const SOME = 57607
const EXTERNAL = 57608
const LOCALFILE = 57609
const URL = 57610
const PREPARE = 57611
const DEALLOCATE = 57612
const PROPERTIES = 57613
const PARSER = 57614
const VISIBLE = 57615
const INVISIBLE = 57616
const BTREE = 57617
const HASH = 57618
const RTREE = 57619
const BSI = 57620
const ZONEMAP = 57621
const LEADING = 57622
const BOTH = 57623
const TRAILING = 57624
const UNKNOWN = 57625
const EXPIRE = 57626
const ACCOUNT = 57627
const UNLOCK = 57628
const DAY = 57629
const NEVER = 57630
const PUMP = 57631
const SECOND = 57632
const ASCII = 57633
const COALESCE = 57634
const COLLATION = 57635
const HOUR = 57636
const MICROSECOND = 57637
const MINUTE = 57638
const MONTH = 57639
const QUARTER = 57640
const REPEAT = 57641
const REVERSE = 57642
const ROW_COUNT = 57643
const WEEK = 57644
const REVOKE = 57645
const FUNCTION = 57646
const PRIVILEGES = 57647
const TABLESPACE = 57648
const EXECUTE = 57649
const SUPER = 57650
const GRANT = 57651
const OPTION = 57652
const REFERENCES = 57653
const REPLICATION = 57654
const SLAVE = 57655
const CLIENT = 57656
const USAGE = 57657
const RELOAD = 57658
const FILE = 57659
const TEMPORARY = 57660
const ROUTINE = 57661
const EVENT = 57662
const SHUTDOWN = 57663
const NULLX = 57664
const AUTO_INCREMENT = 57665
const APPROXNUM = 57666
const SIGNED = 57667
const UNSIGNED = 57668
const ZEROFILL = 57669
const ENGINES = 57670
const LOW_CARDINALITY = 57671
const ADMIN_NAME = 57672
const RANDOM = 57673
const SUSPEND = 57674
const ATTRIBUTE = 57675
const HISTORY = 57676
const REUSE = 57677
const CURRENT = 57678
const OPTIONAL = 57679
const FAILED_LOGIN_ATTEMPTS = 57680
const PASSWORD_LOCK_TIME = 57681
const UNBOUNDED = 57682
const SECONDARY = 57683
const USER = 57684
const IDENTIFIED = 57685
const CIPHER = 57686
const ISSUER = 57687
const X509 = 57688
const SUBJECT = 57689
const SAN = 57690
const REQUIRE = 57691
const SSL = 57692
const NONE = 57693
const PASSWORD = 57694
const MAX_QUERIES_PER_HOUR = 57695
const MAX_UPDATES_PER_HOUR = 57696
const MAX_CONNECTIONS_PER_HOUR = 57697
const MAX_USER_CONNECTIONS = 57698
const FORMAT = 57699
const VERBOSE = 57700
const CONNECTION = 57701
const TRIGGERS = 57702
const PROFILES = 57703
const LOAD = 57704
const INFILE = 57705
const TERMINATED = 57706
const OPTIONALLY = 57707
const ENCLOSED = 57708
const ESCAPED = 57709
const STARTING = 57710
const LINES = 57711
const ROWS = 57712
const IMPORT = 57713
const FROM_JSONLINE = 57714
const DATABASES = 57715
const TABLES = 57716
const EXTENDED = 57717
const FULL = 57718
const PROCESSLIST = 57719
const FIELDS = 57720
const COLUMNS = 57721
const OPEN = 57722
const ERRORS = 57723
const WARNINGS = 57724
const INDEXES = 57725
const SCHEMAS = 57726
const NAMES = 57727
const GLOBAL = 57728
const SESSION = 57729
const ISOLATION = 57730
const LEVEL = 57731
const READ = 57732
const WRITE = 57733
const ONLY = 57734
const REPEATABLE = 57735
const COMMITTED = 57736
const UNCOMMITTED = 57737
const SERIALIZABLE = 57738
const LOCAL = 57739
const EVENTS = 57740
const PLUGINS = 57741
const CURRENT_TIMESTAMP = 57742
const DATABASE = 57743
const CURRENT_TIME = 57744
const LOCALTIME = 57745
const LOCALTIMESTAMP = 57746
const UTC_DATE = 57747
const UTC_TIME = 57748
const UTC_TIMESTAMP = 57749
const REPLACE = 57750
const CONVERT = 57751
const SEPARATOR = 57752
const TIMESTAMPDIFF = 57753
const CURRENT_DATE = 57754
const CURRENT_USER = 57755
const CURRENT_ROLE = 57756
const SECOND_MICROSECOND = 57757
const MINUTE_MICROSECOND = 57758
const MINUTE_SECOND = 57759
const HOUR_MICROSECOND = 57760
const HOUR_SECOND = 57761
const HOUR_MINUTE = 57762
const DAY_MICROSECOND = 57763
const DAY_SECOND = 57764
const DAY_MINUTE = 57765
const DAY_HOUR = 57766
const YEAR_MONTH = 57767
const SQL_TSI_HOUR = 57768
const SQL_TSI_DAY = 57769
const SQL_TSI_WEEK = 57770
const SQL_TSI_MONTH = 57771
const SQL_TSI_QUARTER = 57772
const SQL_TSI_YEAR = 57773
const SQL_TSI_SECOND = 57774
const SQL_TSI_MINUTE = 57775
const RECURSIVE = 57776
const CONFIG = 57777
const DRAINER = 57778
const MATCH = 57779
const AGAINST = 57780
const BOOLEAN = 57781
const LANGUAGE = 57782
const WITH = 57783
const QUERY = 57784
const EXPANSION = 57785
const ADDDATE = 57786
const BIT_AND = 57787
const BIT_OR = 57788
const BIT_XOR = 57789
const CAST = 57790
const COUNT = 57791
const APPROX_COUNT_DISTINCT = 57792
const APPROX_PERCENTILE = 57793
const CURDATE = 57794
const CURTIME = 57795
const DATE_ADD = 57796
const DATE_SUB = 57797
const EXTRACT = 57798
const GROUP_CONCAT = 57799
const MAX = 57800
const MID = 57801
const MIN = 57802
const NOW = 57803
const POSITION = 57804
const SESSION_USER = 57805
const STD = 57806
const STDDEV = 57807
const STDDEV_POP = 57808
const STDDEV_SAMP = 57809
const SUBDATE = 57810
const SUBSTR = 57811
const SUBSTRING = 57812
const SUM = 57813
const SYSDATE = 57814
const SYSTEM_USER = 57815
const TRANSLATE = 57816
const TRIM = 57817
const VARIANCE = 57818
const VAR_POP = 57819
const VAR_SAMP = 57820
const AVG = 57821
const JSON_EXTRACT = 57822
const UNNEST = 57823
const GENERATE_SERIES = 57824
const ROW = 57825
const OUTFILE = 57826
const HEADER = 57827
const MAX_FILE_SIZE = 57828
const FORCE_QUOTE = 57829
const UNUSED = 57830
const BINDINGS = 57831
const DO = 57832
const DECLARE = 57833

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"FROM_JSONLINE",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"GENERATE_SERIES",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7907

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 75,
	21, 480,
	-2, 461,
	-1, 80,
	210, 670,
	-2, 714,
	-1, 97,
	42, 327,
	210, 327,
	237, 334,
	238, 334,
	400, 327,
	-2, 355,
	-1, 452,
	67, 1059,
	-2, 1558,
	-1, 453,
	67, 1077,
	-2, 1529,
	-1, 458,
	67, 1078,
	-2, 1557,
	-1, 479,
	67, 992,
	-2, 1605,
	-1, 480,
	67, 993,
	-2, 1604,
	-1, 481,
	67, 1567,
	-2, 1589,
	-1, 482,
	67, 1568,
	-2, 1590,
	-1, 483,
	67, 1569,
	-2, 1596,
	-1, 484,
	67, 1570,
	-2, 1579,
	-1, 485,
	67, 1571,
	-2, 1587,
	-1, 486,
	67, 1572,
	-2, 1597,
	-1, 487,
	67, 1573,
	-2, 1598,
	-1, 488,
	67, 1574,
	-2, 1603,
	-1, 489,
	67, 1575,
	-2, 1608,
	-1, 490,
	67, 1576,
	-2, 1609,
	-1, 494,
	67, 1056,
	-2, 1410,
	-1, 501,
	67, 1065,
	-2, 1436,
	-1, 505,
	67, 1069,
	-2, 1475,
	-1, 506,
	67, 1070,
	-2, 1553,
	-1, 514,
	67, 1080,
	-2, 1538,
	-1, 516,
	67, 1082,
	-2, 1548,
	-1, 528,
	67, 972,
	-2, 1599,
	-1, 529,
	67, 973,
	-2, 1600,
	-1, 530,
	67, 974,
	-2, 1601,
	-1, 537,
	21, 481,
	-2, 444,
	-1, 578,
	395, 355,
	396, 355,
	-2, 328,
	-1, 620,
	103, 1410,
	114, 1410,
	133, 1410,
	-2, 1217,
	-1, 650,
	21, 481,
	-2, 444,
	-1, 748,
	21, 480,
	-2, 900,
	-1, 1042,
	67, 1125,
	-2, 1555,
	-1, 1043,
	67, 1126,
	-2, 1556,
	-1, 1200,
	1, 696,
	68, 696,
	509, 696,
	-2, 703,
	-1, 1311,
	133, 1227,
	-2, 1225,
	-1, 1313,
	133, 614,
	-2, 1222,
	-1, 1314,
	133, 615,
	-2, 1223,
	-1, 1600,
	1, 697,
	68, 697,
	509, 697,
	-2, 703,
	-1, 1809,
	65, 399,
	134, 399,
	-2, 805,
	-1, 2005,
	6, 492,
	7, 492,
	8, 492,
	9, 492,
	19, 492,
	21, 492,
	68, 492,
	-2, 571,
	-1, 2045,
	87, 703,
	129, 703,
	166, 703,
	169, 703,
	-2, 753,
	-1, 2047,
	271, 868,
	-2, 847,
	-1, 2077,
	65, 399,
	134, 399,
	-2, 806,
	-1, 2114,
	87, 703,
	129, 703,
	166, 703,
	169, 703,
	-2, 754,
	-1, 2142,
	271, 868,
	-2, 848,
	-1, 2544,
	68, 726,
	134, 726,
	-2, 703,
	-1, 2549,
	68, 726,
	134, 726,
	-2, 703,
	-1, 2565,
	68, 730,
	134, 730,
	-2, 703,
	-1, 2570,
	68, 731,
	134, 731,
	-2, 703,
}

const yyPrivate = 57344

const yyLast = 25596

var yyAct = [...]int{
	424, 2549, 1106, 2551, 2558, 2548, 2522, 2388, 1023, 2181,
	405, 2468, 2510, 426, 2425, 2154, 2452, 2357, 2453, 2361,
	1650, 2337, 2099, 2110, 1584, 2179, 774, 1276, 896, 2345,
	2039, 2180, 942, 114, 1646, 117, 450, 398, 114, 344,
	350, 2201, 350, 1153, 538, 2164, 2097, 2070, 1205, 619,
	1812, 1026, 1242, 1938, 2163, 1301, 348, 27, 1785, 1942,
	354, 2143, 1652, 1947, 1645, 884, 1827, 2051, 1943, 1264,
	1019, 1491, 360, 533, 397, 804, 1294, 2018, 873, 1850,
	1995, 888, 1957, 566, 1209, 113, 1607, 403, 1953, 1936,
	335, 1156, 645, 1902, 1164, 1487, 1308, 1311, 1302, 1177,
	438, 75, 1257, 1865, 1295, 533, 623, 402, 1303, 74,
	1486, 1826, 1237, 114, 1235, 1632, 1782, 1606, 1215, 3,
	1787, 626, 35, 2118, 1193, 347, 16, 1185, 810, 345,
	6, 346, 5, 1601, 404, 964, 334, 1488, 406, 75,
	1593, 1228, 1017, 1590, 1518, 1261, 1217, 581, 1279, 1216,
	621, 337, 1227, 1572, 1498, 1070, 1022, 414, 1008, 1056,
	35, 1502, 661, 855, 1648, 647, 1282, 27, 1189, 1016,
	611, 1655, 340, 1192, 565, 1223, 911, 921, 1076, 535,
	363, 1105, 537, 1075, 362, 1168, 563, 13, 105, 897,
	934, 7, 574, 4, 108, 2562, 963, 612, 2535, 2434,
	2101, 1505, 349, 1495, 110, 2208, 2106, 625, 2038, 1181,
	1297, 75, 536, 2172, 1096, 109, 624, 32, 99, 81,
	923, 2406, 109, 109, 333, 32, 99, 81, 109, 109,
	644, 109, 35, 32, 99, 81, 16, 2416, 775, 109,
	6, 714, 5, 1706, 352, 680, 1698, 1492, 973, 871,
	523, 1784, 522, 524, 525, 1503, 526, 527, 1773, 908,
	713, 909, 1245, 1246, 970, 1873, 893, 902, 903, 591,
	532, 924, 106, 2456, 2457, 2441, 1219, 1025, 993, 106,
	106, 1009, 2439, 1013, 712, 972, 106, 2199, 106, 1929,
	707, 109, 2290, 32, 99, 81, 106, 2293, 688, 1783,
	690, 1930, 695, 1931, 696, 2429, 2430, 1012, 2211, 357,
	2040, 104, 1027, 664, 1693, 631, 630, 632, 93, 900,
	655, 1258, 899, 902, 903, 555, 2360, 73, 691, 2028,
	1254, 2059, 698, 2202, 2203, 2204, 2205, 114, 654, 1499,
	2177, 595, 59, 1968, 2066, 629, 359, 653, 106, 1966,
	1958, 1250, 350, 1092, 114, 2270, 1089, 1004, 1893, 1591,
	1091, 1088, 1090, 1094, 1095, 1569, 1152, 1151, 1093, 393,
	1891, 539, 394, 700, 1014, 701, 710, 711, 649, 651,
	2161, 2415, 1790, 709, 1703, 683, 2273, 2174, 1962, 652,
	2443, 684, 634, 1011, 2466, 693, 351, 2455, 596, 1963,
	1964, 2264, 2540, 703, 2559, 2476, 671, 80, 627, 107,
	2438, 750, 686, 2390, 1965, 2483, 100, 101, 664, 102,
	103, 1034, 1037, 1038, 689, 692, 2413, 97, 2386, 2387,
	675, 2390, 1035, 2257, 891, 2532, 2226, 721, 2225, 396,
	2396, 650, 75, 75, 625, 557, 749, 2359, 685, 2513,
	2418, 2419, 694, 624, 757, 554, 553, 395, 1508, 1510,
	1511, 1796, 915, 35, 35, 628, 699, 1504, 910, 705,
	706, 1798, 1799, 1800, 1801, 761, 548, 622, 2445, 2446,
	1960, 666, 665, 80, 98, 107, 930, 57, 2248, 929,
	1010, 872, 1099, 1100, 1101, 1102, 1103, 1104, 1097, 1098,
	704, 592, 673, 97, 92, 91, 887, 687, 2560, 748,
	37, 697, 2252, 1519, 657, 658, 895, 894, 624, 2523,
	551, 2322, 2214, 702, 633, 2346, 2347, 2348, 2350, 2349,
	2567, 874, 358, 1111, 1948, 1951, 672, 646, 2288, 546,
	922, 1699, 2553, 1804, 751, 752, 753, 754, 1852, 1854,
	680, 1664, 1496, 1187, 669, 877, 1898, 881, 1896, 879,
	353, 1904, 1903, 2514, 592, 566, 1858, 94, 95, 1493,
	1493, 1493, 552, 755, 1951, 1661, 2534, 2433, 2100, 852,
	594, 1663, 1662, 593, 927, 1248, 666, 665, 659, 560,
	561, 562, 783, 1249, 2444, 1660, 547, 901, 637, 642,
	643, 67, 898, 902, 903, 96, 2220, 68, 925, 926,
	902, 903, 1247, 598, 533, 533, 533, 1259, 2417, 946,
	946, 599, 1969, 1959, 892, 2358, 875, 876, 679, 878,
	2271, 2495, 1641, 1894, 1978, 350, 967, 967, 1036, 1506,
	860, 1210, 1494, 594, 1789, 1546, 593, 2573, 1545, 975,
	950, 2173, 948, 1961, 2178, 556, 1952, 715, 905, 906,
	69, 1945, 2552, 82, 1805, 1946, 1949, 1253, 991, 70,
	82, 82, 2572, 966, 966, 1509, 82, 82, 976, 82,
	946, 1707, 946, 654, 1688, 2511, 2512, 82, 1251, 944,
	944, 1810, 1024, 2566, 1005, 1952, 1793, 1794, 785, 786,
	1853, 2519, 971, 1811, 674, 622, 716, 2250, 680, 1683,
	1792, 2249, 2046, 716, 716, 2253, 2254, 1950, 2563, 2541,
	2536, 1210, 1528, 952, 1285, 1000, 1578, 334, 857, 2526,
	1698, 602, 537, 912, 859, 912, 1642, 2525, 716, 82,
	2323, 2325, 2326, 2327, 2324, 1007, 75, 718, 719, 720,
	717, 883, 986, 987, 1029, 1030, 1031, 1032, 1033, 1642,
	75, 1074, 916, 639, 640, 641, 1642, 1028, 904, 75,
	1121, 907, 718, 719, 720, 717, 1582, 1021, 601, 1595,
	1127, 35, 604, 603, 2564, 1501, 2537, 928, 71, 72,
	35, 1527, 1133, 1134, 999, 1501, 1072, 1073, 996, 2470,
	995, 1108, 2463, 1501, 533, 2458, 1115, 940, 941, 1002,
	1811, 937, 938, 939, 977, 333, 1923, 951, 2447, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1039, 982, 968, 1065, 1066, 1018, 962, 1673, 1992,
	990, 978, 2435, 1283, 718, 719, 720, 717, 989, 2411,
	2410, 1492, 1174, 2409, 2408, 537, 998, 1159, 1160, 1583,
	997, 1020, 994, 1015, 680, 2471, 1566, 2398, 2275, 1129,
	2281, 2275, 1163, 1594, 1550, 1167, 946, 1483, 1120, 1200,
	1064, 1175, 882, 566, 1673, 2280, 1206, 946, 1581, 2274,
	2196, 1068, 1179, 931, 2472, 2080, 1183, 2194, 1196, 1186,
	1006, 1058, 2016, 2014, 1158, 919, 920, 540, 2436, 1224,
	1224, 1979, 1229, 1867, 2012, 2275, 2275, 1229, 1270, 2275,
	2275, 946, 114, 1813, 1178, 1166, 1845, 1769, 1767, 1765,
	1222, 1701, 533, 2399, 946, 2065, 2282, 955, 956, 957,
	958, 959, 960, 961, 1763, 1107, 677, 1110, 1109, 1195,
	1188, 1611, 1122, 1752, 1712, 2275, 2197, 946, 1201, 1275,
	114, 114, 1128, 2195, 1130, 1696, 1131, 1287, 716, 2015,
	678, 1700, 1179, 1121, 1121, 1305, 1213, 1214, 1179, 1179,
	2013, 1690, 1280, 1685, 1234, 1692, 1625, 1610, 1278, 1226,
	1220, 1221, 1642, 1770, 1768, 1764, 1542, 1281, 1529, 1579,
	1313, 1148, 1553, 1255, 1206, 1552, 1500, 1482, 946, 983,
	1764, 1290, 1277, 1277, 979, 1314, 678, 851, 889, 716,
	716, 1182, 853, 760, 1211, 667, 648, 733, 1890, 1260,
	1274, 1611, 1194, 1176, 1170, 1983, 1173, 912, 1490, 1888,
	1212, 1113, 1112, 1207, 1063, 935, 2547, 1691, 913, 1686,
	2508, 1218, 1484, 1611, 933, 600, 936, 1203, 1202, 1061,
	1062, 1060, 1513, 2499, 1208, 1578, 2496, 1786, 716, 1230,
	2400, 716, 1501, 625, 2296, 984, 1993, 1194, 1897, 1889,
	1689, 1300, 624, 1666, 75, 1225, 1268, 1269, 1231, 1489,
	656, 1718, 558, 1233, 1232, 736, 737, 738, 739, 740,
	733, 1071, 1256, 1524, 1071, 35, 1521, 1585, 1586, 1525,
	1780, 720, 717, 1018, 1271, 734, 735, 736, 737, 738,
	739, 740, 733, 1191, 1272, 717, 1273, 2260, 1265, 1266,
	1267, 1139, 2259, 2055, 932, 1291, 718, 719, 720, 717,
	1306, 1557, 1307, 2050, 1312, 1720, 914, 1481, 1869, 1535,
	1516, 1517, 1536, 2243, 1540, 2546, 1480, 2285, 2286, 605,
	748, 718, 719, 720, 717, 1485, 2283, 2284, 2531, 624,
	1551, 2528, 2333, 1554, 1555, 1556, 1916, 2331, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 2329, 2319, 1567, 114, 114,
	1507, 1743, 597, 2554, 2493, 2477, 1515, 2374, 1512, 2339,
	2175, 2063, 114, 1608, 1532, 718, 719, 720, 717, 1229,
	2332, 2530, 1125, 114, 2317, 2330, 1954, 1538, 1058, 344,
	1514, 1915, 1126, 2328, 2318, 1523, 2316, 1229, 724, 725,
	726, 727, 728, 729, 730, 722, 2315, 1280, 2176, 2064,
	1587, 1589, 114, 718, 719, 720, 717, 2312, 1615, 2306,
	2303, 2302, 1281, 2209, 1604, 741, 742, 734, 735, 736,
	737, 738, 739, 740, 733, 1616, 718, 719, 720, 717,
	1537, 946, 2062, 1967, 1927, 2138, 1651, 1926, 1651, 718,
	719, 720, 717, 1884, 967, 1577, 114, 1576, 2450, 1677,
	1575, 1679, 718, 719, 720, 717, 1571, 1619, 1617, 1618,
	1526, 1114, 1570, 1179, 1179, 1179, 825, 1657, 980, 1603,
	718, 719, 720, 717, 2542, 2520, 1574, 1197, 1198, 1199,
	393, 966, 1132, 394, 1602, 1135, 1136, 1137, 1138, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1621, 2473, 1623, 2489,
	2465, 1671, 1654, 2449, 2338, 2111, 2120, 2431, 1676, 1596,
	2394, 1653, 2393, 2381, 2320, 2313, 718, 719, 720, 717,
	2309, 1614, 2308, 2307, 2272, 1620, 2245, 1674, 1626, 1624,
	1622, 2210, 1218, 1628, 2206, 1627, 1681, 732, 731, 741,
	742, 734, 735, 736, 737, 738, 739, 740, 733, 2109,
	2107, 2093, 2364, 2092, 2073, 2061, 1548, 2561, 783, 2060,
	2057, 2030, 1956, 2215, 1925, 1895, 813, 1861, 1760, 1710,
	803, 1667, 1668, 1669, 718, 719, 720, 717, 1580, 1675,
	478, 477, 2565, 1573, 833, 837, 839, 841, 843, 844,
	846, 1147, 850, 847, 848, 849, 981, 784, 828, 829,
	830, 831, 811, 812, 834, 779, 814, 778, 815, 816,
	817, 818, 819, 820, 821, 822, 823, 824, 826, 832,
	2538, 1971, 2269, 1190, 2401, 2371, 2370, 836, 838, 840,
	842, 845, 2369, 2368, 2074, 2045, 2036, 2035, 109, 2124,
	2024, 99, 81, 1694, 718, 719, 720, 717, 2017, 2005,
	2128, 1984, 1924, 946, 1921, 946, 1914, 946, 1906, 1901,
	1846, 827, 654, 1766, 1762, 1727, 1761, 1558, 1549, 1547,
	2117, 1708, 1544, 1543, 2119, 2121, 2123, 1541, 2125, 2126,
	2127, 2129, 2130, 2131, 2133, 2134, 2135, 2136, 2104, 946,
	1736, 850, 847, 848, 849, 106, 109, 1732, 1534, 1731,
	1730, 1728, 1531, 1744, 2103, 1530, 1124, 946, 1123, 953,
	718, 719, 720, 717, 2507, 2501, 2484, 2139, 2033, 2481,
	2479, 1735, 1719, 776, 2373, 1704, 718, 719, 720, 717,
	1737, 1738, 2355, 2343, 2340, 2335, 1741, 1742, 2297, 1745,
	718, 719, 720, 717, 541, 542, 543, 544, 1747, 1155,
	2267, 2266, 2137, 106, 2265, 946, 2262, 540, 2256, 944,
	1729, 2241, 1722, 885, 2088, 2086, 1809, 1705, 2068, 2116,
	2056, 1165, 1815, 1157, 1806, 1781, 1179, 944, 1684, 1774,
	1775, 1186, 1695, 1697, 1665, 1659, 1823, 1658, 1716, 1609,
	654, 114, 114, 114, 114, 1702, 1746, 1059, 2132, 1828,
	106, 1169, 654, 114, 1843, 2122, 954, 1919, 1771, 1018,
	1172, 1828, 1803, 1779, 1715, 1918, 1726, 114, 1807, 654,
	1713, 1162, 1857, 1161, 1003, 946, 27, 974, 1856, 718,
	719, 720, 717, 114, 114, 854, 802, 718, 719, 720,
	717, 801, 1844, 1651, 1917, 800, 1816, 1121, 799, 1121,
	798, 797, 1879, 796, 795, 794, 1817, 793, 792, 946,
	791, 1818, 790, 1820, 1819, 1821, 718, 719, 720, 717,
	75, 1776, 789, 1882, 788, 787, 782, 1733, 1734, 1795,
	781, 780, 1179, 1808, 1602, 1863, 1864, 1179, 1883, 1814,
	777, 35, 835, 773, 1802, 16, 772, 770, 769, 6,
	768, 5, 1874, 1822, 1824, 1829, 1830, 1831, 1832, 1825,
	767, 1194, 766, 1841, 1178, 1842, 1840, 625, 1900, 1878,
	765, 537, 764, 763, 1876, 762, 1847, 759, 758, 1862,
	682, 1907, 1887, 2263, 1909, 1859, 1911, 1892, 1759, 1996,
	1997, 1920, 654, 1613, 1872, 1868, 75, 1877, 1870, 1880,
	1881, 1941, 1598, 670, 1886, 1875, 2487, 2454, 114, 2002,
	718, 719, 720, 717, 1999, 1797, 1672, 654, 1293, 681,
	2001, 114, 1608, 744, 1982, 747, 1941, 1834, 1905, 1833,
	1908, 2545, 1899, 1687, 1758, 1778, 1910, 1912, 1913, 2529,
	745, 746, 743, 1603, 732, 731, 741, 742, 734, 735,
	736, 737, 738, 739, 740, 733, 718, 719, 720, 717,
	1972, 731, 741, 742, 734, 735, 736, 737, 738, 739,
	740, 733, 1973, 1974, 1975, 1149, 1757, 1837, 1736, 1835,
	1756, 1682, 1838, 1980, 1836, 1711, 732, 731, 741, 742,
	734, 735, 736, 737, 738, 739, 740, 733, 718, 719,
	720, 717, 718, 719, 720, 717, 1976, 114, 1981, 114,
	1977, 1709, 1985, 856, 1988, 1986, 1987, 1935, 1990, 2004,
	1755, 1991, 2000, 1989, 1592, 2505, 2009, 2010, 2011, 1754,
	58, 1634, 1637, 1638, 1639, 1635, 2003, 1636, 1640, 2006,
	1932, 1933, 718, 719, 720, 717, 114, 1839, 676, 1638,
	1639, 718, 719, 720, 717, 2049, 2022, 1585, 1586, 2029,
	2025, 2031, 2212, 2091, 2032, 2090, 330, 1934, 2026, 2027,
	1753, 2034, 732, 731, 741, 742, 734, 735, 736, 737,
	738, 739, 740, 733, 946, 946, 1751, 1644, 34, 114,
	2077, 1204, 718, 719, 720, 717, 33, 2422, 2044, 2089,
	918, 2043, 917, 654, 1113, 1112, 1750, 708, 718, 719,
	720, 717, 1828, 868, 869, 1749, 2069, 866, 867, 2008,
	2052, 2048, 2052, 1651, 331, 1479, 2054, 2047, 718, 719,
	720, 717, 332, 2095, 1121, 886, 2053, 718, 719, 720,
	717, 1179, 858, 2079, 2085, 75, 2082, 2087, 864, 865,
	2502, 2076, 2075, 540, 944, 2071, 2378, 654, 2376, 2115,
	2019, 2165, 2167, 2300, 2165, 2165, 1941, 2094, 1748, 2083,
	862, 863, 2298, 2084, 2295, 2078, 2294, 2292, 2193, 654,
	2192, 2108, 2042, 2081, 2041, 2020, 861, 1866, 2102, 2096,
	718, 719, 720, 717, 1210, 2491, 2490, 1206, 1885, 2190,
	2503, 1740, 1533, 668, 2171, 2490, 2491, 2166, 1739, 2258,
	2140, 2023, 1643, 890, 41, 1, 1848, 2162, 2168, 2169,
	2112, 2187, 1849, 718, 719, 720, 717, 2007, 2216, 1851,
	718, 719, 720, 717, 1497, 2058, 2184, 1970, 2079, 1955,
	1717, 880, 559, 1116, 2170, 2188, 870, 732, 731, 741,
	742, 734, 735, 736, 737, 738, 739, 740, 733, 988,
	636, 946, 718, 719, 720, 717, 541, 542, 543, 544,
	2185, 2186, 114, 663, 985, 662, 660, 1069, 2219, 540,
	440, 2167, 1296, 2336, 2189, 2217, 2218, 2421, 2221, 2222,
	2223, 2224, 2467, 1067, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2246, 1922,
	2372, 2424, 2162, 1001, 2242, 718, 719, 720, 717, 425,
	2287, 1928, 2198, 2289, 2261, 2200, 2268, 1772, 2098, 2301,
	2277, 2071, 1871, 570, 472, 2276, 448, 771, 1292, 969,
	2279, 2278, 638, 447, 2244, 2067, 1791, 545, 635, 571,
	2334, 1568, 2291, 2037, 1150, 1171, 732, 731, 741, 742,
	734, 735, 736, 737, 738, 739, 740, 733, 1154, 2557,
	2544, 2521, 2500, 654, 2314, 1651, 654, 654, 654, 2299,
	2389, 2539, 2437, 2482, 2475, 2385, 654, 2213, 2304, 2305,
	364, 1252, 531, 2366, 2310, 2311, 609, 2356, 2344, 365,
	1612, 2352, 2353, 2354, 2351, 2341, 2414, 2342, 2383, 549,
	1597, 2363, 1714, 550, 1600, 946, 946, 2362, 2365, 1599,
	1040, 723, 1057, 75, 756, 401, 2377, 1522, 2379, 2380,
	2375, 413, 2384, 1629, 732, 731, 741, 742, 734, 735,
	736, 737, 738, 739, 740, 733, 114, 2391, 2392, 407,
	1788, 2155, 1860, 40, 654, 39, 1634, 1637, 1638, 1639,
	1635, 38, 1636, 1640, 1286, 1309, 654, 442, 116, 1310,
	2382, 2207, 2426, 2397, 423, 422, 421, 420, 2403, 2407,
	419, 1633, 1631, 1630, 2428, 944, 944, 1239, 2402, 1238,
	1284, 2412, 2451, 2404, 2405, 2105, 2255, 2427, 1277, 2420,
	732, 731, 741, 742, 734, 735, 736, 737, 738, 739,
	740, 733, 2432, 2321, 2251, 2247, 2395, 2114, 2113, 2440,
	2442, 2141, 2142, 2148, 809, 805, 1520, 807, 808, 806,
	1725, 2448, 1721, 1939, 1940, 1937, 1998, 1994, 2459, 2460,
	2461, 2462, 1298, 2469, 1304, 1184, 1777, 2474, 732, 731,
	741, 742, 734, 735, 736, 737, 738, 739, 740, 733,
	1240, 111, 1236, 2183, 534, 26, 25, 24, 12, 11,
	992, 10, 15, 23, 22, 21, 20, 66, 2485, 65,
	2488, 2486, 2428, 2498, 2464, 64, 63, 19, 9, 2492,
	654, 62, 654, 61, 60, 2427, 2497, 2494, 2504, 1024,
	2506, 1024, 18, 17, 55, 56, 51, 50, 49, 569,
	48, 47, 46, 45, 2515, 54, 2469, 2516, 654, 53,
	2524, 52, 44, 43, 42, 79, 2527, 1024, 78, 77,
	2533, 76, 28, 29, 30, 31, 89, 2478, 88, 2480,
	90, 86, 84, 87, 2518, 85, 83, 36, 8, 14,
	2, 0, 0, 0, 2543, 0, 0, 0, 0, 0,
	0, 0, 0, 2556, 0, 2555, 0, 0, 0, 0,
	0, 0, 0, 0, 2568, 0, 0, 2570, 0, 2569,
	2571, 0, 2509, 0, 2556, 1425, 1467, 0, 0, 1414,
	282, 1372, 1427, 1345, 1361, 1435, 1362, 1363, 1400, 1324,
	1382, 244, 1359, 0, 0, 0, 0, 0, 0, 1417,
	1316, 1348, 1349, 1318, 1355, 1319, 1346, 1374, 189, 1344,
	1385, 214, 1397, 1358, 1379, 1433, 0, 0, 274, 228,
	0, 0, 1377, 1419, 1380, 1405, 1371, 1401, 1332, 1393,
	1428, 1360, 0, 1398, 1429, 0, 0, 0, 0, 1197,
	1198, 1199, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 1396, 1423, 1357, 0, 173, 1426, 1378, 1399,
	0, 0, 1317, 1394, 0, 1322, 1325, 1434, 1421, 1352,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 1375,
	1381, 1402, 1368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 1390, 0, 0, 0, 1327, 1323,
	0, 1373, 0, 0, 162, 279, 295, 171, 270, 308,
	176, 277, 167, 243, 266, 0, 1466, 164, 293, 276,
	225, 208, 209, 163, 0, 261, 187, 200, 183, 241,
	0, 292, 320, 182, 311, 1326, 303, 166, 1461, 302,
	240, 289, 294, 226, 220, 165, 291, 224, 219, 212,
	191, 0, 204, 252, 218, 253, 205, 230, 229, 231,
	1445, 1446, 1447, 1448, 1449, 1457, 1458, 0, 1462, 1463,
	1464, 1331, 0, 1351, 1403, 0, 1315, 1412, 1420, 1370,
	305, 1422, 1367, 1366, 1452, 0, 1451, 278, 1453, 1454,
	213, 1418, 1347, 1356, 321, 1354, 264, 246, 1424, 1389,
	1465, 262, 216, 290, 254, 296, 280, 304, 258, 255,
	157, 281, 185, 227, 168, 169, 181, 188, 190, 192,
	193, 236, 237, 249, 269, 283, 284, 285, 184, 177,
	263, 178, 202, 179, 158, 271, 180, 160, 250, 288,
	1450, 198, 259, 223, 161, 222, 251, 287, 286, 312,
	318, 319, 323, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 1459, 0, 1460, 317,
	196, 155, 300, 0, 242, 0, 1415, 1320, 1330, 1328,
	1364, 1391, 1392, 238, 316, 1407, 1411, 1408, 1436, 267,
	0, 0, 0, 0, 0, 207, 248, 1409, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1321,
	0, 275, 298, 310, 327, 329, 1468, 1469, 1470, 159,
	0, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 301, 1365,
	1338, 1376, 309, 1341, 1339, 1406, 1340, 1395, 325, 232,
	233, 234, 235, 199, 0, 175, 328, 257, 1386, 1369,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1387, 0, 1343,
	322, 195, 201, 0, 203, 174, 247, 197, 307, 210,
	1413, 239, 206, 272, 211, 217, 260, 306, 245, 265,
	172, 297, 273, 221, 0, 0, 1337, 1342, 1336, 1383,
	1384, 1430, 1431, 1432, 1404, 1329, 1416, 0, 1333, 1335,
	1334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1410, 0, 0, 1388, 156, 0, 215, 1437, 256, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 1455,
	1456, 313, 314, 315, 299, 415, 186, 1478, 0, 189,
	0, 0, 214, 0, 0, 0, 446, 0, 0, 274,
	228, 0, 0, 0, 0, 502, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	439, 478, 477, 427, 436, 0, 0, 170, 428, 0,
	435, 429, 433, 432, 430, 431, 0, 494, 0, 0,
	0, 0, 0, 0, 399, 412, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 0, 0, 0, 0, 455, 0, 411, 0, 0,
	457, 0, 437, 0, 0, 162, 279, 295, 171, 270,
	308, 176, 277, 167, 243, 266, 0, 0, 164, 293,
	276, 225, 208, 209, 163, 0, 261, 187, 200, 183,
	241, 434, 453, 458, 182, 516, 451, 303, 166, 0,
	302, 240, 289, 294, 226, 220, 165, 291, 224, 219,
	212, 191, 517, 204, 252, 218, 253, 205, 230, 229,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 0,
	0, 305, 0, 0, 500, 0, 0, 0, 278, 0,
	0, 213, 0, 0, 0, 452, 0, 264, 246, 513,
	400, 0, 262, 216, 290, 254, 296, 280, 304, 258,
	255, 157, 281, 185, 227, 168, 169, 181, 188, 190,
	192, 193, 236, 237, 249, 269, 283, 284, 285, 184,
	177, 263, 178, 202, 179, 158, 271, 180, 160, 250,
	288, 0, 198, 259, 223, 161, 222, 251, 287, 286,
	312, 318, 319, 323, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 1118, 1117, 1119,
	317, 196, 155, 300, 498, 242, 0, 512, 493, 495,
	496, 499, 503, 504, 505, 506, 507, 509, 511, 515,
	267, 0, 0, 0, 0, 0, 207, 248, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 298, 310, 327, 329, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 456,
	232, 233, 234, 235, 501, 0, 175, 328, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 195, 201, 0, 203, 174, 247, 197, 307,
	210, 0, 239, 206, 272, 211, 217, 260, 306, 245,
	265, 172, 297, 273, 221, 0, 0, 523, 497, 522,
	524, 525, 521, 526, 527, 508, 418, 0, 461, 519,
	518, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 215, 0, 256,
	194, 484, 465, 466, 467, 417, 468, 463, 464, 485,
	459, 481, 482, 441, 444, 469, 133, 470, 483, 486,
	487, 528, 529, 530, 473, 488, 480, 479, 471, 460,
	489, 490, 445, 443, 474, 475, 462, 476, 491, 492,
	282, 454, 313, 314, 315, 299, 0, 186, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 189, 1180,
	0, 214, 0, 0, 0, 446, 0, 0, 274, 228,
	0, 0, 0, 0, 502, 510, 0, 0, 0, 0,
	0, 0, 0, 1262, 0, 0, 408, 0, 0, 439,
	478, 477, 427, 436, 0, 0, 170, 428, 0, 435,
	429, 433, 432, 430, 431, 0, 494, 0, 0, 0,
	0, 0, 0, 399, 412, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	0, 0, 0, 0, 455, 0, 411, 0, 0, 1263,
	0, 437, 0, 0, 162, 279, 295, 171, 270, 308,
	176, 277, 167, 243, 266, 0, 0, 164, 293, 276,
	225, 208, 209, 163, 0, 261, 187, 200, 183, 241,
	434, 453, 458, 182, 516, 451, 303, 166, 0, 302,
	240, 289, 294, 226, 220, 165, 291, 224, 219, 212,
	191, 517, 204, 252, 218, 253, 205, 230, 229, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 0, 0,
	305, 0, 0, 500, 0, 0, 0, 278, 0, 0,
	213, 0, 0, 0, 452, 0, 264, 246, 513, 400,
	0, 262, 216, 290, 254, 296, 280, 304, 258, 255,
	157, 281, 185, 227, 168, 169, 181, 188, 190, 192,
	193, 236, 237, 249, 269, 283, 284, 285, 184, 177,
	263, 178, 202, 179, 158, 271, 180, 160, 250, 288,
	0, 198, 259, 223, 161, 222, 251, 287, 286, 312,
	318, 319, 323, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 317,
	196, 155, 300, 498, 242, 0, 512, 493, 495, 496,
	499, 503, 504, 505, 506, 507, 509, 511, 515, 267,
	0, 0, 0, 0, 0, 207, 248, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 298, 310, 327, 329, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 309, 0, 0, 0, 0, 0, 456, 232,
	233, 234, 235, 501, 0, 175, 328, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 195, 201, 0, 203, 174, 247, 197, 307, 210,
	0, 239, 206, 272, 211, 217, 260, 306, 245, 265,
	172, 297, 273, 221, 0, 0, 523, 497, 522, 524,
	525, 521, 526, 527, 508, 418, 0, 461, 519, 518,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 215, 0, 256, 194,
	484, 465, 466, 467, 417, 468, 463, 464, 485, 459,
	481, 482, 441, 444, 469, 133, 470, 483, 486, 487,
	528, 529, 530, 473, 488, 480, 479, 471, 460, 489,
	490, 445, 443, 474, 475, 462, 476, 491, 492, 0,
	0, 313, 314, 315, 299, 0, 186, 109, 282, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 189, 0, 0, 214,
	0, 0, 0, 446, 0, 0, 274, 228, 0, 0,
	0, 0, 502, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 439, 478, 477,
	427, 436, 0, 0, 170, 428, 0, 435, 429, 433,
	432, 430, 431, 0, 494, 0, 0, 0, 0, 0,
	0, 399, 412, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 0, 0,
	0, 0, 455, 0, 411, 0, 0, 457, 0, 437,
	0, 0, 162, 279, 295, 171, 270, 308, 176, 277,
	167, 243, 266, 0, 0, 164, 293, 276, 225, 208,
	209, 163, 0, 261, 187, 200, 183, 241, 434, 453,
	458, 182, 516, 451, 303, 166, 0, 302, 240, 289,
	294, 226, 220, 165, 291, 224, 219, 212, 191, 517,
	204, 252, 218, 253, 205, 230, 229, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 0, 0, 305, 0,
	0, 500, 0, 0, 0, 278, 0, 0, 213, 0,
	0, 0, 452, 0, 264, 246, 513, 400, 0, 262,
	216, 290, 254, 296, 280, 304, 258, 255, 157, 281,
	185, 227, 168, 169, 181, 188, 190, 192, 193, 236,
	237, 249, 269, 283, 284, 285, 184, 177, 263, 178,
	202, 179, 158, 271, 180, 160, 250, 288, 0, 198,
	259, 223, 161, 222, 251, 287, 286, 312, 318, 319,
	323, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 317, 196, 155,
	300, 498, 242, 0, 512, 493, 495, 496, 499, 503,
	504, 505, 506, 507, 509, 511, 515, 267, 0, 0,
	0, 0, 0, 207, 248, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	298, 310, 327, 329, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	309, 0, 0, 0, 0, 0, 456, 232, 233, 234,
	235, 501, 0, 175, 328, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 195,
	201, 0, 203, 174, 247, 197, 307, 210, 0, 239,
	206, 272, 211, 217, 260, 306, 245, 265, 172, 297,
	273, 221, 0, 0, 523, 497, 522, 524, 525, 521,
	526, 527, 508, 418, 0, 461, 519, 518, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 215, 82, 256, 194, 484, 465,
	466, 467, 417, 468, 463, 464, 485, 459, 481, 482,
	441, 444, 469, 133, 470, 483, 486, 487, 528, 529,
	530, 473, 488, 480, 479, 471, 460, 489, 490, 445,
	443, 474, 475, 462, 476, 491, 492, 282, 454, 313,
	314, 315, 299, 0, 186, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 189, 2517, 0, 214, 0,
	0, 0, 446, 0, 0, 274, 228, 0, 0, 0,
	0, 502, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 439, 478, 477, 427,
	436, 0, 0, 170, 428, 0, 435, 429, 433, 432,
	430, 431, 0, 494, 0, 0, 0, 0, 0, 0,
	399, 412, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 0, 0, 0,
	0, 455, 0, 411, 0, 0, 457, 0, 437, 0,
	0, 162, 279, 295, 171, 270, 308, 176, 277, 167,
	243, 266, 0, 0, 164, 293, 276, 225, 208, 209,
	163, 0, 261, 187, 200, 183, 241, 434, 453, 458,
	182, 516, 451, 303, 166, 0, 302, 240, 289, 294,
	226, 220, 165, 291, 224, 219, 212, 191, 517, 204,
	252, 218, 253, 205, 230, 229, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 0, 0, 305, 0, 0,
	500, 0, 0, 0, 278, 0, 0, 213, 0, 0,
	0, 452, 0, 264, 246, 513, 400, 0, 262, 216,
	290, 254, 296, 280, 304, 258, 255, 157, 281, 185,
	227, 168, 169, 181, 188, 190, 192, 193, 236, 237,
	249, 269, 283, 284, 285, 184, 177, 263, 178, 202,
	179, 158, 271, 180, 160, 250, 288, 0, 198, 259,
	223, 161, 222, 251, 287, 286, 312, 318, 319, 323,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 317, 196, 155, 300,
	498, 242, 0, 512, 493, 495, 496, 499, 503, 504,
	505, 506, 507, 509, 511, 515, 267, 0, 0, 0,
	0, 0, 207, 248, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 298,
	310, 327, 329, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 456, 232, 233, 234, 235,
	501, 0, 175, 328, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 195, 201,
	0, 203, 174, 247, 197, 307, 210, 0, 239, 206,
	272, 211, 217, 260, 306, 245, 265, 172, 297, 273,
	221, 0, 0, 523, 497, 522, 524, 525, 521, 526,
	527, 508, 418, 0, 461, 519, 518, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 215, 0, 256, 194, 484, 465, 466,
	467, 417, 468, 463, 464, 485, 459, 481, 482, 441,
	444, 469, 133, 470, 483, 486, 487, 528, 529, 530,
	473, 488, 480, 479, 471, 460, 489, 490, 445, 443,
	474, 475, 462, 476, 491, 492, 282, 454, 313, 314,
	315, 299, 0, 186, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 189, 1180, 0, 214, 0, 0,
	0, 446, 0, 0, 274, 228, 0, 0, 0, 0,
	502, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 439, 478, 477, 427, 436,
	0, 0, 170, 428, 0, 435, 429, 433, 432, 430,
	431, 0, 494, 0, 0, 0, 0, 0, 0, 399,
	412, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 0, 0, 0, 0,
	455, 0, 411, 0, 0, 457, 0, 437, 0, 0,
	162, 279, 295, 171, 270, 308, 176, 277, 167, 243,
	266, 0, 0, 164, 293, 276, 225, 208, 209, 163,
	0, 261, 187, 200, 183, 241, 434, 453, 458, 182,
	516, 451, 303, 166, 0, 302, 240, 289, 294, 226,
	220, 165, 291, 224, 219, 212, 191, 517, 204, 252,
	218, 253, 205, 230, 229, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 0, 0, 305, 0, 0, 500,
	0, 0, 0, 278, 0, 0, 213, 0, 0, 0,
	452, 0, 264, 246, 513, 400, 0, 262, 216, 290,
	254, 296, 280, 304, 258, 255, 157, 281, 185, 227,
	168, 169, 181, 188, 190, 192, 193, 236, 237, 249,
	269, 283, 284, 285, 184, 177, 263, 178, 202, 179,
	158, 271, 180, 160, 250, 288, 0, 198, 259, 223,
	161, 222, 251, 287, 286, 312, 318, 319, 323, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 317, 196, 155, 300, 498,
	242, 0, 512, 493, 495, 496, 499, 503, 504, 505,
	506, 507, 509, 511, 515, 267, 0, 0, 0, 0,
	0, 207, 248, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 298, 310,
	327, 329, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 0, 0, 0, 309, 0,
	0, 0, 0, 0, 456, 232, 233, 234, 235, 501,
	0, 175, 328, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 195, 201, 0,
	203, 174, 247, 197, 307, 210, 0, 239, 206, 272,
	211, 217, 260, 306, 245, 265, 172, 297, 273, 221,
	0, 0, 523, 497, 522, 524, 525, 521, 526, 527,
	508, 418, 0, 461, 519, 518, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 215, 0, 256, 194, 484, 465, 466, 467,
	417, 468, 463, 464, 485, 459, 481, 482, 441, 444,
	469, 133, 470, 483, 486, 487, 528, 529, 530, 473,
	488, 480, 479, 471, 460, 489, 490, 445, 443, 474,
	475, 462, 476, 491, 492, 282, 454, 313, 314, 315,
	299, 0, 186, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 189, 0, 0, 214, 0, 0, 0,
	446, 0, 0, 274, 228, 0, 0, 0, 0, 502,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 439, 478, 477, 427, 436, 0,
	0, 170, 428, 0, 435, 429, 433, 432, 430, 431,
	0, 494, 0, 0, 0, 0, 0, 0, 399, 412,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 965, 0, 0, 0, 455,
	0, 411, 0, 0, 457, 0, 437, 0, 0, 162,
	279, 295, 171, 270, 308, 176, 277, 167, 243, 266,
	0, 0, 164, 293, 276, 225, 208, 209, 163, 0,
	261, 187, 200, 183, 241, 434, 453, 458, 182, 516,
	451, 303, 166, 0, 302, 240, 289, 294, 226, 220,
	165, 291, 224, 219, 212, 191, 517, 204, 252, 218,
	253, 205, 230, 229, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 0, 0, 305, 0, 0, 500, 0,
	0, 0, 278, 0, 0, 213, 0, 0, 0, 452,
	0, 264, 246, 513, 400, 0, 262, 216, 290, 254,
	296, 280, 304, 258, 255, 157, 281, 185, 227, 168,
	169, 181, 188, 190, 192, 193, 236, 237, 249, 269,
	283, 284, 285, 184, 177, 263, 178, 202, 179, 158,
	271, 180, 160, 250, 288, 0, 198, 259, 223, 161,
	222, 251, 287, 286, 312, 318, 319, 323, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 317, 196, 155, 300, 498, 242,
	0, 512, 493, 495, 496, 499, 503, 504, 505, 506,
	507, 509, 511, 515, 267, 0, 0, 0, 0, 0,
	207, 248, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 298, 310, 327,
	329, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 456, 232, 233, 234, 235, 501, 0,
	175, 328, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 195, 201, 0, 203,
	174, 247, 197, 307, 210, 0, 239, 206, 272, 211,
	217, 260, 306, 245, 265, 172, 297, 273, 221, 0,
	0, 523, 497, 522, 524, 525, 521, 526, 527, 508,
	418, 0, 461, 519, 518, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 215, 0, 256, 194, 484, 465, 466, 467, 417,
	468, 463, 464, 485, 459, 481, 482, 441, 444, 469,
	133, 470, 483, 486, 487, 528, 529, 530, 473, 488,
	480, 479, 471, 460, 489, 490, 445, 443, 474, 475,
	462, 476, 491, 492, 0, 0, 313, 314, 315, 299,
	0, 186, 282, 454, 0, 0, 1539, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	189, 0, 0, 214, 0, 0, 0, 446, 0, 0,
	274, 228, 0, 0, 0, 0, 502, 510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 439, 478, 477, 427, 436, 0, 0, 170, 428,
	0, 435, 429, 433, 432, 430, 431, 0, 494, 0,
	0, 0, 0, 0, 0, 399, 412, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 0, 0, 0, 0, 455, 0, 411, 0,
	0, 457, 0, 437, 0, 0, 162, 279, 295, 171,
	270, 308, 176, 277, 167, 243, 266, 0, 0, 164,
	293, 276, 225, 208, 209, 163, 0, 261, 187, 200,
	183, 241, 434, 453, 458, 182, 516, 451, 303, 166,
	0, 302, 240, 289, 294, 226, 220, 165, 291, 224,
	219, 212, 191, 517, 204, 252, 218, 253, 205, 230,
	229, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	0, 0, 305, 0, 0, 500, 0, 0, 0, 278,
	0, 0, 213, 0, 0, 0, 452, 0, 264, 246,
	513, 400, 0, 262, 216, 290, 254, 296, 280, 304,
	258, 255, 157, 281, 185, 227, 168, 169, 181, 188,
	190, 192, 193, 236, 237, 249, 269, 283, 284, 285,
	184, 177, 263, 178, 202, 179, 158, 271, 180, 160,
	250, 288, 0, 198, 259, 223, 161, 222, 251, 287,
	286, 312, 318, 319, 323, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 317, 196, 155, 300, 498, 242, 0, 512, 493,
	495, 496, 499, 503, 504, 505, 506, 507, 509, 511,
	515, 267, 0, 0, 0, 0, 0, 207, 248, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 298, 310, 327, 329, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 309, 0, 0, 0, 0, 0,
	456, 232, 233, 234, 235, 501, 0, 175, 328, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 195, 201, 0, 203, 174, 247, 197,
	307, 210, 0, 239, 206, 272, 211, 217, 260, 306,
	245, 265, 172, 297, 273, 221, 0, 0, 523, 497,
	522, 524, 525, 521, 526, 527, 508, 418, 0, 461,
	519, 518, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 215, 0,
	256, 194, 484, 465, 466, 467, 417, 468, 463, 464,
	485, 459, 481, 482, 441, 444, 469, 133, 470, 483,
	486, 487, 528, 529, 530, 473, 488, 480, 479, 471,
	460, 489, 490, 445, 443, 474, 475, 462, 476, 491,
	492, 282, 454, 313, 314, 315, 299, 0, 186, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 189,
	0, 0, 214, 0, 0, 0, 446, 0, 0, 274,
	228, 0, 0, 0, 0, 502, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	439, 478, 477, 427, 436, 0, 0, 170, 428, 0,
	435, 429, 433, 432, 430, 431, 0, 494, 0, 0,
	0, 0, 0, 0, 399, 412, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 0, 0, 0, 0, 455, 0, 411, 0, 0,
	457, 0, 437, 0, 0, 162, 279, 295, 171, 270,
	308, 176, 277, 167, 243, 266, 0, 0, 164, 293,
	276, 225, 208, 209, 163, 0, 261, 187, 200, 183,
	241, 434, 453, 458, 182, 516, 451, 303, 166, 0,
	302, 240, 289, 294, 226, 220, 165, 291, 224, 219,
	212, 191, 517, 204, 252, 218, 253, 205, 230, 229,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 0,
	0, 305, 0, 0, 500, 0, 0, 0, 278, 0,
	0, 213, 0, 0, 0, 452, 0, 264, 246, 513,
	400, 0, 262, 216, 290, 254, 296, 280, 304, 258,
	255, 157, 281, 185, 227, 168, 169, 181, 188, 190,
	192, 193, 236, 237, 249, 269, 283, 284, 285, 184,
	177, 263, 178, 202, 179, 158, 271, 180, 160, 250,
	288, 0, 198, 259, 223, 161, 222, 251, 287, 286,
	312, 318, 319, 323, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	317, 196, 155, 300, 498, 242, 0, 512, 493, 495,
	496, 499, 503, 504, 505, 506, 507, 509, 511, 515,
	267, 0, 0, 0, 0, 0, 207, 248, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 298, 310, 327, 329, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 456,
	232, 233, 234, 235, 501, 0, 175, 328, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 195, 201, 0, 203, 174, 247, 197, 307,
	210, 0, 239, 206, 272, 211, 217, 260, 306, 245,
	265, 172, 297, 273, 221, 0, 0, 523, 497, 522,
	524, 525, 521, 526, 527, 508, 418, 0, 461, 519,
	518, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 215, 0, 256,
	194, 484, 465, 466, 467, 417, 468, 463, 464, 485,
	459, 481, 482, 441, 444, 469, 133, 470, 483, 486,
	487, 528, 529, 530, 473, 488, 480, 479, 471, 460,
	489, 490, 445, 443, 474, 475, 462, 476, 491, 492,
	282, 454, 313, 314, 315, 299, 0, 186, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	1041, 0, 0, 0, 415, 0, 0, 0, 189, 0,
	0, 214, 0, 0, 0, 446, 0, 0, 274, 228,
	0, 0, 0, 0, 502, 510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 0, 0, 439,
	478, 477, 427, 436, 0, 0, 170, 428, 0, 435,
	429, 433, 432, 430, 431, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	0, 0, 0, 0, 455, 0, 411, 0, 0, 457,
	0, 437, 0, 0, 162, 279, 295, 171, 270, 308,
	176, 277, 167, 243, 266, 0, 0, 164, 293, 276,
	225, 208, 209, 163, 0, 261, 187, 200, 183, 241,
	434, 453, 458, 182, 516, 451, 303, 166, 0, 302,
	240, 289, 294, 226, 220, 165, 291, 224, 219, 212,
	191, 517, 204, 252, 218, 253, 205, 230, 229, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 0, 0,
	305, 0, 0, 500, 0, 0, 0, 278, 0, 0,
	213, 0, 0, 0, 452, 0, 264, 246, 513, 0,
	0, 262, 216, 290, 254, 296, 280, 304, 258, 255,
	157, 281, 185, 227, 168, 169, 181, 188, 190, 192,
	193, 236, 237, 249, 269, 283, 284, 285, 184, 177,
	263, 178, 202, 179, 158, 271, 180, 160, 250, 288,
	0, 198, 259, 223, 161, 222, 251, 287, 286, 312,
	1042, 1043, 323, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 317,
	196, 155, 300, 498, 242, 0, 512, 493, 495, 496,
	499, 503, 504, 505, 506, 507, 509, 511, 515, 267,
	0, 0, 0, 0, 0, 207, 248, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 298, 310, 327, 329, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 309, 0, 0, 0, 0, 0, 456, 232,
	233, 234, 235, 501, 0, 175, 328, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 195, 201, 0, 203, 174, 247, 197, 307, 210,
	0, 239, 206, 272, 211, 217, 260, 306, 245, 265,
	172, 297, 273, 221, 0, 0, 523, 497, 522, 524,
	525, 521, 526, 527, 508, 418, 0, 461, 519, 518,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 215, 0, 256, 194,
	484, 465, 466, 467, 417, 468, 463, 464, 485, 459,
	481, 482, 441, 444, 469, 133, 470, 483, 486, 487,
	528, 529, 530, 473, 488, 480, 479, 471, 460, 489,
	490, 445, 443, 474, 475, 462, 476, 491, 492, 282,
	454, 313, 314, 315, 299, 0, 186, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 189, 0, 0,
	214, 0, 0, 0, 446, 0, 0, 274, 228, 0,
	0, 0, 0, 502, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 439, 478,
	477, 427, 436, 0, 0, 170, 428, 0, 435, 429,
	433, 432, 430, 431, 0, 494, 0, 0, 0, 0,
	0, 0, 399, 412, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 0,
	0, 0, 0, 455, 0, 411, 0, 0, 457, 0,
	437, 0, 0, 162, 279, 295, 171, 270, 308, 176,
	277, 167, 243, 266, 0, 0, 164, 293, 276, 225,
	208, 209, 163, 0, 261, 187, 200, 183, 241, 434,
	453, 458, 182, 516, 451, 303, 166, 0, 302, 240,
	289, 294, 226, 220, 165, 291, 224, 219, 212, 191,
	517, 204, 252, 218, 253, 205, 230, 229, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 0, 0, 305,
	0, 0, 500, 0, 0, 0, 278, 0, 0, 213,
	0, 0, 0, 452, 0, 264, 246, 513, 400, 0,
	262, 216, 290, 254, 296, 280, 304, 258, 255, 157,
	281, 185, 227, 168, 169, 181, 188, 190, 192, 193,
	236, 237, 249, 269, 283, 284, 285, 184, 177, 263,
	178, 202, 179, 158, 271, 180, 160, 250, 288, 0,
	198, 259, 223, 161, 222, 251, 287, 286, 312, 318,
	319, 323, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 317, 196,
	155, 300, 498, 242, 0, 512, 493, 495, 496, 499,
	503, 504, 505, 506, 507, 509, 511, 515, 267, 0,
	0, 0, 0, 0, 207, 248, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 298, 310, 327, 329, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 0, 0,
	0, 309, 0, 0, 0, 0, 0, 456, 232, 233,
	234, 235, 501, 0, 175, 328, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	195, 201, 0, 203, 174, 247, 197, 307, 210, 0,
	239, 206, 272, 211, 217, 260, 306, 245, 265, 172,
	297, 273, 221, 0, 0, 523, 497, 522, 524, 525,
	521, 526, 527, 508, 418, 0, 461, 519, 518, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 215, 0, 256, 194, 484,
	465, 466, 467, 417, 468, 463, 464, 485, 459, 481,
	482, 441, 444, 469, 133, 470, 483, 486, 487, 528,
	529, 530, 473, 488, 480, 479, 471, 460, 489, 490,
	445, 443, 474, 475, 462, 476, 491, 492, 282, 454,
	313, 314, 315, 299, 0, 186, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 189, 0, 0, 214,
	0, 0, 0, 446, 0, 0, 274, 228, 0, 0,
	0, 0, 502, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 439, 478, 477,
	427, 436, 0, 0, 170, 428, 0, 435, 429, 433,
	432, 430, 431, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 0, 0,
	0, 0, 455, 0, 411, 0, 0, 457, 0, 437,
	0, 0, 162, 279, 295, 171, 270, 308, 176, 277,
	167, 243, 266, 0, 0, 164, 293, 276, 225, 208,
	209, 163, 0, 261, 187, 200, 183, 241, 434, 453,
	458, 182, 516, 451, 303, 166, 0, 302, 240, 289,
	294, 226, 220, 165, 291, 224, 219, 212, 191, 517,
	204, 252, 218, 253, 205, 230, 229, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 0, 0, 305, 0,
	0, 500, 0, 0, 0, 278, 0, 0, 213, 0,
	0, 0, 452, 0, 264, 246, 513, 0, 0, 262,
	216, 290, 254, 296, 280, 304, 258, 255, 157, 281,
	185, 227, 168, 169, 181, 188, 190, 192, 193, 236,
	237, 249, 269, 283, 284, 285, 184, 177, 263, 178,
	202, 179, 158, 271, 180, 160, 250, 288, 0, 198,
	259, 223, 161, 222, 251, 287, 286, 312, 318, 319,
	323, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 317, 196, 155,
	300, 498, 242, 0, 512, 493, 495, 496, 499, 503,
	504, 505, 506, 507, 509, 511, 515, 267, 0, 0,
	0, 0, 0, 207, 248, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	298, 310, 327, 329, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	309, 0, 0, 0, 0, 0, 456, 232, 233, 234,
	235, 501, 0, 175, 328, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 195,
	201, 0, 203, 174, 247, 197, 307, 210, 0, 239,
	206, 272, 211, 217, 260, 306, 245, 265, 172, 297,
	273, 221, 0, 0, 523, 497, 522, 524, 525, 521,
	526, 527, 508, 418, 0, 461, 519, 518, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 215, 0, 256, 194, 484, 465,
	466, 467, 417, 468, 463, 464, 485, 459, 481, 482,
	441, 444, 469, 133, 470, 483, 486, 487, 528, 529,
	530, 473, 488, 480, 479, 471, 460, 489, 490, 445,
	443, 474, 475, 462, 476, 491, 492, 0, 0, 313,
	314, 315, 299, 0, 186, 109, 282, 32, 99, 81,
	0, 0, 0, 0, 0, 0, 0, 244, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 274, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 279, 295, 171, 270, 308, 176, 277, 167, 243,
	266, 0, 0, 164, 293, 276, 225, 208, 209, 163,
	0, 261, 187, 200, 183, 241, 0, 292, 320, 182,
	311, 0, 303, 166, 0, 302, 240, 289, 294, 226,
	220, 165, 291, 224, 219, 212, 191, 0, 204, 252,
	218, 253, 205, 230, 229, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 305, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 213, 0, 0, 0,
	321, 0, 264, 246, 0, 0, 0, 262, 216, 290,
	254, 296, 280, 304, 258, 255, 157, 281, 185, 227,
	168, 169, 181, 188, 190, 192, 193, 236, 237, 249,
	269, 283, 284, 285, 184, 177, 263, 178, 202, 179,
	158, 271, 180, 160, 250, 288, 0, 198, 259, 223,
	161, 222, 251, 287, 286, 312, 318, 319, 323, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 317, 196, 155, 300, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	316, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 207, 248, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 298, 310,
	327, 329, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 309, 0,
	0, 0, 0, 0, 325, 232, 233, 234, 235, 339,
	341, 175, 328, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 195, 201, 0,
	203, 174, 247, 197, 307, 210, 0, 239, 206, 272,
	211, 217, 260, 306, 245, 265, 172, 297, 273, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 215, 82, 256, 194, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 282, 0, 0, 0, 0, 313, 314, 315,
	299, 0, 186, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	274, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 1948,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 279, 295, 171,
	270, 308, 176, 277, 167, 243, 266, 0, 0, 164,
	293, 276, 225, 208, 209, 163, 0, 261, 187, 200,
	183, 241, 0, 292, 320, 182, 311, 0, 303, 166,
	0, 302, 240, 289, 294, 226, 220, 165, 291, 224,
	219, 212, 191, 0, 204, 252, 218, 253, 205, 230,
	229, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 305, 0, 0, 0, 1945, 0, 1944, 278,
	1946, 1949, 213, 0, 0, 0, 321, 0, 264, 246,
	0, 0, 0, 262, 216, 290, 254, 296, 280, 304,
	258, 255, 157, 281, 185, 227, 168, 169, 181, 188,
	190, 192, 193, 236, 237, 249, 269, 283, 284, 285,
	184, 177, 263, 178, 202, 179, 158, 271, 180, 160,
	250, 288, 1950, 198, 259, 223, 161, 222, 251, 287,
	286, 312, 318, 319, 323, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 317, 196, 155, 300, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 316, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 207, 248, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 298, 310, 327, 329, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 0, 0, 0, 309, 0, 0, 0, 0, 0,
	325, 232, 233, 234, 235, 199, 0, 175, 328, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 195, 201, 0, 203, 174, 247, 197,
	307, 210, 0, 239, 206, 272, 211, 217, 260, 306,
	245, 265, 172, 297, 273, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 215, 0,
	256, 194, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 282, 0,
	0, 0, 0, 313, 314, 315, 299, 0, 186, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1288, 0, 0, 0, 0, 189, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 274, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	1289, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 718, 719, 720,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 279, 295, 171, 270, 308, 176, 277,
	167, 243, 266, 0, 0, 164, 293, 276, 225, 208,
	209, 163, 0, 261, 187, 200, 183, 241, 0, 292,
	320, 182, 311, 0, 303, 166, 0, 302, 240, 289,
	294, 226, 220, 165, 291, 224, 219, 212, 191, 0,
	204, 252, 218, 253, 205, 230, 229, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 213, 0,
	0, 0, 321, 0, 264, 246, 0, 0, 0, 262,
	216, 290, 254, 296, 280, 304, 258, 255, 157, 281,
	185, 227, 168, 169, 181, 188, 190, 192, 193, 236,
	237, 249, 269, 283, 284, 285, 184, 177, 263, 178,
	202, 179, 158, 271, 180, 160, 250, 288, 0, 198,
	259, 223, 161, 222, 251, 287, 286, 312, 318, 319,
	323, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 317, 196, 155,
	300, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 316, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 207, 248, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	298, 310, 327, 329, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 0, 0,
	309, 0, 0, 0, 0, 0, 325, 232, 233, 234,
	235, 199, 0, 175, 328, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 195,
	201, 0, 203, 174, 247, 197, 307, 210, 0, 239,
	206, 272, 211, 217, 260, 306, 245, 265, 172, 297,
	273, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 215, 0, 256, 194, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 282, 0, 0, 0, 0, 313,
	314, 315, 299, 0, 186, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 608, 0, 214, 0, 0, 0, 0,
	0, 0, 274, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 616, 617, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 279,
	295, 171, 270, 308, 176, 277, 167, 243, 266, 0,
	0, 164, 293, 276, 225, 208, 209, 163, 0, 261,
	187, 200, 183, 241, 0, 292, 320, 182, 311, 594,
	303, 166, 593, 302, 240, 289, 294, 226, 220, 165,
	291, 224, 219, 212, 191, 0, 204, 252, 218, 253,
	205, 230, 229, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 213, 0, 0, 0, 321, 0,
	264, 246, 0, 0, 0, 262, 216, 290, 254, 296,
	280, 304, 606, 255, 157, 281, 185, 227, 168, 169,
	181, 188, 190, 192, 193, 236, 237, 249, 269, 283,
	284, 285, 184, 177, 263, 178, 202, 179, 158, 271,
	180, 160, 250, 288, 0, 198, 259, 223, 161, 222,
	251, 287, 286, 312, 318, 319, 323, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 317, 196, 155, 300, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 316, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 207,
	248, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 298, 310, 327, 329,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 607, 301, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 610, 232, 233, 234, 235, 199, 0, 175,
	328, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 195, 201, 0, 203, 174,
	247, 197, 307, 210, 0, 618, 613, 614, 211, 217,
	260, 306, 245, 265, 172, 297, 273, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	215, 0, 256, 194, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	109, 282, 0, 0, 0, 313, 314, 315, 299, 0,
	186, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 274,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1656, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 279, 295, 171, 270,
	308, 176, 277, 167, 243, 266, 0, 0, 164, 293,
	276, 225, 208, 209, 163, 0, 261, 187, 200, 183,
	241, 0, 292, 320, 182, 311, 0, 303, 166, 0,
	302, 240, 289, 294, 226, 220, 165, 291, 224, 219,
	212, 191, 0, 204, 252, 218, 253, 205, 230, 229,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 213, 0, 0, 0, 321, 0, 264, 246, 0,
	0, 0, 262, 216, 290, 254, 296, 280, 304, 258,
	255, 157, 281, 185, 227, 168, 169, 181, 188, 190,
	192, 193, 236, 237, 249, 269, 283, 284, 285, 184,
	177, 263, 178, 202, 179, 158, 271, 180, 160, 250,
	288, 0, 198, 259, 223, 161, 222, 251, 287, 286,
	312, 318, 319, 323, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	317, 196, 155, 300, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 316, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 207, 248, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 298, 310, 327, 329, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 325,
	232, 233, 234, 235, 199, 0, 175, 328, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 195, 201, 0, 203, 174, 247, 197, 307,
	210, 0, 239, 206, 272, 211, 217, 260, 306, 245,
	265, 172, 297, 273, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 215, 82, 256,
	194, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 0, 1243, 1244,
	109, 282, 313, 314, 315, 299, 0, 186, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 274,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 1299, 0,
	115, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 279, 295, 171, 270,
	308, 176, 277, 167, 243, 266, 0, 0, 164, 293,
	276, 225, 208, 209, 163, 0, 261, 187, 200, 183,
	241, 0, 292, 320, 182, 311, 0, 303, 166, 0,
	302, 240, 289, 294, 226, 220, 165, 291, 224, 219,
	212, 191, 0, 204, 252, 218, 253, 205, 230, 229,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 213, 0, 0, 0, 321, 0, 264, 246, 0,
	0, 0, 262, 216, 290, 254, 296, 280, 304, 258,
	255, 157, 281, 185, 227, 168, 169, 181, 188, 190,
	192, 193, 236, 237, 249, 269, 283, 284, 285, 184,
	177, 263, 178, 202, 179, 158, 271, 180, 160, 250,
	288, 0, 198, 259, 223, 161, 222, 251, 287, 286,
	312, 318, 319, 323, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	317, 196, 155, 300, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 316, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 207, 248, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 298, 310, 327, 329, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 325,
	232, 233, 234, 235, 199, 0, 175, 328, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 195, 201, 0, 203, 174, 247, 197, 307,
	210, 0, 239, 206, 272, 211, 217, 260, 306, 245,
	265, 172, 297, 273, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 215, 82, 256,
	194, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 282, 0, 0,
	0, 0, 313, 314, 315, 299, 0, 186, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 274, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 616, 617, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 279, 295, 171, 270, 308, 176, 277, 167,
	243, 266, 0, 0, 164, 293, 276, 225, 208, 209,
	163, 0, 261, 187, 200, 183, 241, 0, 292, 320,
	182, 311, 594, 303, 166, 593, 302, 240, 289, 294,
	226, 220, 165, 291, 224, 219, 212, 191, 0, 204,
	252, 218, 253, 205, 230, 229, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 213, 0, 0,
	0, 321, 0, 264, 246, 0, 0, 0, 262, 216,
	290, 254, 296, 280, 304, 258, 255, 157, 281, 185,
	227, 168, 169, 181, 188, 190, 192, 193, 236, 237,
	249, 269, 283, 284, 285, 184, 177, 263, 178, 202,
	179, 158, 271, 180, 160, 250, 288, 0, 198, 259,
	223, 161, 222, 251, 287, 286, 312, 318, 319, 323,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 317, 196, 155, 300,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 316, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 207, 248, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 298,
	310, 327, 329, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 325, 232, 233, 234, 235,
	199, 0, 175, 328, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 195, 201,
	0, 203, 174, 247, 197, 307, 210, 0, 618, 613,
	614, 211, 217, 260, 306, 245, 265, 172, 297, 273,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 215, 0, 256, 194, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 282, 0, 0, 0, 0, 313, 314,
	315, 299, 0, 186, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 274, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 279, 295,
	171, 270, 308, 176, 277, 167, 243, 266, 0, 0,
	164, 293, 276, 225, 208, 209, 163, 0, 261, 187,
	200, 183, 241, 0, 292, 320, 182, 311, 0, 303,
	166, 0, 302, 240, 289, 294, 226, 220, 165, 291,
	224, 219, 212, 191, 0, 204, 252, 218, 253, 205,
	230, 229, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 213, 0, 0, 0, 321, 0, 264,
	246, 0, 0, 0, 262, 216, 290, 254, 296, 280,
	304, 258, 255, 157, 281, 185, 227, 168, 169, 181,
	188, 190, 192, 193, 236, 237, 249, 269, 283, 284,
	285, 184, 177, 263, 178, 202, 179, 158, 271, 180,
	160, 250, 288, 0, 198, 259, 223, 161, 222, 251,
	287, 286, 312, 318, 319, 323, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 0, 317, 196, 155, 300, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 316, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 207, 248,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 298, 310, 327, 329, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 325, 232, 233, 234, 235, 199, 0, 175, 328,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 195, 201, 0, 203, 174, 247,
	197, 307, 210, 0, 239, 206, 272, 211, 217, 260,
	306, 245, 265, 172, 297, 273, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 215,
	0, 256, 194, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 282,
	1243, 1244, 0, 0, 313, 314, 315, 299, 0, 186,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 949, 0,
	214, 0, 0, 0, 0, 0, 0, 274, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 947, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 945, 0,
	0, 0, 0, 162, 279, 295, 171, 270, 308, 176,
	277, 167, 243, 266, 0, 0, 164, 293, 276, 225,
	208, 209, 163, 0, 261, 187, 200, 183, 241, 0,
	292, 320, 182, 311, 0, 303, 166, 0, 302, 240,
	289, 294, 226, 220, 165, 291, 224, 219, 212, 191,
	0, 204, 252, 218, 253, 205, 230, 229, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 213,
	0, 0, 0, 321, 0, 264, 246, 0, 0, 0,
	262, 216, 290, 254, 296, 280, 304, 258, 255, 157,
	281, 185, 227, 168, 169, 181, 188, 190, 192, 193,
	236, 237, 249, 269, 283, 284, 285, 184, 177, 263,
	178, 202, 179, 158, 271, 180, 160, 250, 288, 0,
	198, 259, 223, 161, 222, 251, 287, 286, 312, 318,
	319, 323, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 317, 196,
	155, 300, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 316, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 207, 248, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 298, 310, 327, 329, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 0, 0,
	0, 309, 0, 0, 0, 0, 0, 325, 232, 233,
	234, 235, 199, 0, 175, 328, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	195, 201, 0, 203, 174, 247, 197, 307, 210, 0,
	239, 206, 272, 211, 217, 260, 306, 245, 265, 172,
	297, 273, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 215, 0, 256, 194, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 282, 0, 0, 0, 0,
	313, 314, 315, 299, 0, 186, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 943, 0, 214, 0, 0, 0,
	0, 0, 0, 274, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 947, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 945, 0, 0, 0, 0, 162,
	279, 295, 171, 270, 308, 176, 277, 167, 243, 266,
	0, 0, 164, 293, 276, 225, 208, 209, 163, 0,
	261, 187, 200, 183, 241, 0, 292, 320, 182, 311,
	0, 303, 166, 0, 302, 240, 289, 294, 226, 220,
	165, 291, 224, 219, 212, 191, 0, 204, 252, 218,
	253, 205, 230, 229, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 213, 0, 0, 0, 321,
	0, 264, 246, 0, 0, 0, 262, 216, 290, 254,
	296, 280, 304, 258, 255, 157, 281, 185, 227, 168,
	169, 181, 188, 190, 192, 193, 236, 237, 249, 269,
	283, 284, 285, 184, 177, 263, 178, 202, 179, 158,
	271, 180, 160, 250, 288, 0, 198, 259, 223, 161,
	222, 251, 287, 286, 312, 318, 319, 323, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 317, 196, 155, 300, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 316,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	207, 248, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 298, 310, 327,
	329, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 325, 232, 233, 234, 235, 199, 0,
	175, 328, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 195, 201, 0, 203,
	174, 247, 197, 307, 210, 0, 239, 206, 272, 211,
	217, 260, 306, 245, 265, 172, 297, 273, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 215, 0, 256, 194, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 282, 0, 0, 0, 0, 313, 314, 315, 299,
	0, 186, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 274,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2423, 0,
	115, 478, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 279, 295, 171, 270,
	308, 176, 277, 167, 243, 266, 0, 0, 164, 293,
	276, 225, 208, 209, 163, 0, 261, 187, 200, 183,
	241, 0, 292, 320, 182, 311, 0, 303, 166, 0,
	302, 240, 289, 294, 226, 220, 165, 291, 224, 219,
	212, 191, 0, 204, 252, 218, 253, 205, 230, 229,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 213, 0, 0, 0, 321, 0, 264, 246, 0,
	0, 0, 262, 216, 290, 254, 296, 280, 304, 258,
	255, 157, 281, 185, 227, 168, 169, 181, 188, 190,
	192, 193, 236, 237, 249, 269, 283, 284, 285, 184,
	177, 263, 178, 202, 179, 158, 271, 180, 160, 250,
	288, 0, 198, 259, 223, 161, 222, 251, 287, 286,
	312, 318, 319, 323, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	317, 196, 155, 300, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 316, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 207, 248, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 298, 310, 327, 329, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 325,
	232, 233, 234, 235, 199, 0, 175, 328, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 195, 201, 0, 203, 174, 247, 197, 307,
	210, 0, 239, 206, 272, 211, 217, 260, 306, 245,
	265, 172, 297, 273, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 215, 0, 256,
	194, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 282, 0, 0,
	0, 0, 313, 314, 315, 299, 0, 186, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 274, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 947,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 945, 0, 0, 0,
	0, 162, 279, 295, 171, 270, 308, 176, 277, 167,
	243, 266, 0, 0, 164, 293, 276, 225, 208, 209,
	163, 0, 261, 187, 200, 183, 241, 0, 292, 320,
	182, 311, 0, 303, 166, 0, 302, 240, 289, 294,
	226, 220, 165, 291, 224, 219, 212, 191, 0, 204,
	252, 218, 253, 205, 230, 229, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 213, 0, 0,
	0, 321, 0, 264, 246, 0, 0, 0, 262, 216,
	290, 254, 296, 280, 304, 258, 255, 157, 281, 185,
	227, 168, 169, 181, 188, 190, 192, 193, 236, 237,
	249, 269, 283, 284, 285, 184, 177, 263, 178, 202,
	179, 158, 271, 180, 160, 250, 288, 0, 198, 259,
	223, 161, 222, 251, 287, 286, 312, 318, 319, 323,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 317, 196, 155, 300,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 316, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 207, 248, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 298,
	310, 327, 329, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 325, 232, 233, 234, 235,
	199, 0, 175, 328, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 195, 201,
	0, 203, 174, 247, 197, 307, 210, 0, 239, 206,
	272, 211, 217, 260, 306, 245, 265, 172, 297, 273,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 215, 0, 256, 194, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 282, 0, 0, 0, 0, 313, 314,
	315, 299, 0, 186, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 274, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 947, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 0, 0, 162, 279, 295,
	171, 270, 308, 176, 277, 167, 243, 266, 0, 0,
	164, 293, 276, 225, 208, 209, 163, 0, 261, 187,
	200, 183, 241, 0, 292, 320, 182, 311, 0, 303,
	166, 0, 302, 240, 289, 294, 226, 220, 165, 291,
	224, 219, 212, 191, 0, 204, 252, 218, 253, 205,
	230, 229, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 213, 0, 0, 0, 321, 0, 264,
	246, 0, 0, 0, 262, 216, 290, 254, 296, 280,
	304, 258, 255, 157, 281, 185, 227, 168, 169, 181,
	188, 190, 192, 193, 236, 237, 249, 269, 283, 284,
	285, 184, 177, 263, 178, 202, 179, 158, 271, 180,
	160, 250, 288, 0, 198, 259, 223, 161, 222, 251,
	287, 286, 312, 318, 319, 323, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 0, 317, 196, 155, 300, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 316, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 207, 248,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 298, 310, 327, 329, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 325, 232, 233, 234, 235, 199, 0, 175, 328,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 195, 201, 0, 203, 174, 247,
	197, 307, 210, 0, 239, 206, 272, 211, 217, 260,
	306, 245, 265, 172, 297, 273, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 215,
	0, 256, 194, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 282,
	0, 0, 0, 0, 313, 314, 315, 299, 0, 186,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 1670, 0,
	214, 0, 0, 0, 0, 0, 0, 274, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 947, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 279, 295, 171, 270, 308, 176,
	277, 167, 243, 266, 0, 0, 164, 293, 276, 225,
	208, 209, 163, 0, 261, 187, 200, 183, 241, 0,
	292, 320, 182, 311, 0, 303, 166, 0, 302, 240,
	289, 294, 226, 220, 165, 291, 224, 219, 212, 191,
	0, 204, 252, 218, 253, 205, 230, 229, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 213,
	0, 0, 0, 321, 0, 264, 246, 0, 0, 0,
	262, 216, 290, 254, 296, 280, 304, 258, 255, 157,
	281, 185, 227, 168, 169, 181, 188, 190, 192, 193,
	236, 237, 249, 269, 283, 284, 285, 184, 177, 263,
	178, 202, 179, 158, 271, 180, 160, 250, 288, 0,
	198, 259, 223, 161, 222, 251, 287, 286, 312, 318,
	319, 323, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 317, 196,
	155, 300, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 316, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 207, 248, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 298, 310, 327, 329, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 0, 0,
	0, 309, 0, 0, 0, 0, 0, 325, 232, 233,
	234, 235, 199, 0, 175, 328, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	195, 201, 0, 203, 174, 247, 197, 307, 210, 0,
	239, 206, 272, 211, 217, 260, 306, 245, 265, 172,
	297, 273, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 215, 0, 256, 194, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 282, 0, 0, 0, 0,
	313, 314, 315, 299, 0, 186, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 274, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 478, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	279, 295, 171, 270, 308, 176, 277, 167, 243, 266,
	0, 0, 164, 293, 276, 225, 208, 209, 163, 0,
	261, 187, 200, 183, 241, 0, 292, 320, 182, 311,
	0, 303, 166, 0, 302, 240, 289, 294, 226, 220,
	165, 291, 224, 219, 212, 191, 0, 204, 252, 218,
	253, 205, 230, 229, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 213, 0, 0, 0, 321,
	0, 264, 246, 0, 0, 0, 262, 216, 290, 254,
	296, 280, 304, 258, 255, 157, 281, 185, 227, 168,
	169, 181, 188, 190, 192, 193, 236, 237, 249, 269,
	283, 284, 285, 184, 177, 263, 178, 202, 179, 158,
	271, 180, 160, 250, 288, 0, 198, 259, 223, 161,
	222, 251, 287, 286, 312, 318, 319, 323, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 317, 196, 155, 300, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 316,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	207, 248, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 298, 310, 327,
	329, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 325, 232, 233, 234, 235, 199, 0,
	175, 328, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 195, 201, 0, 203,
	174, 247, 197, 307, 210, 0, 239, 206, 272, 211,
	217, 260, 306, 245, 265, 172, 297, 273, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 215, 0, 256, 194, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 282, 0, 0, 0, 0, 313, 314, 315, 299,
	0, 186, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 274,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2182, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 279, 295, 171, 270,
	308, 176, 277, 167, 243, 266, 0, 0, 164, 293,
	276, 225, 208, 209, 163, 0, 261, 187, 200, 183,
	241, 0, 292, 320, 182, 311, 0, 303, 166, 0,
	302, 240, 289, 294, 226, 220, 165, 291, 224, 219,
	212, 191, 0, 204, 252, 218, 253, 205, 230, 229,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 213, 0, 0, 0, 321, 0, 264, 246, 0,
	0, 0, 262, 216, 290, 254, 296, 280, 304, 258,
	255, 157, 281, 185, 227, 168, 169, 181, 188, 190,
	192, 193, 236, 237, 249, 269, 283, 284, 285, 184,
	177, 263, 178, 202, 179, 158, 271, 180, 160, 250,
	288, 0, 198, 259, 223, 161, 222, 251, 287, 286,
	312, 318, 319, 323, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	317, 196, 155, 300, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 316, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 207, 248, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 298, 310, 327, 329, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 325,
	232, 233, 234, 235, 199, 0, 175, 328, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 195, 201, 0, 203, 174, 247, 197, 307,
	210, 0, 239, 206, 272, 211, 217, 260, 306, 245,
	265, 172, 297, 273, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 215, 0, 256,
	194, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 282, 0, 0,
	0, 0, 313, 314, 315, 299, 0, 186, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 274, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 279, 295, 171, 270, 308, 176, 277, 167,
	243, 266, 0, 0, 164, 293, 276, 225, 208, 209,
	163, 0, 261, 187, 200, 183, 241, 0, 292, 320,
	182, 311, 0, 303, 166, 0, 302, 240, 289, 294,
	226, 220, 165, 291, 224, 219, 212, 191, 0, 204,
	252, 218, 253, 205, 230, 229, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	0, 2367, 0, 0, 278, 0, 0, 213, 0, 0,
	0, 321, 0, 264, 246, 0, 0, 0, 262, 216,
	290, 254, 296, 280, 304, 258, 255, 157, 281, 185,
	227, 168, 169, 181, 188, 190, 192, 193, 236, 237,
	249, 269, 283, 284, 285, 184, 177, 263, 178, 202,
	179, 158, 271, 180, 160, 250, 288, 0, 198, 259,
	223, 161, 222, 251, 287, 286, 312, 318, 319, 323,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 317, 196, 155, 300,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 316, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 207, 248, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 298,
	310, 327, 329, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 325, 232, 233, 234, 235,
	199, 0, 175, 328, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 195, 201,
	0, 203, 174, 247, 197, 307, 210, 0, 239, 206,
	272, 211, 217, 260, 306, 245, 265, 172, 297, 273,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 215, 0, 256, 194, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 282, 0, 0, 0, 0, 313, 314,
	315, 299, 0, 186, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 274, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 279, 295,
	171, 270, 308, 176, 277, 167, 243, 266, 0, 0,
	164, 293, 276, 225, 208, 209, 163, 0, 261, 187,
	200, 183, 241, 0, 292, 320, 182, 311, 0, 303,
	166, 0, 302, 240, 289, 294, 226, 220, 165, 291,
	224, 219, 212, 191, 0, 204, 252, 218, 253, 205,
	230, 229, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 0, 2191, 0, 0,
	278, 0, 0, 213, 0, 0, 0, 321, 0, 264,
	246, 0, 0, 0, 262, 216, 290, 254, 296, 280,
	304, 258, 255, 157, 281, 185, 227, 168, 169, 181,
	188, 190, 192, 193, 236, 237, 249, 269, 283, 284,
	285, 184, 177, 263, 178, 202, 179, 158, 271, 180,
	160, 250, 288, 0, 198, 259, 223, 161, 222, 251,
	287, 286, 312, 318, 319, 323, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 0, 317, 196, 155, 300, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 316, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 207, 248,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 298, 310, 327, 329, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 325, 232, 233, 234, 235, 199, 0, 175, 328,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 195, 201, 0, 203, 174, 247,
	197, 307, 210, 0, 239, 206, 272, 211, 217, 260,
	306, 245, 265, 172, 297, 273, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 215,
	0, 256, 194, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 282,
	0, 0, 0, 0, 313, 314, 315, 299, 0, 186,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 274, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 279, 295, 171, 270, 308, 176,
	277, 167, 243, 266, 0, 0, 164, 293, 276, 225,
	208, 209, 163, 0, 261, 187, 200, 183, 241, 0,
	292, 320, 182, 311, 0, 303, 166, 0, 302, 240,
	289, 294, 226, 220, 165, 291, 224, 219, 212, 191,
	0, 204, 252, 218, 253, 205, 230, 229, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 213,
	0, 0, 0, 321, 0, 264, 246, 0, 0, 0,
	262, 216, 290, 254, 296, 280, 304, 258, 255, 157,
	281, 185, 227, 168, 169, 181, 188, 190, 192, 193,
	236, 237, 249, 269, 283, 284, 285, 184, 177, 263,
	178, 202, 179, 158, 271, 180, 160, 250, 288, 0,
	198, 259, 223, 161, 222, 251, 287, 286, 312, 318,
	319, 323, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 317, 196,
	155, 300, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 316, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 207, 248, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 298, 310, 327, 329, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 0, 0,
	0, 309, 0, 0, 0, 0, 0, 325, 232, 233,
	234, 235, 199, 0, 175, 328, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	195, 201, 0, 203, 174, 247, 197, 307, 210, 0,
	239, 206, 272, 211, 217, 260, 306, 245, 265, 172,
	297, 273, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 215, 0, 256, 194, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 282, 0, 0, 0, 0,
	313, 314, 315, 299, 0, 186, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 274, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	279, 295, 171, 270, 308, 176, 277, 167, 243, 266,
	0, 0, 164, 293, 276, 225, 208, 209, 163, 0,
	261, 187, 200, 183, 241, 0, 292, 320, 182, 311,
	0, 303, 166, 0, 302, 240, 289, 294, 226, 220,
	165, 291, 224, 219, 212, 191, 0, 204, 252, 218,
	253, 205, 230, 229, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 213, 0, 0, 0, 321,
	0, 264, 246, 0, 0, 0, 262, 216, 290, 254,
	296, 280, 304, 258, 255, 157, 281, 185, 227, 168,
	169, 181, 188, 190, 192, 193, 236, 237, 249, 269,
	283, 284, 285, 184, 177, 263, 178, 202, 179, 158,
	271, 180, 160, 250, 288, 0, 198, 259, 223, 161,
	222, 251, 287, 286, 312, 318, 319, 323, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 317, 196, 155, 300, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 316,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	207, 248, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 298, 310, 327,
	329, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 325, 232, 233, 234, 235, 199, 0,
	175, 328, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 195, 201, 0, 203,
	174, 247, 197, 307, 210, 0, 239, 206, 272, 211,
	217, 260, 306, 245, 265, 172, 297, 273, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 215, 0, 256, 194, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 282, 0, 0, 0, 0, 313, 314, 315, 299,
	0, 186, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 274,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 947, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 279, 295, 171, 270,
	308, 176, 277, 167, 243, 266, 0, 0, 164, 293,
	276, 225, 208, 209, 163, 0, 261, 187, 200, 183,
	241, 0, 292, 320, 182, 311, 0, 303, 166, 0,
	302, 240, 289, 294, 226, 220, 165, 291, 224, 219,
	212, 191, 0, 204, 252, 218, 253, 205, 230, 229,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 213, 0, 0, 0, 321, 0, 264, 246, 0,
	0, 0, 262, 216, 290, 254, 296, 280, 304, 258,
	255, 157, 281, 185, 227, 168, 169, 181, 188, 190,
	192, 193, 236, 237, 249, 269, 283, 284, 285, 184,
	177, 263, 178, 202, 179, 158, 271, 180, 160, 250,
	288, 0, 198, 259, 223, 161, 222, 251, 287, 286,
	312, 318, 319, 323, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	317, 196, 155, 300, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 316, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 207, 248, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 298, 310, 327, 329, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 325,
	232, 233, 234, 235, 199, 0, 175, 328, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 195, 201, 0, 203, 174, 247, 197, 307,
	210, 0, 239, 206, 272, 211, 217, 260, 306, 245,
	265, 172, 297, 273, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 215, 0, 256,
	194, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 282, 0, 0,
	0, 0, 313, 314, 315, 299, 0, 186, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 274, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 1855,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 279, 295, 171, 270, 308, 176, 277, 167,
	243, 266, 0, 0, 164, 293, 276, 225, 208, 209,
	163, 0, 261, 187, 200, 183, 241, 0, 292, 320,
	182, 311, 0, 303, 166, 0, 302, 240, 289, 294,
	226, 220, 165, 291, 224, 219, 212, 191, 0, 204,
	252, 218, 253, 205, 230, 229, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 213, 0, 0,
	0, 321, 0, 264, 246, 0, 0, 0, 262, 216,
	290, 254, 296, 280, 304, 258, 255, 157, 281, 185,
	227, 168, 169, 181, 188, 190, 192, 193, 236, 237,
	249, 269, 283, 284, 285, 184, 177, 263, 178, 202,
	179, 158, 271, 180, 160, 250, 288, 0, 198, 259,
	223, 161, 222, 251, 287, 286, 312, 318, 319, 323,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 317, 196, 155, 300,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 316, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 207, 248, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 298,
	310, 327, 329, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 325, 232, 233, 234, 235,
	199, 0, 175, 328, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 195, 201,
	0, 203, 174, 247, 197, 307, 210, 0, 239, 206,
	272, 211, 217, 260, 306, 245, 265, 172, 297, 273,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 215, 0, 256, 194, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 282, 0, 0, 0, 0, 313, 314,
	315, 299, 0, 186, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 274, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 279, 295,
	171, 270, 308, 176, 277, 167, 243, 266, 0, 0,
	164, 293, 276, 225, 208, 209, 163, 0, 261, 187,
	200, 183, 241, 0, 292, 320, 182, 311, 0, 303,
	166, 0, 302, 240, 289, 294, 226, 220, 165, 291,
	224, 219, 212, 191, 0, 204, 252, 218, 253, 205,
	230, 229, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 213, 0, 0, 0, 321, 0, 264,
	246, 0, 0, 0, 262, 216, 290, 254, 296, 280,
	304, 258, 255, 157, 281, 185, 227, 168, 169, 181,
	188, 190, 192, 193, 236, 237, 249, 269, 283, 284,
	285, 184, 177, 263, 178, 202, 179, 158, 271, 180,
	160, 250, 288, 0, 198, 259, 223, 161, 222, 251,
	287, 286, 312, 318, 319, 323, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 0, 317, 196, 155, 300, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 316, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 207, 248,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 298, 310, 327, 329, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 325, 232, 233, 234, 235, 199, 0, 175, 328,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 195, 201, 0, 203, 174, 247,
	197, 307, 210, 0, 239, 206, 272, 211, 217, 260,
	306, 245, 265, 172, 297, 273, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 215,
	0, 256, 194, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 282,
	0, 0, 0, 0, 313, 314, 315, 299, 0, 186,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 274, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 1678, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 279, 295, 171, 270, 308, 176,
	277, 167, 243, 266, 0, 0, 164, 293, 276, 225,
	208, 209, 163, 0, 261, 187, 200, 183, 241, 0,
	292, 320, 182, 311, 0, 303, 166, 0, 302, 240,
	289, 294, 226, 220, 165, 291, 224, 219, 212, 191,
	0, 204, 252, 218, 253, 205, 230, 229, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 213,
	0, 0, 0, 321, 0, 264, 246, 0, 0, 0,
	262, 216, 290, 254, 296, 280, 304, 258, 255, 157,
	281, 185, 227, 168, 169, 181, 188, 190, 192, 193,
	236, 237, 249, 269, 283, 284, 285, 184, 177, 263,
	178, 202, 179, 158, 271, 180, 160, 250, 288, 0,
	198, 259, 223, 161, 222, 251, 287, 286, 312, 318,
	319, 323, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 317, 196,
	155, 300, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 316, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 207, 248, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 298, 310, 327, 329, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 0, 0,
	0, 309, 0, 0, 0, 0, 0, 325, 232, 233,
	234, 235, 199, 0, 175, 328, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	195, 201, 0, 203, 174, 247, 197, 307, 210, 0,
	239, 206, 272, 211, 217, 260, 306, 245, 265, 172,
	297, 273, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 215, 0, 256, 194, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 282, 0, 0, 0, 1605,
	313, 314, 315, 299, 0, 186, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 274, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	279, 295, 171, 270, 308, 176, 277, 167, 243, 266,
	0, 0, 164, 293, 276, 225, 208, 209, 163, 0,
	261, 187, 200, 183, 241, 0, 292, 320, 182, 311,
	0, 303, 166, 0, 302, 240, 289, 294, 226, 220,
	165, 291, 224, 219, 212, 191, 0, 204, 252, 218,
	253, 205, 230, 229, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 213, 0, 0, 0, 321,
	0, 264, 246, 0, 0, 0, 262, 216, 290, 254,
	296, 280, 304, 258, 255, 157, 281, 185, 227, 168,
	169, 181, 188, 190, 192, 193, 236, 237, 249, 269,
	283, 284, 285, 184, 177, 263, 178, 202, 179, 158,
	271, 180, 160, 250, 288, 0, 198, 259, 223, 161,
	222, 251, 287, 286, 312, 318, 319, 323, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 317, 196, 155, 300, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 316,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	207, 248, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 298, 310, 327,
	329, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 325, 232, 233, 234, 235, 199, 0,
	175, 328, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 195, 201, 0, 203,
	174, 247, 197, 307, 210, 0, 239, 206, 272, 211,
	217, 260, 306, 245, 265, 172, 297, 273, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 215, 0, 256, 194, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 282, 0, 0, 0, 0, 313, 314, 315, 299,
	0, 186, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 274,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 279, 295, 171, 270,
	308, 176, 277, 167, 243, 266, 0, 0, 164, 293,
	276, 225, 208, 209, 163, 0, 261, 187, 200, 183,
	241, 0, 292, 320, 182, 311, 0, 303, 166, 0,
	302, 240, 289, 294, 226, 220, 165, 291, 224, 219,
	212, 191, 0, 204, 252, 218, 253, 205, 230, 229,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 1588, 0, 0, 0, 278, 0,
	0, 213, 0, 0, 0, 321, 0, 264, 246, 0,
	0, 0, 262, 216, 290, 254, 296, 280, 304, 258,
	255, 157, 281, 185, 227, 168, 169, 181, 188, 190,
	192, 193, 236, 237, 249, 269, 283, 284, 285, 184,
	177, 263, 178, 202, 179, 158, 271, 180, 160, 250,
	288, 0, 198, 259, 223, 161, 222, 251, 287, 286,
	312, 318, 319, 323, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	317, 196, 155, 300, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 316, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 207, 248, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 298, 310, 327, 329, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 325,
	232, 233, 234, 235, 199, 0, 175, 328, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 195, 201, 0, 203, 174, 247, 197, 307,
	210, 0, 239, 206, 272, 211, 217, 260, 306, 245,
	265, 172, 297, 273, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 215, 0, 256,
	194, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 282, 0, 0,
	0, 0, 313, 314, 315, 299, 0, 186, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 274, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 279, 295, 171, 270, 308, 176, 277, 167,
	243, 266, 0, 0, 164, 293, 276, 225, 208, 209,
	163, 0, 261, 187, 200, 183, 241, 0, 292, 320,
	182, 311, 0, 303, 166, 0, 302, 240, 289, 294,
	226, 220, 165, 291, 224, 219, 212, 191, 0, 204,
	252, 218, 253, 205, 230, 229, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 213, 0, 0,
	0, 321, 0, 264, 246, 0, 0, 0, 262, 216,
	290, 254, 296, 280, 304, 258, 255, 157, 281, 185,
	227, 168, 169, 181, 188, 190, 192, 193, 236, 237,
	249, 269, 283, 284, 285, 184, 177, 263, 178, 202,
	179, 158, 271, 180, 160, 250, 288, 0, 198, 259,
	223, 161, 222, 251, 287, 286, 312, 318, 319, 323,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 317, 196, 155, 300,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 316, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 207, 248, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 298,
	310, 327, 329, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 325, 232, 233, 234, 235,
	199, 0, 175, 328, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 195, 201,
	0, 203, 174, 247, 197, 307, 210, 0, 239, 206,
	272, 211, 217, 260, 306, 245, 265, 172, 297, 273,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 0, 0,
	0, 156, 0, 215, 0, 256, 194, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 282, 0, 0, 0, 0, 313, 314,
	315, 299, 0, 186, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 274, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 279, 295,
	171, 270, 308, 176, 277, 167, 243, 266, 0, 0,
	164, 293, 276, 225, 208, 209, 163, 0, 261, 187,
	200, 183, 241, 0, 292, 320, 182, 311, 0, 303,
	166, 0, 302, 240, 289, 294, 226, 220, 165, 291,
	224, 219, 212, 191, 0, 204, 252, 218, 253, 205,
	230, 229, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 213, 0, 0, 0, 321, 0, 264,
	246, 0, 0, 0, 262, 216, 290, 254, 296, 280,
	304, 355, 255, 157, 281, 185, 227, 168, 169, 181,
	188, 190, 192, 193, 236, 237, 249, 269, 283, 284,
	285, 184, 177, 263, 178, 202, 179, 158, 271, 180,
	160, 250, 288, 0, 198, 259, 223, 161, 222, 251,
	287, 286, 312, 318, 319, 323, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 0, 317, 196, 155, 300, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 316, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 207, 248,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 298, 310, 327, 329, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	356, 301, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 325, 232, 233, 234, 235, 199, 0, 175, 328,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 195, 201, 0, 203, 174, 247,
	197, 307, 210, 0, 239, 206, 272, 211, 217, 260,
	306, 245, 265, 172, 297, 273, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 215,
	0, 256, 194, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 282,
	0, 0, 0, 0, 313, 314, 315, 299, 0, 186,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 274, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 279, 295, 171, 270, 308, 176,
	277, 167, 243, 266, 0, 0, 164, 293, 276, 225,
	208, 209, 163, 0, 261, 187, 200, 183, 241, 0,
	292, 320, 182, 311, 0, 303, 166, 0, 302, 240,
	289, 294, 226, 220, 165, 291, 224, 219, 212, 191,
	0, 204, 252, 218, 253, 205, 230, 229, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 213,
	0, 0, 0, 321, 0, 264, 246, 0, 0, 0,
	262, 216, 290, 254, 296, 280, 304, 258, 255, 157,
	281, 185, 227, 168, 169, 181, 188, 190, 192, 193,
	236, 237, 249, 269, 283, 284, 285, 184, 177, 263,
	178, 202, 179, 158, 271, 180, 160, 250, 288, 0,
	198, 259, 223, 161, 222, 251, 287, 286, 312, 318,
	319, 323, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 317, 196,
	155, 300, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 316, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 207, 248, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 298, 310, 327, 329, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 0, 0,
	0, 309, 0, 0, 0, 0, 0, 325, 232, 233,
	234, 235, 199, 0, 175, 328, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	195, 201, 0, 203, 174, 247, 197, 307, 210, 0,
	239, 206, 272, 211, 217, 260, 306, 245, 265, 172,
	297, 273, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 215, 0, 256, 194, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 282, 0, 0, 0, 0,
	313, 314, 315, 299, 0, 186, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 189, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 274, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	279, 295, 171, 270, 308, 176, 277, 167, 243, 266,
	0, 0, 164, 293, 276, 225, 208, 209, 163, 0,
	261, 187, 200, 183, 241, 0, 292, 320, 182, 311,
	0, 303, 166, 0, 302, 240, 289, 294, 226, 220,
	165, 291, 224, 219, 212, 191, 0, 204, 252, 218,
	253, 205, 230, 229, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 213, 0, 0, 0, 321,
	0, 264, 246, 0, 0, 0, 262, 216, 290, 254,
	296, 280, 304, 258, 255, 157, 281, 185, 227, 168,
	169, 181, 188, 190, 192, 193, 236, 237, 249, 269,
	283, 284, 285, 184, 177, 263, 178, 202, 179, 158,
	271, 180, 160, 250, 288, 0, 198, 259, 223, 161,
	222, 251, 287, 286, 312, 318, 319, 323, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 317, 196, 155, 300, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 316,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	207, 248, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 298, 310, 327,
	329, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 325, 232, 233, 234, 235, 199, 0,
	175, 328, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 195, 201, 0, 203,
	174, 247, 197, 307, 210, 0, 239, 206, 272, 211,
	217, 260, 306, 245, 265, 172, 297, 273, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 215, 0, 256, 194, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 282, 0, 0, 0, 0, 313, 314, 315, 299,
	0, 186, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 274,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 279, 295, 171, 270,
	308, 176, 277, 167, 243, 266, 0, 0, 164, 293,
	276, 225, 208, 209, 163, 0, 261, 187, 200, 183,
	241, 0, 292, 320, 182, 311, 0, 303, 166, 0,
	302, 240, 289, 294, 226, 220, 165, 291, 224, 219,
	212, 191, 0, 204, 252, 218, 253, 205, 230, 229,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 213, 0, 0, 0, 321, 0, 264, 246, 0,
	0, 0, 262, 216, 290, 254, 296, 280, 304, 258,
	255, 157, 281, 185, 227, 168, 169, 181, 188, 190,
	192, 193, 236, 237, 249, 269, 283, 284, 285, 184,
	177, 263, 178, 202, 179, 158, 271, 180, 160, 250,
	288, 0, 198, 259, 223, 161, 222, 251, 287, 286,
	312, 318, 319, 323, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	317, 196, 155, 300, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 316, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 207, 248, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 298, 310, 327, 329, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 325,
	232, 233, 234, 235, 199, 0, 175, 328, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 195, 201, 0, 203, 174, 247, 197, 307,
	210, 0, 239, 206, 272, 211, 217, 260, 306, 245,
	265, 172, 297, 273, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 215, 0, 256,
	194, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 282, 0, 0,
	0, 0, 313, 314, 315, 299, 0, 186, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 189, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 274, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1197, 1198, 1199, 1649,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 279, 295, 171, 270, 308, 176, 277, 167,
	243, 266, 0, 0, 164, 293, 276, 225, 208, 209,
	163, 0, 261, 187, 200, 183, 241, 0, 292, 320,
	182, 311, 0, 303, 166, 0, 302, 240, 289, 294,
	226, 220, 165, 291, 224, 219, 212, 191, 0, 204,
	252, 218, 253, 205, 230, 229, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 213, 0, 0,
	0, 321, 0, 264, 246, 0, 0, 0, 262, 216,
	290, 254, 296, 280, 304, 258, 255, 157, 281, 185,
	227, 168, 169, 181, 188, 190, 192, 193, 236, 237,
	249, 269, 283, 284, 285, 184, 177, 263, 178, 202,
	179, 158, 271, 180, 160, 250, 288, 0, 198, 259,
	223, 161, 222, 251, 287, 286, 312, 318, 319, 323,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 317, 196, 155, 300,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 316, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 207, 248, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 298,
	310, 327, 329, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 325, 232, 233, 234, 235,
	199, 0, 175, 328, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 322, 195, 201,
	0, 203, 174, 247, 197, 307, 210, 244, 239, 206,
	272, 211, 217, 260, 306, 245, 265, 172, 297, 273,
	221, 0, 0, 0, 189, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 274, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1197, 1198, 1199, 1649, 0,
	0, 156, 170, 215, 0, 256, 194, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 314,
	315, 299, 0, 186, 0, 0, 0, 0, 0, 0,
	162, 279, 295, 171, 270, 308, 176, 277, 167, 243,
	266, 0, 0, 164, 293, 276, 225, 208, 209, 163,
	0, 261, 187, 200, 183, 241, 0, 292, 320, 182,
	311, 0, 303, 166, 0, 302, 240, 289, 294, 226,
	220, 165, 291, 224, 219, 212, 191, 0, 204, 252,
	218, 253, 205, 230, 229, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 213, 0, 0, 0,
	321, 0, 264, 246, 0, 0, 0, 262, 216, 290,
	254, 296, 280, 304, 258, 255, 157, 281, 185, 227,
	168, 169, 181, 188, 190, 192, 193, 236, 237, 249,
	269, 283, 284, 285, 184, 177, 263, 178, 202, 179,
	158, 271, 180, 160, 250, 288, 0, 198, 259, 223,
	161, 222, 251, 287, 286, 312, 318, 319, 323, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 317, 196, 155, 300, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	316, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 207, 248, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 298, 310,
	327, 329, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 309, 0,
	0, 0, 0, 0, 325, 232, 233, 234, 235, 199,
	0, 175, 328, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 322, 195, 201, 0,
	203, 174, 247, 197, 307, 210, 244, 239, 206, 272,
	211, 217, 260, 306, 245, 265, 172, 297, 273, 221,
	0, 0, 0, 189, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 274, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1197, 1198, 1199, 0, 0, 0,
	156, 170, 215, 0, 256, 194, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 315,
	299, 0, 186, 0, 0, 0, 0, 0, 0, 162,
	279, 295, 171, 270, 308, 176, 277, 167, 243, 266,
	0, 0, 164, 293, 276, 225, 208, 209, 163, 0,
	261, 187, 200, 183, 241, 0, 292, 320, 182, 311,
	0, 303, 166, 0, 302, 240, 289, 294, 226, 220,
	165, 291, 224, 219, 212, 191, 0, 204, 252, 218,
	253, 205, 230, 229, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 213, 0, 0, 0, 321,
	0, 264, 246, 0, 0, 0, 262, 216, 290, 254,
	296, 280, 304, 258, 255, 157, 281, 185, 227, 168,
	169, 181, 188, 190, 192, 193, 236, 237, 249, 269,
	283, 284, 285, 184, 177, 263, 178, 202, 179, 158,
	271, 180, 160, 250, 288, 0, 198, 259, 223, 161,
	222, 251, 287, 286, 312, 318, 319, 323, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 317, 196, 155, 300, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 316,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	207, 248, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 298, 310, 327,
	329, 825, 0, 0, 159, 0, 0, 718, 719, 720,
	717, 0, 0, 301, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 325, 232, 233, 234, 235, 199, 0,
	175, 328, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 195, 201, 0, 203,
	174, 247, 197, 307, 210, 825, 239, 206, 272, 211,
	217, 260, 306, 245, 265, 172, 297, 273, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1096, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	0, 813, 0, 0, 0, 1096, 0, 0, 0, 156,
	0, 215, 0, 256, 194, 0, 0, 0, 0, 833,
	837, 839, 841, 843, 844, 846, 0, 850, 847, 848,
	849, 0, 0, 828, 829, 830, 831, 811, 812, 834,
	0, 814, 0, 815, 816, 817, 818, 819, 820, 821,
	822, 823, 824, 826, 832, 813, 313, 314, 315, 299,
	592, 186, 836, 838, 840, 842, 845, 0, 0, 0,
	0, 0, 0, 833, 837, 839, 841, 843, 844, 846,
	0, 850, 847, 848, 849, 0, 0, 828, 829, 830,
	831, 811, 812, 834, 0, 814, 827, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 826, 832, 0,
	0, 0, 0, 0, 0, 0, 836, 838, 840, 842,
	845, 1092, 0, 0, 1089, 0, 0, 0, 1091, 1088,
	1090, 1094, 1095, 0, 0, 0, 1093, 0, 0, 594,
	0, 0, 593, 0, 1092, 0, 0, 1089, 0, 0,
	827, 1091, 1088, 1090, 1094, 1095, 0, 0, 2138, 1093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	0, 0, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 0,
	0, 0, 0, 1723, 1724, 0, 0, 0, 0, 2550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2120,
	0, 0, 0, 0, 0, 0, 0, 2138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1077,
	1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
	1099, 1100, 1101, 1102, 1103, 1104, 1097, 1098, 0, 0,
	0, 1603, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1099, 1100, 1101, 1102, 1103, 1104, 1097,
	1098, 0, 0, 0, 0, 587, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 375, 0, 374, 381, 371, 835, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 379, 0, 380,
	384, 0, 0, 366, 0, 0, 0, 0, 0, 0,
	583, 588, 0, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 2124, 576, 0, 578, 591, 0, 0, 0,
	575, 573, 572, 2128, 577, 0, 589, 590, 0, 0,
	0, 835, 393, 0, 0, 394, 0, 0, 585, 586,
	0, 0, 0, 2117, 0, 0, 0, 2119, 2121, 2123,
	0, 2125, 2126, 2127, 2129, 2130, 2131, 2133, 2134, 2135,
	2136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2139, 2124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2117, 0, 0, 2137, 2119, 2121, 2123, 0,
	2125, 2126, 2127, 2129, 2130, 2131, 2133, 2134, 2135, 2136,
	0, 0, 2116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 374, 381, 371, 367, 369, 368, 0, 0, 2139,
	0, 2132, 373, 378, 379, 0, 380, 384, 2122, 0,
	366, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	389, 392, 0, 0, 0, 0, 0, 375, 370, 374,
	381, 371, 361, 0, 2137, 0, 0, 0, 0, 0,
	0, 378, 379, 0, 380, 384, 0, 2146, 366, 393,
	0, 2116, 394, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2156, 0, 0, 0, 0, 0, 0, 0, 0,
	2132, 0, 0, 0, 2149, 0, 0, 2122, 0, 0,
	2144, 0, 0, 0, 0, 2159, 2160, 0, 0, 0,
	0, 2145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 376, 382, 0,
	383, 385, 0, 0, 386, 387, 388, 0, 0, 390,
	391, 0, 0, 0, 0, 0, 2150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 369, 368, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 367,
	369, 368, 2158, 0, 1944, 0, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 2152,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2151, 2153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 372, 376, 382, 0, 383, 385, 0,
	0, 386, 387, 388, 0, 0, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2161, 0, 0, 0, 0,
	0, 372, 376, 382, 0, 383, 385, 2147, 0, 386,
	387, 388, 0, 2157, 390, 391,
}

var yyPact = [...]int{
	281, -1000, -305, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22544, -1000, -1000, 1468, -1000, 22058, 8445, 23030,
	110, 23030, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 351, -1000, 21572,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 318, 25032, 210,
	192, 6480, 23030, -288, -1000, 2150, -1000, -1000, -1000, -1000,
	237, 390, 21086, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 24693, 39, 390,
	473, 484, 638, 638, 9903, 2150, 229, 106, -1000, 567,
	281, 306, 23030, -1000, 893, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2150, 2150, -1000, 23030, 23030, -56, 987,
	-1000, 221, 213, 212, 892, -1000, -1000, -1000, -1000, 2078,
	-1000, 23030, 1728, 23030, -1000, 1250, 263, 25219, 1903, 882,
	416, 1745, -1000, -1000, 1703, -1000, 63, 89, 93, 164,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 79, -1000, 1971,
	-1000, -1000, 56, -1000, -1000, 46, -1000, -1000, -1000, -107,
	-1000, -1000, -1000, -1000, -1000, -173, -173, 572, 1115, 6480,
	-1000, 1125, -1000, 1719, -1000, -1000, -1000, -1000, 4027, 7947,
	7947, 7947, 7947, -1000, -1000, 1573, 6480, 1701, 1700, -1000,
	-1000, -1000, -1000, -1000, 890, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7458, -1000, 1698,
	1696, 1695, 1693, 1685, 1683, 1673, 1671, 1670, 1669, 1666,
	1496, 1663, 1374, 1372, 1654, 1653, 1649, 7947, 1364, 1496,
	1496, 1648, 1647, 1645, 1635, 1633, 1631, 1630, 1628, 1627,
	1626, 1624, 1623, 1621, 1618, 1614, 1609, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1276, -1000, 884, 888, -1000, 1608, 1865, 2011, 1526,
	2056, 2029, 2007, 1976, 1972, 40, 317, 317, 317, 345,
	317, 350, -1000, -1000, -1000, -1000, -1000, -1000, 410, -1000,
	-1000, -1000, -1000, 748, 23030, -1000, 1536, 2002, 269, 907,
	224, 279, 2011, 2011, -72, -124, 907, 907, -124, 50,
	-1000, -1000, -1000, 1033, 225, 1033, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1962, 1960, 318, 318, 327, -1000, -187,
	-1000, -1000, 465, -1000, 439, -1000, 1250, 250, 247, 759,
	1031, -1000, 942, 23030, 23030, 23030, 942, 942, 12824, 12338,
	-1000, 2011, 1526, -1000, 1481, 1578, 1526, 318, 318, 318,
	318, 318, 318, 318, 23030, 5494, 5494, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 218, 1600, -1000, 23030, 2011,
	1865, 2011, -1000, -1000, 881, 1230, 1363, -1000, -1000, 221,
	941, -1000, 668, -1000, -1000, -1000, -1000, 23030, 205, -1000,
	1349, 1597, -1000, 326, 836, 730, -1000, 72, 25257, 18170,
	1250, 18170, 23030, -1000, -1000, -1000, -1000, -1000, -1000, -114,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -68, -1000, -68, 6480, 6480, 6480, 6480,
	6480, -1000, 338, 6969, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7947, 7947, 7947, 7947, 7947, 7947, 7947, 7947, 7947,
	7947, 7947, 7947, 1570, 948, 7947, 7947, 7947, 1578, 2115,
	757, -1000, -1000, -1000, -1000, -1000, 1006, 1115, 6480, 6480,
	23030, 24537, 6480, 6480, 24560, 6480, 1963, 1963, 3040, 23030,
	6480, -1000, 1480, 1478, -1000, -1000, 1144, 6480, -1000, -1000,
	6480, 7947, 6480, -1000, -1000, -1000, -1000, 49, 1963, 6480,
	6480, 1963, 1963, 1963, 1010, 1963, 1963, 1963, 1963, 1963,
	1963, 1963, 1358, 23030, 1825, 24, -1000, -1000, -1000, 1522,
	-1000, 1546, 1546, 1522, 1522, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1596, 1594, -1000, -1000, 1522, 1544,
	1544, 1522, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1574, 1574, 1583,
	1574, 23030, 2011, -288, 5005, -1000, -292, 1865, 6480, -1000,
	-1000, 6480, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	342, 317, -1000, 1393, 1029, 18170, 1250, 1247, 23030, 317,
	327, -1000, 23030, 748, 1947, 23030, 18170, 1033, 2068, 7947,
	1033, -1000, -1000, -1000, 907, 907, -1000, -1000, -1000, -1000,
	1033, 1033, -1000, -1000, -115, 2068, 2068, -128, 23030, 23030,
	317, 23030, -1000, -1000, -1000, -1000, 23030, -1000, -1000, 1393,
	18170, 11852, -1000, -146, 471, 441, 450, -1000, -1000, 320,
	299, 11366, 248, 18170, 3529, -1000, -1000, 942, 942, 942,
	3529, 3529, 789, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1865, -1000, -1000, -1000, -1000, 1393, 18170, 1250, 23030, 23030,
	23030, 24274, -1000, 709, -1000, -1000, 9417, 878, 709, 1744,
	-290, -1000, 10880, 23030, 23030, -1000, 1865, -1000, 1865, 2569,
	-1000, 1992, -1000, 221, 107, -1000, -1000, -1000, -1000, -1000,
	-1000, 874, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 743, -1000, 23030, -1000, -1000, 72, 18170, 968, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 113, -1000, -1000, 132,
	-1000, 340, -21, 938, -1000, -1000, 42, 128, 42, 1115,
	-1000, 1019, 1019, 1032, -1000, 375, -1000, -1000, -1000, -1000,
	1573, -1000, -1000, -1000, 1138, 1735, -1000, 974, 974, 901,
	901, 901, 901, 901, 996, 996, -1000, -1000, -1000, 4027,
	1570, 7947, 7947, 7947, 287, 2275, 2323, -1000, 6480, 1003,
	-1000, 6480, 1266, 657, 865, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1477, 572, 1474, 1189, 2077,
	1470, 6480, -1000, -1000, 6480, 1202, 5991, -1000, -1000, -1000,
	1449, 863, 1445, -1000, -1000, -1000, 1444, 580, 1441, 1262,
	1440, 740, 6480, 937, 934, 6480, 6480, 6480, 6480, 1439,
	6480, 6480, 6480, 6480, 6480, 6480, 6480, 732, -1000, 6480,
	21, -1000, -1000, -1000, -1000, 1224, -1000, 1218, -1000, -1000,
	-1000, 1350, 1350, -1000, -1000, 1212, -1000, -1000, -1000, 1209,
	-1000, -1000, 1207, -1000, -1000, -1000, -1000, 931, -1000, 1115,
	-1000, 1345, -1000, 754, 725, -1000, 1071, 20600, 23030, 12,
	-1000, 1879, 739, -1000, -21, 574, 1727, -1000, -1000, -1000,
	1793, 23030, 20114, -1000, 1562, 919, -1000, 1718, 23030, -1000,
	6480, -1000, 23030, 2068, 2068, 907, 24274, 1033, 23030, 1033,
	-1000, -1000, 1033, -1000, 853, -1000, 23030, -1000, -1000, -1000,
	-1000, 12, 739, 2293, 602, -1000, -1000, -1000, -1000, 1943,
	23516, 10390, 23516, 1560, 1558, -1000, -1000, 453, 430, 437,
	-1000, -1000, 339, -1000, -1000, 574, -1000, -1000, -1000, 1557,
	980, -1000, -1000, 7947, -1000, 3529, 3529, 3529, -1000, -1000,
	14768, -1000, -1000, 717, 574, 1742, 704, -1000, 704, -1000,
	-1000, -1000, 2068, 5494, -1000, 11852, -1000, -1000, 19628, -1000,
	19142, 2068, -1000, 1832, 575, -1000, 1551, -1000, 915, 1777,
	-1000, 550, -1000, 977, 913, -1000, -1000, -1000, -1000, 852,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -62,
	-1000, -1000, 23030, 1349, 897, 968, 596, -1000, 329, 838,
	798, -1000, 18170, 58, 18170, -1000, 18170, -1000, -1000, 223,
	-1000, 23030, 1863, -1000, -1000, -1000, 1336, 1837, -1000, -1000,
	-1000, -1000, -1000, 886, -1000, 287, 2275, 2209, -1000, 7947,
	7947, 2062, 990, -1000, 6480, 1046, 24591, 1375, 13796, 23030,
	-1000, -1000, 6480, 6480, -1000, 2030, 2023, -1000, 6480, 6480,
	1176, -1000, 23030, -1000, -1000, -1000, 13796, -1000, 7947, -1000,
	6480, 1990, -1000, -1000, 1937, 1928, 1908, 885, -1000, 1892,
	1851, 1842, 1802, 1798, 1756, 1710, 1335, 1115, -1000, -1000,
	1438, 1436, 876, -1000, 861, 1435, 860, 859, 5005, -1000,
	-137, 6480, 6480, 6480, 1782, -1000, -1000, 1536, 1016, 1548,
	-98, 964, -1000, 341, 18170, 222, -1000, 1741, 179, -1000,
	1793, -1000, 414, -1000, 1547, 23030, 676, -1000, 790, 281,
	-1000, 23030, -1000, 1250, 907, 1115, 2068, -1000, -1000, 2068,
	-1000, 907, -1000, 907, 1033, 23030, -1000, -98, 341, 23030,
	11852, 11852, 11852, 11852, -1000, 1766, 1764, -1000, 1816, 1814,
	1884, 23030, 11852, 23030, -1000, -1000, -1000, 23895, -1000, -1000,
	-1000, -1000, 858, 1432, 2150, 1868, 10390, 487, 18656, 6480,
	-1000, -1000, -1000, 421, 18170, 1334, 248, -1000, -1000, -1000,
	-1000, -1000, 23030, 23030, 2060, -1000, 632, -1000, -1000, 780,
	-1000, 2060, 1059, -290, 5005, 219, 23030, -290, 23030, 5005,
	-1000, 23030, 2569, 1205, -1000, -1000, -1000, 2073, 18170, 1250,
	918, 958, -1000, 43, -1000, 112, 285, 1332, -1000, 349,
	975, 347, -1000, -1000, 7947, -1000, -1000, -1000, -1000, 1115,
	6480, 1431, -1000, 409, 409, 1430, -1000, 1522, 1546, -1000,
	1522, 1544, 1522, 409, 409, 1428, -1000, 1153, 1616, -1000,
	-1000, 1587, 1579, 6480, -1000, 1426, 2131, 682, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1424, -1000, -1000, -1000, 1331, -1000, -1000, -1000, 1199, -1000,
	1196, -1000, -97, -80, 1115, 1115, -1000, -1000, 1886, 1923,
	1872, 8931, 1139, -1000, -1000, 1329, -1000, 273, -1000, -1000,
	-1000, 348, 48, 1195, 265, -1000, 1391, 23030, -1000, -1000,
	-1000, -1000, -1000, 964, 964, 964, 8931, 306, 569, 778,
	11852, 23030, -1000, 17198, 1423, -1000, 574, 2068, -1000, -1000,
	2068, 2068, 907, -1000, 1139, 273, 705, -1000, 973, 1715,
	1740, 1715, -1000, -1000, -1000, -1000, 1757, -1000, 1746, -1000,
	-1000, 705, -1000, 1536, -1000, -1000, -1000, 1421, -1000, 487,
	-1000, 1986, 485, 485, 485, 846, 835, 834, -1000, 596,
	1420, -1000, -1000, -1000, -1000, 2032, 2055, 17684, 2032, 2088,
	-1000, 1412, 592, -290, -1000, -1000, 575, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1250, -1000, 111, -1000, -1000,
	-1000, -1000, -1000, -1000, -40, -1000, 23030, 1328, 23030, -1000,
	1115, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 6480, -1000, -1000, -1000,
	1490, -1000, -1000, 6480, -1000, -1000, 1409, 1408, -294, -71,
	2054, 2052, -1000, -1000, 229, 23030, 1407, 578, -1000, -1000,
	-1000, 24645, 446, -1000, 23030, 1054, 485, 317, 485, 1044,
	1543, -1000, -1000, -1000, 1327, -29, -1000, -1000, 1326, 1322,
	1194, -1000, -1000, 1161, 803, -9, -1000, -1000, -1000, -1000,
	-1000, -1000, 1541, 13796, 14282, 1321, 1406, 23516, 11852, 17198,
	625, -1000, 762, -1000, -1000, -1000, -1000, -1000, 2068, -1000,
	-1000, 2024, 23030, 5005, -1000, -1000, 6480, 1538, -1000, 6480,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1537, 1936, -1000,
	-1000, -1000, -1000, 1320, -1000, 1318, -1000, -1000, -1000, 6480,
	6480, -1000, -1000, 23030, -1000, 575, 574, -1000, -1000, -128,
	66, -128, 1476, -1000, 1460, -1000, -1000, -297, 1317, -1000,
	2051, 1316, 1272, -1000, 1536, 24951, 8931, 25247, -1000, -1000,
	23030, 23030, -1000, 23030, 23030, 317, 6480, -1000, -1000, 193,
	-1000, -1000, 83, -1000, -1000, 1160, 300, -1000, 15740, -1000,
	-1000, -1000, -1000, -1000, -68, 2068, 625, 762, -1000, -1000,
	914, -1000, 2011, -1000, -1000, 1115, 23030, 1115, 16712, -1000,
	2050, 2048, 829, 822, 1115, 572, 550, -1000, -99, -48,
	-1000, 1301, -1000, -1000, -1000, -299, 1175, -1000, 1298, -75,
	-1000, -1000, 1918, 291, 1269, -1000, 964, 964, 477, 964,
	964, 964, 964, 190, 188, 964, 964, 964, 964, 964,
	964, 964, 964, 964, 964, 964, 964, 964, 964, 1534,
	-1000, -1000, 25247, -1000, -1000, 1070, 7947, -1000, -1000, 1293,
	14282, 448, 472, 1531, -1000, 162, 2086, -1000, 1043, 1038,
	-1000, 23030, -1000, 1529, 1708, 121, 1527, -1000, 1524, 1523,
	23030, 1394, 282, 1291, -1000, -1000, 82, -1000, -1000, 821,
	-1000, 1522, 6480, -1000, -128, 2024, -1000, -1000, 817, 802,
	-1000, -1000, -1000, -1000, -1000, 1082, -1000, 1073, 325, -93,
	-48, -1000, 2047, -86, 2046, 2044, 971, -1000, 1511, -1000,
	-1000, 2042, 229, -1000, 2033, 24951, -1000, 1173, 1172, 964,
	964, 1171, 1290, 1289, 1287, 964, 964, 1169, 1282, 23895,
	1158, 1148, 1136, 1146, 1281, 481, 1145, 1137, 1132, 23030,
	1508, 1271, -1000, -1000, 2275, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1121, 1507, -167, -1000,
	-1000, 1506, 15740, 233, 233, 15740, 15740, 15740, 1505, 353,
	-1000, -43, -1000, -1000, -1000, 15740, 1911, 1324, -1000, 2011,
	-1000, -1000, 16226, 1405, 1404, 1398, 1397, 1497, 1119, -71,
	2028, -1000, 1272, 2026, 1272, 1272, 1280, 23030, 1272, -1000,
	155, -1000, -1000, -1000, 13796, 13796, -1000, -1000, -1000, -1000,
	1279, 1277, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 198, 23030, 799, -1000, 967, 1396,
	6480, 1496, -233, 15740, 786, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 785, 782, 781, 15740, -1000, -1000, -1000, 154,
	-1000, 160, -1000, -1000, 1911, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1957, 13310, -81, -1000, 1274, -1000, 1272, -1000,
	-1000, 65, 774, -1000, -1000, 133, 215, 208, -1000, 301,
	-1000, -1000, -1000, -1000, -1000, -1000, 235, 750, -1000, 1271,
	1270, -1000, 1220, -1000, 1733, -1000, 4, 737, -1000, -1000,
	-1000, -1000, 734, -1000, -1000, 964, 1267, 105, -1000, -1000,
	-1000, -1000, 23030, -1000, 731, -1000, -1000, -1000, 761, -1000,
	-1000, -1000, -1000, -1000, 1264, -1000, 23030, 127, 1117, 7947,
	1493, 7947, 1492, 140, 1489, -1000, -1000, -1000, -1000, -1000,
	353, -1000, 1732, 1275, 2072, -1000, -1000, -1000, -1000, 160,
	160, 160, 160, 52, 1116, -1000, 1247, 497, -1000, 963,
	-1000, 15254, 23030, 960, -1000, 1488, 2020, -1000, 2022, 23030,
	1847, 23030, 1487, 947, 7947, -1000, -1000, 2083, -1000, 2081,
	419, 419, -1000, -1000, -1000, 23030, 4516, -1000, 568, 1242,
	-1000, 288, 137, -1000, 669, -1000, 661, 23030, 1093, 1761,
	-1000, -1000, -1000, 1128, 167, -1000, -1000, -1000, 1115, 23030,
	64, 652, -1000, 1390, 123, -1000, -1000, 651, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1241, -1000, 288, 1775, -1000,
	1077, -1000, 943, -1000, 24872, 429, -1000, 1120, -1000, 24872,
	126, -1000, 274, 1330, -317, -1000, -1000, 650, -1000, 1352,
	463, 6480, -1000, -1000, 126, 24951, -1000, 6480, 604, -1000,
	24951, 579, -1000, -1000,
}

var yyPgo = [...]int{
	0, 119, 2540, 193, 131, 129, 191, 2539, 2538, 1986,
	1978, 2537, 2536, 2535, 2533, 2532, 2531, 2530, 2528, 2526,
	2525, 2524, 2523, 2522, 2521, 2519, 2518, 2515, 187, 2514,
	2513, 2512, 2511, 2509, 2505, 2503, 2502, 2501, 2500, 2499,
	2498, 2497, 2496, 2495, 2494, 125, 2493, 1920, 2492, 2484,
	2483, 2481, 2478, 172, 2477, 2476, 2475, 2469, 2467, 2466,
	2465, 2464, 2463, 2462, 2461, 2460, 2459, 2458, 2457, 2456,
	2455, 2454, 179, 163, 51, 2453, 46, 56, 109, 188,
	100, 194, 196, 135, 117, 62, 2452, 2451, 2450, 114,
	171, 112, 24, 2436, 127, 2435, 106, 44, 28, 189,
	108, 48, 65, 92, 2434, 2432, 80, 2427, 2426, 89,
	2425, 53, 2424, 68, 52, 86, 27, 2423, 2422, 2420,
	75, 2419, 2418, 2417, 2415, 128, 2414, 93, 61, 2413,
	2412, 2411, 2408, 2407, 32, 2406, 47, 2405, 2404, 2403,
	2386, 2385, 2384, 2383, 12, 16, 18, 2382, 15, 3,
	2380, 166, 84, 77, 103, 2379, 371, 2377, 2373, 2372,
	115, 2371, 533, 2370, 2367, 2366, 2365, 2364, 9, 2362,
	153, 2361, 2360, 2359, 49, 141, 152, 2358, 2357, 97,
	35, 58, 96, 2355, 2354, 64, 164, 20, 70, 0,
	148, 34, 2351, 2345, 2343, 202, 151, 146, 175, 81,
	192, 118, 2342, 2341, 59, 2340, 120, 2339, 107, 87,
	2321, 134, 2317, 37, 144, 2315, 159, 2314, 181, 2,
	104, 26, 238, 2312, 2311, 2310, 133, 2309, 2304, 78,
	123, 2303, 2300, 2299, 25, 2297, 31, 19, 2296, 72,
	2290, 180, 2289, 156, 95, 142, 124, 110, 169, 173,
	66, 111, 1055, 102, 71, 17, 2287, 170, 2286, 197,
	190, 2282, 145, 2281, 184, 346, 158, 2280, 137, 8,
	2277, 2275, 7, 2274, 22, 2273, 2272, 2271, 2270, 6,
	2262, 2261, 2260, 1, 4, 2259, 5, 157, 43, 91,
	2258, 94, 185, 2245, 2244, 2243, 2241, 2239, 309, 2238,
	2237, 2236, 2235, 2233, 2232, 2229, 2228, 76, 36, 2227,
	2226, 2224, 2223, 69, 99, 2222, 260, 161, 2218, 41,
	2217, 2215, 23, 2213, 30, 2212, 2211, 2210, 13, 138,
	2209, 2203, 14, 2201, 2200, 10, 11, 2182, 2177, 54,
	2174, 45, 29, 67, 63, 2173, 21, 55, 98, 2172,
	2170, 183, 178, 155, 2167, 121, 174, 186, 2166, 162,
	2165, 2164, 2163, 2150, 2149, 2136, 2133, 1092, 2132, 2131,
	177, 50, 168, 2129, 2127, 143, 2125, 116, 88, 82,
	154, 2124, 140, 2119, 2117, 79, 2112, 2106, 2105, 2104,
	176, 149, 2103, 2102,
}

//line mysql_sql.y:7907
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 388, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 62,
	61, 338, 338, 337, 337, 336, 336, 335, 335, 335,
	334, 334, 334, 333, 333, 332, 332, 331, 331, 329,
	329, 330, 328, 327, 327, 327, 325, 325, 323, 323,
	324, 324, 318, 318, 321, 321, 319, 319, 319, 319,
	322, 317, 317, 317, 316, 316, 60, 60, 60, 254,
	254, 59, 59, 268, 268, 268, 268, 268, 266, 266,
	266, 266, 266, 266, 265, 265, 264, 264, 269, 269,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	54, 54, 54, 54, 57, 57, 57, 58, 263, 263,
	263, 55, 56, 56, 253, 253, 258, 258, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	262, 262, 262, 260, 260, 259, 259, 261, 261, 48,
	48, 48, 51, 50, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 49, 49, 49, 49, 49, 49, 46,
	46, 46, 46, 46, 45, 45, 47, 47, 251, 251,
	250, 65, 65, 65, 65, 65, 65, 65, 64, 64,
	67, 67, 66, 53, 53, 53, 53, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 362, 362, 362, 364,
	364, 193, 194, 389, 192, 192, 192, 358, 358, 359,
	360, 361, 361, 361, 63, 7, 7, 43, 44, 382,
	382, 298, 298, 206, 206, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 301, 302, 202, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 34, 34, 240,
	240, 33, 390, 390, 176, 176, 32, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 42, 312, 312, 392,
	392, 392, 40, 41, 297, 297, 297, 38, 37, 36,
	35, 35, 31, 31, 30, 30, 199, 199, 201, 201,
	197, 391, 391, 274, 274, 200, 200, 29, 29, 29,
	198, 198, 175, 196, 196, 196, 8, 8, 6, 11,
	11, 11, 11, 11, 11, 11, 11, 17, 19, 248,
	248, 245, 18, 14, 13, 16, 12, 15, 5, 5,
	5, 5, 9, 9, 10, 84, 84, 115, 115, 371,
	371, 367, 367, 368, 368, 368, 369, 369, 370, 370,
	4, 305, 305, 305, 305, 305, 305, 306, 306, 347,
	347, 347, 348, 105, 105, 100, 100, 307, 307, 220,
	349, 349, 315, 315, 314, 314, 313, 313, 103, 103,
	104, 104, 87, 87, 73, 73, 320, 320, 320, 320,
	326, 326, 295, 295, 141, 141, 171, 171, 172, 172,
	77, 77, 78, 78, 78, 78, 78, 78, 355, 355,
	357, 357, 356, 102, 102, 98, 98, 99, 99, 99,
	97, 97, 96, 95, 95, 94, 92, 92, 92, 93,
	93, 93, 80, 80, 79, 79, 79, 79, 79, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 81, 81, 363, 363, 363, 299, 299, 299, 304,
	304, 153, 153, 154, 154, 152, 152, 82, 82, 83,
	83, 83, 83, 151, 151, 150, 85, 85, 91, 90,
	90, 86, 86, 86, 86, 161, 161, 160, 160, 160,
	160, 70, 71, 71, 72, 108, 108, 159, 158, 158,
	158, 107, 107, 106, 106, 101, 101, 89, 89, 89,
	89, 157, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 393, 393, 155, 387, 387, 386, 386, 385, 383,
	383, 383, 384, 384, 384, 384, 340, 340, 340, 340,
	340, 185, 185, 185, 191, 191, 184, 184, 184, 184,
	184, 195, 190, 190, 186, 186, 187, 187, 187, 3,
	3, 3, 3, 23, 23, 23, 23, 27, 27, 365,
	365, 20, 372, 375, 373, 376, 376, 376, 377, 377,
	377, 378, 378, 21, 374, 379, 379, 379, 249, 249,
	246, 247, 247, 244, 243, 243, 243, 381, 381, 380,
	380, 380, 188, 188, 22, 239, 239, 241, 242, 242,
	233, 233, 233, 233, 26, 237, 237, 238, 238, 238,
	238, 238, 234, 234, 236, 236, 232, 232, 232, 232,
	232, 25, 231, 231, 229, 229, 227, 227, 228, 228,
	226, 226, 226, 230, 230, 24, 24, 75, 74, 74,
	74, 74, 74, 76, 300, 300, 270, 270, 273, 273,
	280, 280, 281, 281, 279, 279, 286, 286, 285, 285,
	284, 284, 283, 283, 282, 282, 282, 282, 277, 277,
	276, 276, 271, 271, 271, 271, 271, 272, 272, 275,
	275, 278, 278, 132, 132, 133, 133, 133, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 345, 345, 346,
	135, 135, 135, 139, 139, 139, 139, 139, 139, 134,
	134, 136, 136, 116, 116, 114, 114, 109, 109, 110,
	110, 111, 111, 112, 112, 113, 113, 113, 113, 113,
	113, 256, 256, 343, 343, 344, 344, 339, 339, 339,
	342, 342, 342, 342, 342, 341, 341, 117, 169, 169,
	169, 189, 189, 189, 168, 168, 168, 131, 131, 130,
	130, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 255, 255, 203, 203,
	204, 204, 148, 147, 147, 147, 147, 147, 145, 146,
	144, 144, 144, 144, 144, 143, 143, 142, 142, 142,
	235, 235, 140, 140, 138, 138, 138, 137, 137, 137,
	287, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 212, 212, 217, 217, 354,
	354, 353, 118, 118, 118, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 127, 127, 127, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 311, 311, 311, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 167, 366,
	366, 366, 350, 350, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 165, 165, 165, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 221,
	221, 222, 222, 308, 308, 308, 308, 308, 308, 309,
	309, 310, 310, 310, 310, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 210, 162, 162, 162, 223, 218,
	218, 219, 219, 213, 213, 213, 213, 213, 213, 213,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	214, 214, 216, 216, 225, 225, 225, 224, 224, 224,
	224, 224, 224, 224, 129, 129, 129, 129, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 120, 120,
	120, 120, 124, 124, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 125, 125,
	125, 125, 123, 123, 123, 123, 123, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 68, 69, 69, 122, 170, 170, 288,
	288, 291, 291, 289, 289, 290, 292, 292, 292, 293,
	293, 293, 294, 294, 294, 296, 296, 174, 174, 174,
	181, 181, 173, 173, 182, 182, 183, 183, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 9,
	9, 0, 2, 1, 3, 3, 3, 1, 3, 5,
	0, 2, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 0, 3, 3, 0, 3, 0, 3,
	0, 3, 0, 2, 1, 2, 3, 4, 3, 3,
	1, 0, 1, 1, 0, 1, 8, 5, 7, 0,
	3, 8, 5, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 4, 1, 3,
	1, 2, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 2, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 3, 3, 2, 4, 4, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 2, 2, 0, 1, 4, 2, 4, 1,
	5, 3, 2, 1, 2, 2, 4, 4, 5, 2,
	1, 3, 4, 4, 1, 2, 9, 7, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 2,
	1, 1, 1, 1, 6, 1, 1, 7, 7, 0,
	3, 0, 2, 0, 1, 1, 1, 1, 4, 2,
	2, 3, 3, 4, 5, 3, 4, 4, 2, 2,
	2, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 5, 0,
	2, 7, 0, 1, 0, 1, 4, 1, 1, 1,
	3, 2, 3, 1, 1, 1, 6, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	6, 7, 4, 4, 7, 8, 0, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	3, 1, 4, 6, 4, 4, 4, 3, 1, 1,
	2, 2, 11, 8, 9, 1, 3, 2, 4, 0,
	2, 0, 1, 1, 1, 1, 0, 1, 0, 1,
	5, 2, 1, 5, 4, 4, 2, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 4, 3, 4, 5, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 4, 2,
	3, 3, 4, 6, 8, 8, 4, 6, 8, 8,
	4, 0, 1, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 8, 11, 0,
	1, 7, 1, 4, 1, 3, 4, 3, 0, 1,
	1, 0, 2, 7, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 5, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 10, 9, 2, 2, 6,
	10, 14, 18, 5, 0, 1, 0, 6, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 6, 5, 0,
	3, 0, 1, 0, 1, 1, 3, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 4, 1, 3, 3,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 2, 1, 7, 7, 7, 7, 8,
	5, 0, 1, 0, 1, 1, 1, 1, 3, 3,
	1, 1, 1, 1, 1, 0, 1, 3, 1, 3,
	5, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 2, 2,
	2, 1, 5, 6, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 5, 4, 4,
	5, 5, 5, 5, 4, 5, 5, 5, 5, 5,
	5, 5, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 5, 4, 6, 6, 7, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 8, 4, 2, 3, 2,
	4, 6, 2, 2, 4, 6, 4, 2, 2, 0,
	1, 2, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -388, -2, -1, -3, -4, -5, -6, -8, -52,
	-64, -66, -67, -28, -7, -63, -45, -46, -48, -54,
	-59, -60, -61, -62, -68, -69, -70, -77, -23, -22,
	-21, -20, 12, -9, -10, -355, -11, 229, -192, -193,
	-194, -389, -29, -30, -31, -35, -36, -37, -38, -40,
	-41, -42, -32, -33, -34, -44, -43, 206, -47, 61,
	-49, -50, -51, -55, -56, -57, -58, 320, 326, 379,
	388, 507, 508, 46, -78, -80, -24, -25, -26, -27,
	202, 14, 458, -12, -15, -13, -16, -14, -18, -19,
	-17, 224, 223, 37, 286, 287, 324, 222, 203, 13,
	135, 136, 138, 139, 30, -79, 67, 204, -81, 10,
	509, -87, 38, -114, -189, 70, -177, -180, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 428, 302, 455, 241, 265, 350,
	268, 275, 135, 154, 148, 176, 168, 143, 245, 246,
	77, 138, 411, 87, 396, 376, 141, 260, 262, 264,
	267, 247, 164, 159, 259, 243, 507, 157, 248, 39,
	249, 181, 250, 251, 460, 392, 301, 398, 272, 374,
	158, 393, 263, 395, 183, 187, 403, 326, 152, 153,
	400, 405, 180, 221, 42, 457, 233, 406, 185, 179,
	175, 414, 276, 274, 178, 151, 174, 244, 50, 189,
	188, 190, 370, 371, 372, 373, 252, 253, 314, 402,
	171, 160, 305, 144, 22, 409, 228, 397, 327, 254,
	269, 277, 184, 186, 235, 240, 459, 378, 239, 273,
	407, 156, 232, 261, 227, 410, 145, 320, 329, 255,
	139, 266, 404, 413, 49, 342, 150, 142, 218, 136,
	237, 242, 11, 256, 257, 258, 279, 278, 270, 172,
	234, 177, 162, 149, 173, 137, 236, 412, 343, 505,
	303, 359, 170, 167, 238, 211, 408, 399, 140, 363,
	344, 165, 280, 502, 503, 504, 315, 300, 281, 282,
	163, 225, 391, 283, 285, 369, 293, 345, 377, 346,
	-47, -10, -9, -79, -80, -114, 209, -196, 23, 374,
	-53, 375, 206, 67, -189, -5, -4, -45, -77, -195,
	-189, 286, -195, 209, -189, 239, 358, -298, 214, -265,
	-239, 240, -264, -241, -267, -242, 31, 202, 204, 203,
	236, 14, 324, 210, 12, 10, 325, 222, 24, 25,
	27, 13, 326, 328, 28, 329, 332, 333, 334, 41,
	337, 338, 229, 70, 73, 247, 247, -219, -213, 94,
	230, -215, -208, -209, -211, -335, -329, -207, 67, 119,
	120, 127, 95, -210, -287, 35, 97, 465, 426, -163,
	-164, -165, -166, -167, -189, -330, -328, 73, 78, 81,
	84, 85, 83, 82, 161, 80, 74, 132, -80, 70,
	-350, 473, -178, 493, 474, 492, 46, -303, -310, 208,
	-308, 166, 225, 162, 12, 125, 369, 130, 163, 470,
	489, 428, 496, 467, 468, 462, 463, 464, 466, 475,
	477, 488, -311, 484, 494, 495, 497, 72, 71, 487,
	486, 471, 472, 478, 461, 469, 479, 480, 485, 490,
	491, 498, 499, 308, 87, 309, 310, 418, 304, 311,
	214, 374, 55, 312, 313, 314, 315, 316, 425, 317,
	56, 318, 307, 229, 359, 319, 165, 182, 430, 429,
	431, 422, 419, 417, 420, 421, 423, 424, 481, 482,
	483, -261, -259, -189, -71, -72, 500, -96, -97, -156,
	19, 6, 7, 8, 9, -300, 302, 359, 239, -233,
	-231, 283, 335, 219, 218, 88, 418, 208, -367, -368,
	199, 200, 201, -357, 451, -356, -189, 26, 209, -39,
	-312, -297, 399, 398, -200, 397, 390, 401, 392, 202,
	452, -174, 345, 377, 235, 415, 416, 322, 378, 403,
	404, 393, 87, 169, 166, 302, 359, -367, 140, 137,
	-252, 140, 93, 145, 144, -252, 239, 358, 40, -258,
	369, -257, -259, 403, 404, 414, 71, 72, 402, -174,
	87, -97, -156, -96, -78, -80, -355, 302, 359, 239,
	210, 209, 211, 418, 286, -299, -363, 31, -304, 196,
	197, 198, 32, 33, -1, -103, 231, -114, 133, -97,
	-96, -97, -114, -168, -189, 376, 103, -53, -53, 375,
	-358, -359, -360, -362, 206, 375, 374, 133, 15, -195,
	65, -114, -241, 239, -265, -239, 35, 64, 134, 212,
	134, 64, 67, 322, 302, 359, 323, 418, 209, 335,
	211, 239, 336, 302, 359, 209, 211, 418, 239, 302,
	209, 211, 359, 239, 336, 390, 391, 211, 26, 327,
	330, 331, 391, -316, 414, -316, 134, 93, 90, 91,
	92, -213, 110, -224, 103, 104, 105, 106, 107, 108,
	109, 116, 115, 126, 119, 120, 121, 122, 123, 124,
	125, 117, 118, 113, 94, 111, 112, 96, -80, -213,
	-219, -211, -211, -211, -211, -287, -217, -213, 67, 67,
	133, -213, 67, 67, 67, 67, 67, 67, 67, 67,
	67, -309, 67, 67, -221, -222, 67, 67, 73, 73,
	67, 67, 67, -211, 73, -222, -222, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 134, -120, -124, -121, -123, -122, -126,
	-125, 166, 167, 130, 170, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 30, 182, 225, 162, 163,
	164, 165, 183, 148, 168, 456, 191, 149, 192, 150,
	193, 151, 194, 152, 153, 195, 154, 157, 158, 159,
	156, 133, -97, 134, 67, -73, 38, -99, 21, -81,
	-80, 20, 31, 32, 31, 32, 31, 32, 31, 32,
	-365, 209, 451, -229, 214, -229, -229, 210, -229, 209,
	-369, 147, 134, -357, -102, 67, 23, 237, -199, 111,
	-392, 210, 400, 42, 238, 237, -98, -99, -98, 394,
	391, -274, 395, 396, -200, -199, -199, -200, 209, 211,
	418, -390, -391, 15, 113, 237, -390, 30, 30, -298,
	-298, -370, 213, 407, 458, 143, 144, 145, -241, 239,
	239, 134, 103, 23, -260, 103, 114, -259, -259, -259,
	-260, -260, -134, 40, -188, 130, -189, 73, -134, 40,
	-98, -81, -80, 68, 68, -298, -298, -298, -298, -298,
	-298, -298, -195, -82, -83, 121, -213, -189, -82, -305,
	46, -77, 67, 30, 67, -189, -98, -73, -99, 133,
	78, 73, -53, 68, 134, -361, 84, 85, -364, 180,
	172, -189, -65, 73, -3, -4, -5, -6, -28, -45,
	-77, -331, -329, 67, 31, 368, 64, 15, -266, 209,
	418, 321, 235, 211, 302, -264, -248, -245, -243, -188,
	-241, -244, -243, -269, -168, 391, -74, 380, -74, -213,
	-213, -213, -213, -213, 83, 94, 300, 84, 85, -208,
	-225, 31, 281, 282, -209, -209, -209, -209, -209, -209,
	-209, -209, -209, -209, -209, -209, -216, -223, -287, 67,
	113, 111, 112, 96, -211, -209, -209, 68, 134, -354,
	-353, 98, -213, -213, -189, -351, -352, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 312, 307,
	313, 311, 304, 319, 314, 315, 165, 449, 450, 443,
	444, 445, 446, 447, 448, -218, -219, -218, -213, -351,
	-218, -162, 32, 31, -162, -213, -366, 298, 297, 299,
	-100, -189, -218, 68, 68, 68, 78, -219, -218, -209,
	-218, -352, -162, -219, -219, -162, -162, -162, -162, 121,
	-162, -162, -162, -162, -162, -162, -162, 73, -259, 40,
	-294, 343, 342, -288, -290, 67, -289, 67, -289, -288,
	-288, 67, 67, -288, -291, 67, -291, -288, -292, 67,
	-292, -293, 67, -292, -189, -98, -72, -314, -313, -213,
	40, 501, -73, -213, -95, -94, -213, 211, -229, -372,
	70, 94, -249, -246, -243, -239, -187, 70, 71, 72,
	-189, -229, -370, -356, 34, -101, -189, -243, -390, -152,
	16, -211, -391, -199, -199, -201, -391, -197, -391, 391,
	-152, -152, -274, -198, -189, -198, -229, -176, -175, -189,
	-176, -372, -249, -90, -85, -89, -86, -91, -155, -157,
	-88, 67, -114, 498, 499, 408, 409, 141, 144, 143,
	31, 368, -263, 368, 31, -239, -257, -253, 73, 369,
	-244, -262, 64, 130, -313, -260, -260, -260, -262, -262,
	129, -73, -372, -248, -239, -189, -116, -114, -116, -190,
	-187, -180, -151, 134, -150, 15, -184, -189, 34, 73,
	133, -151, -306, 64, -307, -220, -349, 500, -105, 68,
	-100, -347, -348, -100, -104, -189, -73, -73, -182, -183,
	-173, -179, -186, -187, -180, 207, 31, 93, 34, 36,
	308, 340, 96, 130, 20, 97, 166, 129, 310, 426,
	309, 202, 59, 429, 431, 430, 419, 417, 361, 365,
	367, 364, 418, 390, 40, 14, 37, 223, 32, 33,
	123, 204, 100, 101, 226, 35, 224, 85, 44, 23,
	62, 15, 17, 18, 311, 360, 214, 213, 113, 380,
	210, 57, 12, 132, 38, 110, 362, 53, 89, 45,
	55, 111, 21, 420, 421, 41, 379, 388, 454, 230,
	125, 312, 313, 60, 94, 368, 83, 43, 64, 90,
	19, 58, 112, 205, 425, 56, 366, 316, 318, 328,
	451, 317, 208, 401, 10, 307, 427, 30, 222, 54,
	209, 99, 212, 84, 229, 6, 88, 13, 61, 65,
	422, 423, 424, 46, 98, 16, 319, 458, 381, 382,
	383, 384, 385, 386, 387, 191, 192, 193, 194, 195,
	271, 217, 215, 219, 220, 500, 501, 196, 197, 297,
	299, 169, 199, 200, 201, 231, 147, 7, 347, 348,
	349, 352, 353, 354, 355, 356, 357, 358, 508, 23,
	-53, -359, 133, 134, -101, -266, -247, -244, -268, 121,
	70, -254, 134, 458, 510, 71, 212, -381, -380, 360,
	68, 134, -317, 213, 425, 73, 511, -317, 83, 300,
	84, 85, -287, -219, -216, -211, -209, -209, -214, 226,
	93, -213, -212, -353, 100, -213, 34, 134, 65, 133,
	68, 68, 15, 15, 68, -213, -213, 68, 15, 15,
	-213, 68, 133, 68, 68, 68, 65, 68, 134, 68,
	134, -213, 68, 68, -213, -213, -213, -219, 68, -213,
	-213, -213, -213, -213, -213, -213, 134, -213, -296, 344,
	78, 78, -170, 73, -170, 78, 78, 78, 134, 68,
	73, 134, 22, 134, -92, 36, 37, -114, 214, -114,
	-375, 347, 35, -382, 134, 40, -380, -232, 65, -227,
	-228, -226, -230, 40, -114, 15, -84, -115, -189, 67,
	68, 134, -240, 65, -176, -213, -114, -152, -152, -199,
	-190, -201, -196, -201, -197, 133, -175, -375, -382, 30,
	-158, -159, -160, -161, 53, 57, 59, 54, 55, 56,
	60, 30, 134, -393, 34, -185, -191, 34, -186, 73,
	-187, -180, -85, -78, -80, -90, 67, -185, 67, 67,
	142, 145, 145, 144, 212, 67, 103, -262, -262, -262,
	40, -188, 64, 134, -152, -83, -85, -189, 73, -189,
	121, -152, 39, 134, 67, 68, 134, 46, 134, 103,
	68, 134, 133, 376, -189, -329, 68, -268, 134, 212,
	133, 133, -245, 326, -188, -247, 20, 458, -168, 38,
	73, 38, 68, -214, 93, -211, -208, 68, 101, -213,
	99, -118, -120, 342, 343, -119, -125, 130, 166, 225,
	165, 164, 162, 342, 343, -134, -189, -213, -213, 68,
	68, -213, -213, 15, -189, -134, -209, -213, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	73, 68, 68, 68, 134, 68, 68, 68, 134, 68,
	134, -313, -320, 395, -213, -213, -94, -93, 43, -102,
	94, 67, -377, 397, 349, -181, 103, -206, -205, 303,
	41, -301, 369, 355, 356, -246, 239, 64, 292, 293,
	294, 295, -226, -174, 129, 250, 67, -114, -84, -189,
	15, 134, -371, 133, -1, -189, -239, -199, -152, -152,
	-199, -199, -201, -189, -377, -206, -251, -250, -168, -89,
	-89, -89, -89, 53, 53, 53, 58, 53, 58, 53,
	-160, -251, -91, -189, -191, 68, 68, -78, -387, -386,
	-385, -383, 61, 213, 62, 73, -168, -219, 145, -247,
	-202, 73, -253, -114, -114, -154, 17, 133, -154, 89,
	-220, -315, -314, 46, -77, -100, -307, -348, -313, -189,
	-182, -179, -187, -180, 78, 15, -244, -239, 121, 121,
	70, 327, -254, 73, 348, 73, 209, 103, 209, -208,
	-213, 68, -127, 153, 152, -127, 68, -288, -289, -288,
	-291, -288, -127, -127, 68, 68, 23, 68, 68, 68,
	-213, 68, 68, 134, 68, 73, 78, 78, -326, 386,
	381, 383, 44, 45, 34, 35, -109, -110, -111, -117,
	-112, -168, -204, -113, 217, 215, 219, -344, 88, 220,
	271, 89, 210, -378, 77, -373, 73, -379, 77, 350,
	132, 305, 40, 351, 352, 366, 301, 78, 78, 357,
	-374, 70, -114, -181, -181, -181, -109, -103, 65, 133,
	-85, -115, -189, 121, 68, -152, -152, -152, -199, -378,
	-379, -152, 134, 103, -107, -106, 64, 65, -108, 64,
	-106, 53, 53, -152, -102, 68, -385, -384, 23, -344,
	-344, -344, 68, 134, 68, 134, 68, 68, -153, 18,
	20, 121, -153, 13, 68, -307, -239, -254, 369, -114,
	73, -114, -213, 68, -213, 68, 68, -295, 502, -324,
	381, 20, 20, -77, -114, 68, 134, -120, -113, -189,
	89, -343, -344, -229, -343, 89, 67, 73, -376, 360,
	73, 73, 78, 40, 78, 132, 353, -302, 67, -134,
	-136, -188, 130, 73, 68, -185, -85, -189, -152, -371,
	133, -152, -97, -250, -313, -213, 67, -213, 67, 53,
	19, 17, 73, 73, -213, -219, -347, -76, -318, -274,
	512, 134, -76, 68, 68, -141, 503, 73, 20, 73,
	-322, 73, -102, -132, -133, -149, 340, 241, -230, 245,
	77, 246, 376, 247, 210, 249, 250, 251, 221, 252,
	253, 254, 369, 255, 256, 257, 258, 323, 6, 288,
	-111, -131, -130, -128, 83, 94, 40, 340, -129, 77,
	129, 264, 242, 265, -148, -203, 64, 346, 215, 88,
	89, 328, -204, -339, -341, -189, -341, -189, -339, -339,
	-229, -213, 20, 458, 304, 40, 78, 40, 354, -234,
	-236, -168, 67, -75, -74, -152, -152, -98, -101, -340,
	-189, 215, 20, 20, 68, 134, 68, 134, -325, 386,
	-321, -319, 381, 382, 383, 384, 73, -171, 504, 78,
	73, 383, 34, -270, 231, 134, -149, -181, -181, -174,
	129, -181, -181, -181, -181, 248, 248, -181, -181, -181,
	-181, -181, -181, -181, -181, -181, -181, -181, -181, -181,
	-181, 67, -128, 83, -209, 73, -136, -137, 40, 263,
	259, -138, 40, 243, 244, -140, 67, 271, 13, 89,
	89, -114, 67, 65, 280, 67, 67, 67, -341, 68,
	73, 348, 73, 304, 68, 134, -288, -213, -76, -97,
	68, 68, 134, 84, 85, 84, 85, -327, 213, -323,
	385, -319, 20, 383, 20, 20, 103, 67, 20, -77,
	20, -149, 78, 78, -181, -181, 78, 73, 73, 73,
	-181, -181, 78, 73, -191, 78, 78, 78, 78, 40,
	73, -139, 40, 259, 263, 260, 261, 262, 78, 40,
	78, 40, 78, 40, -189, 67, -345, -346, 73, 78,
	67, -308, -235, 67, -234, -342, 292, 293, 294, 296,
	295, -342, -234, -234, -234, 67, -256, -255, 272, 94,
	369, -237, -236, -92, 68, -98, -189, 215, 68, 68,
	68, 68, -334, 67, 78, -324, 20, -322, 20, -322,
	-322, 73, -172, -189, -322, -271, 273, 274, -272, -278,
	276, -134, -134, 73, 73, -135, 242, -116, 68, 134,
	103, 68, -213, -221, -143, -142, 454, -234, 68, 68,
	68, 68, -234, 272, -238, 221, 77, 458, 290, 291,
	-92, -338, 30, 68, -333, -332, -169, -328, -189, 386,
	387, 73, -322, 512, 134, 68, 134, -276, 277, 67,
	-274, 67, -274, 89, 293, 243, 244, 68, -346, 73,
	68, -147, -145, -146, 64, 393, 269, 270, 68, -237,
	-237, -237, -237, 68, -181, 73, 289, -337, -336, -335,
	68, 134, 133, 73, -189, -273, 278, 78, -209, 67,
	-209, 67, -275, 275, 67, -255, -146, 64, -145, 64,
	14, 13, -148, 78, -187, 134, 103, -332, -189, 103,
	-280, 67, 20, 68, -269, 68, -269, 67, 103, -209,
	-144, 266, 267, 30, 144, -144, -336, 40, -213, 133,
	73, -281, -279, 231, -272, 68, 68, -269, 78, 68,
	83, 40, 268, -189, 512, 134, 68, 134, 70, -277,
	279, 68, 73, -279, -282, 46, 78, 103, -286, -283,
	67, -149, 233, 113, 73, -286, -149, -285, -284, 278,
	234, 67, 512, 68, 134, 70, 230, 67, -219, -284,
	-283, -219, 68, 68,
}

var yyDef = [...]int{
	28, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 619, 620,
	621, 622, 0, 388, 389, 0, 368, 0, 0, 0,
	0, 0, 294, 295, 296, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 265, 266, 0, 214, 210,
	189, 190, 191, 150, 151, 152, 153, 271, 0, 0,
	0, 0, 0, 0, 460, -2, 623, 624, 625, 626,
	-2, 401, 0, 369, 370, 371, 372, 373, 374, 375,
	376, 254, 255, 256, 251, 252, 253, -2, 0, 401,
	203, 0, 194, 194, 0, 480, 0, 0, 494, 516,
	28, 438, 0, 443, 805, 841, 842, 843, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	215, 390, 391, 480, 480, 366, 0, 237, 0, 1436,
	241, 0, 0, 0, 363, 233, 234, 235, 236, 0,
	611, 0, 230, 0, 209, 1495, 0, 0, 0, 0,
	0, 0, 94, 665, 96, 667, 100, 107, 0, 0,
	112, 113, 116, 117, 118, 119, 120, 0, 124, 0,
	126, 129, 0, 131, 132, 0, 135, 136, 137, 0,
	147, 148, 149, 668, 669, 74, 74, 1193, 1091, 0,
	1098, 1099, 1110, 1119, 913, 914, 915, 916, 0, 0,
	0, 0, 0, 923, 924, 0, 937, 1583, 0, 930,
	931, 932, 933, 934, 37, 49, 50, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1064, 900, 841,
	0, 1591, 0, 1611, 1592, 1610, 0, 0, 1049, 0,
	1039, 0, -2, -2, 0, 0, 1562, 0, -2, 1588,
	1607, 1615, 1614, 1585, 1586, 1580, 1581, 1582, 1584, 1593,
	1595, 1606, 0, 1602, 1612, 1613, 0, 51, 52, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1577, 1578, 1055, -2, 1057, 1058, 1060, 1061, 1062,
	1063, -2, 1066, 1067, 1068, -2, -2, 1071, 1072, 1073,
	1074, 1075, 1076, 1079, -2, 1081, -2, 1083, 1051, 1052,
	1053, 1054, 1043, 1044, 1045, 1046, 1047, 1048, -2, -2,
	-2, 0, 187, 185, 480, 552, 0, -2, 0, 0,
	0, 499, 502, 505, 508, 629, 694, 694, 694, 0,
	694, 0, 715, 671, 672, 673, 692, 693, 406, 402,
	403, 404, 405, 468, 0, 470, 473, 307, 0, 346,
	0, 0, 475, 475, 0, 355, 346, 346, -2, 0,
	317, 318, 319, 312, 0, 312, 323, 324, 325, 335,
	336, 356, 1217, 0, 0, 271, 271, 408, 204, 205,
	193, 195, 0, 199, 0, 192, 1495, 0, 0, 161,
	1562, 166, 0, 1443, 1509, 1458, 0, 0, 1476, 0,
	-2, 475, 0, 481, 0, 480, 0, 271, 271, 271,
	271, 271, 271, 271, 0, 0, 0, 517, 518, 513,
	514, 515, 519, 520, 3, 0, 0, 442, 0, 475,
	-2, 0, 367, 238, 844, 0, 0, 242, 243, 0,
	0, 257, 0, 260, 246, 247, 248, 0, 0, 232,
	0, 0, 211, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 104, 101, 108, 111, 121, 128, 0,
	140, 142, 145, 102, 109, 114, 115, 122, 143, 103,
	105, 106, 110, 144, 146, 123, 127, 141, 125, 130,
	133, 134, 139, 0, 75, 0, 0, 0, 0, 0,
	0, 1097, 0, 0, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 1091,
	0, 919, 920, 921, 922, 925, 0, 938, 0, 0,
	0, 0, 1089, 1089, 0, 1089, 1085, 1085, 0, 0,
	1089, 1027, 0, 0, 1029, 1040, 0, 0, 1032, 1033,
	1089, 0, 1089, 1037, 1038, 1023, 1024, 0, 1085, 0,
	0, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085,
	1085, 1085, 0, 0, 1194, 1212, 1149, 1150, 1151, 1199,
	1153, 1203, 1203, 1199, 1199, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 0, 0, 1192, 1172, 1199, 1201,
	1201, 1199, 1196, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1206, 1206, 1209,
	1206, 0, 475, 0, 0, 463, 0, 444, 0, 496,
	498, 0, 500, 501, 503, 504, 506, 507, 509, 510,
	0, 694, 630, 0, 0, 0, 0, 0, 0, 694,
	408, 407, 0, 469, 0, 0, 0, 312, 525, 0,
	0, 329, 330, 331, 346, 346, 337, 476, 338, 339,
	348, 0, 353, 354, 0, 525, 525, 0, 0, 0,
	694, 314, 313, 351, 352, 321, 314, 1218, 1219, 0,
	0, 0, 409, 0, 0, 197, 0, 202, 154, 0,
	0, 0, 0, 0, 0, 183, 184, 0, 0, 0,
	0, 0, 174, 177, 799, 800, 662, 663, 178, 179,
	444, 495, 497, 492, 493, 0, 0, 0, 0, 0,
	0, 0, 387, 533, 527, 529, 606, 37, 533, 417,
	430, 412, 0, 419, 0, 806, 444, 466, 444, 0,
	239, 0, 244, 0, 0, 259, 261, 262, 263, 249,
	250, 364, 228, 229, 221, 222, 223, 224, 225, 226,
	227, 231, 47, 0, 212, 213, 0, 0, 0, 88,
	89, 90, 91, 92, 93, 95, 79, 379, 381, 654,
	666, 0, 657, 0, 98, 138, 71, 0, 71, 1092,
	1093, 1094, 1095, 1096, 1100, 0, 1102, 1104, 1106, 1108,
	0, 1124, -2, -2, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 1111, 1122, 1123, 0,
	0, 0, 0, 0, 1120, 1115, 0, 917, 0, 935,
	939, 0, 0, 0, 38, 1084, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 0, 1090, 0, 1091, 0,
	0, 0, 1086, 1087, 0, 0, 0, 989, 990, 991,
	0, 425, 0, 1050, 1028, 1041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	1215, 1213, 1214, 1152, 1200, 0, 1177, 0, 1178, 1179,
	1180, 0, 0, 1173, 1174, 0, 1175, 1176, 1168, 0,
	1169, 1170, 0, 1171, 186, 551, 553, 0, 434, 436,
	437, 0, 464, 477, 482, 483, 486, 0, 0, 0,
	632, 0, 269, 648, 0, 664, 686, 616, 617, 618,
	-2, 0, 0, 471, 0, 0, 565, 309, 314, 316,
	0, 347, 0, 525, 525, 346, 0, 348, 0, 348,
	342, 343, 0, 357, 360, 358, 0, 320, 315, 362,
	322, 0, 269, 538, 0, 539, 540, 536, 567, 581,
	601, 0, 601, 0, 0, 206, 207, 0, 0, 201,
	155, 156, 0, 158, 159, 160, 167, 162, 164, 0,
	0, 168, 180, 181, 182, 0, 0, 0, 172, 173,
	0, 462, 377, 378, 382, 0, 384, 803, 385, 386,
	612, 613, 525, 0, 534, 0, 530, 607, 0, 609,
	0, 525, 410, 0, 411, 427, 0, 431, 0, 0,
	423, 416, 420, 0, 0, 440, 465, 467, 845, 0,
	1224, -2, 1226, -2, -2, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 0,
	245, 258, 0, 0, 0, 0, 82, 651, 0, 83,
	87, 77, 0, 0, 0, 656, 0, 653, 658, 0,
	97, 0, 0, 72, 73, 708, 0, 0, 1101, 1103,
	1105, 1107, 1109, 0, 1112, 1120, 1116, 0, 1113, 0,
	0, 1092, 0, 940, 0, 0, 0, 0, 0, 0,
	975, 976, 0, 0, 980, 0, 0, 983, 0, 0,
	0, 987, 0, 1026, 1042, 1030, 0, 1034, 0, 1036,
	0, 0, 958, 959, 0, 0, 0, 0, 964, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 1148, 1216,
	0, 0, 0, 1197, 0, 0, 0, 0, 0, 554,
	446, 0, 0, 0, 489, 487, 488, 473, 0, 0,
	638, 1220, 695, 273, 0, 0, 650, 0, 0, 691,
	-2, 698, 0, 704, 0, 0, 0, 395, 399, 28,
	474, 0, 308, 0, 346, 526, 525, 332, 333, 525,
	349, 346, 350, 346, 348, 0, 359, 638, 273, 0,
	0, 0, 0, 0, 558, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 582, 569, 602, 0, 604, 605,
	614, 615, 0, 0, 480, 538, 0, 584, 0, 0,
	208, 196, 198, 0, 0, 0, 0, 169, 170, 171,
	175, 176, 0, 0, 523, 528, 535, 608, 610, 38,
	531, 523, 0, 430, 432, 0, 0, 430, 0, 0,
	439, 0, 0, 0, 365, 48, 264, 0, 0, 0,
	0, 0, 380, 0, 655, 79, 0, 0, 99, 0,
	0, 0, 1088, 1114, 0, 1121, 1117, 918, 926, 936,
	0, 0, 942, 954, 954, 0, 945, 1199, 1203, 948,
	1199, 1201, 1199, 954, 954, 0, 39, 0, 0, 981,
	982, 0, 0, 0, 426, 0, 0, 0, 957, 960,
	961, 962, 963, 965, 966, 967, 968, 969, 970, 971,
	0, 1205, 1204, 1190, 0, 1191, 1202, 1207, 0, 1210,
	0, 435, 450, 0, 478, 479, 484, 485, 0, 0,
	0, 807, 641, 639, 640, 0, 1221, 645, 274, 275,
	276, 277, 0, 0, 0, 649, 0, 0, 687, 688,
	689, 690, 699, 1220, 1220, 1220, 807, 438, 0, -2,
	0, 0, 397, 0, 0, 566, 310, 525, 326, 340,
	525, 525, 346, 361, 641, 645, 525, 218, 0, 561,
	555, 0, 544, 559, 560, 547, 0, 549, 0, 545,
	546, 525, 537, 473, 603, 570, 571, 0, 583, 585,
	586, 592, 0, 0, 0, 0, 0, 0, 200, 157,
	0, 293, 163, 383, 804, 521, 0, 0, 521, 0,
	428, 0, 433, 430, 415, 424, 414, 421, 422, 441,
	846, 1225, 1222, 1223, 240, 0, 652, 79, 84, 85,
	86, 80, 78, 659, 0, 661, 0, 0, 0, 1118,
	941, 927, 943, 955, 956, 944, 928, 946, 947, 949,
	950, 951, 952, 953, 929, 977, 0, 979, 984, 985,
	0, 1031, 1035, 0, 988, 1198, 0, 0, 452, 60,
	0, 0, 490, 491, 0, 0, 0, 808, 809, 811,
	812, 0, 0, 814, 870, 0, 823, 694, 823, 0,
	0, 825, 826, 631, 0, 0, 634, 643, 0, 0,
	0, 279, 280, 0, 0, 0, 292, 288, 289, 290,
	270, 644, 0, 0, 0, 0, 0, 601, 0, 0,
	525, 396, 399, 400, 472, 311, 344, 341, 525, 267,
	268, 480, 0, 0, 541, 562, 0, 0, 542, 0,
	543, 548, 550, 217, 568, -2, 587, 0, 0, 589,
	590, 591, 572, 0, 576, 0, 580, 165, 511, 0,
	0, 532, 512, 419, 429, 413, 81, 76, 660, 62,
	0, 62, 0, 986, 0, 1208, 1211, 454, 0, 451,
	0, 0, 0, 627, 473, -2, 0, -2, 813, 871,
	835, 835, 824, 835, 835, 694, 0, 642, 633, 0,
	646, 647, 0, 281, 282, 0, 285, 291, 0, 700,
	701, 801, 802, 702, 0, 525, 525, -2, 393, 398,
	0, 345, 475, 219, 220, 563, 0, 556, 596, 593,
	0, 0, 0, 0, 522, 524, 418, 30, 56, 0,
	709, 0, 29, 978, 1025, 456, 0, 453, 0, 447,
	449, 70, 0, 716, -2, 755, 1220, 1220, 0, 1220,
	1220, 1220, 1220, 0, 0, 1220, 1220, 1220, 1220, 1220,
	1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 0,
	810, 837, -2, 849, 851, 0, 0, 854, 855, 0,
	0, 0, 0, 892, 861, 0, 0, 865, 0, 1136,
	1137, 0, 869, 0, 827, 836, 0, 836, 0, 0,
	835, 0, 0, 0, 278, 283, 0, 286, 287, 0,
	682, 1199, 0, 706, 62, 480, 394, 216, 0, 0,
	597, 599, 594, 595, 573, 0, 577, 0, 53, 58,
	63, 64, 0, 0, 0, 0, 0, 445, 0, 455,
	61, 0, 0, 705, 0, 703, 757, 0, 0, 1220,
	1220, 0, 0, 0, 0, 1220, 1220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 850, 852, 853, 856, 857, 858, 897, 898,
	899, 859, 894, 895, 896, 860, 0, 0, 0, 1134,
	1135, 890, 0, 0, 0, 0, 0, 0, 0, 821,
	635, 0, 637, 284, 675, 0, 486, 0, 707, 475,
	564, 588, 0, 0, 0, 0, 0, 40, 0, 60,
	0, 65, 0, 0, 0, 0, 0, 0, 0, 628,
	751, 756, 758, 759, 0, 0, 762, 763, 764, 765,
	0, 0, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 793, 794, 795, 796, 797, 798, 778, 779,
	780, 781, 782, 783, 790, 0, 0, 787, 0, 0,
	0, 1039, 885, 0, 0, 828, 830, 831, 832, 833,
	834, 829, 0, 0, 0, 0, 820, 822, 866, 0,
	636, 674, 683, 684, 486, 392, 598, 600, 574, 575,
	578, 579, 31, 0, 0, 57, 0, 66, 0, 68,
	69, 0, 0, 458, 448, 740, 0, 0, 746, 0,
	752, 760, 761, 766, 767, 784, 0, 0, 786, 0,
	0, 893, 0, 864, 873, 886, 0, 0, 675, 675,
	675, 675, 0, 867, 676, 1220, 0, 0, 680, 681,
	685, 713, 0, 41, 0, 43, 45, 46, 838, 54,
	55, 59, 67, 710, 0, 457, 0, 718, 0, 0,
	0, 0, 0, 749, 0, 791, 792, 785, 788, 789,
	862, 872, 874, 875, 0, 887, 888, 889, 891, 815,
	816, 817, 818, 0, 0, 678, 0, 32, 33, 0,
	42, 0, 0, 0, 459, 720, 0, 741, 0, 0,
	0, 0, 0, 0, 0, 863, 876, 0, 877, 0,
	0, 0, 819, 677, 679, 0, 0, 44, 839, 0,
	717, 0, 751, 742, 0, 744, 0, 0, 0, 0,
	878, 880, 881, 0, 0, 879, 34, 35, 36, 0,
	0, 0, 722, 0, 738, 743, 745, 0, 750, 748,
	882, 884, 883, 840, 711, 0, 721, 0, 734, 719,
	0, 747, 0, 723, -2, 0, 739, 0, 724, -2,
	0, 732, 0, 0, 0, 725, 733, 0, 728, 0,
	0, 0, 712, 727, 0, -2, 735, 0, 0, 729,
	-2, 0, 737, 736,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 509,
	104, 103, 105, 3, 510, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 511, 115, 512, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:580
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:586
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:617
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:621
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:627
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:639
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:650
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:654
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:660
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:664
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:670
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:677
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:686
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:690
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:694
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:699
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:707
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:713
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:722
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:733
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:737
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:743
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:747
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:753
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:757
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:763
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:787
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:806
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:810
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:814
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:819
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:823
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:831
		{
			yyVAL.str = ""
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:835
		{
			yyVAL.str = yyDollar[3].str
		}
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:840
		{
			yyVAL.str = "\n"
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:844
		{
			yyVAL.str = yyDollar[3].str
		}
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:853
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:877
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:881
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:887
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:893
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:911
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:928
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:951
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:959
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:964
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:968
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:987
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:998
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1015
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1025
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1038
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1051
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1057
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1063
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1070
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1078
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1087
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1091
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1095
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1099
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1103
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1107
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1114
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1118
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1124
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1131
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1140
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1144
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1150
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1154
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1158
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1162
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1166
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1170
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1174
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1178
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1182
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1186
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1190
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1194
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1198
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1202
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1206
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1210
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1214
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1218
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1222
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1226
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1230
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1234
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1238
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1242
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1246
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1250
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1254
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1258
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1262
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1266
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1270
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1274
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1302
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1306
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1310
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1314
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1318
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1322
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1326
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1330
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1334
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1338
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1342
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1346
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1358
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1365
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1372
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1381
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1411
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1415
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1419
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1425
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1431
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1435
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1442
		{
			yyVAL.str = yyDollar[3].str
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1448
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1452
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1458
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1475
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1483
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1491
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1514
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1537
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1551
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1559
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1582
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1586
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1590
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1596
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1600
		{
			yyVAL.str = yyDollar[1].str
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1607
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1613
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1617
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1628
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1634
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1677
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1681
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1685
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1689
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1694
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1699
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1705
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1712
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1718
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1725
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1732
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1742
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1749
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1760
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1775
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1781
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1793
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1819
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1834
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1838
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1842
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1846
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1854
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1862
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1870
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1918
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1922
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1928
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1934
		{
			yyVAL.str = yyDollar[1].str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1939
		{
			yyVAL.str = "true"
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1940
		{
			yyVAL.str = "false"
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1941
		{
			yyVAL.str = yyDollar[1].str
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1946
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1969
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1984
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1989
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1993
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2002
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2018
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2022
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2026
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2030
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2034
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2038
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2046
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2054
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2058
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2062
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2066
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2070
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2078
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2084
		{
			yyVAL.item = nil
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2089
		{
			yyVAL.item = nil
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2113
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2117
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2122
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2126
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2132
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2137
		{
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2141
		{
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2155
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2159
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2163
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2167
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2171
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2183
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2187
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2201
		{
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2203
		{
		}
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2212
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2222
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2231
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2235
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2239
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2245
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2251
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2263
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2273
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2307
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2324
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2329
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2333
		{
			yyVAL.str = yyDollar[2].str
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2339
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2352
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2356
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2362
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2367
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2371
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2377
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2381
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2390
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2394
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2398
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2408
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2445
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2449
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2455
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2495
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2501
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2514
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2550
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2561
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2565
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2571
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2576
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2583
		{
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2585
		{
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2588
		{
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2597
		{
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2601
		{
		}
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2606
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2616
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2623
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2629
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2637
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2644
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2651
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2674
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2697
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2701
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2707
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2716
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2720
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2726
		{
			yyVAL.str = yyDollar[1].str
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2730
		{
			yyVAL.str = yyDollar[3].str
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2736
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2740
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2746
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2751
		{
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2762
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2766
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2773
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2782
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2788
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2792
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2798
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2802
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2811
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2824
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2831
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2838
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2856
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2881
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2888
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2892
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2905
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2909
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2914
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2918
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2925
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2930
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2937
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2951
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2955
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2959
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2963
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2985
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2989
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2995
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3007
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3016
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3022
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3026
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3030
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3039
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3045
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3051
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3055
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3061
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3066
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3070
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3074
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3079
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3083
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3087
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3093
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3097
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3103
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3127
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3149
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3157
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3165
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3182
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3190
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3198
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3206
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3214
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3230
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3248
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3259
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3277
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3281
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3285
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3298
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3307
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3316
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3322
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3326
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3332
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3336
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3340
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3344
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3349
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3357
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3363
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3371
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3389
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3395
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3404
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3413
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3432
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3436
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3446
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3450
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3454
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3458
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3464
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3474
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3478
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3484
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3494
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3500
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3506
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3510
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3514
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3524
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3530
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3534
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3540
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3544
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3550
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3554
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3564
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3577
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3583
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3589
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3607
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3628
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3649
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3670
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3688
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3709
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3730
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3751
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3764
		{
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3765
		{
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3769
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3787
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3791
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3797
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3807
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3811
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3815
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3820
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3824
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3828
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3832
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3841
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3845
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3849
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3853
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3858
		{
			yyVAL.str = ""
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3862
		{
			yyVAL.str = yyDollar[1].str
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3866
		{
			yyVAL.str = yyDollar[2].str
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3875
		{
			yyVAL.str = ""
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3879
		{
			yyVAL.str = yyDollar[1].str
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3883
		{
			yyVAL.str = yyDollar[2].str
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3887
		{
			yyVAL.str = yyDollar[1].str
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3891
		{
			yyVAL.str = yyDollar[2].str
		}
	case 627:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3925
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3935
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3946
		{
		}
	case 631:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3951
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3963
		{
			yyVAL.str = yyDollar[1].str
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3969
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3979
		{
			yyVAL.str = yyDollar[1].str
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3985
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3992
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3998
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4006
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4012
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4019
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4027
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4033
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4042
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4054
		{
			yyVAL.str = yyDollar[1].str
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4059
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4065
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4073
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4179
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4183
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4189
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4199
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4203
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4209
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4219
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4223
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4227
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4232
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4236
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4242
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4249
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4255
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4268
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4277
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4281
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4304
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4308
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4312
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4316
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4322
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4345
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4367
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4371
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4375
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4379
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4383
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4389
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4393
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4399
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4404
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4409
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4413
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4417
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4421
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4425
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4431
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4445
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4449
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4458
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4464
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4468
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4474
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4478
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4482
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4487
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4491
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4497
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4519
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4526
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4534
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4546
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4558
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "format" || strings.ToLower(yyDollar[11].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       strings.ToLower(yyDollar[9].str),
				JsonData:     strings.ToLower(yyDollar[13].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-18 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4571
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" || strings.ToLower(yyDollar[11].str) != "format" || strings.ToLower(yyDollar[15].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str, yyDollar[15].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       strings.ToLower(yyDollar[13].str),
				JsonData:     strings.ToLower(yyDollar[17].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4586
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4597
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4601
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4610
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4624
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4633
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4637
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4643
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4647
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4653
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4662
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4676
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4682
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4686
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4692
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4699
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4708
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4712
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4721
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4726
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4730
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4735
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4739
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4749
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4753
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4764
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4772
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4780
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4788
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4799
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4809
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4819
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4823
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4828
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4832
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4841
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4847
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4851
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4855
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4861
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4865
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4869
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4873
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4877
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4881
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4885
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4889
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4893
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4897
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4901
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4905
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4909
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4913
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4917
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4921
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4925
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4929
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4933
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4937
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4941
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4945
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4949
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4953
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4957
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4961
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4965
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4969
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4973
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4980
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4984
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4990
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4995
		{
			yyVAL.str = ""
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4999
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5003
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5009
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5013
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5017
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5021
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5029
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5043
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5047
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5056
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5061
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5067
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5074
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5078
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5084
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5088
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5094
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5104
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5110
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5119
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5128
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5151
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5160
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5170
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5178
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5184
		{
			yyVAL.str = ""
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5188
		{
			yyVAL.str = yyDollar[1].str
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5198
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5204
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5210
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5224
		{
			yyVAL.str = ""
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5231
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5237
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5241
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5245
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5256
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5260
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5264
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5273
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5279
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5283
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5289
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5293
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5297
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5301
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5305
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5309
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5313
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5317
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5321
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5325
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5329
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5333
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5337
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5341
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5354
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5360
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5364
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5369
		{
			yyVAL.str = ""
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5373
		{
			yyVAL.str = yyDollar[1].str
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5379
		{
			yyVAL.str = ""
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5383
		{
			yyVAL.str = yyDollar[2].str
		}
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5389
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5401
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5408
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5415
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5422
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5429
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5438
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5444
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5450
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5454
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5458
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5462
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5466
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5471
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5478
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5482
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5486
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5491
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5495
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5500
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5504
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5520
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5526
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5530
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5534
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5538
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5542
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5546
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5550
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5554
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5558
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5562
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5566
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5570
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5574
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5580
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5584
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5588
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5592
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5596
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5600
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5604
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5608
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5612
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5616
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5620
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5624
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5629
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5637
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5641
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5645
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5654
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5658
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5662
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5666
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5670
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5679
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5688
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5694
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5698
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5704
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5714
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5731
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5748
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5761
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5774
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5786
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5800
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5815
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5830
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5847
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5862
		{
		}
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5868
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5877
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5885
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5893
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5902
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5911
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5920
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5929
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5938
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5947
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5956
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5965
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5974
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5983
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5992
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6008
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6016
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6024
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6032
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6040
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6049
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6057
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6066
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6075
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6083
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6091
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6100
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6109
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6120
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6141
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6177
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6189
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6201
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6211
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6219
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6226
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6233
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6245
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6253
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6264
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6273
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6282
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6290
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6300
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6308
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6316
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6330
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6336
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6340
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6359
		{
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6361
		{
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6402
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6412
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6416
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6420
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6426
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6431
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6435
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6441
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6445
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6452
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6456
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6460
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6468
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6472
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6476
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6480
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6486
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6490
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6494
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6498
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6502
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6506
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6510
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6514
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6518
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6522
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6530
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6534
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6538
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6542
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6546
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6550
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6554
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6558
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6568
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6574
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6578
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6585
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6589
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6593
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6599
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6603
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6607
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6611
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6615
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6619
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6623
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6629
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6633
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6637
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6641
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6647
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6651
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6664
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6669
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6673
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6677
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6681
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6685
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6689
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6703
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6709
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6720
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6725
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6731
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6743
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6755
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6767
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6780
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6793
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6806
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6819
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6832
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6845
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6858
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6871
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6884
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6897
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6912
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6935
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6972
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7037
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7049
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7064
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7084
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7104
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7120
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7133
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7146
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7159
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7172
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7184
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7208
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7220
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7232
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7244
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7256
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7268
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7280
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7293
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7306
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7321
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7329
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7338
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7348
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7371
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7376
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7382
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7389
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7393
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7398
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7402
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7408
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7414
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7421
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7428
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7437
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7444
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7451
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7460
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7468
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7474
		{
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7476
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7486
		{
			yyVAL.str = ""
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
